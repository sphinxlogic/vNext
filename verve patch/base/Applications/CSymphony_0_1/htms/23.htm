

<html>

<head>

<!-- Page Title -->
<title>Max Virtual - Computer Science Applications : .Net Specialist</title>
<link rel="stylesheet" type="text/css" href="mv.css">

</head>
<!-- Outer Border -->
<body>
<table cellspacing="0" cellpadding="1" border="0" bgcolor="#2d3851" width="100%"><tr><td>
<table cellspacing="0" cellpadding="1" border="0" bgcolor="#bfc4cb" width="100%"><tr><td>
<table cellspacing="0" cellpadding="2" border="0" bgcolor="#ffffff" width="100%"><tr><td>
<table cellspacing="0" cellpadding="1" border="0" bgcolor="#2d3851" width="100%"><tr><td>
<table cellspacing="0" cellpadding="1" border="0" bgcolor="#7c8aa4" width="100%"><tr><td>
<table cellspacing="1" cellpadding="0" border="0" width="100%">
<tr>
	<td>
		<table cellspacing="0" cellpadding="3" width="100%">
		<tr>
		  <td  width="50%" bgcolor="#354463" style="padding: 3px" class="update" style="font-weight:bold" align="left">Max Virtual : Computer Science Applications</td>
		  <td  width="50%" bgcolor="#354463" style="padding: 3px" class="update" style="font-weight:bold" align="right">Dubai | Mumbai | Addis Ababa</td>
		</tr>
		</table>
	</td>
</tr>

<!-- Page Title -->
<tr><td> <br>
<table cellSpacing="0" cellPadding="0" width="100%" border="0">
  <tr> 
    <td width="33%" align="center" ><IMG src="mv.jpg" alt="Max Virtual : Computer Science Applications" align="middle"></td>
  </tr>
</table>
<br>
<table cellSpacing="0" cellPadding="0" width="100%" border="0">
  <tr>
	<td width="12%">&nbsp;</td>
	<td width="76%">
		<table cellSpacing="0" cellPadding="0" width="100%" border="0">
		<tr>
			<td vAlign="bottom" align="right">
				<table cellSpacing="1" cellPadding="2" width="100%" bgColor="#354463" border="0">
					<tr>
						<td class="navoff" align="center" width="20%" OnClick="location.href='http://www.maxvirtual.com';"><A class="navlink" href="http://www.maxvirtual.com/Default.aspx">Home</A></td>
						<td class="navon" align="center" width="20%" OnClick="location.href='..\Samples.html';"><A class="navlink" href="..\Samples.html">Code Samples</A></td>
						<td class="navoff" align="center" width="20%" OnClick="location.href='http://www.maxvirtual.com/OpenSrc.aspx';"><A class="navlink" href="http://www.maxvirtual.com/OpenSrc.aspx">Downloads</A>
						<td class="navoff" align="center" width="20%" OnClick="location.href='http://www.maxvirtual.com/About.aspx';"><A class="navlink" href="http://www.maxvirtual.com/About.aspx">About</A></td></td>
						<td class="navoff" align="center" width="20%" OnClick="location.href='http://www.maxvirtual.com/Contact.aspx';"><A class="navlink" href="http://www.maxvirtual.com/Contact.aspx">Contact</A></td>
					</tr>
				</table>
			</td>
		</tr>
		</table>
	</td>
	<td width="12%">&nbsp;</td>
</tr>
</table></td></tr>
<!-- Page Middle -->
<tr>
  <td>
	<table class="content" cellspacing="1" cellpadding="2" border="0" width="100%">
    <tr>
      <td>
        <table width="100%" cellpadding="2" cellspacing="2" border="0">
        <tr>
          <td valign="top">
  



<script language="javascript" type="text/javascript" src="mv.js"></script>
<!-- Content -->
<table cellspacing="0" cellpadding="0" border="0" width="100%">
	<tr><td><h3 align="center">CSymphony Samples</h3></td>
	<tr><td align="center"><a href="http://www.sourceforge.net/projects/csymphony">Click here to Download </a><br><br></td></tr>
	<tr><td align="center"><a href="..\Samples.html">CSymphony Code Samples List</a></td></tr>
</table>
<br>
<table width="100%">
	<tr>
		<td>
<h3 align="center"><span id="MyCSySamplesCtrl_SampleTitle">CodeTryCatchFinallyStatement</span></h3>
<table align="center" width="100%" border="0" cellspacing="0" cellpadding="0">
	<tr>
		<td id="link1" width="75" onclick="SelCode(1)" class="backtab">CSy.xml</td>
		<td id="link2" width="75" onclick="SelCode(2)" class="backtab">C# (In)</td>
		<td id="link3" width="75" onclick="SelCode(3)" class="tab">VB (In)</td>
		<td id="link4" width="75" onclick="SelCode(4)" class="backtab">C#</td>
		<td id="link5" width="75" onclick="SelCode(5)" class="backtab">VB</td>
		<td id="link6" width="75" onclick="SelCode(6)" class="backtab">JScript</td>
		<td id="link7" width="75" onclick="SelCode(7)" class="backtab">J#</td>
		<td id="link8" width="75" onclick="SelCode(8)" class="backtab">C++</td>
		<td id="link9" width="75" onclick="SelCode(9)" class="backtab">CodeDOM </td>
		<td class="space">&nbsp;</td>
	</tr>
</table>
<table class="code" width="100%" cellspacing="0" cellpadding="0" border="0">
	<tr>
		<td><div class="code" id="Code1" style="display:none;">
	<pre>&lt;?xml version=&quot;1.0&quot; standalone=&quot;yes&quot;?&gt;
&lt;csy&gt;
	&lt;in file=&quot;InputSourcFile.Ext&quot; prvId=&quot;CS&quot;/&gt;

	&lt;codeGen&gt;
	&lt;out path=&quot;out&quot; prvId=&quot;CS&quot;/&gt;
	&lt;out path=&quot;out&quot; prvId=&quot;VB&quot;/&gt;
	&lt;out path=&quot;out&quot; prvId=&quot;CPP&quot;/&gt;
	&lt;out path=&quot;out&quot; prvId=&quot;JSCRIPT&quot;/&gt;
	&lt;out path=&quot;out&quot; prvId=&quot;JSHARP&quot;/&gt;
	&lt;/codeGen&gt;

	&lt;codeProviders&gt;

	&lt;codeProvider prvId=&quot;CS&quot; fileExt=&quot;cs&quot; info= &quot;C#&quot; 
		assembly=&quot;System, Version=1.1.4322.0, Culture=neutral, PublicKeyToken=b77a5c561934e089&quot; 
		providerType = &quot;Microsoft.CSharp.CSharpCodeProvider&quot; /&gt;

	&lt;codeProvider prvId=&quot;VB&quot; fileExt=&quot;vb&quot; info= &quot;Visual Basic .NET&quot; 
		assembly=&quot;System, Version=1.0.3300.0, Culture=neutral, PublicKeyToken=b77a5c561934e089&quot; 
		providerType = &quot;Microsoft.VisualBasic.VBCodeProvider&quot; /&gt;
	
	&lt;codeProvider prvId=&quot;JSHARP&quot; fileExt=&quot;jsl&quot; info= &quot;JSharp&quot;
		assembly=&quot;VJSharpCodeProvider, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a&quot; 
		providerType = &quot;Microsoft.VJSharp.VJSharpCodeProvider&quot; /&gt;
	
	&lt;codeProvider prvId=&quot;CPP&quot; fileExt=&quot;cpp&quot; info= &quot;C++.net&quot; 
		assembly=&quot;MCppCodeDomProvider, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a&quot; 
		providerType=&quot;Microsoft.MCpp.MCppCodeProvider&quot; /&gt;
	
	&lt;codeProvider prvId=&quot;JSCRIPT&quot; fileExt=&quot;js&quot; info= &quot;Jscript.Net&quot; 
		assembly=&quot;Microsoft.JScript, , Version=7.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a&quot; 
		providerType = &quot;Microsoft.JScript.JScriptCodeProvider&quot; /&gt;

	&lt;/codeProviders&gt;

&lt;/csy&gt;
</pre>
</div><div class="code" id="Code2" style="display:none;">
	<pre>




using System;
using System.CodeDom;
using System.CodeDom.Compiler;
using System.Collections;
using CSymphony.Lib;

namespace CSymphony.CSy
{
	public class CSyUnit : GraphUnit
	{
		public override void Build()
		{
			ns("MyNameSpace");

			declClass(TypePublic, "MyClass");
			declMethod(MemPublic, "System.Void", "MonMethod");

			tryOn();
				enter (ex (my(), "ThrowApplicationException"));
			catchOn("System.ApplicationException", "ex");
				hi("Handle any SystemApplicationException here");
			catchOn("System.CriticalException", "ex");
				hi("Handle any other exception type here");
			finallyOn();
				hi ("Handle any finally block statements");
			tryOff();

		}
	}
}
</pre>
</div><div class="code" id="Code3" style="display:block;">
	<pre>Option Strict Off
Option Explicit On

Imports System
Imports System.CodeDom
Imports System.CodeDom.Compiler
Imports System.Collections
Imports CSymphony.Lib

Namespace CSymphony.CSy
	Public Class CSyUnit
		Inherits GraphUnit
		Overrides Public Sub Build()
			ns("MyNameSpace")

			declClass(TypePublic, "MyClass")
			declMethod(MemPublic, "System.Void", "MonMethod")

			tryOn()
				enter (ex (my(), "ThrowApplicationException"))
			catchOn("System.ApplicationException", "ex")
				hi("Handle any SystemApplicationException here")
			catchOn("System.CriticalException", "ex")
				hi("Handle any other exception type here")
			finallyOn()
				hi ("Handle any finally block statements")
			tryOff()
		End Sub
	End Class
End Namespace
			</pre>
</div><div class="code" id="Code4" style="display:none;">
	<pre>//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.573
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace MyNameSpace
{
    
    
    public class MyClass
    {
        
        public virtual void MonMethod()
        {
            try
            {
                this.ThrowApplicationException();
            }
            catch (System.ApplicationException ex)
            {
                // Handle any SystemApplicationException here
            }
            catch (System.CriticalException ex)
            {
                // Handle any other exception type here
            }
            finally
            {
                // Handle any finally block statements
            }
        }
    }
}
</pre>
</div><div class="code" id="Code5" style="display:none;">
	<pre>'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'     Runtime Version: 1.1.4322.573
'
'     Changes to this file may cause incorrect behavior and will be lost if 
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace MyNameSpace
    
    Public Class [MyClass]
        
        Public Overridable Sub MonMethod()
            Try 
                Me.ThrowApplicationException
            Catch ex As System.ApplicationException
                'Handle any SystemApplicationException here
            Catch ex As System.CriticalException
                'Handle any other exception type here
            Finally
                'Handle any finally block statements
            End Try
        End Sub
    End Class
End Namespace
</pre>
</div><div class="code" id="Code6" style="display:none;">
	<pre>//------------------------------------------------------------------------------
/// <autogenerated>
///     This code was generated by a tool.
///     Runtime Version: 1.1.4322.573
///
///     Changes to this file may cause incorrect behavior and will be lost if 
///     the code is regenerated.
/// </autogenerated>
//------------------------------------------------------------------------------

//@cc_on
//@set @debug(off)


package MyNameSpace
{
    
    public class MyClass
    {
        
        public function MonMethod()
        {
            try
            {
                this.ThrowApplicationException();
            }
            catch (ex : System.ApplicationException)
            {
                //Handle any SystemApplicationException here
            }
            catch (ex : System.CriticalException)
            {
                //Handle any other exception type here
            }
            finally
            {
                //Handle any finally block statements
            }
        }
    }
}
</pre>
</div><div class="code" id="Code7" style="display:none;">
	<pre>/*******************************************************************************
 *
 *     This code was generated by a tool.
 *     Runtime Version: 1.1.4322.573
 *
 *     Changes to this file may cause incorrect behavior and will be lost if 
 *     the code is regenerated.
 *
 ******************************************************************************/

package MyNameSpace;


public class MyClass
{
    
    public void MonMethod()
    {
        try
        {
            this.ThrowApplicationException();
        }
        catch (System.ApplicationException ex)
        {
            // Handle any SystemApplicationException here
        }
        catch (System.CriticalException ex)
        {
            // Handle any other exception type here
        }
        finally
        {
            // Handle any finally block statements
        }
    }
}
</pre>
</div><div class="code" id="Code8" style="display:none;">
	<pre>#pragma once 

#using &lt;mscorlib.dll&gt;

namespace MyNameSpace
{
    
    using namespace System;
    public __gc class MyClass;
    
    
    public __gc class MyClass
    {
        
        public: virtual System::Void MonMethod();
    };
    
    
    inline System::Void MyClass::MonMethod()
    {
        try
        {
            this->ThrowApplicationException();
        }
        catch (System::ApplicationException * ex)
        {
            // Handle any SystemApplicationException here
        }
        catch (System::CriticalException * ex)
        {
            // Handle any other exception type here
        }
        __finally
        {
            // Handle any finally block statements
        }
    };
}
</pre>
</div><div class="code" id="Code9" style="display:none;">
	<pre>' Declares a type to contain a try...catch block.
Dim type1 As New CodeTypeDeclaration("TryCatchTest")

' Defines a method that throws an exception of type System.ApplicationException.
Dim method1 As New CodeMemberMethod()
method1.Name = "ThrowApplicationException"
method1.Statements.Add(New CodeThrowExceptionStatement( _
    New CodeObjectCreateExpression("System.ApplicationException", New CodePrimitiveExpression("Test Application Exception"))))
type1.Members.Add(method1)

' Defines a constructor that calls the ThrowApplicationException method from a try block.
Dim constructor1 As New CodeConstructor()
constructor1.Attributes = MemberAttributes.Public
type1.Members.Add(constructor1)

' Defines a try statement that calls the ThrowApplicationException method.
Dim try1 As New CodeTryCatchFinallyStatement()
try1.TryStatements.Add(New CodeMethodInvokeExpression(New CodeThisReferenceExpression(), "ThrowApplicationException"))
constructor1.Statements.Add(try1)

' Defines a catch clause for exceptions of type ApplicationException.
Dim catch1 As New CodeCatchClause("ex", New CodeTypeReference("System.ApplicationException"))
catch1.Statements.Add(New CodeCommentStatement("Handle any System.ApplicationException here."))
try1.CatchClauses.Add(catch1)

' Defines a catch clause for any remaining unhandled exception types.
Dim catch2 As New CodeCatchClause("ex")
catch2.Statements.Add(New CodeCommentStatement("Handle any other exception type here."))
try1.CatchClauses.Add(catch2)

' Defines a finally block by adding to the FinallyStatements collection.
try1.FinallyStatements.Add(New CodeCommentStatement("Handle any finally block statements."))

' A Visual Basic code generator produces the following source code for the preceeding example code:

'    public class TryCatchTest 
'    {
'        
'        public TryCatchTest() 
'        {
'            try 
'            {
'                this.ThrowApplicationException();
'            }
'            catch (System.ApplicationException ex) 
'            {
'                // Handle any System.ApplicationException here.
'            }
'            catch (System.Exception ex) 
'            {
'                // Handle any other exception type here.
'            }
'          finally {
'                // Handle any finally block statements.
'            }
'        }
'        
'        private void ThrowApplicationException() 
'        {
'            throw new System.ApplicationException("Test Application Exception");
'        }
'    }


[C#] 
// Declares a type to contain a try...catch block.
CodeTypeDeclaration type1 = new CodeTypeDeclaration("TryCatchTest");

// Defines a method that throws an exception of type System.ApplicationException.
CodeMemberMethod method1 = new CodeMemberMethod();
method1.Name = "ThrowApplicationException";
method1.Statements.Add( new CodeThrowExceptionStatement( 
    new CodeObjectCreateExpression("System.ApplicationException", new CodePrimitiveExpression("Test Application Exception")) ) );
type1.Members.Add( method1 );

// Defines a constructor that calls the ThrowApplicationException method from a try block.
CodeConstructor constructor1 = new CodeConstructor();
constructor1.Attributes = MemberAttributes.Public;            
type1.Members.Add( constructor1 );    
        
// Defines a try statement that calls the ThrowApplicationException method.
CodeTryCatchFinallyStatement try1 = new CodeTryCatchFinallyStatement();
try1.TryStatements.Add( new CodeMethodInvokeExpression( new CodeThisReferenceExpression(), "ThrowApplicationException" ) );
constructor1.Statements.Add( try1 );                    

// Defines a catch clause for exceptions of type ApplicationException.
CodeCatchClause catch1 = new CodeCatchClause("ex", new CodeTypeReference("System.ApplicationException"));
catch1.Statements.Add( new CodeCommentStatement("Handle any System.ApplicationException here.") );
try1.CatchClauses.Add( catch1 );

// Defines a catch clause for any remaining unhandled exception types.
CodeCatchClause catch2 = new CodeCatchClause("ex");
catch2.Statements.Add( new CodeCommentStatement("Handle any other exception type here.") );
try1.CatchClauses.Add( catch2 );
        
// Defines a finally block by adding to the FinallyStatements collection.
try1.FinallyStatements.Add( new CodeCommentStatement("Handle any finally block statements.") );
        
// A C# code generator produces the following source code for the preceeding example code:
    
//    public class TryCatchTest 
//    {
//        
//        public TryCatchTest() 
//        {
//            try 
//            {
//                this.ThrowApplicationException();
//            }
//            catch (System.ApplicationException ex) 
//            {
//                // Handle any System.ApplicationException here.
//            }
//            catch (System.Exception ex) 
//            {
//                // Handle any other exception type here.
//            }
//          finally {
//                // Handle any finally block statements.
//            }
//        }
//        
//        private void ThrowApplicationException() 
//        {
//            throw new System.ApplicationException("Test Application Exception");
//        }
//    }
</pre>
</div></td>
	</tr>
</table>
</td>
	</tr>
</table>
<!-- Copyright Info -->
            </td>
            </tr>
            </table>
          </td>

        </tr>
        </table>
      </td>
</tr>

    <!-- Last Update -->
<tr>
     <td align="right" class="update" bgcolor="#5f7797">   Last Update: 15th September 2004</td>
</tr>
<tr>
  <td align="right" class="copyright">
    &copy; 2004 Max Virtual, LLC</td>
</tr>

</table>
</td></tr></table>
</td></tr></table>
</td></tr></table>
</td></tr></table>
</td></tr></table>

</body>
</html>
