;==++==
;
;   
;    Copyright (c) 2006 Microsoft Corporation.  All rights reserved.
;   
;    The use and distribution terms for this software are contained in the file
;    named license.txt, which can be found in the root of this distribution.
;    By using this software in any fashion, you are agreeing to be bound by the
;    terms of this license.
;   
;    You must not remove this notice, or any other, from this software.
;   
;
;==--==

DuplicateResourceKey=Duplicate resource key!  Name was: "{0}"
UnknownFileExtension=Unknown file extension "{0}" for file "{1}"
FileNotFound=Couldn't find input file "{0}"
InvalidResX=Invalid format or contents in input. "{0}" error trying to read input.
WriteError=Couldn't write output file "{0}"
CorruptOutput=.resources file is possibly corrupt.  Deleting "{0}"
DeleteOutputFileFailed=Could not delete possibly corrupted output file "{0}".
SpecificError=Specific exception: "{0}"  Message: "{1}"
GenericWriteError=Error while writing the output file "{0}"
ErrorCount={0} error(s).
WarningCount={0} warnings(s).
INFFileBracket=Unexpected INF file bracket syntax - ResGen does not support text in square brackets.  Bad text: "[{0}".
NoEqualsWithNewLine=Found a resource that had a new line in it, but couldn't find the equal sign within!  Length: {0}  name: '{1}'.
NoEquals=Found an equals sign at beginning of a line!  Expected a name / value pair like 'name = value'
BadFileExtension=The file named "{0}" does not have a known extension.  Managed resource files must end in .ResX, .txt, or .resources.
BadCommandLineOption=Unrecognized switch: "{0}".  Use ResGen /? for usage information.
BadEscape=Unsupported or invalid escape character in value!  Escape char: '{0}' Name was: "{1}"
NoName=Missing value!  Expected a name / value pair like 'name = value'.  Name was "{0}"
ReadIn=Read in {0} resources from "{1}"
BeginWriting=Writing resource file...  
DoneDot=Done.
BeginSTRClass=Creating strongly typed resource class \"{0}\"...  
BeginSTRClassNamespace=Creating strongly typed resource class \"{0}.{1}\"...  
MalformedCompileString=You must specify an input & outfile file name like this:\r\ninFile.txt,outFile.resources.\r\nYou passed in "{0}".
StringsTagObsolete=The "[strings]" tag is no longer necessary in your text files.  Please remove it.
OnlyString=Only strings can be written to a .txt file; the value of '{0}' is a '{1}'
UnmappableResource=Could not create a property on the strongly typed resource class for the resource name "{0}".
Usage=Microsoft (R) .NET Resource Generator \r\n[Microsoft .Net Framework, Version {0}]\r\n{1}\r\n\r\nUsage:\r\n   ResGen inputFile.ext [outputFile.ext] [/str:lang[,namespace[,class[,file]]]]\r\n   ResGen [options] /compile inputFile1.ext[,outputFile1.resources] [...]\r\n\r\nWhere .ext is .resX, .restext, .txt, or .resources\r\n\r\nConverts files from one resource format to another.  If the output\r\nfilename is not specified, inputFile.resources will be used.\r\nOptions:\r\n/compile        Converts a list of resource files from one format to another\r\n                in one bulk operation.  By default, it converts into .resources\r\n                files, using inputFile[i].resources for the output file name.\r\n/str:<language>[,<namespace>[,<class name>[,<file name>]]]] \r\n                Creates a strongly-typed resource class in the specified\r\n                programming language using CodeDOM. In order for the strongly\r\n                typed resource class to work properly, the name of your output \r\n                file without the .resources must match the\r\n                [namespace.]classname of your strongly typed resource class.\r\n                You may need to rename your output file before using it or\r\n                embedding it into an assembly. \r\n/useSourcePath  Use each source file's directory as the current directory\r\n                for resolving relative file paths.\r\n/publicClass    Create the strongly typed resource class as a public class.\r\n                This option is ignored if the /str: option is not used.\r\n/r:<assembly>   Load types from these assemblies. A ResX file with a previous\r\n                version of a type will use the one in this assembly, when set.\r\n\r\n.txt files have this format:\r\n\r\n    # Use # at the beginning of a line for a comment character.\r\n    name=value\r\n    more elaborate name=value\r\n
InvalidCommandLineSyntax=Invalid command line syntax.  Switch: "{0}"  Bad value: "{1}".  Use ResGen /? for usage information.
CompileAndSTRDontMix=Cannot use /compile & /str simultaneously if you specify a class name or an output file name to the /str switch as well as multiple input files to /compile.  You would end up with duplicate classes or overwrite one of your classes.
CantLoadAssembly=Could not load referenced assembly \"{0}\".  Caught a {1} saying \"{2}\".
ClassnameMustMatchBasename=The base name of your output file, "{0}", does not match the base name used by the strongly typed resources, "{1}".  In order for the strongly typed resources to work correctly, you will need to rename your output file to "{1}.resources".
ValidLanguages=Language names valid for the /str:<language> option are:
