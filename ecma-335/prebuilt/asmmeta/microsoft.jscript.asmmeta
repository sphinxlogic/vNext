.assembly extern Microsoft.Vsa
{
	.publickeytoken = (B0 3F 5F 7F 11 D5 0A 3A)
	.ver 8:0:0:0
}
.assembly extern System
{
	.publickeytoken = (B7 7A 5C 56 19 34 E0 89)
	.ver 2:0:0:0
}
.assembly extern mscorlib
{
	.publickeytoken = (B7 7A 5C 56 19 34 E0 89)
	.ver 2:0:0:0
}
.assembly Microsoft.JScript
{
	.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 00 00 00)
	.publickey = (00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 07 D1 FA 57 C4 AE D9 F0 A3 2E 84 AA 0F AE FD 0D E9 E8 FD 6A EC 8F 87 FB 03 76 6C 83 4C 99 92 1E B2 3B E7 9A D9 D5 DC C1 DD 9A D2 36 13 21 02 90 0B 72 3C F9 80 95 7F C4 E1 77 10 8F C6 07 77 4F 29 E8 32 0E 92 EA 05 EC E4 E8 21 C0 A5 EF E8 F1 64 5C 4C 0C 93 C1 AB 99 28 5D 62 2C AA 65 2C 1D FA D6 3D 74 5D 6F 2D E5 F1 7E 5E AF 0F C4 96 3D 26 1C 8A 12 43 65 18 20 6D C0 93 34 4D 5A D2 93)
	.hash algorithm 0x00008004
	.ver 8:0:0:0
}
.namespace Microsoft.JScript
{
	.class public abstract AST
		extends [mscorlib]System.Object
	{
	}
	.class public sealed ASTList
		extends 'Microsoft.JScript.AST'
	{
		.custom instance void [mscorlib]System.Reflection.DefaultMemberAttribute::.ctor(string) = (01 00 04 49 74 65 6D 00 00)
	}
	.class public abstract ActivationObject
		extends Microsoft.JScript.ScriptObject
		implements Microsoft.JScript.IActivationObject
	{
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method family virtual hidebysig newslot 
			instance class Microsoft.JScript.JSVariableField CreateField(string name, valuetype [mscorlib]System.Reflection.FieldAttributes attributeFlags, object 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance class [mscorlib]System.Reflection.FieldInfo GetField(string name, int32 lexLevel)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance object GetDefaultThisObject()
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance class Microsoft.JScript.GlobalScope GetGlobalScope()
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance class [mscorlib]System.Reflection.FieldInfo GetLocalField(string name)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [mscorlib]System.Reflection.MemberInfo[] GetMember(string name, valuetype [mscorlib]System.Reflection.BindingFlags bindingAttr)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [mscorlib]System.Reflection.MemberInfo[] GetMembers(valuetype [mscorlib]System.Reflection.BindingFlags bindingAttr)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object GetMemberValue(string name, int32 lexlevel)
		{
			ret
		}
		.field family class [mscorlib]System.Collections.ArrayList field_table
	}
	.class public sealed ActiveXObjectConstructor
		extends Microsoft.JScript.ScriptFunction
	{
		.method public hidebysig 
			instance object CreateInstance(object[] args)
		{
			.param [1]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = (01 00 00 00)
			ret
		}
		.method public hidebysig 
			instance object Invoke()
		{
			ret
		}
	}
	.class public sealed ArgumentsObject
		extends Microsoft.JScript.JSObject
	{
		.field public object callee
		.field public object caller
		.field public object length
	}
	.class public sealed ArrayConstructor
		extends Microsoft.JScript.ScriptFunction
	{
		.method public hidebysig 
			instance class Microsoft.JScript.ArrayObject ConstructArray(object[] args)
		{
			ret
		}
		.method public hidebysig 
			instance class Microsoft.JScript.ArrayObject CreateInstance(object[] args)
		{
			.param [1]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = (01 00 00 00)
			ret
		}
		.method public hidebysig 
			instance class Microsoft.JScript.ArrayObject Invoke(object[] args)
		{
			.param [1]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = (01 00 00 00)
			ret
		}
	}
	.class public sealed ArrayLiteral
		extends 'Microsoft.JScript.AST'
	{
		.method public hidebysig specialname 
			instance void .ctor(class Microsoft.JScript.Context context, class Microsoft.JScript.ASTList elements)
		{
			ret
		}
	}
	.class public ArrayObject
		extends Microsoft.JScript.JSObject
	{
		.method public virtual hidebysig newslot specialname 
			instance object get_length()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_length(object 'value')
		{
			ret
		}
		.method family hidebysig 
			instance void SpliceSlowly(uint32 start, uint32 deleteCount, object[] args, class Microsoft.JScript.ArrayObject outArray, uint32 oldLength, uint32 newLength)
		{
			ret
		}
		.property instance object length()
		{
			.get instance object Microsoft.JScript.ArrayObject::get_length()
			.set instance void Microsoft.JScript.ArrayObject::set_length(object)
		}
	}
	.class public ArrayPrototype
		extends Microsoft.JScript.ArrayObject
	{
		.method public static hidebysig 
			class Microsoft.JScript.ArrayObject concat(object thisob, class Microsoft.JScript.Vsa.VsaEngine engine, object[] args)
		{
			.param [3]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = (01 00 00 00)
			ret
		}
		.method public static hidebysig specialname 
			class Microsoft.JScript.ArrayConstructor get_constructor()
		{
			ret
		}
		.method public static hidebysig 
			string join(object thisob, object separator)
		{
			ret
		}
		.method public static hidebysig 
			object 'pop'(object thisob)
		{
			ret
		}
		.method public static hidebysig 
			int64 push(object thisob, object[] args)
		{
			.param [2]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = (01 00 00 00)
			ret
		}
		.method public static hidebysig 
			object reverse(object thisob)
		{
			ret
		}
		.method public static hidebysig 
			object shift(object thisob)
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.JScript.ArrayObject slice(object thisob, class Microsoft.JScript.Vsa.VsaEngine engine, float64 start, object end)
		{
			ret
		}
		.method public static hidebysig 
			object sort(object thisob, object function)
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.JScript.ArrayObject splice(object thisob, class Microsoft.JScript.Vsa.VsaEngine engine, float64 start, float64 deleteCnt, object[] args)
		{
			.param [5]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = (01 00 00 00)
			ret
		}
		.method public static hidebysig 
			string toLocaleString(object thisob)
		{
			ret
		}
		.method public static hidebysig 
			string toString(object thisob)
		{
			ret
		}
		.method public static hidebysig 
			object unshift(object thisob, object[] args)
		{
			.param [2]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = (01 00 00 00)
			ret
		}
		.property class Microsoft.JScript.ArrayConstructor constructor()
		{
			.get class Microsoft.JScript.ArrayConstructor Microsoft.JScript.ArrayPrototype::get_constructor()
		}
	}
	.class public ArrayWrapper
		extends Microsoft.JScript.ArrayObject
	{
		.method public hidebysig 
			instance class [mscorlib]System.Type GetType()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance object get_length()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_length(object 'value')
		{
			ret
		}
		.property instance object length()
		{
			.get instance object Microsoft.JScript.ArrayWrapper::get_length()
			.set instance void Microsoft.JScript.ArrayWrapper::set_length(object)
		}
	}
	.class public sealed AssemblyCustomAttributeList
		extends 'Microsoft.JScript.AST'
	{
	}
	.class public abstract BinaryOp
		extends 'Microsoft.JScript.AST'
	{
		.method family hidebysig 
			instance class [mscorlib]System.Reflection.MethodInfo GetOperator(class [mscorlib]System.Reflection.IReflect ir1, class [mscorlib]System.Reflection.IReflect ir2)
		{
			ret
		}
		.field family class 'Microsoft.JScript.AST' operand1
		.field family class 'Microsoft.JScript.AST' operand2
		.field family class [mscorlib]System.Reflection.MethodInfo operatorMeth
		.field family valuetype Microsoft.JScript.JSToken operatorTok
		.field family class [mscorlib]System.Type type1
		.field family class [mscorlib]System.Type type2
	}
	.class public abstract Binding
		extends 'Microsoft.JScript.AST'
	{
		.method family virtual hidebysig newslot abstract 
			instance object GetObject()
		{
		}
		.method family virtual hidebysig newslot abstract 
			instance void HandleNoSuchMemberError()
		{
		}
		.method public static hidebysig 
			bool IsMissing(object 'value')
		{
			ret
		}
		.method family hidebysig 
			instance void ResolveRHValue()
		{
			ret
		}
		.method family virtual hidebysig newslot abstract 
			instance void TranslateToILObject(class [mscorlib]System.Reflection.Emit.ILGenerator 'il', class [mscorlib]System.Type obtype, bool noValue)
		{
		}
		.method family virtual hidebysig newslot abstract 
			instance void TranslateToILWithDupOfThisOb(class [mscorlib]System.Reflection.Emit.ILGenerator 'il')
		{
		}
		.field family class [mscorlib]System.Reflection.MemberInfo defaultMember
		.field family bool isAssignmentToDefaultIndexedProperty
		.field family bool isFullyResolved
		.field family bool isNonVirtual
		.field family string name
	}
	.class public sealed BitwiseBinary
		extends Microsoft.JScript.BinaryOp
	{
		.method public hidebysig specialname 
			instance void .ctor(int32 operatorTok)
		{
			ret
		}
		.method public hidebysig 
			instance object EvaluateBitwiseBinary(object v1, object v2)
		{
			ret
		}
	}
	.class public sealed Block
		extends 'Microsoft.JScript.AST'
	{
	}
	.class public BlockScope
		extends Microsoft.JScript.ActivationObject
	{
		.method public hidebysig specialname 
			instance void .ctor(class Microsoft.JScript.ScriptObject parent, string name, int32 scopeId)
		{
			ret
		}
		.method family virtual hidebysig 
			instance class Microsoft.JScript.JSVariableField CreateField(string name, valuetype [mscorlib]System.Reflection.FieldAttributes attributeFlags, object 'value')
		{
			ret
		}
	}
	.class public sealed BooleanConstructor
		extends Microsoft.JScript.ScriptFunction
	{
		.method public hidebysig 
			instance class Microsoft.JScript.BooleanObject CreateInstance(object[] args)
		{
			.param [1]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = (01 00 00 00)
			ret
		}
		.method public hidebysig 
			instance bool Invoke(object arg)
		{
			ret
		}
	}
	.class public BooleanObject
		extends Microsoft.JScript.JSObject
	{
		.method family hidebysig specialname 
			instance void .ctor(class Microsoft.JScript.ScriptObject prototype, class [mscorlib]System.Type subType)
		{
			ret
		}
		.method public hidebysig 
			instance class [mscorlib]System.Type GetType()
		{
			ret
		}
	}
	.class public BooleanPrototype
		extends Microsoft.JScript.BooleanObject
	{
		.method family hidebysig specialname 
			instance void .ctor(class Microsoft.JScript.ObjectPrototype parent, class [mscorlib]System.Type baseType)
		{
			ret
		}
		.method public static hidebysig specialname 
			class Microsoft.JScript.BooleanConstructor get_constructor()
		{
			ret
		}
		.method public static hidebysig 
			string toString(object thisob)
		{
			ret
		}
		.method public static hidebysig 
			object valueOf(object thisob)
		{
			ret
		}
		.property class Microsoft.JScript.BooleanConstructor constructor()
		{
			.get class Microsoft.JScript.BooleanConstructor Microsoft.JScript.BooleanPrototype::get_constructor()
		}
	}
	.class public sealed serializable BreakOutOfFinally
		extends [mscorlib]System.ApplicationException
	{
		.method public hidebysig specialname 
			instance void .ctor(int32 target)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string m)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string m, class [mscorlib]System.Exception e)
		{
			ret
		}
		.method public virtual hidebysig 
			instance void GetObjectData(class [mscorlib]System.Runtime.Serialization.SerializationInfo s, valuetype [mscorlib]System.Runtime.Serialization.StreamingContext c)
		{
			ret
		}
		.field public int32 target
	}
	.class public COMCharStream
		extends [mscorlib]'System.IO.Stream'
	{
		.method public hidebysig specialname 
			instance void .ctor(class Microsoft.JScript.IMessageReceiver messageReceiver)
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance bool get_CanWrite()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance bool get_CanRead()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance bool get_CanSeek()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance int64 get_Length()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance int64 get_Position()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_Position(int64 'value')
		{
			ret
		}
		.method public virtual hidebysig 
			instance void Close()
		{
			ret
		}
		.method public virtual hidebysig 
			instance void Flush()
		{
			ret
		}
		.method public virtual hidebysig 
			instance int32 Read(uint8[] buffer, int32 offset, int32 count)
		{
			ret
		}
		.method public virtual hidebysig 
			instance int64 Seek(int64 offset, valuetype [mscorlib]'System.IO.SeekOrigin' origin)
		{
			ret
		}
		.method public virtual hidebysig 
			instance void SetLength(int64 'value')
		{
			ret
		}
		.method public virtual hidebysig 
			instance void Write(uint8[] buffer, int32 offset, int32 count)
		{
			ret
		}
		.property instance bool CanRead()
		{
			.get instance bool Microsoft.JScript.COMCharStream::get_CanRead()
		}
		.property instance bool CanSeek()
		{
			.get instance bool Microsoft.JScript.COMCharStream::get_CanSeek()
		}
		.property instance bool CanWrite()
		{
			.get instance bool Microsoft.JScript.COMCharStream::get_CanWrite()
		}
		.property instance int64 Length()
		{
			.get instance int64 Microsoft.JScript.COMCharStream::get_Length()
		}
		.property instance int64 Position()
		{
			.get instance int64 Microsoft.JScript.COMCharStream::get_Position()
			.set instance void Microsoft.JScript.COMCharStream::set_Position(int64)
		}
	}
	.class public sealed Closure
		extends Microsoft.JScript.ScriptFunction
	{
		.method public hidebysig specialname 
			instance void .ctor(class Microsoft.JScript.FunctionObject func)
		{
			ret
		}
		.method public virtual hidebysig 
			instance string ToString()
		{
			ret
		}
		.field public object arguments
		.field public object caller
	}
	.class public sealed CmdLineError
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Microsoft.JScript.CmdLineError AssemblyNotFound = int32(0x000007D1)
		.field static public literal valuetype Microsoft.JScript.CmdLineError CannotCreateEngine = int32(0x000007D2)
		.field static public literal valuetype Microsoft.JScript.CmdLineError CompilerConstant = int32(0x000007D3)
		.field static public literal valuetype Microsoft.JScript.CmdLineError DuplicateFileAsSourceAndAssembly = int32(0x000007D4)
		.field static public literal valuetype Microsoft.JScript.CmdLineError DuplicateResourceFile = int32(0x000007D5)
		.field static public literal valuetype Microsoft.JScript.CmdLineError DuplicateResourceName = int32(0x000007D6)
		.field static public literal valuetype Microsoft.JScript.CmdLineError DuplicateSourceFile = int32(0x000007D7)
		.field static public literal valuetype Microsoft.JScript.CmdLineError ErrorSavingCompiledState = int32(0x000007D8)
		.field static public literal valuetype Microsoft.JScript.CmdLineError IncompatibleTargets = int32(0x000007F6)
		.field static public literal valuetype Microsoft.JScript.CmdLineError InvalidAssembly = int32(0x000007D9)
		.field static public literal valuetype Microsoft.JScript.CmdLineError InvalidCharacters = int32(0x000007F4)
		.field static public literal valuetype Microsoft.JScript.CmdLineError InvalidCodePage = int32(0x000007DA)
		.field static public literal valuetype Microsoft.JScript.CmdLineError InvalidDefinition = int32(0x000007DB)
		.field static public literal valuetype Microsoft.JScript.CmdLineError InvalidForCompilerOptions = int32(0x000007F5)
		.field static public literal valuetype Microsoft.JScript.CmdLineError InvalidLocaleID = int32(0x000007DC)
		.field static public literal valuetype Microsoft.JScript.CmdLineError InvalidPlatform = int32(0x000007F7)
		.field static public literal valuetype Microsoft.JScript.CmdLineError InvalidSourceFile = int32(0x000007DE)
		.field static public literal valuetype Microsoft.JScript.CmdLineError InvalidTarget = int32(0x000007DD)
		.field static public literal valuetype Microsoft.JScript.CmdLineError InvalidVersion = int32(0x000007EF)
		.field static public literal valuetype Microsoft.JScript.CmdLineError InvalidWarningLevel = int32(0x000007DF)
		.field static public literal valuetype Microsoft.JScript.CmdLineError 'LAST' = int32(0x000007F7)
		.field static public literal valuetype Microsoft.JScript.CmdLineError ManagedResourceNotFound = int32(0x000007E6)
		.field static public literal valuetype Microsoft.JScript.CmdLineError MissingDefineArgument = int32(0x000007E2)
		.field static public literal valuetype Microsoft.JScript.CmdLineError MissingExtension = int32(0x000007E3)
		.field static public literal valuetype Microsoft.JScript.CmdLineError MissingLibArgument = int32(0x000007E4)
		.field static public literal valuetype Microsoft.JScript.CmdLineError MissingReference = int32(0x000007F2)
		.field static public literal valuetype Microsoft.JScript.CmdLineError MissingVersionInfo = int32(0x000007E5)
		.field static public literal valuetype Microsoft.JScript.CmdLineError MultipleOutputNames = int32(0x000007E0)
		.field static public literal valuetype Microsoft.JScript.CmdLineError MultipleTargets = int32(0x000007E1)
		.field static public literal valuetype Microsoft.JScript.CmdLineError MultipleWin32Resources = int32(0x000007F1)
		.field static public literal valuetype Microsoft.JScript.CmdLineError NestedResponseFiles = int32(0x000007E7)
		.field static public literal valuetype Microsoft.JScript.CmdLineError NoCodePage = int32(0x000007E8)
		.field static public literal valuetype Microsoft.JScript.CmdLineError NoError = int32(0x00000000)
		.field static public literal valuetype Microsoft.JScript.CmdLineError NoFileName = int32(0x000007E9)
		.field static public literal valuetype Microsoft.JScript.CmdLineError NoInputSourcesSpecified = int32(0x000007EA)
		.field static public literal valuetype Microsoft.JScript.CmdLineError NoLocaleID = int32(0x000007EB)
		.field static public literal valuetype Microsoft.JScript.CmdLineError NoWarningLevel = int32(0x000007EC)
		.field static public literal valuetype Microsoft.JScript.CmdLineError ResourceNotFound = int32(0x000007ED)
		.field static public literal valuetype Microsoft.JScript.CmdLineError SourceFileTooBig = int32(0x000007F0)
		.field static public literal valuetype Microsoft.JScript.CmdLineError SourceNotFound = int32(0x000007F3)
		.field static public literal valuetype Microsoft.JScript.CmdLineError UnknownOption = int32(0x000007EE)
		.field static public literal valuetype Microsoft.JScript.CmdLineError Unspecified = int32(0x00000BB7)
	}
	.class public serializable CmdLineException
		extends [mscorlib]System.Exception
	{
		.method public hidebysig specialname 
			instance void .ctor(valuetype Microsoft.JScript.CmdLineError errorCode, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(valuetype Microsoft.JScript.CmdLineError errorCode, string context, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string m)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string m, class [mscorlib]System.Exception e)
		{
			ret
		}
		.method family hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Runtime.Serialization.SerializationInfo s, valuetype [mscorlib]System.Runtime.Serialization.StreamingContext c)
		{
			ret
		}
		.method public virtual hidebysig 
			instance void GetObjectData(class [mscorlib]System.Runtime.Serialization.SerializationInfo s, valuetype [mscorlib]System.Runtime.Serialization.StreamingContext c)
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance string get_Message()
		{
			ret
		}
		.method public hidebysig 
			instance string ResourceKey(valuetype Microsoft.JScript.CmdLineError errorCode)
		{
			ret
		}
		.property instance string Message()
		{
			.get instance string Microsoft.JScript.CmdLineException::get_Message()
		}
	}
	.class public CmdLineOptionParser
		extends [mscorlib]System.Object
	{
		.method public static hidebysig 
			bool IsSimpleOption(string option, string prefix)
		{
			ret
		}
		.method public static hidebysig 
			string IsArgumentOption(string option, string prefix)
		{
			ret
		}
		.method public static hidebysig 
			string IsArgumentOption(string option, string shortPrefix, string longPrefix)
		{
			ret
		}
		.method public static hidebysig 
			object IsBooleanOption(string option, string prefix)
		{
			ret
		}
		.method public static hidebysig 
			object IsBooleanOption(string option, string shortPrefix, string longPrefix)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public Context
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance int32 get_EndColumn()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_EndLine()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_EndPosition()
		{
			ret
		}
		.method public hidebysig 
			instance string GetCode()
		{
			ret
		}
		.method public hidebysig 
			instance valuetype Microsoft.JScript.JSToken GetToken()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_StartColumn()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_StartLine()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_StartPosition()
		{
			ret
		}
		.property instance int32 EndColumn()
		{
			.get instance int32 Microsoft.JScript.Context::get_EndColumn()
		}
		.property instance int32 EndLine()
		{
			.get instance int32 Microsoft.JScript.Context::get_EndLine()
		}
		.property instance int32 EndPosition()
		{
			.get instance int32 Microsoft.JScript.Context::get_EndPosition()
		}
		.property instance int32 StartColumn()
		{
			.get instance int32 Microsoft.JScript.Context::get_StartColumn()
		}
		.property instance int32 StartLine()
		{
			.get instance int32 Microsoft.JScript.Context::get_StartLine()
		}
		.property instance int32 StartPosition()
		{
			.get instance int32 Microsoft.JScript.Context::get_StartPosition()
		}
	}
	.class public sealed serializable ContinueOutOfFinally
		extends [mscorlib]System.ApplicationException
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(int32 target)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string m)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string m, class [mscorlib]System.Exception e)
		{
			ret
		}
		.method public virtual hidebysig 
			instance void GetObjectData(class [mscorlib]System.Runtime.Serialization.SerializationInfo s, valuetype [mscorlib]System.Runtime.Serialization.StreamingContext c)
		{
			ret
		}
		.field public int32 target
	}
	.class public sealed Convert
		extends [mscorlib]System.Object
	{
		.method public static hidebysig 
			bool IsBadIndex(class 'Microsoft.JScript.AST' ast)
		{
			ret
		}
		.method public static hidebysig 
			float64 CheckIfDoubleIsInteger(float64 d)
		{
			ret
		}
		.method public static hidebysig 
			float32 CheckIfSingleIsInteger(float32 s)
		{
			ret
		}
		.method public static hidebysig 
			object Coerce(object 'value', object 'type')
		{
			ret
		}
		.method public static hidebysig 
			object CoerceT(object 'value', class [mscorlib]System.Type t, bool explicitOK)
		{
			ret
		}
		.method public static hidebysig 
			object Coerce2(object 'value', valuetype [mscorlib]System.TypeCode target, bool truncationPermitted)
		{
			ret
		}
		.method public static hidebysig 
			void ThrowTypeMismatch(object val)
		{
			ret
		}
		.method public static hidebysig 
			bool ToBoolean(float64 d)
		{
			ret
		}
		.method public static hidebysig 
			bool ToBoolean(object 'value')
		{
			ret
		}
		.method public static hidebysig 
			bool ToBoolean(object 'value', bool explicitConversion)
		{
			ret
		}
		.method public static hidebysig 
			object ToForInObject(object 'value', class Microsoft.JScript.Vsa.VsaEngine engine)
		{
			ret
		}
		.method public static hidebysig 
			int32 ToInt32(object 'value')
		{
			ret
		}
		.method public static hidebysig 
			float64 ToNumber(object 'value')
		{
			ret
		}
		.method public static hidebysig 
			float64 ToNumber(string str)
		{
			ret
		}
		.method public static hidebysig 
			object ToNativeArray(object 'value', valuetype [mscorlib]System.RuntimeTypeHandle handle)
		{
			ret
		}
		.method public static hidebysig 
			object ToObject(object 'value', class Microsoft.JScript.Vsa.VsaEngine engine)
		{
			ret
		}
		.method public static hidebysig 
			object ToObject2(object 'value', class Microsoft.JScript.Vsa.VsaEngine engine)
		{
			ret
		}
		.method public static hidebysig 
			string ToString(object 'value', bool explicitOK)
		{
			ret
		}
		.method public static hidebysig 
			string ToString(bool b)
		{
			ret
		}
		.method public static hidebysig 
			string ToString(float64 d)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public DateConstructor
		extends Microsoft.JScript.ScriptFunction
	{
		.method public hidebysig 
			instance class Microsoft.JScript.DateObject CreateInstance(object[] args)
		{
			.param [1]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = (01 00 00 00)
			ret
		}
		.method public hidebysig 
			instance string Invoke()
		{
			ret
		}
		.method public static hidebysig 
			float64 parse(string str)
		{
			ret
		}
		.method public static hidebysig 
			float64 UTC(object year, object month, object 'date', object hours, object minutes, object seconds, object ms)
		{
			ret
		}
	}
	.class public DateObject
		extends Microsoft.JScript.JSObject
	{
	}
	.class public DatePrototype
		extends Microsoft.JScript.DateObject
	{
		.method public static hidebysig specialname 
			class Microsoft.JScript.DateConstructor get_constructor()
		{
			ret
		}
		.method public static hidebysig 
			float64 getDate(object thisob)
		{
			ret
		}
		.method public static hidebysig 
			float64 getDay(object thisob)
		{
			ret
		}
		.method public static hidebysig 
			float64 getFullYear(object thisob)
		{
			ret
		}
		.method public static hidebysig 
			float64 getHours(object thisob)
		{
			ret
		}
		.method public static hidebysig 
			float64 getMilliseconds(object thisob)
		{
			ret
		}
		.method public static hidebysig 
			float64 getMinutes(object thisob)
		{
			ret
		}
		.method public static hidebysig 
			float64 getMonth(object thisob)
		{
			ret
		}
		.method public static hidebysig 
			float64 getSeconds(object thisob)
		{
			ret
		}
		.method public static hidebysig 
			float64 getTime(object thisob)
		{
			ret
		}
		.method public static hidebysig 
			float64 getTimezoneOffset(object thisob)
		{
			ret
		}
		.method public static hidebysig 
			float64 getUTCDate(object thisob)
		{
			ret
		}
		.method public static hidebysig 
			float64 getUTCDay(object thisob)
		{
			ret
		}
		.method public static hidebysig 
			float64 getUTCFullYear(object thisob)
		{
			ret
		}
		.method public static hidebysig 
			float64 getUTCHours(object thisob)
		{
			ret
		}
		.method public static hidebysig 
			float64 getUTCMilliseconds(object thisob)
		{
			ret
		}
		.method public static hidebysig 
			float64 getUTCMinutes(object thisob)
		{
			ret
		}
		.method public static hidebysig 
			float64 getUTCMonth(object thisob)
		{
			ret
		}
		.method public static hidebysig 
			float64 getUTCSeconds(object thisob)
		{
			ret
		}
		.method public static hidebysig 
			object getVarDate(object thisob)
		{
			ret
		}
		.method public static hidebysig 
			float64 getYear(object thisob)
		{
			ret
		}
		.method public static hidebysig 
			float64 setDate(object thisob, float64 ddate)
		{
			ret
		}
		.method public static hidebysig 
			float64 setFullYear(object thisob, float64 dyear, object month, object 'date')
		{
			ret
		}
		.method public static hidebysig 
			float64 setHours(object thisob, float64 dhour, object min, object sec, object msec)
		{
			ret
		}
		.method public static hidebysig 
			float64 setMinutes(object thisob, float64 dmin, object sec, object msec)
		{
			ret
		}
		.method public static hidebysig 
			float64 setMilliseconds(object thisob, float64 dmsec)
		{
			ret
		}
		.method public static hidebysig 
			float64 setMonth(object thisob, float64 dmonth, object 'date')
		{
			ret
		}
		.method public static hidebysig 
			float64 setSeconds(object thisob, float64 dsec, object msec)
		{
			ret
		}
		.method public static hidebysig 
			float64 setTime(object thisob, float64 time)
		{
			ret
		}
		.method public static hidebysig 
			float64 setUTCDate(object thisob, float64 ddate)
		{
			ret
		}
		.method public static hidebysig 
			float64 setUTCFullYear(object thisob, float64 dyear, object month, object 'date')
		{
			ret
		}
		.method public static hidebysig 
			float64 setUTCHours(object thisob, float64 dhour, object min, object sec, object msec)
		{
			ret
		}
		.method public static hidebysig 
			float64 setUTCMinutes(object thisob, float64 dmin, object sec, object msec)
		{
			ret
		}
		.method public static hidebysig 
			float64 setUTCMilliseconds(object thisob, float64 dmsec)
		{
			ret
		}
		.method public static hidebysig 
			float64 setUTCMonth(object thisob, float64 dmonth, object 'date')
		{
			ret
		}
		.method public static hidebysig 
			float64 setUTCSeconds(object thisob, float64 dsec, object msec)
		{
			ret
		}
		.method public static hidebysig 
			float64 setYear(object thisob, float64 dyear)
		{
			ret
		}
		.method public static hidebysig 
			string toDateString(object thisob)
		{
			ret
		}
		.method public static hidebysig 
			string toGMTString(object thisob)
		{
			ret
		}
		.method public static hidebysig 
			string toLocaleDateString(object thisob)
		{
			ret
		}
		.method public static hidebysig 
			string toLocaleString(object thisob)
		{
			ret
		}
		.method public static hidebysig 
			string toLocaleTimeString(object thisob)
		{
			ret
		}
		.method public static hidebysig 
			string toString(object thisob)
		{
			ret
		}
		.method public static hidebysig 
			string toTimeString(object thisob)
		{
			ret
		}
		.method public static hidebysig 
			string toUTCString(object thisob)
		{
			ret
		}
		.method public static hidebysig 
			float64 valueOf(object thisob)
		{
			ret
		}
		.property class Microsoft.JScript.DateConstructor constructor()
		{
			.get class Microsoft.JScript.DateConstructor Microsoft.JScript.DatePrototype::get_constructor()
		}
	}
	.class public DebugBreak
		extends 'Microsoft.JScript.AST'
	{
	}
	.class public DocumentContext
		extends [mscorlib]System.Object
	{
	}
	.class public sealed Empty
		extends [mscorlib]System.Object
	{
		.field static public initonly class Microsoft.JScript.Empty Value
	}
	.class public serializable EndOfFile
		extends Microsoft.JScript.ParserException
	{
	}
	.class public sealed EnumeratorConstructor
		extends Microsoft.JScript.ScriptFunction
	{
		.method public hidebysig 
			instance class Microsoft.JScript.EnumeratorObject CreateInstance(object[] args)
		{
			.param [1]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = (01 00 00 00)
			ret
		}
		.method public hidebysig 
			instance object Invoke()
		{
			ret
		}
	}
	.class public EnumeratorObject
		extends Microsoft.JScript.JSObject
	{
		.method family hidebysig 
			instance void LoadObject()
		{
			ret
		}
		.field family class [mscorlib]System.Collections.IEnumerator enumerator
	}
	.class public EnumeratorPrototype
		extends Microsoft.JScript.JSObject
	{
		.method public static hidebysig 
			bool atEnd(object thisob)
		{
			ret
		}
		.method public static hidebysig specialname 
			class Microsoft.JScript.EnumeratorConstructor get_constructor()
		{
			ret
		}
		.method public static hidebysig 
			object item(object thisob)
		{
			ret
		}
		.method public static hidebysig 
			void moveFirst(object thisob)
		{
			ret
		}
		.method public static hidebysig 
			void moveNext(object thisob)
		{
			ret
		}
		.property class Microsoft.JScript.EnumeratorConstructor constructor()
		{
			.get class Microsoft.JScript.EnumeratorConstructor Microsoft.JScript.EnumeratorPrototype::get_constructor()
		}
	}
	.class public Equality
		extends Microsoft.JScript.BinaryOp
	{
		.method public hidebysig specialname 
			instance void .ctor(int32 operatorTok)
		{
			ret
		}
		.method public hidebysig 
			instance bool EvaluateEquality(object v1, object v2)
		{
			ret
		}
		.method public static hidebysig 
			bool JScriptEquals(object v1, object v2)
		{
			ret
		}
	}
	.class public sealed ErrorConstructor
		extends Microsoft.JScript.ScriptFunction
	{
		.method public hidebysig 
			instance class Microsoft.JScript.ErrorObject CreateInstance(object[] args)
		{
			.param [1]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = (01 00 00 00)
			ret
		}
		.method public hidebysig 
			instance object Invoke(object[] args)
		{
			.param [1]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = (01 00 00 00)
			ret
		}
	}
	.class public ErrorObject
		extends Microsoft.JScript.JSObject
	{
		.method public static hidebysig specialname 
			class [mscorlib]System.Exception op_Explicit(class Microsoft.JScript.ErrorObject err)
		{
			ret
		}
		.method public static hidebysig 
			class [mscorlib]System.Exception ToException(class Microsoft.JScript.ErrorObject err)
		{
			ret
		}
		.field public object description
		.field public object message
		.field public object number
	}
	.class public ErrorPrototype
		extends Microsoft.JScript.JSObject
	{
		.method public hidebysig specialname 
			instance class Microsoft.JScript.ErrorConstructor get_constructor()
		{
			ret
		}
		.method public static hidebysig 
			string toString(object thisob)
		{
			ret
		}
		.field public initonly string name
		.property instance class Microsoft.JScript.ErrorConstructor constructor()
		{
			.get instance class Microsoft.JScript.ErrorConstructor Microsoft.JScript.ErrorPrototype::get_constructor()
		}
	}
	.class public sealed ErrorType
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Microsoft.JScript.ErrorType EvalError = int32(0x00000001)
		.field static public literal valuetype Microsoft.JScript.ErrorType OtherError = int32(0x00000000)
		.field static public literal valuetype Microsoft.JScript.ErrorType RangeError = int32(0x00000002)
		.field static public literal valuetype Microsoft.JScript.ErrorType ReferenceError = int32(0x00000003)
		.field static public literal valuetype Microsoft.JScript.ErrorType SyntaxError = int32(0x00000004)
		.field static public literal valuetype Microsoft.JScript.ErrorType TypeError = int32(0x00000005)
		.field static public literal valuetype Microsoft.JScript.ErrorType URIError = int32(0x00000006)
	}
	.class public sealed Eval
		extends 'Microsoft.JScript.AST'
	{
		.method public static hidebysig 
			object JScriptEvaluate(object source, class Microsoft.JScript.Vsa.VsaEngine engine)
		{
			ret
		}
		.method public static hidebysig 
			object JScriptEvaluate(object source, object unsafeOption, class Microsoft.JScript.Vsa.VsaEngine engine)
		{
			ret
		}
	}
	.class public sealed EvalErrorObject
		extends Microsoft.JScript.ErrorObject
	{
	}
	.class public Expando
		extends [mscorlib]System.Attribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = (01 00 44 00 00 00 01 00 54 02 09 49 6E 68 65 72 69 74 65 64 01)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public abstract FieldAccessor
		extends [mscorlib]System.Object
	{
		.method public virtual hidebysig newslot abstract 
			instance object GetValue(object thisob)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void SetValue(object thisob, object 'value')
		{
		}
		.method family hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public sealed ForIn
		extends 'Microsoft.JScript.AST'
	{
		.method public static hidebysig 
			class [mscorlib]System.Collections.IEnumerator JScriptGetEnumerator(object coll)
		{
			ret
		}
	}
	.class public sealed FunctionConstructor
		extends Microsoft.JScript.ScriptFunction
	{
		.method public hidebysig 
			instance class Microsoft.JScript.ScriptFunction CreateInstance(object[] args)
		{
			.param [1]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = (01 00 00 00)
			ret
		}
		.method public hidebysig 
			instance class Microsoft.JScript.ScriptFunction Invoke(object[] args)
		{
			.param [1]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = (01 00 00 00)
			ret
		}
	}
	.class public sealed FunctionDeclaration
		extends 'Microsoft.JScript.AST'
	{
		.method public static hidebysig 
			class Microsoft.JScript.Closure JScriptFunctionDeclaration(valuetype [mscorlib]System.RuntimeTypeHandle handle, string name, string method_name, string[] formal_parameters, class Microsoft.JScript.JSLocalField[] fields, bool must_save_stack_locals, bool hasArgumentsObject, string text, object declaringObject, class Microsoft.JScript.Vsa.VsaEngine engine)
		{
			ret
		}
	}
	.class public sealed FunctionExpression
		extends 'Microsoft.JScript.AST'
	{
		.method public static hidebysig 
			class Microsoft.JScript.FunctionObject JScriptFunctionExpression(valuetype [mscorlib]System.RuntimeTypeHandle handle, string name, string method_name, string[] formal_params, class Microsoft.JScript.JSLocalField[] fields, bool must_save_stack_locals, bool hasArgumentsObject, string text, class Microsoft.JScript.Vsa.VsaEngine engine)
		{
			ret
		}
	}
	.class public sealed FunctionObject
		extends Microsoft.JScript.ScriptFunction
	{
		.method public virtual hidebysig 
			instance string ToString()
		{
			ret
		}
	}
	.class public FunctionPrototype
		extends Microsoft.JScript.ScriptFunction
	{
		.method public static hidebysig 
			object apply(object thisob, object thisarg, object argArray)
		{
			ret
		}
		.method public static hidebysig 
			object 'call'(object thisob, object thisarg, object[] args)
		{
			.param [3]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = (01 00 00 00)
			ret
		}
		.method public static hidebysig specialname 
			class Microsoft.JScript.FunctionConstructor get_constructor()
		{
			ret
		}
		.method public static hidebysig 
			string toString(object thisob)
		{
			ret
		}
		.property class Microsoft.JScript.FunctionConstructor constructor()
		{
			.get class Microsoft.JScript.FunctionConstructor Microsoft.JScript.FunctionPrototype::get_constructor()
		}
	}
	.class public sealed FunctionWrapper
		extends Microsoft.JScript.ScriptFunction
	{
		.method public virtual hidebysig 
			instance string ToString()
		{
			ret
		}
	}
	.class public GlobalObject
		extends [mscorlib]System.Object
	{
		.method public static hidebysig specialname 
			class Microsoft.JScript.ActiveXObjectConstructor get_ActiveXObject()
		{
			ret
		}
		.method public static hidebysig specialname 
			class Microsoft.JScript.ArrayConstructor get_Array()
		{
			ret
		}
		.method public static hidebysig specialname 
			class Microsoft.JScript.BooleanConstructor get_Boolean()
		{
			ret
		}
		.method public static hidebysig specialname 
			class [mscorlib]System.Type get_boolean()
		{
			ret
		}
		.method public static hidebysig specialname 
			class [mscorlib]System.Type get_byte()
		{
			ret
		}
		.method public static hidebysig specialname 
			class [mscorlib]System.Type get_char()
		{
			ret
		}
		.method public static hidebysig 
			void CollectGarbage()
		{
			ret
		}
		.method public static hidebysig specialname 
			class Microsoft.JScript.DateConstructor get_Date()
		{
			ret
		}
		.method public static hidebysig specialname 
			class [mscorlib]System.Type get_decimal()
		{
			ret
		}
		.method public static hidebysig 
			string decodeURI(object encodedURI)
		{
			ret
		}
		.method public static hidebysig 
			string decodeURIComponent(object encodedURI)
		{
			ret
		}
		.method public static hidebysig specialname 
			class [mscorlib]System.Type get_double()
		{
			ret
		}
		.method public static hidebysig 
			string encodeURI(object uri)
		{
			ret
		}
		.method public static hidebysig 
			string encodeURIComponent(object uriComponent)
		{
			ret
		}
		.method public static hidebysig specialname 
			class Microsoft.JScript.EnumeratorConstructor get_Enumerator()
		{
			ret
		}
		.method public static hidebysig specialname 
			class Microsoft.JScript.ErrorConstructor get_Error()
		{
			ret
		}
		.method public static hidebysig 
			string escape(object 'string')
		{
			ret
		}
		.method public static hidebysig 
			object eval(object x)
		{
			ret
		}
		.method public static hidebysig specialname 
			class Microsoft.JScript.ErrorConstructor get_EvalError()
		{
			ret
		}
		.method public static hidebysig specialname 
			class [mscorlib]System.Type get_float()
		{
			ret
		}
		.method public static hidebysig specialname 
			class Microsoft.JScript.FunctionConstructor get_Function()
		{
			ret
		}
		.method public static hidebysig 
			object GetObject(object moniker, object progId)
		{
			ret
		}
		.method public static hidebysig specialname 
			class [mscorlib]System.Type get_int()
		{
			ret
		}
		.method public static hidebysig 
			bool isNaN(object num)
		{
			ret
		}
		.method public static hidebysig 
			bool isFinite(float64 number)
		{
			ret
		}
		.method public static hidebysig specialname 
			class [mscorlib]System.Type get_long()
		{
			ret
		}
		.method public static hidebysig specialname 
			class Microsoft.JScript.MathObject get_Math()
		{
			ret
		}
		.method public static hidebysig specialname 
			class Microsoft.JScript.NumberConstructor get_Number()
		{
			ret
		}
		.method public static hidebysig specialname 
			class Microsoft.JScript.ObjectConstructor get_Object()
		{
			ret
		}
		.method public static hidebysig 
			float64 parseFloat(object 'string')
		{
			ret
		}
		.method public static hidebysig 
			float64 parseInt(object 'string', object radix)
		{
			ret
		}
		.method public static hidebysig specialname 
			class Microsoft.JScript.ErrorConstructor get_RangeError()
		{
			ret
		}
		.method public static hidebysig specialname 
			class Microsoft.JScript.ErrorConstructor get_ReferenceError()
		{
			ret
		}
		.method public static hidebysig specialname 
			class Microsoft.JScript.RegExpConstructor get_RegExp()
		{
			ret
		}
		.method public static hidebysig 
			string ScriptEngine()
		{
			ret
		}
		.method public static hidebysig 
			int32 ScriptEngineBuildVersion()
		{
			ret
		}
		.method public static hidebysig 
			int32 ScriptEngineMajorVersion()
		{
			ret
		}
		.method public static hidebysig 
			int32 ScriptEngineMinorVersion()
		{
			ret
		}
		.method public static hidebysig specialname 
			class [mscorlib]System.Type get_sbyte()
		{
			ret
		}
		.method public static hidebysig specialname 
			class [mscorlib]System.Type get_short()
		{
			ret
		}
		.method public static hidebysig specialname 
			class Microsoft.JScript.StringConstructor get_String()
		{
			ret
		}
		.method public static hidebysig specialname 
			class Microsoft.JScript.ErrorConstructor get_SyntaxError()
		{
			ret
		}
		.method public static hidebysig specialname 
			class Microsoft.JScript.ErrorConstructor get_TypeError()
		{
			ret
		}
		.method public static hidebysig 
			string unescape(object 'string')
		{
			ret
		}
		.method public static hidebysig specialname 
			class Microsoft.JScript.ErrorConstructor get_URIError()
		{
			ret
		}
		.method public static hidebysig specialname 
			class Microsoft.JScript.VBArrayConstructor get_VBArray()
		{
			ret
		}
		.method public static hidebysig specialname 
			class [mscorlib]System.Type get_void()
		{
			ret
		}
		.method public static hidebysig specialname 
			class [mscorlib]System.Type get_uint()
		{
			ret
		}
		.method public static hidebysig specialname 
			class [mscorlib]System.Type get_ulong()
		{
			ret
		}
		.method public static hidebysig specialname 
			class [mscorlib]System.Type get_ushort()
		{
			ret
		}
		.field static public literal float64 Infinity = float64(0x7FF0000000000000)
		.field static public literal float64 NaN = float64(0xFFF8000000000000)
		.field family class Microsoft.JScript.ActiveXObjectConstructor originalActiveXObjectField
		.field family class Microsoft.JScript.ArrayConstructor originalArrayField
		.field family class Microsoft.JScript.BooleanConstructor originalBooleanField
		.field family class Microsoft.JScript.DateConstructor originalDateField
		.field family class Microsoft.JScript.EnumeratorConstructor originalEnumeratorField
		.field family class Microsoft.JScript.ErrorConstructor originalErrorField
		.field family class Microsoft.JScript.ErrorConstructor originalEvalErrorField
		.field family class Microsoft.JScript.FunctionConstructor originalFunctionField
		.field family class Microsoft.JScript.NumberConstructor originalNumberField
		.field family class Microsoft.JScript.ObjectConstructor originalObjectField
		.field family class Microsoft.JScript.ObjectPrototype originalObjectPrototypeField
		.field family class Microsoft.JScript.ErrorConstructor originalRangeErrorField
		.field family class Microsoft.JScript.ErrorConstructor originalReferenceErrorField
		.field family class Microsoft.JScript.RegExpConstructor originalRegExpField
		.field family class Microsoft.JScript.StringConstructor originalStringField
		.field family class Microsoft.JScript.ErrorConstructor originalSyntaxErrorField
		.field family class Microsoft.JScript.ErrorConstructor originalTypeErrorField
		.field family class Microsoft.JScript.ErrorConstructor originalURIErrorField
		.field family class Microsoft.JScript.VBArrayConstructor originalVBArrayField
		.field static public initonly class Microsoft.JScript.Empty undefined
		.property class Microsoft.JScript.ActiveXObjectConstructor ActiveXObject()
		{
			.get class Microsoft.JScript.ActiveXObjectConstructor Microsoft.JScript.GlobalObject::get_ActiveXObject()
		}
		.property class Microsoft.JScript.ArrayConstructor Array()
		{
			.get class Microsoft.JScript.ArrayConstructor Microsoft.JScript.GlobalObject::get_Array()
		}
		.property class Microsoft.JScript.BooleanConstructor Boolean()
		{
			.get class Microsoft.JScript.BooleanConstructor Microsoft.JScript.GlobalObject::get_Boolean()
		}
		.property class Microsoft.JScript.DateConstructor Date()
		{
			.get class Microsoft.JScript.DateConstructor Microsoft.JScript.GlobalObject::get_Date()
		}
		.property class Microsoft.JScript.EnumeratorConstructor Enumerator()
		{
			.get class Microsoft.JScript.EnumeratorConstructor Microsoft.JScript.GlobalObject::get_Enumerator()
		}
		.property class Microsoft.JScript.ErrorConstructor Error()
		{
			.get class Microsoft.JScript.ErrorConstructor Microsoft.JScript.GlobalObject::get_Error()
		}
		.property class Microsoft.JScript.ErrorConstructor EvalError()
		{
			.get class Microsoft.JScript.ErrorConstructor Microsoft.JScript.GlobalObject::get_EvalError()
		}
		.property class Microsoft.JScript.FunctionConstructor Function()
		{
			.get class Microsoft.JScript.FunctionConstructor Microsoft.JScript.GlobalObject::get_Function()
		}
		.property class Microsoft.JScript.MathObject Math()
		{
			.get class Microsoft.JScript.MathObject Microsoft.JScript.GlobalObject::get_Math()
		}
		.property class Microsoft.JScript.NumberConstructor Number()
		{
			.get class Microsoft.JScript.NumberConstructor Microsoft.JScript.GlobalObject::get_Number()
		}
		.property class Microsoft.JScript.ObjectConstructor Object()
		{
			.get class Microsoft.JScript.ObjectConstructor Microsoft.JScript.GlobalObject::get_Object()
		}
		.property class Microsoft.JScript.ErrorConstructor RangeError()
		{
			.get class Microsoft.JScript.ErrorConstructor Microsoft.JScript.GlobalObject::get_RangeError()
		}
		.property class Microsoft.JScript.ErrorConstructor ReferenceError()
		{
			.get class Microsoft.JScript.ErrorConstructor Microsoft.JScript.GlobalObject::get_ReferenceError()
		}
		.property class Microsoft.JScript.RegExpConstructor RegExp()
		{
			.get class Microsoft.JScript.RegExpConstructor Microsoft.JScript.GlobalObject::get_RegExp()
		}
		.property class Microsoft.JScript.StringConstructor String()
		{
			.get class Microsoft.JScript.StringConstructor Microsoft.JScript.GlobalObject::get_String()
		}
		.property class Microsoft.JScript.ErrorConstructor SyntaxError()
		{
			.get class Microsoft.JScript.ErrorConstructor Microsoft.JScript.GlobalObject::get_SyntaxError()
		}
		.property class Microsoft.JScript.ErrorConstructor TypeError()
		{
			.get class Microsoft.JScript.ErrorConstructor Microsoft.JScript.GlobalObject::get_TypeError()
		}
		.property class Microsoft.JScript.ErrorConstructor URIError()
		{
			.get class Microsoft.JScript.ErrorConstructor Microsoft.JScript.GlobalObject::get_URIError()
		}
		.property class Microsoft.JScript.VBArrayConstructor VBArray()
		{
			.get class Microsoft.JScript.VBArrayConstructor Microsoft.JScript.GlobalObject::get_VBArray()
		}
		.property class [mscorlib]System.Type boolean()
		{
			.get class [mscorlib]System.Type Microsoft.JScript.GlobalObject::get_boolean()
		}
		.property class [mscorlib]System.Type byte()
		{
			.get class [mscorlib]System.Type Microsoft.JScript.GlobalObject::get_byte()
		}
		.property class [mscorlib]System.Type 'char'()
		{
			.get class [mscorlib]System.Type Microsoft.JScript.GlobalObject::get_char()
		}
		.property class [mscorlib]System.Type 'decimal'()
		{
			.get class [mscorlib]System.Type Microsoft.JScript.GlobalObject::get_decimal()
		}
		.property class [mscorlib]System.Type double()
		{
			.get class [mscorlib]System.Type Microsoft.JScript.GlobalObject::get_double()
		}
		.property class [mscorlib]System.Type 'float'()
		{
			.get class [mscorlib]System.Type Microsoft.JScript.GlobalObject::get_float()
		}
		.property class [mscorlib]System.Type 'int'()
		{
			.get class [mscorlib]System.Type Microsoft.JScript.GlobalObject::get_int()
		}
		.property class [mscorlib]System.Type long()
		{
			.get class [mscorlib]System.Type Microsoft.JScript.GlobalObject::get_long()
		}
		.property class [mscorlib]System.Type sbyte()
		{
			.get class [mscorlib]System.Type Microsoft.JScript.GlobalObject::get_sbyte()
		}
		.property class [mscorlib]System.Type short()
		{
			.get class [mscorlib]System.Type Microsoft.JScript.GlobalObject::get_short()
		}
		.property class [mscorlib]System.Type 'uint'()
		{
			.get class [mscorlib]System.Type Microsoft.JScript.GlobalObject::get_uint()
		}
		.property class [mscorlib]System.Type ulong()
		{
			.get class [mscorlib]System.Type Microsoft.JScript.GlobalObject::get_ulong()
		}
		.property class [mscorlib]System.Type ushort()
		{
			.get class [mscorlib]System.Type Microsoft.JScript.GlobalObject::get_ushort()
		}
		.property class [mscorlib]System.Type 'void'()
		{
			.get class [mscorlib]System.Type Microsoft.JScript.GlobalObject::get_void()
		}
	}
	.class public GlobalScope
		extends Microsoft.JScript.ActivationObject
		implements [mscorlib]System.Runtime.InteropServices.Expando.IExpando, [mscorlib]System.Reflection.IReflect
	{
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method public hidebysig specialname 
			instance void .ctor(class Microsoft.JScript.GlobalScope parent, class Microsoft.JScript.Vsa.VsaEngine engine)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance class [mscorlib]System.Reflection.FieldInfo AddField(string name)
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance class [mscorlib]System.Reflection.MethodInfo System.Runtime.InteropServices.Expando.IExpando.AddMethod(string name, class [mscorlib]System.Delegate 'method')
		{
			.override [mscorlib]System.Runtime.InteropServices.Expando.IExpando::AddMethod
			ret
		}
		.method private final virtual hidebysig newslot 
			instance class [mscorlib]System.Reflection.PropertyInfo System.Runtime.InteropServices.Expando.IExpando.AddProperty(string name)
		{
			.override [mscorlib]System.Runtime.InteropServices.Expando.IExpando::AddProperty
			ret
		}
		.method public virtual hidebysig 
			instance object GetDefaultThisObject()
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [mscorlib]System.Reflection.FieldInfo GetField(string name, int32 lexLevel)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [mscorlib]System.Reflection.FieldInfo[] GetFields(valuetype [mscorlib]System.Reflection.BindingFlags bindingAttr)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class Microsoft.JScript.GlobalScope GetGlobalScope()
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [mscorlib]System.Reflection.FieldInfo GetLocalField(string name)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [mscorlib]System.Reflection.MemberInfo[] GetMember(string name, valuetype [mscorlib]System.Reflection.BindingFlags bindingAttr)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [mscorlib]System.Reflection.MemberInfo[] GetMembers(valuetype [mscorlib]System.Reflection.BindingFlags bindingAttr)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [mscorlib]System.Reflection.MethodInfo[] GetMethods(valuetype [mscorlib]System.Reflection.BindingFlags bindingAttr)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [mscorlib]System.Reflection.PropertyInfo[] GetProperties(valuetype [mscorlib]System.Reflection.BindingFlags bindingAttr)
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Runtime.InteropServices.Expando.IExpando.RemoveMember(class [mscorlib]System.Reflection.MemberInfo m)
		{
			.override [mscorlib]System.Runtime.InteropServices.Expando.IExpando::RemoveMember
			ret
		}
	}
	.class public sealed Globals
		extends [mscorlib]System.Object
	{
		.method public static hidebysig 
			class Microsoft.JScript.ArrayObject ConstructArray(object[] args)
		{
			.param [1]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = (01 00 00 00)
			ret
		}
		.method public static hidebysig 
			class Microsoft.JScript.ArrayObject ConstructArrayLiteral(object[] args)
		{
			ret
		}
		.field static public class Microsoft.JScript.Vsa.VsaEngine contextEngine
	}
	.class public Hide
		extends [mscorlib]System.Attribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = (01 00 40 01 00 00 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public interface abstract IActivationObject
	{
		.method public virtual hidebysig newslot abstract 
			instance object GetDefaultThisObject()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class Microsoft.JScript.GlobalScope GetGlobalScope()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class [mscorlib]System.Reflection.FieldInfo GetLocalField(string name)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance object GetMemberValue(string name, int32 lexlevel)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class [mscorlib]System.Reflection.FieldInfo GetField(string name, int32 lexLevel)
		{
		}
	}
	.class public interface abstract IEngine2
	{
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = (01 00 24 42 46 46 36 43 39 37 46 2D 30 37 30 35 2D 34 33 39 34 2D 38 38 42 38 2D 41 30 33 41 34 42 38 42 34 43 44 37 00 00)
		.method public virtual hidebysig newslot abstract 
			instance class [mscorlib]System.Reflection.Assembly GetAssembly()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void Run(class [mscorlib]System.AppDomain domain)
		{
			.permissionset linkcheck = (00)
		}
		.method public virtual hidebysig newslot abstract 
			instance bool CompileEmpty()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void RunEmpty()
		{
			.permissionset linkcheck = (00)
		}
		.method public virtual hidebysig newslot abstract 
			instance void DisconnectEvents()
		{
			.permissionset linkcheck = (00)
		}
		.method public virtual hidebysig newslot abstract 
			instance void ConnectEvents()
		{
			.permissionset linkcheck = (00)
		}
		.method public virtual hidebysig newslot abstract 
			instance void RegisterEventSource(string name)
		{
			.permissionset linkcheck = (00)
		}
		.method public virtual hidebysig newslot abstract 
			instance void Interrupt()
		{
			.permissionset linkcheck = (00)
		}
		.method public virtual hidebysig newslot abstract 
			instance void InitVsaEngine(string rootMoniker, class [Microsoft.Vsa]Microsoft.Vsa.IVsaSite site)
		{
			.permissionset linkcheck = (00)
		}
		.method public virtual hidebysig newslot abstract 
			instance class Microsoft.JScript.IVsaScriptScope GetGlobalScope()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class [mscorlib]System.Reflection.Module GetModule()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class [Microsoft.Vsa]Microsoft.Vsa.IVsaEngine Clone(class [mscorlib]System.AppDomain domain)
		{
			.permissionset linkcheck = (00)
		}
		.method public virtual hidebysig newslot abstract 
			instance void Restart()
		{
			.permissionset linkcheck = (00)
		}
	}
	.class public interface abstract IMessageReceiver
	{
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = (01 00 24 46 30 36 32 43 37 46 42 2D 35 33 42 46 2D 34 66 30 64 2D 42 30 46 36 2D 44 36 36 43 35 39 34 38 45 36 33 46 00 00)
		.method public virtual hidebysig newslot abstract 
			instance void Message(string strValue)
		{
		}
	}
	.class public interface abstract INeedEngine
	{
		.method public virtual hidebysig newslot abstract 
			instance class Microsoft.JScript.Vsa.VsaEngine GetEngine()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void SetEngine(class Microsoft.JScript.Vsa.VsaEngine engine)
		{
		}
	}
	.class public interface abstract IRedirectOutput
	{
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = (01 00 24 35 42 38 30 37 46 41 31 2D 30 30 43 44 2D 34 36 65 65 2D 41 34 39 33 2D 46 44 38 30 41 43 39 34 34 37 31 35 00 00)
		.method public virtual hidebysig newslot abstract 
			instance void SetOutputStream(class Microsoft.JScript.IMessageReceiver output)
		{
		}
	}
	.class public interface abstract ISite2
	{
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = (01 00 24 42 46 46 36 43 39 38 30 2D 30 37 30 35 2D 34 33 39 34 2D 38 38 42 38 2D 41 30 33 41 34 42 38 42 34 43 44 37 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(valuetype [mscorlib]System.Runtime.InteropServices.ComInterfaceType) = (01 00 01 00 00 00 00 00)
		.method public virtual hidebysig newslot abstract 
			instance object[] GetParentChain(object obj)
		{
		}
	}
	.class public interface abstract IVsaFullErrorInfo
		implements [Microsoft.Vsa]Microsoft.Vsa.IVsaError
	{
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = (01 00 24 44 43 33 36 39 31 42 43 2D 46 31 38 38 2D 34 62 36 37 2D 38 33 33 38 2D 33 32 36 36 37 31 45 30 46 33 46 36 00 00)
		.method public virtual hidebysig newslot abstract specialname 
			instance int32 get_EndLine()
		{
		}
		.property instance int32 EndLine()
		{
			.get instance int32 Microsoft.JScript.IVsaFullErrorInfo::get_EndLine()
		}
	}
	.class public interface abstract IVsaScriptScope
		implements [Microsoft.Vsa]Microsoft.Vsa.IVsaItem
	{
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = (01 00 24 45 44 34 42 41 45 32 32 2D 32 46 33 43 2D 34 31 39 61 2D 42 34 38 37 2D 43 46 38 36 39 45 37 31 36 42 39 35 00 00)
		.method public virtual hidebysig newslot abstract specialname 
			instance class Microsoft.JScript.IVsaScriptScope get_Parent()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class [Microsoft.Vsa]Microsoft.Vsa.IVsaItem AddItem(string itemName, valuetype [Microsoft.Vsa]Microsoft.Vsa.VsaItemType 'type')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class [Microsoft.Vsa]Microsoft.Vsa.IVsaItem GetItem(string itemName)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void RemoveItem(string itemName)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void RemoveItem(class [Microsoft.Vsa]Microsoft.Vsa.IVsaItem item)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance int32 GetItemCount()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class [Microsoft.Vsa]Microsoft.Vsa.IVsaItem GetItemAtIndex(int32 index)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void RemoveItemAtIndex(int32 index)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance object GetObject()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class [Microsoft.Vsa]Microsoft.Vsa.IVsaItem CreateDynamicItem(string itemName, valuetype [Microsoft.Vsa]Microsoft.Vsa.VsaItemType 'type')
		{
		}
		.property instance class Microsoft.JScript.IVsaScriptScope Parent()
		{
			.get instance class Microsoft.JScript.IVsaScriptScope Microsoft.JScript.IVsaScriptScope::get_Parent()
		}
	}
	.class public interface abstract IWrappedMember
	{
		.method public virtual hidebysig newslot abstract 
			instance object GetWrappedObject()
		{
		}
	}
	.class public sealed Import
		extends 'Microsoft.JScript.AST'
	{
		.method public static hidebysig 
			void JScriptImport(string name, class Microsoft.JScript.Vsa.VsaEngine engine)
		{
			ret
		}
	}
	.class public sealed In
		extends Microsoft.JScript.BinaryOp
	{
		.method public static hidebysig 
			bool JScriptIn(object v1, object v2)
		{
			ret
		}
	}
	.class public sealed Instanceof
		extends Microsoft.JScript.BinaryOp
	{
		.method public static hidebysig 
			bool JScriptInstanceof(object v1, object v2)
		{
			ret
		}
	}
	.class public sealed JSBuiltin
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Microsoft.JScript.JSBuiltin Array_concat = int32(0x00000001)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin Array_join = int32(0x00000002)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin Array_pop = int32(0x00000003)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin Array_push = int32(0x00000004)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin Array_reverse = int32(0x00000005)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin Array_shift = int32(0x00000006)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin Array_slice = int32(0x00000007)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin Array_sort = int32(0x00000008)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin Array_splice = int32(0x00000009)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin Array_toLocaleString = int32(0x0000000A)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin Array_toString = int32(0x0000000B)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin Array_unshift = int32(0x0000000C)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin Boolean_toString = int32(0x0000000D)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin Boolean_valueOf = int32(0x0000000E)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin Date_UTC = int32(0x0000003C)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin Date_getDate = int32(0x0000000F)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin Date_getDay = int32(0x00000010)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin Date_getFullYear = int32(0x00000011)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin Date_getHours = int32(0x00000012)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin Date_getMilliseconds = int32(0x00000013)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin Date_getMinutes = int32(0x00000014)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin Date_getMonth = int32(0x00000015)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin Date_getSeconds = int32(0x00000016)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin Date_getTime = int32(0x00000017)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin Date_getTimezoneOffset = int32(0x00000018)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin Date_getUTCDate = int32(0x00000019)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin Date_getUTCDay = int32(0x0000001A)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin Date_getUTCFullYear = int32(0x0000001B)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin Date_getUTCHours = int32(0x0000001C)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin Date_getUTCMilliseconds = int32(0x0000001D)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin Date_getUTCMinutes = int32(0x0000001E)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin Date_getUTCMonth = int32(0x0000001F)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin Date_getUTCSeconds = int32(0x00000020)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin Date_getVarDate = int32(0x00000021)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin Date_getYear = int32(0x00000022)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin Date_parse = int32(0x00000023)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin Date_setDate = int32(0x00000024)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin Date_setFullYear = int32(0x00000025)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin Date_setHours = int32(0x00000026)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin Date_setMilliseconds = int32(0x00000028)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin Date_setMinutes = int32(0x00000027)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin Date_setMonth = int32(0x00000029)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin Date_setSeconds = int32(0x0000002A)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin Date_setTime = int32(0x0000002B)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin Date_setUTCDate = int32(0x0000002C)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin Date_setUTCFullYear = int32(0x0000002D)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin Date_setUTCHours = int32(0x0000002E)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin Date_setUTCMilliseconds = int32(0x00000030)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin Date_setUTCMinutes = int32(0x0000002F)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin Date_setUTCMonth = int32(0x00000031)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin Date_setUTCSeconds = int32(0x00000032)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin Date_setYear = int32(0x00000033)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin Date_toDateString = int32(0x00000034)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin Date_toGMTString = int32(0x00000035)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin Date_toLocaleDateString = int32(0x00000036)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin Date_toLocaleString = int32(0x00000037)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin Date_toLocaleTimeString = int32(0x00000038)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin Date_toString = int32(0x00000039)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin Date_toTimeString = int32(0x0000003A)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin Date_toUTCString = int32(0x0000003B)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin Date_valueOf = int32(0x0000003D)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin Enumerator_atEnd = int32(0x0000003E)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin Enumerator_item = int32(0x0000003F)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin Enumerator_moveFirst = int32(0x00000040)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin Enumerator_moveNext = int32(0x00000041)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin Error_toString = int32(0x00000042)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin Function_apply = int32(0x00000043)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin Function_call = int32(0x00000044)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin Function_toString = int32(0x00000045)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin Global_CollectGarbage = int32(0x00000046)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin Global_GetObject = int32(0x0000004D)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin Global_ScriptEngine = int32(0x00000052)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin Global_ScriptEngineBuildVersion = int32(0x00000053)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin Global_ScriptEngineMajorVersion = int32(0x00000054)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin Global_ScriptEngineMinorVersion = int32(0x00000055)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin Global_decodeURI = int32(0x00000047)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin Global_decodeURIComponent = int32(0x00000048)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin Global_encodeURI = int32(0x00000049)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin Global_encodeURIComponent = int32(0x0000004A)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin Global_escape = int32(0x0000004B)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin Global_eval = int32(0x0000004C)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin Global_isFinite = int32(0x0000004F)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin Global_isNaN = int32(0x0000004E)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin Global_parseFloat = int32(0x00000050)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin Global_parseInt = int32(0x00000051)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin Global_unescape = int32(0x00000056)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin Math_abs = int32(0x00000057)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin Math_acos = int32(0x00000058)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin Math_asin = int32(0x00000059)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin Math_atan = int32(0x0000005A)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin Math_atan2 = int32(0x0000005B)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin Math_ceil = int32(0x0000005C)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin Math_cos = int32(0x0000005D)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin Math_exp = int32(0x0000005E)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin Math_floor = int32(0x0000005F)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin Math_log = int32(0x00000060)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin Math_max = int32(0x00000061)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin Math_min = int32(0x00000062)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin Math_pow = int32(0x00000063)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin Math_random = int32(0x00000064)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin Math_round = int32(0x00000065)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin Math_sin = int32(0x00000066)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin Math_sqrt = int32(0x00000067)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin Math_tan = int32(0x00000068)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin None = int32(0x00000000)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin Number_toExponential = int32(0x00000069)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin Number_toFixed = int32(0x0000006A)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin Number_toLocaleString = int32(0x0000006B)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin Number_toPrecision = int32(0x0000006C)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin Number_toString = int32(0x0000006D)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin Number_valueOf = int32(0x0000006E)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin Object_hasOwnProperty = int32(0x0000006F)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin Object_isPrototypeOf = int32(0x00000070)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin Object_propertyIsEnumerable = int32(0x00000071)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin Object_toLocaleString = int32(0x00000072)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin Object_toString = int32(0x00000073)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin Object_valueOf = int32(0x00000074)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin RegExp_compile = int32(0x00000075)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin RegExp_exec = int32(0x00000076)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin RegExp_test = int32(0x00000077)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin RegExp_toString = int32(0x00000078)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin String_anchor = int32(0x00000079)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin String_big = int32(0x0000007A)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin String_blink = int32(0x0000007B)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin String_bold = int32(0x0000007C)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin String_charAt = int32(0x0000007D)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin String_charCodeAt = int32(0x0000007E)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin String_concat = int32(0x0000007F)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin String_fixed = int32(0x00000080)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin String_fontcolor = int32(0x00000081)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin String_fontsize = int32(0x00000082)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin String_fromCharCode = int32(0x00000083)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin String_indexOf = int32(0x00000084)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin String_italics = int32(0x00000085)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin String_lastIndexOf = int32(0x00000086)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin String_link = int32(0x00000087)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin String_localeCompare = int32(0x00000088)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin String_match = int32(0x00000089)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin String_replace = int32(0x0000008A)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin String_search = int32(0x0000008B)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin String_slice = int32(0x0000008C)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin String_small = int32(0x0000008D)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin String_split = int32(0x0000008E)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin String_strike = int32(0x0000008F)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin String_sub = int32(0x00000090)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin String_substr = int32(0x00000091)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin String_substring = int32(0x00000092)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin String_sup = int32(0x00000093)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin String_toLocaleLowerCase = int32(0x00000094)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin String_toLocaleUpperCase = int32(0x00000095)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin String_toLowerCase = int32(0x00000096)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin String_toString = int32(0x00000097)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin String_toUpperCase = int32(0x00000098)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin String_valueOf = int32(0x00000099)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin VBArray_dimensions = int32(0x0000009A)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin VBArray_getItem = int32(0x0000009B)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin VBArray_lbound = int32(0x0000009C)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin VBArray_toArray = int32(0x0000009D)
		.field static public literal valuetype Microsoft.JScript.JSBuiltin VBArray_ubound = int32(0x0000009E)
	}
	.class public sealed JSConstructor
		extends [mscorlib]System.Reflection.ConstructorInfo
	{
		.method public virtual hidebysig specialname 
			instance valuetype [mscorlib]System.Reflection.MethodAttributes get_Attributes()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class [mscorlib]System.Type get_DeclaringType()
		{
			ret
		}
		.method public virtual hidebysig 
			instance object[] GetCustomAttributes(class [mscorlib]System.Type t, bool inherit)
		{
			ret
		}
		.method public virtual hidebysig 
			instance object[] GetCustomAttributes(bool inherit)
		{
			ret
		}
		.method public virtual hidebysig 
			instance valuetype [mscorlib]System.Reflection.MethodImplAttributes GetMethodImplementationFlags()
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [mscorlib]System.Reflection.ParameterInfo[] GetParameters()
		{
			ret
		}
		.method public virtual hidebysig 
			instance object Invoke(valuetype [mscorlib]System.Reflection.BindingFlags options, class [mscorlib]System.Reflection.Binder binder, object[] parameters, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public virtual hidebysig 
			instance object Invoke(object obj, valuetype [mscorlib]System.Reflection.BindingFlags options, class [mscorlib]System.Reflection.Binder binder, object[] parameters, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool IsDefined(class [mscorlib]System.Type 'type', bool inherit)
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance valuetype [mscorlib]System.Reflection.MemberTypes get_MemberType()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance valuetype [mscorlib]System.RuntimeMethodHandle get_MethodHandle()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class [mscorlib]System.Type get_ReflectedType()
		{
			ret
		}
		.property instance valuetype [mscorlib]System.Reflection.MethodAttributes Attributes()
		{
			.get instance valuetype [mscorlib]System.Reflection.MethodAttributes Microsoft.JScript.JSConstructor::get_Attributes()
		}
		.property instance class [mscorlib]System.Type DeclaringType()
		{
			.get instance class [mscorlib]System.Type Microsoft.JScript.JSConstructor::get_DeclaringType()
		}
		.property instance valuetype [mscorlib]System.Reflection.MemberTypes MemberType()
		{
			.get instance valuetype [mscorlib]System.Reflection.MemberTypes Microsoft.JScript.JSConstructor::get_MemberType()
		}
		.property instance valuetype [mscorlib]System.RuntimeMethodHandle MethodHandle()
		{
			.get instance valuetype [mscorlib]System.RuntimeMethodHandle Microsoft.JScript.JSConstructor::get_MethodHandle()
		}
		.property instance string Name()
		{
			.get instance string Microsoft.JScript.JSConstructor::get_Name()
		}
		.property instance class [mscorlib]System.Type ReflectedType()
		{
			.get instance class [mscorlib]System.Type Microsoft.JScript.JSConstructor::get_ReflectedType()
		}
	}
	.class public sealed JSError
		extends [mscorlib]System.Enum
	{
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = (01 00 24 32 36 38 43 41 39 36 32 2D 32 46 45 46 2D 33 31 35 32 2D 42 41 34 36 2D 45 31 38 36 35 38 42 37 46 41 34 46 00 00)
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Microsoft.JScript.JSError AbstractCannotBePrivate = int32(0x00000485)
		.field static public literal valuetype Microsoft.JScript.JSError AbstractCannotBeStatic = int32(0x000004C0)
		.field static public literal valuetype Microsoft.JScript.JSError AbstractWithBody = int32(0x000004A8)
		.field static public literal valuetype Microsoft.JScript.JSError ActionNotSupported = int32(0x000001BD)
		.field static public literal valuetype Microsoft.JScript.JSError AmbiguousBindingBecauseOfEval = int32(0x0000047E)
		.field static public literal valuetype Microsoft.JScript.JSError AmbiguousBindingBecauseOfWith = int32(0x0000047D)
		.field static public literal valuetype Microsoft.JScript.JSError AmbiguousConstructorCall = int32(0x000004A0)
		.field static public literal valuetype Microsoft.JScript.JSError AmbiguousMatch = int32(0x0000049F)
		.field static public literal valuetype Microsoft.JScript.JSError ArrayLengthAssignIncorrect = int32(0x000013A6)
		.field static public literal valuetype Microsoft.JScript.JSError ArrayLengthConstructIncorrect = int32(0x000013A5)
		.field static public literal valuetype Microsoft.JScript.JSError ArrayMayBeCopied = int32(0x000004BF)
		.field static public literal valuetype Microsoft.JScript.JSError AssemblyAttributesMustBeGlobal = int32(0x000004E1)
		.field static public literal valuetype Microsoft.JScript.JSError AssignmentToReadOnly = int32(0x000013B0)
		.field static public literal valuetype Microsoft.JScript.JSError BadBreak = int32(0x000003FB)
		.field static public literal valuetype Microsoft.JScript.JSError BadContinue = int32(0x000003FC)
		.field static public literal valuetype Microsoft.JScript.JSError BadFunctionDeclaration = int32(0x000004AF)
		.field static public literal valuetype Microsoft.JScript.JSError BadHexDigit = int32(0x000003FF)
		.field static public literal valuetype Microsoft.JScript.JSError BadLabel = int32(0x00000401)
		.field static public literal valuetype Microsoft.JScript.JSError BadModifierInInterface = int32(0x000004C8)
		.field static public literal valuetype Microsoft.JScript.JSError BadOctalLiteral = int32(0x000004DA)
		.field static public literal valuetype Microsoft.JScript.JSError BadPropertyDeclaration = int32(0x000004B0)
		.field static public literal valuetype Microsoft.JScript.JSError BadReturn = int32(0x000003FA)
		.field static public literal valuetype Microsoft.JScript.JSError BadSwitch = int32(0x0000044F)
		.field static public literal valuetype Microsoft.JScript.JSError BadThrow = int32(0x000004D7)
		.field static public literal valuetype Microsoft.JScript.JSError BadVariableDeclaration = int32(0x000004AE)
		.field static public literal valuetype Microsoft.JScript.JSError BadWayToLeaveFinally = int32(0x000004A6)
		.field static public literal valuetype Microsoft.JScript.JSError BaseClassIsExpandoAlready = int32(0x00000484)
		.field static public literal valuetype Microsoft.JScript.JSError BooleanExpected = int32(0x00001392)
		.field static public literal valuetype Microsoft.JScript.JSError CannotAssignToFunctionResult = int32(0x0000138B)
		.field static public literal valuetype Microsoft.JScript.JSError CannotBeAbstract = int32(0x000004BC)
		.field static public literal valuetype Microsoft.JScript.JSError CannotCallSecurityMethodLateBound = int32(0x000013B4)
		.field static public literal valuetype Microsoft.JScript.JSError CannotChangeVisibility = int32(0x00000493)
		.field static public literal valuetype Microsoft.JScript.JSError CannotInstantiateAbstractClass = int32(0x000004BE)
		.field static public literal valuetype Microsoft.JScript.JSError CannotNestPositionDirective = int32(0x0000045F)
		.field static public literal valuetype Microsoft.JScript.JSError CannotReturnValueFromVoidFunction = int32(0x0000049E)
		.field static public literal valuetype Microsoft.JScript.JSError CannotUseNameOfClass = int32(0x00000464)
		.field static public literal valuetype Microsoft.JScript.JSError CannotUseStaticSecurityAttribute = int32(0x000013B5)
		.field static public literal valuetype Microsoft.JScript.JSError CantAssignThis = int32(0x00001388)
		.field static public literal valuetype Microsoft.JScript.JSError CantCreateObject = int32(0x000001AD)
		.field static public literal valuetype Microsoft.JScript.JSError CcInvalidElif = int32(0x00000452)
		.field static public literal valuetype Microsoft.JScript.JSError CcInvalidElse = int32(0x00000451)
		.field static public literal valuetype Microsoft.JScript.JSError CcInvalidEnd = int32(0x00000450)
		.field static public literal valuetype Microsoft.JScript.JSError CcInvalidInDebugger = int32(0x000004E8)
		.field static public literal valuetype Microsoft.JScript.JSError CcOff = int32(0x00000406)
		.field static public literal valuetype Microsoft.JScript.JSError CircularDefinition = int32(0x00000460)
		.field static public literal valuetype Microsoft.JScript.JSError ClashWithProperty = int32(0x00000499)
		.field static public literal valuetype Microsoft.JScript.JSError ClassNotAllowed = int32(0x00000455)
		.field static public literal valuetype Microsoft.JScript.JSError ConstructorMayNotHaveReturnType = int32(0x000004D1)
		.field static public literal valuetype Microsoft.JScript.JSError CustomAttributeUsedMoreThanOnce = int32(0x000004D4)
		.field static public literal valuetype Microsoft.JScript.JSError DateExpected = int32(0x0000138E)
		.field static public literal valuetype Microsoft.JScript.JSError DelegatesShouldNotBeExplicitlyConstructed = int32(0x000004EA)
		.field static public literal valuetype Microsoft.JScript.JSError Deprecated = int32(0x00000461)
		.field static public literal valuetype Microsoft.JScript.JSError DifferentReturnTypeFromBase = int32(0x00000498)
		.field static public literal valuetype Microsoft.JScript.JSError DoesNotHaveAnAddress = int32(0x000004B3)
		.field static public literal valuetype Microsoft.JScript.JSError DupDefault = int32(0x00000403)
		.field static public literal valuetype Microsoft.JScript.JSError DupVisibility = int32(0x0000044D)
		.field static public literal valuetype Microsoft.JScript.JSError DuplicateMethod = int32(0x000004E3)
		.field static public literal valuetype Microsoft.JScript.JSError DuplicateName = int32(0x00000457)
		.field static public literal valuetype Microsoft.JScript.JSError DuplicateNamedParameter = int32(0x000013AC)
		.field static public literal valuetype Microsoft.JScript.JSError EnumNotAllowed = int32(0x000004CE)
		.field static public literal valuetype Microsoft.JScript.JSError EnumeratorExpected = int32(0x00001397)
		.field static public literal valuetype Microsoft.JScript.JSError ErrEOF = int32(0x00000453)
		.field static public literal valuetype Microsoft.JScript.JSError ExceptionFromHResult = int32(0x0000177B)
		.field static public literal valuetype Microsoft.JScript.JSError ExecutablesCannotBeLocalized = int32(0x000004E6)
		.field static public literal valuetype Microsoft.JScript.JSError ExpandoClassShouldNotImpleEnumerable = int32(0x0000048A)
		.field static public literal valuetype Microsoft.JScript.JSError ExpandoMustBePublic = int32(0x000004E9)
		.field static public literal valuetype Microsoft.JScript.JSError ExpandoPrecludesAbstract = int32(0x000004C6)
		.field static public literal valuetype Microsoft.JScript.JSError ExpandoPrecludesOverride = int32(0x000004C4)
		.field static public literal valuetype Microsoft.JScript.JSError ExpandoPrecludesStatic = int32(0x000004E2)
		.field static public literal valuetype Microsoft.JScript.JSError ExpectedAssembly = int32(0x000004E0)
		.field static public literal valuetype Microsoft.JScript.JSError ExpressionExpected = int32(0x000004AB)
		.field static public literal valuetype Microsoft.JScript.JSError FileNotFound = int32(0x00000035)
		.field static public literal valuetype Microsoft.JScript.JSError FinalPrecludesAbstract = int32(0x000004B9)
		.field static public literal valuetype Microsoft.JScript.JSError FractionOutOfRange = int32(0x000013A2)
		.field static public literal valuetype Microsoft.JScript.JSError FuncEvalAborted = int32(0x00001770)
		.field static public literal valuetype Microsoft.JScript.JSError FuncEvalBadLocation = int32(0x00001777)
		.field static public literal valuetype Microsoft.JScript.JSError FuncEvalBadThreadNotStarted = int32(0x00001775)
		.field static public literal valuetype Microsoft.JScript.JSError FuncEvalBadThreadState = int32(0x00001774)
		.field static public literal valuetype Microsoft.JScript.JSError FuncEvalThreadSleepWaitJoin = int32(0x00001773)
		.field static public literal valuetype Microsoft.JScript.JSError FuncEvalThreadSuspended = int32(0x00001772)
		.field static public literal valuetype Microsoft.JScript.JSError FuncEvalTimedout = int32(0x00001771)
		.field static public literal valuetype Microsoft.JScript.JSError FuncEvalWebMethod = int32(0x00001778)
		.field static public literal valuetype Microsoft.JScript.JSError FunctionExpected = int32(0x0000138A)
		.field static public literal valuetype Microsoft.JScript.JSError GetAndSetAreInconsistent = int32(0x00000476)
		.field static public literal valuetype Microsoft.JScript.JSError HidesAbstractInBase = int32(0x00000494)
		.field static public literal valuetype Microsoft.JScript.JSError HidesParentMember = int32(0x00000492)
		.field static public literal valuetype Microsoft.JScript.JSError IllegalAssignment = int32(0x00001390)
		.field static public literal valuetype Microsoft.JScript.JSError IllegalChar = int32(0x000003F6)
		.field static public literal valuetype Microsoft.JScript.JSError IllegalEval = int32(0x000013A9)
		.field static public literal valuetype Microsoft.JScript.JSError IllegalParamArrayAttribute = int32(0x000004C5)
		.field static public literal valuetype Microsoft.JScript.JSError IllegalUseOfSuper = int32(0x000004A5)
		.field static public literal valuetype Microsoft.JScript.JSError IllegalUseOfThis = int32(0x00000462)
		.field static public literal valuetype Microsoft.JScript.JSError IllegalVisibility = int32(0x0000044E)
		.field static public literal valuetype Microsoft.JScript.JSError ImplicitlyReferencedAssemblyNotFound = int32(0x000004EB)
		.field static public literal valuetype Microsoft.JScript.JSError ImpossibleConversion = int32(0x000004B8)
		.field static public literal valuetype Microsoft.JScript.JSError IncompatibleAssemblyReference = int32(0x000004F3)
		.field static public literal valuetype Microsoft.JScript.JSError IncompatibleVisibility = int32(0x00000454)
		.field static public literal valuetype Microsoft.JScript.JSError IncorrectNumberOfIndices = int32(0x000013B2)
		.field static public literal valuetype Microsoft.JScript.JSError InstanceNotAccessibleFromStatic = int32(0x000004DB)
		.field static public literal valuetype Microsoft.JScript.JSError InterfaceIllegalInInterface = int32(0x000004CB)
		.field static public literal valuetype Microsoft.JScript.JSError InternalError = int32(0x00000033)
		.field static public literal valuetype Microsoft.JScript.JSError InvalidAssemblyKeyFile = int32(0x000004F4)
		.field static public literal valuetype Microsoft.JScript.JSError InvalidBaseTypeForEnum = int32(0x000004BD)
		.field static public literal valuetype Microsoft.JScript.JSError InvalidCall = int32(0x00000005)
		.field static public literal valuetype Microsoft.JScript.JSError InvalidCustomAttribute = int32(0x00000477)
		.field static public literal valuetype Microsoft.JScript.JSError InvalidCustomAttributeArgument = int32(0x00000478)
		.field static public literal valuetype Microsoft.JScript.JSError InvalidCustomAttributeClassOrCtor = int32(0x0000047A)
		.field static public literal valuetype Microsoft.JScript.JSError InvalidCustomAttributeTarget = int32(0x000004CF)
		.field static public literal valuetype Microsoft.JScript.JSError InvalidDebugDirective = int32(0x000004D3)
		.field static public literal valuetype Microsoft.JScript.JSError InvalidElse = int32(0x0000040A)
		.field static public literal valuetype Microsoft.JScript.JSError InvalidImport = int32(0x000004CD)
		.field static public literal valuetype Microsoft.JScript.JSError InvalidLanguageOption = int32(0x0000049B)
		.field static public literal valuetype Microsoft.JScript.JSError InvalidPositionDirective = int32(0x0000045A)
		.field static public literal valuetype Microsoft.JScript.JSError InvalidPrototype = int32(0x0000139F)
		.field static public literal valuetype Microsoft.JScript.JSError InvalidResource = int32(0x000004EE)
		.field static public literal valuetype Microsoft.JScript.JSError ItemNotAllowedOnExpandoClass = int32(0x00000480)
		.field static public literal valuetype Microsoft.JScript.JSError KeywordUsedAsIdentifier = int32(0x00000471)
		.field static public literal valuetype Microsoft.JScript.JSError MemberInitializerCannotContainFuncExpr = int32(0x000004F6)
		.field static public literal valuetype Microsoft.JScript.JSError MemberTypeCLSCompliantMismatch = int32(0x000004F1)
		.field static public literal valuetype Microsoft.JScript.JSError MethodClashOnExpandoSuperClass = int32(0x00000483)
		.field static public literal valuetype Microsoft.JScript.JSError MethodInBaseIsNotVirtual = int32(0x00000496)
		.field static public literal valuetype Microsoft.JScript.JSError MethodNotAllowedOnExpandoClass = int32(0x00000481)
		.field static public literal valuetype Microsoft.JScript.JSError MissingConstructForAttributes = int32(0x00000488)
		.field static public literal valuetype Microsoft.JScript.JSError MissingNameParameter = int32(0x000013AD)
		.field static public literal valuetype Microsoft.JScript.JSError MoreNamedParametersThanArguments = int32(0x000013AE)
		.field static public literal valuetype Microsoft.JScript.JSError MustBeEOL = int32(0x0000045B)
		.field static public literal valuetype Microsoft.JScript.JSError MustImplementMethod = int32(0x00000468)
		.field static public literal valuetype Microsoft.JScript.JSError MustProvideNameForNamedParameter = int32(0x000013AB)
		.field static public literal valuetype Microsoft.JScript.JSError NeedArrayObject = int32(0x000013A7)
		.field static public literal valuetype Microsoft.JScript.JSError NeedCompileTimeConstant = int32(0x00000456)
		.field static public literal valuetype Microsoft.JScript.JSError NeedInstance = int32(0x000004BA)
		.field static public literal valuetype Microsoft.JScript.JSError NeedInterface = int32(0x00000469)
		.field static public literal valuetype Microsoft.JScript.JSError NeedObject = int32(0x000001A8)
		.field static public literal valuetype Microsoft.JScript.JSError NeedType = int32(0x00000458)
		.field static public literal valuetype Microsoft.JScript.JSError NestedInstanceTypeCannotBeExtendedByStatic = int32(0x000004D5)
		.field static public literal valuetype Microsoft.JScript.JSError NewNotSpecifiedInMethodDeclaration = int32(0x00000495)
		.field static public literal valuetype Microsoft.JScript.JSError NoAt = int32(0x00000408)
		.field static public literal valuetype Microsoft.JScript.JSError NoCatch = int32(0x00000409)
		.field static public literal valuetype Microsoft.JScript.JSError NoCcEnd = int32(0x00000405)
		.field static public literal valuetype Microsoft.JScript.JSError NoColon = int32(0x000003EB)
		.field static public literal valuetype Microsoft.JScript.JSError NoComma = int32(0x0000044C)
		.field static public literal valuetype Microsoft.JScript.JSError NoCommaOrTypeDefinitionError = int32(0x000004A7)
		.field static public literal valuetype Microsoft.JScript.JSError NoCommentEnd = int32(0x000003F8)
		.field static public literal valuetype Microsoft.JScript.JSError NoConstructor = int32(0x000013A8)
		.field static public literal valuetype Microsoft.JScript.JSError NoEqual = int32(0x000003F3)
		.field static public literal valuetype Microsoft.JScript.JSError NoError = int32(0x00000000)
		.field static public literal valuetype Microsoft.JScript.JSError NoFuncEvalAllowed = int32(0x00001776)
		.field static public literal valuetype Microsoft.JScript.JSError NoIdentifier = int32(0x000003F2)
		.field static public literal valuetype Microsoft.JScript.JSError NoLabel = int32(0x00000402)
		.field static public literal valuetype Microsoft.JScript.JSError NoLeftCurly = int32(0x000003F0)
		.field static public literal valuetype Microsoft.JScript.JSError NoLeftParen = int32(0x000003ED)
		.field static public literal valuetype Microsoft.JScript.JSError NoMemberIdentifier = int32(0x00000404)
		.field static public literal valuetype Microsoft.JScript.JSError NoMethodInBaseToNew = int32(0x00000497)
		.field static public literal valuetype Microsoft.JScript.JSError NoMethodInBaseToOverride = int32(0x0000049C)
		.field static public literal valuetype Microsoft.JScript.JSError NoRightBracket = int32(0x000003EF)
		.field static public literal valuetype Microsoft.JScript.JSError NoRightBracketOrComma = int32(0x000004AA)
		.field static public literal valuetype Microsoft.JScript.JSError NoRightCurly = int32(0x000003F1)
		.field static public literal valuetype Microsoft.JScript.JSError NoRightParen = int32(0x000003EE)
		.field static public literal valuetype Microsoft.JScript.JSError NoRightParenOrComma = int32(0x000004A9)
		.field static public literal valuetype Microsoft.JScript.JSError NoSemicolon = int32(0x000003EC)
		.field static public literal valuetype Microsoft.JScript.JSError NoSuchMember = int32(0x0000047F)
		.field static public literal valuetype Microsoft.JScript.JSError NoSuchStaticMember = int32(0x000004DE)
		.field static public literal valuetype Microsoft.JScript.JSError NoSuchType = int32(0x000004D9)
		.field static public literal valuetype Microsoft.JScript.JSError NoVarInEnum = int32(0x000004CC)
		.field static public literal valuetype Microsoft.JScript.JSError NoWhile = int32(0x00000400)
		.field static public literal valuetype Microsoft.JScript.JSError NonCLSCompliantMember = int32(0x0000048B)
		.field static public literal valuetype Microsoft.JScript.JSError NonCLSCompliantType = int32(0x000004F0)
		.field static public literal valuetype Microsoft.JScript.JSError NonClsException = int32(0x000013B6)
		.field static public literal valuetype Microsoft.JScript.JSError NonStaticWithTypeName = int32(0x000004DD)
		.field static public literal valuetype Microsoft.JScript.JSError NonSupportedInDebugger = int32(0x000013AF)
		.field static public literal valuetype Microsoft.JScript.JSError NotAccessible = int32(0x00000463)
		.field static public literal valuetype Microsoft.JScript.JSError NotAllowedInSuperConstructorCall = int32(0x00000474)
		.field static public literal valuetype Microsoft.JScript.JSError NotAnExpandoFunction = int32(0x000004E4)
		.field static public literal valuetype Microsoft.JScript.JSError NotCollection = int32(0x000001C3)
		.field static public literal valuetype Microsoft.JScript.JSError NotConst = int32(0x00000407)
		.field static public literal valuetype Microsoft.JScript.JSError NotDeletable = int32(0x0000048C)
		.field static public literal valuetype Microsoft.JScript.JSError NotIndexable = int32(0x00000486)
		.field static public literal valuetype Microsoft.JScript.JSError NotInsideClass = int32(0x00000459)
		.field static public literal valuetype Microsoft.JScript.JSError NotMeantToBeCalledDirectly = int32(0x00000475)
		.field static public literal valuetype Microsoft.JScript.JSError NotOKToCallSuper = int32(0x000004A4)
		.field static public literal valuetype Microsoft.JScript.JSError NotValidForConstructor = int32(0x0000049D)
		.field static public literal valuetype Microsoft.JScript.JSError NotValidVersionString = int32(0x000004E5)
		.field static public literal valuetype Microsoft.JScript.JSError NotYetImplemented = int32(0x000013AA)
		.field static public literal valuetype Microsoft.JScript.JSError NumberExpected = int32(0x00001389)
		.field static public literal valuetype Microsoft.JScript.JSError OLENoPropOrMethod = int32(0x000001B6)
		.field static public literal valuetype Microsoft.JScript.JSError ObjectExpected = int32(0x0000138F)
		.field static public literal valuetype Microsoft.JScript.JSError OctalLiteralsAreDeprecated = int32(0x000004A2)
		.field static public literal valuetype Microsoft.JScript.JSError OnlyClassesAllowed = int32(0x00000489)
		.field static public literal valuetype Microsoft.JScript.JSError OnlyClassesAndPackagesAllowed = int32(0x000004D2)
		.field static public literal valuetype Microsoft.JScript.JSError OutOfMemory = int32(0x00000007)
		.field static public literal valuetype Microsoft.JScript.JSError OutOfStack = int32(0x0000001C)
		.field static public literal valuetype Microsoft.JScript.JSError OverrideAndHideUsedTogether = int32(0x0000049A)
		.field static public literal valuetype Microsoft.JScript.JSError PackageExpected = int32(0x0000048D)
		.field static public literal valuetype Microsoft.JScript.JSError PackageInWrongContext = int32(0x000004D0)
		.field static public literal valuetype Microsoft.JScript.JSError ParamListNotLast = int32(0x000004D8)
		.field static public literal valuetype Microsoft.JScript.JSError PossibleBadConversion = int32(0x000004EC)
		.field static public literal valuetype Microsoft.JScript.JSError PossibleBadConversionFromString = int32(0x000004ED)
		.field static public literal valuetype Microsoft.JScript.JSError PrecisionOutOfRange = int32(0x000013A3)
		.field static public literal valuetype Microsoft.JScript.JSError PropertyLevelAttributesMustBeOnGetter = int32(0x000004D6)
		.field static public literal valuetype Microsoft.JScript.JSError RefParamsNonSupportedInDebugger = int32(0x000013B3)
		.field static public literal valuetype Microsoft.JScript.JSError RegExpExpected = int32(0x00001398)
		.field static public literal valuetype Microsoft.JScript.JSError RegExpSyntax = int32(0x00001399)
		.field static public literal valuetype Microsoft.JScript.JSError ShouldBeAbstract = int32(0x000004C7)
		.field static public literal valuetype Microsoft.JScript.JSError SideEffectsDisallowed = int32(0x0000177C)
		.field static public literal valuetype Microsoft.JScript.JSError StaticIsAlreadyFinal = int32(0x000004C1)
		.field static public literal valuetype Microsoft.JScript.JSError StaticMethodsCannotHide = int32(0x000004C3)
		.field static public literal valuetype Microsoft.JScript.JSError StaticMethodsCannotOverride = int32(0x000004C2)
		.field static public literal valuetype Microsoft.JScript.JSError StaticMissingInStaticInit = int32(0x00000487)
		.field static public literal valuetype Microsoft.JScript.JSError StaticRequiresTypeName = int32(0x000004DC)
		.field static public literal valuetype Microsoft.JScript.JSError StaticVarNotAvailable = int32(0x00001779)
		.field static public literal valuetype Microsoft.JScript.JSError StringConcatIsSlow = int32(0x000004E7)
		.field static public literal valuetype Microsoft.JScript.JSError StringExpected = int32(0x0000138D)
		.field static public literal valuetype Microsoft.JScript.JSError SuperClassConstructorNotAccessible = int32(0x000004A1)
		.field static public literal valuetype Microsoft.JScript.JSError SuspectAssignment = int32(0x000004B6)
		.field static public literal valuetype Microsoft.JScript.JSError SuspectLoopCondition = int32(0x000004DF)
		.field static public literal valuetype Microsoft.JScript.JSError SuspectSemicolon = int32(0x000004B7)
		.field static public literal valuetype Microsoft.JScript.JSError SyntaxError = int32(0x000003EA)
		.field static public literal valuetype Microsoft.JScript.JSError TooFewParameters = int32(0x000004B4)
		.field static public literal valuetype Microsoft.JScript.JSError TooManyParameters = int32(0x0000047C)
		.field static public literal valuetype Microsoft.JScript.JSError TooManyTokensSkipped = int32(0x000004AD)
		.field static public literal valuetype Microsoft.JScript.JSError TypeAssemblyCLSCompliantMismatch = int32(0x000004F2)
		.field static public literal valuetype Microsoft.JScript.JSError TypeCannotBeExtended = int32(0x0000046E)
		.field static public literal valuetype Microsoft.JScript.JSError TypeMismatch = int32(0x0000000D)
		.field static public literal valuetype Microsoft.JScript.JSError TypeNameTooLong = int32(0x000004F5)
		.field static public literal valuetype Microsoft.JScript.JSError TypeObjectNotAvailable = int32(0x0000177A)
		.field static public literal valuetype Microsoft.JScript.JSError URIDecodeError = int32(0x000013A1)
		.field static public literal valuetype Microsoft.JScript.JSError URIEncodeError = int32(0x000013A0)
		.field static public literal valuetype Microsoft.JScript.JSError UncaughtException = int32(0x0000139E)
		.field static public literal valuetype Microsoft.JScript.JSError UndeclaredVariable = int32(0x0000046F)
		.field static public literal valuetype Microsoft.JScript.JSError UndefinedIdentifier = int32(0x00001391)
		.field static public literal valuetype Microsoft.JScript.JSError UnexpectedSemicolon = int32(0x000004AC)
		.field static public literal valuetype Microsoft.JScript.JSError UnreachableCatch = int32(0x0000046D)
		.field static public literal valuetype Microsoft.JScript.JSError UnterminatedString = int32(0x000003F7)
		.field static public literal valuetype Microsoft.JScript.JSError UselessAssignment = int32(0x000004B5)
		.field static public literal valuetype Microsoft.JScript.JSError UselessExpression = int32(0x00000491)
		.field static public literal valuetype Microsoft.JScript.JSError VBArrayExpected = int32(0x00001395)
		.field static public literal valuetype Microsoft.JScript.JSError VarIllegalInInterface = int32(0x000004CA)
		.field static public literal valuetype Microsoft.JScript.JSError VariableLeftUninitialized = int32(0x00000470)
		.field static public literal valuetype Microsoft.JScript.JSError VariableMightBeUnitialized = int32(0x000004A3)
		.field static public literal valuetype Microsoft.JScript.JSError WriteOnlyProperty = int32(0x000013B1)
		.field static public literal valuetype Microsoft.JScript.JSError WrongDirective = int32(0x0000045E)
		.field static public literal valuetype Microsoft.JScript.JSError WrongUseOfAddressOf = int32(0x000004EF)
	}
	.class public abstract JSField
		extends [mscorlib]System.Reflection.FieldInfo
	{
		.method public virtual hidebysig specialname 
			instance valuetype [mscorlib]System.Reflection.FieldAttributes get_Attributes()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class [mscorlib]System.Type get_DeclaringType()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance valuetype [mscorlib]System.RuntimeFieldHandle get_FieldHandle()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class [mscorlib]System.Type get_FieldType()
		{
			ret
		}
		.method public virtual hidebysig 
			instance object[] GetCustomAttributes(class [mscorlib]System.Type t, bool inherit)
		{
			ret
		}
		.method public virtual hidebysig 
			instance object[] GetCustomAttributes(bool inherit)
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool IsDefined(class [mscorlib]System.Type 'type', bool inherit)
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance valuetype [mscorlib]System.Reflection.MemberTypes get_MemberType()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class [mscorlib]System.Type get_ReflectedType()
		{
			ret
		}
		.method family hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance valuetype [mscorlib]System.Reflection.FieldAttributes Attributes()
		{
			.get instance valuetype [mscorlib]System.Reflection.FieldAttributes Microsoft.JScript.JSField::get_Attributes()
		}
		.property instance class [mscorlib]System.Type DeclaringType()
		{
			.get instance class [mscorlib]System.Type Microsoft.JScript.JSField::get_DeclaringType()
		}
		.property instance valuetype [mscorlib]System.RuntimeFieldHandle FieldHandle()
		{
			.get instance valuetype [mscorlib]System.RuntimeFieldHandle Microsoft.JScript.JSField::get_FieldHandle()
		}
		.property instance class [mscorlib]System.Type FieldType()
		{
			.get instance class [mscorlib]System.Type Microsoft.JScript.JSField::get_FieldType()
		}
		.property instance valuetype [mscorlib]System.Reflection.MemberTypes MemberType()
		{
			.get instance valuetype [mscorlib]System.Reflection.MemberTypes Microsoft.JScript.JSField::get_MemberType()
		}
		.property instance string Name()
		{
			.get instance string Microsoft.JScript.JSField::get_Name()
		}
		.property instance class [mscorlib]System.Type ReflectedType()
		{
			.get instance class [mscorlib]System.Type Microsoft.JScript.JSField::get_ReflectedType()
		}
	}
	.class public sealed JSFieldInfo
		extends [mscorlib]System.Reflection.FieldInfo
	{
		.method public virtual hidebysig specialname 
			instance valuetype [mscorlib]System.Reflection.FieldAttributes get_Attributes()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class [mscorlib]System.Type get_DeclaringType()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance valuetype [mscorlib]System.RuntimeFieldHandle get_FieldHandle()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class [mscorlib]System.Type get_FieldType()
		{
			ret
		}
		.method public virtual hidebysig 
			instance object[] GetCustomAttributes(class [mscorlib]System.Type t, bool inherit)
		{
			ret
		}
		.method public virtual hidebysig 
			instance object[] GetCustomAttributes(bool inherit)
		{
			ret
		}
		.method public virtual hidebysig 
			instance object GetValue(object obj)
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool IsDefined(class [mscorlib]System.Type 'type', bool inherit)
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance valuetype [mscorlib]System.Reflection.MemberTypes get_MemberType()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class [mscorlib]System.Type get_ReflectedType()
		{
			ret
		}
		.method public hidebysig 
			instance void SetValue(object obj, object 'value')
		{
			ret
		}
		.method public virtual hidebysig 
			instance void SetValue(object obj, object 'value', valuetype [mscorlib]System.Reflection.BindingFlags invokeAttr, class [mscorlib]System.Reflection.Binder binder, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.property instance valuetype [mscorlib]System.Reflection.FieldAttributes Attributes()
		{
			.get instance valuetype [mscorlib]System.Reflection.FieldAttributes Microsoft.JScript.JSFieldInfo::get_Attributes()
		}
		.property instance class [mscorlib]System.Type DeclaringType()
		{
			.get instance class [mscorlib]System.Type Microsoft.JScript.JSFieldInfo::get_DeclaringType()
		}
		.property instance valuetype [mscorlib]System.RuntimeFieldHandle FieldHandle()
		{
			.get instance valuetype [mscorlib]System.RuntimeFieldHandle Microsoft.JScript.JSFieldInfo::get_FieldHandle()
		}
		.property instance class [mscorlib]System.Type FieldType()
		{
			.get instance class [mscorlib]System.Type Microsoft.JScript.JSFieldInfo::get_FieldType()
		}
		.property instance valuetype [mscorlib]System.Reflection.MemberTypes MemberType()
		{
			.get instance valuetype [mscorlib]System.Reflection.MemberTypes Microsoft.JScript.JSFieldInfo::get_MemberType()
		}
		.property instance string Name()
		{
			.get instance string Microsoft.JScript.JSFieldInfo::get_Name()
		}
		.property instance class [mscorlib]System.Type ReflectedType()
		{
			.get instance class [mscorlib]System.Type Microsoft.JScript.JSFieldInfo::get_ReflectedType()
		}
	}
	.class public JSFunctionAttribute
		extends [mscorlib]System.Attribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = (01 00 60 00 00 00 00 00)
		.method public hidebysig specialname 
			instance void .ctor(valuetype Microsoft.JScript.JSFunctionAttributeEnum 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(valuetype Microsoft.JScript.JSFunctionAttributeEnum 'value', valuetype Microsoft.JScript.JSBuiltin builtinFunction)
		{
			ret
		}
		.method public hidebysig 
			instance valuetype Microsoft.JScript.JSFunctionAttributeEnum GetAttributeValue()
		{
			ret
		}
	}
	.class public sealed JSFunctionAttributeEnum
		extends [mscorlib]System.Enum
	{
		.custom instance void [mscorlib]System.FlagsAttribute::.ctor() = (01 00 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = (01 00 24 42 41 35 45 44 30 31 39 2D 46 36 36 39 2D 33 43 33 35 2D 39 33 41 43 2D 33 41 42 46 37 37 36 42 36 32 42 33 00 00)
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Microsoft.JScript.JSFunctionAttributeEnum ClassicFunction = int32(0x00000023)
		.field static public literal valuetype Microsoft.JScript.JSFunctionAttributeEnum ClassicNestedFunction = int32(0x0000002F)
		.field static public literal valuetype Microsoft.JScript.JSFunctionAttributeEnum HasArguments = int32(0x00000001)
		.field static public literal valuetype Microsoft.JScript.JSFunctionAttributeEnum HasEngine = int32(0x00000020)
		.field static public literal valuetype Microsoft.JScript.JSFunctionAttributeEnum HasStackFrame = int32(0x00000008)
		.field static public literal valuetype Microsoft.JScript.JSFunctionAttributeEnum HasThisObject = int32(0x00000002)
		.field static public literal valuetype Microsoft.JScript.JSFunctionAttributeEnum HasVarArgs = int32(0x00000010)
		.field static public literal valuetype Microsoft.JScript.JSFunctionAttributeEnum IsExpandoMethod = int32(0x00000040)
		.field static public literal valuetype Microsoft.JScript.JSFunctionAttributeEnum IsInstanceNestedClassConstructor = int32(0x00000080)
		.field static public literal valuetype Microsoft.JScript.JSFunctionAttributeEnum IsNested = int32(0x00000004)
		.field static public literal valuetype Microsoft.JScript.JSFunctionAttributeEnum NestedFunction = int32(0x0000002C)
		.field static public literal valuetype Microsoft.JScript.JSFunctionAttributeEnum None = int32(0x00000000)
	}
	.class public sealed JSLocalField
		extends Microsoft.JScript.JSVariableField
	{
		.method public hidebysig specialname 
			instance void .ctor(string name, valuetype [mscorlib]System.RuntimeTypeHandle handle, int32 slotNumber)
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class [mscorlib]System.Type get_FieldType()
		{
			ret
		}
		.method public virtual hidebysig 
			instance object GetValue(object obj)
		{
			ret
		}
		.method public virtual hidebysig 
			instance void SetValue(object obj, object 'value', valuetype [mscorlib]System.Reflection.BindingFlags invokeAttr, class [mscorlib]System.Reflection.Binder binder, class [mscorlib]System.Globalization.CultureInfo locale)
		{
			ret
		}
		.property instance class [mscorlib]System.Type FieldType()
		{
			.get instance class [mscorlib]System.Type Microsoft.JScript.JSLocalField::get_FieldType()
		}
	}
	.class public abstract JSMethod
		extends [mscorlib]System.Reflection.MethodInfo
	{
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = (01 00 24 35 36 31 41 43 31 30 34 2D 38 38 36 39 2D 34 33 36 38 2D 39 30 32 46 2D 34 45 30 44 37 44 44 45 44 44 44 44 00 00)
		.method public virtual hidebysig 
			instance class [mscorlib]System.Reflection.MethodInfo GetBaseDefinition()
		{
			ret
		}
		.method public virtual hidebysig 
			instance object[] GetCustomAttributes(class [mscorlib]System.Type t, bool inherit)
		{
			ret
		}
		.method public virtual hidebysig 
			instance object[] GetCustomAttributes(bool inherit)
		{
			ret
		}
		.method public virtual hidebysig 
			instance valuetype [mscorlib]System.Reflection.MethodImplAttributes GetMethodImplementationFlags()
		{
			ret
		}
		.method public virtual hidebysig 
			instance object Invoke(object obj, valuetype [mscorlib]System.Reflection.BindingFlags options, class [mscorlib]System.Reflection.Binder binder, object[] parameters, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public final virtual hidebysig 
			instance bool IsDefined(class [mscorlib]System.Type 'type', bool inherit)
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance valuetype [mscorlib]System.Reflection.MemberTypes get_MemberType()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance valuetype [mscorlib]System.RuntimeMethodHandle get_MethodHandle()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class [mscorlib]System.Type get_ReflectedType()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class [mscorlib]System.Reflection.ICustomAttributeProvider get_ReturnTypeCustomAttributes()
		{
			ret
		}
		.property instance valuetype [mscorlib]System.Reflection.MemberTypes MemberType()
		{
			.get instance valuetype [mscorlib]System.Reflection.MemberTypes Microsoft.JScript.JSMethod::get_MemberType()
		}
		.property instance valuetype [mscorlib]System.RuntimeMethodHandle MethodHandle()
		{
			.get instance valuetype [mscorlib]System.RuntimeMethodHandle Microsoft.JScript.JSMethod::get_MethodHandle()
		}
		.property instance class [mscorlib]System.Type ReflectedType()
		{
			.get instance class [mscorlib]System.Type Microsoft.JScript.JSMethod::get_ReflectedType()
		}
		.property instance class [mscorlib]System.Reflection.ICustomAttributeProvider ReturnTypeCustomAttributes()
		{
			.get instance class [mscorlib]System.Reflection.ICustomAttributeProvider Microsoft.JScript.JSMethod::get_ReturnTypeCustomAttributes()
		}
	}
	.class public sealed JSMethodInfo
		extends [mscorlib]System.Reflection.MethodInfo
	{
		.method public virtual hidebysig specialname 
			instance valuetype [mscorlib]System.Reflection.MethodAttributes get_Attributes()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class [mscorlib]System.Type get_DeclaringType()
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [mscorlib]System.Reflection.MethodInfo GetBaseDefinition()
		{
			ret
		}
		.method public final virtual hidebysig 
			instance object[] GetCustomAttributes(bool inherit)
		{
			ret
		}
		.method public final virtual hidebysig 
			instance object[] GetCustomAttributes(class [mscorlib]System.Type 'type', bool inherit)
		{
			ret
		}
		.method public virtual hidebysig 
			instance valuetype [mscorlib]System.Reflection.MethodImplAttributes GetMethodImplementationFlags()
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [mscorlib]System.Reflection.ParameterInfo[] GetParameters()
		{
			ret
		}
		.method public virtual hidebysig 
			instance object Invoke(object obj, valuetype [mscorlib]System.Reflection.BindingFlags options, class [mscorlib]System.Reflection.Binder binder, object[] parameters, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public final virtual hidebysig 
			instance bool IsDefined(class [mscorlib]System.Type 'type', bool inherit)
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance valuetype [mscorlib]System.Reflection.MemberTypes get_MemberType()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance valuetype [mscorlib]System.RuntimeMethodHandle get_MethodHandle()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class [mscorlib]System.Type get_ReflectedType()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class [mscorlib]System.Type get_ReturnType()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class [mscorlib]System.Reflection.ICustomAttributeProvider get_ReturnTypeCustomAttributes()
		{
			ret
		}
		.method public virtual hidebysig 
			instance string ToString()
		{
			ret
		}
		.property instance valuetype [mscorlib]System.Reflection.MethodAttributes Attributes()
		{
			.get instance valuetype [mscorlib]System.Reflection.MethodAttributes Microsoft.JScript.JSMethodInfo::get_Attributes()
		}
		.property instance class [mscorlib]System.Type DeclaringType()
		{
			.get instance class [mscorlib]System.Type Microsoft.JScript.JSMethodInfo::get_DeclaringType()
		}
		.property instance valuetype [mscorlib]System.Reflection.MemberTypes MemberType()
		{
			.get instance valuetype [mscorlib]System.Reflection.MemberTypes Microsoft.JScript.JSMethodInfo::get_MemberType()
		}
		.property instance valuetype [mscorlib]System.RuntimeMethodHandle MethodHandle()
		{
			.get instance valuetype [mscorlib]System.RuntimeMethodHandle Microsoft.JScript.JSMethodInfo::get_MethodHandle()
		}
		.property instance string Name()
		{
			.get instance string Microsoft.JScript.JSMethodInfo::get_Name()
		}
		.property instance class [mscorlib]System.Type ReflectedType()
		{
			.get instance class [mscorlib]System.Type Microsoft.JScript.JSMethodInfo::get_ReflectedType()
		}
		.property instance class [mscorlib]System.Type ReturnType()
		{
			.get instance class [mscorlib]System.Type Microsoft.JScript.JSMethodInfo::get_ReturnType()
		}
		.property instance class [mscorlib]System.Reflection.ICustomAttributeProvider ReturnTypeCustomAttributes()
		{
			.get instance class [mscorlib]System.Reflection.ICustomAttributeProvider Microsoft.JScript.JSMethodInfo::get_ReturnTypeCustomAttributes()
		}
	}
	.class public JSObject
		extends Microsoft.JScript.ScriptObject
		implements [mscorlib]System.Collections.IEnumerable, [mscorlib]System.Runtime.InteropServices.Expando.IExpando, [mscorlib]System.Reflection.IReflect
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance class [mscorlib]System.Reflection.FieldInfo AddField(string name)
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance class [mscorlib]System.Reflection.MethodInfo System.Runtime.InteropServices.Expando.IExpando.AddMethod(string name, class [mscorlib]System.Delegate 'method')
		{
			.override [mscorlib]System.Runtime.InteropServices.Expando.IExpando::AddMethod
			ret
		}
		.method private final virtual hidebysig newslot 
			instance class [mscorlib]System.Reflection.PropertyInfo System.Runtime.InteropServices.Expando.IExpando.AddProperty(string name)
		{
			.override [mscorlib]System.Runtime.InteropServices.Expando.IExpando::AddProperty
			ret
		}
		.method private final virtual hidebysig newslot 
			instance class [mscorlib]System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			.override [mscorlib]System.Collections.IEnumerable::GetEnumerator
			ret
		}
		.method public virtual hidebysig 
			instance class [mscorlib]System.Reflection.MemberInfo[] GetMember(string name, valuetype [mscorlib]System.Reflection.BindingFlags bindingAttr)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [mscorlib]System.Reflection.MemberInfo[] GetMembers(valuetype [mscorlib]System.Reflection.BindingFlags bindingAttr)
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Runtime.InteropServices.Expando.IExpando.RemoveMember(class [mscorlib]System.Reflection.MemberInfo m)
		{
			.override [mscorlib]System.Runtime.InteropServices.Expando.IExpando::RemoveMember
			ret
		}
		.method public hidebysig 
			instance void SetMemberValue2(string name, object 'value')
		{
			ret
		}
		.method public virtual hidebysig 
			instance string ToString()
		{
			ret
		}
		.field family class [mscorlib]System.Collections.ArrayList field_table
	}
	.class public JSParser
		extends [mscorlib]System.Object
	{
		.permissionset linkcheck = (00)
		.method public hidebysig specialname 
			instance void .ctor(class Microsoft.JScript.Context context)
		{
			ret
		}
		.method public hidebysig 
			instance class Microsoft.JScript.ScriptBlock Parse()
		{
			ret
		}
		.method public hidebysig 
			instance class Microsoft.JScript.Block ParseEvalBody()
		{
			ret
		}
	}
	.class public JSPrototypeObject
		extends Microsoft.JScript.JSObject
	{
		.field public object constructor
	}
	.class public sealed JSScanner
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class Microsoft.JScript.Context sourceContext)
		{
			ret
		}
		.method public hidebysig 
			instance void SetAuthoringMode(bool mode)
		{
			ret
		}
		.method public hidebysig 
			instance void SetSource(class Microsoft.JScript.Context sourceContext)
		{
			ret
		}
		.method public hidebysig 
			instance void GetNextToken()
		{
			ret
		}
		.method public hidebysig 
			instance int32 GetCurrentPosition(bool absolute)
		{
			ret
		}
		.method public hidebysig 
			instance int32 GetCurrentLine()
		{
			ret
		}
		.method public hidebysig 
			instance int32 GetStartLinePosition()
		{
			ret
		}
		.method public hidebysig 
			instance string GetStringLiteral()
		{
			ret
		}
		.method public hidebysig 
			instance string GetSourceCode()
		{
			ret
		}
		.method public hidebysig 
			instance bool GotEndOfLine()
		{
			ret
		}
		.method public hidebysig 
			instance int32 SkipMultiLineComment()
		{
			ret
		}
		.method public static hidebysig 
			bool IsOperator(valuetype Microsoft.JScript.JSToken token)
		{
			ret
		}
		.method public static hidebysig 
			bool IsKeyword(valuetype Microsoft.JScript.JSToken token)
		{
			ret
		}
	}
	.class public sealed JSToken
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Microsoft.JScript.JSToken Abstract = int32(0x0000000F)
		.field static public literal valuetype Microsoft.JScript.JSToken AccessField = int32(0x00000026)
		.field static public literal valuetype Microsoft.JScript.JSToken Assert = int32(0x00000068)
		.field static public literal valuetype Microsoft.JScript.JSToken Assign = int32(0x00000045)
		.field static public literal valuetype Microsoft.JScript.JSToken BitwiseAnd = int32(0x00000034)
		.field static public literal valuetype Microsoft.JScript.JSToken BitwiseAndAssign = int32(0x0000004A)
		.field static public literal valuetype Microsoft.JScript.JSToken BitwiseNot = int32(0x00000028)
		.field static public literal valuetype Microsoft.JScript.JSToken BitwiseOr = int32(0x00000032)
		.field static public literal valuetype Microsoft.JScript.JSToken BitwiseOrAssign = int32(0x0000004B)
		.field static public literal valuetype Microsoft.JScript.JSToken BitwiseXor = int32(0x00000033)
		.field static public literal valuetype Microsoft.JScript.JSToken BitwiseXorAssign = int32(0x0000004C)
		.field static public literal valuetype Microsoft.JScript.JSToken Boolean = int32(0x00000069)
		.field static public literal valuetype Microsoft.JScript.JSToken Break = int32(0x00000006)
		.field static public literal valuetype Microsoft.JScript.JSToken Byte = int32(0x0000006A)
		.field static public literal valuetype Microsoft.JScript.JSToken Case = int32(0x00000054)
		.field static public literal valuetype Microsoft.JScript.JSToken Catch = int32(0x00000055)
		.field static public literal valuetype Microsoft.JScript.JSToken Char = int32(0x0000006B)
		.field static public literal valuetype Microsoft.JScript.JSToken Class = int32(0x00000018)
		.field static public literal valuetype Microsoft.JScript.JSToken Colon = int32(0x00000052)
		.field static public literal valuetype Microsoft.JScript.JSToken Comma = int32(0x00000053)
		.field static public literal valuetype Microsoft.JScript.JSToken Comment = int32(0x00000066)
		.field static public literal valuetype Microsoft.JScript.JSToken ConditionalIf = int32(0x00000051)
		.field static public literal valuetype Microsoft.JScript.JSToken Const = int32(0x00000017)
		.field static public literal valuetype Microsoft.JScript.JSToken Continue = int32(0x00000005)
		.field static public literal valuetype Microsoft.JScript.JSToken Debugger = int32(0x00000056)
		.field static public literal valuetype Microsoft.JScript.JSToken Decimal = int32(0x0000006C)
		.field static public literal valuetype Microsoft.JScript.JSToken Decrement = int32(0x0000002D)
		.field static public literal valuetype Microsoft.JScript.JSToken Default = int32(0x00000057)
		.field static public literal valuetype Microsoft.JScript.JSToken Delete = int32(0x00000029)
		.field static public literal valuetype Microsoft.JScript.JSToken Divide = int32(0x00000041)
		.field static public literal valuetype Microsoft.JScript.JSToken DivideAssign = int32(0x00000049)
		.field static public literal valuetype Microsoft.JScript.JSToken Do = int32(0x00000003)
		.field static public literal valuetype Microsoft.JScript.JSToken Double = int32(0x0000006D)
		.field static public literal valuetype Microsoft.JScript.JSToken DoubleColon = int32(0x0000006E)
		.field static public literal valuetype Microsoft.JScript.JSToken Else = int32(0x00000058)
		.field static public literal valuetype Microsoft.JScript.JSToken EndOfFile = int32(0x00000000)
		.field static public literal valuetype Microsoft.JScript.JSToken EndOfLine = int32(0x00000084)
		.field static public literal valuetype Microsoft.JScript.JSToken Ensure = int32(0x00000070)
		.field static public literal valuetype Microsoft.JScript.JSToken Enum = int32(0x0000006F)
		.field static public literal valuetype Microsoft.JScript.JSToken Equal = int32(0x00000035)
		.field static public literal valuetype Microsoft.JScript.JSToken Event = int32(0x00000015)
		.field static public literal valuetype Microsoft.JScript.JSToken Export = int32(0x00000059)
		.field static public literal valuetype Microsoft.JScript.JSToken Extends = int32(0x0000005A)
		.field static public literal valuetype Microsoft.JScript.JSToken False = int32(0x0000001E)
		.field static public literal valuetype Microsoft.JScript.JSToken Final = int32(0x00000014)
		.field static public literal valuetype Microsoft.JScript.JSToken Finally = int32(0x0000005B)
		.field static public literal valuetype Microsoft.JScript.JSToken FirstBinaryOp = int32(0x0000002E)
		.field static public literal valuetype Microsoft.JScript.JSToken FirstOp = int32(0x00000027)
		.field static public literal valuetype Microsoft.JScript.JSToken Float = int32(0x00000071)
		.field static public literal valuetype Microsoft.JScript.JSToken For = int32(0x00000002)
		.field static public literal valuetype Microsoft.JScript.JSToken Function = int32(0x00000019)
		.field static public literal valuetype Microsoft.JScript.JSToken Get = int32(0x0000005C)
		.field static public literal valuetype Microsoft.JScript.JSToken Goto = int32(0x00000072)
		.field static public literal valuetype Microsoft.JScript.JSToken GreaterThan = int32(0x00000039)
		.field static public literal valuetype Microsoft.JScript.JSToken GreaterThanEqual = int32(0x0000003C)
		.field static public literal valuetype Microsoft.JScript.JSToken Identifier = int32(0x00000020)
		.field static public literal valuetype Microsoft.JScript.JSToken If = int32(0x00000001)
		.field static public literal valuetype Microsoft.JScript.JSToken Implements = int32(0x0000005D)
		.field static public literal valuetype Microsoft.JScript.JSToken Import = int32(0x00000008)
		.field static public literal valuetype Microsoft.JScript.JSToken In = int32(0x00000044)
		.field static public literal valuetype Microsoft.JScript.JSToken Increment = int32(0x0000002C)
		.field static public literal valuetype Microsoft.JScript.JSToken Instanceof = int32(0x00000043)
		.field static public literal valuetype Microsoft.JScript.JSToken Int = int32(0x00000073)
		.field static public literal valuetype Microsoft.JScript.JSToken IntegerLiteral = int32(0x00000022)
		.field static public literal valuetype Microsoft.JScript.JSToken Interface = int32(0x0000005E)
		.field static public literal valuetype Microsoft.JScript.JSToken Internal = int32(0x0000000E)
		.field static public literal valuetype Microsoft.JScript.JSToken Invariant = int32(0x00000074)
		.field static public literal valuetype Microsoft.JScript.JSToken LastAssign = int32(0x00000050)
		.field static public literal valuetype Microsoft.JScript.JSToken LastBinaryOp = int32(0x00000050)
		.field static public literal valuetype Microsoft.JScript.JSToken LastOp = int32(0x00000053)
		.field static public literal valuetype Microsoft.JScript.JSToken LastPPOperator = int32(0x00000042)
		.field static public literal valuetype Microsoft.JScript.JSToken LeftBracket = int32(0x00000025)
		.field static public literal valuetype Microsoft.JScript.JSToken LeftCurly = int32(0x0000001A)
		.field static public literal valuetype Microsoft.JScript.JSToken LeftParen = int32(0x00000024)
		.field static public literal valuetype Microsoft.JScript.JSToken LeftShift = int32(0x0000003D)
		.field static public literal valuetype Microsoft.JScript.JSToken LeftShiftAssign = int32(0x0000004E)
		.field static public literal valuetype Microsoft.JScript.JSToken LessThan = int32(0x0000003A)
		.field static public literal valuetype Microsoft.JScript.JSToken LessThanEqual = int32(0x0000003B)
		.field static public literal valuetype Microsoft.JScript.JSToken LogicalAnd = int32(0x00000031)
		.field static public literal valuetype Microsoft.JScript.JSToken LogicalNot = int32(0x00000027)
		.field static public literal valuetype Microsoft.JScript.JSToken LogicalOr = int32(0x00000030)
		.field static public literal valuetype Microsoft.JScript.JSToken Long = int32(0x00000075)
		.field static public literal valuetype Microsoft.JScript.JSToken Minus = int32(0x0000002F)
		.field static public literal valuetype Microsoft.JScript.JSToken MinusAssign = int32(0x00000047)
		.field static public literal valuetype Microsoft.JScript.JSToken Modulo = int32(0x00000042)
		.field static public literal valuetype Microsoft.JScript.JSToken ModuloAssign = int32(0x0000004D)
		.field static public literal valuetype Microsoft.JScript.JSToken Multiply = int32(0x00000040)
		.field static public literal valuetype Microsoft.JScript.JSToken MultiplyAssign = int32(0x00000048)
		.field static public literal valuetype Microsoft.JScript.JSToken Namespace = int32(0x00000076)
		.field static public literal valuetype Microsoft.JScript.JSToken Native = int32(0x00000077)
		.field static public literal valuetype Microsoft.JScript.JSToken New = int32(0x0000005F)
		.field static public literal valuetype Microsoft.JScript.JSToken None = int32(0xFFFFFFFF)
		.field static public literal valuetype Microsoft.JScript.JSToken NotEqual = int32(0x00000036)
		.field static public literal valuetype Microsoft.JScript.JSToken Null = int32(0x0000001C)
		.field static public literal valuetype Microsoft.JScript.JSToken NumericLiteral = int32(0x00000023)
		.field static public literal valuetype Microsoft.JScript.JSToken Package = int32(0x0000000D)
		.field static public literal valuetype Microsoft.JScript.JSToken ParamArray = int32(0x0000007E)
		.field static public literal valuetype Microsoft.JScript.JSToken Plus = int32(0x0000002E)
		.field static public literal valuetype Microsoft.JScript.JSToken PlusAssign = int32(0x00000046)
		.field static public literal valuetype Microsoft.JScript.JSToken PreProcessDirective = int32(0x00000085)
		.field static public literal valuetype Microsoft.JScript.JSToken PreProcessorConstant = int32(0x00000065)
		.field static public literal valuetype Microsoft.JScript.JSToken Private = int32(0x00000012)
		.field static public literal valuetype Microsoft.JScript.JSToken Protected = int32(0x00000013)
		.field static public literal valuetype Microsoft.JScript.JSToken Public = int32(0x00000010)
		.field static public literal valuetype Microsoft.JScript.JSToken Require = int32(0x00000078)
		.field static public literal valuetype Microsoft.JScript.JSToken Return = int32(0x00000007)
		.field static public literal valuetype Microsoft.JScript.JSToken RightBracket = int32(0x00000064)
		.field static public literal valuetype Microsoft.JScript.JSToken RightCurly = int32(0x00000063)
		.field static public literal valuetype Microsoft.JScript.JSToken RightParen = int32(0x00000062)
		.field static public literal valuetype Microsoft.JScript.JSToken RightShift = int32(0x0000003E)
		.field static public literal valuetype Microsoft.JScript.JSToken RightShiftAssign = int32(0x0000004F)
		.field static public literal valuetype Microsoft.JScript.JSToken Sbyte = int32(0x00000079)
		.field static public literal valuetype Microsoft.JScript.JSToken Semicolon = int32(0x0000001B)
		.field static public literal valuetype Microsoft.JScript.JSToken Set = int32(0x00000060)
		.field static public literal valuetype Microsoft.JScript.JSToken Short = int32(0x0000007A)
		.field static public literal valuetype Microsoft.JScript.JSToken Static = int32(0x00000011)
		.field static public literal valuetype Microsoft.JScript.JSToken StrictEqual = int32(0x00000037)
		.field static public literal valuetype Microsoft.JScript.JSToken StrictNotEqual = int32(0x00000038)
		.field static public literal valuetype Microsoft.JScript.JSToken StringLiteral = int32(0x00000021)
		.field static public literal valuetype Microsoft.JScript.JSToken Super = int32(0x00000061)
		.field static public literal valuetype Microsoft.JScript.JSToken Switch = int32(0x0000000A)
		.field static public literal valuetype Microsoft.JScript.JSToken Synchronized = int32(0x0000007B)
		.field static public literal valuetype Microsoft.JScript.JSToken This = int32(0x0000001F)
		.field static public literal valuetype Microsoft.JScript.JSToken Throw = int32(0x0000000B)
		.field static public literal valuetype Microsoft.JScript.JSToken Throws = int32(0x0000007D)
		.field static public literal valuetype Microsoft.JScript.JSToken Transient = int32(0x0000007C)
		.field static public literal valuetype Microsoft.JScript.JSToken True = int32(0x0000001D)
		.field static public literal valuetype Microsoft.JScript.JSToken Try = int32(0x0000000C)
		.field static public literal valuetype Microsoft.JScript.JSToken Typeof = int32(0x0000002B)
		.field static public literal valuetype Microsoft.JScript.JSToken Uint = int32(0x00000081)
		.field static public literal valuetype Microsoft.JScript.JSToken Ulong = int32(0x00000082)
		.field static public literal valuetype Microsoft.JScript.JSToken UnsignedRightShift = int32(0x0000003F)
		.field static public literal valuetype Microsoft.JScript.JSToken UnsignedRightShiftAssign = int32(0x00000050)
		.field static public literal valuetype Microsoft.JScript.JSToken UnterminatedComment = int32(0x00000067)
		.field static public literal valuetype Microsoft.JScript.JSToken Use = int32(0x00000083)
		.field static public literal valuetype Microsoft.JScript.JSToken Ushort = int32(0x00000080)
		.field static public literal valuetype Microsoft.JScript.JSToken Var = int32(0x00000016)
		.field static public literal valuetype Microsoft.JScript.JSToken Void = int32(0x0000002A)
		.field static public literal valuetype Microsoft.JScript.JSToken Volatile = int32(0x0000007F)
		.field static public literal valuetype Microsoft.JScript.JSToken While = int32(0x00000004)
		.field static public literal valuetype Microsoft.JScript.JSToken With = int32(0x00000009)
	}
	.class public abstract JSVariableField
		extends Microsoft.JScript.JSField
	{
		.method public virtual hidebysig specialname 
			instance valuetype [mscorlib]System.Reflection.FieldAttributes get_Attributes()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class [mscorlib]System.Type get_DeclaringType()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class [mscorlib]System.Type get_FieldType()
		{
			ret
		}
		.method public virtual hidebysig 
			instance object[] GetCustomAttributes(bool inherit)
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.property instance valuetype [mscorlib]System.Reflection.FieldAttributes Attributes()
		{
			.get instance valuetype [mscorlib]System.Reflection.FieldAttributes Microsoft.JScript.JSVariableField::get_Attributes()
		}
		.property instance class [mscorlib]System.Type DeclaringType()
		{
			.get instance class [mscorlib]System.Type Microsoft.JScript.JSVariableField::get_DeclaringType()
		}
		.property instance class [mscorlib]System.Type FieldType()
		{
			.get instance class [mscorlib]System.Type Microsoft.JScript.JSVariableField::get_FieldType()
		}
		.property instance string Name()
		{
			.get instance string Microsoft.JScript.JSVariableField::get_Name()
		}
	}
	.class public sealed JScriptCodeProvider
		extends [System]System.CodeDom.Compiler.CodeDomProvider
	{
		.permissionset linkcheck = (00)
		.custom instance void [System]System.ComponentModel.DesignerCategoryAttribute::.ctor(string) = (01 00 04 63 6F 64 65 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [System]System.CodeDom.Compiler.ICodeGenerator CreateGenerator()
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [System]System.CodeDom.Compiler.ICodeCompiler CreateCompiler()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance string get_FileExtension()
		{
			ret
		}
		.property instance string FileExtension()
		{
			.get instance string Microsoft.JScript.JScriptCodeProvider::get_FileExtension()
		}
	}
	.class public serializable JScriptException
		extends [mscorlib]System.ApplicationException
		implements Microsoft.JScript.IVsaFullErrorInfo, [Microsoft.Vsa]Microsoft.Vsa.IVsaError
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string m)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string m, class [mscorlib]System.Exception e)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(valuetype Microsoft.JScript.JSError errorNumber)
		{
			ret
		}
		.method family hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Runtime.Serialization.SerializationInfo info, valuetype [mscorlib]System.Runtime.Serialization.StreamingContext context)
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance string get_SourceMoniker()
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance int32 get_StartColumn()
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_Column()
		{
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance string Microsoft.Vsa.IVsaError.get_Description()
		{
			.permissionset linkcheck = (00)
			.override [Microsoft.Vsa]Microsoft.Vsa.IVsaError::get_Description
			ret
		}
		.method public hidebysig specialname 
			instance string get_Description()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance int32 get_EndLine()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance int32 get_EndColumn()
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance int32 Microsoft.Vsa.IVsaError.get_Number()
		{
			.permissionset linkcheck = (00)
			.override [Microsoft.Vsa]Microsoft.Vsa.IVsaError::get_Number
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_Number()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ErrorNumber()
		{
			ret
		}
		.method public virtual hidebysig 
			instance void GetObjectData(class [mscorlib]System.Runtime.Serialization.SerializationInfo info, valuetype [mscorlib]System.Runtime.Serialization.StreamingContext context)
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance int32 get_Line()
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance string get_LineText()
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public virtual hidebysig specialname 
			instance string get_Message()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance int32 get_Severity()
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance class [Microsoft.Vsa]Microsoft.Vsa.IVsaItem get_SourceItem()
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public virtual hidebysig specialname 
			instance string get_StackTrace()
		{
			ret
		}
		.property instance int32 Column()
		{
			.get instance int32 Microsoft.JScript.JScriptException::get_Column()
		}
		.property instance string Description()
		{
			.get instance string Microsoft.JScript.JScriptException::get_Description()
		}
		.property instance int32 EndColumn()
		{
			.get instance int32 Microsoft.JScript.JScriptException::get_EndColumn()
		}
		.property instance int32 EndLine()
		{
			.get instance int32 Microsoft.JScript.JScriptException::get_EndLine()
		}
		.property instance int32 ErrorNumber()
		{
			.get instance int32 Microsoft.JScript.JScriptException::get_ErrorNumber()
		}
		.property instance int32 Line()
		{
			.get instance int32 Microsoft.JScript.JScriptException::get_Line()
		}
		.property instance string LineText()
		{
			.get instance string Microsoft.JScript.JScriptException::get_LineText()
		}
		.property instance string Message()
		{
			.get instance string Microsoft.JScript.JScriptException::get_Message()
		}
		.property instance string Microsoft.Vsa.IVsaError.Description()
		{
			.get instance string Microsoft.JScript.JScriptException::Microsoft.Vsa.IVsaError.get_Description()
		}
		.property instance int32 Microsoft.Vsa.IVsaError.Number()
		{
			.get instance int32 Microsoft.JScript.JScriptException::Microsoft.Vsa.IVsaError.get_Number()
		}
		.property instance int32 Number()
		{
			.get instance int32 Microsoft.JScript.JScriptException::get_Number()
		}
		.property instance int32 Severity()
		{
			.get instance int32 Microsoft.JScript.JScriptException::get_Severity()
		}
		.property instance class [Microsoft.Vsa]Microsoft.Vsa.IVsaItem SourceItem()
		{
			.get instance class [Microsoft.Vsa]Microsoft.Vsa.IVsaItem Microsoft.JScript.JScriptException::get_SourceItem()
		}
		.property instance string SourceMoniker()
		{
			.get instance string Microsoft.JScript.JScriptException::get_SourceMoniker()
		}
		.property instance string StackTrace()
		{
			.get instance string Microsoft.JScript.JScriptException::get_StackTrace()
		}
		.property instance int32 StartColumn()
		{
			.get instance int32 Microsoft.JScript.JScriptException::get_StartColumn()
		}
	}
	.class public sealed LateBinding
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance void .ctor(string name)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string name, object obj)
		{
			ret
		}
		.method public hidebysig 
			instance object Call(object[] arguments, bool construct, bool brackets, class Microsoft.JScript.Vsa.VsaEngine engine)
		{
			ret
		}
		.method public static hidebysig 
			object CallValue(object thisob, object val, object[] arguments, bool construct, bool brackets, class Microsoft.JScript.Vsa.VsaEngine engine)
		{
			ret
		}
		.method public static hidebysig 
			object CallValue2(object val, object thisob, object[] arguments, bool construct, bool brackets, class Microsoft.JScript.Vsa.VsaEngine engine)
		{
			ret
		}
		.method public hidebysig 
			instance bool Delete()
		{
			ret
		}
		.method public static hidebysig 
			bool DeleteMember(object obj, string name)
		{
			ret
		}
		.method public hidebysig 
			instance object GetNonMissingValue()
		{
			ret
		}
		.method public hidebysig 
			instance object GetValue2()
		{
			ret
		}
		.method public static hidebysig 
			void SetIndexedPropertyValueStatic(object obj, object[] arguments, object 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void SetValue(object 'value')
		{
			ret
		}
		.field public object obj
	}
	.class public sealed LenientArrayPrototype
		extends Microsoft.JScript.ArrayPrototype
	{
		.field public object concat
		.field public object constructor
		.field public object join
		.field public object 'pop'
		.field public object push
		.field public object reverse
		.field public object shift
		.field public object slice
		.field public object sort
		.field public object splice
		.field public object toLocaleString
		.field public object toString
		.field public object unshift
	}
	.class public sealed LenientBooleanPrototype
		extends Microsoft.JScript.BooleanPrototype
	{
		.field public object constructor
		.field public object toString
		.field public object valueOf
	}
	.class public sealed LenientDateConstructor
		extends Microsoft.JScript.DateConstructor
	{
		.field public object UTC
		.field public object parse
	}
	.class public sealed LenientDatePrototype
		extends Microsoft.JScript.DatePrototype
	{
		.field public object constructor
		.field public object getDate
		.field public object getDay
		.field public object getFullYear
		.field public object getHours
		.field public object getMilliseconds
		.field public object getMinutes
		.field public object getMonth
		.field public object getSeconds
		.field public object getTime
		.field public object getTimezoneOffset
		.field public object getUTCDate
		.field public object getUTCDay
		.field public object getUTCFullYear
		.field public object getUTCHours
		.field public object getUTCMilliseconds
		.field public object getUTCMinutes
		.field public object getUTCMonth
		.field public object getUTCSeconds
		.field public object getVarDate
		.field public object getYear
		.field public object setDate
		.field public object setFullYear
		.field public object setHours
		.field public object setMilliseconds
		.field public object setMinutes
		.field public object setMonth
		.field public object setSeconds
		.field public object setTime
		.field public object setUTCDate
		.field public object setUTCFullYear
		.field public object setUTCHours
		.field public object setUTCMilliseconds
		.field public object setUTCMinutes
		.field public object setUTCMonth
		.field public object setUTCSeconds
		.field public object setYear
		.field public object toDateString
		.field public object toGMTString
		.field public object toLocaleDateString
		.field public object toLocaleString
		.field public object toLocaleTimeString
		.field public object toString
		.field public object toTimeString
		.field public object toUTCString
		.field public object valueOf
	}
	.class public sealed LenientEnumeratorPrototype
		extends Microsoft.JScript.EnumeratorPrototype
	{
		.field public object atEnd
		.field public object constructor
		.field public object item
		.field public object moveFirst
		.field public object moveNext
	}
	.class public sealed LenientErrorPrototype
		extends Microsoft.JScript.ErrorPrototype
	{
		.field public object constructor
		.field public object name
		.field public object toString
	}
	.class public sealed LenientFunctionPrototype
		extends Microsoft.JScript.FunctionPrototype
	{
		.field public object apply
		.field public object 'call'
		.field public object constructor
		.field public object toString
	}
	.class public sealed LenientGlobalObject
		extends Microsoft.JScript.GlobalObject
	{
		.method public hidebysig specialname 
			instance object get_ActiveXObject()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ActiveXObject(object 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance object get_Array()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Array(object 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance object get_Boolean()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Boolean(object 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance object get_Date()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Date(object 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance object get_Enumerator()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Enumerator(object 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance object get_Error()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Error(object 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance object get_EvalError()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_EvalError(object 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance object get_Function()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Function(object 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance object get_Math()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Math(object 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance object get_Number()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Number(object 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance object get_Object()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Object(object 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance object get_RangeError()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_RangeError(object 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance object get_ReferenceError()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ReferenceError(object 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance object get_RegExp()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_RegExp(object 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance object get_String()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_String(object 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance object get_SyntaxError()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_SyntaxError(object 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance object get_TypeError()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_TypeError(object 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance object get_URIError()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_URIError(object 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance object get_VBArray()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_VBArray(object 'value')
		{
			ret
		}
		.field public object GetObject
		.field public object Infinity
		.field public object NaN
		.field public object ScriptEngine
		.field public object ScriptEngineBuildVersion
		.field public object ScriptEngineMajorVersion
		.field public object ScriptEngineMinorVersion
		.field public object boolean
		.field public object byte
		.field public object 'char'
		.field public object 'decimal'
		.field public object decodeURI
		.field public object decodeURIComponent
		.field public object double
		.field public object encodeURI
		.field public object encodeURIComponent
		.field public object escape
		.field public object eval
		.field public object 'float'
		.field public object 'int'
		.field public object isFinite
		.field public object isNaN
		.field public object long
		.field public object parseFloat
		.field public object parseInt
		.field public object sbyte
		.field public object short
		.field public object 'uint'
		.field public object ulong
		.field public object undefined
		.field public object unescape
		.field public object ushort
		.field public object 'void'
		.property instance object ActiveXObject()
		{
			.get instance object Microsoft.JScript.LenientGlobalObject::get_ActiveXObject()
			.set instance void Microsoft.JScript.LenientGlobalObject::set_ActiveXObject(object)
		}
		.property instance object Array()
		{
			.get instance object Microsoft.JScript.LenientGlobalObject::get_Array()
			.set instance void Microsoft.JScript.LenientGlobalObject::set_Array(object)
		}
		.property instance object Boolean()
		{
			.get instance object Microsoft.JScript.LenientGlobalObject::get_Boolean()
			.set instance void Microsoft.JScript.LenientGlobalObject::set_Boolean(object)
		}
		.property instance object Date()
		{
			.get instance object Microsoft.JScript.LenientGlobalObject::get_Date()
			.set instance void Microsoft.JScript.LenientGlobalObject::set_Date(object)
		}
		.property instance object Enumerator()
		{
			.get instance object Microsoft.JScript.LenientGlobalObject::get_Enumerator()
			.set instance void Microsoft.JScript.LenientGlobalObject::set_Enumerator(object)
		}
		.property instance object Error()
		{
			.get instance object Microsoft.JScript.LenientGlobalObject::get_Error()
			.set instance void Microsoft.JScript.LenientGlobalObject::set_Error(object)
		}
		.property instance object EvalError()
		{
			.get instance object Microsoft.JScript.LenientGlobalObject::get_EvalError()
			.set instance void Microsoft.JScript.LenientGlobalObject::set_EvalError(object)
		}
		.property instance object Function()
		{
			.get instance object Microsoft.JScript.LenientGlobalObject::get_Function()
			.set instance void Microsoft.JScript.LenientGlobalObject::set_Function(object)
		}
		.property instance object Math()
		{
			.get instance object Microsoft.JScript.LenientGlobalObject::get_Math()
			.set instance void Microsoft.JScript.LenientGlobalObject::set_Math(object)
		}
		.property instance object Number()
		{
			.get instance object Microsoft.JScript.LenientGlobalObject::get_Number()
			.set instance void Microsoft.JScript.LenientGlobalObject::set_Number(object)
		}
		.property instance object Object()
		{
			.get instance object Microsoft.JScript.LenientGlobalObject::get_Object()
			.set instance void Microsoft.JScript.LenientGlobalObject::set_Object(object)
		}
		.property instance object RangeError()
		{
			.get instance object Microsoft.JScript.LenientGlobalObject::get_RangeError()
			.set instance void Microsoft.JScript.LenientGlobalObject::set_RangeError(object)
		}
		.property instance object ReferenceError()
		{
			.get instance object Microsoft.JScript.LenientGlobalObject::get_ReferenceError()
			.set instance void Microsoft.JScript.LenientGlobalObject::set_ReferenceError(object)
		}
		.property instance object RegExp()
		{
			.get instance object Microsoft.JScript.LenientGlobalObject::get_RegExp()
			.set instance void Microsoft.JScript.LenientGlobalObject::set_RegExp(object)
		}
		.property instance object String()
		{
			.get instance object Microsoft.JScript.LenientGlobalObject::get_String()
			.set instance void Microsoft.JScript.LenientGlobalObject::set_String(object)
		}
		.property instance object SyntaxError()
		{
			.get instance object Microsoft.JScript.LenientGlobalObject::get_SyntaxError()
			.set instance void Microsoft.JScript.LenientGlobalObject::set_SyntaxError(object)
		}
		.property instance object TypeError()
		{
			.get instance object Microsoft.JScript.LenientGlobalObject::get_TypeError()
			.set instance void Microsoft.JScript.LenientGlobalObject::set_TypeError(object)
		}
		.property instance object URIError()
		{
			.get instance object Microsoft.JScript.LenientGlobalObject::get_URIError()
			.set instance void Microsoft.JScript.LenientGlobalObject::set_URIError(object)
		}
		.property instance object VBArray()
		{
			.get instance object Microsoft.JScript.LenientGlobalObject::get_VBArray()
			.set instance void Microsoft.JScript.LenientGlobalObject::set_VBArray(object)
		}
	}
	.class public sealed LenientMathObject
		extends Microsoft.JScript.MathObject
	{
		.field static public literal float64 E = float64(0x4005BF0A8B145769)
		.field static public literal float64 'LN10' = float64(0x40026BB1BBB55516)
		.field static public literal float64 LN2 = float64(0x3FE62E42FEFA39EF)
		.field static public literal float64 'LOG10E' = float64(0x3FDBCB7B1526E50E)
		.field static public literal float64 'LOG2E' = float64(0x3FF71547652B82FE)
		.field static public literal float64 PI = float64(0x400921FB54442D18)
		.field static public literal float64 'SQRT1_2' = float64(0x3FE6A09E667F3BCD)
		.field static public literal float64 'SQRT2' = float64(0x3FF6A09E667F3BCD)
		.field public object abs
		.field public object acos
		.field public object asin
		.field public object atan
		.field public object atan2
		.field public object ceil
		.field public object cos
		.field public object exp
		.field public object floor
		.field public object log
		.field public object max
		.field public object min
		.field public object pow
		.field public object random
		.field public object round
		.field public object sin
		.field public object sqrt
		.field public object tan
	}
	.class public sealed LenientNumberPrototype
		extends Microsoft.JScript.NumberPrototype
	{
		.field public object constructor
		.field public object toExponential
		.field public object toFixed
		.field public object toLocaleString
		.field public object toPrecision
		.field public object toString
		.field public object valueOf
	}
	.class public LenientObjectPrototype
		extends Microsoft.JScript.ObjectPrototype
	{
		.field public object constructor
		.field public object hasOwnProperty
		.field public object isPrototypeOf
		.field public object propertyIsEnumerable
		.field public object toLocaleString
		.field public object toString
		.field public object valueOf
	}
	.class public sealed LenientRegExpPrototype
		extends Microsoft.JScript.RegExpPrototype
	{
		.field public object compile
		.field public object constructor
		.field public object exec
		.field public object test
		.field public object toString
	}
	.class public LenientStringConstructor
		extends Microsoft.JScript.StringConstructor
	{
		.field public object fromCharCode
	}
	.class public sealed LenientStringPrototype
		extends Microsoft.JScript.StringPrototype
	{
		.field public object anchor
		.field public object big
		.field public object blink
		.field public object bold
		.field public object charAt
		.field public object charCodeAt
		.field public object concat
		.field public object constructor
		.field public object 'fixed'
		.field public object fontcolor
		.field public object fontsize
		.field public object indexOf
		.field public object italics
		.field public object lastIndexOf
		.field public object link
		.field public object localeCompare
		.field public object match
		.field public object replace
		.field public object search
		.field public object slice
		.field public object small
		.field public object split
		.field public object strike
		.field public object 'sub'
		.field public object substr
		.field public object substring
		.field public object sup
		.field public object toLocaleLowerCase
		.field public object toLocaleUpperCase
		.field public object toLowerCase
		.field public object toString
		.field public object toUpperCase
		.field public object valueOf
	}
	.class public sealed LenientVBArrayPrototype
		extends Microsoft.JScript.VBArrayPrototype
	{
		.field public object constructor
		.field public object dimensions
		.field public object getItem
		.field public object lbound
		.field public object toArray
		.field public object ubound
	}
	.class public MathObject
		extends Microsoft.JScript.JSObject
	{
		.method public static hidebysig 
			float64 abs(float64 d)
		{
			ret
		}
		.method public static hidebysig 
			float64 acos(float64 x)
		{
			ret
		}
		.method public static hidebysig 
			float64 asin(float64 x)
		{
			ret
		}
		.method public static hidebysig 
			float64 atan(float64 x)
		{
			ret
		}
		.method public static hidebysig 
			float64 atan2(float64 dy, float64 dx)
		{
			ret
		}
		.method public static hidebysig 
			float64 ceil(float64 x)
		{
			ret
		}
		.method public static hidebysig 
			float64 cos(float64 x)
		{
			ret
		}
		.method public static hidebysig 
			float64 exp(float64 x)
		{
			ret
		}
		.method public static hidebysig 
			float64 floor(float64 x)
		{
			ret
		}
		.method public static hidebysig 
			float64 log(float64 x)
		{
			ret
		}
		.method public static hidebysig 
			float64 max(object x, object y, object[] args)
		{
			.param [3]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = (01 00 00 00)
			ret
		}
		.method public static hidebysig 
			float64 min(object x, object y, object[] args)
		{
			.param [3]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = (01 00 00 00)
			ret
		}
		.method public static hidebysig 
			float64 pow(float64 dx, float64 dy)
		{
			ret
		}
		.method public static hidebysig 
			float64 random()
		{
			ret
		}
		.method public static hidebysig 
			float64 round(float64 d)
		{
			ret
		}
		.method public static hidebysig 
			float64 sin(float64 x)
		{
			ret
		}
		.method public static hidebysig 
			float64 sqrt(float64 x)
		{
			ret
		}
		.method public static hidebysig 
			float64 tan(float64 x)
		{
			ret
		}
		.field static public literal float64 E = float64(0x4005BF0A8B145769)
		.field static public literal float64 'LN10' = float64(0x40026BB1BBB55516)
		.field static public literal float64 LN2 = float64(0x3FE62E42FEFA39EF)
		.field static public literal float64 'LOG10E' = float64(0x3FDBCB7B1526E50E)
		.field static public literal float64 'LOG2E' = float64(0x3FF71547652B82FE)
		.field static public literal float64 PI = float64(0x400921FB54442D18)
		.field static public literal float64 'SQRT1_2' = float64(0x3FE6A09E667F3BCD)
		.field static public literal float64 'SQRT2' = float64(0x3FF6A09E667F3BCD)
	}
	.class public sealed MemberInfoList
		extends [mscorlib]System.Object
	{
		.custom instance void [mscorlib]System.Reflection.DefaultMemberAttribute::.ctor(string) = (01 00 04 49 74 65 6D 00 00)
	}
	.class public abstract MethodInvoker
		extends [mscorlib]System.Object
	{
		.method public virtual hidebysig newslot abstract 
			instance object Invoke(object thisob, object[] parameters)
		{
		}
		.method family hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public sealed Missing
		extends [mscorlib]System.Object
	{
		.field static public initonly class Microsoft.JScript.Missing Value
	}
	.class public sealed Namespace
		extends [mscorlib]System.Object
	{
		.method public static hidebysig 
			class Microsoft.JScript.Namespace GetNamespace(string name, class Microsoft.JScript.Vsa.VsaEngine engine)
		{
			ret
		}
	}
	.class public serializable NoContextException
		extends [mscorlib]System.ApplicationException
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string m)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string m, class [mscorlib]System.Exception e)
		{
			ret
		}
		.method family hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Runtime.Serialization.SerializationInfo s, valuetype [mscorlib]System.Runtime.Serialization.StreamingContext c)
		{
			ret
		}
	}
	.class public NotRecommended
		extends [mscorlib]System.Attribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = (01 00 40 01 00 00 00 00)
		.method public hidebysig specialname 
			instance void .ctor(string message)
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsError()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Message()
		{
			ret
		}
		.property instance bool IsError()
		{
			.get instance bool Microsoft.JScript.NotRecommended::get_IsError()
		}
		.property instance string Message()
		{
			.get instance string Microsoft.JScript.NotRecommended::get_Message()
		}
	}
	.class public NumberConstructor
		extends Microsoft.JScript.ScriptFunction
	{
		.method public hidebysig 
			instance class Microsoft.JScript.NumberObject CreateInstance(object[] args)
		{
			.param [1]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = (01 00 00 00)
			ret
		}
		.method public hidebysig 
			instance float64 Invoke(object arg)
		{
			ret
		}
		.field static public literal float64 'MAX_VALUE' = float64(0x7FEFFFFFFFFFFFFF)
		.field static public literal float64 'MIN_VALUE' = float64(0x1)
		.field static public literal float64 'NEGATIVE_INFINITY' = float64(0xFFF0000000000000)
		.field static public literal float64 NaN = float64(0xFFF8000000000000)
		.field static public literal float64 'POSITIVE_INFINITY' = float64(0x7FF0000000000000)
	}
	.class public NumberObject
		extends Microsoft.JScript.JSObject
	{
		.method family hidebysig specialname 
			instance void .ctor(class Microsoft.JScript.ScriptObject parent, object 'value')
		{
			ret
		}
		.method public hidebysig 
			instance class [mscorlib]System.Type GetType()
		{
			ret
		}
	}
	.class public NumberPrototype
		extends Microsoft.JScript.NumberObject
	{
		.method public static hidebysig specialname 
			class Microsoft.JScript.NumberConstructor get_constructor()
		{
			ret
		}
		.method public static hidebysig 
			string toExponential(object thisob, object fractionDigits)
		{
			ret
		}
		.method public static hidebysig 
			string toFixed(object thisob, float64 fractionDigits)
		{
			ret
		}
		.method public static hidebysig 
			string toLocaleString(object thisob)
		{
			ret
		}
		.method public static hidebysig 
			string toPrecision(object thisob, object precision)
		{
			ret
		}
		.method public static hidebysig 
			string toString(object thisob, object radix)
		{
			ret
		}
		.method public static hidebysig 
			object valueOf(object thisob)
		{
			ret
		}
		.property class Microsoft.JScript.NumberConstructor constructor()
		{
			.get class Microsoft.JScript.NumberConstructor Microsoft.JScript.NumberPrototype::get_constructor()
		}
	}
	.class public sealed NumericBinary
		extends Microsoft.JScript.BinaryOp
	{
		.method public hidebysig specialname 
			instance void .ctor(int32 operatorTok)
		{
			ret
		}
		.method public hidebysig 
			instance object EvaluateNumericBinary(object v1, object v2)
		{
			ret
		}
		.method public static hidebysig 
			object DoOp(object v1, object v2, valuetype Microsoft.JScript.JSToken operatorTok)
		{
			ret
		}
	}
	.class public sealed NumericUnary
		extends Microsoft.JScript.UnaryOp
	{
		.method public hidebysig specialname 
			instance void .ctor(int32 operatorTok)
		{
			ret
		}
		.method public hidebysig 
			instance object EvaluateUnary(object v)
		{
			ret
		}
	}
	.class public sealed ObjectConstructor
		extends Microsoft.JScript.ScriptFunction
	{
		.method public hidebysig 
			instance class Microsoft.JScript.JSObject ConstructObject()
		{
			ret
		}
		.method public hidebysig 
			instance object CreateInstance(object[] args)
		{
			.param [1]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = (01 00 00 00)
			ret
		}
		.method public hidebysig 
			instance object Invoke(object[] args)
		{
			.param [1]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = (01 00 00 00)
			ret
		}
	}
	.class public ObjectPrototype
		extends Microsoft.JScript.JSObject
	{
		.method public static hidebysig specialname 
			class Microsoft.JScript.ObjectConstructor get_constructor()
		{
			ret
		}
		.method public static hidebysig 
			bool hasOwnProperty(object thisob, object name)
		{
			ret
		}
		.method public static hidebysig 
			bool isPrototypeOf(object thisob, object ob)
		{
			ret
		}
		.method public static hidebysig 
			bool propertyIsEnumerable(object thisob, object name)
		{
			ret
		}
		.method public static hidebysig 
			string toLocaleString(object thisob)
		{
			ret
		}
		.method public static hidebysig 
			string toString(object thisob)
		{
			ret
		}
		.method public static hidebysig 
			object valueOf(object thisob)
		{
			ret
		}
		.property class Microsoft.JScript.ObjectConstructor constructor()
		{
			.get class Microsoft.JScript.ObjectConstructor Microsoft.JScript.ObjectPrototype::get_constructor()
		}
	}
	.class public Override
		extends [mscorlib]System.Attribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = (01 00 40 01 00 00 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public sealed Package
		extends 'Microsoft.JScript.AST'
	{
		.method public static hidebysig 
			void JScriptPackage(string rootName, class Microsoft.JScript.Vsa.VsaEngine engine)
		{
			ret
		}
	}
	.class public serializable ParserException
		extends [mscorlib]System.Exception
	{
	}
	.class public sealed Plus
		extends Microsoft.JScript.BinaryOp
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig 
			instance object EvaluatePlus(object v1, object v2)
		{
			ret
		}
		.method public static hidebysig 
			object DoOp(object v1, object v2)
		{
			ret
		}
	}
	.class public PostOrPrefixOperator
		extends Microsoft.JScript.UnaryOp
	{
		.method public hidebysig specialname 
			instance void .ctor(int32 operatorTok)
		{
			ret
		}
		.method public hidebysig 
			instance object EvaluatePostOrPrefix(object& v)
		{
			ret
		}
	}
	.class public sealed RangeErrorObject
		extends Microsoft.JScript.ErrorObject
	{
	}
	.class public ReferenceAttribute
		extends [mscorlib]System.Attribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = (01 00 01 00 00 00 00 00)
		.method public hidebysig specialname 
			instance void .ctor(string reference)
		{
			ret
		}
		.field public string reference
	}
	.class public sealed ReferenceErrorObject
		extends Microsoft.JScript.ErrorObject
	{
	}
	.class public sealed RegExpConstructor
		extends Microsoft.JScript.ScriptFunction
	{
		.method public hidebysig 
			instance object Construct(string pattern, bool ignoreCase, bool global, bool multiline)
		{
			ret
		}
		.method public hidebysig 
			instance class Microsoft.JScript.RegExpObject CreateInstance(object[] args)
		{
			.param [1]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = (01 00 00 00)
			ret
		}
		.method public hidebysig 
			instance class Microsoft.JScript.RegExpObject Invoke(object[] args)
		{
			.param [1]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = (01 00 00 00)
			ret
		}
		.method public hidebysig specialname 
			instance object get_index()
		{
			ret
		}
		.method public hidebysig specialname 
			instance object get_input()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_input(object 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance object get_lastIndex()
		{
			ret
		}
		.method public hidebysig specialname 
			instance object get_lastMatch()
		{
			ret
		}
		.method public hidebysig specialname 
			instance object get_lastParen()
		{
			ret
		}
		.method public hidebysig specialname 
			instance object get_leftContext()
		{
			ret
		}
		.method public hidebysig specialname 
			instance object get_rightContext()
		{
			ret
		}
		.property instance object index()
		{
			.get instance object Microsoft.JScript.RegExpConstructor::get_index()
		}
		.property instance object input()
		{
			.get instance object Microsoft.JScript.RegExpConstructor::get_input()
			.set instance void Microsoft.JScript.RegExpConstructor::set_input(object)
		}
		.property instance object lastIndex()
		{
			.get instance object Microsoft.JScript.RegExpConstructor::get_lastIndex()
		}
		.property instance object lastMatch()
		{
			.get instance object Microsoft.JScript.RegExpConstructor::get_lastMatch()
		}
		.property instance object lastParen()
		{
			.get instance object Microsoft.JScript.RegExpConstructor::get_lastParen()
		}
		.property instance object leftContext()
		{
			.get instance object Microsoft.JScript.RegExpConstructor::get_leftContext()
		}
		.property instance object rightContext()
		{
			.get instance object Microsoft.JScript.RegExpConstructor::get_rightContext()
		}
	}
	.class public sealed RegExpMatch
		extends Microsoft.JScript.ArrayObject
	{
	}
	.class public sealed RegExpObject
		extends Microsoft.JScript.JSObject
	{
		.method public virtual hidebysig 
			instance string ToString()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_source()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_ignoreCase()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_global()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_multiline()
		{
			ret
		}
		.method public hidebysig specialname 
			instance object get_lastIndex()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_lastIndex(object 'value')
		{
			ret
		}
		.property instance bool global()
		{
			.get instance bool Microsoft.JScript.RegExpObject::get_global()
		}
		.property instance bool ignoreCase()
		{
			.get instance bool Microsoft.JScript.RegExpObject::get_ignoreCase()
		}
		.property instance object lastIndex()
		{
			.get instance object Microsoft.JScript.RegExpObject::get_lastIndex()
			.set instance void Microsoft.JScript.RegExpObject::set_lastIndex(object)
		}
		.property instance bool multiline()
		{
			.get instance bool Microsoft.JScript.RegExpObject::get_multiline()
		}
		.property instance string source()
		{
			.get instance string Microsoft.JScript.RegExpObject::get_source()
		}
	}
	.class public RegExpPrototype
		extends Microsoft.JScript.JSObject
	{
		.method public static hidebysig 
			class Microsoft.JScript.RegExpObject compile(object thisob, object source, object 'flags')
		{
			ret
		}
		.method public static hidebysig specialname 
			class Microsoft.JScript.RegExpConstructor get_constructor()
		{
			ret
		}
		.method public static hidebysig 
			object exec(object thisob, object input)
		{
			ret
		}
		.method public static hidebysig 
			bool test(object thisob, object input)
		{
			ret
		}
		.method public static hidebysig 
			string toString(object thisob)
		{
			ret
		}
		.property class Microsoft.JScript.RegExpConstructor constructor()
		{
			.get class Microsoft.JScript.RegExpConstructor Microsoft.JScript.RegExpPrototype::get_constructor()
		}
	}
	.class public Relational
		extends Microsoft.JScript.BinaryOp
	{
		.method public hidebysig specialname 
			instance void .ctor(int32 operatorTok)
		{
			ret
		}
		.method public hidebysig 
			instance float64 EvaluateRelational(object v1, object v2)
		{
			ret
		}
		.method public static hidebysig 
			float64 JScriptCompare(object v1, object v2)
		{
			ret
		}
	}
	.class public sealed serializable ReturnOutOfFinally
		extends [mscorlib]System.ApplicationException
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string m)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string m, class [mscorlib]System.Exception e)
		{
			ret
		}
	}
	.class public abstract sealed Runtime
		extends [mscorlib]System.Object
	{
		.method public static hidebysig 
			bool Equals(object v1, object v2)
		{
			ret
		}
		.method public static hidebysig 
			int64 DoubleToInt64(float64 val)
		{
			ret
		}
		.method public static hidebysig 
			int64 UncheckedDecimalToInt64(valuetype [mscorlib]System.Decimal val)
		{
			ret
		}
	}
	.class public ScriptBlock
		extends 'Microsoft.JScript.AST'
	{
	}
	.class public abstract ScriptFunction
		extends Microsoft.JScript.JSObject
	{
		.method family hidebysig specialname 
			instance void .ctor(class Microsoft.JScript.ScriptObject parent, string name)
		{
			ret
		}
		.method public hidebysig 
			instance object CreateInstance(object[] args)
		{
			.param [1]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = (01 00 00 00)
			ret
		}
		.method family hidebysig 
			instance class Microsoft.JScript.ScriptObject GetPrototypeForConstructedObject()
		{
			ret
		}
		.method public hidebysig 
			instance object Invoke(object thisob, object[] args)
		{
			.param [2]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = (01 00 00 00)
			ret
		}
		.method public virtual hidebysig 
			instance object InvokeMember(string name, valuetype [mscorlib]System.Reflection.BindingFlags invokeAttr, class [mscorlib]System.Reflection.Binder binder, object target, object[] args, valuetype [mscorlib]System.Reflection.ParameterModifier[] modifiers, class [mscorlib]System.Globalization.CultureInfo culture, string[] namedParameters)
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance int32 get_length()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_length(int32 'value')
		{
			ret
		}
		.method public virtual hidebysig 
			instance string ToString()
		{
			ret
		}
		.method public hidebysig specialname 
			instance object get_prototype()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_prototype(object 'value')
		{
			ret
		}
		.field family int32 ilength
		.property instance int32 length()
		{
			.get instance int32 Microsoft.JScript.ScriptFunction::get_length()
			.set instance void Microsoft.JScript.ScriptFunction::set_length(int32)
		}
		.property instance object prototype()
		{
			.get instance object Microsoft.JScript.ScriptFunction::get_prototype()
			.set instance void Microsoft.JScript.ScriptFunction::set_prototype(object)
		}
	}
	.class public abstract ScriptObject
		extends [mscorlib]System.Object
		implements [mscorlib]System.Reflection.IReflect
	{
		.custom instance void [mscorlib]System.Reflection.DefaultMemberAttribute::.ctor(string) = (01 00 04 49 74 65 6D 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method public final virtual hidebysig newslot 
			instance class [mscorlib]System.Reflection.FieldInfo GetField(string name, valuetype [mscorlib]System.Reflection.BindingFlags bindingAttr)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance class [mscorlib]System.Reflection.FieldInfo[] GetFields(valuetype [mscorlib]System.Reflection.BindingFlags bindingAttr)
		{
			ret
		}
		.method public virtual hidebysig newslot abstract 
			instance class [mscorlib]System.Reflection.MemberInfo[] GetMember(string name, valuetype [mscorlib]System.Reflection.BindingFlags bindingAttr)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class [mscorlib]System.Reflection.MemberInfo[] GetMembers(valuetype [mscorlib]System.Reflection.BindingFlags bindingAttr)
		{
		}
		.method public final virtual hidebysig newslot 
			instance class [mscorlib]System.Reflection.MethodInfo GetMethod(string name, valuetype [mscorlib]System.Reflection.BindingFlags bindingAttr)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance class [mscorlib]System.Reflection.MethodInfo GetMethod(string name, valuetype [mscorlib]System.Reflection.BindingFlags bindingAttr, class [mscorlib]System.Reflection.Binder binder, class [mscorlib]System.Type[] types, valuetype [mscorlib]System.Reflection.ParameterModifier[] modifiers)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance class [mscorlib]System.Reflection.MethodInfo[] GetMethods(valuetype [mscorlib]System.Reflection.BindingFlags bindingAttr)
		{
			ret
		}
		.method public hidebysig 
			instance class Microsoft.JScript.ScriptObject GetParent()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance class [mscorlib]System.Reflection.PropertyInfo GetProperty(string name, valuetype [mscorlib]System.Reflection.BindingFlags bindingAttr)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance class [mscorlib]System.Reflection.PropertyInfo GetProperty(string name, valuetype [mscorlib]System.Reflection.BindingFlags bindingAttr, class [mscorlib]System.Reflection.Binder binder, class [mscorlib]System.Type returnType, class [mscorlib]System.Type[] types, valuetype [mscorlib]System.Reflection.ParameterModifier[] modifiers)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance class [mscorlib]System.Reflection.PropertyInfo[] GetProperties(valuetype [mscorlib]System.Reflection.BindingFlags bindingAttr)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance object InvokeMember(string name, valuetype [mscorlib]System.Reflection.BindingFlags invokeAttr, class [mscorlib]System.Reflection.Binder binder, object target, object[] args, valuetype [mscorlib]System.Reflection.ParameterModifier[] modifiers, class [mscorlib]System.Globalization.CultureInfo locale, string[] namedParameters)
		{
			ret
		}
		.method public hidebysig specialname 
			instance object get_Item(float64 index)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Item(float64 index, object 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance object get_Item(int32 index)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Item(int32 index, object 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance object get_Item(string name)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Item(string name, object 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance object get_Item(object[] pars)
		{
			.param [1]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = (01 00 00 00)
			ret
		}
		.method public hidebysig specialname 
			instance void set_Item(object[] pars, object 'value')
		{
			.param [1]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = (01 00 00 00)
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance class [mscorlib]System.Type get_UnderlyingSystemType()
		{
			ret
		}
		.method family static hidebysig 
			class [mscorlib]System.Reflection.MemberInfo[] WrapMembers(class [mscorlib]System.Reflection.MemberInfo[] members, object obj)
		{
			ret
		}
		.method family static hidebysig 
			class [mscorlib]System.Reflection.MemberInfo[] WrapMembers(class [mscorlib]System.Reflection.MemberInfo member, object obj)
		{
			ret
		}
		.method family static hidebysig 
			class [mscorlib]System.Reflection.MemberInfo[] WrapMembers(class [mscorlib]System.Reflection.MemberInfo[] members, object obj, class Microsoft.JScript.SimpleHashtable cache)
		{
			ret
		}
		.field public class Microsoft.JScript.Vsa.VsaEngine engine
		.field family class Microsoft.JScript.ScriptObject parent
		.property instance object Item(float64)
		{
			.get instance object Microsoft.JScript.ScriptObject::get_Item(float64)
			.set instance void Microsoft.JScript.ScriptObject::set_Item(float64, object)
		}
		.property instance object Item(int32)
		{
			.get instance object Microsoft.JScript.ScriptObject::get_Item(int32)
			.set instance void Microsoft.JScript.ScriptObject::set_Item(int32, object)
		}
		.property instance object Item(string)
		{
			.get instance object Microsoft.JScript.ScriptObject::get_Item(string)
			.set instance void Microsoft.JScript.ScriptObject::set_Item(string, object)
		}
		.property instance object Item(object[])
		{
			.get instance object Microsoft.JScript.ScriptObject::get_Item(object[])
			.set instance void Microsoft.JScript.ScriptObject::set_Item(object[], object)
		}
		.property instance class [mscorlib]System.Type UnderlyingSystemType()
		{
			.get instance class [mscorlib]System.Type Microsoft.JScript.ScriptObject::get_UnderlyingSystemType()
		}
	}
	.class public ScriptStream
		extends [mscorlib]System.Object
	{
		.method public static hidebysig 
			void PrintStackTrace()
		{
			ret
		}
		.method public static hidebysig 
			void PrintStackTrace(class [mscorlib]System.Exception e)
		{
			ret
		}
		.method public static hidebysig 
			void Write(string str)
		{
			ret
		}
		.method public static hidebysig 
			void WriteLine(string str)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.field static public class [mscorlib]'System.IO.TextWriter' Error
		.field static public class [mscorlib]'System.IO.TextWriter' Out
	}
	.class public sealed SimpleHashtable
		extends [mscorlib]System.Object
	{
		.custom instance void [mscorlib]System.Reflection.DefaultMemberAttribute::.ctor(string) = (01 00 04 49 74 65 6D 00 00)
		.method public hidebysig specialname 
			instance void .ctor(uint32 threshold)
		{
			ret
		}
		.method public hidebysig 
			instance class [mscorlib]System.Collections.IDictionaryEnumerator GetEnumerator()
		{
			ret
		}
		.method public hidebysig 
			instance void Remove(object key)
		{
			ret
		}
		.method public hidebysig specialname 
			instance object get_Item(object key)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Item(object key, object 'value')
		{
			ret
		}
		.property instance object Item(object)
		{
			.get instance object Microsoft.JScript.SimpleHashtable::get_Item(object)
			.set instance void Microsoft.JScript.SimpleHashtable::set_Item(object, object)
		}
	}
	.class public sealed StackFrame
		extends Microsoft.JScript.ScriptObject
		implements Microsoft.JScript.IActivationObject
	{
		.method public final virtual hidebysig newslot 
			instance object GetDefaultThisObject()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance class [mscorlib]System.Reflection.FieldInfo GetField(string name, int32 lexLevel)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance class Microsoft.JScript.GlobalScope GetGlobalScope()
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance class [mscorlib]System.Reflection.FieldInfo Microsoft.JScript.IActivationObject.GetLocalField(string name)
		{
			.override Microsoft.JScript.IActivationObject::GetLocalField
			ret
		}
		.method public virtual hidebysig 
			instance class [mscorlib]System.Reflection.MemberInfo[] GetMember(string name, valuetype [mscorlib]System.Reflection.BindingFlags bindingAttr)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [mscorlib]System.Reflection.MemberInfo[] GetMembers(valuetype [mscorlib]System.Reflection.BindingFlags bindingAttr)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object GetMemberValue(string name, int32 lexlevel)
		{
			ret
		}
		.method public static hidebysig 
			void PushStackFrameForStaticMethod(valuetype [mscorlib]System.RuntimeTypeHandle thisclass, class Microsoft.JScript.JSLocalField[] fields, class Microsoft.JScript.Vsa.VsaEngine engine)
		{
			ret
		}
		.method public static hidebysig 
			void PushStackFrameForMethod(object thisob, class Microsoft.JScript.JSLocalField[] fields, class Microsoft.JScript.Vsa.VsaEngine engine)
		{
			ret
		}
		.field public object closureInstance
		.field public object[] localVars
	}
	.class public StrictEquality
		extends Microsoft.JScript.BinaryOp
	{
		.method public static hidebysig 
			bool JScriptStrictEquals(object v1, object v2)
		{
			ret
		}
	}
	.class public StringConstructor
		extends Microsoft.JScript.ScriptFunction
	{
		.method public hidebysig 
			instance class Microsoft.JScript.StringObject CreateInstance(object[] args)
		{
			.param [1]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = (01 00 00 00)
			ret
		}
		.method public hidebysig 
			instance string Invoke(object arg)
		{
			ret
		}
		.method public static hidebysig 
			string fromCharCode(object[] args)
		{
			.param [1]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = (01 00 00 00)
			ret
		}
	}
	.class public StringObject
		extends Microsoft.JScript.JSObject
	{
		.method family hidebysig specialname 
			instance void .ctor(class Microsoft.JScript.ScriptObject prototype, string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_length()
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool Equals(object ob)
		{
			ret
		}
		.method public virtual hidebysig 
			instance int32 GetHashCode()
		{
			ret
		}
		.method public hidebysig 
			instance class [mscorlib]System.Type GetType()
		{
			ret
		}
		.property instance int32 length()
		{
			.get instance int32 Microsoft.JScript.StringObject::get_length()
		}
	}
	.class public StringPrototype
		extends Microsoft.JScript.StringObject
	{
		.method public static hidebysig 
			string anchor(object thisob, object anchorName)
		{
			ret
		}
		.method public static hidebysig 
			string big(object thisob)
		{
			ret
		}
		.method public static hidebysig 
			string blink(object thisob)
		{
			ret
		}
		.method public static hidebysig 
			string bold(object thisob)
		{
			ret
		}
		.method public static hidebysig 
			string charAt(object thisob, float64 pos)
		{
			ret
		}
		.method public static hidebysig 
			object charCodeAt(object thisob, float64 pos)
		{
			ret
		}
		.method public static hidebysig 
			string concat(object thisob, object[] args)
		{
			.param [2]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = (01 00 00 00)
			ret
		}
		.method public static hidebysig specialname 
			class Microsoft.JScript.StringConstructor get_constructor()
		{
			ret
		}
		.method public static hidebysig 
			string 'fixed'(object thisob)
		{
			ret
		}
		.method public static hidebysig 
			string fontcolor(object thisob, object colorName)
		{
			ret
		}
		.method public static hidebysig 
			string fontsize(object thisob, object fontSize)
		{
			ret
		}
		.method public static hidebysig 
			int32 indexOf(object thisob, object searchString, float64 position)
		{
			ret
		}
		.method public static hidebysig 
			string italics(object thisob)
		{
			ret
		}
		.method public static hidebysig 
			int32 lastIndexOf(object thisob, object searchString, float64 position)
		{
			ret
		}
		.method public static hidebysig 
			string link(object thisob, object linkRef)
		{
			ret
		}
		.method public static hidebysig 
			int32 localeCompare(object thisob, object thatob)
		{
			ret
		}
		.method public static hidebysig 
			object match(object thisob, class Microsoft.JScript.Vsa.VsaEngine engine, object regExp)
		{
			ret
		}
		.method public static hidebysig 
			string replace(object thisob, object regExp, object replacement)
		{
			ret
		}
		.method public static hidebysig 
			int32 search(object thisob, class Microsoft.JScript.Vsa.VsaEngine engine, object regExp)
		{
			ret
		}
		.method public static hidebysig 
			string slice(object thisob, float64 start, object end)
		{
			ret
		}
		.method public static hidebysig 
			string small(object thisob)
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.JScript.ArrayObject split(object thisob, class Microsoft.JScript.Vsa.VsaEngine engine, object separator, object limit)
		{
			ret
		}
		.method public static hidebysig 
			string strike(object thisob)
		{
			ret
		}
		.method public static hidebysig 
			string 'sub'(object thisob)
		{
			ret
		}
		.method public static hidebysig 
			string substr(object thisob, float64 start, object count)
		{
			ret
		}
		.method public static hidebysig 
			string substring(object thisob, float64 start, object end)
		{
			ret
		}
		.method public static hidebysig 
			string sup(object thisob)
		{
			ret
		}
		.method public static hidebysig 
			string toLocaleLowerCase(object thisob)
		{
			ret
		}
		.method public static hidebysig 
			string toLocaleUpperCase(object thisob)
		{
			ret
		}
		.method public static hidebysig 
			string toLowerCase(object thisob)
		{
			ret
		}
		.method public static hidebysig 
			string toString(object thisob)
		{
			ret
		}
		.method public static hidebysig 
			string toUpperCase(object thisob)
		{
			ret
		}
		.method public static hidebysig 
			object valueOf(object thisob)
		{
			ret
		}
		.property class Microsoft.JScript.StringConstructor constructor()
		{
			.get class Microsoft.JScript.StringConstructor Microsoft.JScript.StringPrototype::get_constructor()
		}
	}
	.class public sealed SuperTypeMembersSorter
		extends [mscorlib]System.Object
	{
	}
	.class public sealed SyntaxErrorObject
		extends Microsoft.JScript.ErrorObject
	{
	}
	.class public sealed Throw
		extends 'Microsoft.JScript.AST'
	{
		.method public static hidebysig 
			class [mscorlib]System.Exception JScriptThrow(object 'value')
		{
			ret
		}
	}
	.class public sealed Try
		extends 'Microsoft.JScript.AST'
	{
		.method public static hidebysig 
			object JScriptExceptionValue(object e, class Microsoft.JScript.Vsa.VsaEngine engine)
		{
			ret
		}
		.method public static hidebysig 
			void PushHandlerScope(class Microsoft.JScript.Vsa.VsaEngine engine, string id, int32 scopeId)
		{
			ret
		}
	}
	.class public sealed TypeErrorObject
		extends Microsoft.JScript.ErrorObject
	{
	}
	.class public sealed TypeReflector
		extends Microsoft.JScript.ScriptObject
	{
		.method public virtual hidebysig 
			instance class [mscorlib]System.Reflection.MemberInfo[] GetMember(string name, valuetype [mscorlib]System.Reflection.BindingFlags bindingAttr)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [mscorlib]System.Reflection.MemberInfo[] GetMembers(valuetype [mscorlib]System.Reflection.BindingFlags bindingAttr)
		{
			ret
		}
	}
	.class public sealed TypedArray
		extends [mscorlib]System.Object
		implements [mscorlib]System.Reflection.IReflect
	{
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Reflection.IReflect elementType, int32 rank)
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool Equals(object obj)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance class [mscorlib]System.Reflection.FieldInfo GetField(string name, valuetype [mscorlib]System.Reflection.BindingFlags bindingAttr)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance class [mscorlib]System.Reflection.FieldInfo[] GetFields(valuetype [mscorlib]System.Reflection.BindingFlags bindingAttr)
		{
			ret
		}
		.method public virtual hidebysig 
			instance int32 GetHashCode()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance class [mscorlib]System.Reflection.MemberInfo[] GetMember(string name, valuetype [mscorlib]System.Reflection.BindingFlags bindingAttr)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance class [mscorlib]System.Reflection.MemberInfo[] GetMembers(valuetype [mscorlib]System.Reflection.BindingFlags bindingAttr)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance class [mscorlib]System.Reflection.MethodInfo GetMethod(string name, valuetype [mscorlib]System.Reflection.BindingFlags bindingAttr)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance class [mscorlib]System.Reflection.MethodInfo GetMethod(string name, valuetype [mscorlib]System.Reflection.BindingFlags bindingAttr, class [mscorlib]System.Reflection.Binder binder, class [mscorlib]System.Type[] types, valuetype [mscorlib]System.Reflection.ParameterModifier[] modifiers)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance class [mscorlib]System.Reflection.MethodInfo[] GetMethods(valuetype [mscorlib]System.Reflection.BindingFlags bindingAttr)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance class [mscorlib]System.Reflection.PropertyInfo GetProperty(string name, valuetype [mscorlib]System.Reflection.BindingFlags bindingAttr)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance class [mscorlib]System.Reflection.PropertyInfo GetProperty(string name, valuetype [mscorlib]System.Reflection.BindingFlags bindingAttr, class [mscorlib]System.Reflection.Binder binder, class [mscorlib]System.Type returnType, class [mscorlib]System.Type[] types, valuetype [mscorlib]System.Reflection.ParameterModifier[] modifiers)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance class [mscorlib]System.Reflection.PropertyInfo[] GetProperties(valuetype [mscorlib]System.Reflection.BindingFlags bindingAttr)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object InvokeMember(string name, valuetype [mscorlib]System.Reflection.BindingFlags 'flags', class [mscorlib]System.Reflection.Binder binder, object target, object[] args, valuetype [mscorlib]System.Reflection.ParameterModifier[] modifiers, class [mscorlib]System.Globalization.CultureInfo locale, string[] namedParameters)
		{
			ret
		}
		.method public virtual hidebysig 
			instance string ToString()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance class [mscorlib]System.Type get_UnderlyingSystemType()
		{
			ret
		}
		.property instance class [mscorlib]System.Type UnderlyingSystemType()
		{
			.get instance class [mscorlib]System.Type Microsoft.JScript.TypedArray::get_UnderlyingSystemType()
		}
	}
	.class public sealed Typeof
		extends Microsoft.JScript.UnaryOp
	{
		.method public static hidebysig 
			string JScriptTypeof(object 'value')
		{
			ret
		}
	}
	.class public sealed URIErrorObject
		extends Microsoft.JScript.ErrorObject
	{
	}
	.class public abstract UnaryOp
		extends 'Microsoft.JScript.AST'
	{
		.field family class 'Microsoft.JScript.AST' operand
	}
	.class public sealed VBArrayConstructor
		extends Microsoft.JScript.ScriptFunction
	{
		.method public hidebysig 
			instance object CreateInstance(object[] args)
		{
			.param [1]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = (01 00 00 00)
			ret
		}
	}
	.class public VBArrayObject
		extends Microsoft.JScript.JSObject
	{
		.method public hidebysig specialname 
			instance void .ctor(class Microsoft.JScript.VBArrayPrototype parent, class [mscorlib]System.Array 'array')
		{
			ret
		}
	}
	.class public VBArrayPrototype
		extends Microsoft.JScript.JSObject
	{
		.method public static hidebysig specialname 
			class Microsoft.JScript.VBArrayConstructor get_constructor()
		{
			ret
		}
		.method public static hidebysig 
			int32 dimensions(object thisob)
		{
			ret
		}
		.method public static hidebysig 
			object getItem(object thisob, object[] args)
		{
			.param [2]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = (01 00 00 00)
			ret
		}
		.method public static hidebysig 
			int32 lbound(object thisob, object dimension)
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.JScript.ArrayObject toArray(object thisob, class Microsoft.JScript.Vsa.VsaEngine engine)
		{
			ret
		}
		.method public static hidebysig 
			int32 ubound(object thisob, object dimension)
		{
			ret
		}
		.property class Microsoft.JScript.VBArrayConstructor constructor()
		{
			.get class Microsoft.JScript.VBArrayConstructor Microsoft.JScript.VBArrayPrototype::get_constructor()
		}
	}
	.class public sealed 'VSAITEMTYPE2'
		extends [mscorlib]System.Enum
	{
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = (01 00 24 35 38 31 41 44 33 44 39 2D 32 42 41 41 2D 33 37 37 30 2D 42 39 32 42 2D 33 38 36 30 37 45 31 42 34 36 33 41 00 00)
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype 'Microsoft.JScript.VSAITEMTYPE2' 'HOSTOBJECT' = int32(0x00000010)
		.field static public literal valuetype 'Microsoft.JScript.VSAITEMTYPE2' 'HOSTSCOPE' = int32(0x00000011)
		.field static public literal valuetype 'Microsoft.JScript.VSAITEMTYPE2' 'HOSTSCOPEANDOBJECT' = int32(0x00000012)
		.field static public literal valuetype 'Microsoft.JScript.VSAITEMTYPE2' None = int32(0x00000000)
		.field static public literal valuetype 'Microsoft.JScript.VSAITEMTYPE2' 'SCRIPTSCOPE' = int32(0x00000013)
	}
	.class public abstract VsaItem
		extends [mscorlib]System.Object
		implements [Microsoft.Vsa]Microsoft.Vsa.IVsaItem
	{
		.method public virtual hidebysig newslot specialname 
			instance bool get_IsDirty()
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_IsDirty(bool 'value')
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public virtual hidebysig newslot 
			instance object GetOption(string name)
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance string get_Name()
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_Name(string 'value')
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public virtual hidebysig newslot 
			instance void SetOption(string name, object 'value')
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance valuetype [Microsoft.Vsa]Microsoft.Vsa.VsaItemType get_ItemType()
		{
			.permissionset linkcheck = (00)
			ret
		}
		.field family valuetype [Microsoft.Vsa]Microsoft.Vsa.VsaItemFlag flag
		.field family bool isDirty
		.field family string name
		.field family valuetype [Microsoft.Vsa]Microsoft.Vsa.VsaItemType 'type'
		.property instance bool IsDirty()
		{
			.get instance bool Microsoft.JScript.VsaItem::get_IsDirty()
			.set instance void Microsoft.JScript.VsaItem::set_IsDirty(bool)
		}
		.property instance valuetype [Microsoft.Vsa]Microsoft.Vsa.VsaItemType ItemType()
		{
			.get instance valuetype [Microsoft.Vsa]Microsoft.Vsa.VsaItemType Microsoft.JScript.VsaItem::get_ItemType()
		}
		.property instance string Name()
		{
			.get instance string Microsoft.JScript.VsaItem::get_Name()
			.set instance void Microsoft.JScript.VsaItem::set_Name(string)
		}
	}
	.class public sealed VsaItems
		extends [mscorlib]System.Object
		implements [Microsoft.Vsa]Microsoft.Vsa.IVsaItems, [mscorlib]System.Collections.IEnumerable
	{
		.custom instance void [mscorlib]System.Reflection.DefaultMemberAttribute::.ctor(string) = (01 00 04 49 74 65 6D 00 00)
		.method public hidebysig specialname 
			instance void .ctor(class Microsoft.JScript.Vsa.VsaEngine engine)
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance class [Microsoft.Vsa]Microsoft.Vsa.IVsaItem get_Item(int32 index)
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance class [Microsoft.Vsa]Microsoft.Vsa.IVsaItem get_Item(string itemName)
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance int32 get_Count()
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public hidebysig 
			instance void Close()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance class [Microsoft.Vsa]Microsoft.Vsa.IVsaItem CreateItem(string name, valuetype [Microsoft.Vsa]Microsoft.Vsa.VsaItemType itemType, valuetype [Microsoft.Vsa]Microsoft.Vsa.VsaItemFlag itemFlag)
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public final virtual hidebysig newslot 
			instance class [mscorlib]System.Collections.IEnumerator GetEnumerator()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void Remove(string itemName)
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void Remove(int32 itemIndex)
		{
			.permissionset linkcheck = (00)
			ret
		}
		.property instance int32 Count()
		{
			.get instance int32 Microsoft.JScript.VsaItems::get_Count()
		}
		.property instance class [Microsoft.Vsa]Microsoft.Vsa.IVsaItem Item(int32)
		{
			.get instance class [Microsoft.Vsa]Microsoft.Vsa.IVsaItem Microsoft.JScript.VsaItems::get_Item(int32)
		}
		.property instance class [Microsoft.Vsa]Microsoft.Vsa.IVsaItem Item(string)
		{
			.get instance class [Microsoft.Vsa]Microsoft.Vsa.IVsaItem Microsoft.JScript.VsaItems::get_Item(string)
		}
	}
	.class public sealed With
		extends 'Microsoft.JScript.AST'
	{
		.method public static hidebysig 
			object JScriptWith(object withOb, class Microsoft.JScript.Vsa.VsaEngine engine)
		{
			ret
		}
	}
}
.namespace Microsoft.JScript.Vsa
{
	.class public ResInfo
		extends [mscorlib]System.Object
	{
		.custom instance void [mscorlib]System.ObsoleteAttribute::.ctor(string) = (01 00 80 C8 55 73 65 20 6F 66 20 74 68 69 73 20 74 79 70 65 20 69 73 20 6E 6F 74 20 72 65 63 6F 6D 6D 65 6E 64 65 64 20 62 65 63 61 75 73 65 20 69 74 20 69 73 20 62 65 69 6E 67 20 64 65 70 72 65 63 61 74 65 64 20 69 6E 20 56 69 73 75 61 6C 20 53 74 75 64 69 6F 20 32 30 30 35 3B 20 74 68 65 72 65 20 77 69 6C 6C 20 62 65 20 6E 6F 20 72 65 70 6C 61 63 65 6D 65 6E 74 20 66 6F 72 20 74 68 69 73 20 66 65 61 74 75 72 65 2E 20 50 6C 65 61 73 65 20 73 65 65 20 74 68 65 20 49 43 6F 64 65 43 6F 6D 70 69 6C 65 72 20 64 6F 63 75 6D 65 6E 74 61 74 69 6F 6E 20 66 6F 72 20 61 64 64 69 74 69 6F 6E 61 6C 20 68 65 6C 70 2E 00 00)
		.method public hidebysig specialname 
			instance void .ctor(string filename, string name, bool isPublic, bool isLinked)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string resinfo, bool isLinked)
		{
			ret
		}
		.field public string filename
		.field public string fullpath
		.field public bool isLinked
		.field public bool isPublic
		.field public string name
	}
	.class public sealed VsaEngine
		extends Microsoft.Vsa.BaseVsaEngine
		implements Microsoft.JScript.IEngine2, Microsoft.JScript.IRedirectOutput
	{
		.custom instance void [mscorlib]System.ObsoleteAttribute::.ctor(string) = (01 00 80 C8 55 73 65 20 6F 66 20 74 68 69 73 20 74 79 70 65 20 69 73 20 6E 6F 74 20 72 65 63 6F 6D 6D 65 6E 64 65 64 20 62 65 63 61 75 73 65 20 69 74 20 69 73 20 62 65 69 6E 67 20 64 65 70 72 65 63 61 74 65 64 20 69 6E 20 56 69 73 75 61 6C 20 53 74 75 64 69 6F 20 32 30 30 35 3B 20 74 68 65 72 65 20 77 69 6C 6C 20 62 65 20 6E 6F 20 72 65 70 6C 61 63 65 6D 65 6E 74 20 66 6F 72 20 74 68 69 73 20 66 65 61 74 75 72 65 2E 20 50 6C 65 61 73 65 20 73 65 65 20 74 68 65 20 49 43 6F 64 65 43 6F 6D 70 69 6C 65 72 20 64 6F 63 75 6D 65 6E 74 61 74 69 6F 6E 20 66 6F 72 20 61 64 64 69 74 69 6F 6E 61 6C 20 68 65 6C 70 2E 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = (01 00 24 42 37 31 45 34 38 34 44 2D 39 33 45 44 2D 34 62 35 36 2D 42 46 42 39 2D 43 45 45 44 35 31 33 34 38 32 32 42 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(bool fast)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance class [Microsoft.Vsa]Microsoft.Vsa.IVsaEngine Clone(class [mscorlib]System.AppDomain domain)
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public final virtual hidebysig newslot 
			instance bool CompileEmpty()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void ConnectEvents()
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public static hidebysig 
			class Microsoft.JScript.GlobalScope CreateEngineAndGetGlobalScope(bool fast, string[] assemblyNames)
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.JScript.GlobalScope CreateEngineAndGetGlobalScopeWithType(bool fast, string[] assemblyNames, valuetype [mscorlib]System.RuntimeTypeHandle callingTypeHandle)
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.JScript.GlobalScope CreateEngineAndGetGlobalScopeWithTypeAndRootNamespace(bool fast, string[] assemblyNames, valuetype [mscorlib]System.RuntimeTypeHandle callingTypeHandle, string rootNamespace)
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.JScript.Vsa.VsaEngine CreateEngine()
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.JScript.Vsa.VsaEngine CreateEngineWithType(valuetype [mscorlib]System.RuntimeTypeHandle callingTypeHandle)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void DisconnectEvents()
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method family virtual hidebysig 
			instance void DoClose()
		{
			ret
		}
		.method family virtual hidebysig 
			instance bool DoCompile()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance class [mscorlib]System.Reflection.Assembly GetAssembly()
		{
			ret
		}
		.method public hidebysig 
			instance class [Microsoft.Vsa]Microsoft.Vsa.IVsaItem GetItem(string itemName)
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public hidebysig 
			instance class [Microsoft.Vsa]Microsoft.Vsa.IVsaItem GetItemAtIndex(int32 index)
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public hidebysig 
			instance int32 GetItemCount()
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public final virtual hidebysig newslot 
			instance class Microsoft.JScript.IVsaScriptScope GetGlobalScope()
		{
			ret
		}
		.method public hidebysig 
			instance class Microsoft.JScript.GlobalScope GetMainScope()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance class [mscorlib]System.Reflection.Module GetModule()
		{
			ret
		}
		.method public hidebysig 
			instance class Microsoft.JScript.ArrayConstructor GetOriginalArrayConstructor()
		{
			ret
		}
		.method public hidebysig 
			instance class Microsoft.JScript.ObjectConstructor GetOriginalObjectConstructor()
		{
			ret
		}
		.method public hidebysig 
			instance class Microsoft.JScript.RegExpConstructor GetOriginalRegExpConstructor()
		{
			ret
		}
		.method family virtual hidebysig 
			instance object GetCustomOption(string name)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void InitVsaEngine(string rootMoniker, class [Microsoft.Vsa]Microsoft.Vsa.IVsaSite site)
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void Interrupt()
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method family virtual hidebysig 
			instance bool IsValidNamespaceName(string name)
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool IsValidIdentifier(string ident)
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.JScript.LenientGlobalObject get_LenientGlobalObject()
		{
			ret
		}
		.method family virtual hidebysig 
			instance class [mscorlib]System.Reflection.Assembly LoadCompiledState()
		{
			ret
		}
		.method family virtual hidebysig 
			instance void DoLoadSourceState(class [Microsoft.Vsa]Microsoft.Vsa.IVsaPersistSite site)
		{
			ret
		}
		.method public hidebysig 
			instance class Microsoft.JScript.ScriptObject PopScriptObject()
		{
			ret
		}
		.method public hidebysig 
			instance void PushScriptObject(class Microsoft.JScript.ScriptObject obj)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void RegisterEventSource(string name)
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public virtual hidebysig 
			instance void Reset()
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method family virtual hidebysig 
			instance void ResetCompiledState()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void Restart()
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void RunEmpty()
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void Run(class [mscorlib]System.AppDomain domain)
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method family virtual hidebysig 
			instance void DoSaveCompiledState([out] uint8[]& pe, [out] uint8[]& pdb)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void DoSaveSourceState(class [Microsoft.Vsa]Microsoft.Vsa.IVsaPersistSite site)
		{
			ret
		}
		.method public hidebysig 
			instance class Microsoft.JScript.ScriptObject ScriptObjectStackTop()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void SetOutputStream(class Microsoft.JScript.IMessageReceiver output)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void SetCustomOption(string name, object 'value')
		{
			ret
		}
		.method family virtual hidebysig 
			instance void ValidateRootMoniker(string rootMoniker)
		{
			ret
		}
		.property instance class Microsoft.JScript.LenientGlobalObject LenientGlobalObject()
		{
			.get instance class Microsoft.JScript.LenientGlobalObject Microsoft.JScript.Vsa.VsaEngine::get_LenientGlobalObject()
		}
	}
}
.namespace Microsoft.Vsa
{
	.class public abstract BaseVsaEngine
		extends [mscorlib]System.Object
		implements [Microsoft.Vsa]Microsoft.Vsa.IVsaEngine
	{
		.custom instance void [mscorlib]System.ObsoleteAttribute::.ctor(string) = (01 00 80 C8 55 73 65 20 6F 66 20 74 68 69 73 20 74 79 70 65 20 69 73 20 6E 6F 74 20 72 65 63 6F 6D 6D 65 6E 64 65 64 20 62 65 63 61 75 73 65 20 69 74 20 69 73 20 62 65 69 6E 67 20 64 65 70 72 65 63 61 74 65 64 20 69 6E 20 56 69 73 75 61 6C 20 53 74 75 64 69 6F 20 32 30 30 35 3B 20 74 68 65 72 65 20 77 69 6C 6C 20 62 65 20 6E 6F 20 72 65 70 6C 61 63 65 6D 65 6E 74 20 66 6F 72 20 74 68 69 73 20 66 65 61 74 75 72 65 2E 20 50 6C 65 61 73 65 20 73 65 65 20 74 68 65 20 49 43 6F 64 65 43 6F 6D 70 69 6C 65 72 20 64 6F 63 75 6D 65 6E 74 61 74 69 6F 6E 20 66 6F 72 20 61 64 64 69 74 69 6F 6E 61 6C 20 68 65 6C 70 2E 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = (01 00 24 46 38 39 33 32 41 35 30 2D 39 31 32 37 2D 34 38 42 36 2D 42 31 31 35 2D 32 42 46 44 43 36 32 37 43 45 45 33 00 00)
		.class nested family sealed Pre
			extends [mscorlib]System.Enum
		{
			.custom instance void [mscorlib]System.FlagsAttribute::.ctor() = (01 00 00 00)
			.field public rtspecialname specialname int32 value__
			.field static public literal valuetype Microsoft.Vsa.BaseVsaEngine/Pre EngineCompiled = int32(0x00000004)
			.field static public literal valuetype Microsoft.Vsa.BaseVsaEngine/Pre EngineInitialised = int32(0x00000400)
			.field static public literal valuetype Microsoft.Vsa.BaseVsaEngine/Pre EngineNotClosed = int32(0x00000001)
			.field static public literal valuetype Microsoft.Vsa.BaseVsaEngine/Pre EngineNotInitialised = int32(0x00000800)
			.field static public literal valuetype Microsoft.Vsa.BaseVsaEngine/Pre EngineNotRunning = int32(0x00000010)
			.field static public literal valuetype Microsoft.Vsa.BaseVsaEngine/Pre EngineRunning = int32(0x00000008)
			.field static public literal valuetype Microsoft.Vsa.BaseVsaEngine/Pre None = int32(0x00000000)
			.field static public literal valuetype Microsoft.Vsa.BaseVsaEngine/Pre RootMonikerNotSet = int32(0x00000040)
			.field static public literal valuetype Microsoft.Vsa.BaseVsaEngine/Pre RootMonikerSet = int32(0x00000020)
			.field static public literal valuetype Microsoft.Vsa.BaseVsaEngine/Pre RootNamespaceSet = int32(0x00000080)
			.field static public literal valuetype Microsoft.Vsa.BaseVsaEngine/Pre SiteNotSet = int32(0x00000200)
			.field static public literal valuetype Microsoft.Vsa.BaseVsaEngine/Pre SiteSet = int32(0x00000100)
			.field static public literal valuetype Microsoft.Vsa.BaseVsaEngine/Pre SupportForDebug = int32(0x00000002)
		}
		.method family hidebysig 
			instance class [Microsoft.Vsa]Microsoft.Vsa.VsaException Error(valuetype [Microsoft.Vsa]Microsoft.Vsa.VsaError vsaErrorNumber)
		{
			ret
		}
		.method family hidebysig 
			instance void Preconditions(valuetype Microsoft.Vsa.BaseVsaEngine/Pre 'flags')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]System._AppDomain get_AppDomain()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_AppDomain(class [mscorlib]System._AppDomain 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance class [mscorlib]System.Security.Policy.Evidence get_Evidence()
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void set_Evidence(class [mscorlib]System.Security.Policy.Evidence 'value')
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public hidebysig specialname 
			instance string get_ApplicationBase()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ApplicationBase(string 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance class [mscorlib]System.Reflection.Assembly get_Assembly()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance bool get_GenerateDebugInfo()
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void set_GenerateDebugInfo(bool 'value')
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance bool get_IsCompiled()
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance bool get_IsDirty()
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public hidebysig specialname 
			instance void set_IsDirty(bool 'value')
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance bool get_IsRunning()
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance class [Microsoft.Vsa]Microsoft.Vsa.IVsaItems get_Items()
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance string get_Language()
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance int32 get_LCID()
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void set_LCID(int32 'value')
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance string get_Name()
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void set_Name(string 'value')
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance string get_RootMoniker()
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void set_RootMoniker(string 'value')
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance string get_RootNamespace()
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void set_RootNamespace(string 'value')
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance class [Microsoft.Vsa]Microsoft.Vsa.IVsaSite get_Site()
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void set_Site(class [Microsoft.Vsa]Microsoft.Vsa.IVsaSite 'value')
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance string get_Version()
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public virtual hidebysig newslot 
			instance void Close()
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public virtual hidebysig newslot 
			instance bool Compile()
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public virtual hidebysig newslot 
			instance object GetOption(string name)
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public virtual hidebysig newslot 
			instance void InitNew()
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method family virtual hidebysig newslot 
			instance class [mscorlib]System.Reflection.Assembly LoadCompiledState()
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void LoadSourceState(class [Microsoft.Vsa]Microsoft.Vsa.IVsaPersistSite site)
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public virtual hidebysig newslot 
			instance void Reset()
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public virtual hidebysig newslot 
			instance void RevokeCache()
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public virtual hidebysig newslot 
			instance void Run()
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public virtual hidebysig newslot 
			instance void SetOption(string name, object 'value')
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public virtual hidebysig newslot 
			instance void SaveCompiledState([out] uint8[]& pe, [out] uint8[]& debugInfo)
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public virtual hidebysig newslot 
			instance void SaveSourceState(class [Microsoft.Vsa]Microsoft.Vsa.IVsaPersistSite site)
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method family virtual hidebysig newslot 
			instance void ValidateRootMoniker(string rootMoniker)
		{
			ret
		}
		.method family virtual hidebysig newslot abstract 
			instance void DoClose()
		{
		}
		.method family virtual hidebysig newslot abstract 
			instance bool DoCompile()
		{
		}
		.method family virtual hidebysig newslot abstract 
			instance void DoLoadSourceState(class [Microsoft.Vsa]Microsoft.Vsa.IVsaPersistSite site)
		{
		}
		.method family virtual hidebysig newslot abstract 
			instance void DoSaveCompiledState([out] uint8[]& pe, [out] uint8[]& debugInfo)
		{
		}
		.method family virtual hidebysig newslot abstract 
			instance void DoSaveSourceState(class [Microsoft.Vsa]Microsoft.Vsa.IVsaPersistSite site)
		{
		}
		.method family virtual hidebysig newslot abstract 
			instance object GetCustomOption(string name)
		{
		}
		.method family virtual hidebysig newslot abstract 
			instance bool IsValidNamespaceName(string name)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance bool IsValidIdentifier(string ident)
		{
			.permissionset linkcheck = (00)
		}
		.method family virtual hidebysig newslot abstract 
			instance void ResetCompiledState()
		{
		}
		.method family virtual hidebysig newslot abstract 
			instance void SetCustomOption(string name, object 'value')
		{
		}
		.field family string applicationPath
		.field family string assemblyVersion
		.field family string compiledRootNamespace
		.field family string engineMoniker
		.field family string engineName
		.field family class [Microsoft.Vsa]Microsoft.Vsa.IVsaSite engineSite
		.field family int32 errorLocale
		.field family class [mscorlib]System.Security.Policy.Evidence executionEvidence
		.field family bool failedCompilation
		.field family bool genDebugInfo
		.field family bool haveCompiledState
		.field family bool isClosed
		.field family bool isDebugInfoSupported
		.field family bool isEngineCompiled
		.field family bool isEngineDirty
		.field family bool isEngineInitialized
		.field family bool isEngineRunning
		.field family class [mscorlib]System.Reflection.Assembly loadedAssembly
		.field static family class [mscorlib]System.Collections.Hashtable nameTable
		.field family string rootNamespace
		.field family string scriptLanguage
		.field family class [mscorlib]System.Type startupClass
		.field family class Microsoft.Vsa.BaseVsaStartup startupInstance
		.field family class [Microsoft.Vsa]Microsoft.Vsa.IVsaItems vsaItems
		.property instance class [mscorlib]System._AppDomain AppDomain()
		{
			.get instance class [mscorlib]System._AppDomain Microsoft.Vsa.BaseVsaEngine::get_AppDomain()
			.set instance void Microsoft.Vsa.BaseVsaEngine::set_AppDomain(class [mscorlib]System._AppDomain)
		}
		.property instance string ApplicationBase()
		{
			.get instance string Microsoft.Vsa.BaseVsaEngine::get_ApplicationBase()
			.set instance void Microsoft.Vsa.BaseVsaEngine::set_ApplicationBase(string)
		}
		.property instance class [mscorlib]System.Reflection.Assembly Assembly()
		{
			.get instance class [mscorlib]System.Reflection.Assembly Microsoft.Vsa.BaseVsaEngine::get_Assembly()
		}
		.property instance class [mscorlib]System.Security.Policy.Evidence Evidence()
		{
			.get instance class [mscorlib]System.Security.Policy.Evidence Microsoft.Vsa.BaseVsaEngine::get_Evidence()
			.set instance void Microsoft.Vsa.BaseVsaEngine::set_Evidence(class [mscorlib]System.Security.Policy.Evidence)
		}
		.property instance bool GenerateDebugInfo()
		{
			.get instance bool Microsoft.Vsa.BaseVsaEngine::get_GenerateDebugInfo()
			.set instance void Microsoft.Vsa.BaseVsaEngine::set_GenerateDebugInfo(bool)
		}
		.property instance bool IsCompiled()
		{
			.get instance bool Microsoft.Vsa.BaseVsaEngine::get_IsCompiled()
		}
		.property instance bool IsDirty()
		{
			.get instance bool Microsoft.Vsa.BaseVsaEngine::get_IsDirty()
			.set instance void Microsoft.Vsa.BaseVsaEngine::set_IsDirty(bool)
		}
		.property instance bool IsRunning()
		{
			.get instance bool Microsoft.Vsa.BaseVsaEngine::get_IsRunning()
		}
		.property instance class [Microsoft.Vsa]Microsoft.Vsa.IVsaItems Items()
		{
			.get instance class [Microsoft.Vsa]Microsoft.Vsa.IVsaItems Microsoft.Vsa.BaseVsaEngine::get_Items()
		}
		.property instance int32 'LCID'()
		{
			.get instance int32 Microsoft.Vsa.BaseVsaEngine::get_LCID()
			.set instance void Microsoft.Vsa.BaseVsaEngine::set_LCID(int32)
		}
		.property instance string Language()
		{
			.get instance string Microsoft.Vsa.BaseVsaEngine::get_Language()
		}
		.property instance string Name()
		{
			.get instance string Microsoft.Vsa.BaseVsaEngine::get_Name()
			.set instance void Microsoft.Vsa.BaseVsaEngine::set_Name(string)
		}
		.property instance string RootMoniker()
		{
			.get instance string Microsoft.Vsa.BaseVsaEngine::get_RootMoniker()
			.set instance void Microsoft.Vsa.BaseVsaEngine::set_RootMoniker(string)
		}
		.property instance string RootNamespace()
		{
			.get instance string Microsoft.Vsa.BaseVsaEngine::get_RootNamespace()
			.set instance void Microsoft.Vsa.BaseVsaEngine::set_RootNamespace(string)
		}
		.property instance class [Microsoft.Vsa]Microsoft.Vsa.IVsaSite Site()
		{
			.get instance class [Microsoft.Vsa]Microsoft.Vsa.IVsaSite Microsoft.Vsa.BaseVsaEngine::get_Site()
			.set instance void Microsoft.Vsa.BaseVsaEngine::set_Site(class [Microsoft.Vsa]Microsoft.Vsa.IVsaSite)
		}
		.property instance string Version()
		{
			.get instance string Microsoft.Vsa.BaseVsaEngine::get_Version()
		}
	}
	.class public BaseVsaSite
		extends [mscorlib]System.Object
		implements [Microsoft.Vsa]Microsoft.Vsa.IVsaSite
	{
		.custom instance void [mscorlib]System.ObsoleteAttribute::.ctor(string) = (01 00 80 C8 55 73 65 20 6F 66 20 74 68 69 73 20 74 79 70 65 20 69 73 20 6E 6F 74 20 72 65 63 6F 6D 6D 65 6E 64 65 64 20 62 65 63 61 75 73 65 20 69 74 20 69 73 20 62 65 69 6E 67 20 64 65 70 72 65 63 61 74 65 64 20 69 6E 20 56 69 73 75 61 6C 20 53 74 75 64 69 6F 20 32 30 30 35 3B 20 74 68 65 72 65 20 77 69 6C 6C 20 62 65 20 6E 6F 20 72 65 70 6C 61 63 65 6D 65 6E 74 20 66 6F 72 20 74 68 69 73 20 66 65 61 74 75 72 65 2E 20 50 6C 65 61 73 65 20 73 65 65 20 74 68 65 20 49 43 6F 64 65 43 6F 6D 70 69 6C 65 72 20 64 6F 63 75 6D 65 6E 74 61 74 69 6F 6E 20 66 6F 72 20 61 64 64 69 74 69 6F 6E 61 6C 20 68 65 6C 70 2E 00 00)
		.method public virtual hidebysig newslot specialname 
			instance uint8[] get_Assembly()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance uint8[] get_DebugInfo()
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void GetCompiledState([out] uint8[]& pe, [out] uint8[]& debugInfo)
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public virtual hidebysig newslot 
			instance object GetEventSourceInstance(string itemName, string eventSourceName)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance object GetGlobalInstance(string name)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void Notify(string notify, object optional)
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public virtual hidebysig newslot 
			instance bool OnCompilerError(class [Microsoft.Vsa]Microsoft.Vsa.IVsaError 'error')
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance uint8[] Assembly()
		{
			.get instance uint8[] Microsoft.Vsa.BaseVsaSite::get_Assembly()
		}
		.property instance uint8[] DebugInfo()
		{
			.get instance uint8[] Microsoft.Vsa.BaseVsaSite::get_DebugInfo()
		}
	}
	.class public abstract BaseVsaStartup
		extends [mscorlib]System.Object
	{
		.custom instance void [mscorlib]System.ObsoleteAttribute::.ctor(string) = (01 00 80 C8 55 73 65 20 6F 66 20 74 68 69 73 20 74 79 70 65 20 69 73 20 6E 6F 74 20 72 65 63 6F 6D 6D 65 6E 64 65 64 20 62 65 63 61 75 73 65 20 69 74 20 69 73 20 62 65 69 6E 67 20 64 65 70 72 65 63 61 74 65 64 20 69 6E 20 56 69 73 75 61 6C 20 53 74 75 64 69 6F 20 32 30 30 35 3B 20 74 68 65 72 65 20 77 69 6C 6C 20 62 65 20 6E 6F 20 72 65 70 6C 61 63 65 6D 65 6E 74 20 66 6F 72 20 74 68 69 73 20 66 65 61 74 75 72 65 2E 20 50 6C 65 61 73 65 20 73 65 65 20 74 68 65 20 49 43 6F 64 65 43 6F 6D 70 69 6C 65 72 20 64 6F 63 75 6D 65 6E 74 61 74 69 6F 6E 20 66 6F 72 20 61 64 64 69 74 69 6F 6E 61 6C 20 68 65 6C 70 2E 00 00)
		.method public hidebysig 
			instance void SetSite(class [Microsoft.Vsa]Microsoft.Vsa.IVsaSite site)
		{
			ret
		}
		.method public virtual hidebysig newslot abstract 
			instance void Startup()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void Shutdown()
		{
		}
		.method family hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.field family class [Microsoft.Vsa]Microsoft.Vsa.IVsaSite site
	}
}
