.assembly extern System
{
	.publickeytoken = (B7 7A 5C 56 19 34 E0 89)
	.ver 2:0:0:0
}
.assembly extern System.Xml
{
	.publickeytoken = (B7 7A 5C 56 19 34 E0 89)
	.ver 2:0:0:0
}
.assembly extern mscorlib
{
	.publickeytoken = (B7 7A 5C 56 19 34 E0 89)
	.ver 2:0:0:0
}
.assembly System.Configuration
{
	.custom instance void [mscorlib]System.CLSCompliantAttribute::.ctor(bool) = (01 00 01 00 00)
	.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 00 00 00)
	.publickey = (00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 07 D1 FA 57 C4 AE D9 F0 A3 2E 84 AA 0F AE FD 0D E9 E8 FD 6A EC 8F 87 FB 03 76 6C 83 4C 99 92 1E B2 3B E7 9A D9 D5 DC C1 DD 9A D2 36 13 21 02 90 0B 72 3C F9 80 95 7F C4 E1 77 10 8F C6 07 77 4F 29 E8 32 0E 92 EA 05 EC E4 E8 21 C0 A5 EF E8 F1 64 5C 4C 0C 93 C1 AB 99 28 5D 62 2C AA 65 2C 1D FA D6 3D 74 5D 6F 2D E5 F1 7E 5E AF 0F C4 96 3D 26 1C 8A 12 43 65 18 20 6D C0 93 34 4D 5A D2 93)
	.hash algorithm 0x00008004
	.ver 2:0:0:0
}
.namespace System.Configuration
{
	.class public sealed AppSettingsSection
		extends System.Configuration.ConfigurationSection
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method famorassem virtual hidebysig specialname 
			instance class System.Configuration.ConfigurationPropertyCollection get_Properties()
		{
			ret
		}
		.method famorassem virtual hidebysig 
			instance object GetRuntimeObject()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Configuration.KeyValueConfigurationCollection get_Settings()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_File()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_File(string 'value')
		{
			ret
		}
		.method famorassem virtual hidebysig 
			instance void Reset(class System.Configuration.ConfigurationElement parentSection)
		{
			ret
		}
		.method famorassem virtual hidebysig 
			instance bool IsModified()
		{
			ret
		}
		.method famorassem virtual hidebysig 
			instance string SerializeSection(class System.Configuration.ConfigurationElement parentElement, string name, valuetype System.Configuration.ConfigurationSaveMode saveMode)
		{
			ret
		}
		.method famorassem virtual hidebysig 
			instance void DeserializeElement(class [System.Xml]System.Xml.XmlReader reader, bool serializeCollectionKey)
		{
			ret
		}
		.property instance string File()
		{
			.get instance string System.Configuration.AppSettingsSection::get_File()
			.set instance void System.Configuration.AppSettingsSection::set_File(string)
		}
		.property instance class System.Configuration.ConfigurationPropertyCollection Properties()
		{
			.get instance class System.Configuration.ConfigurationPropertyCollection System.Configuration.AppSettingsSection::get_Properties()
		}
		.property instance class System.Configuration.KeyValueConfigurationCollection Settings()
		{
			.get instance class System.Configuration.KeyValueConfigurationCollection System.Configuration.AppSettingsSection::get_Settings()
		}
	}
	.class public sealed CallbackValidator
		extends System.Configuration.ConfigurationValidatorBase
	{
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Type 'type', class System.Configuration.ValidatorCallback callback)
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool CanValidate(class [mscorlib]System.Type 'type')
		{
			ret
		}
		.method public virtual hidebysig 
			instance void Validate(object 'value')
		{
			ret
		}
	}
	.class public sealed CallbackValidatorAttribute
		extends System.Configuration.ConfigurationValidatorAttribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = (01 00 80 00 00 00 00 00)
		.method public virtual hidebysig specialname 
			instance class System.Configuration.ConfigurationValidatorBase get_ValidatorInstance()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]System.Type get_Type()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Type(class [mscorlib]System.Type 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_CallbackMethodName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_CallbackMethodName(string 'value')
		{
			ret
		}
		.property instance string CallbackMethodName()
		{
			.get instance string System.Configuration.CallbackValidatorAttribute::get_CallbackMethodName()
			.set instance void System.Configuration.CallbackValidatorAttribute::set_CallbackMethodName(string)
		}
		.property instance class [mscorlib]System.Type Type()
		{
			.get instance class [mscorlib]System.Type System.Configuration.CallbackValidatorAttribute::get_Type()
			.set instance void System.Configuration.CallbackValidatorAttribute::set_Type(class [mscorlib]System.Type)
		}
		.property instance class System.Configuration.ConfigurationValidatorBase ValidatorInstance()
		{
			.get instance class System.Configuration.ConfigurationValidatorBase System.Configuration.CallbackValidatorAttribute::get_ValidatorInstance()
		}
	}
	.class public sealed CommaDelimitedStringCollection
		extends [System]System.Collections.Specialized.StringCollection
	{
		.custom instance void [mscorlib]System.Reflection.DefaultMemberAttribute::.ctor(string) = (01 00 04 49 74 65 6D 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public virtual hidebysig 
			instance string ToString()
		{
			ret
		}
		.method public hidebysig 
			instance void SetReadOnly()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsModified()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsReadOnly()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Item(int32 index)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Item(int32 index, string 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void Add(string 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void AddRange(string[] range)
		{
			ret
		}
		.method public hidebysig 
			instance void Clear()
		{
			ret
		}
		.method public hidebysig 
			instance void Insert(int32 index, string 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void Remove(string 'value')
		{
			ret
		}
		.method public hidebysig 
			instance class System.Configuration.CommaDelimitedStringCollection Clone()
		{
			ret
		}
		.property instance bool IsModified()
		{
			.get instance bool System.Configuration.CommaDelimitedStringCollection::get_IsModified()
		}
		.property instance bool IsReadOnly()
		{
			.get instance bool System.Configuration.CommaDelimitedStringCollection::get_IsReadOnly()
		}
		.property instance string Item(int32)
		{
			.get instance string System.Configuration.CommaDelimitedStringCollection::get_Item(int32)
			.set instance void System.Configuration.CommaDelimitedStringCollection::set_Item(int32, string)
		}
	}
	.class public sealed CommaDelimitedStringCollectionConverter
		extends System.Configuration.ConfigurationConverterBase
	{
		.method public virtual hidebysig 
			instance object ConvertTo(class [System]System.ComponentModel.ITypeDescriptorContext ctx, class [mscorlib]System.Globalization.CultureInfo ci, object 'value', class [mscorlib]System.Type 'type')
		{
			ret
		}
		.method public virtual hidebysig 
			instance object ConvertFrom(class [System]System.ComponentModel.ITypeDescriptorContext ctx, class [mscorlib]System.Globalization.CultureInfo ci, object data)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public sealed Configuration
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance class System.Configuration.AppSettingsSection get_AppSettings()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Configuration.ConnectionStringsSection get_ConnectionStrings()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_FilePath()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_HasFile()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Configuration.ConfigurationLocationCollection get_Locations()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Configuration.ContextInformation get_EvaluationContext()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Configuration.ConfigurationSectionGroup get_RootSectionGroup()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Configuration.ConfigurationSectionCollection get_Sections()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Configuration.ConfigurationSectionGroupCollection get_SectionGroups()
		{
			ret
		}
		.method public hidebysig 
			instance class System.Configuration.ConfigurationSection GetSection(string sectionName)
		{
			ret
		}
		.method public hidebysig 
			instance class System.Configuration.ConfigurationSectionGroup GetSectionGroup(string sectionGroupName)
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_NamespaceDeclared()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_NamespaceDeclared(bool 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void Save()
		{
			ret
		}
		.method public hidebysig 
			instance void Save(valuetype System.Configuration.ConfigurationSaveMode saveMode)
		{
			ret
		}
		.method public hidebysig 
			instance void Save(valuetype System.Configuration.ConfigurationSaveMode saveMode, bool forceSaveAll)
		{
			ret
		}
		.method public hidebysig 
			instance void SaveAs(string filename)
		{
			ret
		}
		.method public hidebysig 
			instance void SaveAs(string filename, valuetype System.Configuration.ConfigurationSaveMode saveMode)
		{
			ret
		}
		.method public hidebysig 
			instance void SaveAs(string filename, valuetype System.Configuration.ConfigurationSaveMode saveMode, bool forceSaveAll)
		{
			ret
		}
		.property instance class System.Configuration.AppSettingsSection AppSettings()
		{
			.get instance class System.Configuration.AppSettingsSection System.Configuration.Configuration::get_AppSettings()
		}
		.property instance class System.Configuration.ConnectionStringsSection ConnectionStrings()
		{
			.get instance class System.Configuration.ConnectionStringsSection System.Configuration.Configuration::get_ConnectionStrings()
		}
		.property instance class System.Configuration.ContextInformation EvaluationContext()
		{
			.get instance class System.Configuration.ContextInformation System.Configuration.Configuration::get_EvaluationContext()
		}
		.property instance string FilePath()
		{
			.get instance string System.Configuration.Configuration::get_FilePath()
		}
		.property instance bool HasFile()
		{
			.get instance bool System.Configuration.Configuration::get_HasFile()
		}
		.property instance class System.Configuration.ConfigurationLocationCollection Locations()
		{
			.get instance class System.Configuration.ConfigurationLocationCollection System.Configuration.Configuration::get_Locations()
		}
		.property instance bool NamespaceDeclared()
		{
			.get instance bool System.Configuration.Configuration::get_NamespaceDeclared()
			.set instance void System.Configuration.Configuration::set_NamespaceDeclared(bool)
		}
		.property instance class System.Configuration.ConfigurationSectionGroup RootSectionGroup()
		{
			.get instance class System.Configuration.ConfigurationSectionGroup System.Configuration.Configuration::get_RootSectionGroup()
		}
		.property instance class System.Configuration.ConfigurationSectionGroupCollection SectionGroups()
		{
			.get instance class System.Configuration.ConfigurationSectionGroupCollection System.Configuration.Configuration::get_SectionGroups()
		}
		.property instance class System.Configuration.ConfigurationSectionCollection Sections()
		{
			.get instance class System.Configuration.ConfigurationSectionCollection System.Configuration.Configuration::get_Sections()
		}
	}
	.class public sealed ConfigurationAllowDefinition
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype System.Configuration.ConfigurationAllowDefinition Everywhere = int32(0x0000012C)
		.field static public literal valuetype System.Configuration.ConfigurationAllowDefinition MachineOnly = int32(0x00000000)
		.field static public literal valuetype System.Configuration.ConfigurationAllowDefinition MachineToApplication = int32(0x000000C8)
		.field static public literal valuetype System.Configuration.ConfigurationAllowDefinition MachineToWebRoot = int32(0x00000064)
	}
	.class public sealed ConfigurationAllowExeDefinition
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype System.Configuration.ConfigurationAllowExeDefinition MachineOnly = int32(0x00000000)
		.field static public literal valuetype System.Configuration.ConfigurationAllowExeDefinition MachineToApplication = int32(0x00000064)
		.field static public literal valuetype System.Configuration.ConfigurationAllowExeDefinition MachineToLocalUser = int32(0x0000012C)
		.field static public literal valuetype System.Configuration.ConfigurationAllowExeDefinition MachineToRoamingUser = int32(0x000000C8)
	}
	.class public sealed ConfigurationCollectionAttribute
		extends [mscorlib]System.Attribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = (01 00 84 00 00 00 00 00)
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Type itemType)
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]System.Type get_ItemType()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_AddItemName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_AddItemName(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_RemoveItemName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_RemoveItemName(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_ClearItemsName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ClearItemsName(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype System.Configuration.ConfigurationElementCollectionType get_CollectionType()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_CollectionType(valuetype System.Configuration.ConfigurationElementCollectionType 'value')
		{
			ret
		}
		.property instance string AddItemName()
		{
			.get instance string System.Configuration.ConfigurationCollectionAttribute::get_AddItemName()
			.set instance void System.Configuration.ConfigurationCollectionAttribute::set_AddItemName(string)
		}
		.property instance string ClearItemsName()
		{
			.get instance string System.Configuration.ConfigurationCollectionAttribute::get_ClearItemsName()
			.set instance void System.Configuration.ConfigurationCollectionAttribute::set_ClearItemsName(string)
		}
		.property instance valuetype System.Configuration.ConfigurationElementCollectionType CollectionType()
		{
			.get instance valuetype System.Configuration.ConfigurationElementCollectionType System.Configuration.ConfigurationCollectionAttribute::get_CollectionType()
			.set instance void System.Configuration.ConfigurationCollectionAttribute::set_CollectionType(valuetype System.Configuration.ConfigurationElementCollectionType)
		}
		.property instance class [mscorlib]System.Type ItemType()
		{
			.get instance class [mscorlib]System.Type System.Configuration.ConfigurationCollectionAttribute::get_ItemType()
		}
		.property instance string RemoveItemName()
		{
			.get instance string System.Configuration.ConfigurationCollectionAttribute::get_RemoveItemName()
			.set instance void System.Configuration.ConfigurationCollectionAttribute::set_RemoveItemName(string)
		}
	}
	.class public abstract ConfigurationConverterBase
		extends [System]System.ComponentModel.TypeConverter
	{
		.method public virtual hidebysig 
			instance bool CanConvertTo(class [System]System.ComponentModel.ITypeDescriptorContext ctx, class [mscorlib]System.Type 'type')
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool CanConvertFrom(class [System]System.ComponentModel.ITypeDescriptorContext ctx, class [mscorlib]System.Type 'type')
		{
			ret
		}
		.method family hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public abstract ConfigurationElement
		extends [mscorlib]System.Object
	{
		.custom instance void [mscorlib]System.Reflection.DefaultMemberAttribute::.ctor(string) = (01 00 04 49 74 65 6D 00 00)
		.method family hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method famorassem virtual hidebysig newslot 
			instance void Init()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Configuration.ConfigurationLockCollection get_LockAttributes()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Configuration.ConfigurationLockCollection get_LockAllAttributesExcept()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Configuration.ConfigurationLockCollection get_LockElements()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Configuration.ConfigurationLockCollection get_LockAllElementsExcept()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_LockItem()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_LockItem(bool 'value')
		{
			ret
		}
		.method famorassem virtual hidebysig newslot 
			instance bool IsModified()
		{
			ret
		}
		.method famorassem virtual hidebysig newslot 
			instance void ResetModified()
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance bool IsReadOnly()
		{
			ret
		}
		.method famorassem virtual hidebysig newslot 
			instance void SetReadOnly()
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void ListErrors(class [mscorlib]System.Collections.IList errorList)
		{
			ret
		}
		.method famorassem virtual hidebysig newslot 
			instance void InitializeDefault()
		{
			ret
		}
		.method famorassem virtual hidebysig newslot 
			instance void Reset(class System.Configuration.ConfigurationElement parentElement)
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool Equals(object compareTo)
		{
			ret
		}
		.method public virtual hidebysig 
			instance int32 GetHashCode()
		{
			ret
		}
		.method famorassem hidebysig specialname 
			instance object get_Item(class System.Configuration.ConfigurationProperty prop)
		{
			ret
		}
		.method famorassem hidebysig specialname 
			instance void set_Item(class System.Configuration.ConfigurationProperty prop, object 'value')
		{
			ret
		}
		.method famorassem hidebysig specialname 
			instance object get_Item(string propertyName)
		{
			ret
		}
		.method famorassem hidebysig specialname 
			instance void set_Item(string propertyName, object 'value')
		{
			ret
		}
		.method family hidebysig 
			instance void SetPropertyValue(class System.Configuration.ConfigurationProperty prop, object 'value', bool ignoreLocks)
		{
			ret
		}
		.method famorassem virtual hidebysig newslot specialname 
			instance class System.Configuration.ConfigurationPropertyCollection get_Properties()
		{
			ret
		}
		.method famorassem virtual hidebysig newslot 
			instance void Unmerge(class System.Configuration.ConfigurationElement sourceElement, class System.Configuration.ConfigurationElement parentElement, valuetype System.Configuration.ConfigurationSaveMode saveMode)
		{
			ret
		}
		.method famorassem virtual hidebysig newslot 
			instance bool SerializeToXmlElement(class [System.Xml]System.Xml.XmlWriter writer, string elementName)
		{
			ret
		}
		.method famorassem virtual hidebysig newslot 
			instance bool SerializeElement(class [System.Xml]System.Xml.XmlWriter writer, bool serializeCollectionKey)
		{
			ret
		}
		.method famorassem virtual hidebysig newslot 
			instance void DeserializeElement(class [System.Xml]System.Xml.XmlReader reader, bool serializeCollectionKey)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance object OnRequiredPropertyNotFound(string name)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void PostDeserialize()
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void PreSerialize(class [System.Xml]System.Xml.XmlWriter writer)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance bool OnDeserializeUnrecognizedAttribute(string name, string 'value')
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance bool OnDeserializeUnrecognizedElement(string elementName, class [System.Xml]System.Xml.XmlReader reader)
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Configuration.ElementInformation get_ElementInformation()
		{
			ret
		}
		.method family hidebysig specialname 
			instance class System.Configuration.ContextInformation get_EvaluationContext()
		{
			ret
		}
		.method famorassem virtual hidebysig newslot specialname 
			instance class System.Configuration.ConfigurationElementProperty get_ElementProperty()
		{
			ret
		}
		.property instance class System.Configuration.ElementInformation ElementInformation()
		{
			.get instance class System.Configuration.ElementInformation System.Configuration.ConfigurationElement::get_ElementInformation()
		}
		.property instance class System.Configuration.ConfigurationElementProperty ElementProperty()
		{
			.get instance class System.Configuration.ConfigurationElementProperty System.Configuration.ConfigurationElement::get_ElementProperty()
		}
		.property instance class System.Configuration.ContextInformation EvaluationContext()
		{
			.get instance class System.Configuration.ContextInformation System.Configuration.ConfigurationElement::get_EvaluationContext()
		}
		.property instance object Item(class System.Configuration.ConfigurationProperty)
		{
			.get instance object System.Configuration.ConfigurationElement::get_Item(class System.Configuration.ConfigurationProperty)
			.set instance void System.Configuration.ConfigurationElement::set_Item(class System.Configuration.ConfigurationProperty, object)
		}
		.property instance object Item(string)
		{
			.get instance object System.Configuration.ConfigurationElement::get_Item(string)
			.set instance void System.Configuration.ConfigurationElement::set_Item(string, object)
		}
		.property instance class System.Configuration.ConfigurationLockCollection LockAllAttributesExcept()
		{
			.get instance class System.Configuration.ConfigurationLockCollection System.Configuration.ConfigurationElement::get_LockAllAttributesExcept()
		}
		.property instance class System.Configuration.ConfigurationLockCollection LockAllElementsExcept()
		{
			.get instance class System.Configuration.ConfigurationLockCollection System.Configuration.ConfigurationElement::get_LockAllElementsExcept()
		}
		.property instance class System.Configuration.ConfigurationLockCollection LockAttributes()
		{
			.get instance class System.Configuration.ConfigurationLockCollection System.Configuration.ConfigurationElement::get_LockAttributes()
		}
		.property instance class System.Configuration.ConfigurationLockCollection LockElements()
		{
			.get instance class System.Configuration.ConfigurationLockCollection System.Configuration.ConfigurationElement::get_LockElements()
		}
		.property instance bool LockItem()
		{
			.get instance bool System.Configuration.ConfigurationElement::get_LockItem()
			.set instance void System.Configuration.ConfigurationElement::set_LockItem(bool)
		}
		.property instance class System.Configuration.ConfigurationPropertyCollection Properties()
		{
			.get instance class System.Configuration.ConfigurationPropertyCollection System.Configuration.ConfigurationElement::get_Properties()
		}
	}
	.class public abstract ConfigurationElementCollection
		extends System.Configuration.ConfigurationElement
		implements [mscorlib]System.Collections.ICollection, [mscorlib]System.Collections.IEnumerable
	{
		.method family hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method family hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Collections.IComparer comparer)
		{
			ret
		}
		.method famorassem hidebysig specialname 
			instance string get_AddElementName()
		{
			ret
		}
		.method famorassem hidebysig specialname 
			instance void set_AddElementName(string 'value')
		{
			ret
		}
		.method famorassem hidebysig specialname 
			instance string get_RemoveElementName()
		{
			ret
		}
		.method famorassem hidebysig specialname 
			instance void set_RemoveElementName(string 'value')
		{
			ret
		}
		.method famorassem hidebysig specialname 
			instance string get_ClearElementName()
		{
			ret
		}
		.method famorassem hidebysig specialname 
			instance void set_ClearElementName(string 'value')
		{
			ret
		}
		.method famorassem virtual hidebysig 
			instance bool IsModified()
		{
			ret
		}
		.method famorassem virtual hidebysig 
			instance void ResetModified()
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool IsReadOnly()
		{
			ret
		}
		.method famorassem virtual hidebysig 
			instance void SetReadOnly()
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool Equals(object compareTo)
		{
			ret
		}
		.method public virtual hidebysig 
			instance int32 GetHashCode()
		{
			ret
		}
		.method famorassem virtual hidebysig 
			instance void Unmerge(class System.Configuration.ConfigurationElement sourceElement, class System.Configuration.ConfigurationElement parentElement, valuetype System.Configuration.ConfigurationSaveMode saveMode)
		{
			ret
		}
		.method famorassem virtual hidebysig 
			instance void Reset(class System.Configuration.ConfigurationElement parentElement)
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance int32 get_Count()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_EmitClear()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_EmitClear(bool 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance bool get_IsSynchronized()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance object get_SyncRoot()
		{
			ret
		}
		.method public hidebysig 
			instance void CopyTo(class System.Configuration.ConfigurationElement[] 'array', int32 index)
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Collections.ICollection.CopyTo(class [mscorlib]System.Array arr, int32 index)
		{
			.override [mscorlib]System.Collections.ICollection::CopyTo
			ret
		}
		.method public final virtual hidebysig newslot 
			instance class [mscorlib]System.Collections.IEnumerator GetEnumerator()
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void BaseAdd(class System.Configuration.ConfigurationElement element)
		{
			ret
		}
		.method famorassem hidebysig 
			instance void BaseAdd(class System.Configuration.ConfigurationElement element, bool throwIfExists)
		{
			ret
		}
		.method family hidebysig 
			instance int32 BaseIndexOf(class System.Configuration.ConfigurationElement element)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void BaseAdd(int32 index, class System.Configuration.ConfigurationElement element)
		{
			ret
		}
		.method famorassem hidebysig 
			instance void BaseRemove(object key)
		{
			ret
		}
		.method famorassem hidebysig 
			instance class System.Configuration.ConfigurationElement BaseGet(object key)
		{
			ret
		}
		.method famorassem hidebysig 
			instance bool BaseIsRemoved(object key)
		{
			ret
		}
		.method famorassem hidebysig 
			instance class System.Configuration.ConfigurationElement BaseGet(int32 index)
		{
			ret
		}
		.method famorassem hidebysig 
			instance object[] BaseGetAllKeys()
		{
			ret
		}
		.method famorassem hidebysig 
			instance object BaseGetKey(int32 index)
		{
			ret
		}
		.method famorassem hidebysig 
			instance void BaseClear()
		{
			ret
		}
		.method famorassem hidebysig 
			instance void BaseRemoveAt(int32 index)
		{
			ret
		}
		.method famorassem virtual hidebysig 
			instance bool SerializeElement(class [System.Xml]System.Xml.XmlWriter writer, bool serializeCollectionKey)
		{
			ret
		}
		.method family virtual hidebysig 
			instance bool OnDeserializeUnrecognizedElement(string elementName, class [System.Xml]System.Xml.XmlReader reader)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance class System.Configuration.ConfigurationElement CreateNewElement(string elementName)
		{
			ret
		}
		.method family virtual hidebysig newslot abstract 
			instance class System.Configuration.ConfigurationElement CreateNewElement()
		{
		}
		.method family virtual hidebysig newslot abstract 
			instance object GetElementKey(class System.Configuration.ConfigurationElement element)
		{
		}
		.method family virtual hidebysig newslot 
			instance bool IsElementRemovable(class System.Configuration.ConfigurationElement element)
		{
			ret
		}
		.method family virtual hidebysig newslot specialname 
			instance string get_ElementName()
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance bool IsElementName(string elementName)
		{
			ret
		}
		.method family virtual hidebysig newslot specialname 
			instance bool get_ThrowOnDuplicate()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance valuetype System.Configuration.ConfigurationElementCollectionType get_CollectionType()
		{
			ret
		}
		.property instance string AddElementName()
		{
			.get instance string System.Configuration.ConfigurationElementCollection::get_AddElementName()
			.set instance void System.Configuration.ConfigurationElementCollection::set_AddElementName(string)
		}
		.property instance string ClearElementName()
		{
			.get instance string System.Configuration.ConfigurationElementCollection::get_ClearElementName()
			.set instance void System.Configuration.ConfigurationElementCollection::set_ClearElementName(string)
		}
		.property instance valuetype System.Configuration.ConfigurationElementCollectionType CollectionType()
		{
			.get instance valuetype System.Configuration.ConfigurationElementCollectionType System.Configuration.ConfigurationElementCollection::get_CollectionType()
		}
		.property instance int32 Count()
		{
			.get instance int32 System.Configuration.ConfigurationElementCollection::get_Count()
		}
		.property instance string ElementName()
		{
			.get instance string System.Configuration.ConfigurationElementCollection::get_ElementName()
		}
		.property instance bool EmitClear()
		{
			.get instance bool System.Configuration.ConfigurationElementCollection::get_EmitClear()
			.set instance void System.Configuration.ConfigurationElementCollection::set_EmitClear(bool)
		}
		.property instance bool IsSynchronized()
		{
			.get instance bool System.Configuration.ConfigurationElementCollection::get_IsSynchronized()
		}
		.property instance string RemoveElementName()
		{
			.get instance string System.Configuration.ConfigurationElementCollection::get_RemoveElementName()
			.set instance void System.Configuration.ConfigurationElementCollection::set_RemoveElementName(string)
		}
		.property instance object SyncRoot()
		{
			.get instance object System.Configuration.ConfigurationElementCollection::get_SyncRoot()
		}
		.property instance bool ThrowOnDuplicate()
		{
			.get instance bool System.Configuration.ConfigurationElementCollection::get_ThrowOnDuplicate()
		}
	}
	.class public sealed ConfigurationElementCollectionType
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype System.Configuration.ConfigurationElementCollectionType AddRemoveClearMap = int32(0x00000001)
		.field static public literal valuetype System.Configuration.ConfigurationElementCollectionType AddRemoveClearMapAlternate = int32(0x00000003)
		.field static public literal valuetype System.Configuration.ConfigurationElementCollectionType BasicMap = int32(0x00000000)
		.field static public literal valuetype System.Configuration.ConfigurationElementCollectionType BasicMapAlternate = int32(0x00000002)
	}
	.class public sealed ConfigurationElementProperty
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance void .ctor(class System.Configuration.ConfigurationValidatorBase validator)
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Configuration.ConfigurationValidatorBase get_Validator()
		{
			ret
		}
		.property instance class System.Configuration.ConfigurationValidatorBase Validator()
		{
			.get instance class System.Configuration.ConfigurationValidatorBase System.Configuration.ConfigurationElementProperty::get_Validator()
		}
	}
	.class public serializable ConfigurationErrorsException
		extends [System]System.Configuration.ConfigurationException
	{
		.method public hidebysig specialname 
			instance void .ctor(string message, class [mscorlib]System.Exception inner, string filename, int32 line)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string message)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string message, class [mscorlib]System.Exception inner)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string message, string filename, int32 line)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string message, class [System.Xml]System.Xml.XmlNode node)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string message, class [mscorlib]System.Exception inner, class [System.Xml]System.Xml.XmlNode node)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string message, class [System.Xml]System.Xml.XmlReader reader)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string message, class [mscorlib]System.Exception inner, class [System.Xml]System.Xml.XmlReader reader)
		{
			ret
		}
		.method family hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Runtime.Serialization.SerializationInfo info, valuetype [mscorlib]System.Runtime.Serialization.StreamingContext context)
		{
			ret
		}
		.method public virtual hidebysig 
			instance void GetObjectData(class [mscorlib]System.Runtime.Serialization.SerializationInfo info, valuetype [mscorlib]System.Runtime.Serialization.StreamingContext context)
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance string get_Message()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance string get_BareMessage()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance string get_Filename()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance int32 get_Line()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]System.Collections.ICollection get_Errors()
		{
			ret
		}
		.method public static hidebysig 
			int32 GetLineNumber(class [System.Xml]System.Xml.XmlNode node)
		{
			ret
		}
		.method public static hidebysig 
			string GetFilename(class [System.Xml]System.Xml.XmlNode node)
		{
			ret
		}
		.method public static hidebysig 
			int32 GetLineNumber(class [System.Xml]System.Xml.XmlReader reader)
		{
			ret
		}
		.method public static hidebysig 
			string GetFilename(class [System.Xml]System.Xml.XmlReader reader)
		{
			ret
		}
		.property instance string BareMessage()
		{
			.get instance string System.Configuration.ConfigurationErrorsException::get_BareMessage()
		}
		.property instance class [mscorlib]System.Collections.ICollection Errors()
		{
			.get instance class [mscorlib]System.Collections.ICollection System.Configuration.ConfigurationErrorsException::get_Errors()
		}
		.property instance string Filename()
		{
			.get instance string System.Configuration.ConfigurationErrorsException::get_Filename()
		}
		.property instance int32 Line()
		{
			.get instance int32 System.Configuration.ConfigurationErrorsException::get_Line()
		}
		.property instance string Message()
		{
			.get instance string System.Configuration.ConfigurationErrorsException::get_Message()
		}
	}
	.class public ConfigurationFileMap
		extends [mscorlib]System.Object
		implements [mscorlib]System.ICloneable
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string machineConfigFilename)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance object Clone()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_MachineConfigFilename()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_MachineConfigFilename(string 'value')
		{
			ret
		}
		.property instance string MachineConfigFilename()
		{
			.get instance string System.Configuration.ConfigurationFileMap::get_MachineConfigFilename()
			.set instance void System.Configuration.ConfigurationFileMap::set_MachineConfigFilename(string)
		}
	}
	.class public ConfigurationLocation
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance string get_Path()
		{
			ret
		}
		.method public hidebysig 
			instance class System.Configuration.Configuration OpenConfiguration()
		{
			ret
		}
		.property instance string Path()
		{
			.get instance string System.Configuration.ConfigurationLocation::get_Path()
		}
	}
	.class public ConfigurationLocationCollection
		extends [mscorlib]System.Collections.ReadOnlyCollectionBase
	{
		.custom instance void [mscorlib]System.Reflection.DefaultMemberAttribute::.ctor(string) = (01 00 04 49 74 65 6D 00 00)
		.method public hidebysig specialname 
			instance class System.Configuration.ConfigurationLocation get_Item(int32 index)
		{
			ret
		}
		.property instance class System.Configuration.ConfigurationLocation Item(int32)
		{
			.get instance class System.Configuration.ConfigurationLocation System.Configuration.ConfigurationLocationCollection::get_Item(int32)
		}
	}
	.class public sealed ConfigurationLockCollection
		extends [mscorlib]System.Object
		implements [mscorlib]System.Collections.ICollection, [mscorlib]System.Collections.IEnumerable
	{
		.method public hidebysig 
			instance void Add(string name)
		{
			ret
		}
		.method public hidebysig 
			instance void Remove(string name)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance class [mscorlib]System.Collections.IEnumerator GetEnumerator()
		{
			ret
		}
		.method public hidebysig 
			instance void Clear()
		{
			ret
		}
		.method public hidebysig 
			instance bool Contains(string name)
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance int32 get_Count()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance bool get_IsSynchronized()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance object get_SyncRoot()
		{
			ret
		}
		.method public hidebysig 
			instance void CopyTo(string[] 'array', int32 index)
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Collections.ICollection.CopyTo(class [mscorlib]System.Array 'array', int32 index)
		{
			.override [mscorlib]System.Collections.ICollection::CopyTo
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsModified()
		{
			ret
		}
		.method public hidebysig 
			instance bool IsReadOnly(string name)
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_AttributeList()
		{
			ret
		}
		.method public hidebysig 
			instance void SetFromList(string attributeList)
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_HasParentElements()
		{
			ret
		}
		.property instance string AttributeList()
		{
			.get instance string System.Configuration.ConfigurationLockCollection::get_AttributeList()
		}
		.property instance int32 Count()
		{
			.get instance int32 System.Configuration.ConfigurationLockCollection::get_Count()
		}
		.property instance bool HasParentElements()
		{
			.get instance bool System.Configuration.ConfigurationLockCollection::get_HasParentElements()
		}
		.property instance bool IsModified()
		{
			.get instance bool System.Configuration.ConfigurationLockCollection::get_IsModified()
		}
		.property instance bool IsSynchronized()
		{
			.get instance bool System.Configuration.ConfigurationLockCollection::get_IsSynchronized()
		}
		.property instance object SyncRoot()
		{
			.get instance object System.Configuration.ConfigurationLockCollection::get_SyncRoot()
		}
	}
	.class public abstract sealed ConfigurationManager
		extends [mscorlib]System.Object
	{
		.method public static hidebysig specialname 
			class [System]System.Collections.Specialized.NameValueCollection get_AppSettings()
		{
			ret
		}
		.method public static hidebysig specialname 
			class System.Configuration.ConnectionStringSettingsCollection get_ConnectionStrings()
		{
			ret
		}
		.method public static hidebysig 
			object GetSection(string sectionName)
		{
			ret
		}
		.method public static hidebysig 
			void RefreshSection(string sectionName)
		{
			ret
		}
		.method public static hidebysig 
			class System.Configuration.Configuration OpenMachineConfiguration()
		{
			ret
		}
		.method public static hidebysig 
			class System.Configuration.Configuration OpenMappedMachineConfiguration(class System.Configuration.ConfigurationFileMap fileMap)
		{
			ret
		}
		.method public static hidebysig 
			class System.Configuration.Configuration OpenExeConfiguration(valuetype System.Configuration.ConfigurationUserLevel userLevel)
		{
			ret
		}
		.method public static hidebysig 
			class System.Configuration.Configuration OpenExeConfiguration(string exePath)
		{
			ret
		}
		.method public static hidebysig 
			class System.Configuration.Configuration OpenMappedExeConfiguration(class System.Configuration.ExeConfigurationFileMap fileMap, valuetype System.Configuration.ConfigurationUserLevel userLevel)
		{
			ret
		}
		.property class [System]System.Collections.Specialized.NameValueCollection AppSettings()
		{
			.get class [System]System.Collections.Specialized.NameValueCollection System.Configuration.ConfigurationManager::get_AppSettings()
		}
		.property class System.Configuration.ConnectionStringSettingsCollection ConnectionStrings()
		{
			.get class System.Configuration.ConnectionStringSettingsCollection System.Configuration.ConfigurationManager::get_ConnectionStrings()
		}
	}
	.class public sealed serializable ConfigurationPermission
		extends [mscorlib]System.Security.CodeAccessPermission
		implements [mscorlib]System.Security.Permissions.IUnrestrictedPermission
	{
		.method public hidebysig specialname 
			instance void .ctor(valuetype [mscorlib]System.Security.Permissions.PermissionState state)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance bool IsUnrestricted()
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [mscorlib]System.Security.IPermission Copy()
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [mscorlib]System.Security.IPermission Union(class [mscorlib]System.Security.IPermission target)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [mscorlib]System.Security.IPermission Intersect(class [mscorlib]System.Security.IPermission target)
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool IsSubsetOf(class [mscorlib]System.Security.IPermission target)
		{
			ret
		}
		.method public virtual hidebysig 
			instance void FromXml(class [mscorlib]System.Security.SecurityElement securityElement)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [mscorlib]System.Security.SecurityElement ToXml()
		{
			ret
		}
	}
	.class public sealed serializable ConfigurationPermissionAttribute
		extends [mscorlib]System.Security.Permissions.CodeAccessSecurityAttribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = (01 00 FF 7F 00 00 02 00 54 02 0D 41 6C 6C 6F 77 4D 75 6C 74 69 70 6C 65 01 54 02 09 49 6E 68 65 72 69 74 65 64 00)
		.method public hidebysig specialname 
			instance void .ctor(valuetype [mscorlib]System.Security.Permissions.SecurityAction action)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [mscorlib]System.Security.IPermission CreatePermission()
		{
			ret
		}
	}
	.class public sealed ConfigurationProperty
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance void .ctor(string name, class [mscorlib]System.Type 'type')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string name, class [mscorlib]System.Type 'type', object defaultValue)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string name, class [mscorlib]System.Type 'type', object defaultValue, valuetype System.Configuration.ConfigurationPropertyOptions options)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string name, class [mscorlib]System.Type 'type', object defaultValue, class [System]System.ComponentModel.TypeConverter typeConverter, class System.Configuration.ConfigurationValidatorBase validator, valuetype System.Configuration.ConfigurationPropertyOptions options)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string name, class [mscorlib]System.Type 'type', object defaultValue, class [System]System.ComponentModel.TypeConverter typeConverter, class System.Configuration.ConfigurationValidatorBase validator, valuetype System.Configuration.ConfigurationPropertyOptions options, string description)
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Description()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]System.Type get_Type()
		{
			ret
		}
		.method public hidebysig specialname 
			instance object get_DefaultValue()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsRequired()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsKey()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsDefaultCollection()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [System]System.ComponentModel.TypeConverter get_Converter()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Configuration.ConfigurationValidatorBase get_Validator()
		{
			ret
		}
		.property instance class [System]System.ComponentModel.TypeConverter Converter()
		{
			.get instance class [System]System.ComponentModel.TypeConverter System.Configuration.ConfigurationProperty::get_Converter()
		}
		.property instance object DefaultValue()
		{
			.get instance object System.Configuration.ConfigurationProperty::get_DefaultValue()
		}
		.property instance string Description()
		{
			.get instance string System.Configuration.ConfigurationProperty::get_Description()
		}
		.property instance bool IsDefaultCollection()
		{
			.get instance bool System.Configuration.ConfigurationProperty::get_IsDefaultCollection()
		}
		.property instance bool IsKey()
		{
			.get instance bool System.Configuration.ConfigurationProperty::get_IsKey()
		}
		.property instance bool IsRequired()
		{
			.get instance bool System.Configuration.ConfigurationProperty::get_IsRequired()
		}
		.property instance string Name()
		{
			.get instance string System.Configuration.ConfigurationProperty::get_Name()
		}
		.property instance class [mscorlib]System.Type Type()
		{
			.get instance class [mscorlib]System.Type System.Configuration.ConfigurationProperty::get_Type()
		}
		.property instance class System.Configuration.ConfigurationValidatorBase Validator()
		{
			.get instance class System.Configuration.ConfigurationValidatorBase System.Configuration.ConfigurationProperty::get_Validator()
		}
	}
	.class public sealed ConfigurationPropertyAttribute
		extends [mscorlib]System.Attribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = (01 00 80 00 00 00 00 00)
		.method public hidebysig specialname 
			instance void .ctor(string name)
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method public hidebysig specialname 
			instance object get_DefaultValue()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_DefaultValue(object 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype System.Configuration.ConfigurationPropertyOptions get_Options()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Options(valuetype System.Configuration.ConfigurationPropertyOptions 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsDefaultCollection()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_IsDefaultCollection(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsRequired()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_IsRequired(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsKey()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_IsKey(bool 'value')
		{
			ret
		}
		.property instance object DefaultValue()
		{
			.get instance object System.Configuration.ConfigurationPropertyAttribute::get_DefaultValue()
			.set instance void System.Configuration.ConfigurationPropertyAttribute::set_DefaultValue(object)
		}
		.property instance bool IsDefaultCollection()
		{
			.get instance bool System.Configuration.ConfigurationPropertyAttribute::get_IsDefaultCollection()
			.set instance void System.Configuration.ConfigurationPropertyAttribute::set_IsDefaultCollection(bool)
		}
		.property instance bool IsKey()
		{
			.get instance bool System.Configuration.ConfigurationPropertyAttribute::get_IsKey()
			.set instance void System.Configuration.ConfigurationPropertyAttribute::set_IsKey(bool)
		}
		.property instance bool IsRequired()
		{
			.get instance bool System.Configuration.ConfigurationPropertyAttribute::get_IsRequired()
			.set instance void System.Configuration.ConfigurationPropertyAttribute::set_IsRequired(bool)
		}
		.property instance string Name()
		{
			.get instance string System.Configuration.ConfigurationPropertyAttribute::get_Name()
		}
		.property instance valuetype System.Configuration.ConfigurationPropertyOptions Options()
		{
			.get instance valuetype System.Configuration.ConfigurationPropertyOptions System.Configuration.ConfigurationPropertyAttribute::get_Options()
			.set instance void System.Configuration.ConfigurationPropertyAttribute::set_Options(valuetype System.Configuration.ConfigurationPropertyOptions)
		}
	}
	.class public ConfigurationPropertyCollection
		extends [mscorlib]System.Object
		implements [mscorlib]System.Collections.ICollection, [mscorlib]System.Collections.IEnumerable
	{
		.custom instance void [mscorlib]System.Reflection.DefaultMemberAttribute::.ctor(string) = (01 00 04 49 74 65 6D 00 00)
		.method public final virtual hidebysig newslot specialname 
			instance int32 get_Count()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance bool get_IsSynchronized()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance object get_SyncRoot()
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Collections.ICollection.CopyTo(class [mscorlib]System.Array 'array', int32 index)
		{
			.override [mscorlib]System.Collections.ICollection::CopyTo
			ret
		}
		.method public hidebysig 
			instance void CopyTo(class System.Configuration.ConfigurationProperty[] 'array', int32 index)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance class [mscorlib]System.Collections.IEnumerator GetEnumerator()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Configuration.ConfigurationProperty get_Item(string name)
		{
			ret
		}
		.method public hidebysig 
			instance bool Contains(string name)
		{
			ret
		}
		.method public hidebysig 
			instance void Add(class System.Configuration.ConfigurationProperty 'property')
		{
			ret
		}
		.method public hidebysig 
			instance bool Remove(string name)
		{
			ret
		}
		.method public hidebysig 
			instance void Clear()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance int32 Count()
		{
			.get instance int32 System.Configuration.ConfigurationPropertyCollection::get_Count()
		}
		.property instance bool IsSynchronized()
		{
			.get instance bool System.Configuration.ConfigurationPropertyCollection::get_IsSynchronized()
		}
		.property instance class System.Configuration.ConfigurationProperty Item(string)
		{
			.get instance class System.Configuration.ConfigurationProperty System.Configuration.ConfigurationPropertyCollection::get_Item(string)
		}
		.property instance object SyncRoot()
		{
			.get instance object System.Configuration.ConfigurationPropertyCollection::get_SyncRoot()
		}
	}
	.class public sealed ConfigurationPropertyOptions
		extends [mscorlib]System.Enum
	{
		.custom instance void [mscorlib]System.FlagsAttribute::.ctor() = (01 00 00 00)
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype System.Configuration.ConfigurationPropertyOptions IsDefaultCollection = int32(0x00000001)
		.field static public literal valuetype System.Configuration.ConfigurationPropertyOptions IsKey = int32(0x00000004)
		.field static public literal valuetype System.Configuration.ConfigurationPropertyOptions IsRequired = int32(0x00000002)
		.field static public literal valuetype System.Configuration.ConfigurationPropertyOptions None = int32(0x00000000)
	}
	.class public sealed ConfigurationSaveMode
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype System.Configuration.ConfigurationSaveMode Full = int32(0x00000002)
		.field static public literal valuetype System.Configuration.ConfigurationSaveMode Minimal = int32(0x00000001)
		.field static public literal valuetype System.Configuration.ConfigurationSaveMode Modified = int32(0x00000000)
	}
	.class public abstract ConfigurationSection
		extends System.Configuration.ConfigurationElement
	{
		.method family hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Configuration.SectionInformation get_SectionInformation()
		{
			ret
		}
		.method famorassem virtual hidebysig newslot 
			instance object GetRuntimeObject()
		{
			ret
		}
		.method famorassem virtual hidebysig 
			instance bool IsModified()
		{
			ret
		}
		.method famorassem virtual hidebysig 
			instance void ResetModified()
		{
			ret
		}
		.method famorassem virtual hidebysig newslot 
			instance void DeserializeSection(class [System.Xml]System.Xml.XmlReader reader)
		{
			ret
		}
		.method famorassem virtual hidebysig newslot 
			instance string SerializeSection(class System.Configuration.ConfigurationElement parentElement, string name, valuetype System.Configuration.ConfigurationSaveMode saveMode)
		{
			ret
		}
		.property instance class System.Configuration.SectionInformation SectionInformation()
		{
			.get instance class System.Configuration.SectionInformation System.Configuration.ConfigurationSection::get_SectionInformation()
		}
	}
	.class public sealed serializable ConfigurationSectionCollection
		extends [System]System.Collections.Specialized.NameObjectCollectionBase
	{
		.custom instance void [mscorlib]System.Reflection.DefaultMemberAttribute::.ctor(string) = (01 00 04 49 74 65 6D 00 00)
		.method public virtual hidebysig 
			instance void GetObjectData(class [mscorlib]System.Runtime.Serialization.SerializationInfo info, valuetype [mscorlib]System.Runtime.Serialization.StreamingContext context)
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Configuration.ConfigurationSection get_Item(string name)
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Configuration.ConfigurationSection get_Item(int32 index)
		{
			ret
		}
		.method public hidebysig 
			instance void Add(string name, class System.Configuration.ConfigurationSection section)
		{
			ret
		}
		.method public hidebysig 
			instance void Clear()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance int32 get_Count()
		{
			ret
		}
		.method public hidebysig 
			instance void CopyTo(class System.Configuration.ConfigurationSection[] 'array', int32 index)
		{
			ret
		}
		.method public hidebysig 
			instance class System.Configuration.ConfigurationSection Get(int32 index)
		{
			ret
		}
		.method public hidebysig 
			instance class System.Configuration.ConfigurationSection Get(string name)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [mscorlib]System.Collections.IEnumerator GetEnumerator()
		{
			ret
		}
		.method public hidebysig 
			instance string GetKey(int32 index)
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class [System]System.Collections.Specialized.NameObjectCollectionBase/KeysCollection get_Keys()
		{
			ret
		}
		.method public hidebysig 
			instance void Remove(string name)
		{
			ret
		}
		.method public hidebysig 
			instance void RemoveAt(int32 index)
		{
			ret
		}
		.property instance int32 Count()
		{
			.get instance int32 System.Configuration.ConfigurationSectionCollection::get_Count()
		}
		.property instance class System.Configuration.ConfigurationSection Item(string)
		{
			.get instance class System.Configuration.ConfigurationSection System.Configuration.ConfigurationSectionCollection::get_Item(string)
		}
		.property instance class System.Configuration.ConfigurationSection Item(int32)
		{
			.get instance class System.Configuration.ConfigurationSection System.Configuration.ConfigurationSectionCollection::get_Item(int32)
		}
		.property instance class [System]System.Collections.Specialized.NameObjectCollectionBase/KeysCollection Keys()
		{
			.get instance class [System]System.Collections.Specialized.NameObjectCollectionBase/KeysCollection System.Configuration.ConfigurationSectionCollection::get_Keys()
		}
	}
	.class public ConfigurationSectionGroup
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsDeclared()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsDeclarationRequired()
		{
			ret
		}
		.method public hidebysig 
			instance void ForceDeclaration()
		{
			ret
		}
		.method public hidebysig 
			instance void ForceDeclaration(bool force)
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_SectionGroupName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Type()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Type(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Configuration.ConfigurationSectionCollection get_Sections()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Configuration.ConfigurationSectionGroupCollection get_SectionGroups()
		{
			ret
		}
		.property instance bool IsDeclarationRequired()
		{
			.get instance bool System.Configuration.ConfigurationSectionGroup::get_IsDeclarationRequired()
		}
		.property instance bool IsDeclared()
		{
			.get instance bool System.Configuration.ConfigurationSectionGroup::get_IsDeclared()
		}
		.property instance string Name()
		{
			.get instance string System.Configuration.ConfigurationSectionGroup::get_Name()
		}
		.property instance string SectionGroupName()
		{
			.get instance string System.Configuration.ConfigurationSectionGroup::get_SectionGroupName()
		}
		.property instance class System.Configuration.ConfigurationSectionGroupCollection SectionGroups()
		{
			.get instance class System.Configuration.ConfigurationSectionGroupCollection System.Configuration.ConfigurationSectionGroup::get_SectionGroups()
		}
		.property instance class System.Configuration.ConfigurationSectionCollection Sections()
		{
			.get instance class System.Configuration.ConfigurationSectionCollection System.Configuration.ConfigurationSectionGroup::get_Sections()
		}
		.property instance string Type()
		{
			.get instance string System.Configuration.ConfigurationSectionGroup::get_Type()
			.set instance void System.Configuration.ConfigurationSectionGroup::set_Type(string)
		}
	}
	.class public sealed serializable ConfigurationSectionGroupCollection
		extends [System]System.Collections.Specialized.NameObjectCollectionBase
	{
		.custom instance void [mscorlib]System.Reflection.DefaultMemberAttribute::.ctor(string) = (01 00 04 49 74 65 6D 00 00)
		.method public virtual hidebysig 
			instance void GetObjectData(class [mscorlib]System.Runtime.Serialization.SerializationInfo info, valuetype [mscorlib]System.Runtime.Serialization.StreamingContext context)
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Configuration.ConfigurationSectionGroup get_Item(string name)
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Configuration.ConfigurationSectionGroup get_Item(int32 index)
		{
			ret
		}
		.method public hidebysig 
			instance void Add(string name, class System.Configuration.ConfigurationSectionGroup sectionGroup)
		{
			ret
		}
		.method public hidebysig 
			instance void Clear()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance int32 get_Count()
		{
			ret
		}
		.method public hidebysig 
			instance void CopyTo(class System.Configuration.ConfigurationSectionGroup[] 'array', int32 index)
		{
			ret
		}
		.method public hidebysig 
			instance class System.Configuration.ConfigurationSectionGroup Get(int32 index)
		{
			ret
		}
		.method public hidebysig 
			instance class System.Configuration.ConfigurationSectionGroup Get(string name)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [mscorlib]System.Collections.IEnumerator GetEnumerator()
		{
			ret
		}
		.method public hidebysig 
			instance string GetKey(int32 index)
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class [System]System.Collections.Specialized.NameObjectCollectionBase/KeysCollection get_Keys()
		{
			ret
		}
		.method public hidebysig 
			instance void Remove(string name)
		{
			ret
		}
		.method public hidebysig 
			instance void RemoveAt(int32 index)
		{
			ret
		}
		.property instance int32 Count()
		{
			.get instance int32 System.Configuration.ConfigurationSectionGroupCollection::get_Count()
		}
		.property instance class System.Configuration.ConfigurationSectionGroup Item(string)
		{
			.get instance class System.Configuration.ConfigurationSectionGroup System.Configuration.ConfigurationSectionGroupCollection::get_Item(string)
		}
		.property instance class System.Configuration.ConfigurationSectionGroup Item(int32)
		{
			.get instance class System.Configuration.ConfigurationSectionGroup System.Configuration.ConfigurationSectionGroupCollection::get_Item(int32)
		}
		.property instance class [System]System.Collections.Specialized.NameObjectCollectionBase/KeysCollection Keys()
		{
			.get instance class [System]System.Collections.Specialized.NameObjectCollectionBase/KeysCollection System.Configuration.ConfigurationSectionGroupCollection::get_Keys()
		}
	}
	.class public sealed ConfigurationUserLevel
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype System.Configuration.ConfigurationUserLevel None = int32(0x00000000)
		.field static public literal valuetype System.Configuration.ConfigurationUserLevel PerUserRoaming = int32(0x0000000A)
		.field static public literal valuetype System.Configuration.ConfigurationUserLevel PerUserRoamingAndLocal = int32(0x00000014)
	}
	.class public ConfigurationValidatorAttribute
		extends [mscorlib]System.Attribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = (01 00 80 00 00 00 00 00)
		.method family hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Type validator)
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance class System.Configuration.ConfigurationValidatorBase get_ValidatorInstance()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]System.Type get_ValidatorType()
		{
			ret
		}
		.property instance class System.Configuration.ConfigurationValidatorBase ValidatorInstance()
		{
			.get instance class System.Configuration.ConfigurationValidatorBase System.Configuration.ConfigurationValidatorAttribute::get_ValidatorInstance()
		}
		.property instance class [mscorlib]System.Type ValidatorType()
		{
			.get instance class [mscorlib]System.Type System.Configuration.ConfigurationValidatorAttribute::get_ValidatorType()
		}
	}
	.class public abstract ConfigurationValidatorBase
		extends [mscorlib]System.Object
	{
		.method public virtual hidebysig newslot 
			instance bool CanValidate(class [mscorlib]System.Type 'type')
		{
			ret
		}
		.method public virtual hidebysig newslot abstract 
			instance void Validate(object 'value')
		{
		}
		.method family hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public sealed ConnectionStringSettings
		extends System.Configuration.ConfigurationElement
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string name, string connectionString)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string name, string connectionString, string providerName)
		{
			ret
		}
		.method famorassem virtual hidebysig specialname 
			instance class System.Configuration.ConfigurationPropertyCollection get_Properties()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Name(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_ConnectionString()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ConnectionString(string 'value')
		{
			ret
		}
		.method public virtual hidebysig 
			instance string ToString()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_ProviderName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ProviderName(string 'value')
		{
			ret
		}
		.property instance string ConnectionString()
		{
			.get instance string System.Configuration.ConnectionStringSettings::get_ConnectionString()
			.set instance void System.Configuration.ConnectionStringSettings::set_ConnectionString(string)
		}
		.property instance string Name()
		{
			.get instance string System.Configuration.ConnectionStringSettings::get_Name()
			.set instance void System.Configuration.ConnectionStringSettings::set_Name(string)
		}
		.property instance class System.Configuration.ConfigurationPropertyCollection Properties()
		{
			.get instance class System.Configuration.ConfigurationPropertyCollection System.Configuration.ConnectionStringSettings::get_Properties()
		}
		.property instance string ProviderName()
		{
			.get instance string System.Configuration.ConnectionStringSettings::get_ProviderName()
			.set instance void System.Configuration.ConnectionStringSettings::set_ProviderName(string)
		}
	}
	.class public sealed ConnectionStringSettingsCollection
		extends System.Configuration.ConfigurationElementCollection
	{
		.custom instance void [mscorlib]System.Reflection.DefaultMemberAttribute::.ctor(string) = (01 00 04 49 74 65 6D 00 00)
		.method famorassem virtual hidebysig specialname 
			instance class System.Configuration.ConfigurationPropertyCollection get_Properties()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Configuration.ConnectionStringSettings get_Item(int32 index)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Item(int32 index, class System.Configuration.ConnectionStringSettings 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Configuration.ConnectionStringSettings get_Item(string name)
		{
			ret
		}
		.method public hidebysig 
			instance int32 IndexOf(class System.Configuration.ConnectionStringSettings settings)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void BaseAdd(int32 index, class System.Configuration.ConfigurationElement element)
		{
			ret
		}
		.method public hidebysig 
			instance void Add(class System.Configuration.ConnectionStringSettings settings)
		{
			ret
		}
		.method public hidebysig 
			instance void Remove(class System.Configuration.ConnectionStringSettings settings)
		{
			ret
		}
		.method public hidebysig 
			instance void RemoveAt(int32 index)
		{
			ret
		}
		.method public hidebysig 
			instance void Remove(string name)
		{
			ret
		}
		.method family virtual hidebysig 
			instance class System.Configuration.ConfigurationElement CreateNewElement()
		{
			ret
		}
		.method family virtual hidebysig 
			instance object GetElementKey(class System.Configuration.ConfigurationElement element)
		{
			ret
		}
		.method public hidebysig 
			instance void Clear()
		{
			ret
		}
		.property instance class System.Configuration.ConnectionStringSettings Item(int32)
		{
			.get instance class System.Configuration.ConnectionStringSettings System.Configuration.ConnectionStringSettingsCollection::get_Item(int32)
			.set instance void System.Configuration.ConnectionStringSettingsCollection::set_Item(int32, class System.Configuration.ConnectionStringSettings)
		}
		.property instance class System.Configuration.ConnectionStringSettings Item(string)
		{
			.get instance class System.Configuration.ConnectionStringSettings System.Configuration.ConnectionStringSettingsCollection::get_Item(string)
		}
		.property instance class System.Configuration.ConfigurationPropertyCollection Properties()
		{
			.get instance class System.Configuration.ConfigurationPropertyCollection System.Configuration.ConnectionStringSettingsCollection::get_Properties()
		}
	}
	.class public sealed ConnectionStringsSection
		extends System.Configuration.ConfigurationSection
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method famorassem virtual hidebysig 
			instance object GetRuntimeObject()
		{
			ret
		}
		.method famorassem virtual hidebysig specialname 
			instance class System.Configuration.ConfigurationPropertyCollection get_Properties()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Configuration.ConnectionStringSettingsCollection get_ConnectionStrings()
		{
			ret
		}
		.property instance class System.Configuration.ConnectionStringSettingsCollection ConnectionStrings()
		{
			.get instance class System.Configuration.ConnectionStringSettingsCollection System.Configuration.ConnectionStringsSection::get_ConnectionStrings()
		}
		.property instance class System.Configuration.ConfigurationPropertyCollection Properties()
		{
			.get instance class System.Configuration.ConfigurationPropertyCollection System.Configuration.ConnectionStringsSection::get_Properties()
		}
	}
	.class public sealed ContextInformation
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance object get_HostingContext()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsMachineLevel()
		{
			ret
		}
		.method public hidebysig 
			instance object GetSection(string sectionName)
		{
			ret
		}
		.property instance object HostingContext()
		{
			.get instance object System.Configuration.ContextInformation::get_HostingContext()
		}
		.property instance bool IsMachineLevel()
		{
			.get instance bool System.Configuration.ContextInformation::get_IsMachineLevel()
		}
	}
	.class public sealed DefaultSection
		extends System.Configuration.ConfigurationSection
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method famorassem virtual hidebysig specialname 
			instance class System.Configuration.ConfigurationPropertyCollection get_Properties()
		{
			ret
		}
		.method famorassem virtual hidebysig 
			instance bool IsModified()
		{
			ret
		}
		.method famorassem virtual hidebysig 
			instance void ResetModified()
		{
			ret
		}
		.method famorassem virtual hidebysig 
			instance void Reset(class System.Configuration.ConfigurationElement parentSection)
		{
			ret
		}
		.method famorassem virtual hidebysig 
			instance void DeserializeSection(class [System.Xml]System.Xml.XmlReader xmlReader)
		{
			ret
		}
		.method famorassem virtual hidebysig 
			instance string SerializeSection(class System.Configuration.ConfigurationElement parentSection, string name, valuetype System.Configuration.ConfigurationSaveMode saveMode)
		{
			ret
		}
		.property instance class System.Configuration.ConfigurationPropertyCollection Properties()
		{
			.get instance class System.Configuration.ConfigurationPropertyCollection System.Configuration.DefaultSection::get_Properties()
		}
	}
	.class public sealed DefaultValidator
		extends System.Configuration.ConfigurationValidatorBase
	{
		.method public virtual hidebysig 
			instance bool CanValidate(class [mscorlib]System.Type 'type')
		{
			ret
		}
		.method public virtual hidebysig 
			instance void Validate(object 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public sealed ElementInformation
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance class System.Configuration.PropertyInformationCollection get_Properties()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsPresent()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsLocked()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsCollection()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Source()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_LineNumber()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]System.Type get_Type()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Configuration.ConfigurationValidatorBase get_Validator()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]System.Collections.ICollection get_Errors()
		{
			ret
		}
		.property instance class [mscorlib]System.Collections.ICollection Errors()
		{
			.get instance class [mscorlib]System.Collections.ICollection System.Configuration.ElementInformation::get_Errors()
		}
		.property instance bool IsCollection()
		{
			.get instance bool System.Configuration.ElementInformation::get_IsCollection()
		}
		.property instance bool IsLocked()
		{
			.get instance bool System.Configuration.ElementInformation::get_IsLocked()
		}
		.property instance bool IsPresent()
		{
			.get instance bool System.Configuration.ElementInformation::get_IsPresent()
		}
		.property instance int32 LineNumber()
		{
			.get instance int32 System.Configuration.ElementInformation::get_LineNumber()
		}
		.property instance class System.Configuration.PropertyInformationCollection Properties()
		{
			.get instance class System.Configuration.PropertyInformationCollection System.Configuration.ElementInformation::get_Properties()
		}
		.property instance string Source()
		{
			.get instance string System.Configuration.ElementInformation::get_Source()
		}
		.property instance class [mscorlib]System.Type Type()
		{
			.get instance class [mscorlib]System.Type System.Configuration.ElementInformation::get_Type()
		}
		.property instance class System.Configuration.ConfigurationValidatorBase Validator()
		{
			.get instance class System.Configuration.ConfigurationValidatorBase System.Configuration.ElementInformation::get_Validator()
		}
	}
	.class public sealed ExeConfigurationFileMap
		extends System.Configuration.ConfigurationFileMap
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public virtual hidebysig 
			instance object Clone()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_ExeConfigFilename()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ExeConfigFilename(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_RoamingUserConfigFilename()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_RoamingUserConfigFilename(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_LocalUserConfigFilename()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_LocalUserConfigFilename(string 'value')
		{
			ret
		}
		.property instance string ExeConfigFilename()
		{
			.get instance string System.Configuration.ExeConfigurationFileMap::get_ExeConfigFilename()
			.set instance void System.Configuration.ExeConfigurationFileMap::set_ExeConfigFilename(string)
		}
		.property instance string LocalUserConfigFilename()
		{
			.get instance string System.Configuration.ExeConfigurationFileMap::get_LocalUserConfigFilename()
			.set instance void System.Configuration.ExeConfigurationFileMap::set_LocalUserConfigFilename(string)
		}
		.property instance string RoamingUserConfigFilename()
		{
			.get instance string System.Configuration.ExeConfigurationFileMap::get_RoamingUserConfigFilename()
			.set instance void System.Configuration.ExeConfigurationFileMap::set_RoamingUserConfigFilename(string)
		}
	}
	.class public sealed ExeContext
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance valuetype System.Configuration.ConfigurationUserLevel get_UserLevel()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_ExePath()
		{
			ret
		}
		.property instance string ExePath()
		{
			.get instance string System.Configuration.ExeContext::get_ExePath()
		}
		.property instance valuetype System.Configuration.ConfigurationUserLevel UserLevel()
		{
			.get instance valuetype System.Configuration.ConfigurationUserLevel System.Configuration.ExeContext::get_UserLevel()
		}
	}
	.class public sealed GenericEnumConverter
		extends System.Configuration.ConfigurationConverterBase
	{
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Type typeEnum)
		{
			ret
		}
		.method public virtual hidebysig 
			instance object ConvertTo(class [System]System.ComponentModel.ITypeDescriptorContext ctx, class [mscorlib]System.Globalization.CultureInfo ci, object 'value', class [mscorlib]System.Type 'type')
		{
			ret
		}
		.method public virtual hidebysig 
			instance object ConvertFrom(class [System]System.ComponentModel.ITypeDescriptorContext ctx, class [mscorlib]System.Globalization.CultureInfo ci, object data)
		{
			ret
		}
	}
	.class public sealed IgnoreSection
		extends System.Configuration.ConfigurationSection
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method famorassem virtual hidebysig specialname 
			instance class System.Configuration.ConfigurationPropertyCollection get_Properties()
		{
			ret
		}
		.method famorassem virtual hidebysig 
			instance bool IsModified()
		{
			ret
		}
		.method famorassem virtual hidebysig 
			instance void ResetModified()
		{
			ret
		}
		.method famorassem virtual hidebysig 
			instance void Reset(class System.Configuration.ConfigurationElement parentSection)
		{
			ret
		}
		.method famorassem virtual hidebysig 
			instance void DeserializeSection(class [System.Xml]System.Xml.XmlReader xmlReader)
		{
			ret
		}
		.method famorassem virtual hidebysig 
			instance string SerializeSection(class System.Configuration.ConfigurationElement parentSection, string name, valuetype System.Configuration.ConfigurationSaveMode saveMode)
		{
			ret
		}
		.property instance class System.Configuration.ConfigurationPropertyCollection Properties()
		{
			.get instance class System.Configuration.ConfigurationPropertyCollection System.Configuration.IgnoreSection::get_Properties()
		}
	}
	.class public sealed InfiniteIntConverter
		extends System.Configuration.ConfigurationConverterBase
	{
		.method public virtual hidebysig 
			instance object ConvertTo(class [System]System.ComponentModel.ITypeDescriptorContext ctx, class [mscorlib]System.Globalization.CultureInfo ci, object 'value', class [mscorlib]System.Type 'type')
		{
			ret
		}
		.method public virtual hidebysig 
			instance object ConvertFrom(class [System]System.ComponentModel.ITypeDescriptorContext ctx, class [mscorlib]System.Globalization.CultureInfo ci, object data)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public sealed InfiniteTimeSpanConverter
		extends System.Configuration.ConfigurationConverterBase
	{
		.method public virtual hidebysig 
			instance object ConvertTo(class [System]System.ComponentModel.ITypeDescriptorContext ctx, class [mscorlib]System.Globalization.CultureInfo ci, object 'value', class [mscorlib]System.Type 'type')
		{
			ret
		}
		.method public virtual hidebysig 
			instance object ConvertFrom(class [System]System.ComponentModel.ITypeDescriptorContext ctx, class [mscorlib]System.Globalization.CultureInfo ci, object data)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public IntegerValidator
		extends System.Configuration.ConfigurationValidatorBase
	{
		.method public hidebysig specialname 
			instance void .ctor(int32 minValue, int32 maxValue)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(int32 minValue, int32 maxValue, bool rangeIsExclusive)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(int32 minValue, int32 maxValue, bool rangeIsExclusive, int32 resolution)
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool CanValidate(class [mscorlib]System.Type 'type')
		{
			ret
		}
		.method public virtual hidebysig 
			instance void Validate(object 'value')
		{
			ret
		}
	}
	.class public sealed IntegerValidatorAttribute
		extends System.Configuration.ConfigurationValidatorAttribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = (01 00 80 00 00 00 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class System.Configuration.ConfigurationValidatorBase get_ValidatorInstance()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_MinValue()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_MinValue(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_MaxValue()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_MaxValue(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_ExcludeRange()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ExcludeRange(bool 'value')
		{
			ret
		}
		.property instance bool ExcludeRange()
		{
			.get instance bool System.Configuration.IntegerValidatorAttribute::get_ExcludeRange()
			.set instance void System.Configuration.IntegerValidatorAttribute::set_ExcludeRange(bool)
		}
		.property instance int32 MaxValue()
		{
			.get instance int32 System.Configuration.IntegerValidatorAttribute::get_MaxValue()
			.set instance void System.Configuration.IntegerValidatorAttribute::set_MaxValue(int32)
		}
		.property instance int32 MinValue()
		{
			.get instance int32 System.Configuration.IntegerValidatorAttribute::get_MinValue()
			.set instance void System.Configuration.IntegerValidatorAttribute::set_MinValue(int32)
		}
		.property instance class System.Configuration.ConfigurationValidatorBase ValidatorInstance()
		{
			.get instance class System.Configuration.ConfigurationValidatorBase System.Configuration.IntegerValidatorAttribute::get_ValidatorInstance()
		}
	}
	.class public KeyValueConfigurationCollection
		extends System.Configuration.ConfigurationElementCollection
	{
		.custom instance void [mscorlib]System.Reflection.DefaultMemberAttribute::.ctor(string) = (01 00 04 49 74 65 6D 00 00)
		.method famorassem virtual hidebysig specialname 
			instance class System.Configuration.ConfigurationPropertyCollection get_Properties()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method family virtual hidebysig specialname 
			instance bool get_ThrowOnDuplicate()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Configuration.KeyValueConfigurationElement get_Item(string key)
		{
			ret
		}
		.method public hidebysig specialname 
			instance string[] get_AllKeys()
		{
			ret
		}
		.method public hidebysig 
			instance void Add(class System.Configuration.KeyValueConfigurationElement keyValue)
		{
			ret
		}
		.method public hidebysig 
			instance void Add(string key, string 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void Remove(string key)
		{
			ret
		}
		.method public hidebysig 
			instance void Clear()
		{
			ret
		}
		.method family virtual hidebysig 
			instance class System.Configuration.ConfigurationElement CreateNewElement()
		{
			ret
		}
		.method family virtual hidebysig 
			instance object GetElementKey(class System.Configuration.ConfigurationElement element)
		{
			ret
		}
		.property instance string[] AllKeys()
		{
			.get instance string[] System.Configuration.KeyValueConfigurationCollection::get_AllKeys()
		}
		.property instance class System.Configuration.KeyValueConfigurationElement Item(string)
		{
			.get instance class System.Configuration.KeyValueConfigurationElement System.Configuration.KeyValueConfigurationCollection::get_Item(string)
		}
		.property instance class System.Configuration.ConfigurationPropertyCollection Properties()
		{
			.get instance class System.Configuration.ConfigurationPropertyCollection System.Configuration.KeyValueConfigurationCollection::get_Properties()
		}
		.property instance bool ThrowOnDuplicate()
		{
			.get instance bool System.Configuration.KeyValueConfigurationCollection::get_ThrowOnDuplicate()
		}
	}
	.class public KeyValueConfigurationElement
		extends System.Configuration.ConfigurationElement
	{
		.method famorassem virtual hidebysig specialname 
			instance class System.Configuration.ConfigurationPropertyCollection get_Properties()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string key, string 'value')
		{
			ret
		}
		.method famorassem virtual hidebysig 
			instance void Init()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Key()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Value()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Value(string 'value')
		{
			ret
		}
		.property instance string Key()
		{
			.get instance string System.Configuration.KeyValueConfigurationElement::get_Key()
		}
		.property instance class System.Configuration.ConfigurationPropertyCollection Properties()
		{
			.get instance class System.Configuration.ConfigurationPropertyCollection System.Configuration.KeyValueConfigurationElement::get_Properties()
		}
		.property instance string Value()
		{
			.get instance string System.Configuration.KeyValueConfigurationElement::get_Value()
			.set instance void System.Configuration.KeyValueConfigurationElement::set_Value(string)
		}
	}
	.class public LongValidator
		extends System.Configuration.ConfigurationValidatorBase
	{
		.method public hidebysig specialname 
			instance void .ctor(int64 minValue, int64 maxValue)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(int64 minValue, int64 maxValue, bool rangeIsExclusive)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(int64 minValue, int64 maxValue, bool rangeIsExclusive, int64 resolution)
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool CanValidate(class [mscorlib]System.Type 'type')
		{
			ret
		}
		.method public virtual hidebysig 
			instance void Validate(object 'value')
		{
			ret
		}
	}
	.class public sealed LongValidatorAttribute
		extends System.Configuration.ConfigurationValidatorAttribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = (01 00 80 00 00 00 00 00)
		.method public virtual hidebysig specialname 
			instance class System.Configuration.ConfigurationValidatorBase get_ValidatorInstance()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int64 get_MinValue()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_MinValue(int64 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int64 get_MaxValue()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_MaxValue(int64 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_ExcludeRange()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ExcludeRange(bool 'value')
		{
			ret
		}
		.property instance bool ExcludeRange()
		{
			.get instance bool System.Configuration.LongValidatorAttribute::get_ExcludeRange()
			.set instance void System.Configuration.LongValidatorAttribute::set_ExcludeRange(bool)
		}
		.property instance int64 MaxValue()
		{
			.get instance int64 System.Configuration.LongValidatorAttribute::get_MaxValue()
			.set instance void System.Configuration.LongValidatorAttribute::set_MaxValue(int64)
		}
		.property instance int64 MinValue()
		{
			.get instance int64 System.Configuration.LongValidatorAttribute::get_MinValue()
			.set instance void System.Configuration.LongValidatorAttribute::set_MinValue(int64)
		}
		.property instance class System.Configuration.ConfigurationValidatorBase ValidatorInstance()
		{
			.get instance class System.Configuration.ConfigurationValidatorBase System.Configuration.LongValidatorAttribute::get_ValidatorInstance()
		}
	}
	.class public sealed NameValueConfigurationCollection
		extends System.Configuration.ConfigurationElementCollection
	{
		.custom instance void [mscorlib]System.Reflection.DefaultMemberAttribute::.ctor(string) = (01 00 04 49 74 65 6D 00 00)
		.method famorassem virtual hidebysig specialname 
			instance class System.Configuration.ConfigurationPropertyCollection get_Properties()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Configuration.NameValueConfigurationElement get_Item(string name)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Item(string name, class System.Configuration.NameValueConfigurationElement 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string[] get_AllKeys()
		{
			ret
		}
		.method public hidebysig 
			instance void Add(class System.Configuration.NameValueConfigurationElement nameValue)
		{
			ret
		}
		.method public hidebysig 
			instance void Remove(class System.Configuration.NameValueConfigurationElement nameValue)
		{
			ret
		}
		.method public hidebysig 
			instance void Remove(string name)
		{
			ret
		}
		.method public hidebysig 
			instance void Clear()
		{
			ret
		}
		.method family virtual hidebysig 
			instance class System.Configuration.ConfigurationElement CreateNewElement()
		{
			ret
		}
		.method family virtual hidebysig 
			instance object GetElementKey(class System.Configuration.ConfigurationElement element)
		{
			ret
		}
		.property instance string[] AllKeys()
		{
			.get instance string[] System.Configuration.NameValueConfigurationCollection::get_AllKeys()
		}
		.property instance class System.Configuration.NameValueConfigurationElement Item(string)
		{
			.get instance class System.Configuration.NameValueConfigurationElement System.Configuration.NameValueConfigurationCollection::get_Item(string)
			.set instance void System.Configuration.NameValueConfigurationCollection::set_Item(string, class System.Configuration.NameValueConfigurationElement)
		}
		.property instance class System.Configuration.ConfigurationPropertyCollection Properties()
		{
			.get instance class System.Configuration.ConfigurationPropertyCollection System.Configuration.NameValueConfigurationCollection::get_Properties()
		}
	}
	.class public sealed NameValueConfigurationElement
		extends System.Configuration.ConfigurationElement
	{
		.method famorassem virtual hidebysig specialname 
			instance class System.Configuration.ConfigurationPropertyCollection get_Properties()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string name, string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Value()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Value(string 'value')
		{
			ret
		}
		.property instance string Name()
		{
			.get instance string System.Configuration.NameValueConfigurationElement::get_Name()
		}
		.property instance class System.Configuration.ConfigurationPropertyCollection Properties()
		{
			.get instance class System.Configuration.ConfigurationPropertyCollection System.Configuration.NameValueConfigurationElement::get_Properties()
		}
		.property instance string Value()
		{
			.get instance string System.Configuration.NameValueConfigurationElement::get_Value()
			.set instance void System.Configuration.NameValueConfigurationElement::set_Value(string)
		}
	}
	.class public PositiveTimeSpanValidator
		extends System.Configuration.ConfigurationValidatorBase
	{
		.method public virtual hidebysig 
			instance bool CanValidate(class [mscorlib]System.Type 'type')
		{
			ret
		}
		.method public virtual hidebysig 
			instance void Validate(object 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public sealed PositiveTimeSpanValidatorAttribute
		extends System.Configuration.ConfigurationValidatorAttribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = (01 00 80 00 00 00 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class System.Configuration.ConfigurationValidatorBase get_ValidatorInstance()
		{
			ret
		}
		.property instance class System.Configuration.ConfigurationValidatorBase ValidatorInstance()
		{
			.get instance class System.Configuration.ConfigurationValidatorBase System.Configuration.PositiveTimeSpanValidatorAttribute::get_ValidatorInstance()
		}
	}
	.class public sealed PropertyInformation
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method public hidebysig specialname 
			instance object get_Value()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Value(object 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance object get_DefaultValue()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype System.Configuration.PropertyValueOrigin get_ValueOrigin()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsModified()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsKey()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsRequired()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsLocked()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Source()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_LineNumber()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]System.Type get_Type()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Configuration.ConfigurationValidatorBase get_Validator()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [System]System.ComponentModel.TypeConverter get_Converter()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Description()
		{
			ret
		}
		.property instance class [System]System.ComponentModel.TypeConverter Converter()
		{
			.get instance class [System]System.ComponentModel.TypeConverter System.Configuration.PropertyInformation::get_Converter()
		}
		.property instance object DefaultValue()
		{
			.get instance object System.Configuration.PropertyInformation::get_DefaultValue()
		}
		.property instance string Description()
		{
			.get instance string System.Configuration.PropertyInformation::get_Description()
		}
		.property instance bool IsKey()
		{
			.get instance bool System.Configuration.PropertyInformation::get_IsKey()
		}
		.property instance bool IsLocked()
		{
			.get instance bool System.Configuration.PropertyInformation::get_IsLocked()
		}
		.property instance bool IsModified()
		{
			.get instance bool System.Configuration.PropertyInformation::get_IsModified()
		}
		.property instance bool IsRequired()
		{
			.get instance bool System.Configuration.PropertyInformation::get_IsRequired()
		}
		.property instance int32 LineNumber()
		{
			.get instance int32 System.Configuration.PropertyInformation::get_LineNumber()
		}
		.property instance string Name()
		{
			.get instance string System.Configuration.PropertyInformation::get_Name()
		}
		.property instance string Source()
		{
			.get instance string System.Configuration.PropertyInformation::get_Source()
		}
		.property instance class [mscorlib]System.Type Type()
		{
			.get instance class [mscorlib]System.Type System.Configuration.PropertyInformation::get_Type()
		}
		.property instance class System.Configuration.ConfigurationValidatorBase Validator()
		{
			.get instance class System.Configuration.ConfigurationValidatorBase System.Configuration.PropertyInformation::get_Validator()
		}
		.property instance object Value()
		{
			.get instance object System.Configuration.PropertyInformation::get_Value()
			.set instance void System.Configuration.PropertyInformation::set_Value(object)
		}
		.property instance valuetype System.Configuration.PropertyValueOrigin ValueOrigin()
		{
			.get instance valuetype System.Configuration.PropertyValueOrigin System.Configuration.PropertyInformation::get_ValueOrigin()
		}
	}
	.class public sealed serializable PropertyInformationCollection
		extends [System]System.Collections.Specialized.NameObjectCollectionBase
	{
		.custom instance void [mscorlib]System.Reflection.DefaultMemberAttribute::.ctor(string) = (01 00 04 49 74 65 6D 00 00)
		.method public virtual hidebysig 
			instance void GetObjectData(class [mscorlib]System.Runtime.Serialization.SerializationInfo info, valuetype [mscorlib]System.Runtime.Serialization.StreamingContext context)
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Configuration.PropertyInformation get_Item(string propertyName)
		{
			ret
		}
		.method public hidebysig 
			instance void CopyTo(class System.Configuration.PropertyInformation[] 'array', int32 index)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [mscorlib]System.Collections.IEnumerator GetEnumerator()
		{
			ret
		}
		.property instance class System.Configuration.PropertyInformation Item(string)
		{
			.get instance class System.Configuration.PropertyInformation System.Configuration.PropertyInformationCollection::get_Item(string)
		}
	}
	.class public sealed PropertyValueOrigin
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype System.Configuration.PropertyValueOrigin Default = int32(0x00000000)
		.field static public literal valuetype System.Configuration.PropertyValueOrigin Inherited = int32(0x00000001)
		.field static public literal valuetype System.Configuration.PropertyValueOrigin SetHere = int32(0x00000002)
	}
	.class public abstract sealed ProtectedConfiguration
		extends [mscorlib]System.Object
	{
		.permissionset linkcheck = (00)
		.method public static hidebysig specialname 
			class System.Configuration.ProtectedConfigurationProviderCollection get_Providers()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_DefaultProvider()
		{
			ret
		}
		.field static public literal string DataProtectionProviderName = "DataProtectionConfigurationProvider"
		.field static public literal string ProtectedDataSectionName = "configProtectedData"
		.field static public literal string RsaProviderName = "RsaProtectedConfigurationProvider"
		.property string DefaultProvider()
		{
			.get string System.Configuration.ProtectedConfiguration::get_DefaultProvider()
		}
		.property class System.Configuration.ProtectedConfigurationProviderCollection Providers()
		{
			.get class System.Configuration.ProtectedConfigurationProviderCollection System.Configuration.ProtectedConfiguration::get_Providers()
		}
	}
	.class public abstract ProtectedConfigurationProvider
		extends System.Configuration.Provider.ProviderBase
	{
		.method public virtual hidebysig newslot abstract 
			instance class [System.Xml]System.Xml.XmlNode Encrypt(class [System.Xml]System.Xml.XmlNode node)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class [System.Xml]System.Xml.XmlNode Decrypt(class [System.Xml]System.Xml.XmlNode encryptedNode)
		{
		}
		.method family hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public ProtectedConfigurationProviderCollection
		extends System.Configuration.Provider.ProviderCollection
	{
		.custom instance void [mscorlib]System.Reflection.DefaultMemberAttribute::.ctor(string) = (01 00 04 49 74 65 6D 00 00)
		.method public virtual hidebysig 
			instance void Add(class System.Configuration.Provider.ProviderBase provider)
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Configuration.ProtectedConfigurationProvider get_Item(string name)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance class System.Configuration.ProtectedConfigurationProvider Item(string)
		{
			.get instance class System.Configuration.ProtectedConfigurationProvider System.Configuration.ProtectedConfigurationProviderCollection::get_Item(string)
		}
	}
	.class public sealed ProtectedConfigurationSection
		extends System.Configuration.ConfigurationSection
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method famorassem virtual hidebysig specialname 
			instance class System.Configuration.ConfigurationPropertyCollection get_Properties()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Configuration.ProviderSettingsCollection get_Providers()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_DefaultProvider()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_DefaultProvider(string 'value')
		{
			ret
		}
		.property instance string DefaultProvider()
		{
			.get instance string System.Configuration.ProtectedConfigurationSection::get_DefaultProvider()
			.set instance void System.Configuration.ProtectedConfigurationSection::set_DefaultProvider(string)
		}
		.property instance class System.Configuration.ConfigurationPropertyCollection Properties()
		{
			.get instance class System.Configuration.ConfigurationPropertyCollection System.Configuration.ProtectedConfigurationSection::get_Properties()
		}
		.property instance class System.Configuration.ProviderSettingsCollection Providers()
		{
			.get instance class System.Configuration.ProviderSettingsCollection System.Configuration.ProtectedConfigurationSection::get_Providers()
		}
	}
	.class public ProtectedProviderSettings
		extends System.Configuration.ConfigurationElement
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method famorassem virtual hidebysig specialname 
			instance class System.Configuration.ConfigurationPropertyCollection get_Properties()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Configuration.ProviderSettingsCollection get_Providers()
		{
			ret
		}
		.property instance class System.Configuration.ConfigurationPropertyCollection Properties()
		{
			.get instance class System.Configuration.ConfigurationPropertyCollection System.Configuration.ProtectedProviderSettings::get_Properties()
		}
		.property instance class System.Configuration.ProviderSettingsCollection Providers()
		{
			.get instance class System.Configuration.ProviderSettingsCollection System.Configuration.ProtectedProviderSettings::get_Providers()
		}
	}
	.class public sealed ProviderSettings
		extends System.Configuration.ConfigurationElement
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string name, string 'type')
		{
			ret
		}
		.method famorassem virtual hidebysig specialname 
			instance class System.Configuration.ConfigurationPropertyCollection get_Properties()
		{
			ret
		}
		.method famorassem virtual hidebysig 
			instance void Unmerge(class System.Configuration.ConfigurationElement sourceElement, class System.Configuration.ConfigurationElement parentElement, valuetype System.Configuration.ConfigurationSaveMode saveMode)
		{
			ret
		}
		.method famorassem virtual hidebysig 
			instance void Reset(class System.Configuration.ConfigurationElement parentElement)
		{
			ret
		}
		.method famorassem virtual hidebysig 
			instance bool IsModified()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Name(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Type()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Type(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [System]System.Collections.Specialized.NameValueCollection get_Parameters()
		{
			ret
		}
		.method family virtual hidebysig 
			instance bool OnDeserializeUnrecognizedAttribute(string name, string 'value')
		{
			ret
		}
		.property instance string Name()
		{
			.get instance string System.Configuration.ProviderSettings::get_Name()
			.set instance void System.Configuration.ProviderSettings::set_Name(string)
		}
		.property instance class [System]System.Collections.Specialized.NameValueCollection Parameters()
		{
			.get instance class [System]System.Collections.Specialized.NameValueCollection System.Configuration.ProviderSettings::get_Parameters()
		}
		.property instance class System.Configuration.ConfigurationPropertyCollection Properties()
		{
			.get instance class System.Configuration.ConfigurationPropertyCollection System.Configuration.ProviderSettings::get_Properties()
		}
		.property instance string Type()
		{
			.get instance string System.Configuration.ProviderSettings::get_Type()
			.set instance void System.Configuration.ProviderSettings::set_Type(string)
		}
	}
	.class public sealed ProviderSettingsCollection
		extends System.Configuration.ConfigurationElementCollection
	{
		.custom instance void [mscorlib]System.Reflection.DefaultMemberAttribute::.ctor(string) = (01 00 04 49 74 65 6D 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method famorassem virtual hidebysig specialname 
			instance class System.Configuration.ConfigurationPropertyCollection get_Properties()
		{
			ret
		}
		.method public hidebysig 
			instance void Add(class System.Configuration.ProviderSettings provider)
		{
			ret
		}
		.method public hidebysig 
			instance void Remove(string name)
		{
			ret
		}
		.method public hidebysig 
			instance void Clear()
		{
			ret
		}
		.method family virtual hidebysig 
			instance class System.Configuration.ConfigurationElement CreateNewElement()
		{
			ret
		}
		.method family virtual hidebysig 
			instance object GetElementKey(class System.Configuration.ConfigurationElement element)
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Configuration.ProviderSettings get_Item(string key)
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Configuration.ProviderSettings get_Item(int32 index)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Item(int32 index, class System.Configuration.ProviderSettings 'value')
		{
			ret
		}
		.property instance class System.Configuration.ProviderSettings Item(string)
		{
			.get instance class System.Configuration.ProviderSettings System.Configuration.ProviderSettingsCollection::get_Item(string)
		}
		.property instance class System.Configuration.ProviderSettings Item(int32)
		{
			.get instance class System.Configuration.ProviderSettings System.Configuration.ProviderSettingsCollection::get_Item(int32)
			.set instance void System.Configuration.ProviderSettingsCollection::set_Item(int32, class System.Configuration.ProviderSettings)
		}
		.property instance class System.Configuration.ConfigurationPropertyCollection Properties()
		{
			.get instance class System.Configuration.ConfigurationPropertyCollection System.Configuration.ProviderSettingsCollection::get_Properties()
		}
	}
	.class public RegexStringValidator
		extends System.Configuration.ConfigurationValidatorBase
	{
		.method public hidebysig specialname 
			instance void .ctor(string regex)
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool CanValidate(class [mscorlib]System.Type 'type')
		{
			ret
		}
		.method public virtual hidebysig 
			instance void Validate(object 'value')
		{
			ret
		}
	}
	.class public sealed RegexStringValidatorAttribute
		extends System.Configuration.ConfigurationValidatorAttribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = (01 00 80 00 00 00 00 00)
		.method public hidebysig specialname 
			instance void .ctor(string regex)
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class System.Configuration.ConfigurationValidatorBase get_ValidatorInstance()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Regex()
		{
			ret
		}
		.property instance string Regex()
		{
			.get instance string System.Configuration.RegexStringValidatorAttribute::get_Regex()
		}
		.property instance class System.Configuration.ConfigurationValidatorBase ValidatorInstance()
		{
			.get instance class System.Configuration.ConfigurationValidatorBase System.Configuration.RegexStringValidatorAttribute::get_ValidatorInstance()
		}
	}
	.class public sealed SectionInformation
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance string get_SectionName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype System.Configuration.ConfigurationAllowDefinition get_AllowDefinition()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_AllowDefinition(valuetype System.Configuration.ConfigurationAllowDefinition 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype System.Configuration.ConfigurationAllowExeDefinition get_AllowExeDefinition()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_AllowExeDefinition(valuetype System.Configuration.ConfigurationAllowExeDefinition 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_AllowLocation()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_AllowLocation(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_AllowOverride()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_AllowOverride(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_ConfigSource()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ConfigSource(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_InheritInChildApplications()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_InheritInChildApplications(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsDeclared()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsDeclarationRequired()
		{
			ret
		}
		.method public hidebysig 
			instance void ForceDeclaration()
		{
			ret
		}
		.method public hidebysig 
			instance void ForceDeclaration(bool force)
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsLocked()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsProtected()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Configuration.ProtectedConfigurationProvider get_ProtectionProvider()
		{
			ret
		}
		.method public hidebysig 
			instance void ProtectSection(string protectionProvider)
		{
			ret
		}
		.method public hidebysig 
			instance void UnprotectSection()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_RestartOnExternalChanges()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_RestartOnExternalChanges(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_RequirePermission()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_RequirePermission(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Type()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Type(string 'value')
		{
			ret
		}
		.method public hidebysig 
			instance class System.Configuration.ConfigurationSection GetParentSection()
		{
			ret
		}
		.method public hidebysig 
			instance string GetRawXml()
		{
			ret
		}
		.method public hidebysig 
			instance void SetRawXml(string rawXml)
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_ForceSave()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ForceSave(bool 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void RevertToParent()
		{
			ret
		}
		.property instance valuetype System.Configuration.ConfigurationAllowDefinition AllowDefinition()
		{
			.get instance valuetype System.Configuration.ConfigurationAllowDefinition System.Configuration.SectionInformation::get_AllowDefinition()
			.set instance void System.Configuration.SectionInformation::set_AllowDefinition(valuetype System.Configuration.ConfigurationAllowDefinition)
		}
		.property instance valuetype System.Configuration.ConfigurationAllowExeDefinition AllowExeDefinition()
		{
			.get instance valuetype System.Configuration.ConfigurationAllowExeDefinition System.Configuration.SectionInformation::get_AllowExeDefinition()
			.set instance void System.Configuration.SectionInformation::set_AllowExeDefinition(valuetype System.Configuration.ConfigurationAllowExeDefinition)
		}
		.property instance bool AllowLocation()
		{
			.get instance bool System.Configuration.SectionInformation::get_AllowLocation()
			.set instance void System.Configuration.SectionInformation::set_AllowLocation(bool)
		}
		.property instance bool AllowOverride()
		{
			.get instance bool System.Configuration.SectionInformation::get_AllowOverride()
			.set instance void System.Configuration.SectionInformation::set_AllowOverride(bool)
		}
		.property instance string ConfigSource()
		{
			.get instance string System.Configuration.SectionInformation::get_ConfigSource()
			.set instance void System.Configuration.SectionInformation::set_ConfigSource(string)
		}
		.property instance bool ForceSave()
		{
			.get instance bool System.Configuration.SectionInformation::get_ForceSave()
			.set instance void System.Configuration.SectionInformation::set_ForceSave(bool)
		}
		.property instance bool InheritInChildApplications()
		{
			.get instance bool System.Configuration.SectionInformation::get_InheritInChildApplications()
			.set instance void System.Configuration.SectionInformation::set_InheritInChildApplications(bool)
		}
		.property instance bool IsDeclarationRequired()
		{
			.get instance bool System.Configuration.SectionInformation::get_IsDeclarationRequired()
		}
		.property instance bool IsDeclared()
		{
			.get instance bool System.Configuration.SectionInformation::get_IsDeclared()
		}
		.property instance bool IsLocked()
		{
			.get instance bool System.Configuration.SectionInformation::get_IsLocked()
		}
		.property instance bool IsProtected()
		{
			.get instance bool System.Configuration.SectionInformation::get_IsProtected()
		}
		.property instance string Name()
		{
			.get instance string System.Configuration.SectionInformation::get_Name()
		}
		.property instance class System.Configuration.ProtectedConfigurationProvider ProtectionProvider()
		{
			.get instance class System.Configuration.ProtectedConfigurationProvider System.Configuration.SectionInformation::get_ProtectionProvider()
		}
		.property instance bool RequirePermission()
		{
			.get instance bool System.Configuration.SectionInformation::get_RequirePermission()
			.set instance void System.Configuration.SectionInformation::set_RequirePermission(bool)
		}
		.property instance bool RestartOnExternalChanges()
		{
			.get instance bool System.Configuration.SectionInformation::get_RestartOnExternalChanges()
			.set instance void System.Configuration.SectionInformation::set_RestartOnExternalChanges(bool)
		}
		.property instance string SectionName()
		{
			.get instance string System.Configuration.SectionInformation::get_SectionName()
		}
		.property instance string Type()
		{
			.get instance string System.Configuration.SectionInformation::get_Type()
			.set instance void System.Configuration.SectionInformation::set_Type(string)
		}
	}
	.class public StringValidator
		extends System.Configuration.ConfigurationValidatorBase
	{
		.method public hidebysig specialname 
			instance void .ctor(int32 minLength)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(int32 minLength, int32 maxLength)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(int32 minLength, int32 maxLength, string invalidCharacters)
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool CanValidate(class [mscorlib]System.Type 'type')
		{
			ret
		}
		.method public virtual hidebysig 
			instance void Validate(object 'value')
		{
			ret
		}
	}
	.class public sealed StringValidatorAttribute
		extends System.Configuration.ConfigurationValidatorAttribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = (01 00 80 00 00 00 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class System.Configuration.ConfigurationValidatorBase get_ValidatorInstance()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_MinLength()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_MinLength(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_MaxLength()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_MaxLength(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_InvalidCharacters()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_InvalidCharacters(string 'value')
		{
			ret
		}
		.property instance string InvalidCharacters()
		{
			.get instance string System.Configuration.StringValidatorAttribute::get_InvalidCharacters()
			.set instance void System.Configuration.StringValidatorAttribute::set_InvalidCharacters(string)
		}
		.property instance int32 MaxLength()
		{
			.get instance int32 System.Configuration.StringValidatorAttribute::get_MaxLength()
			.set instance void System.Configuration.StringValidatorAttribute::set_MaxLength(int32)
		}
		.property instance int32 MinLength()
		{
			.get instance int32 System.Configuration.StringValidatorAttribute::get_MinLength()
			.set instance void System.Configuration.StringValidatorAttribute::set_MinLength(int32)
		}
		.property instance class System.Configuration.ConfigurationValidatorBase ValidatorInstance()
		{
			.get instance class System.Configuration.ConfigurationValidatorBase System.Configuration.StringValidatorAttribute::get_ValidatorInstance()
		}
	}
	.class public sealed SubclassTypeValidator
		extends System.Configuration.ConfigurationValidatorBase
	{
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Type baseClass)
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool CanValidate(class [mscorlib]System.Type 'type')
		{
			ret
		}
		.method public virtual hidebysig 
			instance void Validate(object 'value')
		{
			ret
		}
	}
	.class public sealed SubclassTypeValidatorAttribute
		extends System.Configuration.ConfigurationValidatorAttribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = (01 00 80 00 00 00 00 00)
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Type baseClass)
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class System.Configuration.ConfigurationValidatorBase get_ValidatorInstance()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]System.Type get_BaseClass()
		{
			ret
		}
		.property instance class [mscorlib]System.Type BaseClass()
		{
			.get instance class [mscorlib]System.Type System.Configuration.SubclassTypeValidatorAttribute::get_BaseClass()
		}
		.property instance class System.Configuration.ConfigurationValidatorBase ValidatorInstance()
		{
			.get instance class System.Configuration.ConfigurationValidatorBase System.Configuration.SubclassTypeValidatorAttribute::get_ValidatorInstance()
		}
	}
	.class public TimeSpanMinutesConverter
		extends System.Configuration.ConfigurationConverterBase
	{
		.method public virtual hidebysig 
			instance object ConvertTo(class [System]System.ComponentModel.ITypeDescriptorContext ctx, class [mscorlib]System.Globalization.CultureInfo ci, object 'value', class [mscorlib]System.Type 'type')
		{
			ret
		}
		.method public virtual hidebysig 
			instance object ConvertFrom(class [System]System.ComponentModel.ITypeDescriptorContext ctx, class [mscorlib]System.Globalization.CultureInfo ci, object data)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public sealed TimeSpanMinutesOrInfiniteConverter
		extends System.Configuration.TimeSpanMinutesConverter
	{
		.method public virtual hidebysig 
			instance object ConvertTo(class [System]System.ComponentModel.ITypeDescriptorContext ctx, class [mscorlib]System.Globalization.CultureInfo ci, object 'value', class [mscorlib]System.Type 'type')
		{
			ret
		}
		.method public virtual hidebysig 
			instance object ConvertFrom(class [System]System.ComponentModel.ITypeDescriptorContext ctx, class [mscorlib]System.Globalization.CultureInfo ci, object data)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public TimeSpanSecondsConverter
		extends System.Configuration.ConfigurationConverterBase
	{
		.method public virtual hidebysig 
			instance object ConvertTo(class [System]System.ComponentModel.ITypeDescriptorContext ctx, class [mscorlib]System.Globalization.CultureInfo ci, object 'value', class [mscorlib]System.Type 'type')
		{
			ret
		}
		.method public virtual hidebysig 
			instance object ConvertFrom(class [System]System.ComponentModel.ITypeDescriptorContext ctx, class [mscorlib]System.Globalization.CultureInfo ci, object data)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public sealed TimeSpanSecondsOrInfiniteConverter
		extends System.Configuration.TimeSpanSecondsConverter
	{
		.method public virtual hidebysig 
			instance object ConvertTo(class [System]System.ComponentModel.ITypeDescriptorContext ctx, class [mscorlib]System.Globalization.CultureInfo ci, object 'value', class [mscorlib]System.Type 'type')
		{
			ret
		}
		.method public virtual hidebysig 
			instance object ConvertFrom(class [System]System.ComponentModel.ITypeDescriptorContext ctx, class [mscorlib]System.Globalization.CultureInfo ci, object data)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public TimeSpanValidator
		extends System.Configuration.ConfigurationValidatorBase
	{
		.method public hidebysig specialname 
			instance void .ctor(valuetype [mscorlib]System.TimeSpan minValue, valuetype [mscorlib]System.TimeSpan maxValue)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(valuetype [mscorlib]System.TimeSpan minValue, valuetype [mscorlib]System.TimeSpan maxValue, bool rangeIsExclusive)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(valuetype [mscorlib]System.TimeSpan minValue, valuetype [mscorlib]System.TimeSpan maxValue, bool rangeIsExclusive, int64 resolutionInSeconds)
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool CanValidate(class [mscorlib]System.Type 'type')
		{
			ret
		}
		.method public virtual hidebysig 
			instance void Validate(object 'value')
		{
			ret
		}
	}
	.class public sealed TimeSpanValidatorAttribute
		extends System.Configuration.ConfigurationValidatorAttribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = (01 00 80 00 00 00 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class System.Configuration.ConfigurationValidatorBase get_ValidatorInstance()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [mscorlib]System.TimeSpan get_MinValue()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [mscorlib]System.TimeSpan get_MaxValue()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_MinValueString()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_MinValueString(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_MaxValueString()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_MaxValueString(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_ExcludeRange()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ExcludeRange(bool 'value')
		{
			ret
		}
		.field static public literal string TimeSpanMaxValue = "10675199.02:48:05.4775807"
		.field static public literal string TimeSpanMinValue = "-10675199.02:48:05.4775808"
		.property instance bool ExcludeRange()
		{
			.get instance bool System.Configuration.TimeSpanValidatorAttribute::get_ExcludeRange()
			.set instance void System.Configuration.TimeSpanValidatorAttribute::set_ExcludeRange(bool)
		}
		.property instance valuetype [mscorlib]System.TimeSpan MaxValue()
		{
			.get instance valuetype [mscorlib]System.TimeSpan System.Configuration.TimeSpanValidatorAttribute::get_MaxValue()
		}
		.property instance string MaxValueString()
		{
			.get instance string System.Configuration.TimeSpanValidatorAttribute::get_MaxValueString()
			.set instance void System.Configuration.TimeSpanValidatorAttribute::set_MaxValueString(string)
		}
		.property instance valuetype [mscorlib]System.TimeSpan MinValue()
		{
			.get instance valuetype [mscorlib]System.TimeSpan System.Configuration.TimeSpanValidatorAttribute::get_MinValue()
		}
		.property instance string MinValueString()
		{
			.get instance string System.Configuration.TimeSpanValidatorAttribute::get_MinValueString()
			.set instance void System.Configuration.TimeSpanValidatorAttribute::set_MinValueString(string)
		}
		.property instance class System.Configuration.ConfigurationValidatorBase ValidatorInstance()
		{
			.get instance class System.Configuration.ConfigurationValidatorBase System.Configuration.TimeSpanValidatorAttribute::get_ValidatorInstance()
		}
	}
	.class public sealed TypeNameConverter
		extends System.Configuration.ConfigurationConverterBase
	{
		.method public virtual hidebysig 
			instance object ConvertTo(class [System]System.ComponentModel.ITypeDescriptorContext ctx, class [mscorlib]System.Globalization.CultureInfo ci, object 'value', class [mscorlib]System.Type 'type')
		{
			ret
		}
		.method public virtual hidebysig 
			instance object ConvertFrom(class [System]System.ComponentModel.ITypeDescriptorContext ctx, class [mscorlib]System.Globalization.CultureInfo ci, object data)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public sealed ValidatorCallback
		extends [mscorlib]System.MulticastDelegate
	{
		.method public hidebysig specialname 
			instance void .ctor(object 'object', native int 'method')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void Invoke(object 'value')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance class [mscorlib]System.IAsyncResult BeginInvoke(object 'value', class [mscorlib]System.AsyncCallback callback, object 'object')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void EndInvoke(class [mscorlib]System.IAsyncResult result)
			runtime 
		{
		}
	}
	.class public sealed WhiteSpaceTrimStringConverter
		extends System.Configuration.ConfigurationConverterBase
	{
		.method public virtual hidebysig 
			instance object ConvertTo(class [System]System.ComponentModel.ITypeDescriptorContext ctx, class [mscorlib]System.Globalization.CultureInfo ci, object 'value', class [mscorlib]System.Type 'type')
		{
			ret
		}
		.method public virtual hidebysig 
			instance object ConvertFrom(class [System]System.ComponentModel.ITypeDescriptorContext ctx, class [mscorlib]System.Globalization.CultureInfo ci, object data)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
}
.namespace System.Configuration.Internal
{
	.class public DelegatingConfigHost
		extends [mscorlib]System.Object
		implements System.Configuration.Internal.IInternalConfigHost
	{
		.method family hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method family hidebysig specialname 
			instance class System.Configuration.Internal.IInternalConfigHost get_Host()
		{
			ret
		}
		.method family hidebysig specialname 
			instance void set_Host(class System.Configuration.Internal.IInternalConfigHost 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void Init(class System.Configuration.Internal.IInternalConfigRoot configRoot, object[] hostInitParams)
		{
			.param [2]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = (01 00 00 00)
			ret
		}
		.method public virtual hidebysig newslot 
			instance void InitForConfiguration(string& locationSubPath, [out] string& configPath, [out] string& locationConfigPath, class System.Configuration.Internal.IInternalConfigRoot configRoot, object[] hostInitConfigurationParams)
		{
			.param [5]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = (01 00 00 00)
			ret
		}
		.method public virtual hidebysig newslot 
			instance bool IsConfigRecordRequired(string configPath)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance bool IsInitDelayed(class System.Configuration.Internal.IInternalConfigRecord configRecord)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void RequireCompleteInit(class System.Configuration.Internal.IInternalConfigRecord configRecord)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance bool IsSecondaryRoot(string configPath)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance string GetStreamName(string configPath)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance string GetStreamNameForConfigSource(string streamName, string configSource)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance object GetStreamVersion(string streamName)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance class [mscorlib]'System.IO.Stream' OpenStreamForRead(string streamName)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance class [mscorlib]'System.IO.Stream' OpenStreamForRead(string streamName, bool assertPermissions)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance class [mscorlib]'System.IO.Stream' OpenStreamForWrite(string streamName, string templateStreamName, object& writeContext)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance class [mscorlib]'System.IO.Stream' OpenStreamForWrite(string streamName, string templateStreamName, object& writeContext, bool assertPermissions)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void WriteCompleted(string streamName, bool success, object writeContext)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void WriteCompleted(string streamName, bool success, object writeContext, bool assertPermissions)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void DeleteStream(string streamName)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance bool IsFile(string streamName)
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_SupportsChangeNotifications()
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance object StartMonitoringStreamForChanges(string streamName, class System.Configuration.Internal.StreamChangeCallback callback)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void StopMonitoringStreamForChanges(string streamName, class System.Configuration.Internal.StreamChangeCallback callback)
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_SupportsRefresh()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_SupportsPath()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_SupportsLocation()
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance bool IsAboveApplication(string configPath)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance bool IsDefinitionAllowed(string configPath, valuetype System.Configuration.ConfigurationAllowDefinition allowDefinition, valuetype System.Configuration.ConfigurationAllowExeDefinition allowExeDefinition)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void VerifyDefinitionAllowed(string configPath, valuetype System.Configuration.ConfigurationAllowDefinition allowDefinition, valuetype System.Configuration.ConfigurationAllowExeDefinition allowExeDefinition, class System.Configuration.Internal.IConfigErrorInfo errorInfo)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance string GetConfigPathFromLocationSubPath(string configPath, string locationSubPath)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance bool IsLocationApplicable(string configPath)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance bool IsTrustedConfigPath(string configPath)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance bool IsFullTrustSectionWithoutAptcaAllowed(class System.Configuration.Internal.IInternalConfigRecord configRecord)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void GetRestrictedPermissions(class System.Configuration.Internal.IInternalConfigRecord configRecord, [out] class [mscorlib]System.Security.PermissionSet& permissionSet, [out] bool& isHostReady)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance class [mscorlib]System.IDisposable Impersonate()
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance bool PrefetchAll(string configPath, string streamName)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance bool PrefetchSection(string sectionGroupName, string sectionName)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance object CreateDeprecatedConfigContext(string configPath)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance object CreateConfigurationContext(string configPath, string locationSubPath)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance string DecryptSection(string encryptedXml, class System.Configuration.ProtectedConfigurationProvider protectionProvider, class System.Configuration.ProtectedConfigurationSection protectedConfigSection)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance string EncryptSection(string clearTextXml, class System.Configuration.ProtectedConfigurationProvider protectionProvider, class System.Configuration.ProtectedConfigurationSection protectedConfigSection)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance class [mscorlib]System.Type GetConfigType(string typeName, bool throwOnError)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance string GetConfigTypeName(class [mscorlib]System.Type t)
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_IsRemote()
		{
			ret
		}
		.property instance class System.Configuration.Internal.IInternalConfigHost Host()
		{
			.get instance class System.Configuration.Internal.IInternalConfigHost System.Configuration.Internal.DelegatingConfigHost::get_Host()
			.set instance void System.Configuration.Internal.DelegatingConfigHost::set_Host(class System.Configuration.Internal.IInternalConfigHost)
		}
		.property instance bool IsRemote()
		{
			.get instance bool System.Configuration.Internal.DelegatingConfigHost::get_IsRemote()
		}
		.property instance bool SupportsChangeNotifications()
		{
			.get instance bool System.Configuration.Internal.DelegatingConfigHost::get_SupportsChangeNotifications()
		}
		.property instance bool SupportsLocation()
		{
			.get instance bool System.Configuration.Internal.DelegatingConfigHost::get_SupportsLocation()
		}
		.property instance bool SupportsPath()
		{
			.get instance bool System.Configuration.Internal.DelegatingConfigHost::get_SupportsPath()
		}
		.property instance bool SupportsRefresh()
		{
			.get instance bool System.Configuration.Internal.DelegatingConfigHost::get_SupportsRefresh()
		}
	}
	.class public interface abstract IConfigErrorInfo
	{
		.method public virtual hidebysig newslot abstract specialname 
			instance string get_Filename()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance int32 get_LineNumber()
		{
		}
		.property instance string Filename()
		{
			.get instance string System.Configuration.Internal.IConfigErrorInfo::get_Filename()
		}
		.property instance int32 LineNumber()
		{
			.get instance int32 System.Configuration.Internal.IConfigErrorInfo::get_LineNumber()
		}
	}
	.class public interface abstract IConfigSystem
	{
		.method public virtual hidebysig newslot abstract 
			instance void Init(class [mscorlib]System.Type typeConfigHost, object[] hostInitParams)
		{
			.param [2]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = (01 00 00 00)
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance class System.Configuration.Internal.IInternalConfigHost get_Host()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance class System.Configuration.Internal.IInternalConfigRoot get_Root()
		{
		}
		.property instance class System.Configuration.Internal.IInternalConfigHost Host()
		{
			.get instance class System.Configuration.Internal.IInternalConfigHost System.Configuration.Internal.IConfigSystem::get_Host()
		}
		.property instance class System.Configuration.Internal.IInternalConfigRoot Root()
		{
			.get instance class System.Configuration.Internal.IInternalConfigRoot System.Configuration.Internal.IConfigSystem::get_Root()
		}
	}
	.class public interface abstract IConfigurationManagerHelper
	{
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 00 00 00)
		.method public virtual hidebysig newslot abstract 
			instance void EnsureNetConfigLoaded()
		{
		}
	}
	.class public interface abstract IConfigurationManagerInternal
	{
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 00 00 00)
		.method public virtual hidebysig newslot abstract specialname 
			instance bool get_SupportsUserConfig()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance bool get_SetConfigurationSystemInProgress()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance string get_MachineConfigPath()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance string get_ApplicationConfigUri()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance string get_ExeProductName()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance string get_ExeProductVersion()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance string get_ExeRoamingConfigDirectory()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance string get_ExeRoamingConfigPath()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance string get_ExeLocalConfigDirectory()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance string get_ExeLocalConfigPath()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance string get_UserConfigFilename()
		{
		}
		.property instance string ApplicationConfigUri()
		{
			.get instance string System.Configuration.Internal.IConfigurationManagerInternal::get_ApplicationConfigUri()
		}
		.property instance string ExeLocalConfigDirectory()
		{
			.get instance string System.Configuration.Internal.IConfigurationManagerInternal::get_ExeLocalConfigDirectory()
		}
		.property instance string ExeLocalConfigPath()
		{
			.get instance string System.Configuration.Internal.IConfigurationManagerInternal::get_ExeLocalConfigPath()
		}
		.property instance string ExeProductName()
		{
			.get instance string System.Configuration.Internal.IConfigurationManagerInternal::get_ExeProductName()
		}
		.property instance string ExeProductVersion()
		{
			.get instance string System.Configuration.Internal.IConfigurationManagerInternal::get_ExeProductVersion()
		}
		.property instance string ExeRoamingConfigDirectory()
		{
			.get instance string System.Configuration.Internal.IConfigurationManagerInternal::get_ExeRoamingConfigDirectory()
		}
		.property instance string ExeRoamingConfigPath()
		{
			.get instance string System.Configuration.Internal.IConfigurationManagerInternal::get_ExeRoamingConfigPath()
		}
		.property instance string MachineConfigPath()
		{
			.get instance string System.Configuration.Internal.IConfigurationManagerInternal::get_MachineConfigPath()
		}
		.property instance bool SetConfigurationSystemInProgress()
		{
			.get instance bool System.Configuration.Internal.IConfigurationManagerInternal::get_SetConfigurationSystemInProgress()
		}
		.property instance bool SupportsUserConfig()
		{
			.get instance bool System.Configuration.Internal.IConfigurationManagerInternal::get_SupportsUserConfig()
		}
		.property instance string UserConfigFilename()
		{
			.get instance string System.Configuration.Internal.IConfigurationManagerInternal::get_UserConfigFilename()
		}
	}
	.class public interface abstract IInternalConfigClientHost
	{
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 00 00 00)
		.method public virtual hidebysig newslot abstract 
			instance bool IsExeConfig(string configPath)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance bool IsRoamingUserConfig(string configPath)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance bool IsLocalUserConfig(string configPath)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance string GetExeConfigPath()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance string GetRoamingUserConfigPath()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance string GetLocalUserConfigPath()
		{
		}
	}
	.class public interface abstract IInternalConfigConfigurationFactory
	{
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 00 00 00)
		.method public virtual hidebysig newslot abstract 
			instance class System.Configuration.Configuration Create(class [mscorlib]System.Type typeConfigHost, object[] hostInitConfigurationParams)
		{
			.param [2]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = (01 00 00 00)
		}
		.method public virtual hidebysig newslot abstract 
			instance string NormalizeLocationSubPath(string subPath, class System.Configuration.Internal.IConfigErrorInfo errorInfo)
		{
		}
	}
	.class public interface abstract IInternalConfigHost
	{
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 00 00 00)
		.method public virtual hidebysig newslot abstract 
			instance void Init(class System.Configuration.Internal.IInternalConfigRoot configRoot, object[] hostInitParams)
		{
			.param [2]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = (01 00 00 00)
		}
		.method public virtual hidebysig newslot abstract 
			instance void InitForConfiguration(string& locationSubPath, [out] string& configPath, [out] string& locationConfigPath, class System.Configuration.Internal.IInternalConfigRoot configRoot, object[] hostInitConfigurationParams)
		{
			.param [5]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = (01 00 00 00)
		}
		.method public virtual hidebysig newslot abstract 
			instance bool IsConfigRecordRequired(string configPath)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance bool IsInitDelayed(class System.Configuration.Internal.IInternalConfigRecord configRecord)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void RequireCompleteInit(class System.Configuration.Internal.IInternalConfigRecord configRecord)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance bool IsSecondaryRoot(string configPath)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance string GetStreamName(string configPath)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance string GetStreamNameForConfigSource(string streamName, string configSource)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance object GetStreamVersion(string streamName)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class [mscorlib]'System.IO.Stream' OpenStreamForRead(string streamName)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class [mscorlib]'System.IO.Stream' OpenStreamForRead(string streamName, bool assertPermissions)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class [mscorlib]'System.IO.Stream' OpenStreamForWrite(string streamName, string templateStreamName, object& writeContext)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class [mscorlib]'System.IO.Stream' OpenStreamForWrite(string streamName, string templateStreamName, object& writeContext, bool assertPermissions)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void WriteCompleted(string streamName, bool success, object writeContext)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void WriteCompleted(string streamName, bool success, object writeContext, bool assertPermissions)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void DeleteStream(string streamName)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance bool IsFile(string streamName)
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance bool get_SupportsChangeNotifications()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance object StartMonitoringStreamForChanges(string streamName, class System.Configuration.Internal.StreamChangeCallback callback)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void StopMonitoringStreamForChanges(string streamName, class System.Configuration.Internal.StreamChangeCallback callback)
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance bool get_SupportsRefresh()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance bool get_SupportsPath()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance bool get_SupportsLocation()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance bool IsAboveApplication(string configPath)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance string GetConfigPathFromLocationSubPath(string configPath, string locationSubPath)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance bool IsLocationApplicable(string configPath)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance bool IsDefinitionAllowed(string configPath, valuetype System.Configuration.ConfigurationAllowDefinition allowDefinition, valuetype System.Configuration.ConfigurationAllowExeDefinition allowExeDefinition)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void VerifyDefinitionAllowed(string configPath, valuetype System.Configuration.ConfigurationAllowDefinition allowDefinition, valuetype System.Configuration.ConfigurationAllowExeDefinition allowExeDefinition, class System.Configuration.Internal.IConfigErrorInfo errorInfo)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance bool IsTrustedConfigPath(string configPath)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance bool IsFullTrustSectionWithoutAptcaAllowed(class System.Configuration.Internal.IInternalConfigRecord configRecord)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetRestrictedPermissions(class System.Configuration.Internal.IInternalConfigRecord configRecord, [out] class [mscorlib]System.Security.PermissionSet& permissionSet, [out] bool& isHostReady)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class [mscorlib]System.IDisposable Impersonate()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance bool PrefetchAll(string configPath, string streamName)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance bool PrefetchSection(string sectionGroupName, string sectionName)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance object CreateDeprecatedConfigContext(string configPath)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance object CreateConfigurationContext(string configPath, string locationSubPath)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance string DecryptSection(string encryptedXml, class System.Configuration.ProtectedConfigurationProvider protectionProvider, class System.Configuration.ProtectedConfigurationSection protectedConfigSection)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance string EncryptSection(string clearTextXml, class System.Configuration.ProtectedConfigurationProvider protectionProvider, class System.Configuration.ProtectedConfigurationSection protectedConfigSection)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class [mscorlib]System.Type GetConfigType(string typeName, bool throwOnError)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance string GetConfigTypeName(class [mscorlib]System.Type t)
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance bool get_IsRemote()
		{
		}
		.property instance bool IsRemote()
		{
			.get instance bool System.Configuration.Internal.IInternalConfigHost::get_IsRemote()
		}
		.property instance bool SupportsChangeNotifications()
		{
			.get instance bool System.Configuration.Internal.IInternalConfigHost::get_SupportsChangeNotifications()
		}
		.property instance bool SupportsLocation()
		{
			.get instance bool System.Configuration.Internal.IInternalConfigHost::get_SupportsLocation()
		}
		.property instance bool SupportsPath()
		{
			.get instance bool System.Configuration.Internal.IInternalConfigHost::get_SupportsPath()
		}
		.property instance bool SupportsRefresh()
		{
			.get instance bool System.Configuration.Internal.IInternalConfigHost::get_SupportsRefresh()
		}
	}
	.class public interface abstract IInternalConfigRecord
	{
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 00 00 00)
		.method public virtual hidebysig newslot abstract specialname 
			instance string get_ConfigPath()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance string get_StreamName()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance bool get_HasInitErrors()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void ThrowIfInitErrors()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance object GetSection(string configKey)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance object GetLkgSection(string configKey)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void RefreshSection(string configKey)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void Remove()
		{
		}
		.property instance string ConfigPath()
		{
			.get instance string System.Configuration.Internal.IInternalConfigRecord::get_ConfigPath()
		}
		.property instance bool HasInitErrors()
		{
			.get instance bool System.Configuration.Internal.IInternalConfigRecord::get_HasInitErrors()
		}
		.property instance string StreamName()
		{
			.get instance string System.Configuration.Internal.IInternalConfigRecord::get_StreamName()
		}
	}
	.class public interface abstract IInternalConfigRoot
	{
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 00 00 00)
		.method public virtual hidebysig newslot abstract 
			instance void Init(class System.Configuration.Internal.IInternalConfigHost host, bool isDesignTime)
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance bool get_IsDesignTime()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void add_ConfigChanged(class System.Configuration.Internal.InternalConfigEventHandler 'value')
			synchronized 
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void remove_ConfigChanged(class System.Configuration.Internal.InternalConfigEventHandler 'value')
			synchronized 
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void add_ConfigRemoved(class System.Configuration.Internal.InternalConfigEventHandler 'value')
			synchronized 
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void remove_ConfigRemoved(class System.Configuration.Internal.InternalConfigEventHandler 'value')
			synchronized 
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance object GetSection(string section, string configPath)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance string GetUniqueConfigPath(string configPath)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class System.Configuration.Internal.IInternalConfigRecord GetUniqueConfigRecord(string configPath)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class System.Configuration.Internal.IInternalConfigRecord GetConfigRecord(string configPath)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void RemoveConfig(string configPath)
		{
		}
		.event System.Configuration.Internal.InternalConfigEventHandler ConfigChanged
		{
			.addon instance void System.Configuration.Internal.IInternalConfigRoot::add_ConfigChanged(class System.Configuration.Internal.InternalConfigEventHandler)
			.removeon instance void System.Configuration.Internal.IInternalConfigRoot::remove_ConfigChanged(class System.Configuration.Internal.InternalConfigEventHandler)
		}
		.event System.Configuration.Internal.InternalConfigEventHandler ConfigRemoved
		{
			.addon instance void System.Configuration.Internal.IInternalConfigRoot::add_ConfigRemoved(class System.Configuration.Internal.InternalConfigEventHandler)
			.removeon instance void System.Configuration.Internal.IInternalConfigRoot::remove_ConfigRemoved(class System.Configuration.Internal.InternalConfigEventHandler)
		}
		.property instance bool IsDesignTime()
		{
			.get instance bool System.Configuration.Internal.IInternalConfigRoot::get_IsDesignTime()
		}
	}
	.class public interface abstract IInternalConfigSettingsFactory
	{
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 00 00 00)
		.method public virtual hidebysig newslot abstract 
			instance void SetConfigurationSystem(class System.Configuration.Internal.IInternalConfigSystem internalConfigSystem, bool initComplete)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void CompleteInit()
		{
		}
	}
	.class public interface abstract IInternalConfigSystem
	{
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 00 00 00)
		.method public virtual hidebysig newslot abstract 
			instance object GetSection(string configKey)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void RefreshConfig(string sectionName)
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance bool get_SupportsUserConfig()
		{
		}
		.property instance bool SupportsUserConfig()
		{
			.get instance bool System.Configuration.Internal.IInternalConfigSystem::get_SupportsUserConfig()
		}
	}
	.class public sealed InternalConfigEventArgs
		extends [mscorlib]System.EventArgs
	{
		.method public hidebysig specialname 
			instance void .ctor(string configPath)
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_ConfigPath()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ConfigPath(string 'value')
		{
			ret
		}
		.property instance string ConfigPath()
		{
			.get instance string System.Configuration.Internal.InternalConfigEventArgs::get_ConfigPath()
			.set instance void System.Configuration.Internal.InternalConfigEventArgs::set_ConfigPath(string)
		}
	}
	.class public sealed InternalConfigEventHandler
		extends [mscorlib]System.MulticastDelegate
	{
		.method public hidebysig specialname 
			instance void .ctor(object 'object', native int 'method')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void Invoke(object sender, class System.Configuration.Internal.InternalConfigEventArgs e)
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance class [mscorlib]System.IAsyncResult BeginInvoke(object sender, class System.Configuration.Internal.InternalConfigEventArgs e, class [mscorlib]System.AsyncCallback callback, object 'object')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void EndInvoke(class [mscorlib]System.IAsyncResult result)
			runtime 
		{
		}
	}
	.class public sealed StreamChangeCallback
		extends [mscorlib]System.MulticastDelegate
	{
		.method public hidebysig specialname 
			instance void .ctor(object 'object', native int 'method')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void Invoke(string streamName)
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance class [mscorlib]System.IAsyncResult BeginInvoke(string streamName, class [mscorlib]System.AsyncCallback callback, object 'object')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void EndInvoke(class [mscorlib]System.IAsyncResult result)
			runtime 
		{
		}
	}
}
.namespace System.Configuration.Provider
{
	.class public abstract ProviderBase
		extends [mscorlib]System.Object
	{
		.method public virtual hidebysig newslot specialname 
			instance string get_Name()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance string get_Description()
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void Initialize(string name, class [System]System.Collections.Specialized.NameValueCollection config)
		{
			ret
		}
		.method family hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance string Description()
		{
			.get instance string System.Configuration.Provider.ProviderBase::get_Description()
		}
		.property instance string Name()
		{
			.get instance string System.Configuration.Provider.ProviderBase::get_Name()
		}
	}
	.class public ProviderCollection
		extends [mscorlib]System.Object
		implements [mscorlib]System.Collections.ICollection, [mscorlib]System.Collections.IEnumerable
	{
		.custom instance void [mscorlib]System.Reflection.DefaultMemberAttribute::.ctor(string) = (01 00 04 49 74 65 6D 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void Add(class System.Configuration.Provider.ProviderBase provider)
		{
			ret
		}
		.method public hidebysig 
			instance void Remove(string name)
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Configuration.Provider.ProviderBase get_Item(string name)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance class [mscorlib]System.Collections.IEnumerator GetEnumerator()
		{
			ret
		}
		.method public hidebysig 
			instance void SetReadOnly()
		{
			ret
		}
		.method public hidebysig 
			instance void Clear()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance int32 get_Count()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance bool get_IsSynchronized()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance object get_SyncRoot()
		{
			ret
		}
		.method public hidebysig 
			instance void CopyTo(class System.Configuration.Provider.ProviderBase[] 'array', int32 index)
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Collections.ICollection.CopyTo(class [mscorlib]System.Array 'array', int32 index)
		{
			.override [mscorlib]System.Collections.ICollection::CopyTo
			ret
		}
		.property instance int32 Count()
		{
			.get instance int32 System.Configuration.Provider.ProviderCollection::get_Count()
		}
		.property instance bool IsSynchronized()
		{
			.get instance bool System.Configuration.Provider.ProviderCollection::get_IsSynchronized()
		}
		.property instance class System.Configuration.Provider.ProviderBase Item(string)
		{
			.get instance class System.Configuration.Provider.ProviderBase System.Configuration.Provider.ProviderCollection::get_Item(string)
		}
		.property instance object SyncRoot()
		{
			.get instance object System.Configuration.Provider.ProviderCollection::get_SyncRoot()
		}
	}
	.class public serializable ProviderException
		extends [mscorlib]System.Exception
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string message)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string message, class [mscorlib]System.Exception innerException)
		{
			ret
		}
		.method family hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Runtime.Serialization.SerializationInfo info, valuetype [mscorlib]System.Runtime.Serialization.StreamingContext context)
		{
			ret
		}
	}
}
