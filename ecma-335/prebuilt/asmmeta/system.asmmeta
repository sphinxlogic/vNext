.assembly extern System.Configuration
{
	.publickeytoken = (B0 3F 5F 7F 11 D5 0A 3A)
	.ver 2:0:0:0
}
.assembly extern System.Xml
{
	.publickeytoken = (B7 7A 5C 56 19 34 E0 89)
	.ver 2:0:0:0
}
.assembly extern mscorlib
{
	.publickeytoken = (B7 7A 5C 56 19 34 E0 89)
	.ver 2:0:0:0
}
.assembly System
{
	.custom instance void [mscorlib]System.CLSCompliantAttribute::.ctor(bool) = (01 00 01 00 00)
	.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 00 00 00)
	.publickey = (00 00 00 00 00 00 00 00 04 00 00 00 00 00 00 00)
	.hash algorithm 0x00008004
	.ver 2:0:0:0
}
.namespace Microsoft.CSharp
{
	.class public CSharpCodeProvider
		extends System.CodeDom.Compiler.CodeDomProvider
	{
		.permissionset linkcheck = (00)
		.method public virtual hidebysig specialname 
			instance string get_FileExtension()
		{
			ret
		}
		.method public virtual hidebysig 
			instance class System.CodeDom.Compiler.ICodeGenerator CreateGenerator()
		{
			.custom instance void [mscorlib]System.ObsoleteAttribute::.ctor(string) = (01 00 7D 43 61 6C 6C 65 72 73 20 73 68 6F 75 6C 64 20 6E 6F 74 20 75 73 65 20 74 68 65 20 49 43 6F 64 65 47 65 6E 65 72 61 74 6F 72 20 69 6E 74 65 72 66 61 63 65 20 61 6E 64 20 73 68 6F 75 6C 64 20 69 6E 73 74 65 61 64 20 75 73 65 20 74 68 65 20 6D 65 74 68 6F 64 73 20 64 69 72 65 63 74 6C 79 20 6F 6E 20 74 68 65 20 43 6F 64 65 44 6F 6D 50 72 6F 76 69 64 65 72 20 63 6C 61 73 73 2E 00 00)
			ret
		}
		.method public virtual hidebysig 
			instance class System.CodeDom.Compiler.ICodeCompiler CreateCompiler()
		{
			.custom instance void [mscorlib]System.ObsoleteAttribute::.ctor(string) = (01 00 7C 43 61 6C 6C 65 72 73 20 73 68 6F 75 6C 64 20 6E 6F 74 20 75 73 65 20 74 68 65 20 49 43 6F 64 65 43 6F 6D 70 69 6C 65 72 20 69 6E 74 65 72 66 61 63 65 20 61 6E 64 20 73 68 6F 75 6C 64 20 69 6E 73 74 65 61 64 20 75 73 65 20 74 68 65 20 6D 65 74 68 6F 64 73 20 64 69 72 65 63 74 6C 79 20 6F 6E 20 74 68 65 20 43 6F 64 65 44 6F 6D 50 72 6F 76 69 64 65 72 20 63 6C 61 73 73 2E 00 00)
			ret
		}
		.method public virtual hidebysig 
			instance class System.ComponentModel.TypeConverter GetConverter(class [mscorlib]System.Type 'type')
		{
			ret
		}
		.method public virtual hidebysig 
			instance void GenerateCodeFromMember(class System.CodeDom.CodeTypeMember member, class [mscorlib]'System.IO.TextWriter' writer, class System.CodeDom.Compiler.CodeGeneratorOptions options)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance string FileExtension()
		{
			.get instance string Microsoft.CSharp.CSharpCodeProvider::get_FileExtension()
		}
	}
}
.namespace System
{
	.class public FileStyleUriParser
		extends System.UriParser
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public FtpStyleUriParser
		extends System.UriParser
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public GenericUriParser
		extends System.UriParser
	{
		.method public hidebysig specialname 
			instance void .ctor(valuetype System.GenericUriParserOptions options)
		{
			ret
		}
	}
	.class public sealed GenericUriParserOptions
		extends [mscorlib]System.Enum
	{
		.custom instance void [mscorlib]System.FlagsAttribute::.ctor() = (01 00 00 00)
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype System.GenericUriParserOptions AllowEmptyAuthority = int32(0x00000002)
		.field static public literal valuetype System.GenericUriParserOptions Default = int32(0x00000000)
		.field static public literal valuetype System.GenericUriParserOptions DontCompressPath = int32(0x00000080)
		.field static public literal valuetype System.GenericUriParserOptions DontConvertPathBackslashes = int32(0x00000040)
		.field static public literal valuetype System.GenericUriParserOptions DontUnescapePathDotsAndSlashes = int32(0x00000100)
		.field static public literal valuetype System.GenericUriParserOptions GenericAuthority = int32(0x00000001)
		.field static public literal valuetype System.GenericUriParserOptions NoFragment = int32(0x00000020)
		.field static public literal valuetype System.GenericUriParserOptions NoPort = int32(0x00000008)
		.field static public literal valuetype System.GenericUriParserOptions NoQuery = int32(0x00000010)
		.field static public literal valuetype System.GenericUriParserOptions NoUserInfo = int32(0x00000004)
	}
	.class public GopherStyleUriParser
		extends System.UriParser
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public HttpStyleUriParser
		extends System.UriParser
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public LdapStyleUriParser
		extends System.UriParser
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public NetPipeStyleUriParser
		extends System.UriParser
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public NetTcpStyleUriParser
		extends System.UriParser
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public NewsStyleUriParser
		extends System.UriParser
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public serializable Uri
		extends [mscorlib]System.Object
		implements [mscorlib]System.Runtime.Serialization.ISerializable
	{
		.method public hidebysig specialname 
			instance void .ctor(string uriString)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string uriString, bool dontEscape)
		{
			.custom instance void [mscorlib]System.ObsoleteAttribute::.ctor(string) = (01 00 80 A9 54 68 65 20 63 6F 6E 73 74 72 75 63 74 6F 72 20 68 61 73 20 62 65 65 6E 20 64 65 70 72 65 63 61 74 65 64 2E 20 50 6C 65 61 73 65 20 75 73 65 20 6E 65 77 20 55 72 69 28 73 74 72 69 6E 67 29 2E 20 54 68 65 20 64 6F 6E 74 45 73 63 61 70 65 20 70 61 72 61 6D 65 74 65 72 20 69 73 20 64 65 70 72 65 63 61 74 65 64 20 61 6E 64 20 69 73 20 61 6C 77 61 79 73 20 66 61 6C 73 65 2E 20 68 74 74 70 3A 2F 2F 67 6F 2E 6D 69 63 72 6F 73 6F 66 74 2E 63 6F 6D 2F 66 77 6C 69 6E 6B 2F 3F 6C 69 6E 6B 69 64 3D 31 34 32 30 32 00 00)
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string uriString, valuetype System.UriKind uriKind)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class System.Uri baseUri, string relativeUri)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class System.Uri baseUri, string relativeUri, bool dontEscape)
		{
			.custom instance void [mscorlib]System.ObsoleteAttribute::.ctor(string) = (01 00 80 AA 54 68 65 20 63 6F 6E 73 74 72 75 63 74 6F 72 20 68 61 73 20 62 65 65 6E 20 64 65 70 72 65 63 61 74 65 64 2E 20 50 6C 65 61 73 65 20 6E 65 77 20 55 72 69 28 55 72 69 2C 20 73 74 72 69 6E 67 29 2E 20 54 68 65 20 64 6F 6E 74 45 73 63 61 70 65 20 70 61 72 61 6D 65 74 65 72 20 69 73 20 64 65 70 72 65 63 61 74 65 64 20 61 6E 64 20 69 73 20 61 6C 77 61 79 73 20 66 61 6C 73 65 2E 20 68 74 74 70 3A 2F 2F 67 6F 2E 6D 69 63 72 6F 73 6F 66 74 2E 63 6F 6D 2F 66 77 6C 69 6E 6B 2F 3F 6C 69 6E 6B 69 64 3D 31 34 32 30 32 00 00)
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class System.Uri baseUri, class System.Uri relativeUri)
		{
			ret
		}
		.method family hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype [mscorlib]System.Runtime.Serialization.StreamingContext streamingContext)
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Runtime.Serialization.ISerializable.GetObjectData(class [mscorlib]System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype [mscorlib]System.Runtime.Serialization.StreamingContext streamingContext)
		{
			.permissionset linkcheck = (00)
			.override [mscorlib]System.Runtime.Serialization.ISerializable::GetObjectData
			ret
		}
		.method family hidebysig 
			instance void GetObjectData(class [mscorlib]System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype [mscorlib]System.Runtime.Serialization.StreamingContext streamingContext)
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public hidebysig specialname 
			instance string get_AbsolutePath()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_AbsoluteUri()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Authority()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Host()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype System.UriHostNameType get_HostNameType()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsDefaultPort()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsFile()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsLoopback()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsUnc()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_LocalPath()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_PathAndQuery()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_Port()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Query()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Fragment()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Scheme()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_OriginalString()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_DnsSafeHost()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsAbsoluteUri()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string[] get_Segments()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_UserEscaped()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_UserInfo()
		{
			ret
		}
		.method public static hidebysig 
			valuetype System.UriHostNameType CheckHostName(string name)
		{
			ret
		}
		.method public static hidebysig 
			bool CheckSchemeName(string schemeName)
		{
			ret
		}
		.method public static hidebysig 
			int32 FromHex(char digit)
		{
			ret
		}
		.method public virtual hidebysig 
			instance int32 GetHashCode()
		{
			ret
		}
		.method public virtual hidebysig 
			instance string ToString()
		{
			ret
		}
		.method public static hidebysig specialname 
			bool op_Equality(class System.Uri uri1, class System.Uri uri2)
		{
			ret
		}
		.method public static hidebysig specialname 
			bool op_Inequality(class System.Uri uri1, class System.Uri uri2)
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool Equals(object comparand)
		{
			ret
		}
		.method public hidebysig 
			instance string GetLeftPart(valuetype System.UriPartial part)
		{
			ret
		}
		.method public static hidebysig 
			string HexEscape(char character)
		{
			ret
		}
		.method public static hidebysig 
			char HexUnescape(string pattern, int32& index)
		{
			ret
		}
		.method public static hidebysig 
			bool IsHexDigit(char character)
		{
			ret
		}
		.method public static hidebysig 
			bool IsHexEncoding(string pattern, int32 index)
		{
			ret
		}
		.method public hidebysig 
			instance string MakeRelative(class System.Uri toUri)
		{
			.custom instance void [mscorlib]System.ObsoleteAttribute::.ctor(string) = (01 00 71 54 68 65 20 6D 65 74 68 6F 64 20 68 61 73 20 62 65 65 6E 20 64 65 70 72 65 63 61 74 65 64 2E 20 50 6C 65 61 73 65 20 75 73 65 20 4D 61 6B 65 52 65 6C 61 74 69 76 65 55 72 69 28 55 72 69 20 75 72 69 29 2E 20 68 74 74 70 3A 2F 2F 67 6F 2E 6D 69 63 72 6F 73 6F 66 74 2E 63 6F 6D 2F 66 77 6C 69 6E 6B 2F 3F 6C 69 6E 6B 69 64 3D 31 34 32 30 32 00 00)
			ret
		}
		.method public hidebysig 
			instance class System.Uri MakeRelativeUri(class System.Uri uri)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void Parse()
		{
			.custom instance void [mscorlib]System.ObsoleteAttribute::.ctor(string) = (01 00 6A 54 68 65 20 6D 65 74 68 6F 64 20 68 61 73 20 62 65 65 6E 20 64 65 70 72 65 63 61 74 65 64 2E 20 49 74 20 69 73 20 6E 6F 74 20 75 73 65 64 20 62 79 20 74 68 65 20 73 79 73 74 65 6D 2E 20 68 74 74 70 3A 2F 2F 67 6F 2E 6D 69 63 72 6F 73 6F 66 74 2E 63 6F 6D 2F 66 77 6C 69 6E 6B 2F 3F 6C 69 6E 6B 69 64 3D 31 34 32 30 32 00 00)
			ret
		}
		.method family virtual hidebysig newslot 
			instance void Canonicalize()
		{
			.custom instance void [mscorlib]System.ObsoleteAttribute::.ctor(string) = (01 00 6A 54 68 65 20 6D 65 74 68 6F 64 20 68 61 73 20 62 65 65 6E 20 64 65 70 72 65 63 61 74 65 64 2E 20 49 74 20 69 73 20 6E 6F 74 20 75 73 65 64 20 62 79 20 74 68 65 20 73 79 73 74 65 6D 2E 20 68 74 74 70 3A 2F 2F 67 6F 2E 6D 69 63 72 6F 73 6F 66 74 2E 63 6F 6D 2F 66 77 6C 69 6E 6B 2F 3F 6C 69 6E 6B 69 64 3D 31 34 32 30 32 00 00)
			ret
		}
		.method family virtual hidebysig newslot 
			instance void Escape()
		{
			.custom instance void [mscorlib]System.ObsoleteAttribute::.ctor(string) = (01 00 6A 54 68 65 20 6D 65 74 68 6F 64 20 68 61 73 20 62 65 65 6E 20 64 65 70 72 65 63 61 74 65 64 2E 20 49 74 20 69 73 20 6E 6F 74 20 75 73 65 64 20 62 79 20 74 68 65 20 73 79 73 74 65 6D 2E 20 68 74 74 70 3A 2F 2F 67 6F 2E 6D 69 63 72 6F 73 6F 66 74 2E 63 6F 6D 2F 66 77 6C 69 6E 6B 2F 3F 6C 69 6E 6B 69 64 3D 31 34 32 30 32 00 00)
			ret
		}
		.method family virtual hidebysig newslot 
			instance string Unescape(string path)
		{
			.custom instance void [mscorlib]System.ObsoleteAttribute::.ctor(string) = (01 00 80 AF 54 68 65 20 6D 65 74 68 6F 64 20 68 61 73 20 62 65 65 6E 20 64 65 70 72 65 63 61 74 65 64 2E 20 50 6C 65 61 73 65 20 75 73 65 20 47 65 74 43 6F 6D 70 6F 6E 65 6E 74 73 28 29 20 6F 72 20 73 74 61 74 69 63 20 55 6E 65 73 63 61 70 65 44 61 74 61 53 74 72 69 6E 67 28 29 20 74 6F 20 75 6E 65 73 63 61 70 65 20 61 20 55 72 69 20 63 6F 6D 70 6F 6E 65 6E 74 20 6F 72 20 61 20 73 74 72 69 6E 67 2E 20 68 74 74 70 3A 2F 2F 67 6F 2E 6D 69 63 72 6F 73 6F 66 74 2E 63 6F 6D 2F 66 77 6C 69 6E 6B 2F 3F 6C 69 6E 6B 69 64 3D 31 34 32 30 32 00 00)
			ret
		}
		.method family static hidebysig 
			string EscapeString(string str)
		{
			.custom instance void [mscorlib]System.ObsoleteAttribute::.ctor(string) = (01 00 80 AA 54 68 65 20 6D 65 74 68 6F 64 20 68 61 73 20 62 65 65 6E 20 64 65 70 72 65 63 61 74 65 64 2E 20 50 6C 65 61 73 65 20 75 73 65 20 47 65 74 43 6F 6D 70 6F 6E 65 6E 74 73 28 29 20 6F 72 20 73 74 61 74 69 63 20 45 73 63 61 70 65 55 72 69 53 74 72 69 6E 67 28 29 20 74 6F 20 65 73 63 61 70 65 20 61 20 55 72 69 20 63 6F 6D 70 6F 6E 65 6E 74 20 6F 72 20 61 20 73 74 72 69 6E 67 2E 20 68 74 74 70 3A 2F 2F 67 6F 2E 6D 69 63 72 6F 73 6F 66 74 2E 63 6F 6D 2F 66 77 6C 69 6E 6B 2F 3F 6C 69 6E 6B 69 64 3D 31 34 32 30 32 00 00)
			ret
		}
		.method family virtual hidebysig newslot 
			instance void CheckSecurity()
		{
			.custom instance void [mscorlib]System.ObsoleteAttribute::.ctor(string) = (01 00 6A 54 68 65 20 6D 65 74 68 6F 64 20 68 61 73 20 62 65 65 6E 20 64 65 70 72 65 63 61 74 65 64 2E 20 49 74 20 69 73 20 6E 6F 74 20 75 73 65 64 20 62 79 20 74 68 65 20 73 79 73 74 65 6D 2E 20 68 74 74 70 3A 2F 2F 67 6F 2E 6D 69 63 72 6F 73 6F 66 74 2E 63 6F 6D 2F 66 77 6C 69 6E 6B 2F 3F 6C 69 6E 6B 69 64 3D 31 34 32 30 32 00 00)
			ret
		}
		.method family virtual hidebysig newslot 
			instance bool IsReservedCharacter(char character)
		{
			.custom instance void [mscorlib]System.ObsoleteAttribute::.ctor(string) = (01 00 6A 54 68 65 20 6D 65 74 68 6F 64 20 68 61 73 20 62 65 65 6E 20 64 65 70 72 65 63 61 74 65 64 2E 20 49 74 20 69 73 20 6E 6F 74 20 75 73 65 64 20 62 79 20 74 68 65 20 73 79 73 74 65 6D 2E 20 68 74 74 70 3A 2F 2F 67 6F 2E 6D 69 63 72 6F 73 6F 66 74 2E 63 6F 6D 2F 66 77 6C 69 6E 6B 2F 3F 6C 69 6E 6B 69 64 3D 31 34 32 30 32 00 00)
			ret
		}
		.method family static hidebysig 
			bool IsExcludedCharacter(char character)
		{
			.custom instance void [mscorlib]System.ObsoleteAttribute::.ctor(string) = (01 00 6A 54 68 65 20 6D 65 74 68 6F 64 20 68 61 73 20 62 65 65 6E 20 64 65 70 72 65 63 61 74 65 64 2E 20 49 74 20 69 73 20 6E 6F 74 20 75 73 65 64 20 62 79 20 74 68 65 20 73 79 73 74 65 6D 2E 20 68 74 74 70 3A 2F 2F 67 6F 2E 6D 69 63 72 6F 73 6F 66 74 2E 63 6F 6D 2F 66 77 6C 69 6E 6B 2F 3F 6C 69 6E 6B 69 64 3D 31 34 32 30 32 00 00)
			ret
		}
		.method family virtual hidebysig newslot 
			instance bool IsBadFileSystemCharacter(char character)
		{
			.custom instance void [mscorlib]System.ObsoleteAttribute::.ctor(string) = (01 00 6A 54 68 65 20 6D 65 74 68 6F 64 20 68 61 73 20 62 65 65 6E 20 64 65 70 72 65 63 61 74 65 64 2E 20 49 74 20 69 73 20 6E 6F 74 20 75 73 65 64 20 62 79 20 74 68 65 20 73 79 73 74 65 6D 2E 20 68 74 74 70 3A 2F 2F 67 6F 2E 6D 69 63 72 6F 73 6F 66 74 2E 63 6F 6D 2F 66 77 6C 69 6E 6B 2F 3F 6C 69 6E 6B 69 64 3D 31 34 32 30 32 00 00)
			ret
		}
		.method public static hidebysig 
			bool TryCreate(string uriString, valuetype System.UriKind uriKind, [out] class System.Uri& result)
		{
			ret
		}
		.method public static hidebysig 
			bool TryCreate(class System.Uri baseUri, string relativeUri, [out] class System.Uri& result)
		{
			ret
		}
		.method public static hidebysig 
			bool TryCreate(class System.Uri baseUri, class System.Uri relativeUri, [out] class System.Uri& result)
		{
			ret
		}
		.method public hidebysig 
			instance bool IsBaseOf(class System.Uri uri)
		{
			ret
		}
		.method public hidebysig 
			instance string GetComponents(valuetype System.UriComponents components, valuetype System.UriFormat format)
		{
			ret
		}
		.method public hidebysig 
			instance bool IsWellFormedOriginalString()
		{
			ret
		}
		.method public static hidebysig 
			bool IsWellFormedUriString(string uriString, valuetype System.UriKind uriKind)
		{
			ret
		}
		.method public static hidebysig 
			int32 Compare(class System.Uri uri1, class System.Uri uri2, valuetype System.UriComponents partsToCompare, valuetype System.UriFormat compareFormat, valuetype [mscorlib]System.StringComparison comparisonType)
		{
			ret
		}
		.method public static hidebysig 
			string UnescapeDataString(string stringToUnescape)
		{
			ret
		}
		.method public static hidebysig 
			string EscapeUriString(string stringToEscape)
		{
			ret
		}
		.method public static hidebysig 
			string EscapeDataString(string stringToEscape)
		{
			ret
		}
		.field static public initonly string SchemeDelimiter
		.field static public initonly string UriSchemeFile
		.field static public initonly string UriSchemeFtp
		.field static public initonly string UriSchemeGopher
		.field static public initonly string UriSchemeHttp
		.field static public initonly string UriSchemeHttps
		.field static public initonly string UriSchemeMailto
		.field static public initonly string UriSchemeNetPipe
		.field static public initonly string UriSchemeNetTcp
		.field static public initonly string UriSchemeNews
		.field static public initonly string UriSchemeNntp
		.property instance string AbsolutePath()
		{
			.get instance string System.Uri::get_AbsolutePath()
		}
		.property instance string AbsoluteUri()
		{
			.get instance string System.Uri::get_AbsoluteUri()
		}
		.property instance string Authority()
		{
			.get instance string System.Uri::get_Authority()
		}
		.property instance string DnsSafeHost()
		{
			.get instance string System.Uri::get_DnsSafeHost()
		}
		.property instance string Fragment()
		{
			.get instance string System.Uri::get_Fragment()
		}
		.property instance string Host()
		{
			.get instance string System.Uri::get_Host()
		}
		.property instance valuetype System.UriHostNameType HostNameType()
		{
			.get instance valuetype System.UriHostNameType System.Uri::get_HostNameType()
		}
		.property instance bool IsAbsoluteUri()
		{
			.get instance bool System.Uri::get_IsAbsoluteUri()
		}
		.property instance bool IsDefaultPort()
		{
			.get instance bool System.Uri::get_IsDefaultPort()
		}
		.property instance bool IsFile()
		{
			.get instance bool System.Uri::get_IsFile()
		}
		.property instance bool IsLoopback()
		{
			.get instance bool System.Uri::get_IsLoopback()
		}
		.property instance bool IsUnc()
		{
			.get instance bool System.Uri::get_IsUnc()
		}
		.property instance string LocalPath()
		{
			.get instance string System.Uri::get_LocalPath()
		}
		.property instance string OriginalString()
		{
			.get instance string System.Uri::get_OriginalString()
		}
		.property instance string PathAndQuery()
		{
			.get instance string System.Uri::get_PathAndQuery()
		}
		.property instance int32 Port()
		{
			.get instance int32 System.Uri::get_Port()
		}
		.property instance string Query()
		{
			.get instance string System.Uri::get_Query()
		}
		.property instance string Scheme()
		{
			.get instance string System.Uri::get_Scheme()
		}
		.property instance string[] Segments()
		{
			.get instance string[] System.Uri::get_Segments()
		}
		.property instance bool UserEscaped()
		{
			.get instance bool System.Uri::get_UserEscaped()
		}
		.property instance string UserInfo()
		{
			.get instance string System.Uri::get_UserInfo()
		}
	}
	.class public UriBuilder
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string uri)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class System.Uri uri)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string schemeName, string hostName)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string scheme, string host, int32 portNumber)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string scheme, string host, int32 port, string pathValue)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string scheme, string host, int32 port, string path, string extraValue)
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Fragment()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Fragment(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Host()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Host(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Password()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Password(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Path()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Path(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_Port()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Port(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Query()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Query(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Scheme()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Scheme(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Uri get_Uri()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_UserName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_UserName(string 'value')
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool Equals(object rparam)
		{
			ret
		}
		.method public virtual hidebysig 
			instance int32 GetHashCode()
		{
			ret
		}
		.method public virtual hidebysig 
			instance string ToString()
		{
			ret
		}
		.property instance string Fragment()
		{
			.get instance string System.UriBuilder::get_Fragment()
			.set instance void System.UriBuilder::set_Fragment(string)
		}
		.property instance string Host()
		{
			.get instance string System.UriBuilder::get_Host()
			.set instance void System.UriBuilder::set_Host(string)
		}
		.property instance string Password()
		{
			.get instance string System.UriBuilder::get_Password()
			.set instance void System.UriBuilder::set_Password(string)
		}
		.property instance string Path()
		{
			.get instance string System.UriBuilder::get_Path()
			.set instance void System.UriBuilder::set_Path(string)
		}
		.property instance int32 Port()
		{
			.get instance int32 System.UriBuilder::get_Port()
			.set instance void System.UriBuilder::set_Port(int32)
		}
		.property instance string Query()
		{
			.get instance string System.UriBuilder::get_Query()
			.set instance void System.UriBuilder::set_Query(string)
		}
		.property instance string Scheme()
		{
			.get instance string System.UriBuilder::get_Scheme()
			.set instance void System.UriBuilder::set_Scheme(string)
		}
		.property instance class System.Uri Uri()
		{
			.get instance class System.Uri System.UriBuilder::get_Uri()
		}
		.property instance string UserName()
		{
			.get instance string System.UriBuilder::get_UserName()
			.set instance void System.UriBuilder::set_UserName(string)
		}
	}
	.class public sealed UriComponents
		extends [mscorlib]System.Enum
	{
		.custom instance void [mscorlib]System.FlagsAttribute::.ctor() = (01 00 00 00)
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype System.UriComponents AbsoluteUri = int32(0x0000007F)
		.field static public literal valuetype System.UriComponents Fragment = int32(0x00000040)
		.field static public literal valuetype System.UriComponents Host = int32(0x00000004)
		.field static public literal valuetype System.UriComponents HostAndPort = int32(0x00000084)
		.field static public literal valuetype System.UriComponents HttpRequestUrl = int32(0x0000003D)
		.field static public literal valuetype System.UriComponents KeepDelimiter = int32(0x40000000)
		.field static public literal valuetype System.UriComponents Path = int32(0x00000010)
		.field static public literal valuetype System.UriComponents PathAndQuery = int32(0x00000030)
		.field static public literal valuetype System.UriComponents Port = int32(0x00000008)
		.field static public literal valuetype System.UriComponents Query = int32(0x00000020)
		.field static public literal valuetype System.UriComponents Scheme = int32(0x00000001)
		.field static public literal valuetype System.UriComponents SchemeAndServer = int32(0x0000000D)
		.field static public literal valuetype System.UriComponents SerializationInfoString = int32(0x80000000)
		.field static public literal valuetype System.UriComponents StrongAuthority = int32(0x00000086)
		.field static public literal valuetype System.UriComponents StrongPort = int32(0x00000080)
		.field static public literal valuetype System.UriComponents UserInfo = int32(0x00000002)
	}
	.class public sealed UriFormat
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype System.UriFormat SafeUnescaped = int32(0x00000003)
		.field static public literal valuetype System.UriFormat Unescaped = int32(0x00000002)
		.field static public literal valuetype System.UriFormat UriEscaped = int32(0x00000001)
	}
	.class public serializable UriFormatException
		extends [mscorlib]System.FormatException
		implements [mscorlib]System.Runtime.Serialization.ISerializable
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string textString)
		{
			ret
		}
		.method family hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype [mscorlib]System.Runtime.Serialization.StreamingContext streamingContext)
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Runtime.Serialization.ISerializable.GetObjectData(class [mscorlib]System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype [mscorlib]System.Runtime.Serialization.StreamingContext streamingContext)
		{
			.override [mscorlib]System.Runtime.Serialization.ISerializable::GetObjectData
			ret
		}
	}
	.class public sealed UriHostNameType
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype System.UriHostNameType Basic = int32(0x00000001)
		.field static public literal valuetype System.UriHostNameType Dns = int32(0x00000002)
		.field static public literal valuetype System.UriHostNameType IPv4 = int32(0x00000003)
		.field static public literal valuetype System.UriHostNameType IPv6 = int32(0x00000004)
		.field static public literal valuetype System.UriHostNameType Unknown = int32(0x00000000)
	}
	.class public sealed UriKind
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype System.UriKind Absolute = int32(0x00000001)
		.field static public literal valuetype System.UriKind Relative = int32(0x00000002)
		.field static public literal valuetype System.UriKind RelativeOrAbsolute = int32(0x00000000)
	}
	.class public abstract UriParser
		extends [mscorlib]System.Object
	{
		.method family hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance class System.UriParser OnNewUri()
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void OnRegister(string schemeName, int32 defaultPort)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void InitializeAndValidate(class System.Uri uri, [out] class System.UriFormatException& parsingError)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance string Resolve(class System.Uri baseUri, class System.Uri relativeUri, [out] class System.UriFormatException& parsingError)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance bool IsBaseOf(class System.Uri baseUri, class System.Uri relativeUri)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance string GetComponents(class System.Uri uri, valuetype System.UriComponents components, valuetype System.UriFormat format)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance bool IsWellFormedOriginalString(class System.Uri uri)
		{
			ret
		}
		.method public static hidebysig 
			void Register(class System.UriParser uriParser, string schemeName, int32 defaultPort)
		{
			ret
		}
		.method public static hidebysig 
			bool IsKnownScheme(string schemeName)
		{
			ret
		}
	}
	.class public sealed UriPartial
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype System.UriPartial Authority = int32(0x00000001)
		.field static public literal valuetype System.UriPartial Path = int32(0x00000002)
		.field static public literal valuetype System.UriPartial Query = int32(0x00000003)
		.field static public literal valuetype System.UriPartial Scheme = int32(0x00000000)
	}
	.class public UriTypeConverter
		extends System.ComponentModel.TypeConverter
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Type sourceType)
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Type destinationType)
		{
			ret
		}
		.method public virtual hidebysig 
			instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Globalization.CultureInfo culture, object 'value')
		{
			ret
		}
		.method public virtual hidebysig 
			instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Globalization.CultureInfo culture, object 'value', class [mscorlib]System.Type destinationType)
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool IsValid(class System.ComponentModel.ITypeDescriptorContext context, object 'value')
		{
			ret
		}
	}
}
.namespace System.CodeDom
{
	.class public serializable CodeArgumentReferenceExpression
		extends System.CodeDom.CodeExpression
	{
		.custom instance void [mscorlib]System.Runtime.InteropServices.ClassInterfaceAttribute::.ctor(valuetype [mscorlib]System.Runtime.InteropServices.ClassInterfaceType) = (01 00 01 00 00 00 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string parameterName)
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_ParameterName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ParameterName(string 'value')
		{
			ret
		}
		.property instance string ParameterName()
		{
			.get instance string System.CodeDom.CodeArgumentReferenceExpression::get_ParameterName()
			.set instance void System.CodeDom.CodeArgumentReferenceExpression::set_ParameterName(string)
		}
	}
	.class public serializable CodeArrayCreateExpression
		extends System.CodeDom.CodeExpression
	{
		.custom instance void [mscorlib]System.Runtime.InteropServices.ClassInterfaceAttribute::.ctor(valuetype [mscorlib]System.Runtime.InteropServices.ClassInterfaceType) = (01 00 01 00 00 00 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class System.CodeDom.CodeTypeReference createType, class System.CodeDom.CodeExpression[] initializers)
		{
			.param [2]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = (01 00 00 00)
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string createType, class System.CodeDom.CodeExpression[] initializers)
		{
			.param [2]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = (01 00 00 00)
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Type createType, class System.CodeDom.CodeExpression[] initializers)
		{
			.param [2]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = (01 00 00 00)
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class System.CodeDom.CodeTypeReference createType, int32 size)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string createType, int32 size)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Type createType, int32 size)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class System.CodeDom.CodeTypeReference createType, class System.CodeDom.CodeExpression size)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string createType, class System.CodeDom.CodeExpression size)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Type createType, class System.CodeDom.CodeExpression size)
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeTypeReference get_CreateType()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_CreateType(class System.CodeDom.CodeTypeReference 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeExpressionCollection get_Initializers()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_Size()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Size(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeExpression get_SizeExpression()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_SizeExpression(class System.CodeDom.CodeExpression 'value')
		{
			ret
		}
		.property instance class System.CodeDom.CodeTypeReference CreateType()
		{
			.get instance class System.CodeDom.CodeTypeReference System.CodeDom.CodeArrayCreateExpression::get_CreateType()
			.set instance void System.CodeDom.CodeArrayCreateExpression::set_CreateType(class System.CodeDom.CodeTypeReference)
		}
		.property instance class System.CodeDom.CodeExpressionCollection Initializers()
		{
			.get instance class System.CodeDom.CodeExpressionCollection System.CodeDom.CodeArrayCreateExpression::get_Initializers()
		}
		.property instance int32 Size()
		{
			.get instance int32 System.CodeDom.CodeArrayCreateExpression::get_Size()
			.set instance void System.CodeDom.CodeArrayCreateExpression::set_Size(int32)
		}
		.property instance class System.CodeDom.CodeExpression SizeExpression()
		{
			.get instance class System.CodeDom.CodeExpression System.CodeDom.CodeArrayCreateExpression::get_SizeExpression()
			.set instance void System.CodeDom.CodeArrayCreateExpression::set_SizeExpression(class System.CodeDom.CodeExpression)
		}
	}
	.class public serializable CodeArrayIndexerExpression
		extends System.CodeDom.CodeExpression
	{
		.custom instance void [mscorlib]System.Runtime.InteropServices.ClassInterfaceAttribute::.ctor(valuetype [mscorlib]System.Runtime.InteropServices.ClassInterfaceType) = (01 00 01 00 00 00 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class System.CodeDom.CodeExpression targetObject, class System.CodeDom.CodeExpression[] indices)
		{
			.param [2]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = (01 00 00 00)
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeExpression get_TargetObject()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_TargetObject(class System.CodeDom.CodeExpression 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeExpressionCollection get_Indices()
		{
			ret
		}
		.property instance class System.CodeDom.CodeExpressionCollection Indices()
		{
			.get instance class System.CodeDom.CodeExpressionCollection System.CodeDom.CodeArrayIndexerExpression::get_Indices()
		}
		.property instance class System.CodeDom.CodeExpression TargetObject()
		{
			.get instance class System.CodeDom.CodeExpression System.CodeDom.CodeArrayIndexerExpression::get_TargetObject()
			.set instance void System.CodeDom.CodeArrayIndexerExpression::set_TargetObject(class System.CodeDom.CodeExpression)
		}
	}
	.class public serializable CodeAssignStatement
		extends System.CodeDom.CodeStatement
	{
		.custom instance void [mscorlib]System.Runtime.InteropServices.ClassInterfaceAttribute::.ctor(valuetype [mscorlib]System.Runtime.InteropServices.ClassInterfaceType) = (01 00 01 00 00 00 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class System.CodeDom.CodeExpression left, class System.CodeDom.CodeExpression right)
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeExpression get_Left()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Left(class System.CodeDom.CodeExpression 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeExpression get_Right()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Right(class System.CodeDom.CodeExpression 'value')
		{
			ret
		}
		.property instance class System.CodeDom.CodeExpression Left()
		{
			.get instance class System.CodeDom.CodeExpression System.CodeDom.CodeAssignStatement::get_Left()
			.set instance void System.CodeDom.CodeAssignStatement::set_Left(class System.CodeDom.CodeExpression)
		}
		.property instance class System.CodeDom.CodeExpression Right()
		{
			.get instance class System.CodeDom.CodeExpression System.CodeDom.CodeAssignStatement::get_Right()
			.set instance void System.CodeDom.CodeAssignStatement::set_Right(class System.CodeDom.CodeExpression)
		}
	}
	.class public serializable CodeAttachEventStatement
		extends System.CodeDom.CodeStatement
	{
		.custom instance void [mscorlib]System.Runtime.InteropServices.ClassInterfaceAttribute::.ctor(valuetype [mscorlib]System.Runtime.InteropServices.ClassInterfaceType) = (01 00 01 00 00 00 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class System.CodeDom.CodeEventReferenceExpression eventRef, class System.CodeDom.CodeExpression listener)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class System.CodeDom.CodeExpression targetObject, string eventName, class System.CodeDom.CodeExpression listener)
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeEventReferenceExpression get_Event()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Event(class System.CodeDom.CodeEventReferenceExpression 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeExpression get_Listener()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Listener(class System.CodeDom.CodeExpression 'value')
		{
			ret
		}
		.property instance class System.CodeDom.CodeEventReferenceExpression Event()
		{
			.get instance class System.CodeDom.CodeEventReferenceExpression System.CodeDom.CodeAttachEventStatement::get_Event()
			.set instance void System.CodeDom.CodeAttachEventStatement::set_Event(class System.CodeDom.CodeEventReferenceExpression)
		}
		.property instance class System.CodeDom.CodeExpression Listener()
		{
			.get instance class System.CodeDom.CodeExpression System.CodeDom.CodeAttachEventStatement::get_Listener()
			.set instance void System.CodeDom.CodeAttachEventStatement::set_Listener(class System.CodeDom.CodeExpression)
		}
	}
	.class public serializable CodeAttributeArgument
		extends [mscorlib]System.Object
	{
		.custom instance void [mscorlib]System.Runtime.InteropServices.ClassInterfaceAttribute::.ctor(valuetype [mscorlib]System.Runtime.InteropServices.ClassInterfaceType) = (01 00 01 00 00 00 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class System.CodeDom.CodeExpression 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string name, class System.CodeDom.CodeExpression 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Name(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeExpression get_Value()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Value(class System.CodeDom.CodeExpression 'value')
		{
			ret
		}
		.property instance string Name()
		{
			.get instance string System.CodeDom.CodeAttributeArgument::get_Name()
			.set instance void System.CodeDom.CodeAttributeArgument::set_Name(string)
		}
		.property instance class System.CodeDom.CodeExpression Value()
		{
			.get instance class System.CodeDom.CodeExpression System.CodeDom.CodeAttributeArgument::get_Value()
			.set instance void System.CodeDom.CodeAttributeArgument::set_Value(class System.CodeDom.CodeExpression)
		}
	}
	.class public serializable CodeAttributeArgumentCollection
		extends [mscorlib]System.Collections.CollectionBase
	{
		.custom instance void [mscorlib]System.Reflection.DefaultMemberAttribute::.ctor(string) = (01 00 04 49 74 65 6D 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ClassInterfaceAttribute::.ctor(valuetype [mscorlib]System.Runtime.InteropServices.ClassInterfaceType) = (01 00 01 00 00 00 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class System.CodeDom.CodeAttributeArgumentCollection 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class System.CodeDom.CodeAttributeArgument[] 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeAttributeArgument get_Item(int32 index)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Item(int32 index, class System.CodeDom.CodeAttributeArgument 'value')
		{
			ret
		}
		.method public hidebysig 
			instance int32 Add(class System.CodeDom.CodeAttributeArgument 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void AddRange(class System.CodeDom.CodeAttributeArgument[] 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void AddRange(class System.CodeDom.CodeAttributeArgumentCollection 'value')
		{
			ret
		}
		.method public hidebysig 
			instance bool Contains(class System.CodeDom.CodeAttributeArgument 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void CopyTo(class System.CodeDom.CodeAttributeArgument[] 'array', int32 index)
		{
			ret
		}
		.method public hidebysig 
			instance int32 IndexOf(class System.CodeDom.CodeAttributeArgument 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void Insert(int32 index, class System.CodeDom.CodeAttributeArgument 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void Remove(class System.CodeDom.CodeAttributeArgument 'value')
		{
			ret
		}
		.property instance class System.CodeDom.CodeAttributeArgument Item(int32)
		{
			.get instance class System.CodeDom.CodeAttributeArgument System.CodeDom.CodeAttributeArgumentCollection::get_Item(int32)
			.set instance void System.CodeDom.CodeAttributeArgumentCollection::set_Item(int32, class System.CodeDom.CodeAttributeArgument)
		}
	}
	.class public serializable CodeAttributeDeclaration
		extends [mscorlib]System.Object
	{
		.custom instance void [mscorlib]System.Runtime.InteropServices.ClassInterfaceAttribute::.ctor(valuetype [mscorlib]System.Runtime.InteropServices.ClassInterfaceType) = (01 00 01 00 00 00 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string name)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string name, class System.CodeDom.CodeAttributeArgument[] arguments)
		{
			.param [2]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = (01 00 00 00)
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class System.CodeDom.CodeTypeReference attributeType)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class System.CodeDom.CodeTypeReference attributeType, class System.CodeDom.CodeAttributeArgument[] arguments)
		{
			.param [2]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = (01 00 00 00)
			ret
		}
		.method public hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Name(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeAttributeArgumentCollection get_Arguments()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeTypeReference get_AttributeType()
		{
			ret
		}
		.property instance class System.CodeDom.CodeAttributeArgumentCollection Arguments()
		{
			.get instance class System.CodeDom.CodeAttributeArgumentCollection System.CodeDom.CodeAttributeDeclaration::get_Arguments()
		}
		.property instance class System.CodeDom.CodeTypeReference AttributeType()
		{
			.get instance class System.CodeDom.CodeTypeReference System.CodeDom.CodeAttributeDeclaration::get_AttributeType()
		}
		.property instance string Name()
		{
			.get instance string System.CodeDom.CodeAttributeDeclaration::get_Name()
			.set instance void System.CodeDom.CodeAttributeDeclaration::set_Name(string)
		}
	}
	.class public serializable CodeAttributeDeclarationCollection
		extends [mscorlib]System.Collections.CollectionBase
	{
		.custom instance void [mscorlib]System.Reflection.DefaultMemberAttribute::.ctor(string) = (01 00 04 49 74 65 6D 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ClassInterfaceAttribute::.ctor(valuetype [mscorlib]System.Runtime.InteropServices.ClassInterfaceType) = (01 00 01 00 00 00 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class System.CodeDom.CodeAttributeDeclarationCollection 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class System.CodeDom.CodeAttributeDeclaration[] 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeAttributeDeclaration get_Item(int32 index)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Item(int32 index, class System.CodeDom.CodeAttributeDeclaration 'value')
		{
			ret
		}
		.method public hidebysig 
			instance int32 Add(class System.CodeDom.CodeAttributeDeclaration 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void AddRange(class System.CodeDom.CodeAttributeDeclaration[] 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void AddRange(class System.CodeDom.CodeAttributeDeclarationCollection 'value')
		{
			ret
		}
		.method public hidebysig 
			instance bool Contains(class System.CodeDom.CodeAttributeDeclaration 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void CopyTo(class System.CodeDom.CodeAttributeDeclaration[] 'array', int32 index)
		{
			ret
		}
		.method public hidebysig 
			instance int32 IndexOf(class System.CodeDom.CodeAttributeDeclaration 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void Insert(int32 index, class System.CodeDom.CodeAttributeDeclaration 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void Remove(class System.CodeDom.CodeAttributeDeclaration 'value')
		{
			ret
		}
		.property instance class System.CodeDom.CodeAttributeDeclaration Item(int32)
		{
			.get instance class System.CodeDom.CodeAttributeDeclaration System.CodeDom.CodeAttributeDeclarationCollection::get_Item(int32)
			.set instance void System.CodeDom.CodeAttributeDeclarationCollection::set_Item(int32, class System.CodeDom.CodeAttributeDeclaration)
		}
	}
	.class public serializable CodeBaseReferenceExpression
		extends System.CodeDom.CodeExpression
	{
		.custom instance void [mscorlib]System.Runtime.InteropServices.ClassInterfaceAttribute::.ctor(valuetype [mscorlib]System.Runtime.InteropServices.ClassInterfaceType) = (01 00 01 00 00 00 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public serializable CodeBinaryOperatorExpression
		extends System.CodeDom.CodeExpression
	{
		.custom instance void [mscorlib]System.Runtime.InteropServices.ClassInterfaceAttribute::.ctor(valuetype [mscorlib]System.Runtime.InteropServices.ClassInterfaceType) = (01 00 01 00 00 00 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class System.CodeDom.CodeExpression left, valuetype System.CodeDom.CodeBinaryOperatorType op, class System.CodeDom.CodeExpression right)
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeExpression get_Right()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Right(class System.CodeDom.CodeExpression 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeExpression get_Left()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Left(class System.CodeDom.CodeExpression 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype System.CodeDom.CodeBinaryOperatorType get_Operator()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Operator(valuetype System.CodeDom.CodeBinaryOperatorType 'value')
		{
			ret
		}
		.property instance class System.CodeDom.CodeExpression Left()
		{
			.get instance class System.CodeDom.CodeExpression System.CodeDom.CodeBinaryOperatorExpression::get_Left()
			.set instance void System.CodeDom.CodeBinaryOperatorExpression::set_Left(class System.CodeDom.CodeExpression)
		}
		.property instance valuetype System.CodeDom.CodeBinaryOperatorType Operator()
		{
			.get instance valuetype System.CodeDom.CodeBinaryOperatorType System.CodeDom.CodeBinaryOperatorExpression::get_Operator()
			.set instance void System.CodeDom.CodeBinaryOperatorExpression::set_Operator(valuetype System.CodeDom.CodeBinaryOperatorType)
		}
		.property instance class System.CodeDom.CodeExpression Right()
		{
			.get instance class System.CodeDom.CodeExpression System.CodeDom.CodeBinaryOperatorExpression::get_Right()
			.set instance void System.CodeDom.CodeBinaryOperatorExpression::set_Right(class System.CodeDom.CodeExpression)
		}
	}
	.class public sealed serializable CodeBinaryOperatorType
		extends [mscorlib]System.Enum
	{
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype System.CodeDom.CodeBinaryOperatorType Add = int32(0x00000000)
		.field static public literal valuetype System.CodeDom.CodeBinaryOperatorType Assign = int32(0x00000005)
		.field static public literal valuetype System.CodeDom.CodeBinaryOperatorType BitwiseAnd = int32(0x0000000A)
		.field static public literal valuetype System.CodeDom.CodeBinaryOperatorType BitwiseOr = int32(0x00000009)
		.field static public literal valuetype System.CodeDom.CodeBinaryOperatorType BooleanAnd = int32(0x0000000C)
		.field static public literal valuetype System.CodeDom.CodeBinaryOperatorType BooleanOr = int32(0x0000000B)
		.field static public literal valuetype System.CodeDom.CodeBinaryOperatorType Divide = int32(0x00000003)
		.field static public literal valuetype System.CodeDom.CodeBinaryOperatorType GreaterThan = int32(0x0000000F)
		.field static public literal valuetype System.CodeDom.CodeBinaryOperatorType GreaterThanOrEqual = int32(0x00000010)
		.field static public literal valuetype System.CodeDom.CodeBinaryOperatorType IdentityEquality = int32(0x00000007)
		.field static public literal valuetype System.CodeDom.CodeBinaryOperatorType IdentityInequality = int32(0x00000006)
		.field static public literal valuetype System.CodeDom.CodeBinaryOperatorType LessThan = int32(0x0000000D)
		.field static public literal valuetype System.CodeDom.CodeBinaryOperatorType LessThanOrEqual = int32(0x0000000E)
		.field static public literal valuetype System.CodeDom.CodeBinaryOperatorType Modulus = int32(0x00000004)
		.field static public literal valuetype System.CodeDom.CodeBinaryOperatorType Multiply = int32(0x00000002)
		.field static public literal valuetype System.CodeDom.CodeBinaryOperatorType Subtract = int32(0x00000001)
		.field static public literal valuetype System.CodeDom.CodeBinaryOperatorType ValueEquality = int32(0x00000008)
	}
	.class public serializable CodeCastExpression
		extends System.CodeDom.CodeExpression
	{
		.custom instance void [mscorlib]System.Runtime.InteropServices.ClassInterfaceAttribute::.ctor(valuetype [mscorlib]System.Runtime.InteropServices.ClassInterfaceType) = (01 00 01 00 00 00 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class System.CodeDom.CodeTypeReference targetType, class System.CodeDom.CodeExpression expression)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string targetType, class System.CodeDom.CodeExpression expression)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Type targetType, class System.CodeDom.CodeExpression expression)
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeTypeReference get_TargetType()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_TargetType(class System.CodeDom.CodeTypeReference 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeExpression get_Expression()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Expression(class System.CodeDom.CodeExpression 'value')
		{
			ret
		}
		.property instance class System.CodeDom.CodeExpression Expression()
		{
			.get instance class System.CodeDom.CodeExpression System.CodeDom.CodeCastExpression::get_Expression()
			.set instance void System.CodeDom.CodeCastExpression::set_Expression(class System.CodeDom.CodeExpression)
		}
		.property instance class System.CodeDom.CodeTypeReference TargetType()
		{
			.get instance class System.CodeDom.CodeTypeReference System.CodeDom.CodeCastExpression::get_TargetType()
			.set instance void System.CodeDom.CodeCastExpression::set_TargetType(class System.CodeDom.CodeTypeReference)
		}
	}
	.class public serializable CodeCatchClause
		extends [mscorlib]System.Object
	{
		.custom instance void [mscorlib]System.Runtime.InteropServices.ClassInterfaceAttribute::.ctor(valuetype [mscorlib]System.Runtime.InteropServices.ClassInterfaceType) = (01 00 01 00 00 00 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string localName)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string localName, class System.CodeDom.CodeTypeReference catchExceptionType)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string localName, class System.CodeDom.CodeTypeReference catchExceptionType, class System.CodeDom.CodeStatement[] statements)
		{
			.param [3]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = (01 00 00 00)
			ret
		}
		.method public hidebysig specialname 
			instance string get_LocalName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_LocalName(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeTypeReference get_CatchExceptionType()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_CatchExceptionType(class System.CodeDom.CodeTypeReference 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeStatementCollection get_Statements()
		{
			ret
		}
		.property instance class System.CodeDom.CodeTypeReference CatchExceptionType()
		{
			.get instance class System.CodeDom.CodeTypeReference System.CodeDom.CodeCatchClause::get_CatchExceptionType()
			.set instance void System.CodeDom.CodeCatchClause::set_CatchExceptionType(class System.CodeDom.CodeTypeReference)
		}
		.property instance string LocalName()
		{
			.get instance string System.CodeDom.CodeCatchClause::get_LocalName()
			.set instance void System.CodeDom.CodeCatchClause::set_LocalName(string)
		}
		.property instance class System.CodeDom.CodeStatementCollection Statements()
		{
			.get instance class System.CodeDom.CodeStatementCollection System.CodeDom.CodeCatchClause::get_Statements()
		}
	}
	.class public serializable CodeCatchClauseCollection
		extends [mscorlib]System.Collections.CollectionBase
	{
		.custom instance void [mscorlib]System.Reflection.DefaultMemberAttribute::.ctor(string) = (01 00 04 49 74 65 6D 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ClassInterfaceAttribute::.ctor(valuetype [mscorlib]System.Runtime.InteropServices.ClassInterfaceType) = (01 00 01 00 00 00 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class System.CodeDom.CodeCatchClauseCollection 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class System.CodeDom.CodeCatchClause[] 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeCatchClause get_Item(int32 index)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Item(int32 index, class System.CodeDom.CodeCatchClause 'value')
		{
			ret
		}
		.method public hidebysig 
			instance int32 Add(class System.CodeDom.CodeCatchClause 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void AddRange(class System.CodeDom.CodeCatchClause[] 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void AddRange(class System.CodeDom.CodeCatchClauseCollection 'value')
		{
			ret
		}
		.method public hidebysig 
			instance bool Contains(class System.CodeDom.CodeCatchClause 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void CopyTo(class System.CodeDom.CodeCatchClause[] 'array', int32 index)
		{
			ret
		}
		.method public hidebysig 
			instance int32 IndexOf(class System.CodeDom.CodeCatchClause 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void Insert(int32 index, class System.CodeDom.CodeCatchClause 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void Remove(class System.CodeDom.CodeCatchClause 'value')
		{
			ret
		}
		.property instance class System.CodeDom.CodeCatchClause Item(int32)
		{
			.get instance class System.CodeDom.CodeCatchClause System.CodeDom.CodeCatchClauseCollection::get_Item(int32)
			.set instance void System.CodeDom.CodeCatchClauseCollection::set_Item(int32, class System.CodeDom.CodeCatchClause)
		}
	}
	.class public serializable CodeChecksumPragma
		extends System.CodeDom.CodeDirective
	{
		.custom instance void [mscorlib]System.Runtime.InteropServices.ClassInterfaceAttribute::.ctor(valuetype [mscorlib]System.Runtime.InteropServices.ClassInterfaceType) = (01 00 01 00 00 00 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string fileName, valuetype [mscorlib]System.Guid checksumAlgorithmId, uint8[] checksumData)
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_FileName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_FileName(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [mscorlib]System.Guid get_ChecksumAlgorithmId()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ChecksumAlgorithmId(valuetype [mscorlib]System.Guid 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance uint8[] get_ChecksumData()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ChecksumData(uint8[] 'value')
		{
			ret
		}
		.property instance valuetype [mscorlib]System.Guid ChecksumAlgorithmId()
		{
			.get instance valuetype [mscorlib]System.Guid System.CodeDom.CodeChecksumPragma::get_ChecksumAlgorithmId()
			.set instance void System.CodeDom.CodeChecksumPragma::set_ChecksumAlgorithmId(valuetype [mscorlib]System.Guid)
		}
		.property instance uint8[] ChecksumData()
		{
			.get instance uint8[] System.CodeDom.CodeChecksumPragma::get_ChecksumData()
			.set instance void System.CodeDom.CodeChecksumPragma::set_ChecksumData(uint8[])
		}
		.property instance string FileName()
		{
			.get instance string System.CodeDom.CodeChecksumPragma::get_FileName()
			.set instance void System.CodeDom.CodeChecksumPragma::set_FileName(string)
		}
	}
	.class public serializable CodeComment
		extends System.CodeDom.CodeObject
	{
		.custom instance void [mscorlib]System.Runtime.InteropServices.ClassInterfaceAttribute::.ctor(valuetype [mscorlib]System.Runtime.InteropServices.ClassInterfaceType) = (01 00 01 00 00 00 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string text)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string text, bool docComment)
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_DocComment()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_DocComment(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Text()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Text(string 'value')
		{
			ret
		}
		.property instance bool DocComment()
		{
			.get instance bool System.CodeDom.CodeComment::get_DocComment()
			.set instance void System.CodeDom.CodeComment::set_DocComment(bool)
		}
		.property instance string Text()
		{
			.get instance string System.CodeDom.CodeComment::get_Text()
			.set instance void System.CodeDom.CodeComment::set_Text(string)
		}
	}
	.class public serializable CodeCommentStatement
		extends System.CodeDom.CodeStatement
	{
		.custom instance void [mscorlib]System.Runtime.InteropServices.ClassInterfaceAttribute::.ctor(valuetype [mscorlib]System.Runtime.InteropServices.ClassInterfaceType) = (01 00 01 00 00 00 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class System.CodeDom.CodeComment comment)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string text)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string text, bool docComment)
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeComment get_Comment()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Comment(class System.CodeDom.CodeComment 'value')
		{
			ret
		}
		.property instance class System.CodeDom.CodeComment Comment()
		{
			.get instance class System.CodeDom.CodeComment System.CodeDom.CodeCommentStatement::get_Comment()
			.set instance void System.CodeDom.CodeCommentStatement::set_Comment(class System.CodeDom.CodeComment)
		}
	}
	.class public serializable CodeCommentStatementCollection
		extends [mscorlib]System.Collections.CollectionBase
	{
		.custom instance void [mscorlib]System.Reflection.DefaultMemberAttribute::.ctor(string) = (01 00 04 49 74 65 6D 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ClassInterfaceAttribute::.ctor(valuetype [mscorlib]System.Runtime.InteropServices.ClassInterfaceType) = (01 00 01 00 00 00 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class System.CodeDom.CodeCommentStatementCollection 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class System.CodeDom.CodeCommentStatement[] 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeCommentStatement get_Item(int32 index)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Item(int32 index, class System.CodeDom.CodeCommentStatement 'value')
		{
			ret
		}
		.method public hidebysig 
			instance int32 Add(class System.CodeDom.CodeCommentStatement 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void AddRange(class System.CodeDom.CodeCommentStatement[] 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void AddRange(class System.CodeDom.CodeCommentStatementCollection 'value')
		{
			ret
		}
		.method public hidebysig 
			instance bool Contains(class System.CodeDom.CodeCommentStatement 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void CopyTo(class System.CodeDom.CodeCommentStatement[] 'array', int32 index)
		{
			ret
		}
		.method public hidebysig 
			instance int32 IndexOf(class System.CodeDom.CodeCommentStatement 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void Insert(int32 index, class System.CodeDom.CodeCommentStatement 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void Remove(class System.CodeDom.CodeCommentStatement 'value')
		{
			ret
		}
		.property instance class System.CodeDom.CodeCommentStatement Item(int32)
		{
			.get instance class System.CodeDom.CodeCommentStatement System.CodeDom.CodeCommentStatementCollection::get_Item(int32)
			.set instance void System.CodeDom.CodeCommentStatementCollection::set_Item(int32, class System.CodeDom.CodeCommentStatement)
		}
	}
	.class public serializable CodeCompileUnit
		extends System.CodeDom.CodeObject
	{
		.custom instance void [mscorlib]System.Runtime.InteropServices.ClassInterfaceAttribute::.ctor(valuetype [mscorlib]System.Runtime.InteropServices.ClassInterfaceType) = (01 00 01 00 00 00 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeNamespaceCollection get_Namespaces()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Collections.Specialized.StringCollection get_ReferencedAssemblies()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeAttributeDeclarationCollection get_AssemblyCustomAttributes()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeDirectiveCollection get_StartDirectives()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeDirectiveCollection get_EndDirectives()
		{
			ret
		}
		.property instance class System.CodeDom.CodeAttributeDeclarationCollection AssemblyCustomAttributes()
		{
			.get instance class System.CodeDom.CodeAttributeDeclarationCollection System.CodeDom.CodeCompileUnit::get_AssemblyCustomAttributes()
		}
		.property instance class System.CodeDom.CodeDirectiveCollection EndDirectives()
		{
			.get instance class System.CodeDom.CodeDirectiveCollection System.CodeDom.CodeCompileUnit::get_EndDirectives()
		}
		.property instance class System.CodeDom.CodeNamespaceCollection Namespaces()
		{
			.get instance class System.CodeDom.CodeNamespaceCollection System.CodeDom.CodeCompileUnit::get_Namespaces()
		}
		.property instance class System.Collections.Specialized.StringCollection ReferencedAssemblies()
		{
			.get instance class System.Collections.Specialized.StringCollection System.CodeDom.CodeCompileUnit::get_ReferencedAssemblies()
		}
		.property instance class System.CodeDom.CodeDirectiveCollection StartDirectives()
		{
			.get instance class System.CodeDom.CodeDirectiveCollection System.CodeDom.CodeCompileUnit::get_StartDirectives()
		}
	}
	.class public serializable CodeConditionStatement
		extends System.CodeDom.CodeStatement
	{
		.custom instance void [mscorlib]System.Runtime.InteropServices.ClassInterfaceAttribute::.ctor(valuetype [mscorlib]System.Runtime.InteropServices.ClassInterfaceType) = (01 00 01 00 00 00 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class System.CodeDom.CodeExpression condition, class System.CodeDom.CodeStatement[] trueStatements)
		{
			.param [2]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = (01 00 00 00)
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class System.CodeDom.CodeExpression condition, class System.CodeDom.CodeStatement[] trueStatements, class System.CodeDom.CodeStatement[] falseStatements)
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeExpression get_Condition()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Condition(class System.CodeDom.CodeExpression 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeStatementCollection get_TrueStatements()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeStatementCollection get_FalseStatements()
		{
			ret
		}
		.property instance class System.CodeDom.CodeExpression Condition()
		{
			.get instance class System.CodeDom.CodeExpression System.CodeDom.CodeConditionStatement::get_Condition()
			.set instance void System.CodeDom.CodeConditionStatement::set_Condition(class System.CodeDom.CodeExpression)
		}
		.property instance class System.CodeDom.CodeStatementCollection FalseStatements()
		{
			.get instance class System.CodeDom.CodeStatementCollection System.CodeDom.CodeConditionStatement::get_FalseStatements()
		}
		.property instance class System.CodeDom.CodeStatementCollection TrueStatements()
		{
			.get instance class System.CodeDom.CodeStatementCollection System.CodeDom.CodeConditionStatement::get_TrueStatements()
		}
	}
	.class public serializable CodeConstructor
		extends System.CodeDom.CodeMemberMethod
	{
		.custom instance void [mscorlib]System.Runtime.InteropServices.ClassInterfaceAttribute::.ctor(valuetype [mscorlib]System.Runtime.InteropServices.ClassInterfaceType) = (01 00 01 00 00 00 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeExpressionCollection get_BaseConstructorArgs()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeExpressionCollection get_ChainedConstructorArgs()
		{
			ret
		}
		.property instance class System.CodeDom.CodeExpressionCollection BaseConstructorArgs()
		{
			.get instance class System.CodeDom.CodeExpressionCollection System.CodeDom.CodeConstructor::get_BaseConstructorArgs()
		}
		.property instance class System.CodeDom.CodeExpressionCollection ChainedConstructorArgs()
		{
			.get instance class System.CodeDom.CodeExpressionCollection System.CodeDom.CodeConstructor::get_ChainedConstructorArgs()
		}
	}
	.class public serializable CodeDefaultValueExpression
		extends System.CodeDom.CodeExpression
	{
		.custom instance void [mscorlib]System.Runtime.InteropServices.ClassInterfaceAttribute::.ctor(valuetype [mscorlib]System.Runtime.InteropServices.ClassInterfaceType) = (01 00 01 00 00 00 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class System.CodeDom.CodeTypeReference 'type')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeTypeReference get_Type()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Type(class System.CodeDom.CodeTypeReference 'value')
		{
			ret
		}
		.property instance class System.CodeDom.CodeTypeReference Type()
		{
			.get instance class System.CodeDom.CodeTypeReference System.CodeDom.CodeDefaultValueExpression::get_Type()
			.set instance void System.CodeDom.CodeDefaultValueExpression::set_Type(class System.CodeDom.CodeTypeReference)
		}
	}
	.class public serializable CodeDelegateCreateExpression
		extends System.CodeDom.CodeExpression
	{
		.custom instance void [mscorlib]System.Runtime.InteropServices.ClassInterfaceAttribute::.ctor(valuetype [mscorlib]System.Runtime.InteropServices.ClassInterfaceType) = (01 00 01 00 00 00 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class System.CodeDom.CodeTypeReference delegateType, class System.CodeDom.CodeExpression targetObject, string methodName)
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeTypeReference get_DelegateType()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_DelegateType(class System.CodeDom.CodeTypeReference 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeExpression get_TargetObject()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_TargetObject(class System.CodeDom.CodeExpression 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_MethodName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_MethodName(string 'value')
		{
			ret
		}
		.property instance class System.CodeDom.CodeTypeReference DelegateType()
		{
			.get instance class System.CodeDom.CodeTypeReference System.CodeDom.CodeDelegateCreateExpression::get_DelegateType()
			.set instance void System.CodeDom.CodeDelegateCreateExpression::set_DelegateType(class System.CodeDom.CodeTypeReference)
		}
		.property instance string MethodName()
		{
			.get instance string System.CodeDom.CodeDelegateCreateExpression::get_MethodName()
			.set instance void System.CodeDom.CodeDelegateCreateExpression::set_MethodName(string)
		}
		.property instance class System.CodeDom.CodeExpression TargetObject()
		{
			.get instance class System.CodeDom.CodeExpression System.CodeDom.CodeDelegateCreateExpression::get_TargetObject()
			.set instance void System.CodeDom.CodeDelegateCreateExpression::set_TargetObject(class System.CodeDom.CodeExpression)
		}
	}
	.class public serializable CodeDelegateInvokeExpression
		extends System.CodeDom.CodeExpression
	{
		.custom instance void [mscorlib]System.Runtime.InteropServices.ClassInterfaceAttribute::.ctor(valuetype [mscorlib]System.Runtime.InteropServices.ClassInterfaceType) = (01 00 01 00 00 00 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class System.CodeDom.CodeExpression targetObject)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class System.CodeDom.CodeExpression targetObject, class System.CodeDom.CodeExpression[] parameters)
		{
			.param [2]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = (01 00 00 00)
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeExpression get_TargetObject()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_TargetObject(class System.CodeDom.CodeExpression 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeExpressionCollection get_Parameters()
		{
			ret
		}
		.property instance class System.CodeDom.CodeExpressionCollection Parameters()
		{
			.get instance class System.CodeDom.CodeExpressionCollection System.CodeDom.CodeDelegateInvokeExpression::get_Parameters()
		}
		.property instance class System.CodeDom.CodeExpression TargetObject()
		{
			.get instance class System.CodeDom.CodeExpression System.CodeDom.CodeDelegateInvokeExpression::get_TargetObject()
			.set instance void System.CodeDom.CodeDelegateInvokeExpression::set_TargetObject(class System.CodeDom.CodeExpression)
		}
	}
	.class public serializable CodeDirectionExpression
		extends System.CodeDom.CodeExpression
	{
		.custom instance void [mscorlib]System.Runtime.InteropServices.ClassInterfaceAttribute::.ctor(valuetype [mscorlib]System.Runtime.InteropServices.ClassInterfaceType) = (01 00 01 00 00 00 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(valuetype System.CodeDom.FieldDirection direction, class System.CodeDom.CodeExpression expression)
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeExpression get_Expression()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Expression(class System.CodeDom.CodeExpression 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype System.CodeDom.FieldDirection get_Direction()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Direction(valuetype System.CodeDom.FieldDirection 'value')
		{
			ret
		}
		.property instance valuetype System.CodeDom.FieldDirection Direction()
		{
			.get instance valuetype System.CodeDom.FieldDirection System.CodeDom.CodeDirectionExpression::get_Direction()
			.set instance void System.CodeDom.CodeDirectionExpression::set_Direction(valuetype System.CodeDom.FieldDirection)
		}
		.property instance class System.CodeDom.CodeExpression Expression()
		{
			.get instance class System.CodeDom.CodeExpression System.CodeDom.CodeDirectionExpression::get_Expression()
			.set instance void System.CodeDom.CodeDirectionExpression::set_Expression(class System.CodeDom.CodeExpression)
		}
	}
	.class public serializable CodeDirective
		extends System.CodeDom.CodeObject
	{
		.custom instance void [mscorlib]System.Runtime.InteropServices.ClassInterfaceAttribute::.ctor(valuetype [mscorlib]System.Runtime.InteropServices.ClassInterfaceType) = (01 00 01 00 00 00 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public serializable CodeDirectiveCollection
		extends [mscorlib]System.Collections.CollectionBase
	{
		.custom instance void [mscorlib]System.Reflection.DefaultMemberAttribute::.ctor(string) = (01 00 04 49 74 65 6D 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ClassInterfaceAttribute::.ctor(valuetype [mscorlib]System.Runtime.InteropServices.ClassInterfaceType) = (01 00 01 00 00 00 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class System.CodeDom.CodeDirectiveCollection 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class System.CodeDom.CodeDirective[] 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeDirective get_Item(int32 index)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Item(int32 index, class System.CodeDom.CodeDirective 'value')
		{
			ret
		}
		.method public hidebysig 
			instance int32 Add(class System.CodeDom.CodeDirective 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void AddRange(class System.CodeDom.CodeDirective[] 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void AddRange(class System.CodeDom.CodeDirectiveCollection 'value')
		{
			ret
		}
		.method public hidebysig 
			instance bool Contains(class System.CodeDom.CodeDirective 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void CopyTo(class System.CodeDom.CodeDirective[] 'array', int32 index)
		{
			ret
		}
		.method public hidebysig 
			instance int32 IndexOf(class System.CodeDom.CodeDirective 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void Insert(int32 index, class System.CodeDom.CodeDirective 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void Remove(class System.CodeDom.CodeDirective 'value')
		{
			ret
		}
		.property instance class System.CodeDom.CodeDirective Item(int32)
		{
			.get instance class System.CodeDom.CodeDirective System.CodeDom.CodeDirectiveCollection::get_Item(int32)
			.set instance void System.CodeDom.CodeDirectiveCollection::set_Item(int32, class System.CodeDom.CodeDirective)
		}
	}
	.class public serializable CodeEntryPointMethod
		extends System.CodeDom.CodeMemberMethod
	{
		.custom instance void [mscorlib]System.Runtime.InteropServices.ClassInterfaceAttribute::.ctor(valuetype [mscorlib]System.Runtime.InteropServices.ClassInterfaceType) = (01 00 01 00 00 00 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public serializable CodeEventReferenceExpression
		extends System.CodeDom.CodeExpression
	{
		.custom instance void [mscorlib]System.Runtime.InteropServices.ClassInterfaceAttribute::.ctor(valuetype [mscorlib]System.Runtime.InteropServices.ClassInterfaceType) = (01 00 01 00 00 00 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class System.CodeDom.CodeExpression targetObject, string eventName)
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeExpression get_TargetObject()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_TargetObject(class System.CodeDom.CodeExpression 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_EventName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_EventName(string 'value')
		{
			ret
		}
		.property instance string EventName()
		{
			.get instance string System.CodeDom.CodeEventReferenceExpression::get_EventName()
			.set instance void System.CodeDom.CodeEventReferenceExpression::set_EventName(string)
		}
		.property instance class System.CodeDom.CodeExpression TargetObject()
		{
			.get instance class System.CodeDom.CodeExpression System.CodeDom.CodeEventReferenceExpression::get_TargetObject()
			.set instance void System.CodeDom.CodeEventReferenceExpression::set_TargetObject(class System.CodeDom.CodeExpression)
		}
	}
	.class public serializable CodeExpression
		extends System.CodeDom.CodeObject
	{
		.custom instance void [mscorlib]System.Runtime.InteropServices.ClassInterfaceAttribute::.ctor(valuetype [mscorlib]System.Runtime.InteropServices.ClassInterfaceType) = (01 00 01 00 00 00 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public serializable CodeExpressionCollection
		extends [mscorlib]System.Collections.CollectionBase
	{
		.custom instance void [mscorlib]System.Reflection.DefaultMemberAttribute::.ctor(string) = (01 00 04 49 74 65 6D 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ClassInterfaceAttribute::.ctor(valuetype [mscorlib]System.Runtime.InteropServices.ClassInterfaceType) = (01 00 01 00 00 00 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class System.CodeDom.CodeExpressionCollection 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class System.CodeDom.CodeExpression[] 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeExpression get_Item(int32 index)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Item(int32 index, class System.CodeDom.CodeExpression 'value')
		{
			ret
		}
		.method public hidebysig 
			instance int32 Add(class System.CodeDom.CodeExpression 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void AddRange(class System.CodeDom.CodeExpression[] 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void AddRange(class System.CodeDom.CodeExpressionCollection 'value')
		{
			ret
		}
		.method public hidebysig 
			instance bool Contains(class System.CodeDom.CodeExpression 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void CopyTo(class System.CodeDom.CodeExpression[] 'array', int32 index)
		{
			ret
		}
		.method public hidebysig 
			instance int32 IndexOf(class System.CodeDom.CodeExpression 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void Insert(int32 index, class System.CodeDom.CodeExpression 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void Remove(class System.CodeDom.CodeExpression 'value')
		{
			ret
		}
		.property instance class System.CodeDom.CodeExpression Item(int32)
		{
			.get instance class System.CodeDom.CodeExpression System.CodeDom.CodeExpressionCollection::get_Item(int32)
			.set instance void System.CodeDom.CodeExpressionCollection::set_Item(int32, class System.CodeDom.CodeExpression)
		}
	}
	.class public serializable CodeExpressionStatement
		extends System.CodeDom.CodeStatement
	{
		.custom instance void [mscorlib]System.Runtime.InteropServices.ClassInterfaceAttribute::.ctor(valuetype [mscorlib]System.Runtime.InteropServices.ClassInterfaceType) = (01 00 01 00 00 00 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class System.CodeDom.CodeExpression expression)
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeExpression get_Expression()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Expression(class System.CodeDom.CodeExpression 'value')
		{
			ret
		}
		.property instance class System.CodeDom.CodeExpression Expression()
		{
			.get instance class System.CodeDom.CodeExpression System.CodeDom.CodeExpressionStatement::get_Expression()
			.set instance void System.CodeDom.CodeExpressionStatement::set_Expression(class System.CodeDom.CodeExpression)
		}
	}
	.class public serializable CodeFieldReferenceExpression
		extends System.CodeDom.CodeExpression
	{
		.custom instance void [mscorlib]System.Runtime.InteropServices.ClassInterfaceAttribute::.ctor(valuetype [mscorlib]System.Runtime.InteropServices.ClassInterfaceType) = (01 00 01 00 00 00 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class System.CodeDom.CodeExpression targetObject, string fieldName)
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeExpression get_TargetObject()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_TargetObject(class System.CodeDom.CodeExpression 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_FieldName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_FieldName(string 'value')
		{
			ret
		}
		.property instance string FieldName()
		{
			.get instance string System.CodeDom.CodeFieldReferenceExpression::get_FieldName()
			.set instance void System.CodeDom.CodeFieldReferenceExpression::set_FieldName(string)
		}
		.property instance class System.CodeDom.CodeExpression TargetObject()
		{
			.get instance class System.CodeDom.CodeExpression System.CodeDom.CodeFieldReferenceExpression::get_TargetObject()
			.set instance void System.CodeDom.CodeFieldReferenceExpression::set_TargetObject(class System.CodeDom.CodeExpression)
		}
	}
	.class public serializable CodeGotoStatement
		extends System.CodeDom.CodeStatement
	{
		.custom instance void [mscorlib]System.Runtime.InteropServices.ClassInterfaceAttribute::.ctor(valuetype [mscorlib]System.Runtime.InteropServices.ClassInterfaceType) = (01 00 01 00 00 00 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string label)
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Label()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Label(string 'value')
		{
			ret
		}
		.property instance string Label()
		{
			.get instance string System.CodeDom.CodeGotoStatement::get_Label()
			.set instance void System.CodeDom.CodeGotoStatement::set_Label(string)
		}
	}
	.class public serializable CodeIndexerExpression
		extends System.CodeDom.CodeExpression
	{
		.custom instance void [mscorlib]System.Runtime.InteropServices.ClassInterfaceAttribute::.ctor(valuetype [mscorlib]System.Runtime.InteropServices.ClassInterfaceType) = (01 00 01 00 00 00 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class System.CodeDom.CodeExpression targetObject, class System.CodeDom.CodeExpression[] indices)
		{
			.param [2]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = (01 00 00 00)
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeExpression get_TargetObject()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_TargetObject(class System.CodeDom.CodeExpression 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeExpressionCollection get_Indices()
		{
			ret
		}
		.property instance class System.CodeDom.CodeExpressionCollection Indices()
		{
			.get instance class System.CodeDom.CodeExpressionCollection System.CodeDom.CodeIndexerExpression::get_Indices()
		}
		.property instance class System.CodeDom.CodeExpression TargetObject()
		{
			.get instance class System.CodeDom.CodeExpression System.CodeDom.CodeIndexerExpression::get_TargetObject()
			.set instance void System.CodeDom.CodeIndexerExpression::set_TargetObject(class System.CodeDom.CodeExpression)
		}
	}
	.class public serializable CodeIterationStatement
		extends System.CodeDom.CodeStatement
	{
		.custom instance void [mscorlib]System.Runtime.InteropServices.ClassInterfaceAttribute::.ctor(valuetype [mscorlib]System.Runtime.InteropServices.ClassInterfaceType) = (01 00 01 00 00 00 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class System.CodeDom.CodeStatement initStatement, class System.CodeDom.CodeExpression testExpression, class System.CodeDom.CodeStatement incrementStatement, class System.CodeDom.CodeStatement[] statements)
		{
			.param [4]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = (01 00 00 00)
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeStatement get_InitStatement()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_InitStatement(class System.CodeDom.CodeStatement 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeExpression get_TestExpression()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_TestExpression(class System.CodeDom.CodeExpression 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeStatement get_IncrementStatement()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_IncrementStatement(class System.CodeDom.CodeStatement 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeStatementCollection get_Statements()
		{
			ret
		}
		.property instance class System.CodeDom.CodeStatement IncrementStatement()
		{
			.get instance class System.CodeDom.CodeStatement System.CodeDom.CodeIterationStatement::get_IncrementStatement()
			.set instance void System.CodeDom.CodeIterationStatement::set_IncrementStatement(class System.CodeDom.CodeStatement)
		}
		.property instance class System.CodeDom.CodeStatement InitStatement()
		{
			.get instance class System.CodeDom.CodeStatement System.CodeDom.CodeIterationStatement::get_InitStatement()
			.set instance void System.CodeDom.CodeIterationStatement::set_InitStatement(class System.CodeDom.CodeStatement)
		}
		.property instance class System.CodeDom.CodeStatementCollection Statements()
		{
			.get instance class System.CodeDom.CodeStatementCollection System.CodeDom.CodeIterationStatement::get_Statements()
		}
		.property instance class System.CodeDom.CodeExpression TestExpression()
		{
			.get instance class System.CodeDom.CodeExpression System.CodeDom.CodeIterationStatement::get_TestExpression()
			.set instance void System.CodeDom.CodeIterationStatement::set_TestExpression(class System.CodeDom.CodeExpression)
		}
	}
	.class public serializable CodeLabeledStatement
		extends System.CodeDom.CodeStatement
	{
		.custom instance void [mscorlib]System.Runtime.InteropServices.ClassInterfaceAttribute::.ctor(valuetype [mscorlib]System.Runtime.InteropServices.ClassInterfaceType) = (01 00 01 00 00 00 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string label)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string label, class System.CodeDom.CodeStatement statement)
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Label()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Label(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeStatement get_Statement()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Statement(class System.CodeDom.CodeStatement 'value')
		{
			ret
		}
		.property instance string Label()
		{
			.get instance string System.CodeDom.CodeLabeledStatement::get_Label()
			.set instance void System.CodeDom.CodeLabeledStatement::set_Label(string)
		}
		.property instance class System.CodeDom.CodeStatement Statement()
		{
			.get instance class System.CodeDom.CodeStatement System.CodeDom.CodeLabeledStatement::get_Statement()
			.set instance void System.CodeDom.CodeLabeledStatement::set_Statement(class System.CodeDom.CodeStatement)
		}
	}
	.class public serializable CodeLinePragma
		extends [mscorlib]System.Object
	{
		.custom instance void [mscorlib]System.Runtime.InteropServices.ClassInterfaceAttribute::.ctor(valuetype [mscorlib]System.Runtime.InteropServices.ClassInterfaceType) = (01 00 01 00 00 00 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string fileName, int32 lineNumber)
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_FileName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_FileName(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_LineNumber()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_LineNumber(int32 'value')
		{
			ret
		}
		.property instance string FileName()
		{
			.get instance string System.CodeDom.CodeLinePragma::get_FileName()
			.set instance void System.CodeDom.CodeLinePragma::set_FileName(string)
		}
		.property instance int32 LineNumber()
		{
			.get instance int32 System.CodeDom.CodeLinePragma::get_LineNumber()
			.set instance void System.CodeDom.CodeLinePragma::set_LineNumber(int32)
		}
	}
	.class public serializable CodeMemberEvent
		extends System.CodeDom.CodeTypeMember
	{
		.custom instance void [mscorlib]System.Runtime.InteropServices.ClassInterfaceAttribute::.ctor(valuetype [mscorlib]System.Runtime.InteropServices.ClassInterfaceType) = (01 00 01 00 00 00 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeTypeReference get_Type()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Type(class System.CodeDom.CodeTypeReference 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeTypeReference get_PrivateImplementationType()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_PrivateImplementationType(class System.CodeDom.CodeTypeReference 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeTypeReferenceCollection get_ImplementationTypes()
		{
			ret
		}
		.property instance class System.CodeDom.CodeTypeReferenceCollection ImplementationTypes()
		{
			.get instance class System.CodeDom.CodeTypeReferenceCollection System.CodeDom.CodeMemberEvent::get_ImplementationTypes()
		}
		.property instance class System.CodeDom.CodeTypeReference PrivateImplementationType()
		{
			.get instance class System.CodeDom.CodeTypeReference System.CodeDom.CodeMemberEvent::get_PrivateImplementationType()
			.set instance void System.CodeDom.CodeMemberEvent::set_PrivateImplementationType(class System.CodeDom.CodeTypeReference)
		}
		.property instance class System.CodeDom.CodeTypeReference Type()
		{
			.get instance class System.CodeDom.CodeTypeReference System.CodeDom.CodeMemberEvent::get_Type()
			.set instance void System.CodeDom.CodeMemberEvent::set_Type(class System.CodeDom.CodeTypeReference)
		}
	}
	.class public serializable CodeMemberField
		extends System.CodeDom.CodeTypeMember
	{
		.custom instance void [mscorlib]System.Runtime.InteropServices.ClassInterfaceAttribute::.ctor(valuetype [mscorlib]System.Runtime.InteropServices.ClassInterfaceType) = (01 00 01 00 00 00 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class System.CodeDom.CodeTypeReference 'type', string name)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string 'type', string name)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Type 'type', string name)
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeTypeReference get_Type()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Type(class System.CodeDom.CodeTypeReference 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeExpression get_InitExpression()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_InitExpression(class System.CodeDom.CodeExpression 'value')
		{
			ret
		}
		.property instance class System.CodeDom.CodeExpression InitExpression()
		{
			.get instance class System.CodeDom.CodeExpression System.CodeDom.CodeMemberField::get_InitExpression()
			.set instance void System.CodeDom.CodeMemberField::set_InitExpression(class System.CodeDom.CodeExpression)
		}
		.property instance class System.CodeDom.CodeTypeReference Type()
		{
			.get instance class System.CodeDom.CodeTypeReference System.CodeDom.CodeMemberField::get_Type()
			.set instance void System.CodeDom.CodeMemberField::set_Type(class System.CodeDom.CodeTypeReference)
		}
	}
	.class public serializable CodeMemberMethod
		extends System.CodeDom.CodeTypeMember
	{
		.custom instance void [mscorlib]System.Runtime.InteropServices.ClassInterfaceAttribute::.ctor(valuetype [mscorlib]System.Runtime.InteropServices.ClassInterfaceType) = (01 00 01 00 00 00 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method public hidebysig specialname 
			instance void add_PopulateParameters(class [mscorlib]System.EventHandler 'value')
			synchronized 
		{
			ret
		}
		.method public hidebysig specialname 
			instance void remove_PopulateParameters(class [mscorlib]System.EventHandler 'value')
			synchronized 
		{
			ret
		}
		.method public hidebysig specialname 
			instance void add_PopulateStatements(class [mscorlib]System.EventHandler 'value')
			synchronized 
		{
			ret
		}
		.method public hidebysig specialname 
			instance void remove_PopulateStatements(class [mscorlib]System.EventHandler 'value')
			synchronized 
		{
			ret
		}
		.method public hidebysig specialname 
			instance void add_PopulateImplementationTypes(class [mscorlib]System.EventHandler 'value')
			synchronized 
		{
			ret
		}
		.method public hidebysig specialname 
			instance void remove_PopulateImplementationTypes(class [mscorlib]System.EventHandler 'value')
			synchronized 
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeTypeReference get_ReturnType()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ReturnType(class System.CodeDom.CodeTypeReference 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeStatementCollection get_Statements()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeParameterDeclarationExpressionCollection get_Parameters()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeTypeReference get_PrivateImplementationType()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_PrivateImplementationType(class System.CodeDom.CodeTypeReference 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeTypeReferenceCollection get_ImplementationTypes()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeAttributeDeclarationCollection get_ReturnTypeCustomAttributes()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeTypeParameterCollection get_TypeParameters()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.event [mscorlib]System.EventHandler PopulateImplementationTypes
		{
			.addon instance void System.CodeDom.CodeMemberMethod::add_PopulateImplementationTypes(class [mscorlib]System.EventHandler)
			.removeon instance void System.CodeDom.CodeMemberMethod::remove_PopulateImplementationTypes(class [mscorlib]System.EventHandler)
		}
		.event [mscorlib]System.EventHandler PopulateParameters
		{
			.addon instance void System.CodeDom.CodeMemberMethod::add_PopulateParameters(class [mscorlib]System.EventHandler)
			.removeon instance void System.CodeDom.CodeMemberMethod::remove_PopulateParameters(class [mscorlib]System.EventHandler)
		}
		.event [mscorlib]System.EventHandler PopulateStatements
		{
			.addon instance void System.CodeDom.CodeMemberMethod::add_PopulateStatements(class [mscorlib]System.EventHandler)
			.removeon instance void System.CodeDom.CodeMemberMethod::remove_PopulateStatements(class [mscorlib]System.EventHandler)
		}
		.property instance class System.CodeDom.CodeTypeReferenceCollection ImplementationTypes()
		{
			.get instance class System.CodeDom.CodeTypeReferenceCollection System.CodeDom.CodeMemberMethod::get_ImplementationTypes()
		}
		.property instance class System.CodeDom.CodeParameterDeclarationExpressionCollection Parameters()
		{
			.get instance class System.CodeDom.CodeParameterDeclarationExpressionCollection System.CodeDom.CodeMemberMethod::get_Parameters()
		}
		.property instance class System.CodeDom.CodeTypeReference PrivateImplementationType()
		{
			.get instance class System.CodeDom.CodeTypeReference System.CodeDom.CodeMemberMethod::get_PrivateImplementationType()
			.set instance void System.CodeDom.CodeMemberMethod::set_PrivateImplementationType(class System.CodeDom.CodeTypeReference)
		}
		.property instance class System.CodeDom.CodeTypeReference ReturnType()
		{
			.get instance class System.CodeDom.CodeTypeReference System.CodeDom.CodeMemberMethod::get_ReturnType()
			.set instance void System.CodeDom.CodeMemberMethod::set_ReturnType(class System.CodeDom.CodeTypeReference)
		}
		.property instance class System.CodeDom.CodeAttributeDeclarationCollection ReturnTypeCustomAttributes()
		{
			.get instance class System.CodeDom.CodeAttributeDeclarationCollection System.CodeDom.CodeMemberMethod::get_ReturnTypeCustomAttributes()
		}
		.property instance class System.CodeDom.CodeStatementCollection Statements()
		{
			.get instance class System.CodeDom.CodeStatementCollection System.CodeDom.CodeMemberMethod::get_Statements()
		}
		.property instance class System.CodeDom.CodeTypeParameterCollection TypeParameters()
		{
			.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 00 00 00)
			.get instance class System.CodeDom.CodeTypeParameterCollection System.CodeDom.CodeMemberMethod::get_TypeParameters()
		}
	}
	.class public serializable CodeMemberProperty
		extends System.CodeDom.CodeTypeMember
	{
		.custom instance void [mscorlib]System.Runtime.InteropServices.ClassInterfaceAttribute::.ctor(valuetype [mscorlib]System.Runtime.InteropServices.ClassInterfaceType) = (01 00 01 00 00 00 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeTypeReference get_PrivateImplementationType()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_PrivateImplementationType(class System.CodeDom.CodeTypeReference 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeTypeReferenceCollection get_ImplementationTypes()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeTypeReference get_Type()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Type(class System.CodeDom.CodeTypeReference 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_HasGet()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_HasGet(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_HasSet()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_HasSet(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeStatementCollection get_GetStatements()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeStatementCollection get_SetStatements()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeParameterDeclarationExpressionCollection get_Parameters()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance class System.CodeDom.CodeStatementCollection GetStatements()
		{
			.get instance class System.CodeDom.CodeStatementCollection System.CodeDom.CodeMemberProperty::get_GetStatements()
		}
		.property instance bool HasGet()
		{
			.get instance bool System.CodeDom.CodeMemberProperty::get_HasGet()
			.set instance void System.CodeDom.CodeMemberProperty::set_HasGet(bool)
		}
		.property instance bool HasSet()
		{
			.get instance bool System.CodeDom.CodeMemberProperty::get_HasSet()
			.set instance void System.CodeDom.CodeMemberProperty::set_HasSet(bool)
		}
		.property instance class System.CodeDom.CodeTypeReferenceCollection ImplementationTypes()
		{
			.get instance class System.CodeDom.CodeTypeReferenceCollection System.CodeDom.CodeMemberProperty::get_ImplementationTypes()
		}
		.property instance class System.CodeDom.CodeParameterDeclarationExpressionCollection Parameters()
		{
			.get instance class System.CodeDom.CodeParameterDeclarationExpressionCollection System.CodeDom.CodeMemberProperty::get_Parameters()
		}
		.property instance class System.CodeDom.CodeTypeReference PrivateImplementationType()
		{
			.get instance class System.CodeDom.CodeTypeReference System.CodeDom.CodeMemberProperty::get_PrivateImplementationType()
			.set instance void System.CodeDom.CodeMemberProperty::set_PrivateImplementationType(class System.CodeDom.CodeTypeReference)
		}
		.property instance class System.CodeDom.CodeStatementCollection SetStatements()
		{
			.get instance class System.CodeDom.CodeStatementCollection System.CodeDom.CodeMemberProperty::get_SetStatements()
		}
		.property instance class System.CodeDom.CodeTypeReference Type()
		{
			.get instance class System.CodeDom.CodeTypeReference System.CodeDom.CodeMemberProperty::get_Type()
			.set instance void System.CodeDom.CodeMemberProperty::set_Type(class System.CodeDom.CodeTypeReference)
		}
	}
	.class public serializable CodeMethodInvokeExpression
		extends System.CodeDom.CodeExpression
	{
		.custom instance void [mscorlib]System.Runtime.InteropServices.ClassInterfaceAttribute::.ctor(valuetype [mscorlib]System.Runtime.InteropServices.ClassInterfaceType) = (01 00 01 00 00 00 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class System.CodeDom.CodeMethodReferenceExpression 'method', class System.CodeDom.CodeExpression[] parameters)
		{
			.param [2]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = (01 00 00 00)
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class System.CodeDom.CodeExpression targetObject, string methodName, class System.CodeDom.CodeExpression[] parameters)
		{
			.param [3]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = (01 00 00 00)
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeMethodReferenceExpression get_Method()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Method(class System.CodeDom.CodeMethodReferenceExpression 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeExpressionCollection get_Parameters()
		{
			ret
		}
		.property instance class System.CodeDom.CodeMethodReferenceExpression Method()
		{
			.get instance class System.CodeDom.CodeMethodReferenceExpression System.CodeDom.CodeMethodInvokeExpression::get_Method()
			.set instance void System.CodeDom.CodeMethodInvokeExpression::set_Method(class System.CodeDom.CodeMethodReferenceExpression)
		}
		.property instance class System.CodeDom.CodeExpressionCollection Parameters()
		{
			.get instance class System.CodeDom.CodeExpressionCollection System.CodeDom.CodeMethodInvokeExpression::get_Parameters()
		}
	}
	.class public serializable CodeMethodReferenceExpression
		extends System.CodeDom.CodeExpression
	{
		.custom instance void [mscorlib]System.Runtime.InteropServices.ClassInterfaceAttribute::.ctor(valuetype [mscorlib]System.Runtime.InteropServices.ClassInterfaceType) = (01 00 01 00 00 00 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class System.CodeDom.CodeExpression targetObject, string methodName)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class System.CodeDom.CodeExpression targetObject, string methodName, class System.CodeDom.CodeTypeReference[] typeParameters)
		{
			.param [3]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = (01 00 00 00)
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeExpression get_TargetObject()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_TargetObject(class System.CodeDom.CodeExpression 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_MethodName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_MethodName(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeTypeReferenceCollection get_TypeArguments()
		{
			ret
		}
		.property instance string MethodName()
		{
			.get instance string System.CodeDom.CodeMethodReferenceExpression::get_MethodName()
			.set instance void System.CodeDom.CodeMethodReferenceExpression::set_MethodName(string)
		}
		.property instance class System.CodeDom.CodeExpression TargetObject()
		{
			.get instance class System.CodeDom.CodeExpression System.CodeDom.CodeMethodReferenceExpression::get_TargetObject()
			.set instance void System.CodeDom.CodeMethodReferenceExpression::set_TargetObject(class System.CodeDom.CodeExpression)
		}
		.property instance class System.CodeDom.CodeTypeReferenceCollection TypeArguments()
		{
			.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 00 00 00)
			.get instance class System.CodeDom.CodeTypeReferenceCollection System.CodeDom.CodeMethodReferenceExpression::get_TypeArguments()
		}
	}
	.class public serializable CodeMethodReturnStatement
		extends System.CodeDom.CodeStatement
	{
		.custom instance void [mscorlib]System.Runtime.InteropServices.ClassInterfaceAttribute::.ctor(valuetype [mscorlib]System.Runtime.InteropServices.ClassInterfaceType) = (01 00 01 00 00 00 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class System.CodeDom.CodeExpression expression)
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeExpression get_Expression()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Expression(class System.CodeDom.CodeExpression 'value')
		{
			ret
		}
		.property instance class System.CodeDom.CodeExpression Expression()
		{
			.get instance class System.CodeDom.CodeExpression System.CodeDom.CodeMethodReturnStatement::get_Expression()
			.set instance void System.CodeDom.CodeMethodReturnStatement::set_Expression(class System.CodeDom.CodeExpression)
		}
	}
	.class public serializable CodeNamespace
		extends System.CodeDom.CodeObject
	{
		.custom instance void [mscorlib]System.Runtime.InteropServices.ClassInterfaceAttribute::.ctor(valuetype [mscorlib]System.Runtime.InteropServices.ClassInterfaceType) = (01 00 01 00 00 00 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method public hidebysig specialname 
			instance void add_PopulateComments(class [mscorlib]System.EventHandler 'value')
			synchronized 
		{
			ret
		}
		.method public hidebysig specialname 
			instance void remove_PopulateComments(class [mscorlib]System.EventHandler 'value')
			synchronized 
		{
			ret
		}
		.method public hidebysig specialname 
			instance void add_PopulateImports(class [mscorlib]System.EventHandler 'value')
			synchronized 
		{
			ret
		}
		.method public hidebysig specialname 
			instance void remove_PopulateImports(class [mscorlib]System.EventHandler 'value')
			synchronized 
		{
			ret
		}
		.method public hidebysig specialname 
			instance void add_PopulateTypes(class [mscorlib]System.EventHandler 'value')
			synchronized 
		{
			ret
		}
		.method public hidebysig specialname 
			instance void remove_PopulateTypes(class [mscorlib]System.EventHandler 'value')
			synchronized 
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string name)
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeTypeDeclarationCollection get_Types()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeNamespaceImportCollection get_Imports()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Name(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeCommentStatementCollection get_Comments()
		{
			ret
		}
		.event [mscorlib]System.EventHandler PopulateComments
		{
			.addon instance void System.CodeDom.CodeNamespace::add_PopulateComments(class [mscorlib]System.EventHandler)
			.removeon instance void System.CodeDom.CodeNamespace::remove_PopulateComments(class [mscorlib]System.EventHandler)
		}
		.event [mscorlib]System.EventHandler PopulateImports
		{
			.addon instance void System.CodeDom.CodeNamespace::add_PopulateImports(class [mscorlib]System.EventHandler)
			.removeon instance void System.CodeDom.CodeNamespace::remove_PopulateImports(class [mscorlib]System.EventHandler)
		}
		.event [mscorlib]System.EventHandler PopulateTypes
		{
			.addon instance void System.CodeDom.CodeNamespace::add_PopulateTypes(class [mscorlib]System.EventHandler)
			.removeon instance void System.CodeDom.CodeNamespace::remove_PopulateTypes(class [mscorlib]System.EventHandler)
		}
		.property instance class System.CodeDom.CodeCommentStatementCollection Comments()
		{
			.get instance class System.CodeDom.CodeCommentStatementCollection System.CodeDom.CodeNamespace::get_Comments()
		}
		.property instance class System.CodeDom.CodeNamespaceImportCollection Imports()
		{
			.get instance class System.CodeDom.CodeNamespaceImportCollection System.CodeDom.CodeNamespace::get_Imports()
		}
		.property instance string Name()
		{
			.get instance string System.CodeDom.CodeNamespace::get_Name()
			.set instance void System.CodeDom.CodeNamespace::set_Name(string)
		}
		.property instance class System.CodeDom.CodeTypeDeclarationCollection Types()
		{
			.get instance class System.CodeDom.CodeTypeDeclarationCollection System.CodeDom.CodeNamespace::get_Types()
		}
	}
	.class public serializable CodeNamespaceCollection
		extends [mscorlib]System.Collections.CollectionBase
	{
		.custom instance void [mscorlib]System.Reflection.DefaultMemberAttribute::.ctor(string) = (01 00 04 49 74 65 6D 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ClassInterfaceAttribute::.ctor(valuetype [mscorlib]System.Runtime.InteropServices.ClassInterfaceType) = (01 00 01 00 00 00 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class System.CodeDom.CodeNamespaceCollection 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class System.CodeDom.CodeNamespace[] 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeNamespace get_Item(int32 index)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Item(int32 index, class System.CodeDom.CodeNamespace 'value')
		{
			ret
		}
		.method public hidebysig 
			instance int32 Add(class System.CodeDom.CodeNamespace 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void AddRange(class System.CodeDom.CodeNamespace[] 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void AddRange(class System.CodeDom.CodeNamespaceCollection 'value')
		{
			ret
		}
		.method public hidebysig 
			instance bool Contains(class System.CodeDom.CodeNamespace 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void CopyTo(class System.CodeDom.CodeNamespace[] 'array', int32 index)
		{
			ret
		}
		.method public hidebysig 
			instance int32 IndexOf(class System.CodeDom.CodeNamespace 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void Insert(int32 index, class System.CodeDom.CodeNamespace 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void Remove(class System.CodeDom.CodeNamespace 'value')
		{
			ret
		}
		.property instance class System.CodeDom.CodeNamespace Item(int32)
		{
			.get instance class System.CodeDom.CodeNamespace System.CodeDom.CodeNamespaceCollection::get_Item(int32)
			.set instance void System.CodeDom.CodeNamespaceCollection::set_Item(int32, class System.CodeDom.CodeNamespace)
		}
	}
	.class public serializable CodeNamespaceImport
		extends System.CodeDom.CodeObject
	{
		.custom instance void [mscorlib]System.Runtime.InteropServices.ClassInterfaceAttribute::.ctor(valuetype [mscorlib]System.Runtime.InteropServices.ClassInterfaceType) = (01 00 01 00 00 00 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string nameSpace)
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeLinePragma get_LinePragma()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_LinePragma(class System.CodeDom.CodeLinePragma 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Namespace()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Namespace(string 'value')
		{
			ret
		}
		.property instance class System.CodeDom.CodeLinePragma LinePragma()
		{
			.get instance class System.CodeDom.CodeLinePragma System.CodeDom.CodeNamespaceImport::get_LinePragma()
			.set instance void System.CodeDom.CodeNamespaceImport::set_LinePragma(class System.CodeDom.CodeLinePragma)
		}
		.property instance string Namespace()
		{
			.get instance string System.CodeDom.CodeNamespaceImport::get_Namespace()
			.set instance void System.CodeDom.CodeNamespaceImport::set_Namespace(string)
		}
	}
	.class public serializable CodeNamespaceImportCollection
		extends [mscorlib]System.Object
		implements [mscorlib]System.Collections.IList, [mscorlib]System.Collections.ICollection, [mscorlib]System.Collections.IEnumerable
	{
		.custom instance void [mscorlib]System.Reflection.DefaultMemberAttribute::.ctor(string) = (01 00 04 49 74 65 6D 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ClassInterfaceAttribute::.ctor(valuetype [mscorlib]System.Runtime.InteropServices.ClassInterfaceType) = (01 00 01 00 00 00 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeNamespaceImport get_Item(int32 index)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Item(int32 index, class System.CodeDom.CodeNamespaceImport 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_Count()
		{
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance bool System.Collections.IList.get_IsReadOnly()
		{
			.override [mscorlib]System.Collections.IList::get_IsReadOnly
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance bool System.Collections.IList.get_IsFixedSize()
		{
			.override [mscorlib]System.Collections.IList::get_IsFixedSize
			ret
		}
		.method public hidebysig 
			instance void Add(class System.CodeDom.CodeNamespaceImport 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void AddRange(class System.CodeDom.CodeNamespaceImport[] 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void Clear()
		{
			ret
		}
		.method public hidebysig 
			instance class [mscorlib]System.Collections.IEnumerator GetEnumerator()
		{
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance object System.Collections.IList.get_Item(int32 index)
		{
			.override [mscorlib]System.Collections.IList::get_Item
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance void System.Collections.IList.set_Item(int32 index, object 'value')
		{
			.override [mscorlib]System.Collections.IList::set_Item
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance int32 System.Collections.ICollection.get_Count()
		{
			.override [mscorlib]System.Collections.ICollection::get_Count
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance bool System.Collections.ICollection.get_IsSynchronized()
		{
			.override [mscorlib]System.Collections.ICollection::get_IsSynchronized
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance object System.Collections.ICollection.get_SyncRoot()
		{
			.override [mscorlib]System.Collections.ICollection::get_SyncRoot
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Collections.ICollection.CopyTo(class [mscorlib]System.Array 'array', int32 index)
		{
			.override [mscorlib]System.Collections.ICollection::CopyTo
			ret
		}
		.method private final virtual hidebysig newslot 
			instance class [mscorlib]System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			.override [mscorlib]System.Collections.IEnumerable::GetEnumerator
			ret
		}
		.method private final virtual hidebysig newslot 
			instance int32 System.Collections.IList.Add(object 'value')
		{
			.override [mscorlib]System.Collections.IList::Add
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Collections.IList.Clear()
		{
			.override [mscorlib]System.Collections.IList::Clear
			ret
		}
		.method private final virtual hidebysig newslot 
			instance bool System.Collections.IList.Contains(object 'value')
		{
			.override [mscorlib]System.Collections.IList::Contains
			ret
		}
		.method private final virtual hidebysig newslot 
			instance int32 System.Collections.IList.IndexOf(object 'value')
		{
			.override [mscorlib]System.Collections.IList::IndexOf
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Collections.IList.Insert(int32 index, object 'value')
		{
			.override [mscorlib]System.Collections.IList::Insert
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Collections.IList.Remove(object 'value')
		{
			.override [mscorlib]System.Collections.IList::Remove
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Collections.IList.RemoveAt(int32 index)
		{
			.override [mscorlib]System.Collections.IList::RemoveAt
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance int32 Count()
		{
			.get instance int32 System.CodeDom.CodeNamespaceImportCollection::get_Count()
		}
		.property instance class System.CodeDom.CodeNamespaceImport Item(int32)
		{
			.get instance class System.CodeDom.CodeNamespaceImport System.CodeDom.CodeNamespaceImportCollection::get_Item(int32)
			.set instance void System.CodeDom.CodeNamespaceImportCollection::set_Item(int32, class System.CodeDom.CodeNamespaceImport)
		}
		.property instance int32 System.Collections.ICollection.Count()
		{
			.get instance int32 System.CodeDom.CodeNamespaceImportCollection::System.Collections.ICollection.get_Count()
		}
		.property instance bool System.Collections.ICollection.IsSynchronized()
		{
			.get instance bool System.CodeDom.CodeNamespaceImportCollection::System.Collections.ICollection.get_IsSynchronized()
		}
		.property instance object System.Collections.ICollection.SyncRoot()
		{
			.get instance object System.CodeDom.CodeNamespaceImportCollection::System.Collections.ICollection.get_SyncRoot()
		}
		.property instance bool System.Collections.IList.IsFixedSize()
		{
			.get instance bool System.CodeDom.CodeNamespaceImportCollection::System.Collections.IList.get_IsFixedSize()
		}
		.property instance bool System.Collections.IList.IsReadOnly()
		{
			.get instance bool System.CodeDom.CodeNamespaceImportCollection::System.Collections.IList.get_IsReadOnly()
		}
		.property instance object System.Collections.IList.Item(int32)
		{
			.get instance object System.CodeDom.CodeNamespaceImportCollection::System.Collections.IList.get_Item(int32)
			.set instance void System.CodeDom.CodeNamespaceImportCollection::System.Collections.IList.set_Item(int32, object)
		}
	}
	.class public serializable CodeObject
		extends [mscorlib]System.Object
	{
		.custom instance void [mscorlib]System.Runtime.InteropServices.ClassInterfaceAttribute::.ctor(valuetype [mscorlib]System.Runtime.InteropServices.ClassInterfaceType) = (01 00 01 00 00 00 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]System.Collections.IDictionary get_UserData()
		{
			ret
		}
		.property instance class [mscorlib]System.Collections.IDictionary UserData()
		{
			.get instance class [mscorlib]System.Collections.IDictionary System.CodeDom.CodeObject::get_UserData()
		}
	}
	.class public serializable CodeObjectCreateExpression
		extends System.CodeDom.CodeExpression
	{
		.custom instance void [mscorlib]System.Runtime.InteropServices.ClassInterfaceAttribute::.ctor(valuetype [mscorlib]System.Runtime.InteropServices.ClassInterfaceType) = (01 00 01 00 00 00 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class System.CodeDom.CodeTypeReference createType, class System.CodeDom.CodeExpression[] parameters)
		{
			.param [2]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = (01 00 00 00)
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string createType, class System.CodeDom.CodeExpression[] parameters)
		{
			.param [2]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = (01 00 00 00)
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Type createType, class System.CodeDom.CodeExpression[] parameters)
		{
			.param [2]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = (01 00 00 00)
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeTypeReference get_CreateType()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_CreateType(class System.CodeDom.CodeTypeReference 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeExpressionCollection get_Parameters()
		{
			ret
		}
		.property instance class System.CodeDom.CodeTypeReference CreateType()
		{
			.get instance class System.CodeDom.CodeTypeReference System.CodeDom.CodeObjectCreateExpression::get_CreateType()
			.set instance void System.CodeDom.CodeObjectCreateExpression::set_CreateType(class System.CodeDom.CodeTypeReference)
		}
		.property instance class System.CodeDom.CodeExpressionCollection Parameters()
		{
			.get instance class System.CodeDom.CodeExpressionCollection System.CodeDom.CodeObjectCreateExpression::get_Parameters()
		}
	}
	.class public serializable CodeParameterDeclarationExpression
		extends System.CodeDom.CodeExpression
	{
		.custom instance void [mscorlib]System.Runtime.InteropServices.ClassInterfaceAttribute::.ctor(valuetype [mscorlib]System.Runtime.InteropServices.ClassInterfaceType) = (01 00 01 00 00 00 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class System.CodeDom.CodeTypeReference 'type', string name)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string 'type', string name)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Type 'type', string name)
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeAttributeDeclarationCollection get_CustomAttributes()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_CustomAttributes(class System.CodeDom.CodeAttributeDeclarationCollection 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype System.CodeDom.FieldDirection get_Direction()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Direction(valuetype System.CodeDom.FieldDirection 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeTypeReference get_Type()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Type(class System.CodeDom.CodeTypeReference 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Name(string 'value')
		{
			ret
		}
		.property instance class System.CodeDom.CodeAttributeDeclarationCollection CustomAttributes()
		{
			.get instance class System.CodeDom.CodeAttributeDeclarationCollection System.CodeDom.CodeParameterDeclarationExpression::get_CustomAttributes()
			.set instance void System.CodeDom.CodeParameterDeclarationExpression::set_CustomAttributes(class System.CodeDom.CodeAttributeDeclarationCollection)
		}
		.property instance valuetype System.CodeDom.FieldDirection Direction()
		{
			.get instance valuetype System.CodeDom.FieldDirection System.CodeDom.CodeParameterDeclarationExpression::get_Direction()
			.set instance void System.CodeDom.CodeParameterDeclarationExpression::set_Direction(valuetype System.CodeDom.FieldDirection)
		}
		.property instance string Name()
		{
			.get instance string System.CodeDom.CodeParameterDeclarationExpression::get_Name()
			.set instance void System.CodeDom.CodeParameterDeclarationExpression::set_Name(string)
		}
		.property instance class System.CodeDom.CodeTypeReference Type()
		{
			.get instance class System.CodeDom.CodeTypeReference System.CodeDom.CodeParameterDeclarationExpression::get_Type()
			.set instance void System.CodeDom.CodeParameterDeclarationExpression::set_Type(class System.CodeDom.CodeTypeReference)
		}
	}
	.class public serializable CodeParameterDeclarationExpressionCollection
		extends [mscorlib]System.Collections.CollectionBase
	{
		.custom instance void [mscorlib]System.Reflection.DefaultMemberAttribute::.ctor(string) = (01 00 04 49 74 65 6D 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ClassInterfaceAttribute::.ctor(valuetype [mscorlib]System.Runtime.InteropServices.ClassInterfaceType) = (01 00 01 00 00 00 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class System.CodeDom.CodeParameterDeclarationExpressionCollection 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class System.CodeDom.CodeParameterDeclarationExpression[] 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeParameterDeclarationExpression get_Item(int32 index)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Item(int32 index, class System.CodeDom.CodeParameterDeclarationExpression 'value')
		{
			ret
		}
		.method public hidebysig 
			instance int32 Add(class System.CodeDom.CodeParameterDeclarationExpression 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void AddRange(class System.CodeDom.CodeParameterDeclarationExpression[] 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void AddRange(class System.CodeDom.CodeParameterDeclarationExpressionCollection 'value')
		{
			ret
		}
		.method public hidebysig 
			instance bool Contains(class System.CodeDom.CodeParameterDeclarationExpression 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void CopyTo(class System.CodeDom.CodeParameterDeclarationExpression[] 'array', int32 index)
		{
			ret
		}
		.method public hidebysig 
			instance int32 IndexOf(class System.CodeDom.CodeParameterDeclarationExpression 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void Insert(int32 index, class System.CodeDom.CodeParameterDeclarationExpression 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void Remove(class System.CodeDom.CodeParameterDeclarationExpression 'value')
		{
			ret
		}
		.property instance class System.CodeDom.CodeParameterDeclarationExpression Item(int32)
		{
			.get instance class System.CodeDom.CodeParameterDeclarationExpression System.CodeDom.CodeParameterDeclarationExpressionCollection::get_Item(int32)
			.set instance void System.CodeDom.CodeParameterDeclarationExpressionCollection::set_Item(int32, class System.CodeDom.CodeParameterDeclarationExpression)
		}
	}
	.class public serializable CodePrimitiveExpression
		extends System.CodeDom.CodeExpression
	{
		.custom instance void [mscorlib]System.Runtime.InteropServices.ClassInterfaceAttribute::.ctor(valuetype [mscorlib]System.Runtime.InteropServices.ClassInterfaceType) = (01 00 01 00 00 00 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(object 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance object get_Value()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Value(object 'value')
		{
			ret
		}
		.property instance object Value()
		{
			.get instance object System.CodeDom.CodePrimitiveExpression::get_Value()
			.set instance void System.CodeDom.CodePrimitiveExpression::set_Value(object)
		}
	}
	.class public serializable CodePropertyReferenceExpression
		extends System.CodeDom.CodeExpression
	{
		.custom instance void [mscorlib]System.Runtime.InteropServices.ClassInterfaceAttribute::.ctor(valuetype [mscorlib]System.Runtime.InteropServices.ClassInterfaceType) = (01 00 01 00 00 00 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class System.CodeDom.CodeExpression targetObject, string propertyName)
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeExpression get_TargetObject()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_TargetObject(class System.CodeDom.CodeExpression 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_PropertyName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_PropertyName(string 'value')
		{
			ret
		}
		.property instance string PropertyName()
		{
			.get instance string System.CodeDom.CodePropertyReferenceExpression::get_PropertyName()
			.set instance void System.CodeDom.CodePropertyReferenceExpression::set_PropertyName(string)
		}
		.property instance class System.CodeDom.CodeExpression TargetObject()
		{
			.get instance class System.CodeDom.CodeExpression System.CodeDom.CodePropertyReferenceExpression::get_TargetObject()
			.set instance void System.CodeDom.CodePropertyReferenceExpression::set_TargetObject(class System.CodeDom.CodeExpression)
		}
	}
	.class public serializable CodePropertySetValueReferenceExpression
		extends System.CodeDom.CodeExpression
	{
		.custom instance void [mscorlib]System.Runtime.InteropServices.ClassInterfaceAttribute::.ctor(valuetype [mscorlib]System.Runtime.InteropServices.ClassInterfaceType) = (01 00 01 00 00 00 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public serializable CodeRegionDirective
		extends System.CodeDom.CodeDirective
	{
		.custom instance void [mscorlib]System.Runtime.InteropServices.ClassInterfaceAttribute::.ctor(valuetype [mscorlib]System.Runtime.InteropServices.ClassInterfaceType) = (01 00 01 00 00 00 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(valuetype System.CodeDom.CodeRegionMode regionMode, string regionText)
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_RegionText()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_RegionText(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype System.CodeDom.CodeRegionMode get_RegionMode()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_RegionMode(valuetype System.CodeDom.CodeRegionMode 'value')
		{
			ret
		}
		.property instance valuetype System.CodeDom.CodeRegionMode RegionMode()
		{
			.get instance valuetype System.CodeDom.CodeRegionMode System.CodeDom.CodeRegionDirective::get_RegionMode()
			.set instance void System.CodeDom.CodeRegionDirective::set_RegionMode(valuetype System.CodeDom.CodeRegionMode)
		}
		.property instance string RegionText()
		{
			.get instance string System.CodeDom.CodeRegionDirective::get_RegionText()
			.set instance void System.CodeDom.CodeRegionDirective::set_RegionText(string)
		}
	}
	.class public sealed serializable CodeRegionMode
		extends [mscorlib]System.Enum
	{
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype System.CodeDom.CodeRegionMode End = int32(0x00000002)
		.field static public literal valuetype System.CodeDom.CodeRegionMode None = int32(0x00000000)
		.field static public literal valuetype System.CodeDom.CodeRegionMode Start = int32(0x00000001)
	}
	.class public serializable CodeRemoveEventStatement
		extends System.CodeDom.CodeStatement
	{
		.custom instance void [mscorlib]System.Runtime.InteropServices.ClassInterfaceAttribute::.ctor(valuetype [mscorlib]System.Runtime.InteropServices.ClassInterfaceType) = (01 00 01 00 00 00 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class System.CodeDom.CodeEventReferenceExpression eventRef, class System.CodeDom.CodeExpression listener)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class System.CodeDom.CodeExpression targetObject, string eventName, class System.CodeDom.CodeExpression listener)
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeEventReferenceExpression get_Event()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Event(class System.CodeDom.CodeEventReferenceExpression 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeExpression get_Listener()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Listener(class System.CodeDom.CodeExpression 'value')
		{
			ret
		}
		.property instance class System.CodeDom.CodeEventReferenceExpression Event()
		{
			.get instance class System.CodeDom.CodeEventReferenceExpression System.CodeDom.CodeRemoveEventStatement::get_Event()
			.set instance void System.CodeDom.CodeRemoveEventStatement::set_Event(class System.CodeDom.CodeEventReferenceExpression)
		}
		.property instance class System.CodeDom.CodeExpression Listener()
		{
			.get instance class System.CodeDom.CodeExpression System.CodeDom.CodeRemoveEventStatement::get_Listener()
			.set instance void System.CodeDom.CodeRemoveEventStatement::set_Listener(class System.CodeDom.CodeExpression)
		}
	}
	.class public serializable CodeSnippetCompileUnit
		extends System.CodeDom.CodeCompileUnit
	{
		.custom instance void [mscorlib]System.Runtime.InteropServices.ClassInterfaceAttribute::.ctor(valuetype [mscorlib]System.Runtime.InteropServices.ClassInterfaceType) = (01 00 01 00 00 00 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Value()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Value(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeLinePragma get_LinePragma()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_LinePragma(class System.CodeDom.CodeLinePragma 'value')
		{
			ret
		}
		.property instance class System.CodeDom.CodeLinePragma LinePragma()
		{
			.get instance class System.CodeDom.CodeLinePragma System.CodeDom.CodeSnippetCompileUnit::get_LinePragma()
			.set instance void System.CodeDom.CodeSnippetCompileUnit::set_LinePragma(class System.CodeDom.CodeLinePragma)
		}
		.property instance string Value()
		{
			.get instance string System.CodeDom.CodeSnippetCompileUnit::get_Value()
			.set instance void System.CodeDom.CodeSnippetCompileUnit::set_Value(string)
		}
	}
	.class public serializable CodeSnippetExpression
		extends System.CodeDom.CodeExpression
	{
		.custom instance void [mscorlib]System.Runtime.InteropServices.ClassInterfaceAttribute::.ctor(valuetype [mscorlib]System.Runtime.InteropServices.ClassInterfaceType) = (01 00 01 00 00 00 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Value()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Value(string 'value')
		{
			ret
		}
		.property instance string Value()
		{
			.get instance string System.CodeDom.CodeSnippetExpression::get_Value()
			.set instance void System.CodeDom.CodeSnippetExpression::set_Value(string)
		}
	}
	.class public serializable CodeSnippetStatement
		extends System.CodeDom.CodeStatement
	{
		.custom instance void [mscorlib]System.Runtime.InteropServices.ClassInterfaceAttribute::.ctor(valuetype [mscorlib]System.Runtime.InteropServices.ClassInterfaceType) = (01 00 01 00 00 00 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Value()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Value(string 'value')
		{
			ret
		}
		.property instance string Value()
		{
			.get instance string System.CodeDom.CodeSnippetStatement::get_Value()
			.set instance void System.CodeDom.CodeSnippetStatement::set_Value(string)
		}
	}
	.class public serializable CodeSnippetTypeMember
		extends System.CodeDom.CodeTypeMember
	{
		.custom instance void [mscorlib]System.Runtime.InteropServices.ClassInterfaceAttribute::.ctor(valuetype [mscorlib]System.Runtime.InteropServices.ClassInterfaceType) = (01 00 01 00 00 00 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string text)
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Text()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Text(string 'value')
		{
			ret
		}
		.property instance string Text()
		{
			.get instance string System.CodeDom.CodeSnippetTypeMember::get_Text()
			.set instance void System.CodeDom.CodeSnippetTypeMember::set_Text(string)
		}
	}
	.class public serializable CodeStatement
		extends System.CodeDom.CodeObject
	{
		.custom instance void [mscorlib]System.Runtime.InteropServices.ClassInterfaceAttribute::.ctor(valuetype [mscorlib]System.Runtime.InteropServices.ClassInterfaceType) = (01 00 01 00 00 00 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeLinePragma get_LinePragma()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_LinePragma(class System.CodeDom.CodeLinePragma 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeDirectiveCollection get_StartDirectives()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeDirectiveCollection get_EndDirectives()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance class System.CodeDom.CodeDirectiveCollection EndDirectives()
		{
			.get instance class System.CodeDom.CodeDirectiveCollection System.CodeDom.CodeStatement::get_EndDirectives()
		}
		.property instance class System.CodeDom.CodeLinePragma LinePragma()
		{
			.get instance class System.CodeDom.CodeLinePragma System.CodeDom.CodeStatement::get_LinePragma()
			.set instance void System.CodeDom.CodeStatement::set_LinePragma(class System.CodeDom.CodeLinePragma)
		}
		.property instance class System.CodeDom.CodeDirectiveCollection StartDirectives()
		{
			.get instance class System.CodeDom.CodeDirectiveCollection System.CodeDom.CodeStatement::get_StartDirectives()
		}
	}
	.class public serializable CodeStatementCollection
		extends [mscorlib]System.Collections.CollectionBase
	{
		.custom instance void [mscorlib]System.Reflection.DefaultMemberAttribute::.ctor(string) = (01 00 04 49 74 65 6D 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ClassInterfaceAttribute::.ctor(valuetype [mscorlib]System.Runtime.InteropServices.ClassInterfaceType) = (01 00 01 00 00 00 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class System.CodeDom.CodeStatementCollection 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class System.CodeDom.CodeStatement[] 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeStatement get_Item(int32 index)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Item(int32 index, class System.CodeDom.CodeStatement 'value')
		{
			ret
		}
		.method public hidebysig 
			instance int32 Add(class System.CodeDom.CodeStatement 'value')
		{
			ret
		}
		.method public hidebysig 
			instance int32 Add(class System.CodeDom.CodeExpression 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void AddRange(class System.CodeDom.CodeStatement[] 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void AddRange(class System.CodeDom.CodeStatementCollection 'value')
		{
			ret
		}
		.method public hidebysig 
			instance bool Contains(class System.CodeDom.CodeStatement 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void CopyTo(class System.CodeDom.CodeStatement[] 'array', int32 index)
		{
			ret
		}
		.method public hidebysig 
			instance int32 IndexOf(class System.CodeDom.CodeStatement 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void Insert(int32 index, class System.CodeDom.CodeStatement 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void Remove(class System.CodeDom.CodeStatement 'value')
		{
			ret
		}
		.property instance class System.CodeDom.CodeStatement Item(int32)
		{
			.get instance class System.CodeDom.CodeStatement System.CodeDom.CodeStatementCollection::get_Item(int32)
			.set instance void System.CodeDom.CodeStatementCollection::set_Item(int32, class System.CodeDom.CodeStatement)
		}
	}
	.class public serializable CodeThisReferenceExpression
		extends System.CodeDom.CodeExpression
	{
		.custom instance void [mscorlib]System.Runtime.InteropServices.ClassInterfaceAttribute::.ctor(valuetype [mscorlib]System.Runtime.InteropServices.ClassInterfaceType) = (01 00 01 00 00 00 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public serializable CodeThrowExceptionStatement
		extends System.CodeDom.CodeStatement
	{
		.custom instance void [mscorlib]System.Runtime.InteropServices.ClassInterfaceAttribute::.ctor(valuetype [mscorlib]System.Runtime.InteropServices.ClassInterfaceType) = (01 00 01 00 00 00 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class System.CodeDom.CodeExpression toThrow)
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeExpression get_ToThrow()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ToThrow(class System.CodeDom.CodeExpression 'value')
		{
			ret
		}
		.property instance class System.CodeDom.CodeExpression ToThrow()
		{
			.get instance class System.CodeDom.CodeExpression System.CodeDom.CodeThrowExceptionStatement::get_ToThrow()
			.set instance void System.CodeDom.CodeThrowExceptionStatement::set_ToThrow(class System.CodeDom.CodeExpression)
		}
	}
	.class public serializable CodeTryCatchFinallyStatement
		extends System.CodeDom.CodeStatement
	{
		.custom instance void [mscorlib]System.Runtime.InteropServices.ClassInterfaceAttribute::.ctor(valuetype [mscorlib]System.Runtime.InteropServices.ClassInterfaceType) = (01 00 01 00 00 00 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class System.CodeDom.CodeStatement[] tryStatements, class System.CodeDom.CodeCatchClause[] catchClauses)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class System.CodeDom.CodeStatement[] tryStatements, class System.CodeDom.CodeCatchClause[] catchClauses, class System.CodeDom.CodeStatement[] finallyStatements)
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeStatementCollection get_TryStatements()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeCatchClauseCollection get_CatchClauses()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeStatementCollection get_FinallyStatements()
		{
			ret
		}
		.property instance class System.CodeDom.CodeCatchClauseCollection CatchClauses()
		{
			.get instance class System.CodeDom.CodeCatchClauseCollection System.CodeDom.CodeTryCatchFinallyStatement::get_CatchClauses()
		}
		.property instance class System.CodeDom.CodeStatementCollection FinallyStatements()
		{
			.get instance class System.CodeDom.CodeStatementCollection System.CodeDom.CodeTryCatchFinallyStatement::get_FinallyStatements()
		}
		.property instance class System.CodeDom.CodeStatementCollection TryStatements()
		{
			.get instance class System.CodeDom.CodeStatementCollection System.CodeDom.CodeTryCatchFinallyStatement::get_TryStatements()
		}
	}
	.class public serializable CodeTypeConstructor
		extends System.CodeDom.CodeMemberMethod
	{
		.custom instance void [mscorlib]System.Runtime.InteropServices.ClassInterfaceAttribute::.ctor(valuetype [mscorlib]System.Runtime.InteropServices.ClassInterfaceType) = (01 00 01 00 00 00 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public serializable CodeTypeDeclaration
		extends System.CodeDom.CodeTypeMember
	{
		.custom instance void [mscorlib]System.Runtime.InteropServices.ClassInterfaceAttribute::.ctor(valuetype [mscorlib]System.Runtime.InteropServices.ClassInterfaceType) = (01 00 01 00 00 00 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method public hidebysig specialname 
			instance void add_PopulateBaseTypes(class [mscorlib]System.EventHandler 'value')
			synchronized 
		{
			ret
		}
		.method public hidebysig specialname 
			instance void remove_PopulateBaseTypes(class [mscorlib]System.EventHandler 'value')
			synchronized 
		{
			ret
		}
		.method public hidebysig specialname 
			instance void add_PopulateMembers(class [mscorlib]System.EventHandler 'value')
			synchronized 
		{
			ret
		}
		.method public hidebysig specialname 
			instance void remove_PopulateMembers(class [mscorlib]System.EventHandler 'value')
			synchronized 
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string name)
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [mscorlib]System.Reflection.TypeAttributes get_TypeAttributes()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_TypeAttributes(valuetype [mscorlib]System.Reflection.TypeAttributes 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeTypeReferenceCollection get_BaseTypes()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsClass()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_IsClass(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsStruct()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_IsStruct(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsEnum()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_IsEnum(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsInterface()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_IsInterface(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsPartial()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_IsPartial(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeTypeMemberCollection get_Members()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeTypeParameterCollection get_TypeParameters()
		{
			ret
		}
		.event [mscorlib]System.EventHandler PopulateBaseTypes
		{
			.addon instance void System.CodeDom.CodeTypeDeclaration::add_PopulateBaseTypes(class [mscorlib]System.EventHandler)
			.removeon instance void System.CodeDom.CodeTypeDeclaration::remove_PopulateBaseTypes(class [mscorlib]System.EventHandler)
		}
		.event [mscorlib]System.EventHandler PopulateMembers
		{
			.addon instance void System.CodeDom.CodeTypeDeclaration::add_PopulateMembers(class [mscorlib]System.EventHandler)
			.removeon instance void System.CodeDom.CodeTypeDeclaration::remove_PopulateMembers(class [mscorlib]System.EventHandler)
		}
		.property instance class System.CodeDom.CodeTypeReferenceCollection BaseTypes()
		{
			.get instance class System.CodeDom.CodeTypeReferenceCollection System.CodeDom.CodeTypeDeclaration::get_BaseTypes()
		}
		.property instance bool IsClass()
		{
			.get instance bool System.CodeDom.CodeTypeDeclaration::get_IsClass()
			.set instance void System.CodeDom.CodeTypeDeclaration::set_IsClass(bool)
		}
		.property instance bool IsEnum()
		{
			.get instance bool System.CodeDom.CodeTypeDeclaration::get_IsEnum()
			.set instance void System.CodeDom.CodeTypeDeclaration::set_IsEnum(bool)
		}
		.property instance bool IsInterface()
		{
			.get instance bool System.CodeDom.CodeTypeDeclaration::get_IsInterface()
			.set instance void System.CodeDom.CodeTypeDeclaration::set_IsInterface(bool)
		}
		.property instance bool IsPartial()
		{
			.get instance bool System.CodeDom.CodeTypeDeclaration::get_IsPartial()
			.set instance void System.CodeDom.CodeTypeDeclaration::set_IsPartial(bool)
		}
		.property instance bool IsStruct()
		{
			.get instance bool System.CodeDom.CodeTypeDeclaration::get_IsStruct()
			.set instance void System.CodeDom.CodeTypeDeclaration::set_IsStruct(bool)
		}
		.property instance class System.CodeDom.CodeTypeMemberCollection Members()
		{
			.get instance class System.CodeDom.CodeTypeMemberCollection System.CodeDom.CodeTypeDeclaration::get_Members()
		}
		.property instance valuetype [mscorlib]System.Reflection.TypeAttributes TypeAttributes()
		{
			.get instance valuetype [mscorlib]System.Reflection.TypeAttributes System.CodeDom.CodeTypeDeclaration::get_TypeAttributes()
			.set instance void System.CodeDom.CodeTypeDeclaration::set_TypeAttributes(valuetype [mscorlib]System.Reflection.TypeAttributes)
		}
		.property instance class System.CodeDom.CodeTypeParameterCollection TypeParameters()
		{
			.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 00 00 00)
			.get instance class System.CodeDom.CodeTypeParameterCollection System.CodeDom.CodeTypeDeclaration::get_TypeParameters()
		}
	}
	.class public serializable CodeTypeDeclarationCollection
		extends [mscorlib]System.Collections.CollectionBase
	{
		.custom instance void [mscorlib]System.Reflection.DefaultMemberAttribute::.ctor(string) = (01 00 04 49 74 65 6D 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ClassInterfaceAttribute::.ctor(valuetype [mscorlib]System.Runtime.InteropServices.ClassInterfaceType) = (01 00 01 00 00 00 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class System.CodeDom.CodeTypeDeclarationCollection 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class System.CodeDom.CodeTypeDeclaration[] 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeTypeDeclaration get_Item(int32 index)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Item(int32 index, class System.CodeDom.CodeTypeDeclaration 'value')
		{
			ret
		}
		.method public hidebysig 
			instance int32 Add(class System.CodeDom.CodeTypeDeclaration 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void AddRange(class System.CodeDom.CodeTypeDeclaration[] 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void AddRange(class System.CodeDom.CodeTypeDeclarationCollection 'value')
		{
			ret
		}
		.method public hidebysig 
			instance bool Contains(class System.CodeDom.CodeTypeDeclaration 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void CopyTo(class System.CodeDom.CodeTypeDeclaration[] 'array', int32 index)
		{
			ret
		}
		.method public hidebysig 
			instance int32 IndexOf(class System.CodeDom.CodeTypeDeclaration 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void Insert(int32 index, class System.CodeDom.CodeTypeDeclaration 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void Remove(class System.CodeDom.CodeTypeDeclaration 'value')
		{
			ret
		}
		.property instance class System.CodeDom.CodeTypeDeclaration Item(int32)
		{
			.get instance class System.CodeDom.CodeTypeDeclaration System.CodeDom.CodeTypeDeclarationCollection::get_Item(int32)
			.set instance void System.CodeDom.CodeTypeDeclarationCollection::set_Item(int32, class System.CodeDom.CodeTypeDeclaration)
		}
	}
	.class public serializable CodeTypeDelegate
		extends System.CodeDom.CodeTypeDeclaration
	{
		.custom instance void [mscorlib]System.Runtime.InteropServices.ClassInterfaceAttribute::.ctor(valuetype [mscorlib]System.Runtime.InteropServices.ClassInterfaceType) = (01 00 01 00 00 00 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string name)
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeTypeReference get_ReturnType()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ReturnType(class System.CodeDom.CodeTypeReference 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeParameterDeclarationExpressionCollection get_Parameters()
		{
			ret
		}
		.property instance class System.CodeDom.CodeParameterDeclarationExpressionCollection Parameters()
		{
			.get instance class System.CodeDom.CodeParameterDeclarationExpressionCollection System.CodeDom.CodeTypeDelegate::get_Parameters()
		}
		.property instance class System.CodeDom.CodeTypeReference ReturnType()
		{
			.get instance class System.CodeDom.CodeTypeReference System.CodeDom.CodeTypeDelegate::get_ReturnType()
			.set instance void System.CodeDom.CodeTypeDelegate::set_ReturnType(class System.CodeDom.CodeTypeReference)
		}
	}
	.class public serializable CodeTypeMember
		extends System.CodeDom.CodeObject
	{
		.custom instance void [mscorlib]System.Runtime.InteropServices.ClassInterfaceAttribute::.ctor(valuetype [mscorlib]System.Runtime.InteropServices.ClassInterfaceType) = (01 00 01 00 00 00 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method public hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Name(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype System.CodeDom.MemberAttributes get_Attributes()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Attributes(valuetype System.CodeDom.MemberAttributes 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeAttributeDeclarationCollection get_CustomAttributes()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_CustomAttributes(class System.CodeDom.CodeAttributeDeclarationCollection 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeLinePragma get_LinePragma()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_LinePragma(class System.CodeDom.CodeLinePragma 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeCommentStatementCollection get_Comments()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeDirectiveCollection get_StartDirectives()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeDirectiveCollection get_EndDirectives()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance valuetype System.CodeDom.MemberAttributes Attributes()
		{
			.get instance valuetype System.CodeDom.MemberAttributes System.CodeDom.CodeTypeMember::get_Attributes()
			.set instance void System.CodeDom.CodeTypeMember::set_Attributes(valuetype System.CodeDom.MemberAttributes)
		}
		.property instance class System.CodeDom.CodeCommentStatementCollection Comments()
		{
			.get instance class System.CodeDom.CodeCommentStatementCollection System.CodeDom.CodeTypeMember::get_Comments()
		}
		.property instance class System.CodeDom.CodeAttributeDeclarationCollection CustomAttributes()
		{
			.get instance class System.CodeDom.CodeAttributeDeclarationCollection System.CodeDom.CodeTypeMember::get_CustomAttributes()
			.set instance void System.CodeDom.CodeTypeMember::set_CustomAttributes(class System.CodeDom.CodeAttributeDeclarationCollection)
		}
		.property instance class System.CodeDom.CodeDirectiveCollection EndDirectives()
		{
			.get instance class System.CodeDom.CodeDirectiveCollection System.CodeDom.CodeTypeMember::get_EndDirectives()
		}
		.property instance class System.CodeDom.CodeLinePragma LinePragma()
		{
			.get instance class System.CodeDom.CodeLinePragma System.CodeDom.CodeTypeMember::get_LinePragma()
			.set instance void System.CodeDom.CodeTypeMember::set_LinePragma(class System.CodeDom.CodeLinePragma)
		}
		.property instance string Name()
		{
			.get instance string System.CodeDom.CodeTypeMember::get_Name()
			.set instance void System.CodeDom.CodeTypeMember::set_Name(string)
		}
		.property instance class System.CodeDom.CodeDirectiveCollection StartDirectives()
		{
			.get instance class System.CodeDom.CodeDirectiveCollection System.CodeDom.CodeTypeMember::get_StartDirectives()
		}
	}
	.class public serializable CodeTypeMemberCollection
		extends [mscorlib]System.Collections.CollectionBase
	{
		.custom instance void [mscorlib]System.Reflection.DefaultMemberAttribute::.ctor(string) = (01 00 04 49 74 65 6D 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ClassInterfaceAttribute::.ctor(valuetype [mscorlib]System.Runtime.InteropServices.ClassInterfaceType) = (01 00 01 00 00 00 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class System.CodeDom.CodeTypeMemberCollection 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class System.CodeDom.CodeTypeMember[] 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeTypeMember get_Item(int32 index)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Item(int32 index, class System.CodeDom.CodeTypeMember 'value')
		{
			ret
		}
		.method public hidebysig 
			instance int32 Add(class System.CodeDom.CodeTypeMember 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void AddRange(class System.CodeDom.CodeTypeMember[] 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void AddRange(class System.CodeDom.CodeTypeMemberCollection 'value')
		{
			ret
		}
		.method public hidebysig 
			instance bool Contains(class System.CodeDom.CodeTypeMember 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void CopyTo(class System.CodeDom.CodeTypeMember[] 'array', int32 index)
		{
			ret
		}
		.method public hidebysig 
			instance int32 IndexOf(class System.CodeDom.CodeTypeMember 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void Insert(int32 index, class System.CodeDom.CodeTypeMember 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void Remove(class System.CodeDom.CodeTypeMember 'value')
		{
			ret
		}
		.property instance class System.CodeDom.CodeTypeMember Item(int32)
		{
			.get instance class System.CodeDom.CodeTypeMember System.CodeDom.CodeTypeMemberCollection::get_Item(int32)
			.set instance void System.CodeDom.CodeTypeMemberCollection::set_Item(int32, class System.CodeDom.CodeTypeMember)
		}
	}
	.class public serializable CodeTypeOfExpression
		extends System.CodeDom.CodeExpression
	{
		.custom instance void [mscorlib]System.Runtime.InteropServices.ClassInterfaceAttribute::.ctor(valuetype [mscorlib]System.Runtime.InteropServices.ClassInterfaceType) = (01 00 01 00 00 00 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class System.CodeDom.CodeTypeReference 'type')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string 'type')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Type 'type')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeTypeReference get_Type()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Type(class System.CodeDom.CodeTypeReference 'value')
		{
			ret
		}
		.property instance class System.CodeDom.CodeTypeReference Type()
		{
			.get instance class System.CodeDom.CodeTypeReference System.CodeDom.CodeTypeOfExpression::get_Type()
			.set instance void System.CodeDom.CodeTypeOfExpression::set_Type(class System.CodeDom.CodeTypeReference)
		}
	}
	.class public serializable CodeTypeParameter
		extends System.CodeDom.CodeObject
	{
		.custom instance void [mscorlib]System.Runtime.InteropServices.ClassInterfaceAttribute::.ctor(valuetype [mscorlib]System.Runtime.InteropServices.ClassInterfaceType) = (01 00 01 00 00 00 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string name)
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Name(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeTypeReferenceCollection get_Constraints()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeAttributeDeclarationCollection get_CustomAttributes()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_HasConstructorConstraint()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_HasConstructorConstraint(bool 'value')
		{
			ret
		}
		.property instance class System.CodeDom.CodeTypeReferenceCollection Constraints()
		{
			.get instance class System.CodeDom.CodeTypeReferenceCollection System.CodeDom.CodeTypeParameter::get_Constraints()
		}
		.property instance class System.CodeDom.CodeAttributeDeclarationCollection CustomAttributes()
		{
			.get instance class System.CodeDom.CodeAttributeDeclarationCollection System.CodeDom.CodeTypeParameter::get_CustomAttributes()
		}
		.property instance bool HasConstructorConstraint()
		{
			.get instance bool System.CodeDom.CodeTypeParameter::get_HasConstructorConstraint()
			.set instance void System.CodeDom.CodeTypeParameter::set_HasConstructorConstraint(bool)
		}
		.property instance string Name()
		{
			.get instance string System.CodeDom.CodeTypeParameter::get_Name()
			.set instance void System.CodeDom.CodeTypeParameter::set_Name(string)
		}
	}
	.class public serializable CodeTypeParameterCollection
		extends [mscorlib]System.Collections.CollectionBase
	{
		.custom instance void [mscorlib]System.Reflection.DefaultMemberAttribute::.ctor(string) = (01 00 04 49 74 65 6D 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ClassInterfaceAttribute::.ctor(valuetype [mscorlib]System.Runtime.InteropServices.ClassInterfaceType) = (01 00 01 00 00 00 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class System.CodeDom.CodeTypeParameterCollection 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class System.CodeDom.CodeTypeParameter[] 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeTypeParameter get_Item(int32 index)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Item(int32 index, class System.CodeDom.CodeTypeParameter 'value')
		{
			ret
		}
		.method public hidebysig 
			instance int32 Add(class System.CodeDom.CodeTypeParameter 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void Add(string 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void AddRange(class System.CodeDom.CodeTypeParameter[] 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void AddRange(class System.CodeDom.CodeTypeParameterCollection 'value')
		{
			ret
		}
		.method public hidebysig 
			instance bool Contains(class System.CodeDom.CodeTypeParameter 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void CopyTo(class System.CodeDom.CodeTypeParameter[] 'array', int32 index)
		{
			ret
		}
		.method public hidebysig 
			instance int32 IndexOf(class System.CodeDom.CodeTypeParameter 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void Insert(int32 index, class System.CodeDom.CodeTypeParameter 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void Remove(class System.CodeDom.CodeTypeParameter 'value')
		{
			ret
		}
		.property instance class System.CodeDom.CodeTypeParameter Item(int32)
		{
			.get instance class System.CodeDom.CodeTypeParameter System.CodeDom.CodeTypeParameterCollection::get_Item(int32)
			.set instance void System.CodeDom.CodeTypeParameterCollection::set_Item(int32, class System.CodeDom.CodeTypeParameter)
		}
	}
	.class public serializable CodeTypeReference
		extends System.CodeDom.CodeObject
	{
		.custom instance void [mscorlib]System.Runtime.InteropServices.ClassInterfaceAttribute::.ctor(valuetype [mscorlib]System.Runtime.InteropServices.ClassInterfaceType) = (01 00 01 00 00 00 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Type 'type')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Type 'type', valuetype System.CodeDom.CodeTypeReferenceOptions codeTypeReferenceOption)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string typeName, valuetype System.CodeDom.CodeTypeReferenceOptions codeTypeReferenceOption)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string typeName)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string typeName, class System.CodeDom.CodeTypeReference[] typeArguments)
		{
			.param [2]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = (01 00 00 00)
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class System.CodeDom.CodeTypeParameter typeParameter)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string baseType, int32 rank)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class System.CodeDom.CodeTypeReference arrayType, int32 rank)
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeTypeReference get_ArrayElementType()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ArrayElementType(class System.CodeDom.CodeTypeReference 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ArrayRank()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ArrayRank(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_BaseType()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BaseType(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype System.CodeDom.CodeTypeReferenceOptions get_Options()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Options(valuetype System.CodeDom.CodeTypeReferenceOptions 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeTypeReferenceCollection get_TypeArguments()
		{
			ret
		}
		.property instance class System.CodeDom.CodeTypeReference ArrayElementType()
		{
			.get instance class System.CodeDom.CodeTypeReference System.CodeDom.CodeTypeReference::get_ArrayElementType()
			.set instance void System.CodeDom.CodeTypeReference::set_ArrayElementType(class System.CodeDom.CodeTypeReference)
		}
		.property instance int32 ArrayRank()
		{
			.get instance int32 System.CodeDom.CodeTypeReference::get_ArrayRank()
			.set instance void System.CodeDom.CodeTypeReference::set_ArrayRank(int32)
		}
		.property instance string BaseType()
		{
			.get instance string System.CodeDom.CodeTypeReference::get_BaseType()
			.set instance void System.CodeDom.CodeTypeReference::set_BaseType(string)
		}
		.property instance valuetype System.CodeDom.CodeTypeReferenceOptions Options()
		{
			.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 00 00 00)
			.get instance valuetype System.CodeDom.CodeTypeReferenceOptions System.CodeDom.CodeTypeReference::get_Options()
			.set instance void System.CodeDom.CodeTypeReference::set_Options(valuetype System.CodeDom.CodeTypeReferenceOptions)
		}
		.property instance class System.CodeDom.CodeTypeReferenceCollection TypeArguments()
		{
			.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 00 00 00)
			.get instance class System.CodeDom.CodeTypeReferenceCollection System.CodeDom.CodeTypeReference::get_TypeArguments()
		}
	}
	.class public serializable CodeTypeReferenceCollection
		extends [mscorlib]System.Collections.CollectionBase
	{
		.custom instance void [mscorlib]System.Reflection.DefaultMemberAttribute::.ctor(string) = (01 00 04 49 74 65 6D 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ClassInterfaceAttribute::.ctor(valuetype [mscorlib]System.Runtime.InteropServices.ClassInterfaceType) = (01 00 01 00 00 00 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class System.CodeDom.CodeTypeReferenceCollection 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class System.CodeDom.CodeTypeReference[] 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeTypeReference get_Item(int32 index)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Item(int32 index, class System.CodeDom.CodeTypeReference 'value')
		{
			ret
		}
		.method public hidebysig 
			instance int32 Add(class System.CodeDom.CodeTypeReference 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void Add(string 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void Add(class [mscorlib]System.Type 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void AddRange(class System.CodeDom.CodeTypeReference[] 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void AddRange(class System.CodeDom.CodeTypeReferenceCollection 'value')
		{
			ret
		}
		.method public hidebysig 
			instance bool Contains(class System.CodeDom.CodeTypeReference 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void CopyTo(class System.CodeDom.CodeTypeReference[] 'array', int32 index)
		{
			ret
		}
		.method public hidebysig 
			instance int32 IndexOf(class System.CodeDom.CodeTypeReference 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void Insert(int32 index, class System.CodeDom.CodeTypeReference 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void Remove(class System.CodeDom.CodeTypeReference 'value')
		{
			ret
		}
		.property instance class System.CodeDom.CodeTypeReference Item(int32)
		{
			.get instance class System.CodeDom.CodeTypeReference System.CodeDom.CodeTypeReferenceCollection::get_Item(int32)
			.set instance void System.CodeDom.CodeTypeReferenceCollection::set_Item(int32, class System.CodeDom.CodeTypeReference)
		}
	}
	.class public serializable CodeTypeReferenceExpression
		extends System.CodeDom.CodeExpression
	{
		.custom instance void [mscorlib]System.Runtime.InteropServices.ClassInterfaceAttribute::.ctor(valuetype [mscorlib]System.Runtime.InteropServices.ClassInterfaceType) = (01 00 01 00 00 00 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class System.CodeDom.CodeTypeReference 'type')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string 'type')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Type 'type')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeTypeReference get_Type()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Type(class System.CodeDom.CodeTypeReference 'value')
		{
			ret
		}
		.property instance class System.CodeDom.CodeTypeReference Type()
		{
			.get instance class System.CodeDom.CodeTypeReference System.CodeDom.CodeTypeReferenceExpression::get_Type()
			.set instance void System.CodeDom.CodeTypeReferenceExpression::set_Type(class System.CodeDom.CodeTypeReference)
		}
	}
	.class public sealed serializable CodeTypeReferenceOptions
		extends [mscorlib]System.Enum
	{
		.custom instance void [mscorlib]System.FlagsAttribute::.ctor() = (01 00 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype System.CodeDom.CodeTypeReferenceOptions GenericTypeParameter = int32(0x00000002)
		.field static public literal valuetype System.CodeDom.CodeTypeReferenceOptions GlobalReference = int32(0x00000001)
	}
	.class public serializable CodeVariableDeclarationStatement
		extends System.CodeDom.CodeStatement
	{
		.custom instance void [mscorlib]System.Runtime.InteropServices.ClassInterfaceAttribute::.ctor(valuetype [mscorlib]System.Runtime.InteropServices.ClassInterfaceType) = (01 00 01 00 00 00 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class System.CodeDom.CodeTypeReference 'type', string name)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string 'type', string name)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Type 'type', string name)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class System.CodeDom.CodeTypeReference 'type', string name, class System.CodeDom.CodeExpression initExpression)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string 'type', string name, class System.CodeDom.CodeExpression initExpression)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Type 'type', string name, class System.CodeDom.CodeExpression initExpression)
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeExpression get_InitExpression()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_InitExpression(class System.CodeDom.CodeExpression 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Name(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.CodeTypeReference get_Type()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Type(class System.CodeDom.CodeTypeReference 'value')
		{
			ret
		}
		.property instance class System.CodeDom.CodeExpression InitExpression()
		{
			.get instance class System.CodeDom.CodeExpression System.CodeDom.CodeVariableDeclarationStatement::get_InitExpression()
			.set instance void System.CodeDom.CodeVariableDeclarationStatement::set_InitExpression(class System.CodeDom.CodeExpression)
		}
		.property instance string Name()
		{
			.get instance string System.CodeDom.CodeVariableDeclarationStatement::get_Name()
			.set instance void System.CodeDom.CodeVariableDeclarationStatement::set_Name(string)
		}
		.property instance class System.CodeDom.CodeTypeReference Type()
		{
			.get instance class System.CodeDom.CodeTypeReference System.CodeDom.CodeVariableDeclarationStatement::get_Type()
			.set instance void System.CodeDom.CodeVariableDeclarationStatement::set_Type(class System.CodeDom.CodeTypeReference)
		}
	}
	.class public serializable CodeVariableReferenceExpression
		extends System.CodeDom.CodeExpression
	{
		.custom instance void [mscorlib]System.Runtime.InteropServices.ClassInterfaceAttribute::.ctor(valuetype [mscorlib]System.Runtime.InteropServices.ClassInterfaceType) = (01 00 01 00 00 00 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string variableName)
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_VariableName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_VariableName(string 'value')
		{
			ret
		}
		.property instance string VariableName()
		{
			.get instance string System.CodeDom.CodeVariableReferenceExpression::get_VariableName()
			.set instance void System.CodeDom.CodeVariableReferenceExpression::set_VariableName(string)
		}
	}
	.class public sealed serializable FieldDirection
		extends [mscorlib]System.Enum
	{
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype System.CodeDom.FieldDirection In = int32(0x00000000)
		.field static public literal valuetype System.CodeDom.FieldDirection Out = int32(0x00000001)
		.field static public literal valuetype System.CodeDom.FieldDirection Ref = int32(0x00000002)
	}
	.class public sealed serializable MemberAttributes
		extends [mscorlib]System.Enum
	{
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype System.CodeDom.MemberAttributes Abstract = int32(0x00000001)
		.field static public literal valuetype System.CodeDom.MemberAttributes AccessMask = int32(0x0000F000)
		.field static public literal valuetype System.CodeDom.MemberAttributes Assembly = int32(0x00001000)
		.field static public literal valuetype System.CodeDom.MemberAttributes Const = int32(0x00000005)
		.field static public literal valuetype System.CodeDom.MemberAttributes Family = int32(0x00003000)
		.field static public literal valuetype System.CodeDom.MemberAttributes FamilyAndAssembly = int32(0x00002000)
		.field static public literal valuetype System.CodeDom.MemberAttributes FamilyOrAssembly = int32(0x00004000)
		.field static public literal valuetype System.CodeDom.MemberAttributes Final = int32(0x00000002)
		.field static public literal valuetype System.CodeDom.MemberAttributes New = int32(0x00000010)
		.field static public literal valuetype System.CodeDom.MemberAttributes Overloaded = int32(0x00000100)
		.field static public literal valuetype System.CodeDom.MemberAttributes Override = int32(0x00000004)
		.field static public literal valuetype System.CodeDom.MemberAttributes Private = int32(0x00005000)
		.field static public literal valuetype System.CodeDom.MemberAttributes Public = int32(0x00006000)
		.field static public literal valuetype System.CodeDom.MemberAttributes ScopeMask = int32(0x0000000F)
		.field static public literal valuetype System.CodeDom.MemberAttributes Static = int32(0x00000003)
		.field static public literal valuetype System.CodeDom.MemberAttributes VTableMask = int32(0x000000F0)
	}
}
.namespace System.CodeDom.Compiler
{
	.class public abstract CodeCompiler
		extends System.CodeDom.Compiler.CodeGenerator
		implements System.CodeDom.Compiler.ICodeCompiler
	{
		.permissionset linkcheck = (00)
		.method private final virtual hidebysig newslot 
			instance class System.CodeDom.Compiler.CompilerResults System.CodeDom.Compiler.ICodeCompiler.CompileAssemblyFromDom(class System.CodeDom.Compiler.CompilerParameters options, class System.CodeDom.CodeCompileUnit e)
		{
			.override System.CodeDom.Compiler.ICodeCompiler::CompileAssemblyFromDom
			ret
		}
		.method private final virtual hidebysig newslot 
			instance class System.CodeDom.Compiler.CompilerResults System.CodeDom.Compiler.ICodeCompiler.CompileAssemblyFromFile(class System.CodeDom.Compiler.CompilerParameters options, string fileName)
		{
			.override System.CodeDom.Compiler.ICodeCompiler::CompileAssemblyFromFile
			ret
		}
		.method private final virtual hidebysig newslot 
			instance class System.CodeDom.Compiler.CompilerResults System.CodeDom.Compiler.ICodeCompiler.CompileAssemblyFromSource(class System.CodeDom.Compiler.CompilerParameters options, string source)
		{
			.override System.CodeDom.Compiler.ICodeCompiler::CompileAssemblyFromSource
			ret
		}
		.method private final virtual hidebysig newslot 
			instance class System.CodeDom.Compiler.CompilerResults System.CodeDom.Compiler.ICodeCompiler.CompileAssemblyFromSourceBatch(class System.CodeDom.Compiler.CompilerParameters options, string[] sources)
		{
			.override System.CodeDom.Compiler.ICodeCompiler::CompileAssemblyFromSourceBatch
			ret
		}
		.method private final virtual hidebysig newslot 
			instance class System.CodeDom.Compiler.CompilerResults System.CodeDom.Compiler.ICodeCompiler.CompileAssemblyFromFileBatch(class System.CodeDom.Compiler.CompilerParameters options, string[] fileNames)
		{
			.override System.CodeDom.Compiler.ICodeCompiler::CompileAssemblyFromFileBatch
			ret
		}
		.method private final virtual hidebysig newslot 
			instance class System.CodeDom.Compiler.CompilerResults System.CodeDom.Compiler.ICodeCompiler.CompileAssemblyFromDomBatch(class System.CodeDom.Compiler.CompilerParameters options, class System.CodeDom.CodeCompileUnit[] ea)
		{
			.override System.CodeDom.Compiler.ICodeCompiler::CompileAssemblyFromDomBatch
			ret
		}
		.method family virtual hidebysig newslot abstract specialname 
			instance string get_FileExtension()
		{
		}
		.method family virtual hidebysig newslot abstract specialname 
			instance string get_CompilerName()
		{
		}
		.method family virtual hidebysig newslot 
			instance class System.CodeDom.Compiler.CompilerResults FromDom(class System.CodeDom.Compiler.CompilerParameters options, class System.CodeDom.CodeCompileUnit e)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance class System.CodeDom.Compiler.CompilerResults FromFile(class System.CodeDom.Compiler.CompilerParameters options, string fileName)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance class System.CodeDom.Compiler.CompilerResults FromSource(class System.CodeDom.Compiler.CompilerParameters options, string source)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance class System.CodeDom.Compiler.CompilerResults FromDomBatch(class System.CodeDom.Compiler.CompilerParameters options, class System.CodeDom.CodeCompileUnit[] ea)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance class System.CodeDom.Compiler.CompilerResults FromFileBatch(class System.CodeDom.Compiler.CompilerParameters options, string[] fileNames)
		{
			ret
		}
		.method family virtual hidebysig newslot abstract 
			instance void ProcessCompilerOutputLine(class System.CodeDom.Compiler.CompilerResults results, string line)
		{
		}
		.method family virtual hidebysig newslot abstract 
			instance string CmdArgsFromParameters(class System.CodeDom.Compiler.CompilerParameters options)
		{
		}
		.method family virtual hidebysig newslot 
			instance string GetResponseFileCmdArgs(class System.CodeDom.Compiler.CompilerParameters options, string cmdArgs)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance class System.CodeDom.Compiler.CompilerResults FromSourceBatch(class System.CodeDom.Compiler.CompilerParameters options, string[] sources)
		{
			ret
		}
		.method family static hidebysig 
			string JoinStringArray(string[] sa, string separator)
		{
			ret
		}
		.method family hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance string CompilerName()
		{
			.get instance string System.CodeDom.Compiler.CodeCompiler::get_CompilerName()
		}
		.property instance string FileExtension()
		{
			.get instance string System.CodeDom.Compiler.CodeCompiler::get_FileExtension()
		}
	}
	.class public abstract CodeDomProvider
		extends System.ComponentModel.Component
	{
		.permissionset linkcheck = (00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method public static hidebysig 
			class System.CodeDom.Compiler.CodeDomProvider CreateProvider(string language)
		{
			.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 00 00 00)
			ret
		}
		.method public static hidebysig 
			string GetLanguageFromExtension(string extension)
		{
			.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 00 00 00)
			ret
		}
		.method public static hidebysig 
			bool IsDefinedLanguage(string language)
		{
			.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 00 00 00)
			ret
		}
		.method public static hidebysig 
			bool IsDefinedExtension(string extension)
		{
			.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 00 00 00)
			ret
		}
		.method public static hidebysig 
			class System.CodeDom.Compiler.CompilerInfo GetCompilerInfo(string language)
		{
			.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 00 00 00)
			ret
		}
		.method public static hidebysig 
			class System.CodeDom.Compiler.CompilerInfo[] GetAllCompilerInfo()
		{
			.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 00 00 00)
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance string get_FileExtension()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance valuetype System.CodeDom.Compiler.LanguageOptions get_LanguageOptions()
		{
			ret
		}
		.method public virtual hidebysig newslot abstract 
			instance class System.CodeDom.Compiler.ICodeGenerator CreateGenerator()
		{
			.custom instance void [mscorlib]System.ObsoleteAttribute::.ctor(string) = (01 00 81 06 43 61 6C 6C 65 72 73 20 73 68 6F 75 6C 64 20 6E 6F 74 20 75 73 65 20 74 68 65 20 49 43 6F 64 65 47 65 6E 65 72 61 74 6F 72 20 69 6E 74 65 72 66 61 63 65 20 61 6E 64 20 73 68 6F 75 6C 64 20 69 6E 73 74 65 61 64 20 75 73 65 20 74 68 65 20 6D 65 74 68 6F 64 73 20 64 69 72 65 63 74 6C 79 20 6F 6E 20 74 68 65 20 43 6F 64 65 44 6F 6D 50 72 6F 76 69 64 65 72 20 63 6C 61 73 73 2E 20 54 68 6F 73 65 20 69 6E 68 65 72 69 74 69 6E 67 20 66 72 6F 6D 20 43 6F 64 65 44 6F 6D 50 72 6F 76 69 64 65 72 20 6D 75 73 74 20 73 74 69 6C 6C 20 69 6D 70 6C 65 6D 65 6E 74 20 74 68 69 73 20 69 6E 74 65 72 66 61 63 65 2C 20 61 6E 64 20 73 68 6F 75 6C 64 20 65 78 63 6C 75 64 65 20 74 68 69 73 20 77 61 72 6E 69 6E 67 20 6F 72 20 61 6C 73 6F 20 6F 62 73 6F 6C 65 74 65 20 74 68 69 73 20 6D 65 74 68 6F 64 2E 00 00)
		}
		.method public virtual hidebysig newslot 
			instance class System.CodeDom.Compiler.ICodeGenerator CreateGenerator(class [mscorlib]'System.IO.TextWriter' output)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance class System.CodeDom.Compiler.ICodeGenerator CreateGenerator(string fileName)
		{
			ret
		}
		.method public virtual hidebysig newslot abstract 
			instance class System.CodeDom.Compiler.ICodeCompiler CreateCompiler()
		{
			.custom instance void [mscorlib]System.ObsoleteAttribute::.ctor(string) = (01 00 81 05 43 61 6C 6C 65 72 73 20 73 68 6F 75 6C 64 20 6E 6F 74 20 75 73 65 20 74 68 65 20 49 43 6F 64 65 43 6F 6D 70 69 6C 65 72 20 69 6E 74 65 72 66 61 63 65 20 61 6E 64 20 73 68 6F 75 6C 64 20 69 6E 73 74 65 61 64 20 75 73 65 20 74 68 65 20 6D 65 74 68 6F 64 73 20 64 69 72 65 63 74 6C 79 20 6F 6E 20 74 68 65 20 43 6F 64 65 44 6F 6D 50 72 6F 76 69 64 65 72 20 63 6C 61 73 73 2E 20 54 68 6F 73 65 20 69 6E 68 65 72 69 74 69 6E 67 20 66 72 6F 6D 20 43 6F 64 65 44 6F 6D 50 72 6F 76 69 64 65 72 20 6D 75 73 74 20 73 74 69 6C 6C 20 69 6D 70 6C 65 6D 65 6E 74 20 74 68 69 73 20 69 6E 74 65 72 66 61 63 65 2C 20 61 6E 64 20 73 68 6F 75 6C 64 20 65 78 63 6C 75 64 65 20 74 68 69 73 20 77 61 72 6E 69 6E 67 20 6F 72 20 61 6C 73 6F 20 6F 62 73 6F 6C 65 74 65 20 74 68 69 73 20 6D 65 74 68 6F 64 2E 00 00)
		}
		.method public virtual hidebysig newslot 
			instance class System.CodeDom.Compiler.ICodeParser CreateParser()
		{
			.custom instance void [mscorlib]System.ObsoleteAttribute::.ctor(string) = (01 00 81 03 43 61 6C 6C 65 72 73 20 73 68 6F 75 6C 64 20 6E 6F 74 20 75 73 65 20 74 68 65 20 49 43 6F 64 65 50 61 72 73 65 72 20 69 6E 74 65 72 66 61 63 65 20 61 6E 64 20 73 68 6F 75 6C 64 20 69 6E 73 74 65 61 64 20 75 73 65 20 74 68 65 20 6D 65 74 68 6F 64 73 20 64 69 72 65 63 74 6C 79 20 6F 6E 20 74 68 65 20 43 6F 64 65 44 6F 6D 50 72 6F 76 69 64 65 72 20 63 6C 61 73 73 2E 20 54 68 6F 73 65 20 69 6E 68 65 72 69 74 69 6E 67 20 66 72 6F 6D 20 43 6F 64 65 44 6F 6D 50 72 6F 76 69 64 65 72 20 6D 75 73 74 20 73 74 69 6C 6C 20 69 6D 70 6C 65 6D 65 6E 74 20 74 68 69 73 20 69 6E 74 65 72 66 61 63 65 2C 20 61 6E 64 20 73 68 6F 75 6C 64 20 65 78 63 6C 75 64 65 20 74 68 69 73 20 77 61 72 6E 69 6E 67 20 6F 72 20 61 6C 73 6F 20 6F 62 73 6F 6C 65 74 65 20 74 68 69 73 20 6D 65 74 68 6F 64 2E 00 00)
			ret
		}
		.method public virtual hidebysig newslot 
			instance class System.ComponentModel.TypeConverter GetConverter(class [mscorlib]System.Type 'type')
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance class System.CodeDom.Compiler.CompilerResults CompileAssemblyFromDom(class System.CodeDom.Compiler.CompilerParameters options, class System.CodeDom.CodeCompileUnit[] compilationUnits)
		{
			.param [2]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = (01 00 00 00)
			ret
		}
		.method public virtual hidebysig newslot 
			instance class System.CodeDom.Compiler.CompilerResults CompileAssemblyFromFile(class System.CodeDom.Compiler.CompilerParameters options, string[] fileNames)
		{
			.param [2]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = (01 00 00 00)
			ret
		}
		.method public virtual hidebysig newslot 
			instance class System.CodeDom.Compiler.CompilerResults CompileAssemblyFromSource(class System.CodeDom.Compiler.CompilerParameters options, string[] sources)
		{
			.param [2]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = (01 00 00 00)
			ret
		}
		.method public virtual hidebysig newslot 
			instance bool IsValidIdentifier(string 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance string CreateEscapedIdentifier(string 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance string CreateValidIdentifier(string 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance string GetTypeOutput(class System.CodeDom.CodeTypeReference 'type')
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance bool Supports(valuetype System.CodeDom.Compiler.GeneratorSupport generatorSupport)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void GenerateCodeFromExpression(class System.CodeDom.CodeExpression expression, class [mscorlib]'System.IO.TextWriter' writer, class System.CodeDom.Compiler.CodeGeneratorOptions options)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void GenerateCodeFromStatement(class System.CodeDom.CodeStatement statement, class [mscorlib]'System.IO.TextWriter' writer, class System.CodeDom.Compiler.CodeGeneratorOptions options)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void GenerateCodeFromNamespace(class System.CodeDom.CodeNamespace codeNamespace, class [mscorlib]'System.IO.TextWriter' writer, class System.CodeDom.Compiler.CodeGeneratorOptions options)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void GenerateCodeFromCompileUnit(class System.CodeDom.CodeCompileUnit compileUnit, class [mscorlib]'System.IO.TextWriter' writer, class System.CodeDom.Compiler.CodeGeneratorOptions options)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void GenerateCodeFromType(class System.CodeDom.CodeTypeDeclaration codeType, class [mscorlib]'System.IO.TextWriter' writer, class System.CodeDom.Compiler.CodeGeneratorOptions options)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void GenerateCodeFromMember(class System.CodeDom.CodeTypeMember member, class [mscorlib]'System.IO.TextWriter' writer, class System.CodeDom.Compiler.CodeGeneratorOptions options)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance class System.CodeDom.CodeCompileUnit Parse(class [mscorlib]'System.IO.TextReader' codeStream)
		{
			ret
		}
		.method family hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance string FileExtension()
		{
			.get instance string System.CodeDom.Compiler.CodeDomProvider::get_FileExtension()
		}
		.property instance valuetype System.CodeDom.Compiler.LanguageOptions LanguageOptions()
		{
			.get instance valuetype System.CodeDom.Compiler.LanguageOptions System.CodeDom.Compiler.CodeDomProvider::get_LanguageOptions()
		}
	}
	.class public abstract CodeGenerator
		extends [mscorlib]System.Object
		implements System.CodeDom.Compiler.ICodeGenerator
	{
		.permissionset linkcheck = (00)
		.method family hidebysig specialname 
			instance class System.CodeDom.CodeTypeDeclaration get_CurrentClass()
		{
			ret
		}
		.method family hidebysig specialname 
			instance string get_CurrentTypeName()
		{
			ret
		}
		.method family hidebysig specialname 
			instance class System.CodeDom.CodeTypeMember get_CurrentMember()
		{
			ret
		}
		.method family hidebysig specialname 
			instance string get_CurrentMemberName()
		{
			ret
		}
		.method family hidebysig specialname 
			instance bool get_IsCurrentInterface()
		{
			ret
		}
		.method family hidebysig specialname 
			instance bool get_IsCurrentClass()
		{
			ret
		}
		.method family hidebysig specialname 
			instance bool get_IsCurrentStruct()
		{
			ret
		}
		.method family hidebysig specialname 
			instance bool get_IsCurrentEnum()
		{
			ret
		}
		.method family hidebysig specialname 
			instance bool get_IsCurrentDelegate()
		{
			ret
		}
		.method family hidebysig specialname 
			instance int32 get_Indent()
		{
			ret
		}
		.method family hidebysig specialname 
			instance void set_Indent(int32 'value')
		{
			ret
		}
		.method family virtual hidebysig newslot abstract specialname 
			instance string get_NullToken()
		{
		}
		.method family hidebysig specialname 
			instance class [mscorlib]'System.IO.TextWriter' get_Output()
		{
			ret
		}
		.method family hidebysig specialname 
			instance class System.CodeDom.Compiler.CodeGeneratorOptions get_Options()
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void GenerateDirectives(class System.CodeDom.CodeDirectiveCollection directives)
		{
			ret
		}
		.method family hidebysig 
			instance void GenerateNamespaces(class System.CodeDom.CodeCompileUnit e)
		{
			ret
		}
		.method family hidebysig 
			instance void GenerateTypes(class System.CodeDom.CodeNamespace e)
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance bool System.CodeDom.Compiler.ICodeGenerator.Supports(valuetype System.CodeDom.Compiler.GeneratorSupport support)
		{
			.override System.CodeDom.Compiler.ICodeGenerator::Supports
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromType(class System.CodeDom.CodeTypeDeclaration e, class [mscorlib]'System.IO.TextWriter' w, class System.CodeDom.Compiler.CodeGeneratorOptions o)
		{
			.override System.CodeDom.Compiler.ICodeGenerator::GenerateCodeFromType
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromExpression(class System.CodeDom.CodeExpression e, class [mscorlib]'System.IO.TextWriter' w, class System.CodeDom.Compiler.CodeGeneratorOptions o)
		{
			.override System.CodeDom.Compiler.ICodeGenerator::GenerateCodeFromExpression
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromCompileUnit(class System.CodeDom.CodeCompileUnit e, class [mscorlib]'System.IO.TextWriter' w, class System.CodeDom.Compiler.CodeGeneratorOptions o)
		{
			.override System.CodeDom.Compiler.ICodeGenerator::GenerateCodeFromCompileUnit
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromNamespace(class System.CodeDom.CodeNamespace e, class [mscorlib]'System.IO.TextWriter' w, class System.CodeDom.Compiler.CodeGeneratorOptions o)
		{
			.override System.CodeDom.Compiler.ICodeGenerator::GenerateCodeFromNamespace
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromStatement(class System.CodeDom.CodeStatement e, class [mscorlib]'System.IO.TextWriter' w, class System.CodeDom.Compiler.CodeGeneratorOptions o)
		{
			.override System.CodeDom.Compiler.ICodeGenerator::GenerateCodeFromStatement
			ret
		}
		.method public virtual hidebysig newslot 
			instance void GenerateCodeFromMember(class System.CodeDom.CodeTypeMember member, class [mscorlib]'System.IO.TextWriter' writer, class System.CodeDom.Compiler.CodeGeneratorOptions options)
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance bool System.CodeDom.Compiler.ICodeGenerator.IsValidIdentifier(string 'value')
		{
			.override System.CodeDom.Compiler.ICodeGenerator::IsValidIdentifier
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.CodeDom.Compiler.ICodeGenerator.ValidateIdentifier(string 'value')
		{
			.override System.CodeDom.Compiler.ICodeGenerator::ValidateIdentifier
			ret
		}
		.method private final virtual hidebysig newslot 
			instance string System.CodeDom.Compiler.ICodeGenerator.CreateEscapedIdentifier(string 'value')
		{
			.override System.CodeDom.Compiler.ICodeGenerator::CreateEscapedIdentifier
			ret
		}
		.method private final virtual hidebysig newslot 
			instance string System.CodeDom.Compiler.ICodeGenerator.CreateValidIdentifier(string 'value')
		{
			.override System.CodeDom.Compiler.ICodeGenerator::CreateValidIdentifier
			ret
		}
		.method private final virtual hidebysig newslot 
			instance string System.CodeDom.Compiler.ICodeGenerator.GetTypeOutput(class System.CodeDom.CodeTypeReference 'type')
		{
			.override System.CodeDom.Compiler.ICodeGenerator::GetTypeOutput
			ret
		}
		.method family hidebysig 
			instance void GenerateExpression(class System.CodeDom.CodeExpression e)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void GenerateSnippetCompileUnit(class System.CodeDom.CodeSnippetCompileUnit e)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void GenerateCompileUnit(class System.CodeDom.CodeCompileUnit e)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void GenerateNamespace(class System.CodeDom.CodeNamespace e)
		{
			ret
		}
		.method family hidebysig 
			instance void GenerateNamespaceImports(class System.CodeDom.CodeNamespace e)
		{
			ret
		}
		.method family hidebysig 
			instance void GenerateStatement(class System.CodeDom.CodeStatement e)
		{
			ret
		}
		.method family hidebysig 
			instance void GenerateStatements(class System.CodeDom.CodeStatementCollection stms)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void OutputAttributeDeclarations(class System.CodeDom.CodeAttributeDeclarationCollection attributes)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void OutputAttributeArgument(class System.CodeDom.CodeAttributeArgument arg)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void OutputDirection(valuetype System.CodeDom.FieldDirection dir)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void OutputFieldScopeModifier(valuetype System.CodeDom.MemberAttributes attributes)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void OutputMemberAccessModifier(valuetype System.CodeDom.MemberAttributes attributes)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void OutputMemberScopeModifier(valuetype System.CodeDom.MemberAttributes attributes)
		{
			ret
		}
		.method family virtual hidebysig newslot abstract 
			instance void OutputType(class System.CodeDom.CodeTypeReference typeRef)
		{
		}
		.method family virtual hidebysig newslot 
			instance void OutputTypeAttributes(valuetype [mscorlib]System.Reflection.TypeAttributes attributes, bool isStruct, bool isEnum)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void OutputTypeNamePair(class System.CodeDom.CodeTypeReference typeRef, string name)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void OutputIdentifier(string ident)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void OutputExpressionList(class System.CodeDom.CodeExpressionCollection expressions)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void OutputExpressionList(class System.CodeDom.CodeExpressionCollection expressions, bool newlineBetweenItems)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void OutputOperator(valuetype System.CodeDom.CodeBinaryOperatorType op)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void OutputParameters(class System.CodeDom.CodeParameterDeclarationExpressionCollection parameters)
		{
			ret
		}
		.method family virtual hidebysig newslot abstract 
			instance void GenerateArrayCreateExpression(class System.CodeDom.CodeArrayCreateExpression e)
		{
		}
		.method family virtual hidebysig newslot abstract 
			instance void GenerateBaseReferenceExpression(class System.CodeDom.CodeBaseReferenceExpression e)
		{
		}
		.method family virtual hidebysig newslot 
			instance void GenerateBinaryOperatorExpression(class System.CodeDom.CodeBinaryOperatorExpression e)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void ContinueOnNewLine(string st)
		{
			ret
		}
		.method family virtual hidebysig newslot abstract 
			instance void GenerateCastExpression(class System.CodeDom.CodeCastExpression e)
		{
		}
		.method family virtual hidebysig newslot abstract 
			instance void GenerateDelegateCreateExpression(class System.CodeDom.CodeDelegateCreateExpression e)
		{
		}
		.method family virtual hidebysig newslot abstract 
			instance void GenerateFieldReferenceExpression(class System.CodeDom.CodeFieldReferenceExpression e)
		{
		}
		.method family virtual hidebysig newslot abstract 
			instance void GenerateArgumentReferenceExpression(class System.CodeDom.CodeArgumentReferenceExpression e)
		{
		}
		.method family virtual hidebysig newslot abstract 
			instance void GenerateVariableReferenceExpression(class System.CodeDom.CodeVariableReferenceExpression e)
		{
		}
		.method family virtual hidebysig newslot abstract 
			instance void GenerateIndexerExpression(class System.CodeDom.CodeIndexerExpression e)
		{
		}
		.method family virtual hidebysig newslot abstract 
			instance void GenerateArrayIndexerExpression(class System.CodeDom.CodeArrayIndexerExpression e)
		{
		}
		.method family virtual hidebysig newslot abstract 
			instance void GenerateSnippetExpression(class System.CodeDom.CodeSnippetExpression e)
		{
		}
		.method family virtual hidebysig newslot abstract 
			instance void GenerateMethodInvokeExpression(class System.CodeDom.CodeMethodInvokeExpression e)
		{
		}
		.method family virtual hidebysig newslot abstract 
			instance void GenerateMethodReferenceExpression(class System.CodeDom.CodeMethodReferenceExpression e)
		{
		}
		.method family virtual hidebysig newslot abstract 
			instance void GenerateEventReferenceExpression(class System.CodeDom.CodeEventReferenceExpression e)
		{
		}
		.method family virtual hidebysig newslot abstract 
			instance void GenerateDelegateInvokeExpression(class System.CodeDom.CodeDelegateInvokeExpression e)
		{
		}
		.method family virtual hidebysig newslot abstract 
			instance void GenerateObjectCreateExpression(class System.CodeDom.CodeObjectCreateExpression e)
		{
		}
		.method family virtual hidebysig newslot 
			instance void GenerateParameterDeclarationExpression(class System.CodeDom.CodeParameterDeclarationExpression e)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void GenerateDirectionExpression(class System.CodeDom.CodeDirectionExpression e)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void GeneratePrimitiveExpression(class System.CodeDom.CodePrimitiveExpression e)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void GenerateSingleFloatValue(float32 s)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void GenerateDoubleValue(float64 d)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void GenerateDecimalValue(valuetype [mscorlib]System.Decimal d)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void GenerateDefaultValueExpression(class System.CodeDom.CodeDefaultValueExpression e)
		{
			ret
		}
		.method family virtual hidebysig newslot abstract 
			instance void GeneratePropertyReferenceExpression(class System.CodeDom.CodePropertyReferenceExpression e)
		{
		}
		.method family virtual hidebysig newslot abstract 
			instance void GeneratePropertySetValueReferenceExpression(class System.CodeDom.CodePropertySetValueReferenceExpression e)
		{
		}
		.method family virtual hidebysig newslot abstract 
			instance void GenerateThisReferenceExpression(class System.CodeDom.CodeThisReferenceExpression e)
		{
		}
		.method family virtual hidebysig newslot 
			instance void GenerateTypeReferenceExpression(class System.CodeDom.CodeTypeReferenceExpression e)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void GenerateTypeOfExpression(class System.CodeDom.CodeTypeOfExpression e)
		{
			ret
		}
		.method family virtual hidebysig newslot abstract 
			instance void GenerateExpressionStatement(class System.CodeDom.CodeExpressionStatement e)
		{
		}
		.method family virtual hidebysig newslot abstract 
			instance void GenerateIterationStatement(class System.CodeDom.CodeIterationStatement e)
		{
		}
		.method family virtual hidebysig newslot abstract 
			instance void GenerateThrowExceptionStatement(class System.CodeDom.CodeThrowExceptionStatement e)
		{
		}
		.method family virtual hidebysig newslot 
			instance void GenerateCommentStatement(class System.CodeDom.CodeCommentStatement e)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void GenerateCommentStatements(class System.CodeDom.CodeCommentStatementCollection e)
		{
			ret
		}
		.method family virtual hidebysig newslot abstract 
			instance void GenerateComment(class System.CodeDom.CodeComment e)
		{
		}
		.method family virtual hidebysig newslot abstract 
			instance void GenerateMethodReturnStatement(class System.CodeDom.CodeMethodReturnStatement e)
		{
		}
		.method family virtual hidebysig newslot abstract 
			instance void GenerateConditionStatement(class System.CodeDom.CodeConditionStatement e)
		{
		}
		.method family virtual hidebysig newslot abstract 
			instance void GenerateTryCatchFinallyStatement(class System.CodeDom.CodeTryCatchFinallyStatement e)
		{
		}
		.method family virtual hidebysig newslot abstract 
			instance void GenerateAssignStatement(class System.CodeDom.CodeAssignStatement e)
		{
		}
		.method family virtual hidebysig newslot abstract 
			instance void GenerateAttachEventStatement(class System.CodeDom.CodeAttachEventStatement e)
		{
		}
		.method family virtual hidebysig newslot abstract 
			instance void GenerateRemoveEventStatement(class System.CodeDom.CodeRemoveEventStatement e)
		{
		}
		.method family virtual hidebysig newslot abstract 
			instance void GenerateGotoStatement(class System.CodeDom.CodeGotoStatement e)
		{
		}
		.method family virtual hidebysig newslot abstract 
			instance void GenerateLabeledStatement(class System.CodeDom.CodeLabeledStatement e)
		{
		}
		.method family virtual hidebysig newslot 
			instance void GenerateSnippetStatement(class System.CodeDom.CodeSnippetStatement e)
		{
			ret
		}
		.method family virtual hidebysig newslot abstract 
			instance void GenerateVariableDeclarationStatement(class System.CodeDom.CodeVariableDeclarationStatement e)
		{
		}
		.method family virtual hidebysig newslot abstract 
			instance void GenerateLinePragmaStart(class System.CodeDom.CodeLinePragma e)
		{
		}
		.method family virtual hidebysig newslot abstract 
			instance void GenerateLinePragmaEnd(class System.CodeDom.CodeLinePragma e)
		{
		}
		.method family virtual hidebysig newslot abstract 
			instance void GenerateEvent(class System.CodeDom.CodeMemberEvent e, class System.CodeDom.CodeTypeDeclaration c)
		{
		}
		.method family virtual hidebysig newslot abstract 
			instance void GenerateField(class System.CodeDom.CodeMemberField e)
		{
		}
		.method family virtual hidebysig newslot abstract 
			instance void GenerateSnippetMember(class System.CodeDom.CodeSnippetTypeMember e)
		{
		}
		.method family virtual hidebysig newslot abstract 
			instance void GenerateEntryPointMethod(class System.CodeDom.CodeEntryPointMethod e, class System.CodeDom.CodeTypeDeclaration c)
		{
		}
		.method family virtual hidebysig newslot abstract 
			instance void GenerateMethod(class System.CodeDom.CodeMemberMethod e, class System.CodeDom.CodeTypeDeclaration c)
		{
		}
		.method family virtual hidebysig newslot abstract 
			instance void GenerateProperty(class System.CodeDom.CodeMemberProperty e, class System.CodeDom.CodeTypeDeclaration c)
		{
		}
		.method family virtual hidebysig newslot abstract 
			instance void GenerateConstructor(class System.CodeDom.CodeConstructor e, class System.CodeDom.CodeTypeDeclaration c)
		{
		}
		.method family virtual hidebysig newslot abstract 
			instance void GenerateTypeConstructor(class System.CodeDom.CodeTypeConstructor e)
		{
		}
		.method family virtual hidebysig newslot abstract 
			instance void GenerateTypeStart(class System.CodeDom.CodeTypeDeclaration e)
		{
		}
		.method family virtual hidebysig newslot abstract 
			instance void GenerateTypeEnd(class System.CodeDom.CodeTypeDeclaration e)
		{
		}
		.method family virtual hidebysig newslot 
			instance void GenerateCompileUnitStart(class System.CodeDom.CodeCompileUnit e)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void GenerateCompileUnitEnd(class System.CodeDom.CodeCompileUnit e)
		{
			ret
		}
		.method family virtual hidebysig newslot abstract 
			instance void GenerateNamespaceStart(class System.CodeDom.CodeNamespace e)
		{
		}
		.method family virtual hidebysig newslot abstract 
			instance void GenerateNamespaceEnd(class System.CodeDom.CodeNamespace e)
		{
		}
		.method family virtual hidebysig newslot abstract 
			instance void GenerateNamespaceImport(class System.CodeDom.CodeNamespaceImport e)
		{
		}
		.method family virtual hidebysig newslot abstract 
			instance void GenerateAttributeDeclarationsStart(class System.CodeDom.CodeAttributeDeclarationCollection attributes)
		{
		}
		.method family virtual hidebysig newslot abstract 
			instance void GenerateAttributeDeclarationsEnd(class System.CodeDom.CodeAttributeDeclarationCollection attributes)
		{
		}
		.method family virtual hidebysig newslot abstract 
			instance bool Supports(valuetype System.CodeDom.Compiler.GeneratorSupport support)
		{
		}
		.method family virtual hidebysig newslot abstract 
			instance bool IsValidIdentifier(string 'value')
		{
		}
		.method family virtual hidebysig newslot 
			instance void ValidateIdentifier(string 'value')
		{
			ret
		}
		.method family virtual hidebysig newslot abstract 
			instance string CreateEscapedIdentifier(string 'value')
		{
		}
		.method family virtual hidebysig newslot abstract 
			instance string CreateValidIdentifier(string 'value')
		{
		}
		.method family virtual hidebysig newslot abstract 
			instance string GetTypeOutput(class System.CodeDom.CodeTypeReference 'value')
		{
		}
		.method family virtual hidebysig newslot abstract 
			instance string QuoteSnippetString(string 'value')
		{
		}
		.method public static hidebysig 
			bool IsValidLanguageIndependentIdentifier(string 'value')
		{
			ret
		}
		.method public static hidebysig 
			void ValidateIdentifiers(class System.CodeDom.CodeObject e)
		{
			ret
		}
		.method family hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance class System.CodeDom.CodeTypeDeclaration CurrentClass()
		{
			.get instance class System.CodeDom.CodeTypeDeclaration System.CodeDom.Compiler.CodeGenerator::get_CurrentClass()
		}
		.property instance class System.CodeDom.CodeTypeMember CurrentMember()
		{
			.get instance class System.CodeDom.CodeTypeMember System.CodeDom.Compiler.CodeGenerator::get_CurrentMember()
		}
		.property instance string CurrentMemberName()
		{
			.get instance string System.CodeDom.Compiler.CodeGenerator::get_CurrentMemberName()
		}
		.property instance string CurrentTypeName()
		{
			.get instance string System.CodeDom.Compiler.CodeGenerator::get_CurrentTypeName()
		}
		.property instance int32 Indent()
		{
			.get instance int32 System.CodeDom.Compiler.CodeGenerator::get_Indent()
			.set instance void System.CodeDom.Compiler.CodeGenerator::set_Indent(int32)
		}
		.property instance bool IsCurrentClass()
		{
			.get instance bool System.CodeDom.Compiler.CodeGenerator::get_IsCurrentClass()
		}
		.property instance bool IsCurrentDelegate()
		{
			.get instance bool System.CodeDom.Compiler.CodeGenerator::get_IsCurrentDelegate()
		}
		.property instance bool IsCurrentEnum()
		{
			.get instance bool System.CodeDom.Compiler.CodeGenerator::get_IsCurrentEnum()
		}
		.property instance bool IsCurrentInterface()
		{
			.get instance bool System.CodeDom.Compiler.CodeGenerator::get_IsCurrentInterface()
		}
		.property instance bool IsCurrentStruct()
		{
			.get instance bool System.CodeDom.Compiler.CodeGenerator::get_IsCurrentStruct()
		}
		.property instance string NullToken()
		{
			.get instance string System.CodeDom.Compiler.CodeGenerator::get_NullToken()
		}
		.property instance class System.CodeDom.Compiler.CodeGeneratorOptions Options()
		{
			.get instance class System.CodeDom.Compiler.CodeGeneratorOptions System.CodeDom.Compiler.CodeGenerator::get_Options()
		}
		.property instance class [mscorlib]'System.IO.TextWriter' Output()
		{
			.get instance class [mscorlib]'System.IO.TextWriter' System.CodeDom.Compiler.CodeGenerator::get_Output()
		}
	}
	.class public CodeGeneratorOptions
		extends [mscorlib]System.Object
	{
		.permissionset linkcheck = (00)
		.custom instance void [mscorlib]System.Reflection.DefaultMemberAttribute::.ctor(string) = (01 00 04 49 74 65 6D 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance object get_Item(string index)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Item(string index, object 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_IndentString()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_IndentString(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_BracingStyle()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BracingStyle(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_ElseOnClosing()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ElseOnClosing(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_BlankLinesBetweenMembers()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BlankLinesBetweenMembers(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_VerbatimOrder()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_VerbatimOrder(bool 'value')
		{
			ret
		}
		.property instance bool BlankLinesBetweenMembers()
		{
			.get instance bool System.CodeDom.Compiler.CodeGeneratorOptions::get_BlankLinesBetweenMembers()
			.set instance void System.CodeDom.Compiler.CodeGeneratorOptions::set_BlankLinesBetweenMembers(bool)
		}
		.property instance string BracingStyle()
		{
			.get instance string System.CodeDom.Compiler.CodeGeneratorOptions::get_BracingStyle()
			.set instance void System.CodeDom.Compiler.CodeGeneratorOptions::set_BracingStyle(string)
		}
		.property instance bool ElseOnClosing()
		{
			.get instance bool System.CodeDom.Compiler.CodeGeneratorOptions::get_ElseOnClosing()
			.set instance void System.CodeDom.Compiler.CodeGeneratorOptions::set_ElseOnClosing(bool)
		}
		.property instance string IndentString()
		{
			.get instance string System.CodeDom.Compiler.CodeGeneratorOptions::get_IndentString()
			.set instance void System.CodeDom.Compiler.CodeGeneratorOptions::set_IndentString(string)
		}
		.property instance object Item(string)
		{
			.get instance object System.CodeDom.Compiler.CodeGeneratorOptions::get_Item(string)
			.set instance void System.CodeDom.Compiler.CodeGeneratorOptions::set_Item(string, object)
		}
		.property instance bool VerbatimOrder()
		{
			.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 00 00 00)
			.get instance bool System.CodeDom.Compiler.CodeGeneratorOptions::get_VerbatimOrder()
			.set instance void System.CodeDom.Compiler.CodeGeneratorOptions::set_VerbatimOrder(bool)
		}
	}
	.class public abstract CodeParser
		extends [mscorlib]System.Object
		implements System.CodeDom.Compiler.ICodeParser
	{
		.permissionset linkcheck = (00)
		.method public virtual hidebysig newslot abstract 
			instance class System.CodeDom.CodeCompileUnit Parse(class [mscorlib]'System.IO.TextReader' codeStream)
		{
		}
		.method family hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public serializable CompilerError
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string fileName, int32 line, int32 column, string errorNumber, string errorText)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_Line()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Line(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_Column()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Column(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_ErrorNumber()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ErrorNumber(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_ErrorText()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ErrorText(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsWarning()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_IsWarning(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_FileName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_FileName(string 'value')
		{
			ret
		}
		.method public virtual hidebysig 
			instance string ToString()
		{
			ret
		}
		.property instance int32 Column()
		{
			.get instance int32 System.CodeDom.Compiler.CompilerError::get_Column()
			.set instance void System.CodeDom.Compiler.CompilerError::set_Column(int32)
		}
		.property instance string ErrorNumber()
		{
			.get instance string System.CodeDom.Compiler.CompilerError::get_ErrorNumber()
			.set instance void System.CodeDom.Compiler.CompilerError::set_ErrorNumber(string)
		}
		.property instance string ErrorText()
		{
			.get instance string System.CodeDom.Compiler.CompilerError::get_ErrorText()
			.set instance void System.CodeDom.Compiler.CompilerError::set_ErrorText(string)
		}
		.property instance string FileName()
		{
			.get instance string System.CodeDom.Compiler.CompilerError::get_FileName()
			.set instance void System.CodeDom.Compiler.CompilerError::set_FileName(string)
		}
		.property instance bool IsWarning()
		{
			.get instance bool System.CodeDom.Compiler.CompilerError::get_IsWarning()
			.set instance void System.CodeDom.Compiler.CompilerError::set_IsWarning(bool)
		}
		.property instance int32 Line()
		{
			.get instance int32 System.CodeDom.Compiler.CompilerError::get_Line()
			.set instance void System.CodeDom.Compiler.CompilerError::set_Line(int32)
		}
	}
	.class public serializable CompilerErrorCollection
		extends [mscorlib]System.Collections.CollectionBase
	{
		.custom instance void [mscorlib]System.Reflection.DefaultMemberAttribute::.ctor(string) = (01 00 04 49 74 65 6D 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class System.CodeDom.Compiler.CompilerErrorCollection 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class System.CodeDom.Compiler.CompilerError[] 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.Compiler.CompilerError get_Item(int32 index)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Item(int32 index, class System.CodeDom.Compiler.CompilerError 'value')
		{
			ret
		}
		.method public hidebysig 
			instance int32 Add(class System.CodeDom.Compiler.CompilerError 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void AddRange(class System.CodeDom.Compiler.CompilerError[] 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void AddRange(class System.CodeDom.Compiler.CompilerErrorCollection 'value')
		{
			ret
		}
		.method public hidebysig 
			instance bool Contains(class System.CodeDom.Compiler.CompilerError 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void CopyTo(class System.CodeDom.Compiler.CompilerError[] 'array', int32 index)
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_HasErrors()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_HasWarnings()
		{
			ret
		}
		.method public hidebysig 
			instance int32 IndexOf(class System.CodeDom.Compiler.CompilerError 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void Insert(int32 index, class System.CodeDom.Compiler.CompilerError 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void Remove(class System.CodeDom.Compiler.CompilerError 'value')
		{
			ret
		}
		.property instance bool HasErrors()
		{
			.get instance bool System.CodeDom.Compiler.CompilerErrorCollection::get_HasErrors()
		}
		.property instance bool HasWarnings()
		{
			.get instance bool System.CodeDom.Compiler.CompilerErrorCollection::get_HasWarnings()
		}
		.property instance class System.CodeDom.Compiler.CompilerError Item(int32)
		{
			.get instance class System.CodeDom.Compiler.CompilerError System.CodeDom.Compiler.CompilerErrorCollection::get_Item(int32)
			.set instance void System.CodeDom.Compiler.CompilerErrorCollection::set_Item(int32, class System.CodeDom.Compiler.CompilerError)
		}
	}
	.class public sealed CompilerInfo
		extends [mscorlib]System.Object
	{
		.permissionset linkcheck = (00)
		.method public hidebysig 
			instance string[] GetLanguages()
		{
			ret
		}
		.method public hidebysig 
			instance string[] GetExtensions()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]System.Type get_CodeDomProviderType()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsCodeDomProviderTypeValid()
		{
			ret
		}
		.method public hidebysig 
			instance class System.CodeDom.Compiler.CodeDomProvider CreateProvider()
		{
			ret
		}
		.method public hidebysig 
			instance class System.CodeDom.Compiler.CompilerParameters CreateDefaultCompilerParameters()
		{
			ret
		}
		.method public virtual hidebysig 
			instance int32 GetHashCode()
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool Equals(object o)
		{
			ret
		}
		.property instance class [mscorlib]System.Type CodeDomProviderType()
		{
			.get instance class [mscorlib]System.Type System.CodeDom.Compiler.CompilerInfo::get_CodeDomProviderType()
		}
		.property instance bool IsCodeDomProviderTypeValid()
		{
			.get instance bool System.CodeDom.Compiler.CompilerInfo::get_IsCodeDomProviderTypeValid()
		}
	}
	.class public serializable CompilerParameters
		extends [mscorlib]System.Object
	{
		.permissionset linkcheck = (00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string[] assemblyNames)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string[] assemblyNames, string outputName)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string[] assemblyNames, string outputName, bool includeDebugInformation)
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_GenerateExecutable()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_GenerateExecutable(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_GenerateInMemory()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_GenerateInMemory(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Collections.Specialized.StringCollection get_ReferencedAssemblies()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_MainClass()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_MainClass(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_OutputAssembly()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_OutputAssembly(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.Compiler.TempFileCollection get_TempFiles()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_TempFiles(class System.CodeDom.Compiler.TempFileCollection 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IncludeDebugInformation()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_IncludeDebugInformation(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_TreatWarningsAsErrors()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_TreatWarningsAsErrors(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_WarningLevel()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_WarningLevel(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_CompilerOptions()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_CompilerOptions(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Win32Resource()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Win32Resource(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Collections.Specialized.StringCollection get_EmbeddedResources()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Collections.Specialized.StringCollection get_LinkedResources()
		{
			ret
		}
		.method public hidebysig specialname 
			instance native int get_UserToken()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_UserToken(native int 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]System.Security.Policy.Evidence get_Evidence()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Evidence(class [mscorlib]System.Security.Policy.Evidence 'value')
		{
			ret
		}
		.property instance string CompilerOptions()
		{
			.get instance string System.CodeDom.Compiler.CompilerParameters::get_CompilerOptions()
			.set instance void System.CodeDom.Compiler.CompilerParameters::set_CompilerOptions(string)
		}
		.property instance class System.Collections.Specialized.StringCollection EmbeddedResources()
		{
			.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 00 00 00)
			.get instance class System.Collections.Specialized.StringCollection System.CodeDom.Compiler.CompilerParameters::get_EmbeddedResources()
		}
		.property instance class [mscorlib]System.Security.Policy.Evidence Evidence()
		{
			.get instance class [mscorlib]System.Security.Policy.Evidence System.CodeDom.Compiler.CompilerParameters::get_Evidence()
			.set instance void System.CodeDom.Compiler.CompilerParameters::set_Evidence(class [mscorlib]System.Security.Policy.Evidence)
		}
		.property instance bool GenerateExecutable()
		{
			.get instance bool System.CodeDom.Compiler.CompilerParameters::get_GenerateExecutable()
			.set instance void System.CodeDom.Compiler.CompilerParameters::set_GenerateExecutable(bool)
		}
		.property instance bool GenerateInMemory()
		{
			.get instance bool System.CodeDom.Compiler.CompilerParameters::get_GenerateInMemory()
			.set instance void System.CodeDom.Compiler.CompilerParameters::set_GenerateInMemory(bool)
		}
		.property instance bool IncludeDebugInformation()
		{
			.get instance bool System.CodeDom.Compiler.CompilerParameters::get_IncludeDebugInformation()
			.set instance void System.CodeDom.Compiler.CompilerParameters::set_IncludeDebugInformation(bool)
		}
		.property instance class System.Collections.Specialized.StringCollection LinkedResources()
		{
			.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 00 00 00)
			.get instance class System.Collections.Specialized.StringCollection System.CodeDom.Compiler.CompilerParameters::get_LinkedResources()
		}
		.property instance string MainClass()
		{
			.get instance string System.CodeDom.Compiler.CompilerParameters::get_MainClass()
			.set instance void System.CodeDom.Compiler.CompilerParameters::set_MainClass(string)
		}
		.property instance string OutputAssembly()
		{
			.get instance string System.CodeDom.Compiler.CompilerParameters::get_OutputAssembly()
			.set instance void System.CodeDom.Compiler.CompilerParameters::set_OutputAssembly(string)
		}
		.property instance class System.Collections.Specialized.StringCollection ReferencedAssemblies()
		{
			.get instance class System.Collections.Specialized.StringCollection System.CodeDom.Compiler.CompilerParameters::get_ReferencedAssemblies()
		}
		.property instance class System.CodeDom.Compiler.TempFileCollection TempFiles()
		{
			.get instance class System.CodeDom.Compiler.TempFileCollection System.CodeDom.Compiler.CompilerParameters::get_TempFiles()
			.set instance void System.CodeDom.Compiler.CompilerParameters::set_TempFiles(class System.CodeDom.Compiler.TempFileCollection)
		}
		.property instance bool TreatWarningsAsErrors()
		{
			.get instance bool System.CodeDom.Compiler.CompilerParameters::get_TreatWarningsAsErrors()
			.set instance void System.CodeDom.Compiler.CompilerParameters::set_TreatWarningsAsErrors(bool)
		}
		.property instance native int UserToken()
		{
			.get instance native int System.CodeDom.Compiler.CompilerParameters::get_UserToken()
			.set instance void System.CodeDom.Compiler.CompilerParameters::set_UserToken(native int)
		}
		.property instance int32 WarningLevel()
		{
			.get instance int32 System.CodeDom.Compiler.CompilerParameters::get_WarningLevel()
			.set instance void System.CodeDom.Compiler.CompilerParameters::set_WarningLevel(int32)
		}
		.property instance string Win32Resource()
		{
			.get instance string System.CodeDom.Compiler.CompilerParameters::get_Win32Resource()
			.set instance void System.CodeDom.Compiler.CompilerParameters::set_Win32Resource(string)
		}
	}
	.class public serializable CompilerResults
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance void .ctor(class System.CodeDom.Compiler.TempFileCollection tempFiles)
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.Compiler.TempFileCollection get_TempFiles()
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public hidebysig specialname 
			instance void set_TempFiles(class System.CodeDom.Compiler.TempFileCollection 'value')
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]System.Security.Policy.Evidence get_Evidence()
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public hidebysig specialname 
			instance void set_Evidence(class [mscorlib]System.Security.Policy.Evidence 'value')
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]System.Reflection.Assembly get_CompiledAssembly()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_CompiledAssembly(class [mscorlib]System.Reflection.Assembly 'value')
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public hidebysig specialname 
			instance class System.CodeDom.Compiler.CompilerErrorCollection get_Errors()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Collections.Specialized.StringCollection get_Output()
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public hidebysig specialname 
			instance string get_PathToAssembly()
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public hidebysig specialname 
			instance void set_PathToAssembly(string 'value')
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_NativeCompilerReturnValue()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_NativeCompilerReturnValue(int32 'value')
		{
			.permissionset linkcheck = (00)
			ret
		}
		.property instance class [mscorlib]System.Reflection.Assembly CompiledAssembly()
		{
			.get instance class [mscorlib]System.Reflection.Assembly System.CodeDom.Compiler.CompilerResults::get_CompiledAssembly()
			.set instance void System.CodeDom.Compiler.CompilerResults::set_CompiledAssembly(class [mscorlib]System.Reflection.Assembly)
		}
		.property instance class System.CodeDom.Compiler.CompilerErrorCollection Errors()
		{
			.get instance class System.CodeDom.Compiler.CompilerErrorCollection System.CodeDom.Compiler.CompilerResults::get_Errors()
		}
		.property instance class [mscorlib]System.Security.Policy.Evidence Evidence()
		{
			.get instance class [mscorlib]System.Security.Policy.Evidence System.CodeDom.Compiler.CompilerResults::get_Evidence()
			.set instance void System.CodeDom.Compiler.CompilerResults::set_Evidence(class [mscorlib]System.Security.Policy.Evidence)
		}
		.property instance int32 NativeCompilerReturnValue()
		{
			.get instance int32 System.CodeDom.Compiler.CompilerResults::get_NativeCompilerReturnValue()
			.set instance void System.CodeDom.Compiler.CompilerResults::set_NativeCompilerReturnValue(int32)
		}
		.property instance class System.Collections.Specialized.StringCollection Output()
		{
			.get instance class System.Collections.Specialized.StringCollection System.CodeDom.Compiler.CompilerResults::get_Output()
		}
		.property instance string PathToAssembly()
		{
			.get instance string System.CodeDom.Compiler.CompilerResults::get_PathToAssembly()
			.set instance void System.CodeDom.Compiler.CompilerResults::set_PathToAssembly(string)
		}
		.property instance class System.CodeDom.Compiler.TempFileCollection TempFiles()
		{
			.get instance class System.CodeDom.Compiler.TempFileCollection System.CodeDom.Compiler.CompilerResults::get_TempFiles()
			.set instance void System.CodeDom.Compiler.CompilerResults::set_TempFiles(class System.CodeDom.Compiler.TempFileCollection)
		}
	}
	.class public sealed Executor
		extends [mscorlib]System.Object
	{
		.permissionset linkcheck = (00)
		.method public static hidebysig 
			void ExecWait(string cmd, class System.CodeDom.Compiler.TempFileCollection tempFiles)
		{
			ret
		}
		.method public static hidebysig 
			int32 ExecWaitWithCapture(string cmd, class System.CodeDom.Compiler.TempFileCollection tempFiles, string& outputName, string& errorName)
		{
			ret
		}
		.method public static hidebysig 
			int32 ExecWaitWithCapture(string cmd, string currentDir, class System.CodeDom.Compiler.TempFileCollection tempFiles, string& outputName, string& errorName)
		{
			ret
		}
		.method public static hidebysig 
			int32 ExecWaitWithCapture(native int userToken, string cmd, class System.CodeDom.Compiler.TempFileCollection tempFiles, string& outputName, string& errorName)
		{
			ret
		}
		.method public static hidebysig 
			int32 ExecWaitWithCapture(native int userToken, string cmd, string currentDir, class System.CodeDom.Compiler.TempFileCollection tempFiles, string& outputName, string& errorName)
		{
			ret
		}
	}
	.class public sealed GeneratedCodeAttribute
		extends [mscorlib]System.Attribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = (01 00 FF 7F 00 00 02 00 54 02 09 49 6E 68 65 72 69 74 65 64 00 54 02 0D 41 6C 6C 6F 77 4D 75 6C 74 69 70 6C 65 00)
		.method public hidebysig specialname 
			instance void .ctor(string tool, string version)
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Tool()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Version()
		{
			ret
		}
		.property instance string Tool()
		{
			.get instance string System.CodeDom.Compiler.GeneratedCodeAttribute::get_Tool()
		}
		.property instance string Version()
		{
			.get instance string System.CodeDom.Compiler.GeneratedCodeAttribute::get_Version()
		}
	}
	.class public sealed serializable GeneratorSupport
		extends [mscorlib]System.Enum
	{
		.custom instance void [mscorlib]System.FlagsAttribute::.ctor() = (01 00 00 00)
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype System.CodeDom.Compiler.GeneratorSupport ArraysOfArrays = int32(0x00000001)
		.field static public literal valuetype System.CodeDom.Compiler.GeneratorSupport AssemblyAttributes = int32(0x00001000)
		.field static public literal valuetype System.CodeDom.Compiler.GeneratorSupport ChainedConstructorArguments = int32(0x00008000)
		.field static public literal valuetype System.CodeDom.Compiler.GeneratorSupport ComplexExpressions = int32(0x00080000)
		.field static public literal valuetype System.CodeDom.Compiler.GeneratorSupport DeclareDelegates = int32(0x00000200)
		.field static public literal valuetype System.CodeDom.Compiler.GeneratorSupport DeclareEnums = int32(0x00000100)
		.field static public literal valuetype System.CodeDom.Compiler.GeneratorSupport DeclareEvents = int32(0x00000800)
		.field static public literal valuetype System.CodeDom.Compiler.GeneratorSupport DeclareIndexerProperties = int32(0x02000000)
		.field static public literal valuetype System.CodeDom.Compiler.GeneratorSupport DeclareInterfaces = int32(0x00000400)
		.field static public literal valuetype System.CodeDom.Compiler.GeneratorSupport DeclareValueTypes = int32(0x00000080)
		.field static public literal valuetype System.CodeDom.Compiler.GeneratorSupport EntryPointMethod = int32(0x00000002)
		.field static public literal valuetype System.CodeDom.Compiler.GeneratorSupport GenericTypeDeclaration = int32(0x01000000)
		.field static public literal valuetype System.CodeDom.Compiler.GeneratorSupport GenericTypeReference = int32(0x00800000)
		.field static public literal valuetype System.CodeDom.Compiler.GeneratorSupport GotoStatements = int32(0x00000004)
		.field static public literal valuetype System.CodeDom.Compiler.GeneratorSupport MultidimensionalArrays = int32(0x00000008)
		.field static public literal valuetype System.CodeDom.Compiler.GeneratorSupport MultipleInterfaceMembers = int32(0x00020000)
		.field static public literal valuetype System.CodeDom.Compiler.GeneratorSupport NestedTypes = int32(0x00010000)
		.field static public literal valuetype System.CodeDom.Compiler.GeneratorSupport ParameterAttributes = int32(0x00002000)
		.field static public literal valuetype System.CodeDom.Compiler.GeneratorSupport PartialTypes = int32(0x00400000)
		.field static public literal valuetype System.CodeDom.Compiler.GeneratorSupport PublicStaticMembers = int32(0x00040000)
		.field static public literal valuetype System.CodeDom.Compiler.GeneratorSupport ReferenceParameters = int32(0x00004000)
		.field static public literal valuetype System.CodeDom.Compiler.GeneratorSupport Resources = int32(0x00200000)
		.field static public literal valuetype System.CodeDom.Compiler.GeneratorSupport ReturnTypeAttributes = int32(0x00000040)
		.field static public literal valuetype System.CodeDom.Compiler.GeneratorSupport StaticConstructors = int32(0x00000010)
		.field static public literal valuetype System.CodeDom.Compiler.GeneratorSupport TryCatchStatements = int32(0x00000020)
		.field static public literal valuetype System.CodeDom.Compiler.GeneratorSupport Win32Resources = int32(0x00100000)
	}
	.class public interface abstract ICodeCompiler
	{
		.method public virtual hidebysig newslot abstract 
			instance class System.CodeDom.Compiler.CompilerResults CompileAssemblyFromDom(class System.CodeDom.Compiler.CompilerParameters options, class System.CodeDom.CodeCompileUnit compilationUnit)
		{
			.permissionset linkcheck = (00)
		}
		.method public virtual hidebysig newslot abstract 
			instance class System.CodeDom.Compiler.CompilerResults CompileAssemblyFromFile(class System.CodeDom.Compiler.CompilerParameters options, string fileName)
		{
			.permissionset linkcheck = (00)
		}
		.method public virtual hidebysig newslot abstract 
			instance class System.CodeDom.Compiler.CompilerResults CompileAssemblyFromSource(class System.CodeDom.Compiler.CompilerParameters options, string source)
		{
			.permissionset linkcheck = (00)
		}
		.method public virtual hidebysig newslot abstract 
			instance class System.CodeDom.Compiler.CompilerResults CompileAssemblyFromDomBatch(class System.CodeDom.Compiler.CompilerParameters options, class System.CodeDom.CodeCompileUnit[] compilationUnits)
		{
			.permissionset linkcheck = (00)
		}
		.method public virtual hidebysig newslot abstract 
			instance class System.CodeDom.Compiler.CompilerResults CompileAssemblyFromFileBatch(class System.CodeDom.Compiler.CompilerParameters options, string[] fileNames)
		{
			.permissionset linkcheck = (00)
		}
		.method public virtual hidebysig newslot abstract 
			instance class System.CodeDom.Compiler.CompilerResults CompileAssemblyFromSourceBatch(class System.CodeDom.Compiler.CompilerParameters options, string[] sources)
		{
			.permissionset linkcheck = (00)
		}
	}
	.class public interface abstract ICodeGenerator
	{
		.method public virtual hidebysig newslot abstract 
			instance bool IsValidIdentifier(string 'value')
		{
			.permissionset linkcheck = (00)
		}
		.method public virtual hidebysig newslot abstract 
			instance void ValidateIdentifier(string 'value')
		{
			.permissionset linkcheck = (00)
		}
		.method public virtual hidebysig newslot abstract 
			instance string CreateEscapedIdentifier(string 'value')
		{
			.permissionset linkcheck = (00)
		}
		.method public virtual hidebysig newslot abstract 
			instance string CreateValidIdentifier(string 'value')
		{
			.permissionset linkcheck = (00)
		}
		.method public virtual hidebysig newslot abstract 
			instance string GetTypeOutput(class System.CodeDom.CodeTypeReference 'type')
		{
			.permissionset linkcheck = (00)
		}
		.method public virtual hidebysig newslot abstract 
			instance bool Supports(valuetype System.CodeDom.Compiler.GeneratorSupport supports)
		{
			.permissionset linkcheck = (00)
		}
		.method public virtual hidebysig newslot abstract 
			instance void GenerateCodeFromExpression(class System.CodeDom.CodeExpression e, class [mscorlib]'System.IO.TextWriter' w, class System.CodeDom.Compiler.CodeGeneratorOptions o)
		{
			.permissionset linkcheck = (00)
		}
		.method public virtual hidebysig newslot abstract 
			instance void GenerateCodeFromStatement(class System.CodeDom.CodeStatement e, class [mscorlib]'System.IO.TextWriter' w, class System.CodeDom.Compiler.CodeGeneratorOptions o)
		{
			.permissionset linkcheck = (00)
		}
		.method public virtual hidebysig newslot abstract 
			instance void GenerateCodeFromNamespace(class System.CodeDom.CodeNamespace e, class [mscorlib]'System.IO.TextWriter' w, class System.CodeDom.Compiler.CodeGeneratorOptions o)
		{
			.permissionset linkcheck = (00)
		}
		.method public virtual hidebysig newslot abstract 
			instance void GenerateCodeFromCompileUnit(class System.CodeDom.CodeCompileUnit e, class [mscorlib]'System.IO.TextWriter' w, class System.CodeDom.Compiler.CodeGeneratorOptions o)
		{
			.permissionset linkcheck = (00)
		}
		.method public virtual hidebysig newslot abstract 
			instance void GenerateCodeFromType(class System.CodeDom.CodeTypeDeclaration e, class [mscorlib]'System.IO.TextWriter' w, class System.CodeDom.Compiler.CodeGeneratorOptions o)
		{
			.permissionset linkcheck = (00)
		}
	}
	.class public interface abstract ICodeParser
	{
		.method public virtual hidebysig newslot abstract 
			instance class System.CodeDom.CodeCompileUnit Parse(class [mscorlib]'System.IO.TextReader' codeStream)
		{
		}
	}
	.class public IndentedTextWriter
		extends [mscorlib]'System.IO.TextWriter'
	{
		.permissionset linkcheck = (00)
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]'System.IO.TextWriter' writer)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]'System.IO.TextWriter' writer, string tabString)
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class [mscorlib]System.Text.Encoding get_Encoding()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance string get_NewLine()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_NewLine(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_Indent()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Indent(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]'System.IO.TextWriter' get_InnerWriter()
		{
			ret
		}
		.method public virtual hidebysig 
			instance void Close()
		{
			ret
		}
		.method public virtual hidebysig 
			instance void Flush()
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void OutputTabs()
		{
			ret
		}
		.method public virtual hidebysig 
			instance void Write(string s)
		{
			ret
		}
		.method public virtual hidebysig 
			instance void Write(bool 'value')
		{
			ret
		}
		.method public virtual hidebysig 
			instance void Write(char 'value')
		{
			ret
		}
		.method public virtual hidebysig 
			instance void Write(char[] buffer)
		{
			ret
		}
		.method public virtual hidebysig 
			instance void Write(char[] buffer, int32 index, int32 count)
		{
			ret
		}
		.method public virtual hidebysig 
			instance void Write(float64 'value')
		{
			ret
		}
		.method public virtual hidebysig 
			instance void Write(float32 'value')
		{
			ret
		}
		.method public virtual hidebysig 
			instance void Write(int32 'value')
		{
			ret
		}
		.method public virtual hidebysig 
			instance void Write(int64 'value')
		{
			ret
		}
		.method public virtual hidebysig 
			instance void Write(object 'value')
		{
			ret
		}
		.method public virtual hidebysig 
			instance void Write(string format, object arg0)
		{
			ret
		}
		.method public virtual hidebysig 
			instance void Write(string format, object arg0, object arg1)
		{
			ret
		}
		.method public virtual hidebysig 
			instance void Write(string format, object[] arg)
		{
			.param [2]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = (01 00 00 00)
			ret
		}
		.method public hidebysig 
			instance void WriteLineNoTabs(string s)
		{
			ret
		}
		.method public virtual hidebysig 
			instance void WriteLine(string s)
		{
			ret
		}
		.method public virtual hidebysig 
			instance void WriteLine()
		{
			ret
		}
		.method public virtual hidebysig 
			instance void WriteLine(bool 'value')
		{
			ret
		}
		.method public virtual hidebysig 
			instance void WriteLine(char 'value')
		{
			ret
		}
		.method public virtual hidebysig 
			instance void WriteLine(char[] buffer)
		{
			ret
		}
		.method public virtual hidebysig 
			instance void WriteLine(char[] buffer, int32 index, int32 count)
		{
			ret
		}
		.method public virtual hidebysig 
			instance void WriteLine(float64 'value')
		{
			ret
		}
		.method public virtual hidebysig 
			instance void WriteLine(float32 'value')
		{
			ret
		}
		.method public virtual hidebysig 
			instance void WriteLine(int32 'value')
		{
			ret
		}
		.method public virtual hidebysig 
			instance void WriteLine(int64 'value')
		{
			ret
		}
		.method public virtual hidebysig 
			instance void WriteLine(object 'value')
		{
			ret
		}
		.method public virtual hidebysig 
			instance void WriteLine(string format, object arg0)
		{
			ret
		}
		.method public virtual hidebysig 
			instance void WriteLine(string format, object arg0, object arg1)
		{
			ret
		}
		.method public virtual hidebysig 
			instance void WriteLine(string format, object[] arg)
		{
			.param [2]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = (01 00 00 00)
			ret
		}
		.method public virtual hidebysig 
			instance void WriteLine(uint32 'value')
		{
			.custom instance void [mscorlib]System.CLSCompliantAttribute::.ctor(bool) = (01 00 00 00 00)
			ret
		}
		.field static public literal string DefaultTabString = "    "
		.property instance class [mscorlib]System.Text.Encoding Encoding()
		{
			.get instance class [mscorlib]System.Text.Encoding System.CodeDom.Compiler.IndentedTextWriter::get_Encoding()
		}
		.property instance int32 Indent()
		{
			.get instance int32 System.CodeDom.Compiler.IndentedTextWriter::get_Indent()
			.set instance void System.CodeDom.Compiler.IndentedTextWriter::set_Indent(int32)
		}
		.property instance class [mscorlib]'System.IO.TextWriter' InnerWriter()
		{
			.get instance class [mscorlib]'System.IO.TextWriter' System.CodeDom.Compiler.IndentedTextWriter::get_InnerWriter()
		}
		.property instance string NewLine()
		{
			.get instance string System.CodeDom.Compiler.IndentedTextWriter::get_NewLine()
			.set instance void System.CodeDom.Compiler.IndentedTextWriter::set_NewLine(string)
		}
	}
	.class public sealed serializable LanguageOptions
		extends [mscorlib]System.Enum
	{
		.custom instance void [mscorlib]System.FlagsAttribute::.ctor() = (01 00 00 00)
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype System.CodeDom.Compiler.LanguageOptions CaseInsensitive = int32(0x00000001)
		.field static public literal valuetype System.CodeDom.Compiler.LanguageOptions None = int32(0x00000000)
	}
	.class public serializable TempFileCollection
		extends [mscorlib]System.Object
		implements [mscorlib]System.Collections.ICollection, [mscorlib]System.Collections.IEnumerable, [mscorlib]System.IDisposable
	{
		.permissionset linkcheck = (00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string tempDir)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string tempDir, bool keepFiles)
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.IDisposable.Dispose()
		{
			.override [mscorlib]System.IDisposable::Dispose
			ret
		}
		.method family virtual hidebysig newslot 
			instance void Dispose(bool disposing)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void Finalize()
		{
			ret
		}
		.method public hidebysig 
			instance string AddExtension(string fileExtension)
		{
			ret
		}
		.method public hidebysig 
			instance string AddExtension(string fileExtension, bool keepFile)
		{
			ret
		}
		.method public hidebysig 
			instance void AddFile(string fileName, bool keepFile)
		{
			ret
		}
		.method public hidebysig 
			instance class [mscorlib]System.Collections.IEnumerator GetEnumerator()
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance class [mscorlib]System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			.override [mscorlib]System.Collections.IEnumerable::GetEnumerator
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Collections.ICollection.CopyTo(class [mscorlib]System.Array 'array', int32 start)
		{
			.override [mscorlib]System.Collections.ICollection::CopyTo
			ret
		}
		.method public hidebysig 
			instance void CopyTo(string[] fileNames, int32 start)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_Count()
		{
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance int32 System.Collections.ICollection.get_Count()
		{
			.override [mscorlib]System.Collections.ICollection::get_Count
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance object System.Collections.ICollection.get_SyncRoot()
		{
			.override [mscorlib]System.Collections.ICollection::get_SyncRoot
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance bool System.Collections.ICollection.get_IsSynchronized()
		{
			.override [mscorlib]System.Collections.ICollection::get_IsSynchronized
			ret
		}
		.method public hidebysig specialname 
			instance string get_TempDir()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_BasePath()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_KeepFiles()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_KeepFiles(bool 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void Delete()
		{
			ret
		}
		.property instance string BasePath()
		{
			.get instance string System.CodeDom.Compiler.TempFileCollection::get_BasePath()
		}
		.property instance int32 Count()
		{
			.get instance int32 System.CodeDom.Compiler.TempFileCollection::get_Count()
		}
		.property instance bool KeepFiles()
		{
			.get instance bool System.CodeDom.Compiler.TempFileCollection::get_KeepFiles()
			.set instance void System.CodeDom.Compiler.TempFileCollection::set_KeepFiles(bool)
		}
		.property instance int32 System.Collections.ICollection.Count()
		{
			.get instance int32 System.CodeDom.Compiler.TempFileCollection::System.Collections.ICollection.get_Count()
		}
		.property instance bool System.Collections.ICollection.IsSynchronized()
		{
			.get instance bool System.CodeDom.Compiler.TempFileCollection::System.Collections.ICollection.get_IsSynchronized()
		}
		.property instance object System.Collections.ICollection.SyncRoot()
		{
			.get instance object System.CodeDom.Compiler.TempFileCollection::System.Collections.ICollection.get_SyncRoot()
		}
		.property instance string TempDir()
		{
			.get instance string System.CodeDom.Compiler.TempFileCollection::get_TempDir()
		}
	}
}
.namespace System.Collections.Generic
{
	.class public sealed 'LinkedListNode`1'<T>
		extends [mscorlib]System.Object
	{
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 00 00 00)
		.method public hidebysig specialname 
			instance void .ctor(!0 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class 'System.Collections.Generic.LinkedList`1'<!0> get_List()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class 'System.Collections.Generic.LinkedListNode`1'<!0> get_Next()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class 'System.Collections.Generic.LinkedListNode`1'<!0> get_Previous()
		{
			ret
		}
		.method public hidebysig specialname 
			instance !0 get_Value()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Value(!0 'value')
		{
			ret
		}
		.property instance class 'System.Collections.Generic.LinkedList`1'<!0> List()
		{
			.get instance class 'System.Collections.Generic.LinkedList`1'<!0> 'System.Collections.Generic.LinkedListNode`1'::get_List()
		}
		.property instance class 'System.Collections.Generic.LinkedListNode`1'<!0> Next()
		{
			.get instance class 'System.Collections.Generic.LinkedListNode`1'<!0> 'System.Collections.Generic.LinkedListNode`1'::get_Next()
		}
		.property instance class 'System.Collections.Generic.LinkedListNode`1'<!0> Previous()
		{
			.get instance class 'System.Collections.Generic.LinkedListNode`1'<!0> 'System.Collections.Generic.LinkedListNode`1'::get_Previous()
		}
		.property instance !0 Value()
		{
			.get instance !0 'System.Collections.Generic.LinkedListNode`1'::get_Value()
			.set instance void 'System.Collections.Generic.LinkedListNode`1'::set_Value(!0)
		}
	}
	.class public serializable 'LinkedList`1'<T>
		extends [mscorlib]System.Object
		implements class [mscorlib]'System.Collections.Generic.ICollection`1'<!0>, class [mscorlib]'System.Collections.Generic.IEnumerable`1'<!0>, [mscorlib]System.Collections.ICollection, [mscorlib]System.Collections.IEnumerable, [mscorlib]System.Runtime.Serialization.ISerializable, [mscorlib]System.Runtime.Serialization.IDeserializationCallback
	{
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 00 00 00)
		.class nested public sequential sealed serializable Enumerator<T>
			extends [mscorlib]System.ValueType
			implements class [mscorlib]'System.Collections.Generic.IEnumerator`1'<!0>, [mscorlib]System.IDisposable, [mscorlib]System.Collections.IEnumerator, [mscorlib]System.Runtime.Serialization.ISerializable, [mscorlib]System.Runtime.Serialization.IDeserializationCallback
		{
			.method public final virtual hidebysig newslot specialname 
				instance !0 get_Current()
			{
				ret
			}
			.method private final virtual hidebysig newslot specialname 
				instance object System.Collections.IEnumerator.get_Current()
			{
				.override [mscorlib]System.Collections.IEnumerator::get_Current
				ret
			}
			.method public final virtual hidebysig newslot 
				instance bool MoveNext()
			{
				ret
			}
			.method private final virtual hidebysig newslot 
				instance void System.Collections.IEnumerator.Reset()
			{
				.override [mscorlib]System.Collections.IEnumerator::Reset
				ret
			}
			.method public final virtual hidebysig newslot 
				instance void Dispose()
			{
				ret
			}
			.method private final virtual hidebysig newslot 
				instance void System.Runtime.Serialization.ISerializable.GetObjectData(class [mscorlib]System.Runtime.Serialization.SerializationInfo info, valuetype [mscorlib]System.Runtime.Serialization.StreamingContext context)
			{
				.override [mscorlib]System.Runtime.Serialization.ISerializable::GetObjectData
				ret
			}
			.method private final virtual hidebysig newslot 
				instance void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(object sender)
			{
				.override [mscorlib]System.Runtime.Serialization.IDeserializationCallback::OnDeserialization
				ret
			}

			//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
			.field private int32 __Asmmeta_Private_Field
			.property instance !0 Current()
			{
				.get instance !0 'System.Collections.Generic.LinkedList`1'/Enumerator::get_Current()
			}
			.property instance object System.Collections.IEnumerator.Current()
			{
				.get instance object 'System.Collections.Generic.LinkedList`1'/Enumerator::System.Collections.IEnumerator.get_Current()
			}
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]'System.Collections.Generic.IEnumerable`1'<!0> collection)
		{
			ret
		}
		.method family hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Runtime.Serialization.SerializationInfo info, valuetype [mscorlib]System.Runtime.Serialization.StreamingContext context)
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance int32 get_Count()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class 'System.Collections.Generic.LinkedListNode`1'<!0> get_First()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class 'System.Collections.Generic.LinkedListNode`1'<!0> get_Last()
		{
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance bool 'System.Collections.Generic.ICollection<T>.get_IsReadOnly'()
		{
			.override method instance bool class [mscorlib]'System.Collections.Generic.ICollection`1'<!0>::get_IsReadOnly()
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void 'System.Collections.Generic.ICollection<T>.Add'(!0 'value')
		{
			.override method instance void class [mscorlib]'System.Collections.Generic.ICollection`1'<!0>::Add(!0)
			ret
		}
		.method public hidebysig 
			instance class 'System.Collections.Generic.LinkedListNode`1'<!0> AddAfter(class 'System.Collections.Generic.LinkedListNode`1'<!0> node, !0 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void AddAfter(class 'System.Collections.Generic.LinkedListNode`1'<!0> node, class 'System.Collections.Generic.LinkedListNode`1'<!0> newNode)
		{
			ret
		}
		.method public hidebysig 
			instance class 'System.Collections.Generic.LinkedListNode`1'<!0> AddBefore(class 'System.Collections.Generic.LinkedListNode`1'<!0> node, !0 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void AddBefore(class 'System.Collections.Generic.LinkedListNode`1'<!0> node, class 'System.Collections.Generic.LinkedListNode`1'<!0> newNode)
		{
			ret
		}
		.method public hidebysig 
			instance class 'System.Collections.Generic.LinkedListNode`1'<!0> AddFirst(!0 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void AddFirst(class 'System.Collections.Generic.LinkedListNode`1'<!0> node)
		{
			ret
		}
		.method public hidebysig 
			instance class 'System.Collections.Generic.LinkedListNode`1'<!0> AddLast(!0 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void AddLast(class 'System.Collections.Generic.LinkedListNode`1'<!0> node)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void Clear()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance bool Contains(!0 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void CopyTo(!0[] 'array', int32 index)
		{
			ret
		}
		.method public hidebysig 
			instance class 'System.Collections.Generic.LinkedListNode`1'<!0> Find(!0 'value')
		{
			ret
		}
		.method public hidebysig 
			instance class 'System.Collections.Generic.LinkedListNode`1'<!0> FindLast(!0 'value')
		{
			ret
		}
		.method public hidebysig 
			instance valuetype 'System.Collections.Generic.LinkedList`1'/Enumerator<!0> GetEnumerator()
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance class [mscorlib]'System.Collections.Generic.IEnumerator`1'<!0> 'System.Collections.Generic.IEnumerable<T>.GetEnumerator'()
		{
			.override method instance class [mscorlib]'System.Collections.Generic.IEnumerator`1'<!0> class [mscorlib]'System.Collections.Generic.IEnumerable`1'<!0>::GetEnumerator()
			ret
		}
		.method public final virtual hidebysig newslot 
			instance bool Remove(!0 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void Remove(class 'System.Collections.Generic.LinkedListNode`1'<!0> node)
		{
			ret
		}
		.method public hidebysig 
			instance void RemoveFirst()
		{
			ret
		}
		.method public hidebysig 
			instance void RemoveLast()
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void GetObjectData(class [mscorlib]System.Runtime.Serialization.SerializationInfo info, valuetype [mscorlib]System.Runtime.Serialization.StreamingContext context)
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public virtual hidebysig newslot 
			instance void OnDeserialization(object sender)
		{
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance bool System.Collections.ICollection.get_IsSynchronized()
		{
			.override [mscorlib]System.Collections.ICollection::get_IsSynchronized
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance object System.Collections.ICollection.get_SyncRoot()
		{
			.override [mscorlib]System.Collections.ICollection::get_SyncRoot
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Collections.ICollection.CopyTo(class [mscorlib]System.Array 'array', int32 index)
		{
			.override [mscorlib]System.Collections.ICollection::CopyTo
			ret
		}
		.method private final virtual hidebysig newslot 
			instance class [mscorlib]System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			.override [mscorlib]System.Collections.IEnumerable::GetEnumerator
			ret
		}
		.property instance int32 Count()
		{
			.get instance int32 'System.Collections.Generic.LinkedList`1'::get_Count()
		}
		.property instance class 'System.Collections.Generic.LinkedListNode`1'<!0> First()
		{
			.get instance class 'System.Collections.Generic.LinkedListNode`1'<!0> 'System.Collections.Generic.LinkedList`1'::get_First()
		}
		.property instance class 'System.Collections.Generic.LinkedListNode`1'<!0> Last()
		{
			.get instance class 'System.Collections.Generic.LinkedListNode`1'<!0> 'System.Collections.Generic.LinkedList`1'::get_Last()
		}
		.property instance bool 'System.Collections.Generic.ICollection<T>.IsReadOnly'()
		{
			.get instance bool 'System.Collections.Generic.LinkedList`1'::'System.Collections.Generic.ICollection<T>.get_IsReadOnly'()
		}
		.property instance bool System.Collections.ICollection.IsSynchronized()
		{
			.get instance bool 'System.Collections.Generic.LinkedList`1'::System.Collections.ICollection.get_IsSynchronized()
		}
		.property instance object System.Collections.ICollection.SyncRoot()
		{
			.get instance object 'System.Collections.Generic.LinkedList`1'::System.Collections.ICollection.get_SyncRoot()
		}
	}
	.class public serializable 'Queue`1'<T>
		extends [mscorlib]System.Object
		implements class [mscorlib]'System.Collections.Generic.IEnumerable`1'<!0>, [mscorlib]System.Collections.ICollection, [mscorlib]System.Collections.IEnumerable
	{
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 00 00 00)
		.class nested public sequential sealed serializable Enumerator<T>
			extends [mscorlib]System.ValueType
			implements class [mscorlib]'System.Collections.Generic.IEnumerator`1'<!0>, [mscorlib]System.IDisposable, [mscorlib]System.Collections.IEnumerator
		{
			.method public final virtual hidebysig newslot 
				instance void Dispose()
			{
				ret
			}
			.method public final virtual hidebysig newslot 
				instance bool MoveNext()
			{
				ret
			}
			.method public final virtual hidebysig newslot specialname 
				instance !0 get_Current()
			{
				ret
			}
			.method private final virtual hidebysig newslot specialname 
				instance object System.Collections.IEnumerator.get_Current()
			{
				.override [mscorlib]System.Collections.IEnumerator::get_Current
				ret
			}
			.method private final virtual hidebysig newslot 
				instance void System.Collections.IEnumerator.Reset()
			{
				.override [mscorlib]System.Collections.IEnumerator::Reset
				ret
			}

			//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
			.field private int32 __Asmmeta_Private_Field
			.property instance !0 Current()
			{
				.get instance !0 'System.Collections.Generic.Queue`1'/Enumerator::get_Current()
			}
			.property instance object System.Collections.IEnumerator.Current()
			{
				.get instance object 'System.Collections.Generic.Queue`1'/Enumerator::System.Collections.IEnumerator.get_Current()
			}
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(int32 capacity)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]'System.Collections.Generic.IEnumerable`1'<!0> collection)
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance int32 get_Count()
		{
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance bool System.Collections.ICollection.get_IsSynchronized()
		{
			.override [mscorlib]System.Collections.ICollection::get_IsSynchronized
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance object System.Collections.ICollection.get_SyncRoot()
		{
			.override [mscorlib]System.Collections.ICollection::get_SyncRoot
			ret
		}
		.method public hidebysig 
			instance void Clear()
		{
			ret
		}
		.method public hidebysig 
			instance void CopyTo(!0[] 'array', int32 arrayIndex)
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Collections.ICollection.CopyTo(class [mscorlib]System.Array 'array', int32 index)
		{
			.override [mscorlib]System.Collections.ICollection::CopyTo
			ret
		}
		.method public hidebysig 
			instance void Enqueue(!0 item)
		{
			ret
		}
		.method public hidebysig 
			instance valuetype 'System.Collections.Generic.Queue`1'/Enumerator<!0> GetEnumerator()
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance class [mscorlib]'System.Collections.Generic.IEnumerator`1'<!0> 'System.Collections.Generic.IEnumerable<T>.GetEnumerator'()
		{
			.override method instance class [mscorlib]'System.Collections.Generic.IEnumerator`1'<!0> class [mscorlib]'System.Collections.Generic.IEnumerable`1'<!0>::GetEnumerator()
			ret
		}
		.method private final virtual hidebysig newslot 
			instance class [mscorlib]System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			.override [mscorlib]System.Collections.IEnumerable::GetEnumerator
			ret
		}
		.method public hidebysig 
			instance !0 Dequeue()
		{
			ret
		}
		.method public hidebysig 
			instance !0 Peek()
		{
			ret
		}
		.method public hidebysig 
			instance bool Contains(!0 item)
		{
			ret
		}
		.method public hidebysig 
			instance !0[] ToArray()
		{
			ret
		}
		.method public hidebysig 
			instance void TrimExcess()
		{
			ret
		}
		.property instance int32 Count()
		{
			.get instance int32 'System.Collections.Generic.Queue`1'::get_Count()
		}
		.property instance bool System.Collections.ICollection.IsSynchronized()
		{
			.get instance bool 'System.Collections.Generic.Queue`1'::System.Collections.ICollection.get_IsSynchronized()
		}
		.property instance object System.Collections.ICollection.SyncRoot()
		{
			.get instance object 'System.Collections.Generic.Queue`1'::System.Collections.ICollection.get_SyncRoot()
		}
	}
	.class public serializable 'SortedDictionary`2'<TKey, TValue>
		extends [mscorlib]System.Object
		implements class [mscorlib]'System.Collections.Generic.IDictionary`2'<!0,!1>, class [mscorlib]'System.Collections.Generic.ICollection`1'<valuetype [mscorlib]'System.Collections.Generic.KeyValuePair`2'<!0,!1>>, class [mscorlib]'System.Collections.Generic.IEnumerable`1'<valuetype [mscorlib]'System.Collections.Generic.KeyValuePair`2'<!0,!1>>, [mscorlib]System.Collections.IDictionary, [mscorlib]System.Collections.ICollection, [mscorlib]System.Collections.IEnumerable
	{
		.custom instance void [mscorlib]System.Reflection.DefaultMemberAttribute::.ctor(string) = (01 00 04 49 74 65 6D 00 00)
		.class nested public sequential sealed Enumerator<TKey, TValue>
			extends [mscorlib]System.ValueType
			implements class [mscorlib]'System.Collections.Generic.IEnumerator`1'<valuetype [mscorlib]'System.Collections.Generic.KeyValuePair`2'<!0,!1>>, [mscorlib]System.IDisposable, [mscorlib]System.Collections.IDictionaryEnumerator, [mscorlib]System.Collections.IEnumerator
		{
			.method public final virtual hidebysig newslot 
				instance bool MoveNext()
			{
				ret
			}
			.method public final virtual hidebysig newslot 
				instance void Dispose()
			{
				ret
			}
			.method public final virtual hidebysig newslot specialname 
				instance valuetype [mscorlib]'System.Collections.Generic.KeyValuePair`2'<!0,!1> get_Current()
			{
				ret
			}
			.method private final virtual hidebysig newslot 
				instance void System.Collections.IEnumerator.Reset()
			{
				.override [mscorlib]System.Collections.IEnumerator::Reset
				ret
			}
			.method private final virtual hidebysig newslot specialname 
				instance object System.Collections.IEnumerator.get_Current()
			{
				.override [mscorlib]System.Collections.IEnumerator::get_Current
				ret
			}
			.method private final virtual hidebysig newslot specialname 
				instance object System.Collections.IDictionaryEnumerator.get_Key()
			{
				.override [mscorlib]System.Collections.IDictionaryEnumerator::get_Key
				ret
			}
			.method private final virtual hidebysig newslot specialname 
				instance object System.Collections.IDictionaryEnumerator.get_Value()
			{
				.override [mscorlib]System.Collections.IDictionaryEnumerator::get_Value
				ret
			}
			.method private final virtual hidebysig newslot specialname 
				instance valuetype [mscorlib]System.Collections.DictionaryEntry System.Collections.IDictionaryEnumerator.get_Entry()
			{
				.override [mscorlib]System.Collections.IDictionaryEnumerator::get_Entry
				ret
			}

			//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
			.field private int32 __Asmmeta_Private_Field
			.property instance valuetype [mscorlib]'System.Collections.Generic.KeyValuePair`2'<!0,!1> Current()
			{
				.get instance valuetype [mscorlib]'System.Collections.Generic.KeyValuePair`2'<!0,!1> 'System.Collections.Generic.SortedDictionary`2'/Enumerator::get_Current()
			}
			.property instance valuetype [mscorlib]System.Collections.DictionaryEntry System.Collections.IDictionaryEnumerator.Entry()
			{
				.get instance valuetype [mscorlib]System.Collections.DictionaryEntry 'System.Collections.Generic.SortedDictionary`2'/Enumerator::System.Collections.IDictionaryEnumerator.get_Entry()
			}
			.property instance object System.Collections.IDictionaryEnumerator.Key()
			{
				.get instance object 'System.Collections.Generic.SortedDictionary`2'/Enumerator::System.Collections.IDictionaryEnumerator.get_Key()
			}
			.property instance object System.Collections.IDictionaryEnumerator.Value()
			{
				.get instance object 'System.Collections.Generic.SortedDictionary`2'/Enumerator::System.Collections.IDictionaryEnumerator.get_Value()
			}
			.property instance object System.Collections.IEnumerator.Current()
			{
				.get instance object 'System.Collections.Generic.SortedDictionary`2'/Enumerator::System.Collections.IEnumerator.get_Current()
			}
		}
		.class nested public sealed serializable KeyCollection<TKey, TValue>
			extends [mscorlib]System.Object
			implements class [mscorlib]'System.Collections.Generic.ICollection`1'<!0>, class [mscorlib]'System.Collections.Generic.IEnumerable`1'<!0>, [mscorlib]System.Collections.ICollection, [mscorlib]System.Collections.IEnumerable
		{
			.class nested public sequential sealed Enumerator<TKey, TValue>
				extends [mscorlib]System.ValueType
				implements class [mscorlib]'System.Collections.Generic.IEnumerator`1'<!0>, [mscorlib]System.IDisposable, [mscorlib]System.Collections.IEnumerator
			{
				.method public final virtual hidebysig newslot 
					instance void Dispose()
				{
					ret
				}
				.method public final virtual hidebysig newslot 
					instance bool MoveNext()
				{
					ret
				}
				.method public final virtual hidebysig newslot specialname 
					instance !0 get_Current()
				{
					ret
				}
				.method private final virtual hidebysig newslot specialname 
					instance object System.Collections.IEnumerator.get_Current()
				{
					.override [mscorlib]System.Collections.IEnumerator::get_Current
					ret
				}
				.method private final virtual hidebysig newslot 
					instance void System.Collections.IEnumerator.Reset()
				{
					.override [mscorlib]System.Collections.IEnumerator::Reset
					ret
				}

				//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
				.field private int32 __Asmmeta_Private_Field
				.property instance !0 Current()
				{
					.get instance !0 'System.Collections.Generic.SortedDictionary`2'/KeyCollection/Enumerator::get_Current()
				}
				.property instance object System.Collections.IEnumerator.Current()
				{
					.get instance object 'System.Collections.Generic.SortedDictionary`2'/KeyCollection/Enumerator::System.Collections.IEnumerator.get_Current()
				}
			}
			.method public hidebysig specialname 
				instance void .ctor(class 'System.Collections.Generic.SortedDictionary`2'<!0,!1> dictionary)
			{
				ret
			}
			.method public hidebysig 
				instance valuetype 'System.Collections.Generic.SortedDictionary`2'/KeyCollection/Enumerator<!0,!1> GetEnumerator()
			{
				ret
			}
			.method private final virtual hidebysig newslot 
				instance class [mscorlib]'System.Collections.Generic.IEnumerator`1'<!0> 'System.Collections.Generic.IEnumerable<TKey>.GetEnumerator'()
			{
				.override method instance class [mscorlib]'System.Collections.Generic.IEnumerator`1'<!0> class [mscorlib]'System.Collections.Generic.IEnumerable`1'<!0>::GetEnumerator()
				ret
			}
			.method private final virtual hidebysig newslot 
				instance class [mscorlib]System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				.override [mscorlib]System.Collections.IEnumerable::GetEnumerator
				ret
			}
			.method public final virtual hidebysig newslot 
				instance void CopyTo(!0[] 'array', int32 index)
			{
				ret
			}
			.method private final virtual hidebysig newslot 
				instance void System.Collections.ICollection.CopyTo(class [mscorlib]System.Array 'array', int32 index)
			{
				.override [mscorlib]System.Collections.ICollection::CopyTo
				ret
			}
			.method public final virtual hidebysig newslot specialname 
				instance int32 get_Count()
			{
				ret
			}
			.method private final virtual hidebysig newslot specialname 
				instance bool 'System.Collections.Generic.ICollection<TKey>.get_IsReadOnly'()
			{
				.override method instance bool class [mscorlib]'System.Collections.Generic.ICollection`1'<!0>::get_IsReadOnly()
				ret
			}
			.method private final virtual hidebysig newslot 
				instance void 'System.Collections.Generic.ICollection<TKey>.Add'(!0 item)
			{
				.override method instance void class [mscorlib]'System.Collections.Generic.ICollection`1'<!0>::Add(!0)
				ret
			}
			.method private final virtual hidebysig newslot 
				instance void 'System.Collections.Generic.ICollection<TKey>.Clear'()
			{
				.override method instance void class [mscorlib]'System.Collections.Generic.ICollection`1'<!0>::Clear()
				ret
			}
			.method private final virtual hidebysig newslot 
				instance bool 'System.Collections.Generic.ICollection<TKey>.Contains'(!0 item)
			{
				.override method instance bool class [mscorlib]'System.Collections.Generic.ICollection`1'<!0>::Contains(!0)
				ret
			}
			.method private final virtual hidebysig newslot 
				instance bool 'System.Collections.Generic.ICollection<TKey>.Remove'(!0 item)
			{
				.override method instance bool class [mscorlib]'System.Collections.Generic.ICollection`1'<!0>::Remove(!0)
				ret
			}
			.method private final virtual hidebysig newslot specialname 
				instance bool System.Collections.ICollection.get_IsSynchronized()
			{
				.override [mscorlib]System.Collections.ICollection::get_IsSynchronized
				ret
			}
			.method private final virtual hidebysig newslot specialname 
				instance object System.Collections.ICollection.get_SyncRoot()
			{
				.override [mscorlib]System.Collections.ICollection::get_SyncRoot
				ret
			}
			.property instance int32 Count()
			{
				.get instance int32 'System.Collections.Generic.SortedDictionary`2'/KeyCollection::get_Count()
			}
			.property instance bool 'System.Collections.Generic.ICollection<TKey>.IsReadOnly'()
			{
				.get instance bool 'System.Collections.Generic.SortedDictionary`2'/KeyCollection::'System.Collections.Generic.ICollection<TKey>.get_IsReadOnly'()
			}
			.property instance bool System.Collections.ICollection.IsSynchronized()
			{
				.get instance bool 'System.Collections.Generic.SortedDictionary`2'/KeyCollection::System.Collections.ICollection.get_IsSynchronized()
			}
			.property instance object System.Collections.ICollection.SyncRoot()
			{
				.get instance object 'System.Collections.Generic.SortedDictionary`2'/KeyCollection::System.Collections.ICollection.get_SyncRoot()
			}
		}
		.class nested public sealed serializable ValueCollection<TKey, TValue>
			extends [mscorlib]System.Object
			implements class [mscorlib]'System.Collections.Generic.ICollection`1'<!1>, class [mscorlib]'System.Collections.Generic.IEnumerable`1'<!1>, [mscorlib]System.Collections.ICollection, [mscorlib]System.Collections.IEnumerable
		{
			.class nested public sequential sealed Enumerator<TKey, TValue>
				extends [mscorlib]System.ValueType
				implements class [mscorlib]'System.Collections.Generic.IEnumerator`1'<!1>, [mscorlib]System.IDisposable, [mscorlib]System.Collections.IEnumerator
			{
				.method public final virtual hidebysig newslot 
					instance void Dispose()
				{
					ret
				}
				.method public final virtual hidebysig newslot 
					instance bool MoveNext()
				{
					ret
				}
				.method public final virtual hidebysig newslot specialname 
					instance !1 get_Current()
				{
					ret
				}
				.method private final virtual hidebysig newslot specialname 
					instance object System.Collections.IEnumerator.get_Current()
				{
					.override [mscorlib]System.Collections.IEnumerator::get_Current
					ret
				}
				.method private final virtual hidebysig newslot 
					instance void System.Collections.IEnumerator.Reset()
				{
					.override [mscorlib]System.Collections.IEnumerator::Reset
					ret
				}

				//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
				.field private int32 __Asmmeta_Private_Field
				.property instance !1 Current()
				{
					.get instance !1 'System.Collections.Generic.SortedDictionary`2'/ValueCollection/Enumerator::get_Current()
				}
				.property instance object System.Collections.IEnumerator.Current()
				{
					.get instance object 'System.Collections.Generic.SortedDictionary`2'/ValueCollection/Enumerator::System.Collections.IEnumerator.get_Current()
				}
			}
			.method public hidebysig specialname 
				instance void .ctor(class 'System.Collections.Generic.SortedDictionary`2'<!0,!1> dictionary)
			{
				ret
			}
			.method public hidebysig 
				instance valuetype 'System.Collections.Generic.SortedDictionary`2'/ValueCollection/Enumerator<!0,!1> GetEnumerator()
			{
				ret
			}
			.method private final virtual hidebysig newslot 
				instance class [mscorlib]'System.Collections.Generic.IEnumerator`1'<!1> 'System.Collections.Generic.IEnumerable<TValue>.GetEnumerator'()
			{
				.override method instance class [mscorlib]'System.Collections.Generic.IEnumerator`1'<!0> class [mscorlib]'System.Collections.Generic.IEnumerable`1'<!1>::GetEnumerator()
				ret
			}
			.method private final virtual hidebysig newslot 
				instance class [mscorlib]System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				.override [mscorlib]System.Collections.IEnumerable::GetEnumerator
				ret
			}
			.method public final virtual hidebysig newslot 
				instance void CopyTo(!1[] 'array', int32 index)
			{
				ret
			}
			.method private final virtual hidebysig newslot 
				instance void System.Collections.ICollection.CopyTo(class [mscorlib]System.Array 'array', int32 index)
			{
				.override [mscorlib]System.Collections.ICollection::CopyTo
				ret
			}
			.method public final virtual hidebysig newslot specialname 
				instance int32 get_Count()
			{
				ret
			}
			.method private final virtual hidebysig newslot specialname 
				instance bool 'System.Collections.Generic.ICollection<TValue>.get_IsReadOnly'()
			{
				.override method instance bool class [mscorlib]'System.Collections.Generic.ICollection`1'<!1>::get_IsReadOnly()
				ret
			}
			.method private final virtual hidebysig newslot 
				instance void 'System.Collections.Generic.ICollection<TValue>.Add'(!1 item)
			{
				.override method instance void class [mscorlib]'System.Collections.Generic.ICollection`1'<!1>::Add(!0)
				ret
			}
			.method private final virtual hidebysig newslot 
				instance void 'System.Collections.Generic.ICollection<TValue>.Clear'()
			{
				.override method instance void class [mscorlib]'System.Collections.Generic.ICollection`1'<!1>::Clear()
				ret
			}
			.method private final virtual hidebysig newslot 
				instance bool 'System.Collections.Generic.ICollection<TValue>.Contains'(!1 item)
			{
				.override method instance bool class [mscorlib]'System.Collections.Generic.ICollection`1'<!1>::Contains(!0)
				ret
			}
			.method private final virtual hidebysig newslot 
				instance bool 'System.Collections.Generic.ICollection<TValue>.Remove'(!1 item)
			{
				.override method instance bool class [mscorlib]'System.Collections.Generic.ICollection`1'<!1>::Remove(!0)
				ret
			}
			.method private final virtual hidebysig newslot specialname 
				instance bool System.Collections.ICollection.get_IsSynchronized()
			{
				.override [mscorlib]System.Collections.ICollection::get_IsSynchronized
				ret
			}
			.method private final virtual hidebysig newslot specialname 
				instance object System.Collections.ICollection.get_SyncRoot()
			{
				.override [mscorlib]System.Collections.ICollection::get_SyncRoot
				ret
			}
			.property instance int32 Count()
			{
				.get instance int32 'System.Collections.Generic.SortedDictionary`2'/ValueCollection::get_Count()
			}
			.property instance bool 'System.Collections.Generic.ICollection<TValue>.IsReadOnly'()
			{
				.get instance bool 'System.Collections.Generic.SortedDictionary`2'/ValueCollection::'System.Collections.Generic.ICollection<TValue>.get_IsReadOnly'()
			}
			.property instance bool System.Collections.ICollection.IsSynchronized()
			{
				.get instance bool 'System.Collections.Generic.SortedDictionary`2'/ValueCollection::System.Collections.ICollection.get_IsSynchronized()
			}
			.property instance object System.Collections.ICollection.SyncRoot()
			{
				.get instance object 'System.Collections.Generic.SortedDictionary`2'/ValueCollection::System.Collections.ICollection.get_SyncRoot()
			}
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]'System.Collections.Generic.IDictionary`2'<!0,!1> dictionary)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]'System.Collections.Generic.IDictionary`2'<!0,!1> dictionary, class [mscorlib]'System.Collections.Generic.IComparer`1'<!0> comparer)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]'System.Collections.Generic.IComparer`1'<!0> comparer)
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void 'System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add'(valuetype [mscorlib]'System.Collections.Generic.KeyValuePair`2'<!0,!1> keyValuePair)
		{
			.override method instance void class [mscorlib]'System.Collections.Generic.ICollection`1'<valuetype [mscorlib]'System.Collections.Generic.KeyValuePair`2'<!0,!1>>::Add(!0)
			ret
		}
		.method private final virtual hidebysig newslot 
			instance bool 'System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains'(valuetype [mscorlib]'System.Collections.Generic.KeyValuePair`2'<!0,!1> keyValuePair)
		{
			.override method instance bool class [mscorlib]'System.Collections.Generic.ICollection`1'<valuetype [mscorlib]'System.Collections.Generic.KeyValuePair`2'<!0,!1>>::Contains(!0)
			ret
		}
		.method private final virtual hidebysig newslot 
			instance bool 'System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove'(valuetype [mscorlib]'System.Collections.Generic.KeyValuePair`2'<!0,!1> keyValuePair)
		{
			.override method instance bool class [mscorlib]'System.Collections.Generic.ICollection`1'<valuetype [mscorlib]'System.Collections.Generic.KeyValuePair`2'<!0,!1>>::Remove(!0)
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance bool 'System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.get_IsReadOnly'()
		{
			.override method instance bool class [mscorlib]'System.Collections.Generic.ICollection`1'<valuetype [mscorlib]'System.Collections.Generic.KeyValuePair`2'<!0,!1>>::get_IsReadOnly()
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance !1 get_Item(!0 key)
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void set_Item(!0 key, !1 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance int32 get_Count()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]'System.Collections.Generic.IComparer`1'<!0> get_Comparer()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class 'System.Collections.Generic.SortedDictionary`2'/KeyCollection<!0,!1> get_Keys()
		{
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance class [mscorlib]'System.Collections.Generic.ICollection`1'<!0> 'System.Collections.Generic.IDictionary<TKey,TValue>.get_Keys'()
		{
			.override method instance class [mscorlib]'System.Collections.Generic.ICollection`1'<!0> class [mscorlib]'System.Collections.Generic.IDictionary`2'<!0,!1>::get_Keys()
			ret
		}
		.method public hidebysig specialname 
			instance class 'System.Collections.Generic.SortedDictionary`2'/ValueCollection<!0,!1> get_Values()
		{
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance class [mscorlib]'System.Collections.Generic.ICollection`1'<!1> 'System.Collections.Generic.IDictionary<TKey,TValue>.get_Values'()
		{
			.override method instance class [mscorlib]'System.Collections.Generic.ICollection`1'<!1> class [mscorlib]'System.Collections.Generic.IDictionary`2'<!0,!1>::get_Values()
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void Add(!0 key, !1 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void Clear()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance bool ContainsKey(!0 key)
		{
			ret
		}
		.method public hidebysig 
			instance bool ContainsValue(!1 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void CopyTo(valuetype [mscorlib]'System.Collections.Generic.KeyValuePair`2'<!0,!1>[] 'array', int32 index)
		{
			ret
		}
		.method public hidebysig 
			instance valuetype 'System.Collections.Generic.SortedDictionary`2'/Enumerator<!0,!1> GetEnumerator()
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance class [mscorlib]'System.Collections.Generic.IEnumerator`1'<valuetype [mscorlib]'System.Collections.Generic.KeyValuePair`2'<!0,!1>> 'System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>>.GetEnumerator'()
		{
			.override method instance class [mscorlib]'System.Collections.Generic.IEnumerator`1'<!0> class [mscorlib]'System.Collections.Generic.IEnumerable`1'<valuetype [mscorlib]'System.Collections.Generic.KeyValuePair`2'<!0,!1>>::GetEnumerator()
			ret
		}
		.method public final virtual hidebysig newslot 
			instance bool Remove(!0 key)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance bool TryGetValue(!0 key, [out] !1& 'value')
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Collections.ICollection.CopyTo(class [mscorlib]System.Array 'array', int32 index)
		{
			.override [mscorlib]System.Collections.ICollection::CopyTo
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance bool System.Collections.IDictionary.get_IsFixedSize()
		{
			.override [mscorlib]System.Collections.IDictionary::get_IsFixedSize
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance bool System.Collections.IDictionary.get_IsReadOnly()
		{
			.override [mscorlib]System.Collections.IDictionary::get_IsReadOnly
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance class [mscorlib]System.Collections.ICollection System.Collections.IDictionary.get_Keys()
		{
			.override [mscorlib]System.Collections.IDictionary::get_Keys
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance class [mscorlib]System.Collections.ICollection System.Collections.IDictionary.get_Values()
		{
			.override [mscorlib]System.Collections.IDictionary::get_Values
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance object System.Collections.IDictionary.get_Item(object key)
		{
			.override [mscorlib]System.Collections.IDictionary::get_Item
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance void System.Collections.IDictionary.set_Item(object key, object 'value')
		{
			.override [mscorlib]System.Collections.IDictionary::set_Item
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Collections.IDictionary.Add(object key, object 'value')
		{
			.override [mscorlib]System.Collections.IDictionary::Add
			ret
		}
		.method private final virtual hidebysig newslot 
			instance bool System.Collections.IDictionary.Contains(object key)
		{
			.override [mscorlib]System.Collections.IDictionary::Contains
			ret
		}
		.method private final virtual hidebysig newslot 
			instance class [mscorlib]System.Collections.IDictionaryEnumerator System.Collections.IDictionary.GetEnumerator()
		{
			.override [mscorlib]System.Collections.IDictionary::GetEnumerator
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Collections.IDictionary.Remove(object key)
		{
			.override [mscorlib]System.Collections.IDictionary::Remove
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance bool System.Collections.ICollection.get_IsSynchronized()
		{
			.override [mscorlib]System.Collections.ICollection::get_IsSynchronized
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance object System.Collections.ICollection.get_SyncRoot()
		{
			.override [mscorlib]System.Collections.ICollection::get_SyncRoot
			ret
		}
		.method private final virtual hidebysig newslot 
			instance class [mscorlib]System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			.override [mscorlib]System.Collections.IEnumerable::GetEnumerator
			ret
		}
		.property instance class [mscorlib]'System.Collections.Generic.IComparer`1'<!0> Comparer()
		{
			.get instance class [mscorlib]'System.Collections.Generic.IComparer`1'<!0> 'System.Collections.Generic.SortedDictionary`2'::get_Comparer()
		}
		.property instance int32 Count()
		{
			.get instance int32 'System.Collections.Generic.SortedDictionary`2'::get_Count()
		}
		.property instance !1 Item(!0)
		{
			.get instance !1 'System.Collections.Generic.SortedDictionary`2'::get_Item(!0)
			.set instance void 'System.Collections.Generic.SortedDictionary`2'::set_Item(!0, !1)
		}
		.property instance class 'System.Collections.Generic.SortedDictionary`2'/KeyCollection<!0,!1> Keys()
		{
			.get instance class 'System.Collections.Generic.SortedDictionary`2'/KeyCollection<!0,!1> 'System.Collections.Generic.SortedDictionary`2'::get_Keys()
		}
		.property instance bool 'System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.IsReadOnly'()
		{
			.get instance bool 'System.Collections.Generic.SortedDictionary`2'::'System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.get_IsReadOnly'()
		}
		.property instance class [mscorlib]'System.Collections.Generic.ICollection`1'<!0> 'System.Collections.Generic.IDictionary<TKey,TValue>.Keys'()
		{
			.get instance class [mscorlib]'System.Collections.Generic.ICollection`1'<!0> 'System.Collections.Generic.SortedDictionary`2'::'System.Collections.Generic.IDictionary<TKey,TValue>.get_Keys'()
		}
		.property instance class [mscorlib]'System.Collections.Generic.ICollection`1'<!1> 'System.Collections.Generic.IDictionary<TKey,TValue>.Values'()
		{
			.get instance class [mscorlib]'System.Collections.Generic.ICollection`1'<!1> 'System.Collections.Generic.SortedDictionary`2'::'System.Collections.Generic.IDictionary<TKey,TValue>.get_Values'()
		}
		.property instance bool System.Collections.ICollection.IsSynchronized()
		{
			.get instance bool 'System.Collections.Generic.SortedDictionary`2'::System.Collections.ICollection.get_IsSynchronized()
		}
		.property instance object System.Collections.ICollection.SyncRoot()
		{
			.get instance object 'System.Collections.Generic.SortedDictionary`2'::System.Collections.ICollection.get_SyncRoot()
		}
		.property instance bool System.Collections.IDictionary.IsFixedSize()
		{
			.get instance bool 'System.Collections.Generic.SortedDictionary`2'::System.Collections.IDictionary.get_IsFixedSize()
		}
		.property instance bool System.Collections.IDictionary.IsReadOnly()
		{
			.get instance bool 'System.Collections.Generic.SortedDictionary`2'::System.Collections.IDictionary.get_IsReadOnly()
		}
		.property instance object System.Collections.IDictionary.Item(object)
		{
			.get instance object 'System.Collections.Generic.SortedDictionary`2'::System.Collections.IDictionary.get_Item(object)
			.set instance void 'System.Collections.Generic.SortedDictionary`2'::System.Collections.IDictionary.set_Item(object, object)
		}
		.property instance class [mscorlib]System.Collections.ICollection System.Collections.IDictionary.Keys()
		{
			.get instance class [mscorlib]System.Collections.ICollection 'System.Collections.Generic.SortedDictionary`2'::System.Collections.IDictionary.get_Keys()
		}
		.property instance class [mscorlib]System.Collections.ICollection System.Collections.IDictionary.Values()
		{
			.get instance class [mscorlib]System.Collections.ICollection 'System.Collections.Generic.SortedDictionary`2'::System.Collections.IDictionary.get_Values()
		}
		.property instance class 'System.Collections.Generic.SortedDictionary`2'/ValueCollection<!0,!1> Values()
		{
			.get instance class 'System.Collections.Generic.SortedDictionary`2'/ValueCollection<!0,!1> 'System.Collections.Generic.SortedDictionary`2'::get_Values()
		}
	}
	.class public serializable 'SortedList`2'<TKey, TValue>
		extends [mscorlib]System.Object
		implements class [mscorlib]'System.Collections.Generic.IDictionary`2'<!0,!1>, class [mscorlib]'System.Collections.Generic.ICollection`1'<valuetype [mscorlib]'System.Collections.Generic.KeyValuePair`2'<!0,!1>>, class [mscorlib]'System.Collections.Generic.IEnumerable`1'<valuetype [mscorlib]'System.Collections.Generic.KeyValuePair`2'<!0,!1>>, [mscorlib]System.Collections.IDictionary, [mscorlib]System.Collections.ICollection, [mscorlib]System.Collections.IEnumerable
	{
		.custom instance void [mscorlib]System.Reflection.DefaultMemberAttribute::.ctor(string) = (01 00 04 49 74 65 6D 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 00 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(int32 capacity)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]'System.Collections.Generic.IComparer`1'<!0> comparer)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(int32 capacity, class [mscorlib]'System.Collections.Generic.IComparer`1'<!0> comparer)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]'System.Collections.Generic.IDictionary`2'<!0,!1> dictionary)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]'System.Collections.Generic.IDictionary`2'<!0,!1> dictionary, class [mscorlib]'System.Collections.Generic.IComparer`1'<!0> comparer)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void Add(!0 key, !1 'value')
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void 'System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add'(valuetype [mscorlib]'System.Collections.Generic.KeyValuePair`2'<!0,!1> keyValuePair)
		{
			.override method instance void class [mscorlib]'System.Collections.Generic.ICollection`1'<valuetype [mscorlib]'System.Collections.Generic.KeyValuePair`2'<!0,!1>>::Add(!0)
			ret
		}
		.method private final virtual hidebysig newslot 
			instance bool 'System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains'(valuetype [mscorlib]'System.Collections.Generic.KeyValuePair`2'<!0,!1> keyValuePair)
		{
			.override method instance bool class [mscorlib]'System.Collections.Generic.ICollection`1'<valuetype [mscorlib]'System.Collections.Generic.KeyValuePair`2'<!0,!1>>::Contains(!0)
			ret
		}
		.method private final virtual hidebysig newslot 
			instance bool 'System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove'(valuetype [mscorlib]'System.Collections.Generic.KeyValuePair`2'<!0,!1> keyValuePair)
		{
			.override method instance bool class [mscorlib]'System.Collections.Generic.ICollection`1'<valuetype [mscorlib]'System.Collections.Generic.KeyValuePair`2'<!0,!1>>::Remove(!0)
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_Capacity()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Capacity(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]'System.Collections.Generic.IComparer`1'<!0> get_Comparer()
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Collections.IDictionary.Add(object key, object 'value')
		{
			.override [mscorlib]System.Collections.IDictionary::Add
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance int32 get_Count()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]'System.Collections.Generic.IList`1'<!0> get_Keys()
		{
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance class [mscorlib]'System.Collections.Generic.ICollection`1'<!0> 'System.Collections.Generic.IDictionary<TKey,TValue>.get_Keys'()
		{
			.override method instance class [mscorlib]'System.Collections.Generic.ICollection`1'<!0> class [mscorlib]'System.Collections.Generic.IDictionary`2'<!0,!1>::get_Keys()
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance class [mscorlib]System.Collections.ICollection System.Collections.IDictionary.get_Keys()
		{
			.override [mscorlib]System.Collections.IDictionary::get_Keys
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]'System.Collections.Generic.IList`1'<!1> get_Values()
		{
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance class [mscorlib]'System.Collections.Generic.ICollection`1'<!1> 'System.Collections.Generic.IDictionary<TKey,TValue>.get_Values'()
		{
			.override method instance class [mscorlib]'System.Collections.Generic.ICollection`1'<!1> class [mscorlib]'System.Collections.Generic.IDictionary`2'<!0,!1>::get_Values()
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance class [mscorlib]System.Collections.ICollection System.Collections.IDictionary.get_Values()
		{
			.override [mscorlib]System.Collections.IDictionary::get_Values
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance bool 'System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.get_IsReadOnly'()
		{
			.override method instance bool class [mscorlib]'System.Collections.Generic.ICollection`1'<valuetype [mscorlib]'System.Collections.Generic.KeyValuePair`2'<!0,!1>>::get_IsReadOnly()
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance bool System.Collections.IDictionary.get_IsReadOnly()
		{
			.override [mscorlib]System.Collections.IDictionary::get_IsReadOnly
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance bool System.Collections.IDictionary.get_IsFixedSize()
		{
			.override [mscorlib]System.Collections.IDictionary::get_IsFixedSize
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance bool System.Collections.ICollection.get_IsSynchronized()
		{
			.override [mscorlib]System.Collections.ICollection::get_IsSynchronized
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance object System.Collections.ICollection.get_SyncRoot()
		{
			.override [mscorlib]System.Collections.ICollection::get_SyncRoot
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void Clear()
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance bool System.Collections.IDictionary.Contains(object key)
		{
			.override [mscorlib]System.Collections.IDictionary::Contains
			ret
		}
		.method public final virtual hidebysig newslot 
			instance bool ContainsKey(!0 key)
		{
			ret
		}
		.method public hidebysig 
			instance bool ContainsValue(!1 'value')
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void 'System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo'(valuetype [mscorlib]'System.Collections.Generic.KeyValuePair`2'<!0,!1>[] 'array', int32 arrayIndex)
		{
			.override method instance void class [mscorlib]'System.Collections.Generic.ICollection`1'<valuetype [mscorlib]'System.Collections.Generic.KeyValuePair`2'<!0,!1>>::CopyTo(!0[], int32)
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Collections.ICollection.CopyTo(class [mscorlib]System.Array 'array', int32 arrayIndex)
		{
			.override [mscorlib]System.Collections.ICollection::CopyTo
			ret
		}
		.method public hidebysig 
			instance class [mscorlib]'System.Collections.Generic.IEnumerator`1'<valuetype [mscorlib]'System.Collections.Generic.KeyValuePair`2'<!0,!1>> GetEnumerator()
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance class [mscorlib]'System.Collections.Generic.IEnumerator`1'<valuetype [mscorlib]'System.Collections.Generic.KeyValuePair`2'<!0,!1>> 'System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>>.GetEnumerator'()
		{
			.override method instance class [mscorlib]'System.Collections.Generic.IEnumerator`1'<!0> class [mscorlib]'System.Collections.Generic.IEnumerable`1'<valuetype [mscorlib]'System.Collections.Generic.KeyValuePair`2'<!0,!1>>::GetEnumerator()
			ret
		}
		.method private final virtual hidebysig newslot 
			instance class [mscorlib]System.Collections.IDictionaryEnumerator System.Collections.IDictionary.GetEnumerator()
		{
			.override [mscorlib]System.Collections.IDictionary::GetEnumerator
			ret
		}
		.method private final virtual hidebysig newslot 
			instance class [mscorlib]System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			.override [mscorlib]System.Collections.IEnumerable::GetEnumerator
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance !1 get_Item(!0 key)
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void set_Item(!0 key, !1 'value')
		{
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance object System.Collections.IDictionary.get_Item(object key)
		{
			.override [mscorlib]System.Collections.IDictionary::get_Item
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance void System.Collections.IDictionary.set_Item(object key, object 'value')
		{
			.override [mscorlib]System.Collections.IDictionary::set_Item
			ret
		}
		.method public hidebysig 
			instance int32 IndexOfKey(!0 key)
		{
			ret
		}
		.method public hidebysig 
			instance int32 IndexOfValue(!1 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance bool TryGetValue(!0 key, [out] !1& 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void RemoveAt(int32 index)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance bool Remove(!0 key)
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Collections.IDictionary.Remove(object key)
		{
			.override [mscorlib]System.Collections.IDictionary::Remove
			ret
		}
		.method public hidebysig 
			instance void TrimExcess()
		{
			ret
		}
		.property instance int32 Capacity()
		{
			.get instance int32 'System.Collections.Generic.SortedList`2'::get_Capacity()
			.set instance void 'System.Collections.Generic.SortedList`2'::set_Capacity(int32)
		}
		.property instance class [mscorlib]'System.Collections.Generic.IComparer`1'<!0> Comparer()
		{
			.get instance class [mscorlib]'System.Collections.Generic.IComparer`1'<!0> 'System.Collections.Generic.SortedList`2'::get_Comparer()
		}
		.property instance int32 Count()
		{
			.get instance int32 'System.Collections.Generic.SortedList`2'::get_Count()
		}
		.property instance !1 Item(!0)
		{
			.get instance !1 'System.Collections.Generic.SortedList`2'::get_Item(!0)
			.set instance void 'System.Collections.Generic.SortedList`2'::set_Item(!0, !1)
		}
		.property instance class [mscorlib]'System.Collections.Generic.IList`1'<!0> Keys()
		{
			.get instance class [mscorlib]'System.Collections.Generic.IList`1'<!0> 'System.Collections.Generic.SortedList`2'::get_Keys()
		}
		.property instance bool 'System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.IsReadOnly'()
		{
			.get instance bool 'System.Collections.Generic.SortedList`2'::'System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.get_IsReadOnly'()
		}
		.property instance class [mscorlib]'System.Collections.Generic.ICollection`1'<!0> 'System.Collections.Generic.IDictionary<TKey,TValue>.Keys'()
		{
			.get instance class [mscorlib]'System.Collections.Generic.ICollection`1'<!0> 'System.Collections.Generic.SortedList`2'::'System.Collections.Generic.IDictionary<TKey,TValue>.get_Keys'()
		}
		.property instance class [mscorlib]'System.Collections.Generic.ICollection`1'<!1> 'System.Collections.Generic.IDictionary<TKey,TValue>.Values'()
		{
			.get instance class [mscorlib]'System.Collections.Generic.ICollection`1'<!1> 'System.Collections.Generic.SortedList`2'::'System.Collections.Generic.IDictionary<TKey,TValue>.get_Values'()
		}
		.property instance bool System.Collections.ICollection.IsSynchronized()
		{
			.get instance bool 'System.Collections.Generic.SortedList`2'::System.Collections.ICollection.get_IsSynchronized()
		}
		.property instance object System.Collections.ICollection.SyncRoot()
		{
			.get instance object 'System.Collections.Generic.SortedList`2'::System.Collections.ICollection.get_SyncRoot()
		}
		.property instance bool System.Collections.IDictionary.IsFixedSize()
		{
			.get instance bool 'System.Collections.Generic.SortedList`2'::System.Collections.IDictionary.get_IsFixedSize()
		}
		.property instance bool System.Collections.IDictionary.IsReadOnly()
		{
			.get instance bool 'System.Collections.Generic.SortedList`2'::System.Collections.IDictionary.get_IsReadOnly()
		}
		.property instance object System.Collections.IDictionary.Item(object)
		{
			.get instance object 'System.Collections.Generic.SortedList`2'::System.Collections.IDictionary.get_Item(object)
			.set instance void 'System.Collections.Generic.SortedList`2'::System.Collections.IDictionary.set_Item(object, object)
		}
		.property instance class [mscorlib]System.Collections.ICollection System.Collections.IDictionary.Keys()
		{
			.get instance class [mscorlib]System.Collections.ICollection 'System.Collections.Generic.SortedList`2'::System.Collections.IDictionary.get_Keys()
		}
		.property instance class [mscorlib]System.Collections.ICollection System.Collections.IDictionary.Values()
		{
			.get instance class [mscorlib]System.Collections.ICollection 'System.Collections.Generic.SortedList`2'::System.Collections.IDictionary.get_Values()
		}
		.property instance class [mscorlib]'System.Collections.Generic.IList`1'<!1> Values()
		{
			.get instance class [mscorlib]'System.Collections.Generic.IList`1'<!1> 'System.Collections.Generic.SortedList`2'::get_Values()
		}
	}
	.class public serializable 'Stack`1'<T>
		extends [mscorlib]System.Object
		implements class [mscorlib]'System.Collections.Generic.IEnumerable`1'<!0>, [mscorlib]System.Collections.ICollection, [mscorlib]System.Collections.IEnumerable
	{
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 00 00 00)
		.class nested public sequential sealed serializable Enumerator<T>
			extends [mscorlib]System.ValueType
			implements class [mscorlib]'System.Collections.Generic.IEnumerator`1'<!0>, [mscorlib]System.IDisposable, [mscorlib]System.Collections.IEnumerator
		{
			.method public final virtual hidebysig newslot 
				instance void Dispose()
			{
				ret
			}
			.method public final virtual hidebysig newslot 
				instance bool MoveNext()
			{
				ret
			}
			.method public final virtual hidebysig newslot specialname 
				instance !0 get_Current()
			{
				ret
			}
			.method private final virtual hidebysig newslot specialname 
				instance object System.Collections.IEnumerator.get_Current()
			{
				.override [mscorlib]System.Collections.IEnumerator::get_Current
				ret
			}
			.method private final virtual hidebysig newslot 
				instance void System.Collections.IEnumerator.Reset()
			{
				.override [mscorlib]System.Collections.IEnumerator::Reset
				ret
			}

			//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
			.field private int32 __Asmmeta_Private_Field
			.property instance !0 Current()
			{
				.get instance !0 'System.Collections.Generic.Stack`1'/Enumerator::get_Current()
			}
			.property instance object System.Collections.IEnumerator.Current()
			{
				.get instance object 'System.Collections.Generic.Stack`1'/Enumerator::System.Collections.IEnumerator.get_Current()
			}
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(int32 capacity)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]'System.Collections.Generic.IEnumerable`1'<!0> collection)
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance int32 get_Count()
		{
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance bool System.Collections.ICollection.get_IsSynchronized()
		{
			.override [mscorlib]System.Collections.ICollection::get_IsSynchronized
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance object System.Collections.ICollection.get_SyncRoot()
		{
			.override [mscorlib]System.Collections.ICollection::get_SyncRoot
			ret
		}
		.method public hidebysig 
			instance void Clear()
		{
			ret
		}
		.method public hidebysig 
			instance bool Contains(!0 item)
		{
			ret
		}
		.method public hidebysig 
			instance void CopyTo(!0[] 'array', int32 arrayIndex)
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Collections.ICollection.CopyTo(class [mscorlib]System.Array 'array', int32 arrayIndex)
		{
			.override [mscorlib]System.Collections.ICollection::CopyTo
			ret
		}
		.method public hidebysig 
			instance valuetype 'System.Collections.Generic.Stack`1'/Enumerator<!0> GetEnumerator()
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance class [mscorlib]'System.Collections.Generic.IEnumerator`1'<!0> 'System.Collections.Generic.IEnumerable<T>.GetEnumerator'()
		{
			.override method instance class [mscorlib]'System.Collections.Generic.IEnumerator`1'<!0> class [mscorlib]'System.Collections.Generic.IEnumerable`1'<!0>::GetEnumerator()
			ret
		}
		.method private final virtual hidebysig newslot 
			instance class [mscorlib]System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			.override [mscorlib]System.Collections.IEnumerable::GetEnumerator
			ret
		}
		.method public hidebysig 
			instance void TrimExcess()
		{
			ret
		}
		.method public hidebysig 
			instance !0 Peek()
		{
			ret
		}
		.method public hidebysig 
			instance !0 Pop()
		{
			ret
		}
		.method public hidebysig 
			instance void Push(!0 item)
		{
			ret
		}
		.method public hidebysig 
			instance !0[] ToArray()
		{
			ret
		}
		.property instance int32 Count()
		{
			.get instance int32 'System.Collections.Generic.Stack`1'::get_Count()
		}
		.property instance bool System.Collections.ICollection.IsSynchronized()
		{
			.get instance bool 'System.Collections.Generic.Stack`1'::System.Collections.ICollection.get_IsSynchronized()
		}
		.property instance object System.Collections.ICollection.SyncRoot()
		{
			.get instance object 'System.Collections.Generic.Stack`1'::System.Collections.ICollection.get_SyncRoot()
		}
	}
}
.namespace System.Collections.Specialized
{
	.class public sequential sealed BitVector32
		extends [mscorlib]System.ValueType
	{
		.custom instance void [mscorlib]System.Reflection.DefaultMemberAttribute::.ctor(string) = (01 00 04 49 74 65 6D 00 00)
		.class nested public sequential sealed Section
			extends [mscorlib]System.ValueType
		{
			.method public hidebysig specialname 
				instance int16 get_Mask()
			{
				ret
			}
			.method public hidebysig specialname 
				instance int16 get_Offset()
			{
				ret
			}
			.method public virtual hidebysig 
				instance bool Equals(object o)
			{
				ret
			}
			.method public hidebysig 
				instance bool Equals(valuetype System.Collections.Specialized.BitVector32/Section obj)
			{
				ret
			}
			.method public static hidebysig specialname 
				bool op_Equality(valuetype System.Collections.Specialized.BitVector32/Section a, valuetype System.Collections.Specialized.BitVector32/Section b)
			{
				ret
			}
			.method public static hidebysig specialname 
				bool op_Inequality(valuetype System.Collections.Specialized.BitVector32/Section a, valuetype System.Collections.Specialized.BitVector32/Section b)
			{
				ret
			}
			.method public virtual hidebysig 
				instance int32 GetHashCode()
			{
				ret
			}
			.method public static hidebysig 
				string ToString(valuetype System.Collections.Specialized.BitVector32/Section 'value')
			{
				ret
			}
			.method public virtual hidebysig 
				instance string ToString()
			{
				ret
			}

			//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
			.field private int32 __Asmmeta_Private_Field
			.property instance int16 Mask()
			{
				.get instance int16 System.Collections.Specialized.BitVector32/Section::get_Mask()
			}
			.property instance int16 Offset()
			{
				.get instance int16 System.Collections.Specialized.BitVector32/Section::get_Offset()
			}
		}
		.method public hidebysig specialname 
			instance void .ctor(int32 data)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(valuetype System.Collections.Specialized.BitVector32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_Item(int32 bit)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Item(int32 bit, bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_Item(valuetype System.Collections.Specialized.BitVector32/Section section)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Item(valuetype System.Collections.Specialized.BitVector32/Section section, int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_Data()
		{
			ret
		}
		.method public static hidebysig 
			int32 CreateMask()
		{
			ret
		}
		.method public static hidebysig 
			int32 CreateMask(int32 previous)
		{
			ret
		}
		.method public static hidebysig 
			valuetype System.Collections.Specialized.BitVector32/Section CreateSection(int16 maxValue)
		{
			ret
		}
		.method public static hidebysig 
			valuetype System.Collections.Specialized.BitVector32/Section CreateSection(int16 maxValue, valuetype System.Collections.Specialized.BitVector32/Section previous)
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool Equals(object o)
		{
			ret
		}
		.method public virtual hidebysig 
			instance int32 GetHashCode()
		{
			ret
		}
		.method public static hidebysig 
			string ToString(valuetype System.Collections.Specialized.BitVector32 'value')
		{
			ret
		}
		.method public virtual hidebysig 
			instance string ToString()
		{
			ret
		}

		//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
		.field private int32 __Asmmeta_Private_Field
		.property instance int32 Data()
		{
			.get instance int32 System.Collections.Specialized.BitVector32::get_Data()
		}
		.property instance bool Item(int32)
		{
			.get instance bool System.Collections.Specialized.BitVector32::get_Item(int32)
			.set instance void System.Collections.Specialized.BitVector32::set_Item(int32, bool)
		}
		.property instance int32 Item(valuetype System.Collections.Specialized.BitVector32/Section)
		{
			.get instance int32 System.Collections.Specialized.BitVector32::get_Item(valuetype System.Collections.Specialized.BitVector32/Section)
			.set instance void System.Collections.Specialized.BitVector32::set_Item(valuetype System.Collections.Specialized.BitVector32/Section, int32)
		}
	}
	.class public CollectionsUtil
		extends [mscorlib]System.Object
	{
		.method public static hidebysig 
			class [mscorlib]System.Collections.Hashtable CreateCaseInsensitiveHashtable()
		{
			ret
		}
		.method public static hidebysig 
			class [mscorlib]System.Collections.Hashtable CreateCaseInsensitiveHashtable(int32 capacity)
		{
			ret
		}
		.method public static hidebysig 
			class [mscorlib]System.Collections.Hashtable CreateCaseInsensitiveHashtable(class [mscorlib]System.Collections.IDictionary d)
		{
			ret
		}
		.method public static hidebysig 
			class [mscorlib]System.Collections.SortedList CreateCaseInsensitiveSortedList()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public serializable HybridDictionary
		extends [mscorlib]System.Object
		implements [mscorlib]System.Collections.IDictionary, [mscorlib]System.Collections.ICollection, [mscorlib]System.Collections.IEnumerable
	{
		.custom instance void [mscorlib]System.Reflection.DefaultMemberAttribute::.ctor(string) = (01 00 04 49 74 65 6D 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(int32 initialSize)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(bool caseInsensitive)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(int32 initialSize, bool caseInsensitive)
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance object get_Item(object key)
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void set_Item(object key, object 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance int32 get_Count()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance class [mscorlib]System.Collections.ICollection get_Keys()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance bool get_IsReadOnly()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance bool get_IsFixedSize()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance bool get_IsSynchronized()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance object get_SyncRoot()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance class [mscorlib]System.Collections.ICollection get_Values()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void Add(object key, object 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void Clear()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance bool Contains(object key)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void CopyTo(class [mscorlib]System.Array 'array', int32 index)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance class [mscorlib]System.Collections.IDictionaryEnumerator GetEnumerator()
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance class [mscorlib]System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			.override [mscorlib]System.Collections.IEnumerable::GetEnumerator
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void Remove(object key)
		{
			ret
		}
		.property instance int32 Count()
		{
			.get instance int32 System.Collections.Specialized.HybridDictionary::get_Count()
		}
		.property instance bool IsFixedSize()
		{
			.get instance bool System.Collections.Specialized.HybridDictionary::get_IsFixedSize()
		}
		.property instance bool IsReadOnly()
		{
			.get instance bool System.Collections.Specialized.HybridDictionary::get_IsReadOnly()
		}
		.property instance bool IsSynchronized()
		{
			.get instance bool System.Collections.Specialized.HybridDictionary::get_IsSynchronized()
		}
		.property instance object Item(object)
		{
			.get instance object System.Collections.Specialized.HybridDictionary::get_Item(object)
			.set instance void System.Collections.Specialized.HybridDictionary::set_Item(object, object)
		}
		.property instance class [mscorlib]System.Collections.ICollection Keys()
		{
			.get instance class [mscorlib]System.Collections.ICollection System.Collections.Specialized.HybridDictionary::get_Keys()
		}
		.property instance object SyncRoot()
		{
			.get instance object System.Collections.Specialized.HybridDictionary::get_SyncRoot()
		}
		.property instance class [mscorlib]System.Collections.ICollection Values()
		{
			.get instance class [mscorlib]System.Collections.ICollection System.Collections.Specialized.HybridDictionary::get_Values()
		}
	}
	.class public interface abstract IOrderedDictionary
		implements [mscorlib]System.Collections.IDictionary, [mscorlib]System.Collections.ICollection, [mscorlib]System.Collections.IEnumerable
	{
		.custom instance void [mscorlib]System.Reflection.DefaultMemberAttribute::.ctor(string) = (01 00 04 49 74 65 6D 00 00)
		.method public virtual hidebysig newslot abstract specialname 
			instance object get_Item(int32 index)
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void set_Item(int32 index, object 'value')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class [mscorlib]System.Collections.IDictionaryEnumerator GetEnumerator()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void Insert(int32 index, object key, object 'value')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void RemoveAt(int32 index)
		{
		}
		.property instance object Item(int32)
		{
			.get instance object System.Collections.Specialized.IOrderedDictionary::get_Item(int32)
			.set instance void System.Collections.Specialized.IOrderedDictionary::set_Item(int32, object)
		}
	}
	.class public serializable ListDictionary
		extends [mscorlib]System.Object
		implements [mscorlib]System.Collections.IDictionary, [mscorlib]System.Collections.ICollection, [mscorlib]System.Collections.IEnumerable
	{
		.custom instance void [mscorlib]System.Reflection.DefaultMemberAttribute::.ctor(string) = (01 00 04 49 74 65 6D 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Collections.IComparer comparer)
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance object get_Item(object key)
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void set_Item(object key, object 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance int32 get_Count()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance class [mscorlib]System.Collections.ICollection get_Keys()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance bool get_IsReadOnly()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance bool get_IsFixedSize()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance bool get_IsSynchronized()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance object get_SyncRoot()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance class [mscorlib]System.Collections.ICollection get_Values()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void Add(object key, object 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void Clear()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance bool Contains(object key)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void CopyTo(class [mscorlib]System.Array 'array', int32 index)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance class [mscorlib]System.Collections.IDictionaryEnumerator GetEnumerator()
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance class [mscorlib]System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			.override [mscorlib]System.Collections.IEnumerable::GetEnumerator
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void Remove(object key)
		{
			ret
		}
		.property instance int32 Count()
		{
			.get instance int32 System.Collections.Specialized.ListDictionary::get_Count()
		}
		.property instance bool IsFixedSize()
		{
			.get instance bool System.Collections.Specialized.ListDictionary::get_IsFixedSize()
		}
		.property instance bool IsReadOnly()
		{
			.get instance bool System.Collections.Specialized.ListDictionary::get_IsReadOnly()
		}
		.property instance bool IsSynchronized()
		{
			.get instance bool System.Collections.Specialized.ListDictionary::get_IsSynchronized()
		}
		.property instance object Item(object)
		{
			.get instance object System.Collections.Specialized.ListDictionary::get_Item(object)
			.set instance void System.Collections.Specialized.ListDictionary::set_Item(object, object)
		}
		.property instance class [mscorlib]System.Collections.ICollection Keys()
		{
			.get instance class [mscorlib]System.Collections.ICollection System.Collections.Specialized.ListDictionary::get_Keys()
		}
		.property instance object SyncRoot()
		{
			.get instance object System.Collections.Specialized.ListDictionary::get_SyncRoot()
		}
		.property instance class [mscorlib]System.Collections.ICollection Values()
		{
			.get instance class [mscorlib]System.Collections.ICollection System.Collections.Specialized.ListDictionary::get_Values()
		}
	}
	.class public abstract serializable NameObjectCollectionBase
		extends [mscorlib]System.Object
		implements [mscorlib]System.Collections.ICollection, [mscorlib]System.Collections.IEnumerable, [mscorlib]System.Runtime.Serialization.ISerializable, [mscorlib]System.Runtime.Serialization.IDeserializationCallback
	{
		.class nested public serializable KeysCollection
			extends [mscorlib]System.Object
			implements [mscorlib]System.Collections.ICollection, [mscorlib]System.Collections.IEnumerable
		{
			.custom instance void [mscorlib]System.Reflection.DefaultMemberAttribute::.ctor(string) = (01 00 04 49 74 65 6D 00 00)
			.method public virtual hidebysig newslot 
				instance string Get(int32 index)
			{
				ret
			}
			.method public hidebysig specialname 
				instance string get_Item(int32 index)
			{
				ret
			}
			.method public final virtual hidebysig newslot 
				instance class [mscorlib]System.Collections.IEnumerator GetEnumerator()
			{
				ret
			}
			.method public final virtual hidebysig newslot specialname 
				instance int32 get_Count()
			{
				ret
			}
			.method private final virtual hidebysig newslot 
				instance void System.Collections.ICollection.CopyTo(class [mscorlib]System.Array 'array', int32 index)
			{
				.override [mscorlib]System.Collections.ICollection::CopyTo
				ret
			}
			.method private final virtual hidebysig newslot specialname 
				instance object System.Collections.ICollection.get_SyncRoot()
			{
				.override [mscorlib]System.Collections.ICollection::get_SyncRoot
				ret
			}
			.method private final virtual hidebysig newslot specialname 
				instance bool System.Collections.ICollection.get_IsSynchronized()
			{
				.override [mscorlib]System.Collections.ICollection::get_IsSynchronized
				ret
			}
			.property instance int32 Count()
			{
				.get instance int32 System.Collections.Specialized.NameObjectCollectionBase/KeysCollection::get_Count()
			}
			.property instance string Item(int32)
			{
				.get instance string System.Collections.Specialized.NameObjectCollectionBase/KeysCollection::get_Item(int32)
			}
			.property instance bool System.Collections.ICollection.IsSynchronized()
			{
				.get instance bool System.Collections.Specialized.NameObjectCollectionBase/KeysCollection::System.Collections.ICollection.get_IsSynchronized()
			}
			.property instance object System.Collections.ICollection.SyncRoot()
			{
				.get instance object System.Collections.Specialized.NameObjectCollectionBase/KeysCollection::System.Collections.ICollection.get_SyncRoot()
			}
		}
		.method family hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method family hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Collections.IEqualityComparer equalityComparer)
		{
			ret
		}
		.method family hidebysig specialname 
			instance void .ctor(int32 capacity, class [mscorlib]System.Collections.IEqualityComparer equalityComparer)
		{
			ret
		}
		.method family hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Collections.IHashCodeProvider hashProvider, class [mscorlib]System.Collections.IComparer comparer)
		{
			.custom instance void [mscorlib]System.ObsoleteAttribute::.ctor(string) = (01 00 3F 50 6C 65 61 73 65 20 75 73 65 20 4E 61 6D 65 4F 62 6A 65 63 74 43 6F 6C 6C 65 63 74 69 6F 6E 42 61 73 65 28 49 45 71 75 61 6C 69 74 79 43 6F 6D 70 61 72 65 72 29 20 69 6E 73 74 65 61 64 2E 00 00)
			ret
		}
		.method family hidebysig specialname 
			instance void .ctor(int32 capacity, class [mscorlib]System.Collections.IHashCodeProvider hashProvider, class [mscorlib]System.Collections.IComparer comparer)
		{
			.custom instance void [mscorlib]System.ObsoleteAttribute::.ctor(string) = (01 00 46 50 6C 65 61 73 65 20 75 73 65 20 4E 61 6D 65 4F 62 6A 65 63 74 43 6F 6C 6C 65 63 74 69 6F 6E 42 61 73 65 28 49 6E 74 33 32 2C 20 49 45 71 75 61 6C 69 74 79 43 6F 6D 70 61 72 65 72 29 20 69 6E 73 74 65 61 64 2E 00 00)
			ret
		}
		.method family hidebysig specialname 
			instance void .ctor(int32 capacity)
		{
			ret
		}
		.method family hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Runtime.Serialization.SerializationInfo info, valuetype [mscorlib]System.Runtime.Serialization.StreamingContext context)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void GetObjectData(class [mscorlib]System.Runtime.Serialization.SerializationInfo info, valuetype [mscorlib]System.Runtime.Serialization.StreamingContext context)
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public virtual hidebysig newslot 
			instance void OnDeserialization(object sender)
		{
			ret
		}
		.method family hidebysig specialname 
			instance bool get_IsReadOnly()
		{
			ret
		}
		.method family hidebysig specialname 
			instance void set_IsReadOnly(bool 'value')
		{
			ret
		}
		.method family hidebysig 
			instance bool BaseHasKeys()
		{
			ret
		}
		.method family hidebysig 
			instance void BaseAdd(string name, object 'value')
		{
			ret
		}
		.method family hidebysig 
			instance void BaseRemove(string name)
		{
			ret
		}
		.method family hidebysig 
			instance void BaseRemoveAt(int32 index)
		{
			ret
		}
		.method family hidebysig 
			instance void BaseClear()
		{
			ret
		}
		.method family hidebysig 
			instance object BaseGet(string name)
		{
			ret
		}
		.method family hidebysig 
			instance void BaseSet(string name, object 'value')
		{
			ret
		}
		.method family hidebysig 
			instance object BaseGet(int32 index)
		{
			ret
		}
		.method family hidebysig 
			instance string BaseGetKey(int32 index)
		{
			ret
		}
		.method family hidebysig 
			instance void BaseSet(int32 index, object 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance class [mscorlib]System.Collections.IEnumerator GetEnumerator()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance int32 get_Count()
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Collections.ICollection.CopyTo(class [mscorlib]System.Array 'array', int32 index)
		{
			.override [mscorlib]System.Collections.ICollection::CopyTo
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance object System.Collections.ICollection.get_SyncRoot()
		{
			.override [mscorlib]System.Collections.ICollection::get_SyncRoot
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance bool System.Collections.ICollection.get_IsSynchronized()
		{
			.override [mscorlib]System.Collections.ICollection::get_IsSynchronized
			ret
		}
		.method family hidebysig 
			instance string[] BaseGetAllKeys()
		{
			ret
		}
		.method family hidebysig 
			instance object[] BaseGetAllValues()
		{
			ret
		}
		.method family hidebysig 
			instance object[] BaseGetAllValues(class [mscorlib]System.Type 'type')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance class System.Collections.Specialized.NameObjectCollectionBase/KeysCollection get_Keys()
		{
			ret
		}
		.property instance int32 Count()
		{
			.get instance int32 System.Collections.Specialized.NameObjectCollectionBase::get_Count()
		}
		.property instance bool IsReadOnly()
		{
			.get instance bool System.Collections.Specialized.NameObjectCollectionBase::get_IsReadOnly()
			.set instance void System.Collections.Specialized.NameObjectCollectionBase::set_IsReadOnly(bool)
		}
		.property instance class System.Collections.Specialized.NameObjectCollectionBase/KeysCollection Keys()
		{
			.get instance class System.Collections.Specialized.NameObjectCollectionBase/KeysCollection System.Collections.Specialized.NameObjectCollectionBase::get_Keys()
		}
		.property instance bool System.Collections.ICollection.IsSynchronized()
		{
			.get instance bool System.Collections.Specialized.NameObjectCollectionBase::System.Collections.ICollection.get_IsSynchronized()
		}
		.property instance object System.Collections.ICollection.SyncRoot()
		{
			.get instance object System.Collections.Specialized.NameObjectCollectionBase::System.Collections.ICollection.get_SyncRoot()
		}
	}
	.class public serializable NameValueCollection
		extends System.Collections.Specialized.NameObjectCollectionBase
	{
		.custom instance void [mscorlib]System.Reflection.DefaultMemberAttribute::.ctor(string) = (01 00 04 49 74 65 6D 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class System.Collections.Specialized.NameValueCollection col)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Collections.IHashCodeProvider hashProvider, class [mscorlib]System.Collections.IComparer comparer)
		{
			.custom instance void [mscorlib]System.ObsoleteAttribute::.ctor(string) = (01 00 3A 50 6C 65 61 73 65 20 75 73 65 20 4E 61 6D 65 56 61 6C 75 65 43 6F 6C 6C 65 63 74 69 6F 6E 28 49 45 71 75 61 6C 69 74 79 43 6F 6D 70 61 72 65 72 29 20 69 6E 73 74 65 61 64 2E 00 00)
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(int32 capacity)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Collections.IEqualityComparer equalityComparer)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(int32 capacity, class [mscorlib]System.Collections.IEqualityComparer equalityComparer)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(int32 capacity, class System.Collections.Specialized.NameValueCollection col)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(int32 capacity, class [mscorlib]System.Collections.IHashCodeProvider hashProvider, class [mscorlib]System.Collections.IComparer comparer)
		{
			.custom instance void [mscorlib]System.ObsoleteAttribute::.ctor(string) = (01 00 41 50 6C 65 61 73 65 20 75 73 65 20 4E 61 6D 65 56 61 6C 75 65 43 6F 6C 6C 65 63 74 69 6F 6E 28 49 6E 74 33 32 2C 20 49 45 71 75 61 6C 69 74 79 43 6F 6D 70 61 72 65 72 29 20 69 6E 73 74 65 61 64 2E 00 00)
			ret
		}
		.method family hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Runtime.Serialization.SerializationInfo info, valuetype [mscorlib]System.Runtime.Serialization.StreamingContext context)
		{
			ret
		}
		.method family hidebysig 
			instance void InvalidateCachedArrays()
		{
			ret
		}
		.method public hidebysig 
			instance void Add(class System.Collections.Specialized.NameValueCollection c)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void Clear()
		{
			ret
		}
		.method public hidebysig 
			instance void CopyTo(class [mscorlib]System.Array dest, int32 index)
		{
			ret
		}
		.method public hidebysig 
			instance bool HasKeys()
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void Add(string name, string 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance string Get(string name)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance string[] GetValues(string name)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void Set(string name, string 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void Remove(string name)
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Item(string name)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Item(string name, string 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance string Get(int32 index)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance string[] GetValues(int32 index)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance string GetKey(int32 index)
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Item(int32 index)
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance string[] get_AllKeys()
		{
			ret
		}
		.property instance string[] AllKeys()
		{
			.get instance string[] System.Collections.Specialized.NameValueCollection::get_AllKeys()
		}
		.property instance string Item(string)
		{
			.get instance string System.Collections.Specialized.NameValueCollection::get_Item(string)
			.set instance void System.Collections.Specialized.NameValueCollection::set_Item(string, string)
		}
		.property instance string Item(int32)
		{
			.get instance string System.Collections.Specialized.NameValueCollection::get_Item(int32)
		}
	}
	.class public serializable OrderedDictionary
		extends [mscorlib]System.Object
		implements System.Collections.Specialized.IOrderedDictionary, [mscorlib]System.Collections.IDictionary, [mscorlib]System.Collections.ICollection, [mscorlib]System.Collections.IEnumerable, [mscorlib]System.Runtime.Serialization.ISerializable, [mscorlib]System.Runtime.Serialization.IDeserializationCallback
	{
		.custom instance void [mscorlib]System.Reflection.DefaultMemberAttribute::.ctor(string) = (01 00 04 49 74 65 6D 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(int32 capacity)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Collections.IEqualityComparer comparer)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(int32 capacity, class [mscorlib]System.Collections.IEqualityComparer comparer)
		{
			ret
		}
		.method family hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Runtime.Serialization.SerializationInfo info, valuetype [mscorlib]System.Runtime.Serialization.StreamingContext context)
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance int32 get_Count()
		{
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance bool System.Collections.IDictionary.get_IsFixedSize()
		{
			.override [mscorlib]System.Collections.IDictionary::get_IsFixedSize
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance bool get_IsReadOnly()
		{
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance bool System.Collections.ICollection.get_IsSynchronized()
		{
			.override [mscorlib]System.Collections.ICollection::get_IsSynchronized
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance class [mscorlib]System.Collections.ICollection get_Keys()
		{
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance object System.Collections.ICollection.get_SyncRoot()
		{
			.override [mscorlib]System.Collections.ICollection::get_SyncRoot
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance object get_Item(int32 index)
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void set_Item(int32 index, object 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance object get_Item(object key)
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void set_Item(object key, object 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance class [mscorlib]System.Collections.ICollection get_Values()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void Add(object key, object 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void Clear()
		{
			ret
		}
		.method public hidebysig 
			instance class System.Collections.Specialized.OrderedDictionary AsReadOnly()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance bool Contains(object key)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void CopyTo(class [mscorlib]System.Array 'array', int32 index)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void Insert(int32 index, object key, object 'value')
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void OnDeserialization(object sender)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void RemoveAt(int32 index)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void Remove(object key)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance class [mscorlib]System.Collections.IDictionaryEnumerator GetEnumerator()
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance class [mscorlib]System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			.override [mscorlib]System.Collections.IEnumerable::GetEnumerator
			ret
		}
		.method public virtual hidebysig newslot 
			instance void GetObjectData(class [mscorlib]System.Runtime.Serialization.SerializationInfo info, valuetype [mscorlib]System.Runtime.Serialization.StreamingContext context)
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(object sender)
		{
			.override [mscorlib]System.Runtime.Serialization.IDeserializationCallback::OnDeserialization
			ret
		}
		.property instance int32 Count()
		{
			.get instance int32 System.Collections.Specialized.OrderedDictionary::get_Count()
		}
		.property instance bool IsReadOnly()
		{
			.get instance bool System.Collections.Specialized.OrderedDictionary::get_IsReadOnly()
		}
		.property instance object Item(int32)
		{
			.get instance object System.Collections.Specialized.OrderedDictionary::get_Item(int32)
			.set instance void System.Collections.Specialized.OrderedDictionary::set_Item(int32, object)
		}
		.property instance object Item(object)
		{
			.get instance object System.Collections.Specialized.OrderedDictionary::get_Item(object)
			.set instance void System.Collections.Specialized.OrderedDictionary::set_Item(object, object)
		}
		.property instance class [mscorlib]System.Collections.ICollection Keys()
		{
			.get instance class [mscorlib]System.Collections.ICollection System.Collections.Specialized.OrderedDictionary::get_Keys()
		}
		.property instance bool System.Collections.ICollection.IsSynchronized()
		{
			.get instance bool System.Collections.Specialized.OrderedDictionary::System.Collections.ICollection.get_IsSynchronized()
		}
		.property instance object System.Collections.ICollection.SyncRoot()
		{
			.get instance object System.Collections.Specialized.OrderedDictionary::System.Collections.ICollection.get_SyncRoot()
		}
		.property instance bool System.Collections.IDictionary.IsFixedSize()
		{
			.get instance bool System.Collections.Specialized.OrderedDictionary::System.Collections.IDictionary.get_IsFixedSize()
		}
		.property instance class [mscorlib]System.Collections.ICollection Values()
		{
			.get instance class [mscorlib]System.Collections.ICollection System.Collections.Specialized.OrderedDictionary::get_Values()
		}
	}
	.class public serializable StringCollection
		extends [mscorlib]System.Object
		implements [mscorlib]System.Collections.IList, [mscorlib]System.Collections.ICollection, [mscorlib]System.Collections.IEnumerable
	{
		.custom instance void [mscorlib]System.Reflection.DefaultMemberAttribute::.ctor(string) = (01 00 04 49 74 65 6D 00 00)
		.method public hidebysig specialname 
			instance string get_Item(int32 index)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Item(int32 index, string 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance int32 get_Count()
		{
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance bool System.Collections.IList.get_IsReadOnly()
		{
			.override [mscorlib]System.Collections.IList::get_IsReadOnly
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance bool System.Collections.IList.get_IsFixedSize()
		{
			.override [mscorlib]System.Collections.IList::get_IsFixedSize
			ret
		}
		.method public hidebysig 
			instance int32 Add(string 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void AddRange(string[] 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void Clear()
		{
			ret
		}
		.method public hidebysig 
			instance bool Contains(string 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void CopyTo(string[] 'array', int32 index)
		{
			ret
		}
		.method public hidebysig 
			instance class System.Collections.Specialized.StringEnumerator GetEnumerator()
		{
			ret
		}
		.method public hidebysig 
			instance int32 IndexOf(string 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void Insert(int32 index, string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsReadOnly()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance bool get_IsSynchronized()
		{
			ret
		}
		.method public hidebysig 
			instance void Remove(string 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void RemoveAt(int32 index)
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance object get_SyncRoot()
		{
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance object System.Collections.IList.get_Item(int32 index)
		{
			.override [mscorlib]System.Collections.IList::get_Item
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance void System.Collections.IList.set_Item(int32 index, object 'value')
		{
			.override [mscorlib]System.Collections.IList::set_Item
			ret
		}
		.method private final virtual hidebysig newslot 
			instance int32 System.Collections.IList.Add(object 'value')
		{
			.override [mscorlib]System.Collections.IList::Add
			ret
		}
		.method private final virtual hidebysig newslot 
			instance bool System.Collections.IList.Contains(object 'value')
		{
			.override [mscorlib]System.Collections.IList::Contains
			ret
		}
		.method private final virtual hidebysig newslot 
			instance int32 System.Collections.IList.IndexOf(object 'value')
		{
			.override [mscorlib]System.Collections.IList::IndexOf
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Collections.IList.Insert(int32 index, object 'value')
		{
			.override [mscorlib]System.Collections.IList::Insert
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Collections.IList.Remove(object 'value')
		{
			.override [mscorlib]System.Collections.IList::Remove
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Collections.ICollection.CopyTo(class [mscorlib]System.Array 'array', int32 index)
		{
			.override [mscorlib]System.Collections.ICollection::CopyTo
			ret
		}
		.method private final virtual hidebysig newslot 
			instance class [mscorlib]System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			.override [mscorlib]System.Collections.IEnumerable::GetEnumerator
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance int32 Count()
		{
			.get instance int32 System.Collections.Specialized.StringCollection::get_Count()
		}
		.property instance bool IsReadOnly()
		{
			.get instance bool System.Collections.Specialized.StringCollection::get_IsReadOnly()
		}
		.property instance bool IsSynchronized()
		{
			.get instance bool System.Collections.Specialized.StringCollection::get_IsSynchronized()
		}
		.property instance string Item(int32)
		{
			.get instance string System.Collections.Specialized.StringCollection::get_Item(int32)
			.set instance void System.Collections.Specialized.StringCollection::set_Item(int32, string)
		}
		.property instance object SyncRoot()
		{
			.get instance object System.Collections.Specialized.StringCollection::get_SyncRoot()
		}
		.property instance bool System.Collections.IList.IsFixedSize()
		{
			.get instance bool System.Collections.Specialized.StringCollection::System.Collections.IList.get_IsFixedSize()
		}
		.property instance bool System.Collections.IList.IsReadOnly()
		{
			.get instance bool System.Collections.Specialized.StringCollection::System.Collections.IList.get_IsReadOnly()
		}
		.property instance object System.Collections.IList.Item(int32)
		{
			.get instance object System.Collections.Specialized.StringCollection::System.Collections.IList.get_Item(int32)
			.set instance void System.Collections.Specialized.StringCollection::System.Collections.IList.set_Item(int32, object)
		}
	}
	.class public serializable StringDictionary
		extends [mscorlib]System.Object
		implements [mscorlib]System.Collections.IEnumerable
	{
		.custom instance void [mscorlib]System.Reflection.DefaultMemberAttribute::.ctor(string) = (01 00 04 49 74 65 6D 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance int32 get_Count()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_IsSynchronized()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance string get_Item(string key)
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_Item(string key, string 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance class [mscorlib]System.Collections.ICollection get_Keys()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance object get_SyncRoot()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance class [mscorlib]System.Collections.ICollection get_Values()
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void Add(string key, string 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void Clear()
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance bool ContainsKey(string key)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance bool ContainsValue(string 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void CopyTo(class [mscorlib]System.Array 'array', int32 index)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance class [mscorlib]System.Collections.IEnumerator GetEnumerator()
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void Remove(string key)
		{
			ret
		}
		.property instance int32 Count()
		{
			.get instance int32 System.Collections.Specialized.StringDictionary::get_Count()
		}
		.property instance bool IsSynchronized()
		{
			.get instance bool System.Collections.Specialized.StringDictionary::get_IsSynchronized()
		}
		.property instance string Item(string)
		{
			.get instance string System.Collections.Specialized.StringDictionary::get_Item(string)
			.set instance void System.Collections.Specialized.StringDictionary::set_Item(string, string)
		}
		.property instance class [mscorlib]System.Collections.ICollection Keys()
		{
			.get instance class [mscorlib]System.Collections.ICollection System.Collections.Specialized.StringDictionary::get_Keys()
		}
		.property instance object SyncRoot()
		{
			.get instance object System.Collections.Specialized.StringDictionary::get_SyncRoot()
		}
		.property instance class [mscorlib]System.Collections.ICollection Values()
		{
			.get instance class [mscorlib]System.Collections.ICollection System.Collections.Specialized.StringDictionary::get_Values()
		}
	}
	.class public StringEnumerator
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance string get_Current()
		{
			ret
		}
		.method public hidebysig 
			instance bool MoveNext()
		{
			ret
		}
		.method public hidebysig 
			instance void Reset()
		{
			ret
		}
		.property instance string Current()
		{
			.get instance string System.Collections.Specialized.StringEnumerator::get_Current()
		}
	}
}
.namespace System.ComponentModel
{
	.class public AddingNewEventArgs
		extends [mscorlib]System.EventArgs
	{
		.permissionset linkcheck = (00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(object newObject)
		{
			ret
		}
		.method public hidebysig specialname 
			instance object get_NewObject()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_NewObject(object 'value')
		{
			ret
		}
		.property instance object NewObject()
		{
			.get instance object System.ComponentModel.AddingNewEventArgs::get_NewObject()
			.set instance void System.ComponentModel.AddingNewEventArgs::set_NewObject(object)
		}
	}
	.class public sealed AddingNewEventHandler
		extends [mscorlib]System.MulticastDelegate
	{
		.permissionset linkcheck = (00)
		.method public hidebysig specialname 
			instance void .ctor(object 'object', native int 'method')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void Invoke(object sender, class System.ComponentModel.AddingNewEventArgs e)
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance class [mscorlib]System.IAsyncResult BeginInvoke(object sender, class System.ComponentModel.AddingNewEventArgs e, class [mscorlib]System.AsyncCallback callback, object 'object')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void EndInvoke(class [mscorlib]System.IAsyncResult result)
			runtime 
		{
		}
	}
	.class public sealed AmbientValueAttribute
		extends [mscorlib]System.Attribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = (01 00 FF 7F 00 00 00 00)
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Type 'type', string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(char 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(uint8 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(int16 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(int64 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(float32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(float64 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(object 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance object get_Value()
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool Equals(object obj)
		{
			ret
		}
		.method public virtual hidebysig 
			instance int32 GetHashCode()
		{
			ret
		}
		.property instance object Value()
		{
			.get instance object System.ComponentModel.AmbientValueAttribute::get_Value()
		}
	}
	.class public ArrayConverter
		extends System.ComponentModel.CollectionConverter
	{
		.permissionset linkcheck = (00)
		.method public virtual hidebysig 
			instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Globalization.CultureInfo culture, object 'value', class [mscorlib]System.Type destinationType)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class System.ComponentModel.PropertyDescriptorCollection GetProperties(class System.ComponentModel.ITypeDescriptorContext context, object 'value', class [mscorlib]System.Attribute[] attributes)
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool GetPropertiesSupported(class System.ComponentModel.ITypeDescriptorContext context)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public AsyncCompletedEventArgs
		extends [mscorlib]System.EventArgs
	{
		.permissionset linkcheck = (00)
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Exception 'error', bool cancelled, object userState)
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_Cancelled()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]System.Exception get_Error()
		{
			ret
		}
		.method public hidebysig specialname 
			instance object get_UserState()
		{
			ret
		}
		.method family hidebysig 
			instance void RaiseExceptionIfNecessary()
		{
			ret
		}
		.property instance bool Cancelled()
		{
			.get instance bool System.ComponentModel.AsyncCompletedEventArgs::get_Cancelled()
		}
		.property instance class [mscorlib]System.Exception Error()
		{
			.get instance class [mscorlib]System.Exception System.ComponentModel.AsyncCompletedEventArgs::get_Error()
		}
		.property instance object UserState()
		{
			.get instance object System.ComponentModel.AsyncCompletedEventArgs::get_UserState()
		}
	}
	.class public sealed AsyncCompletedEventHandler
		extends [mscorlib]System.MulticastDelegate
	{
		.permissionset linkcheck = (00)
		.method public hidebysig specialname 
			instance void .ctor(object 'object', native int 'method')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void Invoke(object sender, class System.ComponentModel.AsyncCompletedEventArgs e)
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance class [mscorlib]System.IAsyncResult BeginInvoke(object sender, class System.ComponentModel.AsyncCompletedEventArgs e, class [mscorlib]System.AsyncCallback callback, object 'object')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void EndInvoke(class [mscorlib]System.IAsyncResult result)
			runtime 
		{
		}
	}
	.class public sealed AsyncOperation
		extends [mscorlib]System.Object
	{
		.permissionset linkcheck = (00)
		.method family virtual hidebysig 
			instance void Finalize()
		{
			ret
		}
		.method public hidebysig specialname 
			instance object get_UserSuppliedState()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]System.Threading.SynchronizationContext get_SynchronizationContext()
		{
			ret
		}
		.method public hidebysig 
			instance void Post(class [mscorlib]System.Threading.SendOrPostCallback d, object arg)
		{
			ret
		}
		.method public hidebysig 
			instance void PostOperationCompleted(class [mscorlib]System.Threading.SendOrPostCallback d, object arg)
		{
			ret
		}
		.method public hidebysig 
			instance void OperationCompleted()
		{
			ret
		}
		.property instance class [mscorlib]System.Threading.SynchronizationContext SynchronizationContext()
		{
			.get instance class [mscorlib]System.Threading.SynchronizationContext System.ComponentModel.AsyncOperation::get_SynchronizationContext()
		}
		.property instance object UserSuppliedState()
		{
			.get instance object System.ComponentModel.AsyncOperation::get_UserSuppliedState()
		}
	}
	.class public abstract sealed AsyncOperationManager
		extends [mscorlib]System.Object
	{
		.permissionset linkcheck = (00)
		.method public static hidebysig 
			class System.ComponentModel.AsyncOperation CreateOperation(object userSuppliedState)
		{
			ret
		}
		.method public static hidebysig specialname 
			class [mscorlib]System.Threading.SynchronizationContext get_SynchronizationContext()
		{
			ret
		}
		.method public static hidebysig specialname 
			void set_SynchronizationContext(class [mscorlib]System.Threading.SynchronizationContext 'value')
		{
			.permissionset linkcheck = (00)
			ret
		}
		.property class [mscorlib]System.Threading.SynchronizationContext SynchronizationContext()
		{
			.custom instance void System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype System.ComponentModel.EditorBrowsableState) = (01 00 02 00 00 00 00 00)
			.get class [mscorlib]System.Threading.SynchronizationContext System.ComponentModel.AsyncOperationManager::get_SynchronizationContext()
			.set void System.ComponentModel.AsyncOperationManager::set_SynchronizationContext(class [mscorlib]System.Threading.SynchronizationContext)
		}
	}
	.class public AttributeCollection
		extends [mscorlib]System.Object
		implements [mscorlib]System.Collections.ICollection, [mscorlib]System.Collections.IEnumerable
	{
		.permissionset linkcheck = (00)
		.custom instance void [mscorlib]System.Reflection.DefaultMemberAttribute::.ctor(string) = (01 00 04 49 74 65 6D 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Attribute[] attributes)
		{
			.param [1]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = (01 00 00 00)
			ret
		}
		.method public static hidebysig 
			class System.ComponentModel.AttributeCollection FromExisting(class System.ComponentModel.AttributeCollection existing, class [mscorlib]System.Attribute[] newAttributes)
		{
			.param [2]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = (01 00 00 00)
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_Count()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance class [mscorlib]System.Attribute get_Item(int32 index)
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance class [mscorlib]System.Attribute get_Item(class [mscorlib]System.Type attributeType)
		{
			ret
		}
		.method public hidebysig 
			instance bool Contains(class [mscorlib]System.Attribute attribute)
		{
			ret
		}
		.method public hidebysig 
			instance bool Contains(class [mscorlib]System.Attribute[] attributes)
		{
			ret
		}
		.method family hidebysig 
			instance class [mscorlib]System.Attribute GetDefaultAttribute(class [mscorlib]System.Type attributeType)
		{
			ret
		}
		.method public hidebysig 
			instance class [mscorlib]System.Collections.IEnumerator GetEnumerator()
		{
			ret
		}
		.method public hidebysig 
			instance bool Matches(class [mscorlib]System.Attribute attribute)
		{
			ret
		}
		.method public hidebysig 
			instance bool Matches(class [mscorlib]System.Attribute[] attributes)
		{
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance int32 System.Collections.ICollection.get_Count()
		{
			.override [mscorlib]System.Collections.ICollection::get_Count
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance bool System.Collections.ICollection.get_IsSynchronized()
		{
			.override [mscorlib]System.Collections.ICollection::get_IsSynchronized
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance object System.Collections.ICollection.get_SyncRoot()
		{
			.override [mscorlib]System.Collections.ICollection::get_SyncRoot
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void CopyTo(class [mscorlib]System.Array 'array', int32 index)
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance class [mscorlib]System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			.override [mscorlib]System.Collections.IEnumerable::GetEnumerator
			ret
		}
		.field static public initonly class System.ComponentModel.AttributeCollection Empty
		.property instance int32 Count()
		{
			.get instance int32 System.ComponentModel.AttributeCollection::get_Count()
		}
		.property instance class [mscorlib]System.Attribute Item(int32)
		{
			.get instance class [mscorlib]System.Attribute System.ComponentModel.AttributeCollection::get_Item(int32)
		}
		.property instance class [mscorlib]System.Attribute Item(class [mscorlib]System.Type)
		{
			.get instance class [mscorlib]System.Attribute System.ComponentModel.AttributeCollection::get_Item(class [mscorlib]System.Type)
		}
		.property instance int32 System.Collections.ICollection.Count()
		{
			.get instance int32 System.ComponentModel.AttributeCollection::System.Collections.ICollection.get_Count()
		}
		.property instance bool System.Collections.ICollection.IsSynchronized()
		{
			.get instance bool System.ComponentModel.AttributeCollection::System.Collections.ICollection.get_IsSynchronized()
		}
		.property instance object System.Collections.ICollection.SyncRoot()
		{
			.get instance object System.ComponentModel.AttributeCollection::System.Collections.ICollection.get_SyncRoot()
		}
	}
	.class public AttributeProviderAttribute
		extends [mscorlib]System.Attribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = (01 00 80 00 00 00 00 00)
		.method public hidebysig specialname 
			instance void .ctor(string typeName)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string typeName, string propertyName)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Type 'type')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_TypeName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_PropertyName()
		{
			ret
		}
		.property instance string PropertyName()
		{
			.get instance string System.ComponentModel.AttributeProviderAttribute::get_PropertyName()
		}
		.property instance string TypeName()
		{
			.get instance string System.ComponentModel.AttributeProviderAttribute::get_TypeName()
		}
	}
	.class public BackgroundWorker
		extends System.ComponentModel.Component
	{
		.permissionset linkcheck = (00)
		.custom instance void System.ComponentModel.DefaultEventAttribute::.ctor(string) = (01 00 06 44 6F 57 6F 72 6B 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_CancellationPending()
		{
			ret
		}
		.method public hidebysig 
			instance void CancelAsync()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void add_DoWork(class System.ComponentModel.DoWorkEventHandler 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void remove_DoWork(class System.ComponentModel.DoWorkEventHandler 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsBusy()
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void OnDoWork(class System.ComponentModel.DoWorkEventArgs e)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void OnRunWorkerCompleted(class System.ComponentModel.RunWorkerCompletedEventArgs e)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void OnProgressChanged(class System.ComponentModel.ProgressChangedEventArgs e)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void add_ProgressChanged(class System.ComponentModel.ProgressChangedEventHandler 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void remove_ProgressChanged(class System.ComponentModel.ProgressChangedEventHandler 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void ReportProgress(int32 percentProgress)
		{
			ret
		}
		.method public hidebysig 
			instance void ReportProgress(int32 percentProgress, object userState)
		{
			ret
		}
		.method public hidebysig 
			instance void RunWorkerAsync()
		{
			ret
		}
		.method public hidebysig 
			instance void RunWorkerAsync(object argument)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void add_RunWorkerCompleted(class System.ComponentModel.RunWorkerCompletedEventHandler 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void remove_RunWorkerCompleted(class System.ComponentModel.RunWorkerCompletedEventHandler 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_WorkerReportsProgress()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_WorkerReportsProgress(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_WorkerSupportsCancellation()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_WorkerSupportsCancellation(bool 'value')
		{
			ret
		}
		.event System.ComponentModel.DoWorkEventHandler DoWork
		{
			.addon instance void System.ComponentModel.BackgroundWorker::add_DoWork(class System.ComponentModel.DoWorkEventHandler)
			.removeon instance void System.ComponentModel.BackgroundWorker::remove_DoWork(class System.ComponentModel.DoWorkEventHandler)
		}
		.event System.ComponentModel.ProgressChangedEventHandler ProgressChanged
		{
			.addon instance void System.ComponentModel.BackgroundWorker::add_ProgressChanged(class System.ComponentModel.ProgressChangedEventHandler)
			.removeon instance void System.ComponentModel.BackgroundWorker::remove_ProgressChanged(class System.ComponentModel.ProgressChangedEventHandler)
		}
		.event System.ComponentModel.RunWorkerCompletedEventHandler RunWorkerCompleted
		{
			.addon instance void System.ComponentModel.BackgroundWorker::add_RunWorkerCompleted(class System.ComponentModel.RunWorkerCompletedEventHandler)
			.removeon instance void System.ComponentModel.BackgroundWorker::remove_RunWorkerCompleted(class System.ComponentModel.RunWorkerCompletedEventHandler)
		}
		.property instance bool CancellationPending()
		{
			.custom instance void System.ComponentModel.BrowsableAttribute::.ctor(bool) = (01 00 00 00 00)
			.get instance bool System.ComponentModel.BackgroundWorker::get_CancellationPending()
		}
		.property instance bool IsBusy()
		{
			.custom instance void System.ComponentModel.BrowsableAttribute::.ctor(bool) = (01 00 00 00 00)
			.get instance bool System.ComponentModel.BackgroundWorker::get_IsBusy()
		}
		.property instance bool WorkerReportsProgress()
		{
			.custom instance void System.ComponentModel.DefaultValueAttribute::.ctor(bool) = (01 00 00 00 00)
			.get instance bool System.ComponentModel.BackgroundWorker::get_WorkerReportsProgress()
			.set instance void System.ComponentModel.BackgroundWorker::set_WorkerReportsProgress(bool)
		}
		.property instance bool WorkerSupportsCancellation()
		{
			.custom instance void System.ComponentModel.DefaultValueAttribute::.ctor(bool) = (01 00 00 00 00)
			.get instance bool System.ComponentModel.BackgroundWorker::get_WorkerSupportsCancellation()
			.set instance void System.ComponentModel.BackgroundWorker::set_WorkerSupportsCancellation(bool)
		}
	}
	.class public abstract BaseNumberConverter
		extends System.ComponentModel.TypeConverter
	{
		.permissionset linkcheck = (00)
		.method public virtual hidebysig 
			instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Type sourceType)
		{
			ret
		}
		.method public virtual hidebysig 
			instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Globalization.CultureInfo culture, object 'value')
		{
			ret
		}
		.method public virtual hidebysig 
			instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Globalization.CultureInfo culture, object 'value', class [mscorlib]System.Type destinationType)
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Type t)
		{
			ret
		}
		.method family hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public sealed BindableAttribute
		extends [mscorlib]System.Attribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = (01 00 FF 7F 00 00 00 00)
		.method public hidebysig specialname 
			instance void .ctor(bool bindable)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(bool bindable, valuetype System.ComponentModel.BindingDirection direction)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(valuetype System.ComponentModel.BindableSupport 'flags')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(valuetype System.ComponentModel.BindableSupport 'flags', valuetype System.ComponentModel.BindingDirection direction)
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_Bindable()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype System.ComponentModel.BindingDirection get_Direction()
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool Equals(object obj)
		{
			ret
		}
		.method public virtual hidebysig 
			instance int32 GetHashCode()
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool IsDefaultAttribute()
		{
			ret
		}
		.field static public initonly class System.ComponentModel.BindableAttribute Default
		.field static public initonly class System.ComponentModel.BindableAttribute No
		.field static public initonly class System.ComponentModel.BindableAttribute Yes
		.property instance bool Bindable()
		{
			.get instance bool System.ComponentModel.BindableAttribute::get_Bindable()
		}
		.property instance valuetype System.ComponentModel.BindingDirection Direction()
		{
			.get instance valuetype System.ComponentModel.BindingDirection System.ComponentModel.BindableAttribute::get_Direction()
		}
	}
	.class public sealed BindableSupport
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype System.ComponentModel.BindableSupport Default = int32(0x00000002)
		.field static public literal valuetype System.ComponentModel.BindableSupport No = int32(0x00000000)
		.field static public literal valuetype System.ComponentModel.BindableSupport Yes = int32(0x00000001)
	}
	.class public sealed BindingDirection
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype System.ComponentModel.BindingDirection OneWay = int32(0x00000000)
		.field static public literal valuetype System.ComponentModel.BindingDirection TwoWay = int32(0x00000001)
	}
	.class public BooleanConverter
		extends System.ComponentModel.TypeConverter
	{
		.permissionset linkcheck = (00)
		.method public virtual hidebysig 
			instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Type sourceType)
		{
			ret
		}
		.method public virtual hidebysig 
			instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Globalization.CultureInfo culture, object 'value')
		{
			ret
		}
		.method public virtual hidebysig 
			instance class System.ComponentModel.TypeConverter/StandardValuesCollection GetStandardValues(class System.ComponentModel.ITypeDescriptorContext context)
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool GetStandardValuesExclusive(class System.ComponentModel.ITypeDescriptorContext context)
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool GetStandardValuesSupported(class System.ComponentModel.ITypeDescriptorContext context)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public sealed BrowsableAttribute
		extends [mscorlib]System.Attribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = (01 00 FF 7F 00 00 00 00)
		.method public hidebysig specialname 
			instance void .ctor(bool browsable)
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_Browsable()
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool Equals(object obj)
		{
			ret
		}
		.method public virtual hidebysig 
			instance int32 GetHashCode()
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool IsDefaultAttribute()
		{
			ret
		}
		.field static public initonly class System.ComponentModel.BrowsableAttribute Default
		.field static public initonly class System.ComponentModel.BrowsableAttribute No
		.field static public initonly class System.ComponentModel.BrowsableAttribute Yes
		.property instance bool Browsable()
		{
			.get instance bool System.ComponentModel.BrowsableAttribute::get_Browsable()
		}
	}
	.class public ByteConverter
		extends System.ComponentModel.BaseNumberConverter
	{
		.permissionset linkcheck = (00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public CancelEventArgs
		extends [mscorlib]System.EventArgs
	{
		.permissionset linkcheck = (00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(bool cancel)
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_Cancel()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Cancel(bool 'value')
		{
			ret
		}
		.property instance bool Cancel()
		{
			.get instance bool System.ComponentModel.CancelEventArgs::get_Cancel()
			.set instance void System.ComponentModel.CancelEventArgs::set_Cancel(bool)
		}
	}
	.class public sealed CancelEventHandler
		extends [mscorlib]System.MulticastDelegate
	{
		.permissionset linkcheck = (00)
		.method public hidebysig specialname 
			instance void .ctor(object 'object', native int 'method')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void Invoke(object sender, class System.ComponentModel.CancelEventArgs e)
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance class [mscorlib]System.IAsyncResult BeginInvoke(object sender, class System.ComponentModel.CancelEventArgs e, class [mscorlib]System.AsyncCallback callback, object 'object')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void EndInvoke(class [mscorlib]System.IAsyncResult result)
			runtime 
		{
		}
	}
	.class public CategoryAttribute
		extends [mscorlib]System.Attribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = (01 00 FF 7F 00 00 00 00)
		.method public static hidebysig specialname 
			class System.ComponentModel.CategoryAttribute get_Action()
		{
			ret
		}
		.method public static hidebysig specialname 
			class System.ComponentModel.CategoryAttribute get_Appearance()
		{
			ret
		}
		.method public static hidebysig specialname 
			class System.ComponentModel.CategoryAttribute get_Asynchronous()
		{
			ret
		}
		.method public static hidebysig specialname 
			class System.ComponentModel.CategoryAttribute get_Behavior()
		{
			ret
		}
		.method public static hidebysig specialname 
			class System.ComponentModel.CategoryAttribute get_Data()
		{
			ret
		}
		.method public static hidebysig specialname 
			class System.ComponentModel.CategoryAttribute get_Default()
		{
			ret
		}
		.method public static hidebysig specialname 
			class System.ComponentModel.CategoryAttribute get_Design()
		{
			ret
		}
		.method public static hidebysig specialname 
			class System.ComponentModel.CategoryAttribute get_DragDrop()
		{
			ret
		}
		.method public static hidebysig specialname 
			class System.ComponentModel.CategoryAttribute get_Focus()
		{
			ret
		}
		.method public static hidebysig specialname 
			class System.ComponentModel.CategoryAttribute get_Format()
		{
			ret
		}
		.method public static hidebysig specialname 
			class System.ComponentModel.CategoryAttribute get_Key()
		{
			ret
		}
		.method public static hidebysig specialname 
			class System.ComponentModel.CategoryAttribute get_Layout()
		{
			ret
		}
		.method public static hidebysig specialname 
			class System.ComponentModel.CategoryAttribute get_Mouse()
		{
			ret
		}
		.method public static hidebysig specialname 
			class System.ComponentModel.CategoryAttribute get_WindowStyle()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string category)
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Category()
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool Equals(object obj)
		{
			ret
		}
		.method public virtual hidebysig 
			instance int32 GetHashCode()
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance string GetLocalizedString(string 'value')
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool IsDefaultAttribute()
		{
			ret
		}
		.property class System.ComponentModel.CategoryAttribute Action()
		{
			.get class System.ComponentModel.CategoryAttribute System.ComponentModel.CategoryAttribute::get_Action()
		}
		.property class System.ComponentModel.CategoryAttribute Appearance()
		{
			.get class System.ComponentModel.CategoryAttribute System.ComponentModel.CategoryAttribute::get_Appearance()
		}
		.property class System.ComponentModel.CategoryAttribute Asynchronous()
		{
			.get class System.ComponentModel.CategoryAttribute System.ComponentModel.CategoryAttribute::get_Asynchronous()
		}
		.property class System.ComponentModel.CategoryAttribute Behavior()
		{
			.get class System.ComponentModel.CategoryAttribute System.ComponentModel.CategoryAttribute::get_Behavior()
		}
		.property instance string Category()
		{
			.get instance string System.ComponentModel.CategoryAttribute::get_Category()
		}
		.property class System.ComponentModel.CategoryAttribute Data()
		{
			.get class System.ComponentModel.CategoryAttribute System.ComponentModel.CategoryAttribute::get_Data()
		}
		.property class System.ComponentModel.CategoryAttribute Default()
		{
			.get class System.ComponentModel.CategoryAttribute System.ComponentModel.CategoryAttribute::get_Default()
		}
		.property class System.ComponentModel.CategoryAttribute Design()
		{
			.get class System.ComponentModel.CategoryAttribute System.ComponentModel.CategoryAttribute::get_Design()
		}
		.property class System.ComponentModel.CategoryAttribute DragDrop()
		{
			.get class System.ComponentModel.CategoryAttribute System.ComponentModel.CategoryAttribute::get_DragDrop()
		}
		.property class System.ComponentModel.CategoryAttribute Focus()
		{
			.get class System.ComponentModel.CategoryAttribute System.ComponentModel.CategoryAttribute::get_Focus()
		}
		.property class System.ComponentModel.CategoryAttribute Format()
		{
			.get class System.ComponentModel.CategoryAttribute System.ComponentModel.CategoryAttribute::get_Format()
		}
		.property class System.ComponentModel.CategoryAttribute Key()
		{
			.get class System.ComponentModel.CategoryAttribute System.ComponentModel.CategoryAttribute::get_Key()
		}
		.property class System.ComponentModel.CategoryAttribute Layout()
		{
			.get class System.ComponentModel.CategoryAttribute System.ComponentModel.CategoryAttribute::get_Layout()
		}
		.property class System.ComponentModel.CategoryAttribute Mouse()
		{
			.get class System.ComponentModel.CategoryAttribute System.ComponentModel.CategoryAttribute::get_Mouse()
		}
		.property class System.ComponentModel.CategoryAttribute WindowStyle()
		{
			.get class System.ComponentModel.CategoryAttribute System.ComponentModel.CategoryAttribute::get_WindowStyle()
		}
	}
	.class public CharConverter
		extends System.ComponentModel.TypeConverter
	{
		.permissionset linkcheck = (00)
		.method public virtual hidebysig 
			instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Type sourceType)
		{
			ret
		}
		.method public virtual hidebysig 
			instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Globalization.CultureInfo culture, object 'value', class [mscorlib]System.Type destinationType)
		{
			ret
		}
		.method public virtual hidebysig 
			instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Globalization.CultureInfo culture, object 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public sealed CollectionChangeAction
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype System.ComponentModel.CollectionChangeAction Add = int32(0x00000001)
		.field static public literal valuetype System.ComponentModel.CollectionChangeAction Refresh = int32(0x00000003)
		.field static public literal valuetype System.ComponentModel.CollectionChangeAction Remove = int32(0x00000002)
	}
	.class public CollectionChangeEventArgs
		extends [mscorlib]System.EventArgs
	{
		.permissionset linkcheck = (00)
		.method public hidebysig specialname 
			instance void .ctor(valuetype System.ComponentModel.CollectionChangeAction action, object element)
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance valuetype System.ComponentModel.CollectionChangeAction get_Action()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance object get_Element()
		{
			ret
		}
		.property instance valuetype System.ComponentModel.CollectionChangeAction Action()
		{
			.get instance valuetype System.ComponentModel.CollectionChangeAction System.ComponentModel.CollectionChangeEventArgs::get_Action()
		}
		.property instance object Element()
		{
			.get instance object System.ComponentModel.CollectionChangeEventArgs::get_Element()
		}
	}
	.class public sealed CollectionChangeEventHandler
		extends [mscorlib]System.MulticastDelegate
	{
		.permissionset linkcheck = (00)
		.method public hidebysig specialname 
			instance void .ctor(object 'object', native int 'method')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void Invoke(object sender, class System.ComponentModel.CollectionChangeEventArgs e)
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance class [mscorlib]System.IAsyncResult BeginInvoke(object sender, class System.ComponentModel.CollectionChangeEventArgs e, class [mscorlib]System.AsyncCallback callback, object 'object')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void EndInvoke(class [mscorlib]System.IAsyncResult result)
			runtime 
		{
		}
	}
	.class public CollectionConverter
		extends System.ComponentModel.TypeConverter
	{
		.permissionset linkcheck = (00)
		.method public virtual hidebysig 
			instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Globalization.CultureInfo culture, object 'value', class [mscorlib]System.Type destinationType)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class System.ComponentModel.PropertyDescriptorCollection GetProperties(class System.ComponentModel.ITypeDescriptorContext context, object 'value', class [mscorlib]System.Attribute[] attributes)
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool GetPropertiesSupported(class System.ComponentModel.ITypeDescriptorContext context)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public sealed ComplexBindingPropertiesAttribute
		extends [mscorlib]System.Attribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = (01 00 04 00 00 00 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string dataSource)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string dataSource, string dataMember)
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_DataSource()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_DataMember()
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool Equals(object obj)
		{
			ret
		}
		.method public virtual hidebysig 
			instance int32 GetHashCode()
		{
			ret
		}
		.field static public initonly class System.ComponentModel.ComplexBindingPropertiesAttribute Default
		.property instance string DataMember()
		{
			.get instance string System.ComponentModel.ComplexBindingPropertiesAttribute::get_DataMember()
		}
		.property instance string DataSource()
		{
			.get instance string System.ComponentModel.ComplexBindingPropertiesAttribute::get_DataSource()
		}
	}
	.class public Component
		extends [mscorlib]System.MarshalByRefObject
		implements System.ComponentModel.IComponent, [mscorlib]System.IDisposable
	{
		.custom instance void System.ComponentModel.DesignerCategoryAttribute::.ctor(string) = (01 00 09 43 6F 6D 70 6F 6E 65 6E 74 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ClassInterfaceAttribute::.ctor(valuetype [mscorlib]System.Runtime.InteropServices.ClassInterfaceType) = (01 00 01 00 00 00 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method family virtual hidebysig 
			instance void Finalize()
		{
			ret
		}
		.method family virtual hidebysig newslot specialname 
			instance bool get_CanRaiseEvents()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void add_Disposed(class [mscorlib]System.EventHandler 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void remove_Disposed(class [mscorlib]System.EventHandler 'value')
		{
			ret
		}
		.method family hidebysig specialname 
			instance class System.ComponentModel.EventHandlerList get_Events()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance class System.ComponentModel.ISite get_Site()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_Site(class System.ComponentModel.ISite 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void Dispose()
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void Dispose(bool disposing)
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.ComponentModel.IContainer get_Container()
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance object GetService(class [mscorlib]System.Type service)
		{
			ret
		}
		.method family hidebysig specialname 
			instance bool get_DesignMode()
		{
			ret
		}
		.method public virtual hidebysig 
			instance string ToString()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.event [mscorlib]System.EventHandler Disposed
		{
			.custom instance void System.ComponentModel.BrowsableAttribute::.ctor(bool) = (01 00 00 00 00)
			.custom instance void System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype System.ComponentModel.EditorBrowsableState) = (01 00 02 00 00 00 00 00)
			.addon instance void System.ComponentModel.Component::add_Disposed(class [mscorlib]System.EventHandler)
			.removeon instance void System.ComponentModel.Component::remove_Disposed(class [mscorlib]System.EventHandler)
		}
		.property instance bool CanRaiseEvents()
		{
			.get instance bool System.ComponentModel.Component::get_CanRaiseEvents()
		}
		.property instance class System.ComponentModel.IContainer Container()
		{
			.custom instance void System.ComponentModel.BrowsableAttribute::.ctor(bool) = (01 00 00 00 00)
			.custom instance void System.ComponentModel.DesignerSerializationVisibilityAttribute::.ctor(valuetype System.ComponentModel.DesignerSerializationVisibility) = (01 00 00 00 00 00 00 00)
			.get instance class System.ComponentModel.IContainer System.ComponentModel.Component::get_Container()
		}
		.property instance bool DesignMode()
		{
			.custom instance void System.ComponentModel.BrowsableAttribute::.ctor(bool) = (01 00 00 00 00)
			.custom instance void System.ComponentModel.DesignerSerializationVisibilityAttribute::.ctor(valuetype System.ComponentModel.DesignerSerializationVisibility) = (01 00 00 00 00 00 00 00)
			.get instance bool System.ComponentModel.Component::get_DesignMode()
		}
		.property instance class System.ComponentModel.EventHandlerList Events()
		{
			.get instance class System.ComponentModel.EventHandlerList System.ComponentModel.Component::get_Events()
		}
		.property instance class System.ComponentModel.ISite Site()
		{
			.custom instance void System.ComponentModel.BrowsableAttribute::.ctor(bool) = (01 00 00 00 00)
			.custom instance void System.ComponentModel.DesignerSerializationVisibilityAttribute::.ctor(valuetype System.ComponentModel.DesignerSerializationVisibility) = (01 00 00 00 00 00 00 00)
			.get instance class System.ComponentModel.ISite System.ComponentModel.Component::get_Site()
			.set instance void System.ComponentModel.Component::set_Site(class System.ComponentModel.ISite)
		}
	}
	.class public ComponentCollection
		extends [mscorlib]System.Collections.ReadOnlyCollectionBase
	{
		.permissionset linkcheck = (00)
		.custom instance void [mscorlib]System.Reflection.DefaultMemberAttribute::.ctor(string) = (01 00 04 49 74 65 6D 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method public hidebysig specialname 
			instance void .ctor(class System.ComponentModel.IComponent[] components)
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance class System.ComponentModel.IComponent get_Item(string name)
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance class System.ComponentModel.IComponent get_Item(int32 index)
		{
			ret
		}
		.method public hidebysig 
			instance void CopyTo(class System.ComponentModel.IComponent[] 'array', int32 index)
		{
			ret
		}
		.property instance class System.ComponentModel.IComponent Item(string)
		{
			.get instance class System.ComponentModel.IComponent System.ComponentModel.ComponentCollection::get_Item(string)
		}
		.property instance class System.ComponentModel.IComponent Item(int32)
		{
			.get instance class System.ComponentModel.IComponent System.ComponentModel.ComponentCollection::get_Item(int32)
		}
	}
	.class public ComponentConverter
		extends System.ComponentModel.ReferenceConverter
	{
		.permissionset linkcheck = (00)
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Type 'type')
		{
			ret
		}
		.method public virtual hidebysig 
			instance class System.ComponentModel.PropertyDescriptorCollection GetProperties(class System.ComponentModel.ITypeDescriptorContext context, object 'value', class [mscorlib]System.Attribute[] attributes)
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool GetPropertiesSupported(class System.ComponentModel.ITypeDescriptorContext context)
		{
			ret
		}
	}
	.class public abstract ComponentEditor
		extends [mscorlib]System.Object
	{
		.permissionset linkcheck = (00)
		.method public hidebysig 
			instance bool EditComponent(object component)
		{
			ret
		}
		.method public virtual hidebysig newslot abstract 
			instance bool EditComponent(class System.ComponentModel.ITypeDescriptorContext context, object component)
		{
		}
		.method family hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public ComponentResourceManager
		extends [mscorlib]System.Resources.ResourceManager
	{
		.permissionset linkcheck = (00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Type t)
		{
			ret
		}
		.method public hidebysig 
			instance void ApplyResources(object 'value', string objectName)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void ApplyResources(object 'value', string objectName, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
	}
	.class public Container
		extends [mscorlib]System.Object
		implements System.ComponentModel.IContainer, [mscorlib]System.IDisposable
	{
		.permissionset linkcheck = (00)
		.method family virtual hidebysig 
			instance void Finalize()
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void Add(class System.ComponentModel.IComponent component)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void Add(class System.ComponentModel.IComponent component, string name)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance class System.ComponentModel.ISite CreateSite(class System.ComponentModel.IComponent component, string name)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void Dispose()
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void Dispose(bool disposing)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance object GetService(class [mscorlib]System.Type service)
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance class System.ComponentModel.ComponentCollection get_Components()
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void Remove(class System.ComponentModel.IComponent component)
		{
			ret
		}
		.method family hidebysig 
			instance void RemoveWithoutUnsiting(class System.ComponentModel.IComponent component)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void ValidateName(class System.ComponentModel.IComponent component, string name)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance class System.ComponentModel.ComponentCollection Components()
		{
			.get instance class System.ComponentModel.ComponentCollection System.ComponentModel.Container::get_Components()
		}
	}
	.class public abstract ContainerFilterService
		extends [mscorlib]System.Object
	{
		.permissionset linkcheck = (00)
		.method family hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance class System.ComponentModel.ComponentCollection FilterComponents(class System.ComponentModel.ComponentCollection components)
		{
			ret
		}
	}
	.class public CultureInfoConverter
		extends System.ComponentModel.TypeConverter
	{
		.permissionset linkcheck = (00)
		.method public virtual hidebysig 
			instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Type sourceType)
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Type destinationType)
		{
			ret
		}
		.method public virtual hidebysig 
			instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Globalization.CultureInfo culture, object 'value')
		{
			ret
		}
		.method public virtual hidebysig 
			instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Globalization.CultureInfo culture, object 'value', class [mscorlib]System.Type destinationType)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class System.ComponentModel.TypeConverter/StandardValuesCollection GetStandardValues(class System.ComponentModel.ITypeDescriptorContext context)
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool GetStandardValuesExclusive(class System.ComponentModel.ITypeDescriptorContext context)
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool GetStandardValuesSupported(class System.ComponentModel.ITypeDescriptorContext context)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public abstract CustomTypeDescriptor
		extends [mscorlib]System.Object
		implements System.ComponentModel.ICustomTypeDescriptor
	{
		.permissionset linkcheck = (00)
		.method family hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method family hidebysig specialname 
			instance void .ctor(class System.ComponentModel.ICustomTypeDescriptor parent)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance class System.ComponentModel.AttributeCollection GetAttributes()
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance string GetClassName()
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance string GetComponentName()
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance class System.ComponentModel.TypeConverter GetConverter()
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance class System.ComponentModel.EventDescriptor GetDefaultEvent()
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance class System.ComponentModel.PropertyDescriptor GetDefaultProperty()
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance object GetEditor(class [mscorlib]System.Type editorBaseType)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance class System.ComponentModel.EventDescriptorCollection GetEvents()
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance class System.ComponentModel.EventDescriptorCollection GetEvents(class [mscorlib]System.Attribute[] attributes)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance class System.ComponentModel.PropertyDescriptorCollection GetProperties()
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance class System.ComponentModel.PropertyDescriptorCollection GetProperties(class [mscorlib]System.Attribute[] attributes)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance object GetPropertyOwner(class System.ComponentModel.PropertyDescriptor pd)
		{
			ret
		}
	}
	.class public sealed DataObjectAttribute
		extends [mscorlib]System.Attribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = (01 00 04 00 00 00 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(bool isDataObject)
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsDataObject()
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool Equals(object obj)
		{
			ret
		}
		.method public virtual hidebysig 
			instance int32 GetHashCode()
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool IsDefaultAttribute()
		{
			ret
		}
		.field static public initonly class System.ComponentModel.DataObjectAttribute DataObject
		.field static public initonly class System.ComponentModel.DataObjectAttribute Default
		.field static public initonly class System.ComponentModel.DataObjectAttribute NonDataObject
		.property instance bool IsDataObject()
		{
			.get instance bool System.ComponentModel.DataObjectAttribute::get_IsDataObject()
		}
	}
	.class public sealed DataObjectMethodAttribute
		extends [mscorlib]System.Attribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = (01 00 40 00 00 00 00 00)
		.method public hidebysig specialname 
			instance void .ctor(valuetype System.ComponentModel.DataObjectMethodType methodType)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(valuetype System.ComponentModel.DataObjectMethodType methodType, bool isDefault)
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsDefault()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype System.ComponentModel.DataObjectMethodType get_MethodType()
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool Equals(object obj)
		{
			ret
		}
		.method public virtual hidebysig 
			instance int32 GetHashCode()
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool Match(object obj)
		{
			ret
		}
		.property instance bool IsDefault()
		{
			.get instance bool System.ComponentModel.DataObjectMethodAttribute::get_IsDefault()
		}
		.property instance valuetype System.ComponentModel.DataObjectMethodType MethodType()
		{
			.get instance valuetype System.ComponentModel.DataObjectMethodType System.ComponentModel.DataObjectMethodAttribute::get_MethodType()
		}
	}
	.class public sealed DataObjectMethodType
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype System.ComponentModel.DataObjectMethodType Delete = int32(0x00000004)
		.field static public literal valuetype System.ComponentModel.DataObjectMethodType Fill = int32(0x00000000)
		.field static public literal valuetype System.ComponentModel.DataObjectMethodType Insert = int32(0x00000003)
		.field static public literal valuetype System.ComponentModel.DataObjectMethodType Select = int32(0x00000001)
		.field static public literal valuetype System.ComponentModel.DataObjectMethodType Update = int32(0x00000002)
	}
	.class public DateTimeConverter
		extends System.ComponentModel.TypeConverter
	{
		.permissionset linkcheck = (00)
		.method public virtual hidebysig 
			instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Type sourceType)
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Type destinationType)
		{
			ret
		}
		.method public virtual hidebysig 
			instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Globalization.CultureInfo culture, object 'value')
		{
			ret
		}
		.method public virtual hidebysig 
			instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Globalization.CultureInfo culture, object 'value', class [mscorlib]System.Type destinationType)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public DecimalConverter
		extends System.ComponentModel.BaseNumberConverter
	{
		.permissionset linkcheck = (00)
		.method public virtual hidebysig 
			instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Type destinationType)
		{
			ret
		}
		.method public virtual hidebysig 
			instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Globalization.CultureInfo culture, object 'value', class [mscorlib]System.Type destinationType)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public sealed DefaultBindingPropertyAttribute
		extends [mscorlib]System.Attribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = (01 00 04 00 00 00 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string name)
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool Equals(object obj)
		{
			ret
		}
		.method public virtual hidebysig 
			instance int32 GetHashCode()
		{
			ret
		}
		.field static public initonly class System.ComponentModel.DefaultBindingPropertyAttribute Default
		.property instance string Name()
		{
			.get instance string System.ComponentModel.DefaultBindingPropertyAttribute::get_Name()
		}
	}
	.class public sealed DefaultEventAttribute
		extends [mscorlib]System.Attribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = (01 00 04 00 00 00 00 00)
		.method public hidebysig specialname 
			instance void .ctor(string name)
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool Equals(object obj)
		{
			ret
		}
		.method public virtual hidebysig 
			instance int32 GetHashCode()
		{
			ret
		}
		.field static public initonly class System.ComponentModel.DefaultEventAttribute Default
		.property instance string Name()
		{
			.get instance string System.ComponentModel.DefaultEventAttribute::get_Name()
		}
	}
	.class public sealed DefaultPropertyAttribute
		extends [mscorlib]System.Attribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = (01 00 04 00 00 00 00 00)
		.method public hidebysig specialname 
			instance void .ctor(string name)
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool Equals(object obj)
		{
			ret
		}
		.method public virtual hidebysig 
			instance int32 GetHashCode()
		{
			ret
		}
		.field static public initonly class System.ComponentModel.DefaultPropertyAttribute Default
		.property instance string Name()
		{
			.get instance string System.ComponentModel.DefaultPropertyAttribute::get_Name()
		}
	}
	.class public DefaultValueAttribute
		extends [mscorlib]System.Attribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = (01 00 FF 7F 00 00 00 00)
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Type 'type', string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(char 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(uint8 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(int16 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(int64 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(float32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(float64 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(object 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance object get_Value()
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool Equals(object obj)
		{
			ret
		}
		.method public virtual hidebysig 
			instance int32 GetHashCode()
		{
			ret
		}
		.method family hidebysig 
			instance void SetValue(object 'value')
		{
			ret
		}
		.property instance object Value()
		{
			.get instance object System.ComponentModel.DefaultValueAttribute::get_Value()
		}
	}
	.class public DescriptionAttribute
		extends [mscorlib]System.Attribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = (01 00 FF 7F 00 00 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string description)
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance string get_Description()
		{
			ret
		}
		.method family hidebysig specialname 
			instance string get_DescriptionValue()
		{
			ret
		}
		.method family hidebysig specialname 
			instance void set_DescriptionValue(string 'value')
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool Equals(object obj)
		{
			ret
		}
		.method public virtual hidebysig 
			instance int32 GetHashCode()
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool IsDefaultAttribute()
		{
			ret
		}
		.field static public initonly class System.ComponentModel.DescriptionAttribute Default
		.property instance string Description()
		{
			.get instance string System.ComponentModel.DescriptionAttribute::get_Description()
		}
		.property instance string DescriptionValue()
		{
			.get instance string System.ComponentModel.DescriptionAttribute::get_DescriptionValue()
			.set instance void System.ComponentModel.DescriptionAttribute::set_DescriptionValue(string)
		}
	}
	.class public sealed DesignOnlyAttribute
		extends [mscorlib]System.Attribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = (01 00 FF 7F 00 00 00 00)
		.method public hidebysig specialname 
			instance void .ctor(bool isDesignOnly)
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsDesignOnly()
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool IsDefaultAttribute()
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool Equals(object obj)
		{
			ret
		}
		.method public virtual hidebysig 
			instance int32 GetHashCode()
		{
			ret
		}
		.field static public initonly class System.ComponentModel.DesignOnlyAttribute Default
		.field static public initonly class System.ComponentModel.DesignOnlyAttribute No
		.field static public initonly class System.ComponentModel.DesignOnlyAttribute Yes
		.property instance bool IsDesignOnly()
		{
			.get instance bool System.ComponentModel.DesignOnlyAttribute::get_IsDesignOnly()
		}
	}
	.class public sealed DesignTimeVisibleAttribute
		extends [mscorlib]System.Attribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = (01 00 04 04 00 00 00 00)
		.method public hidebysig specialname 
			instance void .ctor(bool visible)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_Visible()
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool Equals(object obj)
		{
			ret
		}
		.method public virtual hidebysig 
			instance int32 GetHashCode()
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool IsDefaultAttribute()
		{
			ret
		}
		.field static public initonly class System.ComponentModel.DesignTimeVisibleAttribute Default
		.field static public initonly class System.ComponentModel.DesignTimeVisibleAttribute No
		.field static public initonly class System.ComponentModel.DesignTimeVisibleAttribute Yes
		.property instance bool Visible()
		{
			.get instance bool System.ComponentModel.DesignTimeVisibleAttribute::get_Visible()
		}
	}
	.class public sealed DesignerAttribute
		extends [mscorlib]System.Attribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = (01 00 04 04 00 00 02 00 54 02 0D 41 6C 6C 6F 77 4D 75 6C 74 69 70 6C 65 01 54 02 09 49 6E 68 65 72 69 74 65 64 01)
		.method public hidebysig specialname 
			instance void .ctor(string designerTypeName)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Type designerType)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string designerTypeName, string designerBaseTypeName)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string designerTypeName, class [mscorlib]System.Type designerBaseType)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Type designerType, class [mscorlib]System.Type designerBaseType)
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_DesignerBaseTypeName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_DesignerTypeName()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance object get_TypeId()
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool Equals(object obj)
		{
			ret
		}
		.method public virtual hidebysig 
			instance int32 GetHashCode()
		{
			ret
		}
		.property instance string DesignerBaseTypeName()
		{
			.get instance string System.ComponentModel.DesignerAttribute::get_DesignerBaseTypeName()
		}
		.property instance string DesignerTypeName()
		{
			.get instance string System.ComponentModel.DesignerAttribute::get_DesignerTypeName()
		}
		.property instance object TypeId()
		{
			.get instance object System.ComponentModel.DesignerAttribute::get_TypeId()
		}
	}
	.class public sealed DesignerCategoryAttribute
		extends [mscorlib]System.Attribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = (01 00 04 00 00 00 02 00 54 02 0D 41 6C 6C 6F 77 4D 75 6C 74 69 70 6C 65 00 54 02 09 49 6E 68 65 72 69 74 65 64 01)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string category)
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Category()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance object get_TypeId()
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool Equals(object obj)
		{
			ret
		}
		.method public virtual hidebysig 
			instance int32 GetHashCode()
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool IsDefaultAttribute()
		{
			ret
		}
		.field static public initonly class System.ComponentModel.DesignerCategoryAttribute Component
		.field static public initonly class System.ComponentModel.DesignerCategoryAttribute Default
		.field static public initonly class System.ComponentModel.DesignerCategoryAttribute Form
		.field static public initonly class System.ComponentModel.DesignerCategoryAttribute Generic
		.property instance string Category()
		{
			.get instance string System.ComponentModel.DesignerCategoryAttribute::get_Category()
		}
		.property instance object TypeId()
		{
			.get instance object System.ComponentModel.DesignerCategoryAttribute::get_TypeId()
		}
	}
	.class public sealed DesignerSerializationVisibility
		extends [mscorlib]System.Enum
	{
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype System.ComponentModel.DesignerSerializationVisibility Content = int32(0x00000002)
		.field static public literal valuetype System.ComponentModel.DesignerSerializationVisibility Hidden = int32(0x00000000)
		.field static public literal valuetype System.ComponentModel.DesignerSerializationVisibility Visible = int32(0x00000001)
	}
	.class public sealed DesignerSerializationVisibilityAttribute
		extends [mscorlib]System.Attribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = (01 00 C0 03 00 00 00 00)
		.method public hidebysig specialname 
			instance void .ctor(valuetype System.ComponentModel.DesignerSerializationVisibility visibility)
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype System.ComponentModel.DesignerSerializationVisibility get_Visibility()
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool Equals(object obj)
		{
			ret
		}
		.method public virtual hidebysig 
			instance int32 GetHashCode()
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool IsDefaultAttribute()
		{
			ret
		}
		.field static public initonly class System.ComponentModel.DesignerSerializationVisibilityAttribute Content
		.field static public initonly class System.ComponentModel.DesignerSerializationVisibilityAttribute Default
		.field static public initonly class System.ComponentModel.DesignerSerializationVisibilityAttribute Hidden
		.field static public initonly class System.ComponentModel.DesignerSerializationVisibilityAttribute Visible
		.property instance valuetype System.ComponentModel.DesignerSerializationVisibility Visibility()
		{
			.get instance valuetype System.ComponentModel.DesignerSerializationVisibility System.ComponentModel.DesignerSerializationVisibilityAttribute::get_Visibility()
		}
	}
	.class public DisplayNameAttribute
		extends [mscorlib]System.Attribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = (01 00 C4 02 00 00 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string displayName)
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance string get_DisplayName()
		{
			ret
		}
		.method family hidebysig specialname 
			instance string get_DisplayNameValue()
		{
			ret
		}
		.method family hidebysig specialname 
			instance void set_DisplayNameValue(string 'value')
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool Equals(object obj)
		{
			ret
		}
		.method public virtual hidebysig 
			instance int32 GetHashCode()
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool IsDefaultAttribute()
		{
			ret
		}
		.field static public initonly class System.ComponentModel.DisplayNameAttribute Default
		.property instance string DisplayName()
		{
			.get instance string System.ComponentModel.DisplayNameAttribute::get_DisplayName()
		}
		.property instance string DisplayNameValue()
		{
			.get instance string System.ComponentModel.DisplayNameAttribute::get_DisplayNameValue()
			.set instance void System.ComponentModel.DisplayNameAttribute::set_DisplayNameValue(string)
		}
	}
	.class public DoWorkEventArgs
		extends System.ComponentModel.CancelEventArgs
	{
		.permissionset linkcheck = (00)
		.method public hidebysig specialname 
			instance void .ctor(object argument)
		{
			ret
		}
		.method public hidebysig specialname 
			instance object get_Argument()
		{
			ret
		}
		.method public hidebysig specialname 
			instance object get_Result()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Result(object 'value')
		{
			ret
		}
		.property instance object Argument()
		{
			.get instance object System.ComponentModel.DoWorkEventArgs::get_Argument()
		}
		.property instance object Result()
		{
			.get instance object System.ComponentModel.DoWorkEventArgs::get_Result()
			.set instance void System.ComponentModel.DoWorkEventArgs::set_Result(object)
		}
	}
	.class public sealed DoWorkEventHandler
		extends [mscorlib]System.MulticastDelegate
	{
		.permissionset linkcheck = (00)
		.method public hidebysig specialname 
			instance void .ctor(object 'object', native int 'method')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void Invoke(object sender, class System.ComponentModel.DoWorkEventArgs e)
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance class [mscorlib]System.IAsyncResult BeginInvoke(object sender, class System.ComponentModel.DoWorkEventArgs e, class [mscorlib]System.AsyncCallback callback, object 'object')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void EndInvoke(class [mscorlib]System.IAsyncResult result)
			runtime 
		{
		}
	}
	.class public DoubleConverter
		extends System.ComponentModel.BaseNumberConverter
	{
		.permissionset linkcheck = (00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public sealed EditorAttribute
		extends [mscorlib]System.Attribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = (01 00 FF 7F 00 00 02 00 54 02 0D 41 6C 6C 6F 77 4D 75 6C 74 69 70 6C 65 01 54 02 09 49 6E 68 65 72 69 74 65 64 01)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string typeName, string baseTypeName)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string typeName, class [mscorlib]System.Type baseType)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Type 'type', class [mscorlib]System.Type baseType)
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_EditorBaseTypeName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_EditorTypeName()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance object get_TypeId()
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool Equals(object obj)
		{
			ret
		}
		.method public virtual hidebysig 
			instance int32 GetHashCode()
		{
			ret
		}
		.property instance string EditorBaseTypeName()
		{
			.get instance string System.ComponentModel.EditorAttribute::get_EditorBaseTypeName()
		}
		.property instance string EditorTypeName()
		{
			.get instance string System.ComponentModel.EditorAttribute::get_EditorTypeName()
		}
		.property instance object TypeId()
		{
			.get instance object System.ComponentModel.EditorAttribute::get_TypeId()
		}
	}
	.class public sealed EditorBrowsableAttribute
		extends [mscorlib]System.Attribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = (01 00 FC 17 00 00 00 00)
		.method public hidebysig specialname 
			instance void .ctor(valuetype System.ComponentModel.EditorBrowsableState state)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype System.ComponentModel.EditorBrowsableState get_State()
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool Equals(object obj)
		{
			ret
		}
		.method public virtual hidebysig 
			instance int32 GetHashCode()
		{
			ret
		}
		.property instance valuetype System.ComponentModel.EditorBrowsableState State()
		{
			.get instance valuetype System.ComponentModel.EditorBrowsableState System.ComponentModel.EditorBrowsableAttribute::get_State()
		}
	}
	.class public sealed EditorBrowsableState
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype System.ComponentModel.EditorBrowsableState Advanced = int32(0x00000002)
		.field static public literal valuetype System.ComponentModel.EditorBrowsableState Always = int32(0x00000000)
		.field static public literal valuetype System.ComponentModel.EditorBrowsableState Never = int32(0x00000001)
	}
	.class public EnumConverter
		extends System.ComponentModel.TypeConverter
	{
		.permissionset linkcheck = (00)
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Type 'type')
		{
			ret
		}
		.method family hidebysig specialname 
			instance class [mscorlib]System.Type get_EnumType()
		{
			ret
		}
		.method family hidebysig specialname 
			instance class System.ComponentModel.TypeConverter/StandardValuesCollection get_Values()
		{
			ret
		}
		.method family hidebysig specialname 
			instance void set_Values(class System.ComponentModel.TypeConverter/StandardValuesCollection 'value')
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Type sourceType)
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Type destinationType)
		{
			ret
		}
		.method family virtual hidebysig newslot specialname 
			instance class [mscorlib]System.Collections.IComparer get_Comparer()
		{
			ret
		}
		.method public virtual hidebysig 
			instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Globalization.CultureInfo culture, object 'value')
		{
			ret
		}
		.method public virtual hidebysig 
			instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Globalization.CultureInfo culture, object 'value', class [mscorlib]System.Type destinationType)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class System.ComponentModel.TypeConverter/StandardValuesCollection GetStandardValues(class System.ComponentModel.ITypeDescriptorContext context)
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool GetStandardValuesExclusive(class System.ComponentModel.ITypeDescriptorContext context)
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool GetStandardValuesSupported(class System.ComponentModel.ITypeDescriptorContext context)
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool IsValid(class System.ComponentModel.ITypeDescriptorContext context, object 'value')
		{
			ret
		}
		.property instance class [mscorlib]System.Collections.IComparer Comparer()
		{
			.get instance class [mscorlib]System.Collections.IComparer System.ComponentModel.EnumConverter::get_Comparer()
		}
		.property instance class [mscorlib]System.Type EnumType()
		{
			.get instance class [mscorlib]System.Type System.ComponentModel.EnumConverter::get_EnumType()
		}
		.property instance class System.ComponentModel.TypeConverter/StandardValuesCollection Values()
		{
			.get instance class System.ComponentModel.TypeConverter/StandardValuesCollection System.ComponentModel.EnumConverter::get_Values()
			.set instance void System.ComponentModel.EnumConverter::set_Values(class System.ComponentModel.TypeConverter/StandardValuesCollection)
		}
	}
	.class public abstract EventDescriptor
		extends System.ComponentModel.MemberDescriptor
	{
		.permissionset linkcheck = (00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method family hidebysig specialname 
			instance void .ctor(string name, class [mscorlib]System.Attribute[] attrs)
		{
			ret
		}
		.method family hidebysig specialname 
			instance void .ctor(class System.ComponentModel.MemberDescriptor descr)
		{
			ret
		}
		.method family hidebysig specialname 
			instance void .ctor(class System.ComponentModel.MemberDescriptor descr, class [mscorlib]System.Attribute[] attrs)
		{
			ret
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance class [mscorlib]System.Type get_ComponentType()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance class [mscorlib]System.Type get_EventType()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance bool get_IsMulticast()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void AddEventHandler(object component, class [mscorlib]System.Delegate 'value')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void RemoveEventHandler(object component, class [mscorlib]System.Delegate 'value')
		{
		}
		.property instance class [mscorlib]System.Type ComponentType()
		{
			.get instance class [mscorlib]System.Type System.ComponentModel.EventDescriptor::get_ComponentType()
		}
		.property instance class [mscorlib]System.Type EventType()
		{
			.get instance class [mscorlib]System.Type System.ComponentModel.EventDescriptor::get_EventType()
		}
		.property instance bool IsMulticast()
		{
			.get instance bool System.ComponentModel.EventDescriptor::get_IsMulticast()
		}
	}
	.class public EventDescriptorCollection
		extends [mscorlib]System.Object
		implements [mscorlib]System.Collections.IList, [mscorlib]System.Collections.ICollection, [mscorlib]System.Collections.IEnumerable
	{
		.permissionset linkcheck = (00)
		.custom instance void [mscorlib]System.Reflection.DefaultMemberAttribute::.ctor(string) = (01 00 04 49 74 65 6D 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method public hidebysig specialname 
			instance void .ctor(class System.ComponentModel.EventDescriptor[] events)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class System.ComponentModel.EventDescriptor[] events, bool readOnly)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_Count()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance class System.ComponentModel.EventDescriptor get_Item(int32 index)
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance class System.ComponentModel.EventDescriptor get_Item(string name)
		{
			ret
		}
		.method public hidebysig 
			instance int32 Add(class System.ComponentModel.EventDescriptor 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void Clear()
		{
			ret
		}
		.method public hidebysig 
			instance bool Contains(class System.ComponentModel.EventDescriptor 'value')
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Collections.ICollection.CopyTo(class [mscorlib]System.Array 'array', int32 index)
		{
			.override [mscorlib]System.Collections.ICollection::CopyTo
			ret
		}
		.method public virtual hidebysig newslot 
			instance class System.ComponentModel.EventDescriptor Find(string name, bool ignoreCase)
		{
			ret
		}
		.method public hidebysig 
			instance int32 IndexOf(class System.ComponentModel.EventDescriptor 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void Insert(int32 index, class System.ComponentModel.EventDescriptor 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void Remove(class System.ComponentModel.EventDescriptor 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void RemoveAt(int32 index)
		{
			ret
		}
		.method public hidebysig 
			instance class [mscorlib]System.Collections.IEnumerator GetEnumerator()
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance class System.ComponentModel.EventDescriptorCollection Sort()
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance class System.ComponentModel.EventDescriptorCollection Sort(string[] names)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance class System.ComponentModel.EventDescriptorCollection Sort(string[] names, class [mscorlib]System.Collections.IComparer comparer)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance class System.ComponentModel.EventDescriptorCollection Sort(class [mscorlib]System.Collections.IComparer comparer)
		{
			ret
		}
		.method family hidebysig 
			instance void InternalSort(string[] names)
		{
			ret
		}
		.method family hidebysig 
			instance void InternalSort(class [mscorlib]System.Collections.IComparer sorter)
		{
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance int32 System.Collections.ICollection.get_Count()
		{
			.override [mscorlib]System.Collections.ICollection::get_Count
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance bool System.Collections.ICollection.get_IsSynchronized()
		{
			.override [mscorlib]System.Collections.ICollection::get_IsSynchronized
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance object System.Collections.ICollection.get_SyncRoot()
		{
			.override [mscorlib]System.Collections.ICollection::get_SyncRoot
			ret
		}
		.method private final virtual hidebysig newslot 
			instance class [mscorlib]System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			.override [mscorlib]System.Collections.IEnumerable::GetEnumerator
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance object System.Collections.IList.get_Item(int32 index)
		{
			.override [mscorlib]System.Collections.IList::get_Item
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance void System.Collections.IList.set_Item(int32 index, object 'value')
		{
			.override [mscorlib]System.Collections.IList::set_Item
			ret
		}
		.method private final virtual hidebysig newslot 
			instance int32 System.Collections.IList.Add(object 'value')
		{
			.override [mscorlib]System.Collections.IList::Add
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Collections.IList.Clear()
		{
			.override [mscorlib]System.Collections.IList::Clear
			ret
		}
		.method private final virtual hidebysig newslot 
			instance bool System.Collections.IList.Contains(object 'value')
		{
			.override [mscorlib]System.Collections.IList::Contains
			ret
		}
		.method private final virtual hidebysig newslot 
			instance int32 System.Collections.IList.IndexOf(object 'value')
		{
			.override [mscorlib]System.Collections.IList::IndexOf
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Collections.IList.Insert(int32 index, object 'value')
		{
			.override [mscorlib]System.Collections.IList::Insert
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Collections.IList.Remove(object 'value')
		{
			.override [mscorlib]System.Collections.IList::Remove
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Collections.IList.RemoveAt(int32 index)
		{
			.override [mscorlib]System.Collections.IList::RemoveAt
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance bool System.Collections.IList.get_IsReadOnly()
		{
			.override [mscorlib]System.Collections.IList::get_IsReadOnly
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance bool System.Collections.IList.get_IsFixedSize()
		{
			.override [mscorlib]System.Collections.IList::get_IsFixedSize
			ret
		}
		.field static public initonly class System.ComponentModel.EventDescriptorCollection Empty
		.property instance int32 Count()
		{
			.get instance int32 System.ComponentModel.EventDescriptorCollection::get_Count()
		}
		.property instance class System.ComponentModel.EventDescriptor Item(int32)
		{
			.get instance class System.ComponentModel.EventDescriptor System.ComponentModel.EventDescriptorCollection::get_Item(int32)
		}
		.property instance class System.ComponentModel.EventDescriptor Item(string)
		{
			.get instance class System.ComponentModel.EventDescriptor System.ComponentModel.EventDescriptorCollection::get_Item(string)
		}
		.property instance int32 System.Collections.ICollection.Count()
		{
			.get instance int32 System.ComponentModel.EventDescriptorCollection::System.Collections.ICollection.get_Count()
		}
		.property instance bool System.Collections.ICollection.IsSynchronized()
		{
			.get instance bool System.ComponentModel.EventDescriptorCollection::System.Collections.ICollection.get_IsSynchronized()
		}
		.property instance object System.Collections.ICollection.SyncRoot()
		{
			.get instance object System.ComponentModel.EventDescriptorCollection::System.Collections.ICollection.get_SyncRoot()
		}
		.property instance bool System.Collections.IList.IsFixedSize()
		{
			.get instance bool System.ComponentModel.EventDescriptorCollection::System.Collections.IList.get_IsFixedSize()
		}
		.property instance bool System.Collections.IList.IsReadOnly()
		{
			.get instance bool System.ComponentModel.EventDescriptorCollection::System.Collections.IList.get_IsReadOnly()
		}
		.property instance object System.Collections.IList.Item(int32)
		{
			.get instance object System.ComponentModel.EventDescriptorCollection::System.Collections.IList.get_Item(int32)
			.set instance void System.ComponentModel.EventDescriptorCollection::System.Collections.IList.set_Item(int32, object)
		}
	}
	.class public sealed EventHandlerList
		extends [mscorlib]System.Object
		implements [mscorlib]System.IDisposable
	{
		.permissionset linkcheck = (00)
		.custom instance void [mscorlib]System.Reflection.DefaultMemberAttribute::.ctor(string) = (01 00 04 49 74 65 6D 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]System.Delegate get_Item(object key)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Item(object key, class [mscorlib]System.Delegate 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void AddHandler(object key, class [mscorlib]System.Delegate 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void AddHandlers(class System.ComponentModel.EventHandlerList listToAddFrom)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void Dispose()
		{
			ret
		}
		.method public hidebysig 
			instance void RemoveHandler(object key, class [mscorlib]System.Delegate 'value')
		{
			ret
		}
		.property instance class [mscorlib]System.Delegate Item(object)
		{
			.get instance class [mscorlib]System.Delegate System.ComponentModel.EventHandlerList::get_Item(object)
			.set instance void System.ComponentModel.EventHandlerList::set_Item(object, class [mscorlib]System.Delegate)
		}
	}
	.class public ExpandableObjectConverter
		extends System.ComponentModel.TypeConverter
	{
		.permissionset linkcheck = (00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public virtual hidebysig 
			instance class System.ComponentModel.PropertyDescriptorCollection GetProperties(class System.ComponentModel.ITypeDescriptorContext context, object 'value', class [mscorlib]System.Attribute[] attributes)
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool GetPropertiesSupported(class System.ComponentModel.ITypeDescriptorContext context)
		{
			ret
		}
	}
	.class public sealed ExtenderProvidedPropertyAttribute
		extends [mscorlib]System.Attribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = (01 00 FF 7F 00 00 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.ComponentModel.PropertyDescriptor get_ExtenderProperty()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.ComponentModel.IExtenderProvider get_Provider()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]System.Type get_ReceiverType()
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool Equals(object obj)
		{
			ret
		}
		.method public virtual hidebysig 
			instance int32 GetHashCode()
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool IsDefaultAttribute()
		{
			ret
		}
		.property instance class System.ComponentModel.PropertyDescriptor ExtenderProperty()
		{
			.get instance class System.ComponentModel.PropertyDescriptor System.ComponentModel.ExtenderProvidedPropertyAttribute::get_ExtenderProperty()
		}
		.property instance class System.ComponentModel.IExtenderProvider Provider()
		{
			.get instance class System.ComponentModel.IExtenderProvider System.ComponentModel.ExtenderProvidedPropertyAttribute::get_Provider()
		}
		.property instance class [mscorlib]System.Type ReceiverType()
		{
			.get instance class [mscorlib]System.Type System.ComponentModel.ExtenderProvidedPropertyAttribute::get_ReceiverType()
		}
	}
	.class public GuidConverter
		extends System.ComponentModel.TypeConverter
	{
		.permissionset linkcheck = (00)
		.method public virtual hidebysig 
			instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Type sourceType)
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Type destinationType)
		{
			ret
		}
		.method public virtual hidebysig 
			instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Globalization.CultureInfo culture, object 'value')
		{
			ret
		}
		.method public virtual hidebysig 
			instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Globalization.CultureInfo culture, object 'value', class [mscorlib]System.Type destinationType)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public HandledEventArgs
		extends [mscorlib]System.EventArgs
	{
		.permissionset linkcheck = (00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(bool defaultHandledValue)
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_Handled()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Handled(bool 'value')
		{
			ret
		}
		.property instance bool Handled()
		{
			.get instance bool System.ComponentModel.HandledEventArgs::get_Handled()
			.set instance void System.ComponentModel.HandledEventArgs::set_Handled(bool)
		}
	}
	.class public sealed HandledEventHandler
		extends [mscorlib]System.MulticastDelegate
	{
		.permissionset linkcheck = (00)
		.method public hidebysig specialname 
			instance void .ctor(object 'object', native int 'method')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void Invoke(object sender, class System.ComponentModel.HandledEventArgs e)
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance class [mscorlib]System.IAsyncResult BeginInvoke(object sender, class System.ComponentModel.HandledEventArgs e, class [mscorlib]System.AsyncCallback callback, object 'object')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void EndInvoke(class [mscorlib]System.IAsyncResult result)
			runtime 
		{
		}
	}
	.class public interface abstract IBindingList
		implements [mscorlib]System.Collections.IList, [mscorlib]System.Collections.ICollection, [mscorlib]System.Collections.IEnumerable
	{
		.method public virtual hidebysig newslot abstract specialname 
			instance bool get_AllowNew()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance object AddNew()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance bool get_AllowEdit()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance bool get_AllowRemove()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance bool get_SupportsChangeNotification()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance bool get_SupportsSearching()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance bool get_SupportsSorting()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance bool get_IsSorted()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance class System.ComponentModel.PropertyDescriptor get_SortProperty()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance valuetype System.ComponentModel.ListSortDirection get_SortDirection()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void add_ListChanged(class System.ComponentModel.ListChangedEventHandler 'value')
			synchronized 
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void remove_ListChanged(class System.ComponentModel.ListChangedEventHandler 'value')
			synchronized 
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void AddIndex(class System.ComponentModel.PropertyDescriptor 'property')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void ApplySort(class System.ComponentModel.PropertyDescriptor 'property', valuetype System.ComponentModel.ListSortDirection direction)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance int32 Find(class System.ComponentModel.PropertyDescriptor 'property', object key)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void RemoveIndex(class System.ComponentModel.PropertyDescriptor 'property')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void RemoveSort()
		{
		}
		.event System.ComponentModel.ListChangedEventHandler ListChanged
		{
			.addon instance void System.ComponentModel.IBindingList::add_ListChanged(class System.ComponentModel.ListChangedEventHandler)
			.removeon instance void System.ComponentModel.IBindingList::remove_ListChanged(class System.ComponentModel.ListChangedEventHandler)
		}
		.property instance bool AllowEdit()
		{
			.get instance bool System.ComponentModel.IBindingList::get_AllowEdit()
		}
		.property instance bool AllowNew()
		{
			.get instance bool System.ComponentModel.IBindingList::get_AllowNew()
		}
		.property instance bool AllowRemove()
		{
			.get instance bool System.ComponentModel.IBindingList::get_AllowRemove()
		}
		.property instance bool IsSorted()
		{
			.get instance bool System.ComponentModel.IBindingList::get_IsSorted()
		}
		.property instance valuetype System.ComponentModel.ListSortDirection SortDirection()
		{
			.get instance valuetype System.ComponentModel.ListSortDirection System.ComponentModel.IBindingList::get_SortDirection()
		}
		.property instance class System.ComponentModel.PropertyDescriptor SortProperty()
		{
			.get instance class System.ComponentModel.PropertyDescriptor System.ComponentModel.IBindingList::get_SortProperty()
		}
		.property instance bool SupportsChangeNotification()
		{
			.get instance bool System.ComponentModel.IBindingList::get_SupportsChangeNotification()
		}
		.property instance bool SupportsSearching()
		{
			.get instance bool System.ComponentModel.IBindingList::get_SupportsSearching()
		}
		.property instance bool SupportsSorting()
		{
			.get instance bool System.ComponentModel.IBindingList::get_SupportsSorting()
		}
	}
	.class public interface abstract IBindingListView
		implements System.ComponentModel.IBindingList, [mscorlib]System.Collections.IList, [mscorlib]System.Collections.ICollection, [mscorlib]System.Collections.IEnumerable
	{
		.method public virtual hidebysig newslot abstract 
			instance void ApplySort(class System.ComponentModel.ListSortDescriptionCollection sorts)
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance string get_Filter()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void set_Filter(string 'value')
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance class System.ComponentModel.ListSortDescriptionCollection get_SortDescriptions()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void RemoveFilter()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance bool get_SupportsAdvancedSorting()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance bool get_SupportsFiltering()
		{
		}
		.property instance string Filter()
		{
			.get instance string System.ComponentModel.IBindingListView::get_Filter()
			.set instance void System.ComponentModel.IBindingListView::set_Filter(string)
		}
		.property instance class System.ComponentModel.ListSortDescriptionCollection SortDescriptions()
		{
			.get instance class System.ComponentModel.ListSortDescriptionCollection System.ComponentModel.IBindingListView::get_SortDescriptions()
		}
		.property instance bool SupportsAdvancedSorting()
		{
			.get instance bool System.ComponentModel.IBindingListView::get_SupportsAdvancedSorting()
		}
		.property instance bool SupportsFiltering()
		{
			.get instance bool System.ComponentModel.IBindingListView::get_SupportsFiltering()
		}
	}
	.class public interface abstract ICancelAddNew
	{
		.method public virtual hidebysig newslot abstract 
			instance void CancelNew(int32 itemIndex)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void EndNew(int32 itemIndex)
		{
		}
	}
	.class public interface abstract IChangeTracking
	{
		.method public virtual hidebysig newslot abstract specialname 
			instance bool get_IsChanged()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void AcceptChanges()
		{
		}
		.property instance bool IsChanged()
		{
			.get instance bool System.ComponentModel.IChangeTracking::get_IsChanged()
		}
	}
	.class public interface abstract IComNativeDescriptorHandler
	{
		.custom instance void [mscorlib]System.ObsoleteAttribute::.ctor(string) = (01 00 80 A4 54 68 69 73 20 69 6E 74 65 72 66 61 63 65 20 68 61 73 20 62 65 65 6E 20 64 65 70 72 65 63 61 74 65 64 2E 20 41 64 64 20 61 20 54 79 70 65 44 65 73 63 72 69 70 74 69 6F 6E 50 72 6F 76 69 64 65 72 20 74 6F 20 68 61 6E 64 6C 65 20 74 79 70 65 20 54 79 70 65 44 65 73 63 72 69 70 74 6F 72 2E 43 6F 6D 4F 62 6A 65 63 74 54 79 70 65 20 69 6E 73 74 65 61 64 2E 20 20 68 74 74 70 3A 2F 2F 67 6F 2E 6D 69 63 72 6F 73 6F 66 74 2E 63 6F 6D 2F 66 77 6C 69 6E 6B 2F 3F 6C 69 6E 6B 69 64 3D 31 34 32 30 32 00 00)
		.method public virtual hidebysig newslot abstract 
			instance class System.ComponentModel.AttributeCollection GetAttributes(object component)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance string GetClassName(object component)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class System.ComponentModel.TypeConverter GetConverter(object component)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class System.ComponentModel.EventDescriptor GetDefaultEvent(object component)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class System.ComponentModel.PropertyDescriptor GetDefaultProperty(object component)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance object GetEditor(object component, class [mscorlib]System.Type baseEditorType)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance string GetName(object component)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class System.ComponentModel.EventDescriptorCollection GetEvents(object component)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class System.ComponentModel.EventDescriptorCollection GetEvents(object component, class [mscorlib]System.Attribute[] attributes)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class System.ComponentModel.PropertyDescriptorCollection GetProperties(object component, class [mscorlib]System.Attribute[] attributes)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance object GetPropertyValue(object component, string propertyName, bool& success)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance object GetPropertyValue(object component, int32 dispid, bool& success)
		{
		}
	}
	.class public interface abstract IComponent
		implements [mscorlib]System.IDisposable
	{
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method public virtual hidebysig newslot abstract specialname 
			instance class System.ComponentModel.ISite get_Site()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void set_Site(class System.ComponentModel.ISite 'value')
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void add_Disposed(class [mscorlib]System.EventHandler 'value')
			synchronized 
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void remove_Disposed(class [mscorlib]System.EventHandler 'value')
			synchronized 
		{
		}
		.event [mscorlib]System.EventHandler Disposed
		{
			.addon instance void System.ComponentModel.IComponent::add_Disposed(class [mscorlib]System.EventHandler)
			.removeon instance void System.ComponentModel.IComponent::remove_Disposed(class [mscorlib]System.EventHandler)
		}
		.property instance class System.ComponentModel.ISite Site()
		{
			.get instance class System.ComponentModel.ISite System.ComponentModel.IComponent::get_Site()
			.set instance void System.ComponentModel.IComponent::set_Site(class System.ComponentModel.ISite)
		}
	}
	.class public interface abstract IContainer
		implements [mscorlib]System.IDisposable
	{
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method public virtual hidebysig newslot abstract 
			instance void Add(class System.ComponentModel.IComponent component)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void Add(class System.ComponentModel.IComponent component, string name)
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance class System.ComponentModel.ComponentCollection get_Components()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void Remove(class System.ComponentModel.IComponent component)
		{
		}
		.property instance class System.ComponentModel.ComponentCollection Components()
		{
			.get instance class System.ComponentModel.ComponentCollection System.ComponentModel.IContainer::get_Components()
		}
	}
	.class public interface abstract ICustomTypeDescriptor
	{
		.method public virtual hidebysig newslot abstract 
			instance class System.ComponentModel.AttributeCollection GetAttributes()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance string GetClassName()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance string GetComponentName()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class System.ComponentModel.TypeConverter GetConverter()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class System.ComponentModel.EventDescriptor GetDefaultEvent()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class System.ComponentModel.PropertyDescriptor GetDefaultProperty()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance object GetEditor(class [mscorlib]System.Type editorBaseType)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class System.ComponentModel.EventDescriptorCollection GetEvents()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class System.ComponentModel.EventDescriptorCollection GetEvents(class [mscorlib]System.Attribute[] attributes)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class System.ComponentModel.PropertyDescriptorCollection GetProperties()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class System.ComponentModel.PropertyDescriptorCollection GetProperties(class [mscorlib]System.Attribute[] attributes)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance object GetPropertyOwner(class System.ComponentModel.PropertyDescriptor pd)
		{
		}
	}
	.class public interface abstract IDataErrorInfo
	{
		.custom instance void [mscorlib]System.Reflection.DefaultMemberAttribute::.ctor(string) = (01 00 04 49 74 65 6D 00 00)
		.method public virtual hidebysig newslot abstract specialname 
			instance string get_Item(string columnName)
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance string get_Error()
		{
		}
		.property instance string Error()
		{
			.get instance string System.ComponentModel.IDataErrorInfo::get_Error()
		}
		.property instance string Item(string)
		{
			.get instance string System.ComponentModel.IDataErrorInfo::get_Item(string)
		}
	}
	.class public interface abstract IEditableObject
	{
		.method public virtual hidebysig newslot abstract 
			instance void BeginEdit()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void EndEdit()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void CancelEdit()
		{
		}
	}
	.class public interface abstract IExtenderProvider
	{
		.method public virtual hidebysig newslot abstract 
			instance bool CanExtend(object extendee)
		{
		}
	}
	.class public interface abstract IIntellisenseBuilder
	{
		.method public virtual hidebysig newslot abstract specialname 
			instance string get_Name()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance bool Show(string language, string 'value', string& newValue)
		{
		}
		.property instance string Name()
		{
			.get instance string System.ComponentModel.IIntellisenseBuilder::get_Name()
		}
	}
	.class public interface abstract IListSource
	{
		.method public virtual hidebysig newslot abstract specialname 
			instance bool get_ContainsListCollection()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class [mscorlib]System.Collections.IList GetList()
		{
		}
		.property instance bool ContainsListCollection()
		{
			.get instance bool System.ComponentModel.IListSource::get_ContainsListCollection()
		}
	}
	.class public interface abstract INestedContainer
		implements System.ComponentModel.IContainer, [mscorlib]System.IDisposable
	{
		.method public virtual hidebysig newslot abstract specialname 
			instance class System.ComponentModel.IComponent get_Owner()
		{
		}
		.property instance class System.ComponentModel.IComponent Owner()
		{
			.get instance class System.ComponentModel.IComponent System.ComponentModel.INestedContainer::get_Owner()
		}
	}
	.class public interface abstract INestedSite
		implements System.ComponentModel.ISite, [mscorlib]System.IServiceProvider
	{
		.method public virtual hidebysig newslot abstract specialname 
			instance string get_FullName()
		{
		}
		.property instance string FullName()
		{
			.get instance string System.ComponentModel.INestedSite::get_FullName()
		}
	}
	.class public interface abstract INotifyPropertyChanged
	{
		.method public virtual hidebysig newslot abstract specialname 
			instance void add_PropertyChanged(class System.ComponentModel.PropertyChangedEventHandler 'value')
			synchronized 
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void remove_PropertyChanged(class System.ComponentModel.PropertyChangedEventHandler 'value')
			synchronized 
		{
		}
		.event System.ComponentModel.PropertyChangedEventHandler PropertyChanged
		{
			.addon instance void System.ComponentModel.INotifyPropertyChanged::add_PropertyChanged(class System.ComponentModel.PropertyChangedEventHandler)
			.removeon instance void System.ComponentModel.INotifyPropertyChanged::remove_PropertyChanged(class System.ComponentModel.PropertyChangedEventHandler)
		}
	}
	.class public interface abstract IRaiseItemChangedEvents
	{
		.method public virtual hidebysig newslot abstract specialname 
			instance bool get_RaisesItemChangedEvents()
		{
		}
		.property instance bool RaisesItemChangedEvents()
		{
			.get instance bool System.ComponentModel.IRaiseItemChangedEvents::get_RaisesItemChangedEvents()
		}
	}
	.class public interface abstract IRevertibleChangeTracking
		implements System.ComponentModel.IChangeTracking
	{
		.method public virtual hidebysig newslot abstract 
			instance void RejectChanges()
		{
		}
	}
	.class public interface abstract ISite
		implements [mscorlib]System.IServiceProvider
	{
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method public virtual hidebysig newslot abstract specialname 
			instance class System.ComponentModel.IComponent get_Component()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance class System.ComponentModel.IContainer get_Container()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance bool get_DesignMode()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance string get_Name()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void set_Name(string 'value')
		{
		}
		.property instance class System.ComponentModel.IComponent Component()
		{
			.get instance class System.ComponentModel.IComponent System.ComponentModel.ISite::get_Component()
		}
		.property instance class System.ComponentModel.IContainer Container()
		{
			.get instance class System.ComponentModel.IContainer System.ComponentModel.ISite::get_Container()
		}
		.property instance bool DesignMode()
		{
			.get instance bool System.ComponentModel.ISite::get_DesignMode()
		}
		.property instance string Name()
		{
			.get instance string System.ComponentModel.ISite::get_Name()
			.set instance void System.ComponentModel.ISite::set_Name(string)
		}
	}
	.class public interface abstract ISupportInitialize
	{
		.method public virtual hidebysig newslot abstract 
			instance void BeginInit()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void EndInit()
		{
		}
	}
	.class public interface abstract ISynchronizeInvoke
	{
		.method public virtual hidebysig newslot abstract specialname 
			instance bool get_InvokeRequired()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class [mscorlib]System.IAsyncResult BeginInvoke(class [mscorlib]System.Delegate 'method', object[] args)
		{
			.permissionset linkcheck = (00)
		}
		.method public virtual hidebysig newslot abstract 
			instance object EndInvoke(class [mscorlib]System.IAsyncResult result)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance object Invoke(class [mscorlib]System.Delegate 'method', object[] args)
		{
		}
		.property instance bool InvokeRequired()
		{
			.get instance bool System.ComponentModel.ISynchronizeInvoke::get_InvokeRequired()
		}
	}
	.class public interface abstract ITypeDescriptorContext
		implements [mscorlib]System.IServiceProvider
	{
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method public virtual hidebysig newslot abstract specialname 
			instance class System.ComponentModel.IContainer get_Container()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance object get_Instance()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance class System.ComponentModel.PropertyDescriptor get_PropertyDescriptor()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance bool OnComponentChanging()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void OnComponentChanged()
		{
		}
		.property instance class System.ComponentModel.IContainer Container()
		{
			.get instance class System.ComponentModel.IContainer System.ComponentModel.ITypeDescriptorContext::get_Container()
		}
		.property instance object Instance()
		{
			.get instance object System.ComponentModel.ITypeDescriptorContext::get_Instance()
		}
		.property instance class System.ComponentModel.PropertyDescriptor PropertyDescriptor()
		{
			.get instance class System.ComponentModel.PropertyDescriptor System.ComponentModel.ITypeDescriptorContext::get_PropertyDescriptor()
		}
	}
	.class public interface abstract ITypedList
	{
		.method public virtual hidebysig newslot abstract 
			instance string GetListName(class System.ComponentModel.PropertyDescriptor[] listAccessors)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class System.ComponentModel.PropertyDescriptorCollection GetItemProperties(class System.ComponentModel.PropertyDescriptor[] listAccessors)
		{
		}
	}
	.class public sealed ImmutableObjectAttribute
		extends [mscorlib]System.Attribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = (01 00 FF 7F 00 00 00 00)
		.method public hidebysig specialname 
			instance void .ctor(bool immutable)
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_Immutable()
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool Equals(object obj)
		{
			ret
		}
		.method public virtual hidebysig 
			instance int32 GetHashCode()
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool IsDefaultAttribute()
		{
			ret
		}
		.field static public initonly class System.ComponentModel.ImmutableObjectAttribute Default
		.field static public initonly class System.ComponentModel.ImmutableObjectAttribute No
		.field static public initonly class System.ComponentModel.ImmutableObjectAttribute Yes
		.property instance bool Immutable()
		{
			.get instance bool System.ComponentModel.ImmutableObjectAttribute::get_Immutable()
		}
	}
	.class public sealed InheritanceAttribute
		extends [mscorlib]System.Attribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = (01 00 80 03 00 00 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(valuetype System.ComponentModel.InheritanceLevel inheritanceLevel)
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype System.ComponentModel.InheritanceLevel get_InheritanceLevel()
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool Equals(object 'value')
		{
			ret
		}
		.method public virtual hidebysig 
			instance int32 GetHashCode()
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool IsDefaultAttribute()
		{
			ret
		}
		.method public virtual hidebysig 
			instance string ToString()
		{
			ret
		}
		.field static public initonly class System.ComponentModel.InheritanceAttribute Default
		.field static public initonly class System.ComponentModel.InheritanceAttribute Inherited
		.field static public initonly class System.ComponentModel.InheritanceAttribute InheritedReadOnly
		.field static public initonly class System.ComponentModel.InheritanceAttribute NotInherited
		.property instance valuetype System.ComponentModel.InheritanceLevel InheritanceLevel()
		{
			.get instance valuetype System.ComponentModel.InheritanceLevel System.ComponentModel.InheritanceAttribute::get_InheritanceLevel()
		}
	}
	.class public sealed InheritanceLevel
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype System.ComponentModel.InheritanceLevel Inherited = int32(0x00000001)
		.field static public literal valuetype System.ComponentModel.InheritanceLevel InheritedReadOnly = int32(0x00000002)
		.field static public literal valuetype System.ComponentModel.InheritanceLevel NotInherited = int32(0x00000003)
	}
	.class public sealed InitializationEventAttribute
		extends [mscorlib]System.Attribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = (01 00 04 00 00 00 00 00)
		.method public hidebysig specialname 
			instance void .ctor(string eventName)
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_EventName()
		{
			ret
		}
		.property instance string EventName()
		{
			.get instance string System.ComponentModel.InitializationEventAttribute::get_EventName()
		}
	}
	.class public InstallerTypeAttribute
		extends [mscorlib]System.Attribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = (01 00 04 00 00 00 00 00)
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Type installerType)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string typeName)
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance class [mscorlib]System.Type get_InstallerType()
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool Equals(object obj)
		{
			ret
		}
		.method public virtual hidebysig 
			instance int32 GetHashCode()
		{
			ret
		}
		.property instance class [mscorlib]System.Type InstallerType()
		{
			.get instance class [mscorlib]System.Type System.ComponentModel.InstallerTypeAttribute::get_InstallerType()
		}
	}
	.class public abstract InstanceCreationEditor
		extends [mscorlib]System.Object
	{
		.permissionset linkcheck = (00)
		.method public virtual hidebysig newslot specialname 
			instance string get_Text()
		{
			ret
		}
		.method public virtual hidebysig newslot abstract 
			instance object CreateInstance(class System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Type instanceType)
		{
		}
		.method family hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance string Text()
		{
			.get instance string System.ComponentModel.InstanceCreationEditor::get_Text()
		}
	}
	.class public Int16Converter
		extends System.ComponentModel.BaseNumberConverter
	{
		.permissionset linkcheck = (00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public Int32Converter
		extends System.ComponentModel.BaseNumberConverter
	{
		.permissionset linkcheck = (00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public Int64Converter
		extends System.ComponentModel.BaseNumberConverter
	{
		.permissionset linkcheck = (00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public serializable InvalidAsynchronousStateException
		extends [mscorlib]System.ArgumentException
	{
		.permissionset linkcheck = (00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string message)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string message, class [mscorlib]System.Exception innerException)
		{
			ret
		}
		.method family hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Runtime.Serialization.SerializationInfo info, valuetype [mscorlib]System.Runtime.Serialization.StreamingContext context)
		{
			ret
		}
	}
	.class public serializable InvalidEnumArgumentException
		extends [mscorlib]System.ArgumentException
	{
		.permissionset linkcheck = (00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string message)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string message, class [mscorlib]System.Exception innerException)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string argumentName, int32 invalidValue, class [mscorlib]System.Type enumClass)
		{
			ret
		}
		.method family hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Runtime.Serialization.SerializationInfo info, valuetype [mscorlib]System.Runtime.Serialization.StreamingContext context)
		{
			ret
		}
	}
	.class public sealed ListBindableAttribute
		extends [mscorlib]System.Attribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = (01 00 FF 7F 00 00 00 00)
		.method public hidebysig specialname 
			instance void .ctor(bool listBindable)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(valuetype System.ComponentModel.BindableSupport 'flags')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_ListBindable()
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool Equals(object obj)
		{
			ret
		}
		.method public virtual hidebysig 
			instance int32 GetHashCode()
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool IsDefaultAttribute()
		{
			ret
		}
		.field static public initonly class System.ComponentModel.ListBindableAttribute Default
		.field static public initonly class System.ComponentModel.ListBindableAttribute No
		.field static public initonly class System.ComponentModel.ListBindableAttribute Yes
		.property instance bool ListBindable()
		{
			.get instance bool System.ComponentModel.ListBindableAttribute::get_ListBindable()
		}
	}
	.class public ListChangedEventArgs
		extends [mscorlib]System.EventArgs
	{
		.permissionset linkcheck = (00)
		.method public hidebysig specialname 
			instance void .ctor(valuetype System.ComponentModel.ListChangedType listChangedType, int32 newIndex)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(valuetype System.ComponentModel.ListChangedType listChangedType, int32 newIndex, class System.ComponentModel.PropertyDescriptor propDesc)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(valuetype System.ComponentModel.ListChangedType listChangedType, class System.ComponentModel.PropertyDescriptor propDesc)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(valuetype System.ComponentModel.ListChangedType listChangedType, int32 newIndex, int32 oldIndex)
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype System.ComponentModel.ListChangedType get_ListChangedType()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_NewIndex()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_OldIndex()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.ComponentModel.PropertyDescriptor get_PropertyDescriptor()
		{
			ret
		}
		.property instance valuetype System.ComponentModel.ListChangedType ListChangedType()
		{
			.get instance valuetype System.ComponentModel.ListChangedType System.ComponentModel.ListChangedEventArgs::get_ListChangedType()
		}
		.property instance int32 NewIndex()
		{
			.get instance int32 System.ComponentModel.ListChangedEventArgs::get_NewIndex()
		}
		.property instance int32 OldIndex()
		{
			.get instance int32 System.ComponentModel.ListChangedEventArgs::get_OldIndex()
		}
		.property instance class System.ComponentModel.PropertyDescriptor PropertyDescriptor()
		{
			.get instance class System.ComponentModel.PropertyDescriptor System.ComponentModel.ListChangedEventArgs::get_PropertyDescriptor()
		}
	}
	.class public sealed ListChangedEventHandler
		extends [mscorlib]System.MulticastDelegate
	{
		.permissionset linkcheck = (00)
		.method public hidebysig specialname 
			instance void .ctor(object 'object', native int 'method')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void Invoke(object sender, class System.ComponentModel.ListChangedEventArgs e)
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance class [mscorlib]System.IAsyncResult BeginInvoke(object sender, class System.ComponentModel.ListChangedEventArgs e, class [mscorlib]System.AsyncCallback callback, object 'object')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void EndInvoke(class [mscorlib]System.IAsyncResult result)
			runtime 
		{
		}
	}
	.class public sealed ListChangedType
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype System.ComponentModel.ListChangedType ItemAdded = int32(0x00000001)
		.field static public literal valuetype System.ComponentModel.ListChangedType ItemChanged = int32(0x00000004)
		.field static public literal valuetype System.ComponentModel.ListChangedType ItemDeleted = int32(0x00000002)
		.field static public literal valuetype System.ComponentModel.ListChangedType ItemMoved = int32(0x00000003)
		.field static public literal valuetype System.ComponentModel.ListChangedType PropertyDescriptorAdded = int32(0x00000005)
		.field static public literal valuetype System.ComponentModel.ListChangedType PropertyDescriptorChanged = int32(0x00000007)
		.field static public literal valuetype System.ComponentModel.ListChangedType PropertyDescriptorDeleted = int32(0x00000006)
		.field static public literal valuetype System.ComponentModel.ListChangedType Reset = int32(0x00000000)
	}
	.class public ListSortDescription
		extends [mscorlib]System.Object
	{
		.permissionset linkcheck = (00)
		.method public hidebysig specialname 
			instance void .ctor(class System.ComponentModel.PropertyDescriptor 'property', valuetype System.ComponentModel.ListSortDirection direction)
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.ComponentModel.PropertyDescriptor get_PropertyDescriptor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_PropertyDescriptor(class System.ComponentModel.PropertyDescriptor 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype System.ComponentModel.ListSortDirection get_SortDirection()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_SortDirection(valuetype System.ComponentModel.ListSortDirection 'value')
		{
			ret
		}
		.property instance class System.ComponentModel.PropertyDescriptor PropertyDescriptor()
		{
			.get instance class System.ComponentModel.PropertyDescriptor System.ComponentModel.ListSortDescription::get_PropertyDescriptor()
			.set instance void System.ComponentModel.ListSortDescription::set_PropertyDescriptor(class System.ComponentModel.PropertyDescriptor)
		}
		.property instance valuetype System.ComponentModel.ListSortDirection SortDirection()
		{
			.get instance valuetype System.ComponentModel.ListSortDirection System.ComponentModel.ListSortDescription::get_SortDirection()
			.set instance void System.ComponentModel.ListSortDescription::set_SortDirection(valuetype System.ComponentModel.ListSortDirection)
		}
	}
	.class public ListSortDescriptionCollection
		extends [mscorlib]System.Object
		implements [mscorlib]System.Collections.IList, [mscorlib]System.Collections.ICollection, [mscorlib]System.Collections.IEnumerable
	{
		.permissionset linkcheck = (00)
		.custom instance void [mscorlib]System.Reflection.DefaultMemberAttribute::.ctor(string) = (01 00 04 49 74 65 6D 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class System.ComponentModel.ListSortDescription[] sorts)
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.ComponentModel.ListSortDescription get_Item(int32 index)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Item(int32 index, class System.ComponentModel.ListSortDescription 'value')
		{
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance bool System.Collections.IList.get_IsFixedSize()
		{
			.override [mscorlib]System.Collections.IList::get_IsFixedSize
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance bool System.Collections.IList.get_IsReadOnly()
		{
			.override [mscorlib]System.Collections.IList::get_IsReadOnly
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance object System.Collections.IList.get_Item(int32 index)
		{
			.override [mscorlib]System.Collections.IList::get_Item
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance void System.Collections.IList.set_Item(int32 index, object 'value')
		{
			.override [mscorlib]System.Collections.IList::set_Item
			ret
		}
		.method private final virtual hidebysig newslot 
			instance int32 System.Collections.IList.Add(object 'value')
		{
			.override [mscorlib]System.Collections.IList::Add
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Collections.IList.Clear()
		{
			.override [mscorlib]System.Collections.IList::Clear
			ret
		}
		.method public final virtual hidebysig newslot 
			instance bool Contains(object 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance int32 IndexOf(object 'value')
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Collections.IList.Insert(int32 index, object 'value')
		{
			.override [mscorlib]System.Collections.IList::Insert
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Collections.IList.Remove(object 'value')
		{
			.override [mscorlib]System.Collections.IList::Remove
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Collections.IList.RemoveAt(int32 index)
		{
			.override [mscorlib]System.Collections.IList::RemoveAt
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance int32 get_Count()
		{
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance bool System.Collections.ICollection.get_IsSynchronized()
		{
			.override [mscorlib]System.Collections.ICollection::get_IsSynchronized
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance object System.Collections.ICollection.get_SyncRoot()
		{
			.override [mscorlib]System.Collections.ICollection::get_SyncRoot
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void CopyTo(class [mscorlib]System.Array 'array', int32 index)
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance class [mscorlib]System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			.override [mscorlib]System.Collections.IEnumerable::GetEnumerator
			ret
		}
		.property instance int32 Count()
		{
			.get instance int32 System.ComponentModel.ListSortDescriptionCollection::get_Count()
		}
		.property instance class System.ComponentModel.ListSortDescription Item(int32)
		{
			.get instance class System.ComponentModel.ListSortDescription System.ComponentModel.ListSortDescriptionCollection::get_Item(int32)
			.set instance void System.ComponentModel.ListSortDescriptionCollection::set_Item(int32, class System.ComponentModel.ListSortDescription)
		}
		.property instance bool System.Collections.ICollection.IsSynchronized()
		{
			.get instance bool System.ComponentModel.ListSortDescriptionCollection::System.Collections.ICollection.get_IsSynchronized()
		}
		.property instance object System.Collections.ICollection.SyncRoot()
		{
			.get instance object System.ComponentModel.ListSortDescriptionCollection::System.Collections.ICollection.get_SyncRoot()
		}
		.property instance bool System.Collections.IList.IsFixedSize()
		{
			.get instance bool System.ComponentModel.ListSortDescriptionCollection::System.Collections.IList.get_IsFixedSize()
		}
		.property instance bool System.Collections.IList.IsReadOnly()
		{
			.get instance bool System.ComponentModel.ListSortDescriptionCollection::System.Collections.IList.get_IsReadOnly()
		}
		.property instance object System.Collections.IList.Item(int32)
		{
			.get instance object System.ComponentModel.ListSortDescriptionCollection::System.Collections.IList.get_Item(int32)
			.set instance void System.ComponentModel.ListSortDescriptionCollection::System.Collections.IList.set_Item(int32, object)
		}
	}
	.class public sealed ListSortDirection
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype System.ComponentModel.ListSortDirection Ascending = int32(0x00000000)
		.field static public literal valuetype System.ComponentModel.ListSortDirection Descending = int32(0x00000001)
	}
	.class public sealed LocalizableAttribute
		extends [mscorlib]System.Attribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = (01 00 FF 7F 00 00 00 00)
		.method public hidebysig specialname 
			instance void .ctor(bool isLocalizable)
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsLocalizable()
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool IsDefaultAttribute()
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool Equals(object obj)
		{
			ret
		}
		.method public virtual hidebysig 
			instance int32 GetHashCode()
		{
			ret
		}
		.field static public initonly class System.ComponentModel.LocalizableAttribute Default
		.field static public initonly class System.ComponentModel.LocalizableAttribute No
		.field static public initonly class System.ComponentModel.LocalizableAttribute Yes
		.property instance bool IsLocalizable()
		{
			.get instance bool System.ComponentModel.LocalizableAttribute::get_IsLocalizable()
		}
	}
	.class public sealed LookupBindingPropertiesAttribute
		extends [mscorlib]System.Attribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = (01 00 04 00 00 00 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string dataSource, string displayMember, string valueMember, string lookupMember)
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_DataSource()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_DisplayMember()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_ValueMember()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_LookupMember()
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool Equals(object obj)
		{
			ret
		}
		.method public virtual hidebysig 
			instance int32 GetHashCode()
		{
			ret
		}
		.field static public initonly class System.ComponentModel.LookupBindingPropertiesAttribute Default
		.property instance string DataSource()
		{
			.get instance string System.ComponentModel.LookupBindingPropertiesAttribute::get_DataSource()
		}
		.property instance string DisplayMember()
		{
			.get instance string System.ComponentModel.LookupBindingPropertiesAttribute::get_DisplayMember()
		}
		.property instance string LookupMember()
		{
			.get instance string System.ComponentModel.LookupBindingPropertiesAttribute::get_LookupMember()
		}
		.property instance string ValueMember()
		{
			.get instance string System.ComponentModel.LookupBindingPropertiesAttribute::get_ValueMember()
		}
	}
	.class public MarshalByValueComponent
		extends [mscorlib]System.Object
		implements System.ComponentModel.IComponent, [mscorlib]System.IDisposable, [mscorlib]System.IServiceProvider
	{
		.custom instance void System.ComponentModel.DesignerCategoryAttribute::.ctor(string) = (01 00 09 43 6F 6D 70 6F 6E 65 6E 74 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method family virtual hidebysig 
			instance void Finalize()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void add_Disposed(class [mscorlib]System.EventHandler 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void remove_Disposed(class [mscorlib]System.EventHandler 'value')
		{
			ret
		}
		.method family hidebysig specialname 
			instance class System.ComponentModel.EventHandlerList get_Events()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance class System.ComponentModel.ISite get_Site()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_Site(class System.ComponentModel.ISite 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void Dispose()
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void Dispose(bool disposing)
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance class System.ComponentModel.IContainer get_Container()
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance object GetService(class [mscorlib]System.Type service)
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_DesignMode()
		{
			ret
		}
		.method public virtual hidebysig 
			instance string ToString()
		{
			ret
		}
		.event [mscorlib]System.EventHandler Disposed
		{
			.addon instance void System.ComponentModel.MarshalByValueComponent::add_Disposed(class [mscorlib]System.EventHandler)
			.removeon instance void System.ComponentModel.MarshalByValueComponent::remove_Disposed(class [mscorlib]System.EventHandler)
		}
		.property instance class System.ComponentModel.IContainer Container()
		{
			.custom instance void System.ComponentModel.BrowsableAttribute::.ctor(bool) = (01 00 00 00 00)
			.custom instance void System.ComponentModel.DesignerSerializationVisibilityAttribute::.ctor(valuetype System.ComponentModel.DesignerSerializationVisibility) = (01 00 00 00 00 00 00 00)
			.get instance class System.ComponentModel.IContainer System.ComponentModel.MarshalByValueComponent::get_Container()
		}
		.property instance bool DesignMode()
		{
			.custom instance void System.ComponentModel.BrowsableAttribute::.ctor(bool) = (01 00 00 00 00)
			.custom instance void System.ComponentModel.DesignerSerializationVisibilityAttribute::.ctor(valuetype System.ComponentModel.DesignerSerializationVisibility) = (01 00 00 00 00 00 00 00)
			.get instance bool System.ComponentModel.MarshalByValueComponent::get_DesignMode()
		}
		.property instance class System.ComponentModel.EventHandlerList Events()
		{
			.get instance class System.ComponentModel.EventHandlerList System.ComponentModel.MarshalByValueComponent::get_Events()
		}
		.property instance class System.ComponentModel.ISite Site()
		{
			.custom instance void System.ComponentModel.BrowsableAttribute::.ctor(bool) = (01 00 00 00 00)
			.custom instance void System.ComponentModel.DesignerSerializationVisibilityAttribute::.ctor(valuetype System.ComponentModel.DesignerSerializationVisibility) = (01 00 00 00 00 00 00 00)
			.get instance class System.ComponentModel.ISite System.ComponentModel.MarshalByValueComponent::get_Site()
			.set instance void System.ComponentModel.MarshalByValueComponent::set_Site(class System.ComponentModel.ISite)
		}
	}
	.class public MaskedTextProvider
		extends [mscorlib]System.Object
		implements [mscorlib]System.ICloneable
	{
		.permissionset linkcheck = (00)
		.custom instance void [mscorlib]System.Reflection.DefaultMemberAttribute::.ctor(string) = (01 00 04 49 74 65 6D 00 00)
		.method public hidebysig specialname 
			instance void .ctor(string mask)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string mask, bool restrictToAscii)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string mask, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string mask, class [mscorlib]System.Globalization.CultureInfo culture, bool restrictToAscii)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string mask, char passwordChar, bool allowPromptAsInput)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string mask, class [mscorlib]System.Globalization.CultureInfo culture, char passwordChar, bool allowPromptAsInput)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string mask, class [mscorlib]System.Globalization.CultureInfo culture, bool allowPromptAsInput, char promptChar, char passwordChar, bool restrictToAscii)
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_AllowPromptAsInput()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_AssignedEditPositionCount()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_AvailableEditPositionCount()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object Clone()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]System.Globalization.CultureInfo get_Culture()
		{
			ret
		}
		.method public static hidebysig specialname 
			char get_DefaultPasswordChar()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_EditPositionCount()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]System.Collections.IEnumerator get_EditPositions()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IncludeLiterals()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_IncludeLiterals(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IncludePrompt()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_IncludePrompt(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_AsciiOnly()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsPassword()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_IsPassword(bool 'value')
		{
			ret
		}
		.method public static hidebysig specialname 
			int32 get_InvalidIndex()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_LastAssignedPosition()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_Length()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Mask()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_MaskCompleted()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_MaskFull()
		{
			ret
		}
		.method public hidebysig specialname 
			instance char get_PasswordChar()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_PasswordChar(char 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance char get_PromptChar()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_PromptChar(char 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_ResetOnPrompt()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ResetOnPrompt(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_ResetOnSpace()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ResetOnSpace(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_SkipLiterals()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_SkipLiterals(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance char get_Item(int32 index)
		{
			ret
		}
		.method public hidebysig 
			instance bool Add(char input)
		{
			ret
		}
		.method public hidebysig 
			instance bool Add(char input, [out] int32& testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint& resultHint)
		{
			ret
		}
		.method public hidebysig 
			instance bool Add(string input)
		{
			ret
		}
		.method public hidebysig 
			instance bool Add(string input, [out] int32& testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint& resultHint)
		{
			ret
		}
		.method public hidebysig 
			instance void Clear()
		{
			ret
		}
		.method public hidebysig 
			instance void Clear([out] valuetype System.ComponentModel.MaskedTextResultHint& resultHint)
		{
			ret
		}
		.method public hidebysig 
			instance int32 FindAssignedEditPositionFrom(int32 position, bool direction)
		{
			ret
		}
		.method public hidebysig 
			instance int32 FindAssignedEditPositionInRange(int32 startPosition, int32 endPosition, bool direction)
		{
			ret
		}
		.method public hidebysig 
			instance int32 FindEditPositionFrom(int32 position, bool direction)
		{
			ret
		}
		.method public hidebysig 
			instance int32 FindEditPositionInRange(int32 startPosition, int32 endPosition, bool direction)
		{
			ret
		}
		.method public hidebysig 
			instance int32 FindNonEditPositionFrom(int32 position, bool direction)
		{
			ret
		}
		.method public hidebysig 
			instance int32 FindNonEditPositionInRange(int32 startPosition, int32 endPosition, bool direction)
		{
			ret
		}
		.method public hidebysig 
			instance int32 FindUnassignedEditPositionFrom(int32 position, bool direction)
		{
			ret
		}
		.method public hidebysig 
			instance int32 FindUnassignedEditPositionInRange(int32 startPosition, int32 endPosition, bool direction)
		{
			ret
		}
		.method public static hidebysig 
			bool GetOperationResultFromHint(valuetype System.ComponentModel.MaskedTextResultHint hint)
		{
			ret
		}
		.method public hidebysig 
			instance bool InsertAt(char input, int32 position)
		{
			ret
		}
		.method public hidebysig 
			instance bool InsertAt(char input, int32 position, [out] int32& testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint& resultHint)
		{
			ret
		}
		.method public hidebysig 
			instance bool InsertAt(string input, int32 position)
		{
			ret
		}
		.method public hidebysig 
			instance bool InsertAt(string input, int32 position, [out] int32& testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint& resultHint)
		{
			ret
		}
		.method public hidebysig 
			instance bool IsAvailablePosition(int32 position)
		{
			ret
		}
		.method public hidebysig 
			instance bool IsEditPosition(int32 position)
		{
			ret
		}
		.method public static hidebysig 
			bool IsValidInputChar(char c)
		{
			ret
		}
		.method public static hidebysig 
			bool IsValidMaskChar(char c)
		{
			ret
		}
		.method public static hidebysig 
			bool IsValidPasswordChar(char c)
		{
			ret
		}
		.method public hidebysig 
			instance bool Remove()
		{
			ret
		}
		.method public hidebysig 
			instance bool Remove([out] int32& testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint& resultHint)
		{
			ret
		}
		.method public hidebysig 
			instance bool RemoveAt(int32 position)
		{
			ret
		}
		.method public hidebysig 
			instance bool RemoveAt(int32 startPosition, int32 endPosition)
		{
			ret
		}
		.method public hidebysig 
			instance bool RemoveAt(int32 startPosition, int32 endPosition, [out] int32& testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint& resultHint)
		{
			ret
		}
		.method public hidebysig 
			instance bool Replace(char input, int32 position)
		{
			ret
		}
		.method public hidebysig 
			instance bool Replace(char input, int32 position, [out] int32& testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint& resultHint)
		{
			ret
		}
		.method public hidebysig 
			instance bool Replace(char input, int32 startPosition, int32 endPosition, [out] int32& testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint& resultHint)
		{
			ret
		}
		.method public hidebysig 
			instance bool Replace(string input, int32 position)
		{
			ret
		}
		.method public hidebysig 
			instance bool Replace(string input, int32 position, [out] int32& testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint& resultHint)
		{
			ret
		}
		.method public hidebysig 
			instance bool Replace(string input, int32 startPosition, int32 endPosition, [out] int32& testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint& resultHint)
		{
			ret
		}
		.method public hidebysig 
			instance bool Set(string input)
		{
			ret
		}
		.method public hidebysig 
			instance bool Set(string input, [out] int32& testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint& resultHint)
		{
			ret
		}
		.method public hidebysig 
			instance string ToDisplayString()
		{
			ret
		}
		.method public virtual hidebysig 
			instance string ToString()
		{
			ret
		}
		.method public hidebysig 
			instance string ToString(bool ignorePasswordChar)
		{
			ret
		}
		.method public hidebysig 
			instance string ToString(int32 startPosition, int32 length)
		{
			ret
		}
		.method public hidebysig 
			instance string ToString(bool ignorePasswordChar, int32 startPosition, int32 length)
		{
			ret
		}
		.method public hidebysig 
			instance string ToString(bool includePrompt, bool includeLiterals)
		{
			ret
		}
		.method public hidebysig 
			instance string ToString(bool includePrompt, bool includeLiterals, int32 startPosition, int32 length)
		{
			ret
		}
		.method public hidebysig 
			instance string ToString(bool ignorePasswordChar, bool includePrompt, bool includeLiterals, int32 startPosition, int32 length)
		{
			ret
		}
		.method public hidebysig 
			instance bool VerifyChar(char input, int32 position, [out] valuetype System.ComponentModel.MaskedTextResultHint& hint)
		{
			ret
		}
		.method public hidebysig 
			instance bool VerifyEscapeChar(char input, int32 position)
		{
			ret
		}
		.method public hidebysig 
			instance bool VerifyString(string input)
		{
			ret
		}
		.method public hidebysig 
			instance bool VerifyString(string input, [out] int32& testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint& resultHint)
		{
			ret
		}
		.property instance bool AllowPromptAsInput()
		{
			.get instance bool System.ComponentModel.MaskedTextProvider::get_AllowPromptAsInput()
		}
		.property instance bool AsciiOnly()
		{
			.get instance bool System.ComponentModel.MaskedTextProvider::get_AsciiOnly()
		}
		.property instance int32 AssignedEditPositionCount()
		{
			.get instance int32 System.ComponentModel.MaskedTextProvider::get_AssignedEditPositionCount()
		}
		.property instance int32 AvailableEditPositionCount()
		{
			.get instance int32 System.ComponentModel.MaskedTextProvider::get_AvailableEditPositionCount()
		}
		.property instance class [mscorlib]System.Globalization.CultureInfo Culture()
		{
			.get instance class [mscorlib]System.Globalization.CultureInfo System.ComponentModel.MaskedTextProvider::get_Culture()
		}
		.property char DefaultPasswordChar()
		{
			.get char System.ComponentModel.MaskedTextProvider::get_DefaultPasswordChar()
		}
		.property instance int32 EditPositionCount()
		{
			.get instance int32 System.ComponentModel.MaskedTextProvider::get_EditPositionCount()
		}
		.property instance class [mscorlib]System.Collections.IEnumerator EditPositions()
		{
			.get instance class [mscorlib]System.Collections.IEnumerator System.ComponentModel.MaskedTextProvider::get_EditPositions()
		}
		.property instance bool IncludeLiterals()
		{
			.get instance bool System.ComponentModel.MaskedTextProvider::get_IncludeLiterals()
			.set instance void System.ComponentModel.MaskedTextProvider::set_IncludeLiterals(bool)
		}
		.property instance bool IncludePrompt()
		{
			.get instance bool System.ComponentModel.MaskedTextProvider::get_IncludePrompt()
			.set instance void System.ComponentModel.MaskedTextProvider::set_IncludePrompt(bool)
		}
		.property int32 InvalidIndex()
		{
			.get int32 System.ComponentModel.MaskedTextProvider::get_InvalidIndex()
		}
		.property instance bool IsPassword()
		{
			.get instance bool System.ComponentModel.MaskedTextProvider::get_IsPassword()
			.set instance void System.ComponentModel.MaskedTextProvider::set_IsPassword(bool)
		}
		.property instance char Item(int32)
		{
			.get instance char System.ComponentModel.MaskedTextProvider::get_Item(int32)
		}
		.property instance int32 LastAssignedPosition()
		{
			.get instance int32 System.ComponentModel.MaskedTextProvider::get_LastAssignedPosition()
		}
		.property instance int32 Length()
		{
			.get instance int32 System.ComponentModel.MaskedTextProvider::get_Length()
		}
		.property instance string Mask()
		{
			.get instance string System.ComponentModel.MaskedTextProvider::get_Mask()
		}
		.property instance bool MaskCompleted()
		{
			.get instance bool System.ComponentModel.MaskedTextProvider::get_MaskCompleted()
		}
		.property instance bool MaskFull()
		{
			.get instance bool System.ComponentModel.MaskedTextProvider::get_MaskFull()
		}
		.property instance char PasswordChar()
		{
			.get instance char System.ComponentModel.MaskedTextProvider::get_PasswordChar()
			.set instance void System.ComponentModel.MaskedTextProvider::set_PasswordChar(char)
		}
		.property instance char PromptChar()
		{
			.get instance char System.ComponentModel.MaskedTextProvider::get_PromptChar()
			.set instance void System.ComponentModel.MaskedTextProvider::set_PromptChar(char)
		}
		.property instance bool ResetOnPrompt()
		{
			.get instance bool System.ComponentModel.MaskedTextProvider::get_ResetOnPrompt()
			.set instance void System.ComponentModel.MaskedTextProvider::set_ResetOnPrompt(bool)
		}
		.property instance bool ResetOnSpace()
		{
			.get instance bool System.ComponentModel.MaskedTextProvider::get_ResetOnSpace()
			.set instance void System.ComponentModel.MaskedTextProvider::set_ResetOnSpace(bool)
		}
		.property instance bool SkipLiterals()
		{
			.get instance bool System.ComponentModel.MaskedTextProvider::get_SkipLiterals()
			.set instance void System.ComponentModel.MaskedTextProvider::set_SkipLiterals(bool)
		}
	}
	.class public sealed MaskedTextResultHint
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype System.ComponentModel.MaskedTextResultHint AlphanumericCharacterExpected = int32(0xFFFFFFFE)
		.field static public literal valuetype System.ComponentModel.MaskedTextResultHint AsciiCharacterExpected = int32(0xFFFFFFFF)
		.field static public literal valuetype System.ComponentModel.MaskedTextResultHint CharacterEscaped = int32(0x00000001)
		.field static public literal valuetype System.ComponentModel.MaskedTextResultHint DigitExpected = int32(0xFFFFFFFD)
		.field static public literal valuetype System.ComponentModel.MaskedTextResultHint InvalidInput = int32(0xFFFFFFCD)
		.field static public literal valuetype System.ComponentModel.MaskedTextResultHint LetterExpected = int32(0xFFFFFFFC)
		.field static public literal valuetype System.ComponentModel.MaskedTextResultHint NoEffect = int32(0x00000002)
		.field static public literal valuetype System.ComponentModel.MaskedTextResultHint NonEditPosition = int32(0xFFFFFFCA)
		.field static public literal valuetype System.ComponentModel.MaskedTextResultHint PositionOutOfRange = int32(0xFFFFFFC9)
		.field static public literal valuetype System.ComponentModel.MaskedTextResultHint PromptCharNotAllowed = int32(0xFFFFFFCC)
		.field static public literal valuetype System.ComponentModel.MaskedTextResultHint SideEffect = int32(0x00000003)
		.field static public literal valuetype System.ComponentModel.MaskedTextResultHint SignedDigitExpected = int32(0xFFFFFFFB)
		.field static public literal valuetype System.ComponentModel.MaskedTextResultHint Success = int32(0x00000004)
		.field static public literal valuetype System.ComponentModel.MaskedTextResultHint UnavailableEditPosition = int32(0xFFFFFFCB)
		.field static public literal valuetype System.ComponentModel.MaskedTextResultHint Unknown = int32(0x00000000)
	}
	.class public abstract MemberDescriptor
		extends [mscorlib]System.Object
	{
		.permissionset linkcheck = (00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method family hidebysig specialname 
			instance void .ctor(string name)
		{
			ret
		}
		.method family hidebysig specialname 
			instance void .ctor(string name, class [mscorlib]System.Attribute[] attributes)
		{
			ret
		}
		.method family hidebysig specialname 
			instance void .ctor(class System.ComponentModel.MemberDescriptor descr)
		{
			ret
		}
		.method family hidebysig specialname 
			instance void .ctor(class System.ComponentModel.MemberDescriptor oldMemberDescriptor, class [mscorlib]System.Attribute[] newAttributes)
		{
			ret
		}
		.method family virtual hidebysig newslot specialname 
			instance class [mscorlib]System.Attribute[] get_AttributeArray()
		{
			ret
		}
		.method family virtual hidebysig newslot specialname 
			instance void set_AttributeArray(class [mscorlib]System.Attribute[] 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance class System.ComponentModel.AttributeCollection get_Attributes()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance string get_Category()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance string get_Description()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_IsBrowsable()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance string get_Name()
		{
			ret
		}
		.method family virtual hidebysig newslot specialname 
			instance int32 get_NameHashCode()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_DesignTimeOnly()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance string get_DisplayName()
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance class System.ComponentModel.AttributeCollection CreateAttributeCollection()
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool Equals(object obj)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void FillAttributes(class [mscorlib]System.Collections.IList attributeList)
		{
			ret
		}
		.method family static hidebysig 
			class [mscorlib]System.Reflection.MethodInfo FindMethod(class [mscorlib]System.Type componentClass, string name, class [mscorlib]System.Type[] args, class [mscorlib]System.Type returnType)
		{
			ret
		}
		.method family static hidebysig 
			class [mscorlib]System.Reflection.MethodInfo FindMethod(class [mscorlib]System.Type componentClass, string name, class [mscorlib]System.Type[] args, class [mscorlib]System.Type returnType, bool publicOnly)
		{
			ret
		}
		.method public virtual hidebysig 
			instance int32 GetHashCode()
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance object GetInvocationTarget(class [mscorlib]System.Type 'type', object 'instance')
		{
			ret
		}
		.method family static hidebysig 
			class System.ComponentModel.ISite GetSite(object component)
		{
			ret
		}
		.method family static hidebysig 
			object GetInvokee(class [mscorlib]System.Type componentClass, object component)
		{
			.custom instance void [mscorlib]System.ObsoleteAttribute::.ctor(string) = (01 00 6F 54 68 69 73 20 6D 65 74 68 6F 64 20 68 61 73 20 62 65 65 6E 20 64 65 70 72 65 63 61 74 65 64 2E 20 55 73 65 20 47 65 74 49 6E 76 6F 63 61 74 69 6F 6E 54 61 72 67 65 74 20 69 6E 73 74 65 61 64 2E 20 20 68 74 74 70 3A 2F 2F 67 6F 2E 6D 69 63 72 6F 73 6F 66 74 2E 63 6F 6D 2F 66 77 6C 69 6E 6B 2F 3F 6C 69 6E 6B 69 64 3D 31 34 32 30 32 00 00)
			ret
		}
		.property instance class [mscorlib]System.Attribute[] AttributeArray()
		{
			.get instance class [mscorlib]System.Attribute[] System.ComponentModel.MemberDescriptor::get_AttributeArray()
			.set instance void System.ComponentModel.MemberDescriptor::set_AttributeArray(class [mscorlib]System.Attribute[])
		}
		.property instance class System.ComponentModel.AttributeCollection Attributes()
		{
			.get instance class System.ComponentModel.AttributeCollection System.ComponentModel.MemberDescriptor::get_Attributes()
		}
		.property instance string Category()
		{
			.get instance string System.ComponentModel.MemberDescriptor::get_Category()
		}
		.property instance string Description()
		{
			.get instance string System.ComponentModel.MemberDescriptor::get_Description()
		}
		.property instance bool DesignTimeOnly()
		{
			.get instance bool System.ComponentModel.MemberDescriptor::get_DesignTimeOnly()
		}
		.property instance string DisplayName()
		{
			.get instance string System.ComponentModel.MemberDescriptor::get_DisplayName()
		}
		.property instance bool IsBrowsable()
		{
			.get instance bool System.ComponentModel.MemberDescriptor::get_IsBrowsable()
		}
		.property instance string Name()
		{
			.get instance string System.ComponentModel.MemberDescriptor::get_Name()
		}
		.property instance int32 NameHashCode()
		{
			.get instance int32 System.ComponentModel.MemberDescriptor::get_NameHashCode()
		}
	}
	.class public sealed MergablePropertyAttribute
		extends [mscorlib]System.Attribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = (01 00 FF 7F 00 00 00 00)
		.method public hidebysig specialname 
			instance void .ctor(bool allowMerge)
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_AllowMerge()
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool Equals(object obj)
		{
			ret
		}
		.method public virtual hidebysig 
			instance int32 GetHashCode()
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool IsDefaultAttribute()
		{
			ret
		}
		.field static public initonly class System.ComponentModel.MergablePropertyAttribute Default
		.field static public initonly class System.ComponentModel.MergablePropertyAttribute No
		.field static public initonly class System.ComponentModel.MergablePropertyAttribute Yes
		.property instance bool AllowMerge()
		{
			.get instance bool System.ComponentModel.MergablePropertyAttribute::get_AllowMerge()
		}
	}
	.class public MultilineStringConverter
		extends System.ComponentModel.TypeConverter
	{
		.permissionset linkcheck = (00)
		.method public virtual hidebysig 
			instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Globalization.CultureInfo culture, object 'value', class [mscorlib]System.Type destinationType)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class System.ComponentModel.PropertyDescriptorCollection GetProperties(class System.ComponentModel.ITypeDescriptorContext context, object 'value', class [mscorlib]System.Attribute[] attributes)
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool GetPropertiesSupported(class System.ComponentModel.ITypeDescriptorContext context)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public NestedContainer
		extends System.ComponentModel.Container
		implements System.ComponentModel.INestedContainer, System.ComponentModel.IContainer, [mscorlib]System.IDisposable
	{
		.permissionset linkcheck = (00)
		.method public hidebysig specialname 
			instance void .ctor(class System.ComponentModel.IComponent owner)
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance class System.ComponentModel.IComponent get_Owner()
		{
			ret
		}
		.method family virtual hidebysig newslot specialname 
			instance string get_OwnerName()
		{
			ret
		}
		.method family virtual hidebysig 
			instance class System.ComponentModel.ISite CreateSite(class System.ComponentModel.IComponent component, string name)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void Dispose(bool disposing)
		{
			ret
		}
		.method family virtual hidebysig 
			instance object GetService(class [mscorlib]System.Type service)
		{
			ret
		}
		.property instance class System.ComponentModel.IComponent Owner()
		{
			.get instance class System.ComponentModel.IComponent System.ComponentModel.NestedContainer::get_Owner()
		}
		.property instance string OwnerName()
		{
			.get instance string System.ComponentModel.NestedContainer::get_OwnerName()
		}
	}
	.class public sealed NotifyParentPropertyAttribute
		extends [mscorlib]System.Attribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = (01 00 80 00 00 00 00 00)
		.method public hidebysig specialname 
			instance void .ctor(bool notifyParent)
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_NotifyParent()
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool Equals(object obj)
		{
			ret
		}
		.method public virtual hidebysig 
			instance int32 GetHashCode()
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool IsDefaultAttribute()
		{
			ret
		}
		.field static public initonly class System.ComponentModel.NotifyParentPropertyAttribute Default
		.field static public initonly class System.ComponentModel.NotifyParentPropertyAttribute No
		.field static public initonly class System.ComponentModel.NotifyParentPropertyAttribute Yes
		.property instance bool NotifyParent()
		{
			.get instance bool System.ComponentModel.NotifyParentPropertyAttribute::get_NotifyParent()
		}
	}
	.class public NullableConverter
		extends System.ComponentModel.TypeConverter
	{
		.permissionset linkcheck = (00)
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Type 'type')
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Type sourceType)
		{
			ret
		}
		.method public virtual hidebysig 
			instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Globalization.CultureInfo culture, object 'value')
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Type destinationType)
		{
			ret
		}
		.method public virtual hidebysig 
			instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Globalization.CultureInfo culture, object 'value', class [mscorlib]System.Type destinationType)
		{
			ret
		}
		.method public virtual hidebysig 
			instance object CreateInstance(class System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Collections.IDictionary propertyValues)
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool GetCreateInstanceSupported(class System.ComponentModel.ITypeDescriptorContext context)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class System.ComponentModel.PropertyDescriptorCollection GetProperties(class System.ComponentModel.ITypeDescriptorContext context, object 'value', class [mscorlib]System.Attribute[] attributes)
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool GetPropertiesSupported(class System.ComponentModel.ITypeDescriptorContext context)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class System.ComponentModel.TypeConverter/StandardValuesCollection GetStandardValues(class System.ComponentModel.ITypeDescriptorContext context)
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool GetStandardValuesExclusive(class System.ComponentModel.ITypeDescriptorContext context)
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool GetStandardValuesSupported(class System.ComponentModel.ITypeDescriptorContext context)
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool IsValid(class System.ComponentModel.ITypeDescriptorContext context, object 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]System.Type get_NullableType()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]System.Type get_UnderlyingType()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.ComponentModel.TypeConverter get_UnderlyingTypeConverter()
		{
			ret
		}
		.property instance class [mscorlib]System.Type NullableType()
		{
			.get instance class [mscorlib]System.Type System.ComponentModel.NullableConverter::get_NullableType()
		}
		.property instance class [mscorlib]System.Type UnderlyingType()
		{
			.get instance class [mscorlib]System.Type System.ComponentModel.NullableConverter::get_UnderlyingType()
		}
		.property instance class System.ComponentModel.TypeConverter UnderlyingTypeConverter()
		{
			.get instance class System.ComponentModel.TypeConverter System.ComponentModel.NullableConverter::get_UnderlyingTypeConverter()
		}
	}
	.class public sealed ParenthesizePropertyNameAttribute
		extends [mscorlib]System.Attribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = (01 00 FF 7F 00 00 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(bool needParenthesis)
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_NeedParenthesis()
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool Equals(object o)
		{
			ret
		}
		.method public virtual hidebysig 
			instance int32 GetHashCode()
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool IsDefaultAttribute()
		{
			ret
		}
		.field static public initonly class System.ComponentModel.ParenthesizePropertyNameAttribute Default
		.property instance bool NeedParenthesis()
		{
			.get instance bool System.ComponentModel.ParenthesizePropertyNameAttribute::get_NeedParenthesis()
		}
	}
	.class public sealed PasswordPropertyTextAttribute
		extends [mscorlib]System.Attribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = (01 00 FF 7F 00 00 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(bool password)
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_Password()
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool Equals(object o)
		{
			ret
		}
		.method public virtual hidebysig 
			instance int32 GetHashCode()
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool IsDefaultAttribute()
		{
			ret
		}
		.field static public initonly class System.ComponentModel.PasswordPropertyTextAttribute Default
		.field static public initonly class System.ComponentModel.PasswordPropertyTextAttribute No
		.field static public initonly class System.ComponentModel.PasswordPropertyTextAttribute Yes
		.property instance bool Password()
		{
			.get instance bool System.ComponentModel.PasswordPropertyTextAttribute::get_Password()
		}
	}
	.class public ProgressChangedEventArgs
		extends [mscorlib]System.EventArgs
	{
		.permissionset linkcheck = (00)
		.method public hidebysig specialname 
			instance void .ctor(int32 progressPercentage, object userState)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ProgressPercentage()
		{
			ret
		}
		.method public hidebysig specialname 
			instance object get_UserState()
		{
			ret
		}
		.property instance int32 ProgressPercentage()
		{
			.get instance int32 System.ComponentModel.ProgressChangedEventArgs::get_ProgressPercentage()
		}
		.property instance object UserState()
		{
			.get instance object System.ComponentModel.ProgressChangedEventArgs::get_UserState()
		}
	}
	.class public sealed ProgressChangedEventHandler
		extends [mscorlib]System.MulticastDelegate
	{
		.permissionset linkcheck = (00)
		.method public hidebysig specialname 
			instance void .ctor(object 'object', native int 'method')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void Invoke(object sender, class System.ComponentModel.ProgressChangedEventArgs e)
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance class [mscorlib]System.IAsyncResult BeginInvoke(object sender, class System.ComponentModel.ProgressChangedEventArgs e, class [mscorlib]System.AsyncCallback callback, object 'object')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void EndInvoke(class [mscorlib]System.IAsyncResult result)
			runtime 
		{
		}
	}
	.class public PropertyChangedEventArgs
		extends [mscorlib]System.EventArgs
	{
		.permissionset linkcheck = (00)
		.method public hidebysig specialname 
			instance void .ctor(string propertyName)
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance string get_PropertyName()
		{
			ret
		}
		.property instance string PropertyName()
		{
			.get instance string System.ComponentModel.PropertyChangedEventArgs::get_PropertyName()
		}
	}
	.class public sealed PropertyChangedEventHandler
		extends [mscorlib]System.MulticastDelegate
	{
		.permissionset linkcheck = (00)
		.method public hidebysig specialname 
			instance void .ctor(object 'object', native int 'method')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void Invoke(object sender, class System.ComponentModel.PropertyChangedEventArgs e)
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance class [mscorlib]System.IAsyncResult BeginInvoke(object sender, class System.ComponentModel.PropertyChangedEventArgs e, class [mscorlib]System.AsyncCallback callback, object 'object')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void EndInvoke(class [mscorlib]System.IAsyncResult result)
			runtime 
		{
		}
	}
	.class public abstract PropertyDescriptor
		extends System.ComponentModel.MemberDescriptor
	{
		.permissionset linkcheck = (00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method family hidebysig specialname 
			instance void .ctor(string name, class [mscorlib]System.Attribute[] attrs)
		{
			ret
		}
		.method family hidebysig specialname 
			instance void .ctor(class System.ComponentModel.MemberDescriptor descr)
		{
			ret
		}
		.method family hidebysig specialname 
			instance void .ctor(class System.ComponentModel.MemberDescriptor descr, class [mscorlib]System.Attribute[] attrs)
		{
			ret
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance class [mscorlib]System.Type get_ComponentType()
		{
		}
		.method public virtual hidebysig newslot specialname 
			instance class System.ComponentModel.TypeConverter get_Converter()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_IsLocalizable()
		{
			ret
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance bool get_IsReadOnly()
		{
		}
		.method public hidebysig specialname 
			instance valuetype System.ComponentModel.DesignerSerializationVisibility get_SerializationVisibility()
		{
			ret
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance class [mscorlib]System.Type get_PropertyType()
		{
		}
		.method public virtual hidebysig newslot 
			instance void AddValueChanged(object component, class [mscorlib]System.EventHandler 'handler')
		{
			ret
		}
		.method public virtual hidebysig newslot abstract 
			instance bool CanResetValue(object component)
		{
		}
		.method public virtual hidebysig 
			instance bool Equals(object obj)
		{
			ret
		}
		.method family hidebysig 
			instance object CreateInstance(class [mscorlib]System.Type 'type')
		{
			ret
		}
		.method family virtual hidebysig 
			instance void FillAttributes(class [mscorlib]System.Collections.IList attributeList)
		{
			ret
		}
		.method public hidebysig 
			instance class System.ComponentModel.PropertyDescriptorCollection GetChildProperties()
		{
			ret
		}
		.method public hidebysig 
			instance class System.ComponentModel.PropertyDescriptorCollection GetChildProperties(class [mscorlib]System.Attribute[] 'filter')
		{
			ret
		}
		.method public hidebysig 
			instance class System.ComponentModel.PropertyDescriptorCollection GetChildProperties(object 'instance')
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance class System.ComponentModel.PropertyDescriptorCollection GetChildProperties(object 'instance', class [mscorlib]System.Attribute[] 'filter')
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance object GetEditor(class [mscorlib]System.Type editorBaseType)
		{
			ret
		}
		.method public virtual hidebysig 
			instance int32 GetHashCode()
		{
			ret
		}
		.method family virtual hidebysig 
			instance object GetInvocationTarget(class [mscorlib]System.Type 'type', object 'instance')
		{
			ret
		}
		.method family hidebysig 
			instance class [mscorlib]System.Type GetTypeFromName(string typeName)
		{
			ret
		}
		.method public virtual hidebysig newslot abstract 
			instance object GetValue(object component)
		{
		}
		.method family virtual hidebysig newslot 
			instance void OnValueChanged(object component, class [mscorlib]System.EventArgs e)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void RemoveValueChanged(object component, class [mscorlib]System.EventHandler 'handler')
		{
			ret
		}
		.method famorassem hidebysig 
			instance class [mscorlib]System.EventHandler GetValueChangedHandler(object component)
		{
			ret
		}
		.method public virtual hidebysig newslot abstract 
			instance void ResetValue(object component)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void SetValue(object component, object 'value')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance bool ShouldSerializeValue(object component)
		{
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_SupportsChangeEvents()
		{
			ret
		}
		.property instance class [mscorlib]System.Type ComponentType()
		{
			.get instance class [mscorlib]System.Type System.ComponentModel.PropertyDescriptor::get_ComponentType()
		}
		.property instance class System.ComponentModel.TypeConverter Converter()
		{
			.get instance class System.ComponentModel.TypeConverter System.ComponentModel.PropertyDescriptor::get_Converter()
		}
		.property instance bool IsLocalizable()
		{
			.get instance bool System.ComponentModel.PropertyDescriptor::get_IsLocalizable()
		}
		.property instance bool IsReadOnly()
		{
			.get instance bool System.ComponentModel.PropertyDescriptor::get_IsReadOnly()
		}
		.property instance class [mscorlib]System.Type PropertyType()
		{
			.get instance class [mscorlib]System.Type System.ComponentModel.PropertyDescriptor::get_PropertyType()
		}
		.property instance valuetype System.ComponentModel.DesignerSerializationVisibility SerializationVisibility()
		{
			.get instance valuetype System.ComponentModel.DesignerSerializationVisibility System.ComponentModel.PropertyDescriptor::get_SerializationVisibility()
		}
		.property instance bool SupportsChangeEvents()
		{
			.get instance bool System.ComponentModel.PropertyDescriptor::get_SupportsChangeEvents()
		}
	}
	.class public PropertyDescriptorCollection
		extends [mscorlib]System.Object
		implements [mscorlib]System.Collections.IList, [mscorlib]System.Collections.IDictionary, [mscorlib]System.Collections.ICollection, [mscorlib]System.Collections.IEnumerable
	{
		.permissionset linkcheck = (00)
		.custom instance void [mscorlib]System.Reflection.DefaultMemberAttribute::.ctor(string) = (01 00 04 49 74 65 6D 00 00)
		.method public hidebysig specialname 
			instance void .ctor(class System.ComponentModel.PropertyDescriptor[] properties)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class System.ComponentModel.PropertyDescriptor[] properties, bool readOnly)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_Count()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance class System.ComponentModel.PropertyDescriptor get_Item(int32 index)
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance class System.ComponentModel.PropertyDescriptor get_Item(string name)
		{
			ret
		}
		.method public hidebysig 
			instance int32 Add(class System.ComponentModel.PropertyDescriptor 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void Clear()
		{
			ret
		}
		.method public hidebysig 
			instance bool Contains(class System.ComponentModel.PropertyDescriptor 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void CopyTo(class [mscorlib]System.Array 'array', int32 index)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance class System.ComponentModel.PropertyDescriptor Find(string name, bool ignoreCase)
		{
			ret
		}
		.method public hidebysig 
			instance int32 IndexOf(class System.ComponentModel.PropertyDescriptor 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void Insert(int32 index, class System.ComponentModel.PropertyDescriptor 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void Remove(class System.ComponentModel.PropertyDescriptor 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void RemoveAt(int32 index)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance class System.ComponentModel.PropertyDescriptorCollection Sort()
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance class System.ComponentModel.PropertyDescriptorCollection Sort(string[] names)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance class System.ComponentModel.PropertyDescriptorCollection Sort(string[] names, class [mscorlib]System.Collections.IComparer comparer)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance class System.ComponentModel.PropertyDescriptorCollection Sort(class [mscorlib]System.Collections.IComparer comparer)
		{
			ret
		}
		.method family hidebysig 
			instance void InternalSort(string[] names)
		{
			ret
		}
		.method family hidebysig 
			instance void InternalSort(class [mscorlib]System.Collections.IComparer sorter)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance class [mscorlib]System.Collections.IEnumerator GetEnumerator()
		{
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance int32 System.Collections.ICollection.get_Count()
		{
			.override [mscorlib]System.Collections.ICollection::get_Count
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance bool System.Collections.ICollection.get_IsSynchronized()
		{
			.override [mscorlib]System.Collections.ICollection::get_IsSynchronized
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance object System.Collections.ICollection.get_SyncRoot()
		{
			.override [mscorlib]System.Collections.ICollection::get_SyncRoot
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Collections.IDictionary.Add(object key, object 'value')
		{
			.override [mscorlib]System.Collections.IDictionary::Add
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Collections.IDictionary.Clear()
		{
			.override [mscorlib]System.Collections.IDictionary::Clear
			ret
		}
		.method private final virtual hidebysig newslot 
			instance bool System.Collections.IDictionary.Contains(object key)
		{
			.override [mscorlib]System.Collections.IDictionary::Contains
			ret
		}
		.method private final virtual hidebysig newslot 
			instance class [mscorlib]System.Collections.IDictionaryEnumerator System.Collections.IDictionary.GetEnumerator()
		{
			.override [mscorlib]System.Collections.IDictionary::GetEnumerator
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance bool System.Collections.IDictionary.get_IsFixedSize()
		{
			.override [mscorlib]System.Collections.IDictionary::get_IsFixedSize
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance bool System.Collections.IDictionary.get_IsReadOnly()
		{
			.override [mscorlib]System.Collections.IDictionary::get_IsReadOnly
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance object System.Collections.IDictionary.get_Item(object key)
		{
			.override [mscorlib]System.Collections.IDictionary::get_Item
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance void System.Collections.IDictionary.set_Item(object key, object 'value')
		{
			.override [mscorlib]System.Collections.IDictionary::set_Item
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance class [mscorlib]System.Collections.ICollection System.Collections.IDictionary.get_Keys()
		{
			.override [mscorlib]System.Collections.IDictionary::get_Keys
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance class [mscorlib]System.Collections.ICollection System.Collections.IDictionary.get_Values()
		{
			.override [mscorlib]System.Collections.IDictionary::get_Values
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Collections.IDictionary.Remove(object key)
		{
			.override [mscorlib]System.Collections.IDictionary::Remove
			ret
		}
		.method private final virtual hidebysig newslot 
			instance class [mscorlib]System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			.override [mscorlib]System.Collections.IEnumerable::GetEnumerator
			ret
		}
		.method private final virtual hidebysig newslot 
			instance int32 System.Collections.IList.Add(object 'value')
		{
			.override [mscorlib]System.Collections.IList::Add
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Collections.IList.Clear()
		{
			.override [mscorlib]System.Collections.IList::Clear
			ret
		}
		.method private final virtual hidebysig newslot 
			instance bool System.Collections.IList.Contains(object 'value')
		{
			.override [mscorlib]System.Collections.IList::Contains
			ret
		}
		.method private final virtual hidebysig newslot 
			instance int32 System.Collections.IList.IndexOf(object 'value')
		{
			.override [mscorlib]System.Collections.IList::IndexOf
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Collections.IList.Insert(int32 index, object 'value')
		{
			.override [mscorlib]System.Collections.IList::Insert
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance bool System.Collections.IList.get_IsReadOnly()
		{
			.override [mscorlib]System.Collections.IList::get_IsReadOnly
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance bool System.Collections.IList.get_IsFixedSize()
		{
			.override [mscorlib]System.Collections.IList::get_IsFixedSize
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Collections.IList.Remove(object 'value')
		{
			.override [mscorlib]System.Collections.IList::Remove
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Collections.IList.RemoveAt(int32 index)
		{
			.override [mscorlib]System.Collections.IList::RemoveAt
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance object System.Collections.IList.get_Item(int32 index)
		{
			.override [mscorlib]System.Collections.IList::get_Item
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance void System.Collections.IList.set_Item(int32 index, object 'value')
		{
			.override [mscorlib]System.Collections.IList::set_Item
			ret
		}
		.field static public initonly class System.ComponentModel.PropertyDescriptorCollection Empty
		.property instance int32 Count()
		{
			.get instance int32 System.ComponentModel.PropertyDescriptorCollection::get_Count()
		}
		.property instance class System.ComponentModel.PropertyDescriptor Item(int32)
		{
			.get instance class System.ComponentModel.PropertyDescriptor System.ComponentModel.PropertyDescriptorCollection::get_Item(int32)
		}
		.property instance class System.ComponentModel.PropertyDescriptor Item(string)
		{
			.get instance class System.ComponentModel.PropertyDescriptor System.ComponentModel.PropertyDescriptorCollection::get_Item(string)
		}
		.property instance int32 System.Collections.ICollection.Count()
		{
			.get instance int32 System.ComponentModel.PropertyDescriptorCollection::System.Collections.ICollection.get_Count()
		}
		.property instance bool System.Collections.ICollection.IsSynchronized()
		{
			.get instance bool System.ComponentModel.PropertyDescriptorCollection::System.Collections.ICollection.get_IsSynchronized()
		}
		.property instance object System.Collections.ICollection.SyncRoot()
		{
			.get instance object System.ComponentModel.PropertyDescriptorCollection::System.Collections.ICollection.get_SyncRoot()
		}
		.property instance bool System.Collections.IDictionary.IsFixedSize()
		{
			.get instance bool System.ComponentModel.PropertyDescriptorCollection::System.Collections.IDictionary.get_IsFixedSize()
		}
		.property instance bool System.Collections.IDictionary.IsReadOnly()
		{
			.get instance bool System.ComponentModel.PropertyDescriptorCollection::System.Collections.IDictionary.get_IsReadOnly()
		}
		.property instance object System.Collections.IDictionary.Item(object)
		{
			.get instance object System.ComponentModel.PropertyDescriptorCollection::System.Collections.IDictionary.get_Item(object)
			.set instance void System.ComponentModel.PropertyDescriptorCollection::System.Collections.IDictionary.set_Item(object, object)
		}
		.property instance class [mscorlib]System.Collections.ICollection System.Collections.IDictionary.Keys()
		{
			.get instance class [mscorlib]System.Collections.ICollection System.ComponentModel.PropertyDescriptorCollection::System.Collections.IDictionary.get_Keys()
		}
		.property instance class [mscorlib]System.Collections.ICollection System.Collections.IDictionary.Values()
		{
			.get instance class [mscorlib]System.Collections.ICollection System.ComponentModel.PropertyDescriptorCollection::System.Collections.IDictionary.get_Values()
		}
		.property instance bool System.Collections.IList.IsFixedSize()
		{
			.get instance bool System.ComponentModel.PropertyDescriptorCollection::System.Collections.IList.get_IsFixedSize()
		}
		.property instance bool System.Collections.IList.IsReadOnly()
		{
			.get instance bool System.ComponentModel.PropertyDescriptorCollection::System.Collections.IList.get_IsReadOnly()
		}
		.property instance object System.Collections.IList.Item(int32)
		{
			.get instance object System.ComponentModel.PropertyDescriptorCollection::System.Collections.IList.get_Item(int32)
			.set instance void System.ComponentModel.PropertyDescriptorCollection::System.Collections.IList.set_Item(int32, object)
		}
	}
	.class public PropertyTabAttribute
		extends [mscorlib]System.Attribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = (01 00 FF 7F 00 00 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Type tabClass)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string tabClassName)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Type tabClass, valuetype System.ComponentModel.PropertyTabScope tabScope)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string tabClassName, valuetype System.ComponentModel.PropertyTabScope tabScope)
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]System.Type[] get_TabClasses()
		{
			ret
		}
		.method family hidebysig specialname 
			instance string[] get_TabClassNames()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype System.ComponentModel.PropertyTabScope[] get_TabScopes()
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool Equals(object other)
		{
			ret
		}
		.method public hidebysig 
			instance bool Equals(class System.ComponentModel.PropertyTabAttribute other)
		{
			ret
		}
		.method public virtual hidebysig 
			instance int32 GetHashCode()
		{
			ret
		}
		.method family hidebysig 
			instance void InitializeArrays(string[] tabClassNames, valuetype System.ComponentModel.PropertyTabScope[] tabScopes)
		{
			ret
		}
		.method family hidebysig 
			instance void InitializeArrays(class [mscorlib]System.Type[] tabClasses, valuetype System.ComponentModel.PropertyTabScope[] tabScopes)
		{
			ret
		}
		.property instance string[] TabClassNames()
		{
			.get instance string[] System.ComponentModel.PropertyTabAttribute::get_TabClassNames()
		}
		.property instance class [mscorlib]System.Type[] TabClasses()
		{
			.get instance class [mscorlib]System.Type[] System.ComponentModel.PropertyTabAttribute::get_TabClasses()
		}
		.property instance valuetype System.ComponentModel.PropertyTabScope[] TabScopes()
		{
			.get instance valuetype System.ComponentModel.PropertyTabScope[] System.ComponentModel.PropertyTabAttribute::get_TabScopes()
		}
	}
	.class public sealed PropertyTabScope
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype System.ComponentModel.PropertyTabScope Component = int32(0x00000003)
		.field static public literal valuetype System.ComponentModel.PropertyTabScope Document = int32(0x00000002)
		.field static public literal valuetype System.ComponentModel.PropertyTabScope Global = int32(0x00000001)
		.field static public literal valuetype System.ComponentModel.PropertyTabScope Static = int32(0x00000000)
	}
	.class public sealed ProvidePropertyAttribute
		extends [mscorlib]System.Attribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = (01 00 04 00 00 00 01 00 54 02 0D 41 6C 6C 6F 77 4D 75 6C 74 69 70 6C 65 01)
		.method public hidebysig specialname 
			instance void .ctor(string propertyName, class [mscorlib]System.Type receiverType)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string propertyName, string receiverTypeName)
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_PropertyName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_ReceiverTypeName()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance object get_TypeId()
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool Equals(object obj)
		{
			ret
		}
		.method public virtual hidebysig 
			instance int32 GetHashCode()
		{
			ret
		}
		.property instance string PropertyName()
		{
			.get instance string System.ComponentModel.ProvidePropertyAttribute::get_PropertyName()
		}
		.property instance string ReceiverTypeName()
		{
			.get instance string System.ComponentModel.ProvidePropertyAttribute::get_ReceiverTypeName()
		}
		.property instance object TypeId()
		{
			.get instance object System.ComponentModel.ProvidePropertyAttribute::get_TypeId()
		}
	}
	.class public sealed ReadOnlyAttribute
		extends [mscorlib]System.Attribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = (01 00 FF 7F 00 00 00 00)
		.method public hidebysig specialname 
			instance void .ctor(bool isReadOnly)
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsReadOnly()
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool Equals(object 'value')
		{
			ret
		}
		.method public virtual hidebysig 
			instance int32 GetHashCode()
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool IsDefaultAttribute()
		{
			ret
		}
		.field static public initonly class System.ComponentModel.ReadOnlyAttribute Default
		.field static public initonly class System.ComponentModel.ReadOnlyAttribute No
		.field static public initonly class System.ComponentModel.ReadOnlyAttribute Yes
		.property instance bool IsReadOnly()
		{
			.get instance bool System.ComponentModel.ReadOnlyAttribute::get_IsReadOnly()
		}
	}
	.class public RecommendedAsConfigurableAttribute
		extends [mscorlib]System.Attribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = (01 00 80 00 00 00 00 00)
		.custom instance void [mscorlib]System.ObsoleteAttribute::.ctor(string) = (01 00 60 55 73 65 20 53 79 73 74 65 6D 2E 43 6F 6D 70 6F 6E 65 6E 74 4D 6F 64 65 6C 2E 53 65 74 74 69 6E 67 73 42 69 6E 64 61 62 6C 65 41 74 74 72 69 62 75 74 65 20 69 6E 73 74 65 61 64 20 74 6F 20 77 6F 72 6B 20 77 69 74 68 20 74 68 65 20 6E 65 77 20 73 65 74 74 69 6E 67 73 20 6D 6F 64 65 6C 2E 00 00)
		.method public hidebysig specialname 
			instance void .ctor(bool recommendedAsConfigurable)
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_RecommendedAsConfigurable()
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool Equals(object obj)
		{
			ret
		}
		.method public virtual hidebysig 
			instance int32 GetHashCode()
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool IsDefaultAttribute()
		{
			ret
		}
		.field static public initonly class System.ComponentModel.RecommendedAsConfigurableAttribute Default
		.field static public initonly class System.ComponentModel.RecommendedAsConfigurableAttribute No
		.field static public initonly class System.ComponentModel.RecommendedAsConfigurableAttribute Yes
		.property instance bool RecommendedAsConfigurable()
		{
			.get instance bool System.ComponentModel.RecommendedAsConfigurableAttribute::get_RecommendedAsConfigurable()
		}
	}
	.class public ReferenceConverter
		extends System.ComponentModel.TypeConverter
	{
		.permissionset linkcheck = (00)
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Type 'type')
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Type sourceType)
		{
			ret
		}
		.method public virtual hidebysig 
			instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Globalization.CultureInfo culture, object 'value')
		{
			ret
		}
		.method public virtual hidebysig 
			instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Globalization.CultureInfo culture, object 'value', class [mscorlib]System.Type destinationType)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class System.ComponentModel.TypeConverter/StandardValuesCollection GetStandardValues(class System.ComponentModel.ITypeDescriptorContext context)
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool GetStandardValuesExclusive(class System.ComponentModel.ITypeDescriptorContext context)
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool GetStandardValuesSupported(class System.ComponentModel.ITypeDescriptorContext context)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance bool IsValueAllowed(class System.ComponentModel.ITypeDescriptorContext context, object 'value')
		{
			ret
		}
	}
	.class public RefreshEventArgs
		extends [mscorlib]System.EventArgs
	{
		.permissionset linkcheck = (00)
		.method public hidebysig specialname 
			instance void .ctor(object componentChanged)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Type typeChanged)
		{
			ret
		}
		.method public hidebysig specialname 
			instance object get_ComponentChanged()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]System.Type get_TypeChanged()
		{
			ret
		}
		.property instance object ComponentChanged()
		{
			.get instance object System.ComponentModel.RefreshEventArgs::get_ComponentChanged()
		}
		.property instance class [mscorlib]System.Type TypeChanged()
		{
			.get instance class [mscorlib]System.Type System.ComponentModel.RefreshEventArgs::get_TypeChanged()
		}
	}
	.class public sealed RefreshEventHandler
		extends [mscorlib]System.MulticastDelegate
	{
		.permissionset linkcheck = (00)
		.method public hidebysig specialname 
			instance void .ctor(object 'object', native int 'method')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void Invoke(class System.ComponentModel.RefreshEventArgs e)
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance class [mscorlib]System.IAsyncResult BeginInvoke(class System.ComponentModel.RefreshEventArgs e, class [mscorlib]System.AsyncCallback callback, object 'object')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void EndInvoke(class [mscorlib]System.IAsyncResult result)
			runtime 
		{
		}
	}
	.class public sealed RefreshProperties
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype System.ComponentModel.RefreshProperties All = int32(0x00000001)
		.field static public literal valuetype System.ComponentModel.RefreshProperties None = int32(0x00000000)
		.field static public literal valuetype System.ComponentModel.RefreshProperties Repaint = int32(0x00000002)
	}
	.class public sealed RefreshPropertiesAttribute
		extends [mscorlib]System.Attribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = (01 00 FF 7F 00 00 00 00)
		.method public hidebysig specialname 
			instance void .ctor(valuetype System.ComponentModel.RefreshProperties refresh)
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype System.ComponentModel.RefreshProperties get_RefreshProperties()
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool Equals(object 'value')
		{
			ret
		}
		.method public virtual hidebysig 
			instance int32 GetHashCode()
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool IsDefaultAttribute()
		{
			ret
		}
		.field static public initonly class System.ComponentModel.RefreshPropertiesAttribute All
		.field static public initonly class System.ComponentModel.RefreshPropertiesAttribute Default
		.field static public initonly class System.ComponentModel.RefreshPropertiesAttribute Repaint
		.property instance valuetype System.ComponentModel.RefreshProperties RefreshProperties()
		{
			.get instance valuetype System.ComponentModel.RefreshProperties System.ComponentModel.RefreshPropertiesAttribute::get_RefreshProperties()
		}
	}
	.class public RunWorkerCompletedEventArgs
		extends System.ComponentModel.AsyncCompletedEventArgs
	{
		.permissionset linkcheck = (00)
		.method public hidebysig specialname 
			instance void .ctor(object result, class [mscorlib]System.Exception 'error', bool cancelled)
		{
			ret
		}
		.method public hidebysig specialname 
			instance object get_Result()
		{
			ret
		}
		.method public hidebysig specialname 
			instance object get_UserState()
		{
			ret
		}
		.property instance object Result()
		{
			.get instance object System.ComponentModel.RunWorkerCompletedEventArgs::get_Result()
		}
		.property instance object UserState()
		{
			.custom instance void System.ComponentModel.BrowsableAttribute::.ctor(bool) = (01 00 00 00 00)
			.custom instance void System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype System.ComponentModel.EditorBrowsableState) = (01 00 01 00 00 00 00 00)
			.get instance object System.ComponentModel.RunWorkerCompletedEventArgs::get_UserState()
		}
	}
	.class public sealed RunWorkerCompletedEventHandler
		extends [mscorlib]System.MulticastDelegate
	{
		.permissionset linkcheck = (00)
		.method public hidebysig specialname 
			instance void .ctor(object 'object', native int 'method')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void Invoke(object sender, class System.ComponentModel.RunWorkerCompletedEventArgs e)
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance class [mscorlib]System.IAsyncResult BeginInvoke(object sender, class System.ComponentModel.RunWorkerCompletedEventArgs e, class [mscorlib]System.AsyncCallback callback, object 'object')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void EndInvoke(class [mscorlib]System.IAsyncResult result)
			runtime 
		{
		}
	}
	.class public SByteConverter
		extends System.ComponentModel.BaseNumberConverter
	{
		.permissionset linkcheck = (00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public sealed SettingsBindableAttribute
		extends [mscorlib]System.Attribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = (01 00 80 00 00 00 00 00)
		.method public hidebysig specialname 
			instance void .ctor(bool bindable)
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_Bindable()
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool Equals(object obj)
		{
			ret
		}
		.method public virtual hidebysig 
			instance int32 GetHashCode()
		{
			ret
		}
		.field static public initonly class System.ComponentModel.SettingsBindableAttribute No
		.field static public initonly class System.ComponentModel.SettingsBindableAttribute Yes
		.property instance bool Bindable()
		{
			.get instance bool System.ComponentModel.SettingsBindableAttribute::get_Bindable()
		}
	}
	.class public SingleConverter
		extends System.ComponentModel.BaseNumberConverter
	{
		.permissionset linkcheck = (00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public StringConverter
		extends System.ComponentModel.TypeConverter
	{
		.permissionset linkcheck = (00)
		.method public virtual hidebysig 
			instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Type sourceType)
		{
			ret
		}
		.method public virtual hidebysig 
			instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Globalization.CultureInfo culture, object 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public abstract sealed SyntaxCheck
		extends [mscorlib]System.Object
	{
		.permissionset linkcheck = (00)
		.method public static hidebysig 
			bool CheckMachineName(string 'value')
		{
			ret
		}
		.method public static hidebysig 
			bool CheckPath(string 'value')
		{
			ret
		}
		.method public static hidebysig 
			bool CheckRootedPath(string 'value')
		{
			ret
		}
	}
	.class public TimeSpanConverter
		extends System.ComponentModel.TypeConverter
	{
		.permissionset linkcheck = (00)
		.method public virtual hidebysig 
			instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Type sourceType)
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Type destinationType)
		{
			ret
		}
		.method public virtual hidebysig 
			instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Globalization.CultureInfo culture, object 'value')
		{
			ret
		}
		.method public virtual hidebysig 
			instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Globalization.CultureInfo culture, object 'value', class [mscorlib]System.Type destinationType)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public ToolboxItemAttribute
		extends [mscorlib]System.Attribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = (01 00 FF 7F 00 00 00 00)
		.method public virtual hidebysig 
			instance bool IsDefaultAttribute()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(bool defaultType)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string toolboxItemTypeName)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Type toolboxItemType)
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]System.Type get_ToolboxItemType()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_ToolboxItemTypeName()
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool Equals(object obj)
		{
			ret
		}
		.method public virtual hidebysig 
			instance int32 GetHashCode()
		{
			ret
		}
		.field static public initonly class System.ComponentModel.ToolboxItemAttribute Default
		.field static public initonly class System.ComponentModel.ToolboxItemAttribute None
		.property instance class [mscorlib]System.Type ToolboxItemType()
		{
			.get instance class [mscorlib]System.Type System.ComponentModel.ToolboxItemAttribute::get_ToolboxItemType()
		}
		.property instance string ToolboxItemTypeName()
		{
			.get instance string System.ComponentModel.ToolboxItemAttribute::get_ToolboxItemTypeName()
		}
	}
	.class public sealed serializable ToolboxItemFilterAttribute
		extends [mscorlib]System.Attribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = (01 00 04 00 00 00 02 00 54 02 0D 41 6C 6C 6F 77 4D 75 6C 74 69 70 6C 65 01 54 02 09 49 6E 68 65 72 69 74 65 64 01)
		.method public hidebysig specialname 
			instance void .ctor(string filterString)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string filterString, valuetype System.ComponentModel.ToolboxItemFilterType filterType)
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_FilterString()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype System.ComponentModel.ToolboxItemFilterType get_FilterType()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance object get_TypeId()
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool Equals(object obj)
		{
			ret
		}
		.method public virtual hidebysig 
			instance int32 GetHashCode()
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool Match(object obj)
		{
			ret
		}
		.method public virtual hidebysig 
			instance string ToString()
		{
			ret
		}
		.property instance string FilterString()
		{
			.get instance string System.ComponentModel.ToolboxItemFilterAttribute::get_FilterString()
		}
		.property instance valuetype System.ComponentModel.ToolboxItemFilterType FilterType()
		{
			.get instance valuetype System.ComponentModel.ToolboxItemFilterType System.ComponentModel.ToolboxItemFilterAttribute::get_FilterType()
		}
		.property instance object TypeId()
		{
			.get instance object System.ComponentModel.ToolboxItemFilterAttribute::get_TypeId()
		}
	}
	.class public sealed ToolboxItemFilterType
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype System.ComponentModel.ToolboxItemFilterType Allow = int32(0x00000000)
		.field static public literal valuetype System.ComponentModel.ToolboxItemFilterType Custom = int32(0x00000001)
		.field static public literal valuetype System.ComponentModel.ToolboxItemFilterType Prevent = int32(0x00000002)
		.field static public literal valuetype System.ComponentModel.ToolboxItemFilterType Require = int32(0x00000003)
	}
	.class public TypeConverter
		extends [mscorlib]System.Object
	{
		.permissionset linkcheck = (00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.class nested family abstract SimplePropertyDescriptor
			extends System.ComponentModel.PropertyDescriptor
		{
			.method family hidebysig specialname 
				instance void .ctor(class [mscorlib]System.Type componentType, string name, class [mscorlib]System.Type propertyType)
			{
				ret
			}
			.method family hidebysig specialname 
				instance void .ctor(class [mscorlib]System.Type componentType, string name, class [mscorlib]System.Type propertyType, class [mscorlib]System.Attribute[] attributes)
			{
				ret
			}
			.method public virtual hidebysig specialname 
				instance class [mscorlib]System.Type get_ComponentType()
			{
				ret
			}
			.method public virtual hidebysig specialname 
				instance bool get_IsReadOnly()
			{
				ret
			}
			.method public virtual hidebysig specialname 
				instance class [mscorlib]System.Type get_PropertyType()
			{
				ret
			}
			.method public virtual hidebysig 
				instance bool CanResetValue(object component)
			{
				ret
			}
			.method public virtual hidebysig 
				instance void ResetValue(object component)
			{
				ret
			}
			.method public virtual hidebysig 
				instance bool ShouldSerializeValue(object component)
			{
				ret
			}
			.property instance class [mscorlib]System.Type ComponentType()
			{
				.get instance class [mscorlib]System.Type System.ComponentModel.TypeConverter/SimplePropertyDescriptor::get_ComponentType()
			}
			.property instance bool IsReadOnly()
			{
				.get instance bool System.ComponentModel.TypeConverter/SimplePropertyDescriptor::get_IsReadOnly()
			}
			.property instance class [mscorlib]System.Type PropertyType()
			{
				.get instance class [mscorlib]System.Type System.ComponentModel.TypeConverter/SimplePropertyDescriptor::get_PropertyType()
			}
		}
		.class nested public StandardValuesCollection
			extends [mscorlib]System.Object
			implements [mscorlib]System.Collections.ICollection, [mscorlib]System.Collections.IEnumerable
		{
			.custom instance void [mscorlib]System.Reflection.DefaultMemberAttribute::.ctor(string) = (01 00 04 49 74 65 6D 00 00)
			.method public hidebysig specialname 
				instance void .ctor(class [mscorlib]System.Collections.ICollection values)
			{
				ret
			}
			.method public hidebysig specialname 
				instance int32 get_Count()
			{
				ret
			}
			.method public hidebysig specialname 
				instance object get_Item(int32 index)
			{
				ret
			}
			.method public hidebysig 
				instance void CopyTo(class [mscorlib]System.Array 'array', int32 index)
			{
				ret
			}
			.method public hidebysig 
				instance class [mscorlib]System.Collections.IEnumerator GetEnumerator()
			{
				ret
			}
			.method private final virtual hidebysig newslot specialname 
				instance int32 System.Collections.ICollection.get_Count()
			{
				.override [mscorlib]System.Collections.ICollection::get_Count
				ret
			}
			.method private final virtual hidebysig newslot specialname 
				instance bool System.Collections.ICollection.get_IsSynchronized()
			{
				.override [mscorlib]System.Collections.ICollection::get_IsSynchronized
				ret
			}
			.method private final virtual hidebysig newslot specialname 
				instance object System.Collections.ICollection.get_SyncRoot()
			{
				.override [mscorlib]System.Collections.ICollection::get_SyncRoot
				ret
			}
			.method private final virtual hidebysig newslot 
				instance void System.Collections.ICollection.CopyTo(class [mscorlib]System.Array 'array', int32 index)
			{
				.override [mscorlib]System.Collections.ICollection::CopyTo
				ret
			}
			.method private final virtual hidebysig newslot 
				instance class [mscorlib]System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				.override [mscorlib]System.Collections.IEnumerable::GetEnumerator
				ret
			}
			.property instance int32 Count()
			{
				.get instance int32 System.ComponentModel.TypeConverter/StandardValuesCollection::get_Count()
			}
			.property instance object Item(int32)
			{
				.get instance object System.ComponentModel.TypeConverter/StandardValuesCollection::get_Item(int32)
			}
			.property instance int32 System.Collections.ICollection.Count()
			{
				.get instance int32 System.ComponentModel.TypeConverter/StandardValuesCollection::System.Collections.ICollection.get_Count()
			}
			.property instance bool System.Collections.ICollection.IsSynchronized()
			{
				.get instance bool System.ComponentModel.TypeConverter/StandardValuesCollection::System.Collections.ICollection.get_IsSynchronized()
			}
			.property instance object System.Collections.ICollection.SyncRoot()
			{
				.get instance object System.ComponentModel.TypeConverter/StandardValuesCollection::System.Collections.ICollection.get_SyncRoot()
			}
		}
		.method public hidebysig 
			instance bool CanConvertFrom(class [mscorlib]System.Type sourceType)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Type sourceType)
		{
			ret
		}
		.method public hidebysig 
			instance bool CanConvertTo(class [mscorlib]System.Type destinationType)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Type destinationType)
		{
			ret
		}
		.method public hidebysig 
			instance object ConvertFrom(object 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Globalization.CultureInfo culture, object 'value')
		{
			ret
		}
		.method public hidebysig 
			instance object ConvertFromInvariantString(string text)
		{
			ret
		}
		.method public hidebysig 
			instance object ConvertFromInvariantString(class System.ComponentModel.ITypeDescriptorContext context, string text)
		{
			ret
		}
		.method public hidebysig 
			instance object ConvertFromString(string text)
		{
			ret
		}
		.method public hidebysig 
			instance object ConvertFromString(class System.ComponentModel.ITypeDescriptorContext context, string text)
		{
			ret
		}
		.method public hidebysig 
			instance object ConvertFromString(class System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Globalization.CultureInfo culture, string text)
		{
			ret
		}
		.method public hidebysig 
			instance object ConvertTo(object 'value', class [mscorlib]System.Type destinationType)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Globalization.CultureInfo culture, object 'value', class [mscorlib]System.Type destinationType)
		{
			ret
		}
		.method public hidebysig 
			instance string ConvertToInvariantString(object 'value')
		{
			ret
		}
		.method public hidebysig 
			instance string ConvertToInvariantString(class System.ComponentModel.ITypeDescriptorContext context, object 'value')
		{
			ret
		}
		.method public hidebysig 
			instance string ConvertToString(object 'value')
		{
			ret
		}
		.method public hidebysig 
			instance string ConvertToString(class System.ComponentModel.ITypeDescriptorContext context, object 'value')
		{
			ret
		}
		.method public hidebysig 
			instance string ConvertToString(class System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Globalization.CultureInfo culture, object 'value')
		{
			ret
		}
		.method public hidebysig 
			instance object CreateInstance(class [mscorlib]System.Collections.IDictionary propertyValues)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance object CreateInstance(class System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Collections.IDictionary propertyValues)
		{
			ret
		}
		.method family hidebysig 
			instance class [mscorlib]System.Exception GetConvertFromException(object 'value')
		{
			ret
		}
		.method family hidebysig 
			instance class [mscorlib]System.Exception GetConvertToException(object 'value', class [mscorlib]System.Type destinationType)
		{
			ret
		}
		.method public hidebysig 
			instance bool GetCreateInstanceSupported()
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance bool GetCreateInstanceSupported(class System.ComponentModel.ITypeDescriptorContext context)
		{
			ret
		}
		.method public hidebysig 
			instance class System.ComponentModel.PropertyDescriptorCollection GetProperties(object 'value')
		{
			ret
		}
		.method public hidebysig 
			instance class System.ComponentModel.PropertyDescriptorCollection GetProperties(class System.ComponentModel.ITypeDescriptorContext context, object 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance class System.ComponentModel.PropertyDescriptorCollection GetProperties(class System.ComponentModel.ITypeDescriptorContext context, object 'value', class [mscorlib]System.Attribute[] attributes)
		{
			ret
		}
		.method public hidebysig 
			instance bool GetPropertiesSupported()
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance bool GetPropertiesSupported(class System.ComponentModel.ITypeDescriptorContext context)
		{
			ret
		}
		.method public hidebysig 
			instance class [mscorlib]System.Collections.ICollection GetStandardValues()
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance class System.ComponentModel.TypeConverter/StandardValuesCollection GetStandardValues(class System.ComponentModel.ITypeDescriptorContext context)
		{
			ret
		}
		.method public hidebysig 
			instance bool GetStandardValuesExclusive()
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance bool GetStandardValuesExclusive(class System.ComponentModel.ITypeDescriptorContext context)
		{
			ret
		}
		.method public hidebysig 
			instance bool GetStandardValuesSupported()
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance bool GetStandardValuesSupported(class System.ComponentModel.ITypeDescriptorContext context)
		{
			ret
		}
		.method public hidebysig 
			instance bool IsValid(object 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance bool IsValid(class System.ComponentModel.ITypeDescriptorContext context, object 'value')
		{
			ret
		}
		.method family hidebysig 
			instance class System.ComponentModel.PropertyDescriptorCollection SortProperties(class System.ComponentModel.PropertyDescriptorCollection props, string[] names)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public sealed TypeConverterAttribute
		extends [mscorlib]System.Attribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = (01 00 FF 7F 00 00 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Type 'type')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string typeName)
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_ConverterTypeName()
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool Equals(object obj)
		{
			ret
		}
		.method public virtual hidebysig 
			instance int32 GetHashCode()
		{
			ret
		}
		.field static public initonly class System.ComponentModel.TypeConverterAttribute Default
		.property instance string ConverterTypeName()
		{
			.get instance string System.ComponentModel.TypeConverterAttribute::get_ConverterTypeName()
		}
	}
	.class public abstract TypeDescriptionProvider
		extends [mscorlib]System.Object
	{
		.permissionset linkcheck = (00)
		.method family hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method family hidebysig specialname 
			instance void .ctor(class System.ComponentModel.TypeDescriptionProvider parent)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance object CreateInstance(class [mscorlib]System.IServiceProvider provider, class [mscorlib]System.Type objectType, class [mscorlib]System.Type[] argTypes, object[] args)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance class [mscorlib]System.Collections.IDictionary GetCache(object 'instance')
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance class System.ComponentModel.ICustomTypeDescriptor GetExtendedTypeDescriptor(object 'instance')
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance string GetFullComponentName(object component)
		{
			ret
		}
		.method public hidebysig 
			instance class [mscorlib]System.Type GetReflectionType(class [mscorlib]System.Type objectType)
		{
			ret
		}
		.method public hidebysig 
			instance class [mscorlib]System.Type GetReflectionType(object 'instance')
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance class [mscorlib]System.Type GetReflectionType(class [mscorlib]System.Type objectType, object 'instance')
		{
			ret
		}
		.method public hidebysig 
			instance class System.ComponentModel.ICustomTypeDescriptor GetTypeDescriptor(class [mscorlib]System.Type objectType)
		{
			ret
		}
		.method public hidebysig 
			instance class System.ComponentModel.ICustomTypeDescriptor GetTypeDescriptor(object 'instance')
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance class System.ComponentModel.ICustomTypeDescriptor GetTypeDescriptor(class [mscorlib]System.Type objectType, object 'instance')
		{
			ret
		}
	}
	.class public sealed TypeDescriptionProviderAttribute
		extends [mscorlib]System.Attribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = (01 00 04 00 00 00 01 00 54 02 09 49 6E 68 65 72 69 74 65 64 01)
		.method public hidebysig specialname 
			instance void .ctor(string typeName)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Type 'type')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_TypeName()
		{
			ret
		}
		.property instance string TypeName()
		{
			.get instance string System.ComponentModel.TypeDescriptionProviderAttribute::get_TypeName()
		}
	}
	.class public sealed TypeDescriptor
		extends [mscorlib]System.Object
	{
		.permissionset linkcheck = (00)
		.method public static hidebysig specialname 
			class System.ComponentModel.IComNativeDescriptorHandler get_ComNativeDescriptorHandler()
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public static hidebysig specialname 
			void set_ComNativeDescriptorHandler(class System.ComponentModel.IComNativeDescriptorHandler 'value')
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public static hidebysig specialname 
			class [mscorlib]System.Type get_ComObjectType()
		{
			ret
		}
		.method public static hidebysig specialname 
			void add_Refreshed(class System.ComponentModel.RefreshEventHandler 'value')
		{
			ret
		}
		.method public static hidebysig specialname 
			void remove_Refreshed(class System.ComponentModel.RefreshEventHandler 'value')
		{
			ret
		}
		.method public static hidebysig 
			class System.ComponentModel.TypeDescriptionProvider AddAttributes(class [mscorlib]System.Type 'type', class [mscorlib]System.Attribute[] attributes)
		{
			.permissionset linkcheck = (00)
			.custom instance void System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype System.ComponentModel.EditorBrowsableState) = (01 00 02 00 00 00 00 00)
			.param [2]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = (01 00 00 00)
			ret
		}
		.method public static hidebysig 
			class System.ComponentModel.TypeDescriptionProvider AddAttributes(object 'instance', class [mscorlib]System.Attribute[] attributes)
		{
			.permissionset linkcheck = (00)
			.custom instance void System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype System.ComponentModel.EditorBrowsableState) = (01 00 02 00 00 00 00 00)
			.param [2]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = (01 00 00 00)
			ret
		}
		.method public static hidebysig 
			void AddEditorTable(class [mscorlib]System.Type editorBaseType, class [mscorlib]System.Collections.Hashtable table)
		{
			.custom instance void System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype System.ComponentModel.EditorBrowsableState) = (01 00 02 00 00 00 00 00)
			ret
		}
		.method public static hidebysig 
			void AddProvider(class System.ComponentModel.TypeDescriptionProvider provider, class [mscorlib]System.Type 'type')
		{
			.permissionset linkcheck = (00)
			.custom instance void System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype System.ComponentModel.EditorBrowsableState) = (01 00 02 00 00 00 00 00)
			ret
		}
		.method public static hidebysig 
			void AddProvider(class System.ComponentModel.TypeDescriptionProvider provider, object 'instance')
		{
			.permissionset linkcheck = (00)
			.custom instance void System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype System.ComponentModel.EditorBrowsableState) = (01 00 02 00 00 00 00 00)
			ret
		}
		.method public static hidebysig 
			void CreateAssociation(object primary, object secondary)
		{
			.permissionset linkcheck = (00)
			.custom instance void System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype System.ComponentModel.EditorBrowsableState) = (01 00 02 00 00 00 00 00)
			ret
		}
		.method public static hidebysig 
			class System.ComponentModel.Design.IDesigner CreateDesigner(class System.ComponentModel.IComponent component, class [mscorlib]System.Type designerBaseType)
		{
			ret
		}
		.method public static hidebysig 
			class System.ComponentModel.EventDescriptor CreateEvent(class [mscorlib]System.Type componentType, string name, class [mscorlib]System.Type 'type', class [mscorlib]System.Attribute[] attributes)
		{
			.permissionset linkcheck = (00)
			.param [4]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = (01 00 00 00)
			ret
		}
		.method public static hidebysig 
			class System.ComponentModel.EventDescriptor CreateEvent(class [mscorlib]System.Type componentType, class System.ComponentModel.EventDescriptor oldEventDescriptor, class [mscorlib]System.Attribute[] attributes)
		{
			.permissionset linkcheck = (00)
			.param [3]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = (01 00 00 00)
			ret
		}
		.method public static hidebysig 
			object CreateInstance(class [mscorlib]System.IServiceProvider provider, class [mscorlib]System.Type objectType, class [mscorlib]System.Type[] argTypes, object[] args)
		{
			ret
		}
		.method public static hidebysig 
			class System.ComponentModel.PropertyDescriptor CreateProperty(class [mscorlib]System.Type componentType, string name, class [mscorlib]System.Type 'type', class [mscorlib]System.Attribute[] attributes)
		{
			.permissionset linkcheck = (00)
			.param [4]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = (01 00 00 00)
			ret
		}
		.method public static hidebysig 
			class System.ComponentModel.PropertyDescriptor CreateProperty(class [mscorlib]System.Type componentType, class System.ComponentModel.PropertyDescriptor oldPropertyDescriptor, class [mscorlib]System.Attribute[] attributes)
		{
			.permissionset linkcheck = (00)
			.param [3]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = (01 00 00 00)
			ret
		}
		.method public static hidebysig 
			object GetAssociation(class [mscorlib]System.Type 'type', object primary)
		{
			.custom instance void System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype System.ComponentModel.EditorBrowsableState) = (01 00 02 00 00 00 00 00)
			ret
		}
		.method public static hidebysig 
			class System.ComponentModel.AttributeCollection GetAttributes(class [mscorlib]System.Type componentType)
		{
			ret
		}
		.method public static hidebysig 
			class System.ComponentModel.AttributeCollection GetAttributes(object component)
		{
			ret
		}
		.method public static hidebysig 
			class System.ComponentModel.AttributeCollection GetAttributes(object component, bool noCustomTypeDesc)
		{
			.custom instance void System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype System.ComponentModel.EditorBrowsableState) = (01 00 02 00 00 00 00 00)
			ret
		}
		.method public static hidebysig 
			string GetClassName(object component)
		{
			ret
		}
		.method public static hidebysig 
			string GetClassName(object component, bool noCustomTypeDesc)
		{
			.custom instance void System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype System.ComponentModel.EditorBrowsableState) = (01 00 02 00 00 00 00 00)
			ret
		}
		.method public static hidebysig 
			string GetClassName(class [mscorlib]System.Type componentType)
		{
			ret
		}
		.method public static hidebysig 
			string GetComponentName(object component)
		{
			ret
		}
		.method public static hidebysig 
			string GetComponentName(object component, bool noCustomTypeDesc)
		{
			.custom instance void System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype System.ComponentModel.EditorBrowsableState) = (01 00 02 00 00 00 00 00)
			ret
		}
		.method public static hidebysig 
			class System.ComponentModel.TypeConverter GetConverter(object component)
		{
			ret
		}
		.method public static hidebysig 
			class System.ComponentModel.TypeConverter GetConverter(object component, bool noCustomTypeDesc)
		{
			.custom instance void System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype System.ComponentModel.EditorBrowsableState) = (01 00 02 00 00 00 00 00)
			ret
		}
		.method public static hidebysig 
			class System.ComponentModel.TypeConverter GetConverter(class [mscorlib]System.Type 'type')
		{
			ret
		}
		.method public static hidebysig 
			class System.ComponentModel.EventDescriptor GetDefaultEvent(class [mscorlib]System.Type componentType)
		{
			ret
		}
		.method public static hidebysig 
			class System.ComponentModel.EventDescriptor GetDefaultEvent(object component)
		{
			ret
		}
		.method public static hidebysig 
			class System.ComponentModel.EventDescriptor GetDefaultEvent(object component, bool noCustomTypeDesc)
		{
			.custom instance void System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype System.ComponentModel.EditorBrowsableState) = (01 00 02 00 00 00 00 00)
			ret
		}
		.method public static hidebysig 
			class System.ComponentModel.PropertyDescriptor GetDefaultProperty(class [mscorlib]System.Type componentType)
		{
			ret
		}
		.method public static hidebysig 
			class System.ComponentModel.PropertyDescriptor GetDefaultProperty(object component)
		{
			ret
		}
		.method public static hidebysig 
			class System.ComponentModel.PropertyDescriptor GetDefaultProperty(object component, bool noCustomTypeDesc)
		{
			.custom instance void System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype System.ComponentModel.EditorBrowsableState) = (01 00 02 00 00 00 00 00)
			ret
		}
		.method public static hidebysig 
			object GetEditor(object component, class [mscorlib]System.Type editorBaseType)
		{
			ret
		}
		.method public static hidebysig 
			object GetEditor(object component, class [mscorlib]System.Type editorBaseType, bool noCustomTypeDesc)
		{
			.custom instance void System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype System.ComponentModel.EditorBrowsableState) = (01 00 02 00 00 00 00 00)
			ret
		}
		.method public static hidebysig 
			object GetEditor(class [mscorlib]System.Type 'type', class [mscorlib]System.Type editorBaseType)
		{
			ret
		}
		.method public static hidebysig 
			class System.ComponentModel.EventDescriptorCollection GetEvents(class [mscorlib]System.Type componentType)
		{
			ret
		}
		.method public static hidebysig 
			class System.ComponentModel.EventDescriptorCollection GetEvents(class [mscorlib]System.Type componentType, class [mscorlib]System.Attribute[] attributes)
		{
			ret
		}
		.method public static hidebysig 
			class System.ComponentModel.EventDescriptorCollection GetEvents(object component)
		{
			ret
		}
		.method public static hidebysig 
			class System.ComponentModel.EventDescriptorCollection GetEvents(object component, bool noCustomTypeDesc)
		{
			.custom instance void System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype System.ComponentModel.EditorBrowsableState) = (01 00 02 00 00 00 00 00)
			ret
		}
		.method public static hidebysig 
			class System.ComponentModel.EventDescriptorCollection GetEvents(object component, class [mscorlib]System.Attribute[] attributes)
		{
			ret
		}
		.method public static hidebysig 
			class System.ComponentModel.EventDescriptorCollection GetEvents(object component, class [mscorlib]System.Attribute[] attributes, bool noCustomTypeDesc)
		{
			.custom instance void System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype System.ComponentModel.EditorBrowsableState) = (01 00 02 00 00 00 00 00)
			ret
		}
		.method public static hidebysig 
			string GetFullComponentName(object component)
		{
			ret
		}
		.method public static hidebysig 
			class System.ComponentModel.PropertyDescriptorCollection GetProperties(class [mscorlib]System.Type componentType)
		{
			ret
		}
		.method public static hidebysig 
			class System.ComponentModel.PropertyDescriptorCollection GetProperties(class [mscorlib]System.Type componentType, class [mscorlib]System.Attribute[] attributes)
		{
			ret
		}
		.method public static hidebysig 
			class System.ComponentModel.PropertyDescriptorCollection GetProperties(object component)
		{
			ret
		}
		.method public static hidebysig 
			class System.ComponentModel.PropertyDescriptorCollection GetProperties(object component, bool noCustomTypeDesc)
		{
			.custom instance void System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype System.ComponentModel.EditorBrowsableState) = (01 00 02 00 00 00 00 00)
			ret
		}
		.method public static hidebysig 
			class System.ComponentModel.PropertyDescriptorCollection GetProperties(object component, class [mscorlib]System.Attribute[] attributes)
		{
			ret
		}
		.method public static hidebysig 
			class System.ComponentModel.PropertyDescriptorCollection GetProperties(object component, class [mscorlib]System.Attribute[] attributes, bool noCustomTypeDesc)
		{
			ret
		}
		.method public static hidebysig 
			class System.ComponentModel.TypeDescriptionProvider GetProvider(class [mscorlib]System.Type 'type')
		{
			.custom instance void System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype System.ComponentModel.EditorBrowsableState) = (01 00 02 00 00 00 00 00)
			ret
		}
		.method public static hidebysig 
			class System.ComponentModel.TypeDescriptionProvider GetProvider(object 'instance')
		{
			.custom instance void System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype System.ComponentModel.EditorBrowsableState) = (01 00 02 00 00 00 00 00)
			ret
		}
		.method public static hidebysig 
			class [mscorlib]System.Type GetReflectionType(class [mscorlib]System.Type 'type')
		{
			.custom instance void System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype System.ComponentModel.EditorBrowsableState) = (01 00 02 00 00 00 00 00)
			ret
		}
		.method public static hidebysig 
			class [mscorlib]System.Type GetReflectionType(object 'instance')
		{
			.custom instance void System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype System.ComponentModel.EditorBrowsableState) = (01 00 02 00 00 00 00 00)
			ret
		}
		.method public static hidebysig 
			void Refresh(object component)
		{
			ret
		}
		.method public static hidebysig 
			void Refresh(class [mscorlib]System.Type 'type')
		{
			ret
		}
		.method public static hidebysig 
			void Refresh(class [mscorlib]System.Reflection.Module module)
		{
			ret
		}
		.method public static hidebysig 
			void Refresh(class [mscorlib]System.Reflection.Assembly 'assembly')
		{
			ret
		}
		.method public static hidebysig 
			void RemoveAssociation(object primary, object secondary)
		{
			.permissionset linkcheck = (00)
			.custom instance void System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype System.ComponentModel.EditorBrowsableState) = (01 00 02 00 00 00 00 00)
			ret
		}
		.method public static hidebysig 
			void RemoveAssociations(object primary)
		{
			.permissionset linkcheck = (00)
			.custom instance void System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype System.ComponentModel.EditorBrowsableState) = (01 00 02 00 00 00 00 00)
			ret
		}
		.method public static hidebysig 
			void RemoveProvider(class System.ComponentModel.TypeDescriptionProvider provider, class [mscorlib]System.Type 'type')
		{
			.permissionset linkcheck = (00)
			.custom instance void System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype System.ComponentModel.EditorBrowsableState) = (01 00 02 00 00 00 00 00)
			ret
		}
		.method public static hidebysig 
			void RemoveProvider(class System.ComponentModel.TypeDescriptionProvider provider, object 'instance')
		{
			.permissionset linkcheck = (00)
			.custom instance void System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype System.ComponentModel.EditorBrowsableState) = (01 00 02 00 00 00 00 00)
			ret
		}
		.method public static hidebysig 
			void SortDescriptorArray(class [mscorlib]System.Collections.IList infos)
		{
			ret
		}
		.event System.ComponentModel.RefreshEventHandler Refreshed
		{
			.addon void System.ComponentModel.TypeDescriptor::add_Refreshed(class System.ComponentModel.RefreshEventHandler)
			.removeon void System.ComponentModel.TypeDescriptor::remove_Refreshed(class System.ComponentModel.RefreshEventHandler)
		}
		.property class System.ComponentModel.IComNativeDescriptorHandler ComNativeDescriptorHandler()
		{
			.custom instance void [mscorlib]System.ObsoleteAttribute::.ctor(string) = (01 00 80 A3 54 68 69 73 20 70 72 6F 70 65 72 74 79 20 68 61 73 20 62 65 65 6E 20 64 65 70 72 65 63 61 74 65 64 2E 20 20 55 73 65 20 61 20 74 79 70 65 20 64 65 73 63 72 69 70 74 69 6F 6E 20 70 72 6F 76 69 64 65 72 20 74 6F 20 73 75 70 70 6C 79 20 74 79 70 65 20 69 6E 66 6F 72 6D 61 74 69 6F 6E 20 66 6F 72 20 43 4F 4D 20 74 79 70 65 73 20 69 6E 73 74 65 61 64 2E 20 20 68 74 74 70 3A 2F 2F 67 6F 2E 6D 69 63 72 6F 73 6F 66 74 2E 63 6F 6D 2F 66 77 6C 69 6E 6B 2F 3F 6C 69 6E 6B 69 64 3D 31 34 32 30 32 00 00)
			.get class System.ComponentModel.IComNativeDescriptorHandler System.ComponentModel.TypeDescriptor::get_ComNativeDescriptorHandler()
			.set void System.ComponentModel.TypeDescriptor::set_ComNativeDescriptorHandler(class System.ComponentModel.IComNativeDescriptorHandler)
		}
		.property class [mscorlib]System.Type ComObjectType()
		{
			.custom instance void System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype System.ComponentModel.EditorBrowsableState) = (01 00 02 00 00 00 00 00)
			.get class [mscorlib]System.Type System.ComponentModel.TypeDescriptor::get_ComObjectType()
		}
	}
	.class public abstract TypeListConverter
		extends System.ComponentModel.TypeConverter
	{
		.permissionset linkcheck = (00)
		.method family hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Type[] types)
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Type sourceType)
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Type destinationType)
		{
			ret
		}
		.method public virtual hidebysig 
			instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Globalization.CultureInfo culture, object 'value')
		{
			ret
		}
		.method public virtual hidebysig 
			instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class [mscorlib]System.Globalization.CultureInfo culture, object 'value', class [mscorlib]System.Type destinationType)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class System.ComponentModel.TypeConverter/StandardValuesCollection GetStandardValues(class System.ComponentModel.ITypeDescriptorContext context)
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool GetStandardValuesExclusive(class System.ComponentModel.ITypeDescriptorContext context)
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool GetStandardValuesSupported(class System.ComponentModel.ITypeDescriptorContext context)
		{
			ret
		}
	}
	.class public UInt16Converter
		extends System.ComponentModel.BaseNumberConverter
	{
		.permissionset linkcheck = (00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public UInt32Converter
		extends System.ComponentModel.BaseNumberConverter
	{
		.permissionset linkcheck = (00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public UInt64Converter
		extends System.ComponentModel.BaseNumberConverter
	{
		.permissionset linkcheck = (00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public serializable WarningException
		extends [mscorlib]System.SystemException
	{
		.permissionset linkcheck = (00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string message)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string message, string helpUrl)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string message, class [mscorlib]System.Exception innerException)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string message, string helpUrl, string helpTopic)
		{
			ret
		}
		.method family hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Runtime.Serialization.SerializationInfo info, valuetype [mscorlib]System.Runtime.Serialization.StreamingContext context)
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_HelpUrl()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_HelpTopic()
		{
			ret
		}
		.method public virtual hidebysig 
			instance void GetObjectData(class [mscorlib]System.Runtime.Serialization.SerializationInfo info, valuetype [mscorlib]System.Runtime.Serialization.StreamingContext context)
		{
			ret
		}
		.property instance string HelpTopic()
		{
			.get instance string System.ComponentModel.WarningException::get_HelpTopic()
		}
		.property instance string HelpUrl()
		{
			.get instance string System.ComponentModel.WarningException::get_HelpUrl()
		}
	}
	.class public serializable Win32Exception
		extends [mscorlib]System.Runtime.InteropServices.ExternalException
		implements [mscorlib]System.Runtime.Serialization.ISerializable
	{
		.permissionset linkcheck = (00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(int32 'error')
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(int32 'error', string message)
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string message)
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string message, class [mscorlib]System.Exception innerException)
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method family hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Runtime.Serialization.SerializationInfo info, valuetype [mscorlib]System.Runtime.Serialization.StreamingContext context)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_NativeErrorCode()
		{
			ret
		}
		.method public virtual hidebysig 
			instance void GetObjectData(class [mscorlib]System.Runtime.Serialization.SerializationInfo info, valuetype [mscorlib]System.Runtime.Serialization.StreamingContext context)
		{
			ret
		}
		.property instance int32 NativeErrorCode()
		{
			.get instance int32 System.ComponentModel.Win32Exception::get_NativeErrorCode()
		}
	}
}
.namespace System.ComponentModel.Design
{
	.class public ActiveDesignerEventArgs
		extends [mscorlib]System.EventArgs
	{
		.permissionset linkcheck = (00)
		.method public hidebysig specialname 
			instance void .ctor(class System.ComponentModel.Design.IDesignerHost oldDesigner, class System.ComponentModel.Design.IDesignerHost newDesigner)
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.ComponentModel.Design.IDesignerHost get_OldDesigner()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.ComponentModel.Design.IDesignerHost get_NewDesigner()
		{
			ret
		}
		.property instance class System.ComponentModel.Design.IDesignerHost NewDesigner()
		{
			.get instance class System.ComponentModel.Design.IDesignerHost System.ComponentModel.Design.ActiveDesignerEventArgs::get_NewDesigner()
		}
		.property instance class System.ComponentModel.Design.IDesignerHost OldDesigner()
		{
			.get instance class System.ComponentModel.Design.IDesignerHost System.ComponentModel.Design.ActiveDesignerEventArgs::get_OldDesigner()
		}
	}
	.class public sealed ActiveDesignerEventHandler
		extends [mscorlib]System.MulticastDelegate
	{
		.permissionset linkcheck = (00)
		.method public hidebysig specialname 
			instance void .ctor(object 'object', native int 'method')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void Invoke(object sender, class System.ComponentModel.Design.ActiveDesignerEventArgs e)
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance class [mscorlib]System.IAsyncResult BeginInvoke(object sender, class System.ComponentModel.Design.ActiveDesignerEventArgs e, class [mscorlib]System.AsyncCallback callback, object 'object')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void EndInvoke(class [mscorlib]System.IAsyncResult result)
			runtime 
		{
		}
	}
	.class public serializable CheckoutException
		extends [mscorlib]System.Runtime.InteropServices.ExternalException
	{
		.permissionset linkcheck = (00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string message)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string message, int32 errorCode)
		{
			ret
		}
		.method family hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Runtime.Serialization.SerializationInfo info, valuetype [mscorlib]System.Runtime.Serialization.StreamingContext context)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string message, class [mscorlib]System.Exception innerException)
		{
			ret
		}
		.field static public initonly class System.ComponentModel.Design.CheckoutException Canceled
	}
	.class public CommandID
		extends [mscorlib]System.Object
	{
		.permissionset linkcheck = (00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method public hidebysig specialname 
			instance void .ctor(valuetype [mscorlib]System.Guid menuGroup, int32 commandID)
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance int32 get_ID()
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool Equals(object obj)
		{
			ret
		}
		.method public virtual hidebysig 
			instance int32 GetHashCode()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance valuetype [mscorlib]System.Guid get_Guid()
		{
			ret
		}
		.method public virtual hidebysig 
			instance string ToString()
		{
			ret
		}
		.property instance valuetype [mscorlib]System.Guid Guid()
		{
			.get instance valuetype [mscorlib]System.Guid System.ComponentModel.Design.CommandID::get_Guid()
		}
		.property instance int32 ID()
		{
			.get instance int32 System.ComponentModel.Design.CommandID::get_ID()
		}
	}
	.class public sealed ComponentChangedEventArgs
		extends [mscorlib]System.EventArgs
	{
		.permissionset linkcheck = (00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method public hidebysig specialname 
			instance object get_Component()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.ComponentModel.MemberDescriptor get_Member()
		{
			ret
		}
		.method public hidebysig specialname 
			instance object get_NewValue()
		{
			ret
		}
		.method public hidebysig specialname 
			instance object get_OldValue()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(object component, class System.ComponentModel.MemberDescriptor member, object oldValue, object newValue)
		{
			ret
		}
		.property instance object Component()
		{
			.get instance object System.ComponentModel.Design.ComponentChangedEventArgs::get_Component()
		}
		.property instance class System.ComponentModel.MemberDescriptor Member()
		{
			.get instance class System.ComponentModel.MemberDescriptor System.ComponentModel.Design.ComponentChangedEventArgs::get_Member()
		}
		.property instance object NewValue()
		{
			.get instance object System.ComponentModel.Design.ComponentChangedEventArgs::get_NewValue()
		}
		.property instance object OldValue()
		{
			.get instance object System.ComponentModel.Design.ComponentChangedEventArgs::get_OldValue()
		}
	}
	.class public sealed ComponentChangedEventHandler
		extends [mscorlib]System.MulticastDelegate
	{
		.permissionset linkcheck = (00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method public hidebysig specialname 
			instance void .ctor(object 'object', native int 'method')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void Invoke(object sender, class System.ComponentModel.Design.ComponentChangedEventArgs e)
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance class [mscorlib]System.IAsyncResult BeginInvoke(object sender, class System.ComponentModel.Design.ComponentChangedEventArgs e, class [mscorlib]System.AsyncCallback callback, object 'object')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void EndInvoke(class [mscorlib]System.IAsyncResult result)
			runtime 
		{
		}
	}
	.class public sealed ComponentChangingEventArgs
		extends [mscorlib]System.EventArgs
	{
		.permissionset linkcheck = (00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method public hidebysig specialname 
			instance object get_Component()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.ComponentModel.MemberDescriptor get_Member()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(object component, class System.ComponentModel.MemberDescriptor member)
		{
			ret
		}
		.property instance object Component()
		{
			.get instance object System.ComponentModel.Design.ComponentChangingEventArgs::get_Component()
		}
		.property instance class System.ComponentModel.MemberDescriptor Member()
		{
			.get instance class System.ComponentModel.MemberDescriptor System.ComponentModel.Design.ComponentChangingEventArgs::get_Member()
		}
	}
	.class public sealed ComponentChangingEventHandler
		extends [mscorlib]System.MulticastDelegate
	{
		.permissionset linkcheck = (00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method public hidebysig specialname 
			instance void .ctor(object 'object', native int 'method')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void Invoke(object sender, class System.ComponentModel.Design.ComponentChangingEventArgs e)
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance class [mscorlib]System.IAsyncResult BeginInvoke(object sender, class System.ComponentModel.Design.ComponentChangingEventArgs e, class [mscorlib]System.AsyncCallback callback, object 'object')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void EndInvoke(class [mscorlib]System.IAsyncResult result)
			runtime 
		{
		}
	}
	.class public ComponentEventArgs
		extends [mscorlib]System.EventArgs
	{
		.permissionset linkcheck = (00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method public virtual hidebysig newslot specialname 
			instance class System.ComponentModel.IComponent get_Component()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class System.ComponentModel.IComponent component)
		{
			ret
		}
		.property instance class System.ComponentModel.IComponent Component()
		{
			.get instance class System.ComponentModel.IComponent System.ComponentModel.Design.ComponentEventArgs::get_Component()
		}
	}
	.class public sealed ComponentEventHandler
		extends [mscorlib]System.MulticastDelegate
	{
		.permissionset linkcheck = (00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method public hidebysig specialname 
			instance void .ctor(object 'object', native int 'method')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void Invoke(object sender, class System.ComponentModel.Design.ComponentEventArgs e)
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance class [mscorlib]System.IAsyncResult BeginInvoke(object sender, class System.ComponentModel.Design.ComponentEventArgs e, class [mscorlib]System.AsyncCallback callback, object 'object')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void EndInvoke(class [mscorlib]System.IAsyncResult result)
			runtime 
		{
		}
	}
	.class public ComponentRenameEventArgs
		extends [mscorlib]System.EventArgs
	{
		.permissionset linkcheck = (00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method public hidebysig specialname 
			instance object get_Component()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance string get_OldName()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance string get_NewName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(object component, string oldName, string newName)
		{
			ret
		}
		.property instance object Component()
		{
			.get instance object System.ComponentModel.Design.ComponentRenameEventArgs::get_Component()
		}
		.property instance string NewName()
		{
			.get instance string System.ComponentModel.Design.ComponentRenameEventArgs::get_NewName()
		}
		.property instance string OldName()
		{
			.get instance string System.ComponentModel.Design.ComponentRenameEventArgs::get_OldName()
		}
	}
	.class public sealed ComponentRenameEventHandler
		extends [mscorlib]System.MulticastDelegate
	{
		.permissionset linkcheck = (00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method public hidebysig specialname 
			instance void .ctor(object 'object', native int 'method')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void Invoke(object sender, class System.ComponentModel.Design.ComponentRenameEventArgs e)
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance class [mscorlib]System.IAsyncResult BeginInvoke(object sender, class System.ComponentModel.Design.ComponentRenameEventArgs e, class [mscorlib]System.AsyncCallback callback, object 'object')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void EndInvoke(class [mscorlib]System.IAsyncResult result)
			runtime 
		{
		}
	}
	.class public DesignerCollection
		extends [mscorlib]System.Object
		implements [mscorlib]System.Collections.ICollection, [mscorlib]System.Collections.IEnumerable
	{
		.permissionset linkcheck = (00)
		.custom instance void [mscorlib]System.Reflection.DefaultMemberAttribute::.ctor(string) = (01 00 04 49 74 65 6D 00 00)
		.method public hidebysig specialname 
			instance void .ctor(class System.ComponentModel.Design.IDesignerHost[] designers)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Collections.IList designers)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_Count()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance class System.ComponentModel.Design.IDesignerHost get_Item(int32 index)
		{
			ret
		}
		.method public hidebysig 
			instance class [mscorlib]System.Collections.IEnumerator GetEnumerator()
		{
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance int32 System.Collections.ICollection.get_Count()
		{
			.override [mscorlib]System.Collections.ICollection::get_Count
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance bool System.Collections.ICollection.get_IsSynchronized()
		{
			.override [mscorlib]System.Collections.ICollection::get_IsSynchronized
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance object System.Collections.ICollection.get_SyncRoot()
		{
			.override [mscorlib]System.Collections.ICollection::get_SyncRoot
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Collections.ICollection.CopyTo(class [mscorlib]System.Array 'array', int32 index)
		{
			.override [mscorlib]System.Collections.ICollection::CopyTo
			ret
		}
		.method private final virtual hidebysig newslot 
			instance class [mscorlib]System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			.override [mscorlib]System.Collections.IEnumerable::GetEnumerator
			ret
		}
		.property instance int32 Count()
		{
			.get instance int32 System.ComponentModel.Design.DesignerCollection::get_Count()
		}
		.property instance class System.ComponentModel.Design.IDesignerHost Item(int32)
		{
			.get instance class System.ComponentModel.Design.IDesignerHost System.ComponentModel.Design.DesignerCollection::get_Item(int32)
		}
		.property instance int32 System.Collections.ICollection.Count()
		{
			.get instance int32 System.ComponentModel.Design.DesignerCollection::System.Collections.ICollection.get_Count()
		}
		.property instance bool System.Collections.ICollection.IsSynchronized()
		{
			.get instance bool System.ComponentModel.Design.DesignerCollection::System.Collections.ICollection.get_IsSynchronized()
		}
		.property instance object System.Collections.ICollection.SyncRoot()
		{
			.get instance object System.ComponentModel.Design.DesignerCollection::System.Collections.ICollection.get_SyncRoot()
		}
	}
	.class public DesignerEventArgs
		extends [mscorlib]System.EventArgs
	{
		.permissionset linkcheck = (00)
		.method public hidebysig specialname 
			instance void .ctor(class System.ComponentModel.Design.IDesignerHost host)
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.ComponentModel.Design.IDesignerHost get_Designer()
		{
			ret
		}
		.property instance class System.ComponentModel.Design.IDesignerHost Designer()
		{
			.get instance class System.ComponentModel.Design.IDesignerHost System.ComponentModel.Design.DesignerEventArgs::get_Designer()
		}
	}
	.class public sealed DesignerEventHandler
		extends [mscorlib]System.MulticastDelegate
	{
		.permissionset linkcheck = (00)
		.method public hidebysig specialname 
			instance void .ctor(object 'object', native int 'method')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void Invoke(object sender, class System.ComponentModel.Design.DesignerEventArgs e)
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance class [mscorlib]System.IAsyncResult BeginInvoke(object sender, class System.ComponentModel.Design.DesignerEventArgs e, class [mscorlib]System.AsyncCallback callback, object 'object')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void EndInvoke(class [mscorlib]System.IAsyncResult result)
			runtime 
		{
		}
	}
	.class public abstract DesignerOptionService
		extends [mscorlib]System.Object
		implements System.ComponentModel.Design.IDesignerOptionService
	{
		.permissionset linkcheck = (00)
		.class nested public sealed DesignerOptionCollection
			extends [mscorlib]System.Object
			implements [mscorlib]System.Collections.IList, [mscorlib]System.Collections.ICollection, [mscorlib]System.Collections.IEnumerable
		{
			.custom instance void [mscorlib]System.Reflection.DefaultMemberAttribute::.ctor(string) = (01 00 04 49 74 65 6D 00 00)
			.method public final virtual hidebysig newslot specialname 
				instance int32 get_Count()
			{
				ret
			}
			.method public hidebysig specialname 
				instance string get_Name()
			{
				ret
			}
			.method public hidebysig specialname 
				instance class System.ComponentModel.Design.DesignerOptionService/DesignerOptionCollection get_Parent()
			{
				ret
			}
			.method public hidebysig specialname 
				instance class System.ComponentModel.PropertyDescriptorCollection get_Properties()
			{
				ret
			}
			.method public hidebysig specialname 
				instance class System.ComponentModel.Design.DesignerOptionService/DesignerOptionCollection get_Item(int32 index)
			{
				ret
			}
			.method public hidebysig specialname 
				instance class System.ComponentModel.Design.DesignerOptionService/DesignerOptionCollection get_Item(string name)
			{
				ret
			}
			.method public final virtual hidebysig newslot 
				instance void CopyTo(class [mscorlib]System.Array 'array', int32 index)
			{
				ret
			}
			.method public final virtual hidebysig newslot 
				instance class [mscorlib]System.Collections.IEnumerator GetEnumerator()
			{
				ret
			}
			.method public hidebysig 
				instance int32 IndexOf(class System.ComponentModel.Design.DesignerOptionService/DesignerOptionCollection 'value')
			{
				ret
			}
			.method public hidebysig 
				instance bool ShowDialog()
			{
				ret
			}
			.method private final virtual hidebysig newslot specialname 
				instance bool System.Collections.ICollection.get_IsSynchronized()
			{
				.override [mscorlib]System.Collections.ICollection::get_IsSynchronized
				ret
			}
			.method private final virtual hidebysig newslot specialname 
				instance object System.Collections.ICollection.get_SyncRoot()
			{
				.override [mscorlib]System.Collections.ICollection::get_SyncRoot
				ret
			}
			.method private final virtual hidebysig newslot specialname 
				instance bool System.Collections.IList.get_IsFixedSize()
			{
				.override [mscorlib]System.Collections.IList::get_IsFixedSize
				ret
			}
			.method private final virtual hidebysig newslot specialname 
				instance bool System.Collections.IList.get_IsReadOnly()
			{
				.override [mscorlib]System.Collections.IList::get_IsReadOnly
				ret
			}
			.method private final virtual hidebysig newslot specialname 
				instance object System.Collections.IList.get_Item(int32 index)
			{
				.override [mscorlib]System.Collections.IList::get_Item
				ret
			}
			.method private final virtual hidebysig newslot specialname 
				instance void System.Collections.IList.set_Item(int32 index, object 'value')
			{
				.override [mscorlib]System.Collections.IList::set_Item
				ret
			}
			.method private final virtual hidebysig newslot 
				instance int32 System.Collections.IList.Add(object 'value')
			{
				.override [mscorlib]System.Collections.IList::Add
				ret
			}
			.method private final virtual hidebysig newslot 
				instance void System.Collections.IList.Clear()
			{
				.override [mscorlib]System.Collections.IList::Clear
				ret
			}
			.method private final virtual hidebysig newslot 
				instance bool System.Collections.IList.Contains(object 'value')
			{
				.override [mscorlib]System.Collections.IList::Contains
				ret
			}
			.method private final virtual hidebysig newslot 
				instance int32 System.Collections.IList.IndexOf(object 'value')
			{
				.override [mscorlib]System.Collections.IList::IndexOf
				ret
			}
			.method private final virtual hidebysig newslot 
				instance void System.Collections.IList.Insert(int32 index, object 'value')
			{
				.override [mscorlib]System.Collections.IList::Insert
				ret
			}
			.method private final virtual hidebysig newslot 
				instance void System.Collections.IList.Remove(object 'value')
			{
				.override [mscorlib]System.Collections.IList::Remove
				ret
			}
			.method private final virtual hidebysig newslot 
				instance void System.Collections.IList.RemoveAt(int32 index)
			{
				.override [mscorlib]System.Collections.IList::RemoveAt
				ret
			}
			.property instance int32 Count()
			{
				.get instance int32 System.ComponentModel.Design.DesignerOptionService/DesignerOptionCollection::get_Count()
			}
			.property instance class System.ComponentModel.Design.DesignerOptionService/DesignerOptionCollection Item(int32)
			{
				.get instance class System.ComponentModel.Design.DesignerOptionService/DesignerOptionCollection System.ComponentModel.Design.DesignerOptionService/DesignerOptionCollection::get_Item(int32)
			}
			.property instance class System.ComponentModel.Design.DesignerOptionService/DesignerOptionCollection Item(string)
			{
				.get instance class System.ComponentModel.Design.DesignerOptionService/DesignerOptionCollection System.ComponentModel.Design.DesignerOptionService/DesignerOptionCollection::get_Item(string)
			}
			.property instance string Name()
			{
				.get instance string System.ComponentModel.Design.DesignerOptionService/DesignerOptionCollection::get_Name()
			}
			.property instance class System.ComponentModel.Design.DesignerOptionService/DesignerOptionCollection Parent()
			{
				.get instance class System.ComponentModel.Design.DesignerOptionService/DesignerOptionCollection System.ComponentModel.Design.DesignerOptionService/DesignerOptionCollection::get_Parent()
			}
			.property instance class System.ComponentModel.PropertyDescriptorCollection Properties()
			{
				.get instance class System.ComponentModel.PropertyDescriptorCollection System.ComponentModel.Design.DesignerOptionService/DesignerOptionCollection::get_Properties()
			}
			.property instance bool System.Collections.ICollection.IsSynchronized()
			{
				.get instance bool System.ComponentModel.Design.DesignerOptionService/DesignerOptionCollection::System.Collections.ICollection.get_IsSynchronized()
			}
			.property instance object System.Collections.ICollection.SyncRoot()
			{
				.get instance object System.ComponentModel.Design.DesignerOptionService/DesignerOptionCollection::System.Collections.ICollection.get_SyncRoot()
			}
			.property instance bool System.Collections.IList.IsFixedSize()
			{
				.get instance bool System.ComponentModel.Design.DesignerOptionService/DesignerOptionCollection::System.Collections.IList.get_IsFixedSize()
			}
			.property instance bool System.Collections.IList.IsReadOnly()
			{
				.get instance bool System.ComponentModel.Design.DesignerOptionService/DesignerOptionCollection::System.Collections.IList.get_IsReadOnly()
			}
			.property instance object System.Collections.IList.Item(int32)
			{
				.get instance object System.ComponentModel.Design.DesignerOptionService/DesignerOptionCollection::System.Collections.IList.get_Item(int32)
				.set instance void System.ComponentModel.Design.DesignerOptionService/DesignerOptionCollection::System.Collections.IList.set_Item(int32, object)
			}
		}
		.method public hidebysig specialname 
			instance class System.ComponentModel.Design.DesignerOptionService/DesignerOptionCollection get_Options()
		{
			ret
		}
		.method family hidebysig 
			instance class System.ComponentModel.Design.DesignerOptionService/DesignerOptionCollection CreateOptionCollection(class System.ComponentModel.Design.DesignerOptionService/DesignerOptionCollection parent, string name, object 'value')
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void PopulateOptionCollection(class System.ComponentModel.Design.DesignerOptionService/DesignerOptionCollection options)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance bool ShowDialog(class System.ComponentModel.Design.DesignerOptionService/DesignerOptionCollection options, object optionObject)
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance object System.ComponentModel.Design.IDesignerOptionService.GetOptionValue(string pageName, string valueName)
		{
			.override System.ComponentModel.Design.IDesignerOptionService::GetOptionValue
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.ComponentModel.Design.IDesignerOptionService.SetOptionValue(string pageName, string valueName, object 'value')
		{
			.override System.ComponentModel.Design.IDesignerOptionService::SetOptionValue
			ret
		}
		.method family hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance class System.ComponentModel.Design.DesignerOptionService/DesignerOptionCollection Options()
		{
			.get instance class System.ComponentModel.Design.DesignerOptionService/DesignerOptionCollection System.ComponentModel.Design.DesignerOptionService::get_Options()
		}
	}
	.class public abstract DesignerTransaction
		extends [mscorlib]System.Object
		implements [mscorlib]System.IDisposable
	{
		.permissionset linkcheck = (00)
		.method family hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method family hidebysig specialname 
			instance void .ctor(string description)
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_Canceled()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_Committed()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Description()
		{
			ret
		}
		.method public hidebysig 
			instance void Cancel()
		{
			ret
		}
		.method public hidebysig 
			instance void Commit()
		{
			ret
		}
		.method family virtual hidebysig newslot abstract 
			instance void OnCancel()
		{
		}
		.method family virtual hidebysig newslot abstract 
			instance void OnCommit()
		{
		}
		.method family virtual hidebysig 
			instance void Finalize()
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.IDisposable.Dispose()
		{
			.override [mscorlib]System.IDisposable::Dispose
			ret
		}
		.method family virtual hidebysig newslot 
			instance void Dispose(bool disposing)
		{
			ret
		}
		.property instance bool Canceled()
		{
			.get instance bool System.ComponentModel.Design.DesignerTransaction::get_Canceled()
		}
		.property instance bool Committed()
		{
			.get instance bool System.ComponentModel.Design.DesignerTransaction::get_Committed()
		}
		.property instance string Description()
		{
			.get instance string System.ComponentModel.Design.DesignerTransaction::get_Description()
		}
	}
	.class public DesignerTransactionCloseEventArgs
		extends [mscorlib]System.EventArgs
	{
		.permissionset linkcheck = (00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method public hidebysig specialname 
			instance void .ctor(bool commit)
		{
			.custom instance void [mscorlib]System.ObsoleteAttribute::.ctor(string) = (01 00 80 86 54 68 69 73 20 63 6F 6E 73 74 72 75 63 74 6F 72 20 69 73 20 6F 62 73 6F 6C 65 74 65 2E 20 55 73 65 20 44 65 73 69 67 6E 65 72 54 72 61 6E 73 61 63 74 69 6F 6E 43 6C 6F 73 65 45 76 65 6E 74 41 72 67 73 28 62 6F 6F 6C 2C 20 62 6F 6F 6C 29 20 69 6E 73 74 65 61 64 2E 20 20 68 74 74 70 3A 2F 2F 67 6F 2E 6D 69 63 72 6F 73 6F 66 74 2E 63 6F 6D 2F 66 77 6C 69 6E 6B 2F 3F 6C 69 6E 6B 69 64 3D 31 34 32 30 32 00 00)
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(bool commit, bool lastTransaction)
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_TransactionCommitted()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_LastTransaction()
		{
			ret
		}
		.property instance bool LastTransaction()
		{
			.get instance bool System.ComponentModel.Design.DesignerTransactionCloseEventArgs::get_LastTransaction()
		}
		.property instance bool TransactionCommitted()
		{
			.get instance bool System.ComponentModel.Design.DesignerTransactionCloseEventArgs::get_TransactionCommitted()
		}
	}
	.class public sealed DesignerTransactionCloseEventHandler
		extends [mscorlib]System.MulticastDelegate
	{
		.permissionset linkcheck = (00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method public hidebysig specialname 
			instance void .ctor(object 'object', native int 'method')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void Invoke(object sender, class System.ComponentModel.Design.DesignerTransactionCloseEventArgs e)
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance class [mscorlib]System.IAsyncResult BeginInvoke(object sender, class System.ComponentModel.Design.DesignerTransactionCloseEventArgs e, class [mscorlib]System.AsyncCallback callback, object 'object')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void EndInvoke(class [mscorlib]System.IAsyncResult result)
			runtime 
		{
		}
	}
	.class public DesignerVerb
		extends System.ComponentModel.Design.MenuCommand
	{
		.permissionset linkcheck = (00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method public hidebysig specialname 
			instance void .ctor(string text, class [mscorlib]System.EventHandler 'handler')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string text, class [mscorlib]System.EventHandler 'handler', class System.ComponentModel.Design.CommandID startCommandID)
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Description()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Description(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Text()
		{
			ret
		}
		.method public virtual hidebysig 
			instance string ToString()
		{
			ret
		}
		.property instance string Description()
		{
			.get instance string System.ComponentModel.Design.DesignerVerb::get_Description()
			.set instance void System.ComponentModel.Design.DesignerVerb::set_Description(string)
		}
		.property instance string Text()
		{
			.get instance string System.ComponentModel.Design.DesignerVerb::get_Text()
		}
	}
	.class public DesignerVerbCollection
		extends [mscorlib]System.Collections.CollectionBase
	{
		.permissionset linkcheck = (00)
		.custom instance void [mscorlib]System.Reflection.DefaultMemberAttribute::.ctor(string) = (01 00 04 49 74 65 6D 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class System.ComponentModel.Design.DesignerVerb[] 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.ComponentModel.Design.DesignerVerb get_Item(int32 index)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Item(int32 index, class System.ComponentModel.Design.DesignerVerb 'value')
		{
			ret
		}
		.method public hidebysig 
			instance int32 Add(class System.ComponentModel.Design.DesignerVerb 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void AddRange(class System.ComponentModel.Design.DesignerVerb[] 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void AddRange(class System.ComponentModel.Design.DesignerVerbCollection 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void Insert(int32 index, class System.ComponentModel.Design.DesignerVerb 'value')
		{
			ret
		}
		.method public hidebysig 
			instance int32 IndexOf(class System.ComponentModel.Design.DesignerVerb 'value')
		{
			ret
		}
		.method public hidebysig 
			instance bool Contains(class System.ComponentModel.Design.DesignerVerb 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void Remove(class System.ComponentModel.Design.DesignerVerb 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void CopyTo(class System.ComponentModel.Design.DesignerVerb[] 'array', int32 index)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnSet(int32 index, object oldValue, object newValue)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnInsert(int32 index, object 'value')
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnClear()
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnRemove(int32 index, object 'value')
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnValidate(object 'value')
		{
			ret
		}
		.property instance class System.ComponentModel.Design.DesignerVerb Item(int32)
		{
			.get instance class System.ComponentModel.Design.DesignerVerb System.ComponentModel.Design.DesignerVerbCollection::get_Item(int32)
			.set instance void System.ComponentModel.Design.DesignerVerbCollection::set_Item(int32, class System.ComponentModel.Design.DesignerVerb)
		}
	}
	.class public sealed HelpContextType
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype System.ComponentModel.Design.HelpContextType Ambient = int32(0x00000000)
		.field static public literal valuetype System.ComponentModel.Design.HelpContextType Selection = int32(0x00000002)
		.field static public literal valuetype System.ComponentModel.Design.HelpContextType ToolWindowSelection = int32(0x00000003)
		.field static public literal valuetype System.ComponentModel.Design.HelpContextType Window = int32(0x00000001)
	}
	.class public sealed serializable HelpKeywordAttribute
		extends [mscorlib]System.Attribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = (01 00 FF 7F 00 00 02 00 54 02 0D 41 6C 6C 6F 77 4D 75 6C 74 69 70 6C 65 00 54 02 09 49 6E 68 65 72 69 74 65 64 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string keyword)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Type t)
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_HelpKeyword()
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool Equals(object obj)
		{
			ret
		}
		.method public virtual hidebysig 
			instance int32 GetHashCode()
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool IsDefaultAttribute()
		{
			ret
		}
		.field static public initonly class System.ComponentModel.Design.HelpKeywordAttribute Default
		.property instance string HelpKeyword()
		{
			.get instance string System.ComponentModel.Design.HelpKeywordAttribute::get_HelpKeyword()
		}
	}
	.class public sealed HelpKeywordType
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype System.ComponentModel.Design.HelpKeywordType F1Keyword = int32(0x00000000)
		.field static public literal valuetype System.ComponentModel.Design.HelpKeywordType FilterKeyword = int32(0x00000002)
		.field static public literal valuetype System.ComponentModel.Design.HelpKeywordType GeneralKeyword = int32(0x00000001)
	}
	.class public interface abstract IComponentChangeService
	{
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method public virtual hidebysig newslot abstract specialname 
			instance void add_ComponentAdded(class System.ComponentModel.Design.ComponentEventHandler 'value')
			synchronized 
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void remove_ComponentAdded(class System.ComponentModel.Design.ComponentEventHandler 'value')
			synchronized 
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void add_ComponentAdding(class System.ComponentModel.Design.ComponentEventHandler 'value')
			synchronized 
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void remove_ComponentAdding(class System.ComponentModel.Design.ComponentEventHandler 'value')
			synchronized 
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void add_ComponentChanged(class System.ComponentModel.Design.ComponentChangedEventHandler 'value')
			synchronized 
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void remove_ComponentChanged(class System.ComponentModel.Design.ComponentChangedEventHandler 'value')
			synchronized 
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void add_ComponentChanging(class System.ComponentModel.Design.ComponentChangingEventHandler 'value')
			synchronized 
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void remove_ComponentChanging(class System.ComponentModel.Design.ComponentChangingEventHandler 'value')
			synchronized 
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void add_ComponentRemoved(class System.ComponentModel.Design.ComponentEventHandler 'value')
			synchronized 
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void remove_ComponentRemoved(class System.ComponentModel.Design.ComponentEventHandler 'value')
			synchronized 
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void add_ComponentRemoving(class System.ComponentModel.Design.ComponentEventHandler 'value')
			synchronized 
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void remove_ComponentRemoving(class System.ComponentModel.Design.ComponentEventHandler 'value')
			synchronized 
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void add_ComponentRename(class System.ComponentModel.Design.ComponentRenameEventHandler 'value')
			synchronized 
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void remove_ComponentRename(class System.ComponentModel.Design.ComponentRenameEventHandler 'value')
			synchronized 
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void OnComponentChanged(object component, class System.ComponentModel.MemberDescriptor member, object oldValue, object newValue)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void OnComponentChanging(object component, class System.ComponentModel.MemberDescriptor member)
		{
		}
		.event System.ComponentModel.Design.ComponentEventHandler ComponentAdded
		{
			.addon instance void System.ComponentModel.Design.IComponentChangeService::add_ComponentAdded(class System.ComponentModel.Design.ComponentEventHandler)
			.removeon instance void System.ComponentModel.Design.IComponentChangeService::remove_ComponentAdded(class System.ComponentModel.Design.ComponentEventHandler)
		}
		.event System.ComponentModel.Design.ComponentEventHandler ComponentAdding
		{
			.addon instance void System.ComponentModel.Design.IComponentChangeService::add_ComponentAdding(class System.ComponentModel.Design.ComponentEventHandler)
			.removeon instance void System.ComponentModel.Design.IComponentChangeService::remove_ComponentAdding(class System.ComponentModel.Design.ComponentEventHandler)
		}
		.event System.ComponentModel.Design.ComponentChangedEventHandler ComponentChanged
		{
			.addon instance void System.ComponentModel.Design.IComponentChangeService::add_ComponentChanged(class System.ComponentModel.Design.ComponentChangedEventHandler)
			.removeon instance void System.ComponentModel.Design.IComponentChangeService::remove_ComponentChanged(class System.ComponentModel.Design.ComponentChangedEventHandler)
		}
		.event System.ComponentModel.Design.ComponentChangingEventHandler ComponentChanging
		{
			.addon instance void System.ComponentModel.Design.IComponentChangeService::add_ComponentChanging(class System.ComponentModel.Design.ComponentChangingEventHandler)
			.removeon instance void System.ComponentModel.Design.IComponentChangeService::remove_ComponentChanging(class System.ComponentModel.Design.ComponentChangingEventHandler)
		}
		.event System.ComponentModel.Design.ComponentEventHandler ComponentRemoved
		{
			.addon instance void System.ComponentModel.Design.IComponentChangeService::add_ComponentRemoved(class System.ComponentModel.Design.ComponentEventHandler)
			.removeon instance void System.ComponentModel.Design.IComponentChangeService::remove_ComponentRemoved(class System.ComponentModel.Design.ComponentEventHandler)
		}
		.event System.ComponentModel.Design.ComponentEventHandler ComponentRemoving
		{
			.addon instance void System.ComponentModel.Design.IComponentChangeService::add_ComponentRemoving(class System.ComponentModel.Design.ComponentEventHandler)
			.removeon instance void System.ComponentModel.Design.IComponentChangeService::remove_ComponentRemoving(class System.ComponentModel.Design.ComponentEventHandler)
		}
		.event System.ComponentModel.Design.ComponentRenameEventHandler ComponentRename
		{
			.addon instance void System.ComponentModel.Design.IComponentChangeService::add_ComponentRename(class System.ComponentModel.Design.ComponentRenameEventHandler)
			.removeon instance void System.ComponentModel.Design.IComponentChangeService::remove_ComponentRename(class System.ComponentModel.Design.ComponentRenameEventHandler)
		}
	}
	.class public interface abstract IComponentDiscoveryService
	{
		.method public virtual hidebysig newslot abstract 
			instance class [mscorlib]System.Collections.ICollection GetComponentTypes(class System.ComponentModel.Design.IDesignerHost designerHost, class [mscorlib]System.Type baseType)
		{
		}
	}
	.class public interface abstract IComponentInitializer
	{
		.method public virtual hidebysig newslot abstract 
			instance void InitializeExistingComponent(class [mscorlib]System.Collections.IDictionary defaultValues)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void InitializeNewComponent(class [mscorlib]System.Collections.IDictionary defaultValues)
		{
		}
	}
	.class public interface abstract IDesigner
		implements [mscorlib]System.IDisposable
	{
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method public virtual hidebysig newslot abstract specialname 
			instance class System.ComponentModel.IComponent get_Component()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance class System.ComponentModel.Design.DesignerVerbCollection get_Verbs()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void DoDefaultAction()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void Initialize(class System.ComponentModel.IComponent component)
		{
		}
		.property instance class System.ComponentModel.IComponent Component()
		{
			.get instance class System.ComponentModel.IComponent System.ComponentModel.Design.IDesigner::get_Component()
		}
		.property instance class System.ComponentModel.Design.DesignerVerbCollection Verbs()
		{
			.get instance class System.ComponentModel.Design.DesignerVerbCollection System.ComponentModel.Design.IDesigner::get_Verbs()
		}
	}
	.class public interface abstract IDesignerEventService
	{
		.method public virtual hidebysig newslot abstract specialname 
			instance class System.ComponentModel.Design.IDesignerHost get_ActiveDesigner()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance class System.ComponentModel.Design.DesignerCollection get_Designers()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void add_ActiveDesignerChanged(class System.ComponentModel.Design.ActiveDesignerEventHandler 'value')
			synchronized 
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void remove_ActiveDesignerChanged(class System.ComponentModel.Design.ActiveDesignerEventHandler 'value')
			synchronized 
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void add_DesignerCreated(class System.ComponentModel.Design.DesignerEventHandler 'value')
			synchronized 
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void remove_DesignerCreated(class System.ComponentModel.Design.DesignerEventHandler 'value')
			synchronized 
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void add_DesignerDisposed(class System.ComponentModel.Design.DesignerEventHandler 'value')
			synchronized 
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void remove_DesignerDisposed(class System.ComponentModel.Design.DesignerEventHandler 'value')
			synchronized 
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void add_SelectionChanged(class [mscorlib]System.EventHandler 'value')
			synchronized 
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void remove_SelectionChanged(class [mscorlib]System.EventHandler 'value')
			synchronized 
		{
		}
		.event System.ComponentModel.Design.ActiveDesignerEventHandler ActiveDesignerChanged
		{
			.addon instance void System.ComponentModel.Design.IDesignerEventService::add_ActiveDesignerChanged(class System.ComponentModel.Design.ActiveDesignerEventHandler)
			.removeon instance void System.ComponentModel.Design.IDesignerEventService::remove_ActiveDesignerChanged(class System.ComponentModel.Design.ActiveDesignerEventHandler)
		}
		.event System.ComponentModel.Design.DesignerEventHandler DesignerCreated
		{
			.addon instance void System.ComponentModel.Design.IDesignerEventService::add_DesignerCreated(class System.ComponentModel.Design.DesignerEventHandler)
			.removeon instance void System.ComponentModel.Design.IDesignerEventService::remove_DesignerCreated(class System.ComponentModel.Design.DesignerEventHandler)
		}
		.event System.ComponentModel.Design.DesignerEventHandler DesignerDisposed
		{
			.addon instance void System.ComponentModel.Design.IDesignerEventService::add_DesignerDisposed(class System.ComponentModel.Design.DesignerEventHandler)
			.removeon instance void System.ComponentModel.Design.IDesignerEventService::remove_DesignerDisposed(class System.ComponentModel.Design.DesignerEventHandler)
		}
		.event [mscorlib]System.EventHandler SelectionChanged
		{
			.addon instance void System.ComponentModel.Design.IDesignerEventService::add_SelectionChanged(class [mscorlib]System.EventHandler)
			.removeon instance void System.ComponentModel.Design.IDesignerEventService::remove_SelectionChanged(class [mscorlib]System.EventHandler)
		}
		.property instance class System.ComponentModel.Design.IDesignerHost ActiveDesigner()
		{
			.get instance class System.ComponentModel.Design.IDesignerHost System.ComponentModel.Design.IDesignerEventService::get_ActiveDesigner()
		}
		.property instance class System.ComponentModel.Design.DesignerCollection Designers()
		{
			.get instance class System.ComponentModel.Design.DesignerCollection System.ComponentModel.Design.IDesignerEventService::get_Designers()
		}
	}
	.class public interface abstract IDesignerFilter
	{
		.method public virtual hidebysig newslot abstract 
			instance void PostFilterAttributes(class [mscorlib]System.Collections.IDictionary attributes)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void PostFilterEvents(class [mscorlib]System.Collections.IDictionary events)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void PostFilterProperties(class [mscorlib]System.Collections.IDictionary properties)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void PreFilterAttributes(class [mscorlib]System.Collections.IDictionary attributes)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void PreFilterEvents(class [mscorlib]System.Collections.IDictionary events)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void PreFilterProperties(class [mscorlib]System.Collections.IDictionary properties)
		{
		}
	}
	.class public interface abstract IDesignerHost
		implements System.ComponentModel.Design.IServiceContainer, [mscorlib]System.IServiceProvider
	{
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method public virtual hidebysig newslot abstract specialname 
			instance bool get_Loading()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance bool get_InTransaction()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance class System.ComponentModel.IContainer get_Container()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance class System.ComponentModel.IComponent get_RootComponent()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance string get_RootComponentClassName()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance string get_TransactionDescription()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void add_Activated(class [mscorlib]System.EventHandler 'value')
			synchronized 
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void remove_Activated(class [mscorlib]System.EventHandler 'value')
			synchronized 
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void add_Deactivated(class [mscorlib]System.EventHandler 'value')
			synchronized 
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void remove_Deactivated(class [mscorlib]System.EventHandler 'value')
			synchronized 
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void add_LoadComplete(class [mscorlib]System.EventHandler 'value')
			synchronized 
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void remove_LoadComplete(class [mscorlib]System.EventHandler 'value')
			synchronized 
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void add_TransactionClosed(class System.ComponentModel.Design.DesignerTransactionCloseEventHandler 'value')
			synchronized 
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void remove_TransactionClosed(class System.ComponentModel.Design.DesignerTransactionCloseEventHandler 'value')
			synchronized 
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void add_TransactionClosing(class System.ComponentModel.Design.DesignerTransactionCloseEventHandler 'value')
			synchronized 
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void remove_TransactionClosing(class System.ComponentModel.Design.DesignerTransactionCloseEventHandler 'value')
			synchronized 
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void add_TransactionOpened(class [mscorlib]System.EventHandler 'value')
			synchronized 
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void remove_TransactionOpened(class [mscorlib]System.EventHandler 'value')
			synchronized 
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void add_TransactionOpening(class [mscorlib]System.EventHandler 'value')
			synchronized 
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void remove_TransactionOpening(class [mscorlib]System.EventHandler 'value')
			synchronized 
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void Activate()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class System.ComponentModel.IComponent CreateComponent(class [mscorlib]System.Type componentClass)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class System.ComponentModel.IComponent CreateComponent(class [mscorlib]System.Type componentClass, string name)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class System.ComponentModel.Design.DesignerTransaction CreateTransaction()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class System.ComponentModel.Design.DesignerTransaction CreateTransaction(string description)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void DestroyComponent(class System.ComponentModel.IComponent component)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class System.ComponentModel.Design.IDesigner GetDesigner(class System.ComponentModel.IComponent component)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class [mscorlib]System.Type GetType(string typeName)
		{
		}
		.event [mscorlib]System.EventHandler Activated
		{
			.addon instance void System.ComponentModel.Design.IDesignerHost::add_Activated(class [mscorlib]System.EventHandler)
			.removeon instance void System.ComponentModel.Design.IDesignerHost::remove_Activated(class [mscorlib]System.EventHandler)
		}
		.event [mscorlib]System.EventHandler Deactivated
		{
			.addon instance void System.ComponentModel.Design.IDesignerHost::add_Deactivated(class [mscorlib]System.EventHandler)
			.removeon instance void System.ComponentModel.Design.IDesignerHost::remove_Deactivated(class [mscorlib]System.EventHandler)
		}
		.event [mscorlib]System.EventHandler LoadComplete
		{
			.addon instance void System.ComponentModel.Design.IDesignerHost::add_LoadComplete(class [mscorlib]System.EventHandler)
			.removeon instance void System.ComponentModel.Design.IDesignerHost::remove_LoadComplete(class [mscorlib]System.EventHandler)
		}
		.event System.ComponentModel.Design.DesignerTransactionCloseEventHandler TransactionClosed
		{
			.addon instance void System.ComponentModel.Design.IDesignerHost::add_TransactionClosed(class System.ComponentModel.Design.DesignerTransactionCloseEventHandler)
			.removeon instance void System.ComponentModel.Design.IDesignerHost::remove_TransactionClosed(class System.ComponentModel.Design.DesignerTransactionCloseEventHandler)
		}
		.event System.ComponentModel.Design.DesignerTransactionCloseEventHandler TransactionClosing
		{
			.addon instance void System.ComponentModel.Design.IDesignerHost::add_TransactionClosing(class System.ComponentModel.Design.DesignerTransactionCloseEventHandler)
			.removeon instance void System.ComponentModel.Design.IDesignerHost::remove_TransactionClosing(class System.ComponentModel.Design.DesignerTransactionCloseEventHandler)
		}
		.event [mscorlib]System.EventHandler TransactionOpened
		{
			.addon instance void System.ComponentModel.Design.IDesignerHost::add_TransactionOpened(class [mscorlib]System.EventHandler)
			.removeon instance void System.ComponentModel.Design.IDesignerHost::remove_TransactionOpened(class [mscorlib]System.EventHandler)
		}
		.event [mscorlib]System.EventHandler TransactionOpening
		{
			.addon instance void System.ComponentModel.Design.IDesignerHost::add_TransactionOpening(class [mscorlib]System.EventHandler)
			.removeon instance void System.ComponentModel.Design.IDesignerHost::remove_TransactionOpening(class [mscorlib]System.EventHandler)
		}
		.property instance class System.ComponentModel.IContainer Container()
		{
			.get instance class System.ComponentModel.IContainer System.ComponentModel.Design.IDesignerHost::get_Container()
		}
		.property instance bool InTransaction()
		{
			.get instance bool System.ComponentModel.Design.IDesignerHost::get_InTransaction()
		}
		.property instance bool Loading()
		{
			.get instance bool System.ComponentModel.Design.IDesignerHost::get_Loading()
		}
		.property instance class System.ComponentModel.IComponent RootComponent()
		{
			.get instance class System.ComponentModel.IComponent System.ComponentModel.Design.IDesignerHost::get_RootComponent()
		}
		.property instance string RootComponentClassName()
		{
			.get instance string System.ComponentModel.Design.IDesignerHost::get_RootComponentClassName()
		}
		.property instance string TransactionDescription()
		{
			.get instance string System.ComponentModel.Design.IDesignerHost::get_TransactionDescription()
		}
	}
	.class public interface abstract IDesignerOptionService
	{
		.method public virtual hidebysig newslot abstract 
			instance object GetOptionValue(string pageName, string valueName)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void SetOptionValue(string pageName, string valueName, object 'value')
		{
		}
	}
	.class public interface abstract IDictionaryService
	{
		.method public virtual hidebysig newslot abstract 
			instance object GetKey(object 'value')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance object GetValue(object key)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void SetValue(object key, object 'value')
		{
		}
	}
	.class public interface abstract IEventBindingService
	{
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method public virtual hidebysig newslot abstract 
			instance string CreateUniqueMethodName(class System.ComponentModel.IComponent component, class System.ComponentModel.EventDescriptor e)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class [mscorlib]System.Collections.ICollection GetCompatibleMethods(class System.ComponentModel.EventDescriptor e)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class System.ComponentModel.EventDescriptor GetEvent(class System.ComponentModel.PropertyDescriptor 'property')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class System.ComponentModel.PropertyDescriptorCollection GetEventProperties(class System.ComponentModel.EventDescriptorCollection events)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class System.ComponentModel.PropertyDescriptor GetEventProperty(class System.ComponentModel.EventDescriptor e)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance bool ShowCode()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance bool ShowCode(int32 lineNumber)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance bool ShowCode(class System.ComponentModel.IComponent component, class System.ComponentModel.EventDescriptor e)
		{
		}
	}
	.class public interface abstract IExtenderListService
	{
		.method public virtual hidebysig newslot abstract 
			instance class System.ComponentModel.IExtenderProvider[] GetExtenderProviders()
		{
		}
	}
	.class public interface abstract IExtenderProviderService
	{
		.method public virtual hidebysig newslot abstract 
			instance void AddExtenderProvider(class System.ComponentModel.IExtenderProvider provider)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void RemoveExtenderProvider(class System.ComponentModel.IExtenderProvider provider)
		{
		}
	}
	.class public interface abstract IHelpService
	{
		.method public virtual hidebysig newslot abstract 
			instance void AddContextAttribute(string name, string 'value', valuetype System.ComponentModel.Design.HelpKeywordType keywordType)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void ClearContextAttributes()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class System.ComponentModel.Design.IHelpService CreateLocalContext(valuetype System.ComponentModel.Design.HelpContextType contextType)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void RemoveContextAttribute(string name, string 'value')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void RemoveLocalContext(class System.ComponentModel.Design.IHelpService localContext)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void ShowHelpFromKeyword(string helpKeyword)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void ShowHelpFromUrl(string helpUrl)
		{
		}
	}
	.class public interface abstract IInheritanceService
	{
		.method public virtual hidebysig newslot abstract 
			instance void AddInheritedComponents(class System.ComponentModel.IComponent component, class System.ComponentModel.IContainer container)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class System.ComponentModel.InheritanceAttribute GetInheritanceAttribute(class System.ComponentModel.IComponent component)
		{
		}
	}
	.class public interface abstract IMenuCommandService
	{
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method public virtual hidebysig newslot abstract specialname 
			instance class System.ComponentModel.Design.DesignerVerbCollection get_Verbs()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void AddCommand(class System.ComponentModel.Design.MenuCommand command)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void AddVerb(class System.ComponentModel.Design.DesignerVerb verb)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class System.ComponentModel.Design.MenuCommand FindCommand(class System.ComponentModel.Design.CommandID commandID)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance bool GlobalInvoke(class System.ComponentModel.Design.CommandID commandID)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void RemoveCommand(class System.ComponentModel.Design.MenuCommand command)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void RemoveVerb(class System.ComponentModel.Design.DesignerVerb verb)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void ShowContextMenu(class System.ComponentModel.Design.CommandID menuID, int32 x, int32 y)
		{
		}
		.property instance class System.ComponentModel.Design.DesignerVerbCollection Verbs()
		{
			.get instance class System.ComponentModel.Design.DesignerVerbCollection System.ComponentModel.Design.IMenuCommandService::get_Verbs()
		}
	}
	.class public interface abstract IReferenceService
	{
		.method public virtual hidebysig newslot abstract 
			instance class System.ComponentModel.IComponent GetComponent(object reference)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance object GetReference(string name)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance string GetName(object reference)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance object[] GetReferences()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance object[] GetReferences(class [mscorlib]System.Type baseType)
		{
		}
	}
	.class public interface abstract IResourceService
	{
		.method public virtual hidebysig newslot abstract 
			instance class [mscorlib]System.Resources.IResourceReader GetResourceReader(class [mscorlib]System.Globalization.CultureInfo info)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class [mscorlib]System.Resources.IResourceWriter GetResourceWriter(class [mscorlib]System.Globalization.CultureInfo info)
		{
		}
	}
	.class public interface abstract IRootDesigner
		implements System.ComponentModel.Design.IDesigner, [mscorlib]System.IDisposable
	{
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method public virtual hidebysig newslot abstract specialname 
			instance valuetype System.ComponentModel.Design.ViewTechnology[] get_SupportedTechnologies()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance object GetView(valuetype System.ComponentModel.Design.ViewTechnology technology)
		{
		}
		.property instance valuetype System.ComponentModel.Design.ViewTechnology[] SupportedTechnologies()
		{
			.get instance valuetype System.ComponentModel.Design.ViewTechnology[] System.ComponentModel.Design.IRootDesigner::get_SupportedTechnologies()
		}
	}
	.class public interface abstract ISelectionService
	{
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method public virtual hidebysig newslot abstract specialname 
			instance object get_PrimarySelection()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance int32 get_SelectionCount()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void add_SelectionChanged(class [mscorlib]System.EventHandler 'value')
			synchronized 
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void remove_SelectionChanged(class [mscorlib]System.EventHandler 'value')
			synchronized 
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void add_SelectionChanging(class [mscorlib]System.EventHandler 'value')
			synchronized 
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void remove_SelectionChanging(class [mscorlib]System.EventHandler 'value')
			synchronized 
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance bool GetComponentSelected(object component)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class [mscorlib]System.Collections.ICollection GetSelectedComponents()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void SetSelectedComponents(class [mscorlib]System.Collections.ICollection components)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void SetSelectedComponents(class [mscorlib]System.Collections.ICollection components, valuetype System.ComponentModel.Design.SelectionTypes selectionType)
		{
		}
		.event [mscorlib]System.EventHandler SelectionChanged
		{
			.addon instance void System.ComponentModel.Design.ISelectionService::add_SelectionChanged(class [mscorlib]System.EventHandler)
			.removeon instance void System.ComponentModel.Design.ISelectionService::remove_SelectionChanged(class [mscorlib]System.EventHandler)
		}
		.event [mscorlib]System.EventHandler SelectionChanging
		{
			.addon instance void System.ComponentModel.Design.ISelectionService::add_SelectionChanging(class [mscorlib]System.EventHandler)
			.removeon instance void System.ComponentModel.Design.ISelectionService::remove_SelectionChanging(class [mscorlib]System.EventHandler)
		}
		.property instance object PrimarySelection()
		{
			.get instance object System.ComponentModel.Design.ISelectionService::get_PrimarySelection()
		}
		.property instance int32 SelectionCount()
		{
			.get instance int32 System.ComponentModel.Design.ISelectionService::get_SelectionCount()
		}
	}
	.class public interface abstract IServiceContainer
		implements [mscorlib]System.IServiceProvider
	{
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method public virtual hidebysig newslot abstract 
			instance void AddService(class [mscorlib]System.Type serviceType, object serviceInstance)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void AddService(class [mscorlib]System.Type serviceType, object serviceInstance, bool promote)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void AddService(class [mscorlib]System.Type serviceType, class System.ComponentModel.Design.ServiceCreatorCallback callback)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void AddService(class [mscorlib]System.Type serviceType, class System.ComponentModel.Design.ServiceCreatorCallback callback, bool promote)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void RemoveService(class [mscorlib]System.Type serviceType)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void RemoveService(class [mscorlib]System.Type serviceType, bool promote)
		{
		}
	}
	.class public interface abstract ITreeDesigner
		implements System.ComponentModel.Design.IDesigner, [mscorlib]System.IDisposable
	{
		.method public virtual hidebysig newslot abstract specialname 
			instance class [mscorlib]System.Collections.ICollection get_Children()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance class System.ComponentModel.Design.IDesigner get_Parent()
		{
		}
		.property instance class [mscorlib]System.Collections.ICollection Children()
		{
			.get instance class [mscorlib]System.Collections.ICollection System.ComponentModel.Design.ITreeDesigner::get_Children()
		}
		.property instance class System.ComponentModel.Design.IDesigner Parent()
		{
			.get instance class System.ComponentModel.Design.IDesigner System.ComponentModel.Design.ITreeDesigner::get_Parent()
		}
	}
	.class public interface abstract ITypeDescriptorFilterService
	{
		.method public virtual hidebysig newslot abstract 
			instance bool FilterAttributes(class System.ComponentModel.IComponent component, class [mscorlib]System.Collections.IDictionary attributes)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance bool FilterEvents(class System.ComponentModel.IComponent component, class [mscorlib]System.Collections.IDictionary events)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance bool FilterProperties(class System.ComponentModel.IComponent component, class [mscorlib]System.Collections.IDictionary properties)
		{
		}
	}
	.class public interface abstract ITypeDiscoveryService
	{
		.method public virtual hidebysig newslot abstract 
			instance class [mscorlib]System.Collections.ICollection GetTypes(class [mscorlib]System.Type baseType, bool excludeGlobalTypes)
		{
		}
	}
	.class public interface abstract ITypeResolutionService
	{
		.method public virtual hidebysig newslot abstract 
			instance class [mscorlib]System.Reflection.Assembly GetAssembly(class [mscorlib]System.Reflection.AssemblyName name)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class [mscorlib]System.Reflection.Assembly GetAssembly(class [mscorlib]System.Reflection.AssemblyName name, bool throwOnError)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class [mscorlib]System.Type GetType(string name)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class [mscorlib]System.Type GetType(string name, bool throwOnError)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class [mscorlib]System.Type GetType(string name, bool throwOnError, bool ignoreCase)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void ReferenceAssembly(class [mscorlib]System.Reflection.AssemblyName name)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance string GetPathOfAssembly(class [mscorlib]System.Reflection.AssemblyName name)
		{
		}
	}
	.class public MenuCommand
		extends [mscorlib]System.Object
	{
		.permissionset linkcheck = (00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]System.EventHandler 'handler', class System.ComponentModel.Design.CommandID command)
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_Checked()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_Checked(bool 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_Enabled()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_Enabled(bool 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance class [mscorlib]System.Collections.IDictionary get_Properties()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_Supported()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_Supported(bool 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_Visible()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_Visible(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void add_CommandChanged(class [mscorlib]System.EventHandler 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void remove_CommandChanged(class [mscorlib]System.EventHandler 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance class System.ComponentModel.Design.CommandID get_CommandID()
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void Invoke()
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void Invoke(object arg)
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance int32 get_OleStatus()
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void OnCommandChanged(class [mscorlib]System.EventArgs e)
		{
			ret
		}
		.method public virtual hidebysig 
			instance string ToString()
		{
			ret
		}
		.event [mscorlib]System.EventHandler CommandChanged
		{
			.addon instance void System.ComponentModel.Design.MenuCommand::add_CommandChanged(class [mscorlib]System.EventHandler)
			.removeon instance void System.ComponentModel.Design.MenuCommand::remove_CommandChanged(class [mscorlib]System.EventHandler)
		}
		.property instance bool Checked()
		{
			.get instance bool System.ComponentModel.Design.MenuCommand::get_Checked()
			.set instance void System.ComponentModel.Design.MenuCommand::set_Checked(bool)
		}
		.property instance class System.ComponentModel.Design.CommandID CommandID()
		{
			.get instance class System.ComponentModel.Design.CommandID System.ComponentModel.Design.MenuCommand::get_CommandID()
		}
		.property instance bool Enabled()
		{
			.get instance bool System.ComponentModel.Design.MenuCommand::get_Enabled()
			.set instance void System.ComponentModel.Design.MenuCommand::set_Enabled(bool)
		}
		.property instance int32 OleStatus()
		{
			.get instance int32 System.ComponentModel.Design.MenuCommand::get_OleStatus()
		}
		.property instance class [mscorlib]System.Collections.IDictionary Properties()
		{
			.get instance class [mscorlib]System.Collections.IDictionary System.ComponentModel.Design.MenuCommand::get_Properties()
		}
		.property instance bool Supported()
		{
			.get instance bool System.ComponentModel.Design.MenuCommand::get_Supported()
			.set instance void System.ComponentModel.Design.MenuCommand::set_Supported(bool)
		}
		.property instance bool Visible()
		{
			.get instance bool System.ComponentModel.Design.MenuCommand::get_Visible()
			.set instance void System.ComponentModel.Design.MenuCommand::set_Visible(bool)
		}
	}
	.class public sealed SelectionTypes
		extends [mscorlib]System.Enum
	{
		.custom instance void [mscorlib]System.FlagsAttribute::.ctor() = (01 00 00 00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype System.ComponentModel.Design.SelectionTypes Add = int32(0x00000040)
		.field static public literal valuetype System.ComponentModel.Design.SelectionTypes Auto = int32(0x00000001)
		.field static public literal valuetype System.ComponentModel.Design.SelectionTypes Click = int32(0x00000010)
			.custom instance void [mscorlib]System.ObsoleteAttribute::.ctor(string) = (01 00 71 54 68 69 73 20 76 61 6C 75 65 20 68 61 73 20 62 65 65 6E 20 64 65 70 72 65 63 61 74 65 64 2E 20 55 73 65 20 53 65 6C 65 63 74 69 6F 6E 54 79 70 65 73 2E 50 72 69 6D 61 72 79 20 69 6E 73 74 65 61 64 2E 20 20 68 74 74 70 3A 2F 2F 67 6F 2E 6D 69 63 72 6F 73 6F 66 74 2E 63 6F 6D 2F 66 77 6C 69 6E 6B 2F 3F 6C 69 6E 6B 69 64 3D 31 34 32 30 32 00 00)
		.field static public literal valuetype System.ComponentModel.Design.SelectionTypes MouseDown = int32(0x00000004)
			.custom instance void [mscorlib]System.ObsoleteAttribute::.ctor(string) = (01 00 68 54 68 69 73 20 76 61 6C 75 65 20 68 61 73 20 62 65 65 6E 20 64 65 70 72 65 63 61 74 65 64 2E 20 20 49 74 20 69 73 20 6E 6F 20 6C 6F 6E 67 65 72 20 73 75 70 70 6F 72 74 65 64 2E 20 68 74 74 70 3A 2F 2F 67 6F 2E 6D 69 63 72 6F 73 6F 66 74 2E 63 6F 6D 2F 66 77 6C 69 6E 6B 2F 3F 6C 69 6E 6B 69 64 3D 31 34 32 30 32 00 00)
		.field static public literal valuetype System.ComponentModel.Design.SelectionTypes MouseUp = int32(0x00000008)
			.custom instance void [mscorlib]System.ObsoleteAttribute::.ctor(string) = (01 00 68 54 68 69 73 20 76 61 6C 75 65 20 68 61 73 20 62 65 65 6E 20 64 65 70 72 65 63 61 74 65 64 2E 20 20 49 74 20 69 73 20 6E 6F 20 6C 6F 6E 67 65 72 20 73 75 70 70 6F 72 74 65 64 2E 20 68 74 74 70 3A 2F 2F 67 6F 2E 6D 69 63 72 6F 73 6F 66 74 2E 63 6F 6D 2F 66 77 6C 69 6E 6B 2F 3F 6C 69 6E 6B 69 64 3D 31 34 32 30 32 00 00)
		.field static public literal valuetype System.ComponentModel.Design.SelectionTypes Normal = int32(0x00000001)
			.custom instance void [mscorlib]System.ObsoleteAttribute::.ctor(string) = (01 00 6E 54 68 69 73 20 76 61 6C 75 65 20 68 61 73 20 62 65 65 6E 20 64 65 70 72 65 63 61 74 65 64 2E 20 55 73 65 20 53 65 6C 65 63 74 69 6F 6E 54 79 70 65 73 2E 41 75 74 6F 20 69 6E 73 74 65 61 64 2E 20 20 68 74 74 70 3A 2F 2F 67 6F 2E 6D 69 63 72 6F 73 6F 66 74 2E 63 6F 6D 2F 66 77 6C 69 6E 6B 2F 3F 6C 69 6E 6B 69 64 3D 31 34 32 30 32 00 00)
		.field static public literal valuetype System.ComponentModel.Design.SelectionTypes Primary = int32(0x00000010)
		.field static public literal valuetype System.ComponentModel.Design.SelectionTypes Remove = int32(0x00000080)
		.field static public literal valuetype System.ComponentModel.Design.SelectionTypes Replace = int32(0x00000002)
		.field static public literal valuetype System.ComponentModel.Design.SelectionTypes Toggle = int32(0x00000020)
		.field static public literal valuetype System.ComponentModel.Design.SelectionTypes Valid = int32(0x0000001F)
			.custom instance void [mscorlib]System.ObsoleteAttribute::.ctor(string) = (01 00 80 97 54 68 69 73 20 76 61 6C 75 65 20 68 61 73 20 62 65 65 6E 20 64 65 70 72 65 63 61 74 65 64 2E 20 55 73 65 20 45 6E 75 6D 20 63 6C 61 73 73 20 6D 65 74 68 6F 64 73 20 74 6F 20 64 65 74 65 72 6D 69 6E 65 20 76 61 6C 69 64 20 76 61 6C 75 65 73 2C 20 6F 72 20 75 73 65 20 61 20 74 79 70 65 20 63 6F 6E 76 65 72 74 65 72 2E 20 68 74 74 70 3A 2F 2F 67 6F 2E 6D 69 63 72 6F 73 6F 66 74 2E 63 6F 6D 2F 66 77 6C 69 6E 6B 2F 3F 6C 69 6E 6B 69 64 3D 31 34 32 30 32 00 00)
	}
	.class public ServiceContainer
		extends [mscorlib]System.Object
		implements System.ComponentModel.Design.IServiceContainer, [mscorlib]System.IServiceProvider, [mscorlib]System.IDisposable
	{
		.permissionset linkcheck = (00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]System.IServiceProvider parentProvider)
		{
			ret
		}
		.method family virtual hidebysig newslot specialname 
			instance class [mscorlib]System.Type[] get_DefaultServices()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void AddService(class [mscorlib]System.Type serviceType, object serviceInstance)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void AddService(class [mscorlib]System.Type serviceType, object serviceInstance, bool promote)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void AddService(class [mscorlib]System.Type serviceType, class System.ComponentModel.Design.ServiceCreatorCallback callback)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void AddService(class [mscorlib]System.Type serviceType, class System.ComponentModel.Design.ServiceCreatorCallback callback, bool promote)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void Dispose()
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void Dispose(bool disposing)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance object GetService(class [mscorlib]System.Type serviceType)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void RemoveService(class [mscorlib]System.Type serviceType)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void RemoveService(class [mscorlib]System.Type serviceType, bool promote)
		{
			ret
		}
		.property instance class [mscorlib]System.Type[] DefaultServices()
		{
			.get instance class [mscorlib]System.Type[] System.ComponentModel.Design.ServiceContainer::get_DefaultServices()
		}
	}
	.class public sealed ServiceCreatorCallback
		extends [mscorlib]System.MulticastDelegate
	{
		.permissionset linkcheck = (00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method public hidebysig specialname 
			instance void .ctor(object 'object', native int 'method')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance object Invoke(class System.ComponentModel.Design.IServiceContainer container, class [mscorlib]System.Type serviceType)
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance class [mscorlib]System.IAsyncResult BeginInvoke(class System.ComponentModel.Design.IServiceContainer container, class [mscorlib]System.Type serviceType, class [mscorlib]System.AsyncCallback callback, object 'object')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance object EndInvoke(class [mscorlib]System.IAsyncResult result)
			runtime 
		{
		}
	}
	.class public StandardCommands
		extends [mscorlib]System.Object
	{
		.permissionset linkcheck = (00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.field static public initonly class System.ComponentModel.Design.CommandID AlignBottom
		.field static public initonly class System.ComponentModel.Design.CommandID AlignHorizontalCenters
		.field static public initonly class System.ComponentModel.Design.CommandID AlignLeft
		.field static public initonly class System.ComponentModel.Design.CommandID AlignRight
		.field static public initonly class System.ComponentModel.Design.CommandID AlignToGrid
		.field static public initonly class System.ComponentModel.Design.CommandID AlignTop
		.field static public initonly class System.ComponentModel.Design.CommandID AlignVerticalCenters
		.field static public initonly class System.ComponentModel.Design.CommandID ArrangeBottom
		.field static public initonly class System.ComponentModel.Design.CommandID ArrangeIcons
		.field static public initonly class System.ComponentModel.Design.CommandID ArrangeRight
		.field static public initonly class System.ComponentModel.Design.CommandID BringForward
		.field static public initonly class System.ComponentModel.Design.CommandID BringToFront
		.field static public initonly class System.ComponentModel.Design.CommandID CenterHorizontally
		.field static public initonly class System.ComponentModel.Design.CommandID CenterVertically
		.field static public initonly class System.ComponentModel.Design.CommandID Copy
		.field static public initonly class System.ComponentModel.Design.CommandID Cut
		.field static public initonly class System.ComponentModel.Design.CommandID Delete
		.field static public initonly class System.ComponentModel.Design.CommandID DocumentOutline
		.field static public initonly class System.ComponentModel.Design.CommandID F1Help
		.field static public initonly class System.ComponentModel.Design.CommandID Group
		.field static public initonly class System.ComponentModel.Design.CommandID HorizSpaceConcatenate
		.field static public initonly class System.ComponentModel.Design.CommandID HorizSpaceDecrease
		.field static public initonly class System.ComponentModel.Design.CommandID HorizSpaceIncrease
		.field static public initonly class System.ComponentModel.Design.CommandID HorizSpaceMakeEqual
		.field static public initonly class System.ComponentModel.Design.CommandID LineupIcons
		.field static public initonly class System.ComponentModel.Design.CommandID LockControls
		.field static public initonly class System.ComponentModel.Design.CommandID MultiLevelRedo
		.field static public initonly class System.ComponentModel.Design.CommandID MultiLevelUndo
		.field static public initonly class System.ComponentModel.Design.CommandID Paste
		.field static public initonly class System.ComponentModel.Design.CommandID Properties
		.field static public initonly class System.ComponentModel.Design.CommandID PropertiesWindow
		.field static public initonly class System.ComponentModel.Design.CommandID Redo
		.field static public initonly class System.ComponentModel.Design.CommandID Replace
		.field static public initonly class System.ComponentModel.Design.CommandID SelectAll
		.field static public initonly class System.ComponentModel.Design.CommandID SendBackward
		.field static public initonly class System.ComponentModel.Design.CommandID SendToBack
		.field static public initonly class System.ComponentModel.Design.CommandID ShowGrid
		.field static public initonly class System.ComponentModel.Design.CommandID ShowLargeIcons
		.field static public initonly class System.ComponentModel.Design.CommandID SizeToControl
		.field static public initonly class System.ComponentModel.Design.CommandID SizeToControlHeight
		.field static public initonly class System.ComponentModel.Design.CommandID SizeToControlWidth
		.field static public initonly class System.ComponentModel.Design.CommandID SizeToFit
		.field static public initonly class System.ComponentModel.Design.CommandID SizeToGrid
		.field static public initonly class System.ComponentModel.Design.CommandID SnapToGrid
		.field static public initonly class System.ComponentModel.Design.CommandID TabOrder
		.field static public initonly class System.ComponentModel.Design.CommandID Undo
		.field static public initonly class System.ComponentModel.Design.CommandID Ungroup
		.field static public initonly class System.ComponentModel.Design.CommandID VerbFirst
		.field static public initonly class System.ComponentModel.Design.CommandID VerbLast
		.field static public initonly class System.ComponentModel.Design.CommandID VertSpaceConcatenate
		.field static public initonly class System.ComponentModel.Design.CommandID VertSpaceDecrease
		.field static public initonly class System.ComponentModel.Design.CommandID VertSpaceIncrease
		.field static public initonly class System.ComponentModel.Design.CommandID VertSpaceMakeEqual
		.field static public initonly class System.ComponentModel.Design.CommandID ViewCode
		.field static public initonly class System.ComponentModel.Design.CommandID ViewGrid
	}
	.class public StandardToolWindows
		extends [mscorlib]System.Object
	{
		.permissionset linkcheck = (00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.field static public initonly valuetype [mscorlib]System.Guid ObjectBrowser
		.field static public initonly valuetype [mscorlib]System.Guid OutputWindow
		.field static public initonly valuetype [mscorlib]System.Guid ProjectExplorer
		.field static public initonly valuetype [mscorlib]System.Guid PropertyBrowser
		.field static public initonly valuetype [mscorlib]System.Guid RelatedLinks
		.field static public initonly valuetype [mscorlib]System.Guid ServerExplorer
		.field static public initonly valuetype [mscorlib]System.Guid TaskList
		.field static public initonly valuetype [mscorlib]System.Guid Toolbox
	}
	.class public sealed ViewTechnology
		extends [mscorlib]System.Enum
	{
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype System.ComponentModel.Design.ViewTechnology Default = int32(0x00000002)
		.field static public literal valuetype System.ComponentModel.Design.ViewTechnology Passthrough = int32(0x00000000)
			.custom instance void [mscorlib]System.ObsoleteAttribute::.ctor(string) = (01 00 71 54 68 69 73 20 76 61 6C 75 65 20 68 61 73 20 62 65 65 6E 20 64 65 70 72 65 63 61 74 65 64 2E 20 55 73 65 20 56 69 65 77 54 65 63 68 6E 6F 6C 6F 67 79 2E 44 65 66 61 75 6C 74 20 69 6E 73 74 65 61 64 2E 20 20 68 74 74 70 3A 2F 2F 67 6F 2E 6D 69 63 72 6F 73 6F 66 74 2E 63 6F 6D 2F 66 77 6C 69 6E 6B 2F 3F 6C 69 6E 6B 69 64 3D 31 34 32 30 32 00 00)
		.field static public literal valuetype System.ComponentModel.Design.ViewTechnology WindowsForms = int32(0x00000001)
			.custom instance void [mscorlib]System.ObsoleteAttribute::.ctor(string) = (01 00 71 54 68 69 73 20 76 61 6C 75 65 20 68 61 73 20 62 65 65 6E 20 64 65 70 72 65 63 61 74 65 64 2E 20 55 73 65 20 56 69 65 77 54 65 63 68 6E 6F 6C 6F 67 79 2E 44 65 66 61 75 6C 74 20 69 6E 73 74 65 61 64 2E 20 20 68 74 74 70 3A 2F 2F 67 6F 2E 6D 69 63 72 6F 73 6F 66 74 2E 63 6F 6D 2F 66 77 6C 69 6E 6B 2F 3F 6C 69 6E 6B 69 64 3D 31 34 32 30 32 00 00)
	}
}
.namespace System.ComponentModel.Design.Serialization
{
	.class public abstract ComponentSerializationService
		extends [mscorlib]System.Object
	{
		.permissionset linkcheck = (00)
		.method public virtual hidebysig newslot abstract 
			instance class System.ComponentModel.Design.Serialization.SerializationStore CreateStore()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class System.ComponentModel.Design.Serialization.SerializationStore LoadStore(class [mscorlib]'System.IO.Stream' 'stream')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void Serialize(class System.ComponentModel.Design.Serialization.SerializationStore store, object 'value')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void SerializeAbsolute(class System.ComponentModel.Design.Serialization.SerializationStore store, object 'value')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void SerializeMember(class System.ComponentModel.Design.Serialization.SerializationStore store, object owningObject, class System.ComponentModel.MemberDescriptor member)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void SerializeMemberAbsolute(class System.ComponentModel.Design.Serialization.SerializationStore store, object owningObject, class System.ComponentModel.MemberDescriptor member)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class [mscorlib]System.Collections.ICollection Deserialize(class System.ComponentModel.Design.Serialization.SerializationStore store)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class [mscorlib]System.Collections.ICollection Deserialize(class System.ComponentModel.Design.Serialization.SerializationStore store, class System.ComponentModel.IContainer container)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void DeserializeTo(class System.ComponentModel.Design.Serialization.SerializationStore store, class System.ComponentModel.IContainer container, bool validateRecycledTypes, bool applyDefaults)
		{
		}
		.method public hidebysig 
			instance void DeserializeTo(class System.ComponentModel.Design.Serialization.SerializationStore store, class System.ComponentModel.IContainer container)
		{
			ret
		}
		.method public hidebysig 
			instance void DeserializeTo(class System.ComponentModel.Design.Serialization.SerializationStore store, class System.ComponentModel.IContainer container, bool validateRecycledTypes)
		{
			ret
		}
		.method family hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public sealed ContextStack
		extends [mscorlib]System.Object
	{
		.permissionset linkcheck = (00)
		.custom instance void [mscorlib]System.Reflection.DefaultMemberAttribute::.ctor(string) = (01 00 04 49 74 65 6D 00 00)
		.method public hidebysig specialname 
			instance object get_Current()
		{
			ret
		}
		.method public hidebysig specialname 
			instance object get_Item(int32 level)
		{
			ret
		}
		.method public hidebysig specialname 
			instance object get_Item(class [mscorlib]System.Type 'type')
		{
			ret
		}
		.method public hidebysig 
			instance void Append(object context)
		{
			ret
		}
		.method public hidebysig 
			instance object Pop()
		{
			ret
		}
		.method public hidebysig 
			instance void Push(object context)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance object Current()
		{
			.get instance object System.ComponentModel.Design.Serialization.ContextStack::get_Current()
		}
		.property instance object Item(int32)
		{
			.get instance object System.ComponentModel.Design.Serialization.ContextStack::get_Item(int32)
		}
		.property instance object Item(class [mscorlib]System.Type)
		{
			.get instance object System.ComponentModel.Design.Serialization.ContextStack::get_Item(class [mscorlib]System.Type)
		}
	}
	.class public sealed DefaultSerializationProviderAttribute
		extends [mscorlib]System.Attribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = (01 00 04 00 00 00 01 00 54 02 09 49 6E 68 65 72 69 74 65 64 00)
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Type providerType)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string providerTypeName)
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_ProviderTypeName()
		{
			ret
		}
		.property instance string ProviderTypeName()
		{
			.get instance string System.ComponentModel.Design.Serialization.DefaultSerializationProviderAttribute::get_ProviderTypeName()
		}
	}
	.class public abstract DesignerLoader
		extends [mscorlib]System.Object
	{
		.permissionset linkcheck = (00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method public virtual hidebysig newslot specialname 
			instance bool get_Loading()
		{
			ret
		}
		.method public virtual hidebysig newslot abstract 
			instance void BeginLoad(class System.ComponentModel.Design.Serialization.IDesignerLoaderHost host)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void Dispose()
		{
		}
		.method public virtual hidebysig newslot 
			instance void Flush()
		{
			ret
		}
		.method family hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance bool Loading()
		{
			.get instance bool System.ComponentModel.Design.Serialization.DesignerLoader::get_Loading()
		}
	}
	.class public sealed DesignerSerializerAttribute
		extends [mscorlib]System.Attribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = (01 00 04 04 00 00 02 00 54 02 0D 41 6C 6C 6F 77 4D 75 6C 74 69 70 6C 65 01 54 02 09 49 6E 68 65 72 69 74 65 64 01)
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Type serializerType, class [mscorlib]System.Type baseSerializerType)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string serializerTypeName, class [mscorlib]System.Type baseSerializerType)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string serializerTypeName, string baseSerializerTypeName)
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_SerializerTypeName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_SerializerBaseTypeName()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance object get_TypeId()
		{
			ret
		}
		.property instance string SerializerBaseTypeName()
		{
			.get instance string System.ComponentModel.Design.Serialization.DesignerSerializerAttribute::get_SerializerBaseTypeName()
		}
		.property instance string SerializerTypeName()
		{
			.get instance string System.ComponentModel.Design.Serialization.DesignerSerializerAttribute::get_SerializerTypeName()
		}
		.property instance object TypeId()
		{
			.get instance object System.ComponentModel.Design.Serialization.DesignerSerializerAttribute::get_TypeId()
		}
	}
	.class public interface abstract IDesignerLoaderHost
		implements System.ComponentModel.Design.IDesignerHost, System.ComponentModel.Design.IServiceContainer, [mscorlib]System.IServiceProvider
	{
		.method public virtual hidebysig newslot abstract 
			instance void EndLoad(string baseClassName, bool successful, class [mscorlib]System.Collections.ICollection errorCollection)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void Reload()
		{
		}
	}
	.class public interface abstract IDesignerLoaderService
	{
		.method public virtual hidebysig newslot abstract 
			instance void AddLoadDependency()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void DependentLoadComplete(bool successful, class [mscorlib]System.Collections.ICollection errorCollection)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance bool Reload()
		{
		}
	}
	.class public interface abstract IDesignerSerializationManager
		implements [mscorlib]System.IServiceProvider
	{
		.method public virtual hidebysig newslot abstract specialname 
			instance class System.ComponentModel.Design.Serialization.ContextStack get_Context()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance class System.ComponentModel.PropertyDescriptorCollection get_Properties()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void add_ResolveName(class System.ComponentModel.Design.Serialization.ResolveNameEventHandler 'value')
			synchronized 
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void remove_ResolveName(class System.ComponentModel.Design.Serialization.ResolveNameEventHandler 'value')
			synchronized 
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void add_SerializationComplete(class [mscorlib]System.EventHandler 'value')
			synchronized 
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void remove_SerializationComplete(class [mscorlib]System.EventHandler 'value')
			synchronized 
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void AddSerializationProvider(class System.ComponentModel.Design.Serialization.IDesignerSerializationProvider provider)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance object CreateInstance(class [mscorlib]System.Type 'type', class [mscorlib]System.Collections.ICollection arguments, string name, bool addToContainer)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance object GetInstance(string name)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance string GetName(object 'value')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance object GetSerializer(class [mscorlib]System.Type objectType, class [mscorlib]System.Type serializerType)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class [mscorlib]System.Type GetType(string typeName)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void RemoveSerializationProvider(class System.ComponentModel.Design.Serialization.IDesignerSerializationProvider provider)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void ReportError(object errorInformation)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void SetName(object 'instance', string name)
		{
		}
		.event System.ComponentModel.Design.Serialization.ResolveNameEventHandler ResolveName
		{
			.addon instance void System.ComponentModel.Design.Serialization.IDesignerSerializationManager::add_ResolveName(class System.ComponentModel.Design.Serialization.ResolveNameEventHandler)
			.removeon instance void System.ComponentModel.Design.Serialization.IDesignerSerializationManager::remove_ResolveName(class System.ComponentModel.Design.Serialization.ResolveNameEventHandler)
		}
		.event [mscorlib]System.EventHandler SerializationComplete
		{
			.addon instance void System.ComponentModel.Design.Serialization.IDesignerSerializationManager::add_SerializationComplete(class [mscorlib]System.EventHandler)
			.removeon instance void System.ComponentModel.Design.Serialization.IDesignerSerializationManager::remove_SerializationComplete(class [mscorlib]System.EventHandler)
		}
		.property instance class System.ComponentModel.Design.Serialization.ContextStack Context()
		{
			.get instance class System.ComponentModel.Design.Serialization.ContextStack System.ComponentModel.Design.Serialization.IDesignerSerializationManager::get_Context()
		}
		.property instance class System.ComponentModel.PropertyDescriptorCollection Properties()
		{
			.get instance class System.ComponentModel.PropertyDescriptorCollection System.ComponentModel.Design.Serialization.IDesignerSerializationManager::get_Properties()
		}
	}
	.class public interface abstract IDesignerSerializationProvider
	{
		.method public virtual hidebysig newslot abstract 
			instance object GetSerializer(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object currentSerializer, class [mscorlib]System.Type objectType, class [mscorlib]System.Type serializerType)
		{
		}
	}
	.class public interface abstract IDesignerSerializationService
	{
		.method public virtual hidebysig newslot abstract 
			instance class [mscorlib]System.Collections.ICollection Deserialize(object serializationData)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance object Serialize(class [mscorlib]System.Collections.ICollection objects)
		{
		}
	}
	.class public interface abstract INameCreationService
	{
		.method public virtual hidebysig newslot abstract 
			instance string CreateName(class System.ComponentModel.IContainer container, class [mscorlib]System.Type dataType)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance bool IsValidName(string name)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void ValidateName(string name)
		{
		}
	}
	.class public sealed InstanceDescriptor
		extends [mscorlib]System.Object
	{
		.permissionset linkcheck = (00)
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Reflection.MemberInfo member, class [mscorlib]System.Collections.ICollection arguments)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Reflection.MemberInfo member, class [mscorlib]System.Collections.ICollection arguments, bool isComplete)
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]System.Collections.ICollection get_Arguments()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsComplete()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]System.Reflection.MemberInfo get_MemberInfo()
		{
			ret
		}
		.method public hidebysig 
			instance object Invoke()
		{
			ret
		}
		.property instance class [mscorlib]System.Collections.ICollection Arguments()
		{
			.get instance class [mscorlib]System.Collections.ICollection System.ComponentModel.Design.Serialization.InstanceDescriptor::get_Arguments()
		}
		.property instance bool IsComplete()
		{
			.get instance bool System.ComponentModel.Design.Serialization.InstanceDescriptor::get_IsComplete()
		}
		.property instance class [mscorlib]System.Reflection.MemberInfo MemberInfo()
		{
			.get instance class [mscorlib]System.Reflection.MemberInfo System.ComponentModel.Design.Serialization.InstanceDescriptor::get_MemberInfo()
		}
	}
	.class public sequential sealed MemberRelationship
		extends [mscorlib]System.ValueType
	{
		.method public hidebysig specialname 
			instance void .ctor(object owner, class System.ComponentModel.MemberDescriptor member)
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsEmpty()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.ComponentModel.MemberDescriptor get_Member()
		{
			ret
		}
		.method public hidebysig specialname 
			instance object get_Owner()
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool Equals(object obj)
		{
			ret
		}
		.method public virtual hidebysig 
			instance int32 GetHashCode()
		{
			ret
		}
		.method public static hidebysig specialname 
			bool op_Equality(valuetype System.ComponentModel.Design.Serialization.MemberRelationship left, valuetype System.ComponentModel.Design.Serialization.MemberRelationship right)
		{
			ret
		}
		.method public static hidebysig specialname 
			bool op_Inequality(valuetype System.ComponentModel.Design.Serialization.MemberRelationship left, valuetype System.ComponentModel.Design.Serialization.MemberRelationship right)
		{
			ret
		}
		.field static public initonly valuetype System.ComponentModel.Design.Serialization.MemberRelationship Empty

		//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
		.field private int32 __Asmmeta_Private_Field
		.property instance bool IsEmpty()
		{
			.get instance bool System.ComponentModel.Design.Serialization.MemberRelationship::get_IsEmpty()
		}
		.property instance class System.ComponentModel.MemberDescriptor Member()
		{
			.get instance class System.ComponentModel.MemberDescriptor System.ComponentModel.Design.Serialization.MemberRelationship::get_Member()
		}
		.property instance object Owner()
		{
			.get instance object System.ComponentModel.Design.Serialization.MemberRelationship::get_Owner()
		}
	}
	.class public abstract MemberRelationshipService
		extends [mscorlib]System.Object
	{
		.permissionset linkcheck = (00)
		.custom instance void [mscorlib]System.Reflection.DefaultMemberAttribute::.ctor(string) = (01 00 04 49 74 65 6D 00 00)
		.method public hidebysig specialname 
			instance valuetype System.ComponentModel.Design.Serialization.MemberRelationship get_Item(valuetype System.ComponentModel.Design.Serialization.MemberRelationship source)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Item(valuetype System.ComponentModel.Design.Serialization.MemberRelationship source, valuetype System.ComponentModel.Design.Serialization.MemberRelationship 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype System.ComponentModel.Design.Serialization.MemberRelationship get_Item(object sourceOwner, class System.ComponentModel.MemberDescriptor sourceMember)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Item(object sourceOwner, class System.ComponentModel.MemberDescriptor sourceMember, valuetype System.ComponentModel.Design.Serialization.MemberRelationship 'value')
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance valuetype System.ComponentModel.Design.Serialization.MemberRelationship GetRelationship(valuetype System.ComponentModel.Design.Serialization.MemberRelationship source)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void SetRelationship(valuetype System.ComponentModel.Design.Serialization.MemberRelationship source, valuetype System.ComponentModel.Design.Serialization.MemberRelationship relationship)
		{
			ret
		}
		.method public virtual hidebysig newslot abstract 
			instance bool SupportsRelationship(valuetype System.ComponentModel.Design.Serialization.MemberRelationship source, valuetype System.ComponentModel.Design.Serialization.MemberRelationship relationship)
		{
		}
		.method family hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance valuetype System.ComponentModel.Design.Serialization.MemberRelationship Item(valuetype System.ComponentModel.Design.Serialization.MemberRelationship)
		{
			.get instance valuetype System.ComponentModel.Design.Serialization.MemberRelationship System.ComponentModel.Design.Serialization.MemberRelationshipService::get_Item(valuetype System.ComponentModel.Design.Serialization.MemberRelationship)
			.set instance void System.ComponentModel.Design.Serialization.MemberRelationshipService::set_Item(valuetype System.ComponentModel.Design.Serialization.MemberRelationship, valuetype System.ComponentModel.Design.Serialization.MemberRelationship)
		}
		.property instance valuetype System.ComponentModel.Design.Serialization.MemberRelationship Item(object, class System.ComponentModel.MemberDescriptor)
		{
			.get instance valuetype System.ComponentModel.Design.Serialization.MemberRelationship System.ComponentModel.Design.Serialization.MemberRelationshipService::get_Item(object, class System.ComponentModel.MemberDescriptor)
			.set instance void System.ComponentModel.Design.Serialization.MemberRelationshipService::set_Item(object, class System.ComponentModel.MemberDescriptor, valuetype System.ComponentModel.Design.Serialization.MemberRelationship)
		}
	}
	.class public ResolveNameEventArgs
		extends [mscorlib]System.EventArgs
	{
		.permissionset linkcheck = (00)
		.method public hidebysig specialname 
			instance void .ctor(string name)
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method public hidebysig specialname 
			instance object get_Value()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Value(object 'value')
		{
			ret
		}
		.property instance string Name()
		{
			.get instance string System.ComponentModel.Design.Serialization.ResolveNameEventArgs::get_Name()
		}
		.property instance object Value()
		{
			.get instance object System.ComponentModel.Design.Serialization.ResolveNameEventArgs::get_Value()
			.set instance void System.ComponentModel.Design.Serialization.ResolveNameEventArgs::set_Value(object)
		}
	}
	.class public sealed ResolveNameEventHandler
		extends [mscorlib]System.MulticastDelegate
	{
		.permissionset linkcheck = (00)
		.method public hidebysig specialname 
			instance void .ctor(object 'object', native int 'method')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void Invoke(object sender, class System.ComponentModel.Design.Serialization.ResolveNameEventArgs e)
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance class [mscorlib]System.IAsyncResult BeginInvoke(object sender, class System.ComponentModel.Design.Serialization.ResolveNameEventArgs e, class [mscorlib]System.AsyncCallback callback, object 'object')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void EndInvoke(class [mscorlib]System.IAsyncResult result)
			runtime 
		{
		}
	}
	.class public sealed RootDesignerSerializerAttribute
		extends [mscorlib]System.Attribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = (01 00 04 04 00 00 02 00 54 02 0D 41 6C 6C 6F 77 4D 75 6C 74 69 70 6C 65 01 54 02 09 49 6E 68 65 72 69 74 65 64 01)
		.custom instance void [mscorlib]System.ObsoleteAttribute::.ctor(string) = (01 00 80 F4 54 68 69 73 20 61 74 74 72 69 62 75 74 65 20 68 61 73 20 62 65 65 6E 20 64 65 70 72 65 63 61 74 65 64 2E 20 55 73 65 20 44 65 73 69 67 6E 65 72 53 65 72 69 61 6C 69 7A 65 72 41 74 74 72 69 62 75 74 65 20 69 6E 73 74 65 61 64 2E 20 20 46 6F 72 20 65 78 61 6D 70 6C 65 2C 20 74 6F 20 73 70 65 63 69 66 79 20 61 20 72 6F 6F 74 20 64 65 73 69 67 6E 65 72 20 66 6F 72 20 43 6F 64 65 44 6F 6D 2C 20 75 73 65 20 44 65 73 69 67 6E 65 72 53 65 72 69 61 6C 69 7A 65 72 41 74 74 72 69 62 75 74 65 28 2E 2E 2E 2C 74 79 70 65 6F 66 28 54 79 70 65 43 6F 64 65 44 6F 6D 53 65 72 69 61 6C 69 7A 65 72 29 29 2E 20 20 68 74 74 70 3A 2F 2F 67 6F 2E 6D 69 63 72 6F 73 6F 66 74 2E 63 6F 6D 2F 66 77 6C 69 6E 6B 2F 3F 6C 69 6E 6B 69 64 3D 31 34 32 30 32 00 00)
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Type serializerType, class [mscorlib]System.Type baseSerializerType, bool reloadable)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string serializerTypeName, class [mscorlib]System.Type baseSerializerType, bool reloadable)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string serializerTypeName, string baseSerializerTypeName, bool reloadable)
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_Reloadable()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_SerializerTypeName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_SerializerBaseTypeName()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance object get_TypeId()
		{
			ret
		}
		.property instance bool Reloadable()
		{
			.get instance bool System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute::get_Reloadable()
		}
		.property instance string SerializerBaseTypeName()
		{
			.get instance string System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute::get_SerializerBaseTypeName()
		}
		.property instance string SerializerTypeName()
		{
			.get instance string System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute::get_SerializerTypeName()
		}
		.property instance object TypeId()
		{
			.get instance object System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute::get_TypeId()
		}
	}
	.class public abstract SerializationStore
		extends [mscorlib]System.Object
		implements [mscorlib]System.IDisposable
	{
		.permissionset linkcheck = (00)
		.method public virtual hidebysig newslot abstract specialname 
			instance class [mscorlib]System.Collections.ICollection get_Errors()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void Close()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void Save(class [mscorlib]'System.IO.Stream' 'stream')
		{
		}
		.method private final virtual hidebysig newslot 
			instance void System.IDisposable.Dispose()
		{
			.override [mscorlib]System.IDisposable::Dispose
			ret
		}
		.method family virtual hidebysig newslot 
			instance void Dispose(bool disposing)
		{
			ret
		}
		.method family hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance class [mscorlib]System.Collections.ICollection Errors()
		{
			.get instance class [mscorlib]System.Collections.ICollection System.ComponentModel.Design.Serialization.SerializationStore::get_Errors()
		}
	}
}
.namespace System.Configuration
{
	.class public AppSettingsReader
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig 
			instance object GetValue(string key, class [mscorlib]System.Type 'type')
		{
			ret
		}
	}
	.class public sealed ApplicationScopedSettingAttribute
		extends System.Configuration.SettingAttribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = (01 00 80 00 00 00 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public sealed ApplicationSettingsGroup
		extends [System.Configuration]System.Configuration.ConfigurationSectionGroup
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public sealed ClientSettingsSection
		extends [System.Configuration]System.Configuration.ConfigurationSection
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method family virtual hidebysig specialname 
			instance class [System.Configuration]System.Configuration.ConfigurationPropertyCollection get_Properties()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Configuration.SettingElementCollection get_Settings()
		{
			ret
		}
		.property instance class [System.Configuration]System.Configuration.ConfigurationPropertyCollection Properties()
		{
			.get instance class [System.Configuration]System.Configuration.ConfigurationPropertyCollection System.Configuration.ClientSettingsSection::get_Properties()
		}
		.property instance class System.Configuration.SettingElementCollection Settings()
		{
			.get instance class System.Configuration.SettingElementCollection System.Configuration.ClientSettingsSection::get_Settings()
		}
	}
	.class public sealed ConfigXmlDocument
		extends [System.Xml]System.Xml.XmlDocument
		implements [System.Configuration]System.Configuration.Internal.IConfigErrorInfo
	{
		.permissionset linkcheck = (00)
		.method private final virtual hidebysig newslot specialname 
			instance int32 System.Configuration.Internal.IConfigErrorInfo.get_LineNumber()
		{
			.override [System.Configuration]System.Configuration.Internal.IConfigErrorInfo::get_LineNumber
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_LineNumber()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Filename()
		{
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance string System.Configuration.Internal.IConfigErrorInfo.get_Filename()
		{
			.override [System.Configuration]System.Configuration.Internal.IConfigErrorInfo::get_Filename
			ret
		}
		.method public virtual hidebysig 
			instance void Load(string filename)
		{
			ret
		}
		.method public hidebysig 
			instance void LoadSingleElement(string filename, class [System.Xml]System.Xml.XmlTextReader sourceReader)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [System.Xml]System.Xml.XmlAttribute CreateAttribute(string prefix, string localName, string namespaceUri)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [System.Xml]System.Xml.XmlElement CreateElement(string prefix, string localName, string namespaceUri)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [System.Xml]System.Xml.XmlText CreateTextNode(string text)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [System.Xml]System.Xml.XmlCDataSection CreateCDataSection(string data)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [System.Xml]System.Xml.XmlComment CreateComment(string data)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [System.Xml]System.Xml.XmlSignificantWhitespace CreateSignificantWhitespace(string data)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [System.Xml]System.Xml.XmlWhitespace CreateWhitespace(string data)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance string Filename()
		{
			.get instance string System.Configuration.ConfigXmlDocument::get_Filename()
		}
		.property instance int32 LineNumber()
		{
			.get instance int32 System.Configuration.ConfigXmlDocument::get_LineNumber()
		}
		.property instance string System.Configuration.Internal.IConfigErrorInfo.Filename()
		{
			.get instance string System.Configuration.ConfigXmlDocument::System.Configuration.Internal.IConfigErrorInfo.get_Filename()
		}
		.property instance int32 System.Configuration.Internal.IConfigErrorInfo.LineNumber()
		{
			.get instance int32 System.Configuration.ConfigXmlDocument::System.Configuration.Internal.IConfigErrorInfo.get_LineNumber()
		}
	}
	.class public serializable ConfigurationException
		extends [mscorlib]System.SystemException
	{
		.method family hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Runtime.Serialization.SerializationInfo info, valuetype [mscorlib]System.Runtime.Serialization.StreamingContext context)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			.custom instance void [mscorlib]System.ObsoleteAttribute::.ctor(string) = (01 00 80 81 54 68 69 73 20 63 6C 61 73 73 20 69 73 20 6F 62 73 6F 6C 65 74 65 2C 20 74 6F 20 63 72 65 61 74 65 20 61 20 6E 65 77 20 65 78 63 65 70 74 69 6F 6E 20 63 72 65 61 74 65 20 61 20 53 79 73 74 65 6D 2E 43 6F 6E 66 69 67 75 72 61 74 69 6F 6E 21 53 79 73 74 65 6D 2E 43 6F 6E 66 69 67 75 72 61 74 69 6F 6E 2E 43 6F 6E 66 69 67 75 72 61 74 69 6F 6E 45 72 72 6F 72 73 45 78 63 65 70 74 69 6F 6E 00 00)
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string message)
		{
			.custom instance void [mscorlib]System.ObsoleteAttribute::.ctor(string) = (01 00 80 81 54 68 69 73 20 63 6C 61 73 73 20 69 73 20 6F 62 73 6F 6C 65 74 65 2C 20 74 6F 20 63 72 65 61 74 65 20 61 20 6E 65 77 20 65 78 63 65 70 74 69 6F 6E 20 63 72 65 61 74 65 20 61 20 53 79 73 74 65 6D 2E 43 6F 6E 66 69 67 75 72 61 74 69 6F 6E 21 53 79 73 74 65 6D 2E 43 6F 6E 66 69 67 75 72 61 74 69 6F 6E 2E 43 6F 6E 66 69 67 75 72 61 74 69 6F 6E 45 72 72 6F 72 73 45 78 63 65 70 74 69 6F 6E 00 00)
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string message, class [mscorlib]System.Exception inner)
		{
			.custom instance void [mscorlib]System.ObsoleteAttribute::.ctor(string) = (01 00 80 81 54 68 69 73 20 63 6C 61 73 73 20 69 73 20 6F 62 73 6F 6C 65 74 65 2C 20 74 6F 20 63 72 65 61 74 65 20 61 20 6E 65 77 20 65 78 63 65 70 74 69 6F 6E 20 63 72 65 61 74 65 20 61 20 53 79 73 74 65 6D 2E 43 6F 6E 66 69 67 75 72 61 74 69 6F 6E 21 53 79 73 74 65 6D 2E 43 6F 6E 66 69 67 75 72 61 74 69 6F 6E 2E 43 6F 6E 66 69 67 75 72 61 74 69 6F 6E 45 72 72 6F 72 73 45 78 63 65 70 74 69 6F 6E 00 00)
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string message, class [System.Xml]System.Xml.XmlNode node)
		{
			.custom instance void [mscorlib]System.ObsoleteAttribute::.ctor(string) = (01 00 80 81 54 68 69 73 20 63 6C 61 73 73 20 69 73 20 6F 62 73 6F 6C 65 74 65 2C 20 74 6F 20 63 72 65 61 74 65 20 61 20 6E 65 77 20 65 78 63 65 70 74 69 6F 6E 20 63 72 65 61 74 65 20 61 20 53 79 73 74 65 6D 2E 43 6F 6E 66 69 67 75 72 61 74 69 6F 6E 21 53 79 73 74 65 6D 2E 43 6F 6E 66 69 67 75 72 61 74 69 6F 6E 2E 43 6F 6E 66 69 67 75 72 61 74 69 6F 6E 45 72 72 6F 72 73 45 78 63 65 70 74 69 6F 6E 00 00)
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string message, class [mscorlib]System.Exception inner, class [System.Xml]System.Xml.XmlNode node)
		{
			.custom instance void [mscorlib]System.ObsoleteAttribute::.ctor(string) = (01 00 80 81 54 68 69 73 20 63 6C 61 73 73 20 69 73 20 6F 62 73 6F 6C 65 74 65 2C 20 74 6F 20 63 72 65 61 74 65 20 61 20 6E 65 77 20 65 78 63 65 70 74 69 6F 6E 20 63 72 65 61 74 65 20 61 20 53 79 73 74 65 6D 2E 43 6F 6E 66 69 67 75 72 61 74 69 6F 6E 21 53 79 73 74 65 6D 2E 43 6F 6E 66 69 67 75 72 61 74 69 6F 6E 2E 43 6F 6E 66 69 67 75 72 61 74 69 6F 6E 45 72 72 6F 72 73 45 78 63 65 70 74 69 6F 6E 00 00)
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string message, string filename, int32 line)
		{
			.custom instance void [mscorlib]System.ObsoleteAttribute::.ctor(string) = (01 00 80 81 54 68 69 73 20 63 6C 61 73 73 20 69 73 20 6F 62 73 6F 6C 65 74 65 2C 20 74 6F 20 63 72 65 61 74 65 20 61 20 6E 65 77 20 65 78 63 65 70 74 69 6F 6E 20 63 72 65 61 74 65 20 61 20 53 79 73 74 65 6D 2E 43 6F 6E 66 69 67 75 72 61 74 69 6F 6E 21 53 79 73 74 65 6D 2E 43 6F 6E 66 69 67 75 72 61 74 69 6F 6E 2E 43 6F 6E 66 69 67 75 72 61 74 69 6F 6E 45 72 72 6F 72 73 45 78 63 65 70 74 69 6F 6E 00 00)
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string message, class [mscorlib]System.Exception inner, string filename, int32 line)
		{
			.custom instance void [mscorlib]System.ObsoleteAttribute::.ctor(string) = (01 00 80 81 54 68 69 73 20 63 6C 61 73 73 20 69 73 20 6F 62 73 6F 6C 65 74 65 2C 20 74 6F 20 63 72 65 61 74 65 20 61 20 6E 65 77 20 65 78 63 65 70 74 69 6F 6E 20 63 72 65 61 74 65 20 61 20 53 79 73 74 65 6D 2E 43 6F 6E 66 69 67 75 72 61 74 69 6F 6E 21 53 79 73 74 65 6D 2E 43 6F 6E 66 69 67 75 72 61 74 69 6F 6E 2E 43 6F 6E 66 69 67 75 72 61 74 69 6F 6E 45 72 72 6F 72 73 45 78 63 65 70 74 69 6F 6E 00 00)
			ret
		}
		.method public virtual hidebysig 
			instance void GetObjectData(class [mscorlib]System.Runtime.Serialization.SerializationInfo info, valuetype [mscorlib]System.Runtime.Serialization.StreamingContext context)
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance string get_Message()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance string get_BareMessage()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance string get_Filename()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance int32 get_Line()
		{
			ret
		}
		.method public static hidebysig 
			string GetXmlNodeFilename(class [System.Xml]System.Xml.XmlNode node)
		{
			.custom instance void [mscorlib]System.ObsoleteAttribute::.ctor(string) = (01 00 76 54 68 69 73 20 63 6C 61 73 73 20 69 73 20 6F 62 73 6F 6C 65 74 65 2C 20 75 73 65 20 53 79 73 74 65 6D 2E 43 6F 6E 66 69 67 75 72 61 74 69 6F 6E 21 53 79 73 74 65 6D 2E 43 6F 6E 66 69 67 75 72 61 74 69 6F 6E 2E 43 6F 6E 66 69 67 75 72 61 74 69 6F 6E 45 72 72 6F 72 73 45 78 63 65 70 74 69 6F 6E 2E 47 65 74 46 69 6C 65 6E 61 6D 65 20 69 6E 73 74 65 61 64 00 00)
			ret
		}
		.method public static hidebysig 
			int32 GetXmlNodeLineNumber(class [System.Xml]System.Xml.XmlNode node)
		{
			.custom instance void [mscorlib]System.ObsoleteAttribute::.ctor(string) = (01 00 78 54 68 69 73 20 63 6C 61 73 73 20 69 73 20 6F 62 73 6F 6C 65 74 65 2C 20 75 73 65 20 53 79 73 74 65 6D 2E 43 6F 6E 66 69 67 75 72 61 74 69 6F 6E 21 53 79 73 74 65 6D 2E 43 6F 6E 66 69 67 75 72 61 74 69 6F 6E 2E 43 6F 6E 66 69 67 75 72 61 74 69 6F 6E 45 72 72 6F 72 73 45 78 63 65 70 74 69 6F 6E 2E 47 65 74 4C 69 6E 65 6E 75 6D 62 65 72 20 69 6E 73 74 65 61 64 00 00)
			ret
		}
		.property instance string BareMessage()
		{
			.get instance string System.Configuration.ConfigurationException::get_BareMessage()
		}
		.property instance string Filename()
		{
			.get instance string System.Configuration.ConfigurationException::get_Filename()
		}
		.property instance int32 Line()
		{
			.get instance int32 System.Configuration.ConfigurationException::get_Line()
		}
		.property instance string Message()
		{
			.get instance string System.Configuration.ConfigurationException::get_Message()
		}
	}
	.class public sealed ConfigurationSettings
		extends [mscorlib]System.Object
	{
		.method public static hidebysig specialname 
			class System.Collections.Specialized.NameValueCollection get_AppSettings()
		{
			ret
		}
		.method public static hidebysig 
			object GetConfig(string sectionName)
		{
			.custom instance void [mscorlib]System.ObsoleteAttribute::.ctor(string) = (01 00 7A 54 68 69 73 20 6D 65 74 68 6F 64 20 69 73 20 6F 62 73 6F 6C 65 74 65 2C 20 69 74 20 68 61 73 20 62 65 65 6E 20 72 65 70 6C 61 63 65 64 20 62 79 20 53 79 73 74 65 6D 2E 43 6F 6E 66 69 67 75 72 61 74 69 6F 6E 21 53 79 73 74 65 6D 2E 43 6F 6E 66 69 67 75 72 61 74 69 6F 6E 2E 43 6F 6E 66 69 67 75 72 61 74 69 6F 6E 4D 61 6E 61 67 65 72 2E 47 65 74 53 65 63 74 69 6F 6E 00 00)
			ret
		}
		.property class System.Collections.Specialized.NameValueCollection AppSettings()
		{
			.custom instance void [mscorlib]System.ObsoleteAttribute::.ctor(string) = (01 00 7B 54 68 69 73 20 6D 65 74 68 6F 64 20 69 73 20 6F 62 73 6F 6C 65 74 65 2C 20 69 74 20 68 61 73 20 62 65 65 6E 20 72 65 70 6C 61 63 65 64 20 62 79 20 53 79 73 74 65 6D 2E 43 6F 6E 66 69 67 75 72 61 74 69 6F 6E 21 53 79 73 74 65 6D 2E 43 6F 6E 66 69 67 75 72 61 74 69 6F 6E 2E 43 6F 6E 66 69 67 75 72 61 74 69 6F 6E 4D 61 6E 61 67 65 72 2E 41 70 70 53 65 74 74 69 6E 67 73 00 00)
			.get class System.Collections.Specialized.NameValueCollection System.Configuration.ConfigurationSettings::get_AppSettings()
		}
	}
	.class public sealed DefaultSettingValueAttribute
		extends [mscorlib]System.Attribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = (01 00 80 00 00 00 00 00)
		.method public hidebysig specialname 
			instance void .ctor(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Value()
		{
			ret
		}
		.property instance string Value()
		{
			.get instance string System.Configuration.DefaultSettingValueAttribute::get_Value()
		}
	}
	.class public DictionarySectionHandler
		extends [mscorlib]System.Object
		implements System.Configuration.IConfigurationSectionHandler
	{
		.method public virtual hidebysig newslot 
			instance object Create(object parent, object context, class [System.Xml]System.Xml.XmlNode section)
		{
			ret
		}
		.method family virtual hidebysig newslot specialname 
			instance string get_KeyAttributeName()
		{
			ret
		}
		.method family virtual hidebysig newslot specialname 
			instance string get_ValueAttributeName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance string KeyAttributeName()
		{
			.get instance string System.Configuration.DictionarySectionHandler::get_KeyAttributeName()
		}
		.property instance string ValueAttributeName()
		{
			.get instance string System.Configuration.DictionarySectionHandler::get_ValueAttributeName()
		}
	}
	.class public interface abstract IApplicationSettingsProvider
	{
		.method public virtual hidebysig newslot abstract 
			instance class System.Configuration.SettingsPropertyValue GetPreviousVersion(class System.Configuration.SettingsContext context, class System.Configuration.SettingsProperty 'property')
		{
			.permissionset linkcheck = (00)
		}
		.method public virtual hidebysig newslot abstract 
			instance void Reset(class System.Configuration.SettingsContext context)
		{
			.permissionset linkcheck = (00)
		}
		.method public virtual hidebysig newslot abstract 
			instance void Upgrade(class System.Configuration.SettingsContext context, class System.Configuration.SettingsPropertyCollection properties)
		{
			.permissionset linkcheck = (00)
		}
	}
	.class public interface abstract IConfigurationSectionHandler
	{
		.method public virtual hidebysig newslot abstract 
			instance object Create(object parent, object configContext, class [System.Xml]System.Xml.XmlNode section)
		{
		}
	}
	.class public interface abstract IConfigurationSystem
	{
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 00 00 00)
		.method public virtual hidebysig newslot abstract 
			instance object GetConfig(string configKey)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void Init()
		{
		}
	}
	.class public interface abstract IPersistComponentSettings
	{
		.method public virtual hidebysig newslot abstract specialname 
			instance bool get_SaveSettings()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void set_SaveSettings(bool 'value')
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance string get_SettingsKey()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void set_SettingsKey(string 'value')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void LoadComponentSettings()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void SaveComponentSettings()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void ResetComponentSettings()
		{
		}
		.property instance bool SaveSettings()
		{
			.get instance bool System.Configuration.IPersistComponentSettings::get_SaveSettings()
			.set instance void System.Configuration.IPersistComponentSettings::set_SaveSettings(bool)
		}
		.property instance string SettingsKey()
		{
			.get instance string System.Configuration.IPersistComponentSettings::get_SettingsKey()
			.set instance void System.Configuration.IPersistComponentSettings::set_SettingsKey(string)
		}
	}
	.class public interface abstract ISettingsProviderService
	{
		.method public virtual hidebysig newslot abstract 
			instance class System.Configuration.SettingsProvider GetSettingsProvider(class System.Configuration.SettingsProperty 'property')
		{
		}
	}
	.class public IgnoreSectionHandler
		extends [mscorlib]System.Object
		implements System.Configuration.IConfigurationSectionHandler
	{
		.method public virtual hidebysig newslot 
			instance object Create(object parent, object configContext, class [System.Xml]System.Xml.XmlNode section)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public LocalFileSettingsProvider
		extends System.Configuration.SettingsProvider
		implements System.Configuration.IApplicationSettingsProvider
	{
		.permissionset linkcheck = (00)
		.method public virtual hidebysig specialname 
			instance string get_ApplicationName()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_ApplicationName(string 'value')
		{
			ret
		}
		.method public virtual hidebysig 
			instance void Initialize(string name, class System.Collections.Specialized.NameValueCollection values)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class System.Configuration.SettingsPropertyValueCollection GetPropertyValues(class System.Configuration.SettingsContext context, class System.Configuration.SettingsPropertyCollection properties)
		{
			ret
		}
		.method public virtual hidebysig 
			instance void SetPropertyValues(class System.Configuration.SettingsContext context, class System.Configuration.SettingsPropertyValueCollection values)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void Reset(class System.Configuration.SettingsContext context)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void Upgrade(class System.Configuration.SettingsContext context, class System.Configuration.SettingsPropertyCollection properties)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance class System.Configuration.SettingsPropertyValue GetPreviousVersion(class System.Configuration.SettingsContext context, class System.Configuration.SettingsProperty 'property')
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance string ApplicationName()
		{
			.get instance string System.Configuration.LocalFileSettingsProvider::get_ApplicationName()
			.set instance void System.Configuration.LocalFileSettingsProvider::set_ApplicationName(string)
		}
	}
	.class public NameValueFileSectionHandler
		extends [mscorlib]System.Object
		implements System.Configuration.IConfigurationSectionHandler
	{
		.method public final virtual hidebysig newslot 
			instance object Create(object parent, object configContext, class [System.Xml]System.Xml.XmlNode section)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public NameValueSectionHandler
		extends [mscorlib]System.Object
		implements System.Configuration.IConfigurationSectionHandler
	{
		.method public final virtual hidebysig newslot 
			instance object Create(object parent, object context, class [System.Xml]System.Xml.XmlNode section)
		{
			ret
		}
		.method family virtual hidebysig newslot specialname 
			instance string get_KeyAttributeName()
		{
			ret
		}
		.method family virtual hidebysig newslot specialname 
			instance string get_ValueAttributeName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance string KeyAttributeName()
		{
			.get instance string System.Configuration.NameValueSectionHandler::get_KeyAttributeName()
		}
		.property instance string ValueAttributeName()
		{
			.get instance string System.Configuration.NameValueSectionHandler::get_ValueAttributeName()
		}
	}
	.class public sealed NoSettingsVersionUpgradeAttribute
		extends [mscorlib]System.Attribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = (01 00 80 00 00 00 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public SettingAttribute
		extends [mscorlib]System.Attribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = (01 00 80 00 00 00 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public sealed SettingElement
		extends [System.Configuration]System.Configuration.ConfigurationElement
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string name, valuetype System.Configuration.SettingsSerializeAs serializeAs)
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool Equals(object settings)
		{
			ret
		}
		.method public virtual hidebysig 
			instance int32 GetHashCode()
		{
			ret
		}
		.method family virtual hidebysig specialname 
			instance class [System.Configuration]System.Configuration.ConfigurationPropertyCollection get_Properties()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Name(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype System.Configuration.SettingsSerializeAs get_SerializeAs()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_SerializeAs(valuetype System.Configuration.SettingsSerializeAs 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Configuration.SettingValueElement get_Value()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Value(class System.Configuration.SettingValueElement 'value')
		{
			ret
		}
		.property instance string Name()
		{
			.get instance string System.Configuration.SettingElement::get_Name()
			.set instance void System.Configuration.SettingElement::set_Name(string)
		}
		.property instance class [System.Configuration]System.Configuration.ConfigurationPropertyCollection Properties()
		{
			.get instance class [System.Configuration]System.Configuration.ConfigurationPropertyCollection System.Configuration.SettingElement::get_Properties()
		}
		.property instance valuetype System.Configuration.SettingsSerializeAs SerializeAs()
		{
			.get instance valuetype System.Configuration.SettingsSerializeAs System.Configuration.SettingElement::get_SerializeAs()
			.set instance void System.Configuration.SettingElement::set_SerializeAs(valuetype System.Configuration.SettingsSerializeAs)
		}
		.property instance class System.Configuration.SettingValueElement Value()
		{
			.get instance class System.Configuration.SettingValueElement System.Configuration.SettingElement::get_Value()
			.set instance void System.Configuration.SettingElement::set_Value(class System.Configuration.SettingValueElement)
		}
	}
	.class public sealed SettingElementCollection
		extends [System.Configuration]System.Configuration.ConfigurationElementCollection
	{
		.method public virtual hidebysig specialname 
			instance valuetype [System.Configuration]System.Configuration.ConfigurationElementCollectionType get_CollectionType()
		{
			ret
		}
		.method family virtual hidebysig specialname 
			instance string get_ElementName()
		{
			ret
		}
		.method family virtual hidebysig 
			instance class [System.Configuration]System.Configuration.ConfigurationElement CreateNewElement()
		{
			ret
		}
		.method family virtual hidebysig 
			instance object GetElementKey(class [System.Configuration]System.Configuration.ConfigurationElement element)
		{
			ret
		}
		.method public hidebysig 
			instance class System.Configuration.SettingElement Get(string elementKey)
		{
			ret
		}
		.method public hidebysig 
			instance void Add(class System.Configuration.SettingElement element)
		{
			ret
		}
		.method public hidebysig 
			instance void Remove(class System.Configuration.SettingElement element)
		{
			ret
		}
		.method public hidebysig 
			instance void Clear()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance valuetype [System.Configuration]System.Configuration.ConfigurationElementCollectionType CollectionType()
		{
			.get instance valuetype [System.Configuration]System.Configuration.ConfigurationElementCollectionType System.Configuration.SettingElementCollection::get_CollectionType()
		}
		.property instance string ElementName()
		{
			.get instance string System.Configuration.SettingElementCollection::get_ElementName()
		}
	}
	.class public sealed SettingValueElement
		extends [System.Configuration]System.Configuration.ConfigurationElement
	{
		.method family virtual hidebysig specialname 
			instance class [System.Configuration]System.Configuration.ConfigurationPropertyCollection get_Properties()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [System.Xml]System.Xml.XmlNode get_ValueXml()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ValueXml(class [System.Xml]System.Xml.XmlNode 'value')
		{
			ret
		}
		.method family virtual hidebysig 
			instance void DeserializeElement(class [System.Xml]System.Xml.XmlReader reader, bool serializeCollectionKey)
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool Equals(object settingValue)
		{
			ret
		}
		.method public virtual hidebysig 
			instance int32 GetHashCode()
		{
			ret
		}
		.method family virtual hidebysig 
			instance bool IsModified()
		{
			ret
		}
		.method family virtual hidebysig 
			instance void ResetModified()
		{
			ret
		}
		.method family virtual hidebysig 
			instance bool SerializeToXmlElement(class [System.Xml]System.Xml.XmlWriter writer, string elementName)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void Reset(class [System.Configuration]System.Configuration.ConfigurationElement parentElement)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void Unmerge(class [System.Configuration]System.Configuration.ConfigurationElement sourceElement, class [System.Configuration]System.Configuration.ConfigurationElement parentElement, valuetype [System.Configuration]System.Configuration.ConfigurationSaveMode saveMode)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance class [System.Configuration]System.Configuration.ConfigurationPropertyCollection Properties()
		{
			.get instance class [System.Configuration]System.Configuration.ConfigurationPropertyCollection System.Configuration.SettingValueElement::get_Properties()
		}
		.property instance class [System.Xml]System.Xml.XmlNode ValueXml()
		{
			.get instance class [System.Xml]System.Xml.XmlNode System.Configuration.SettingValueElement::get_ValueXml()
			.set instance void System.Configuration.SettingValueElement::set_ValueXml(class [System.Xml]System.Xml.XmlNode)
		}
	}
	.class public serializable SettingsAttributeDictionary
		extends [mscorlib]System.Collections.Hashtable
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class System.Configuration.SettingsAttributeDictionary attributes)
		{
			ret
		}
	}
	.class public abstract SettingsBase
		extends [mscorlib]System.Object
	{
		.custom instance void [mscorlib]System.Reflection.DefaultMemberAttribute::.ctor(string) = (01 00 04 49 74 65 6D 00 00)
		.method family hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance object get_Item(string propertyName)
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_Item(string propertyName, object 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void Initialize(class System.Configuration.SettingsContext context, class System.Configuration.SettingsPropertyCollection properties, class System.Configuration.SettingsProviderCollection providers)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void Save()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance class System.Configuration.SettingsPropertyCollection get_Properties()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance class System.Configuration.SettingsProviderCollection get_Providers()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance class System.Configuration.SettingsPropertyValueCollection get_PropertyValues()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance class System.Configuration.SettingsContext get_Context()
		{
			ret
		}
		.method public static hidebysig 
			class System.Configuration.SettingsBase Synchronized(class System.Configuration.SettingsBase settingsBase)
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsSynchronized()
		{
			ret
		}
		.property instance class System.Configuration.SettingsContext Context()
		{
			.get instance class System.Configuration.SettingsContext System.Configuration.SettingsBase::get_Context()
		}
		.property instance bool IsSynchronized()
		{
			.custom instance void System.ComponentModel.BrowsableAttribute::.ctor(bool) = (01 00 00 00 00)
			.get instance bool System.Configuration.SettingsBase::get_IsSynchronized()
		}
		.property instance object Item(string)
		{
			.get instance object System.Configuration.SettingsBase::get_Item(string)
			.set instance void System.Configuration.SettingsBase::set_Item(string, object)
		}
		.property instance class System.Configuration.SettingsPropertyCollection Properties()
		{
			.get instance class System.Configuration.SettingsPropertyCollection System.Configuration.SettingsBase::get_Properties()
		}
		.property instance class System.Configuration.SettingsPropertyValueCollection PropertyValues()
		{
			.get instance class System.Configuration.SettingsPropertyValueCollection System.Configuration.SettingsBase::get_PropertyValues()
		}
		.property instance class System.Configuration.SettingsProviderCollection Providers()
		{
			.get instance class System.Configuration.SettingsProviderCollection System.Configuration.SettingsBase::get_Providers()
		}
	}
	.class public serializable SettingsContext
		extends [mscorlib]System.Collections.Hashtable
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public sealed SettingsDescriptionAttribute
		extends [mscorlib]System.Attribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = (01 00 80 00 00 00 00 00)
		.method public hidebysig specialname 
			instance void .ctor(string description)
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Description()
		{
			ret
		}
		.property instance string Description()
		{
			.get instance string System.Configuration.SettingsDescriptionAttribute::get_Description()
		}
	}
	.class public sealed SettingsGroupDescriptionAttribute
		extends [mscorlib]System.Attribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = (01 00 04 00 00 00 00 00)
		.method public hidebysig specialname 
			instance void .ctor(string description)
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Description()
		{
			ret
		}
		.property instance string Description()
		{
			.get instance string System.Configuration.SettingsGroupDescriptionAttribute::get_Description()
		}
	}
	.class public sealed SettingsGroupNameAttribute
		extends [mscorlib]System.Attribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = (01 00 04 00 00 00 00 00)
		.method public hidebysig specialname 
			instance void .ctor(string groupName)
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_GroupName()
		{
			ret
		}
		.property instance string GroupName()
		{
			.get instance string System.Configuration.SettingsGroupNameAttribute::get_GroupName()
		}
	}
	.class public sealed SettingsManageability
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype System.Configuration.SettingsManageability Roaming = int32(0x00000000)
	}
	.class public sealed SettingsManageabilityAttribute
		extends [mscorlib]System.Attribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = (01 00 84 00 00 00 00 00)
		.method public hidebysig specialname 
			instance void .ctor(valuetype System.Configuration.SettingsManageability manageability)
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype System.Configuration.SettingsManageability get_Manageability()
		{
			ret
		}
		.property instance valuetype System.Configuration.SettingsManageability Manageability()
		{
			.get instance valuetype System.Configuration.SettingsManageability System.Configuration.SettingsManageabilityAttribute::get_Manageability()
		}
	}
	.class public SettingsProperty
		extends [mscorlib]System.Object
	{
		.method public virtual hidebysig newslot specialname 
			instance string get_Name()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_Name(string 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_IsReadOnly()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_IsReadOnly(bool 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance object get_DefaultValue()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_DefaultValue(object 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance class [mscorlib]System.Type get_PropertyType()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_PropertyType(class [mscorlib]System.Type 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance valuetype System.Configuration.SettingsSerializeAs get_SerializeAs()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_SerializeAs(valuetype System.Configuration.SettingsSerializeAs 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance class System.Configuration.SettingsProvider get_Provider()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_Provider(class System.Configuration.SettingsProvider 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance class System.Configuration.SettingsAttributeDictionary get_Attributes()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_ThrowOnErrorDeserializing()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ThrowOnErrorDeserializing(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_ThrowOnErrorSerializing()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ThrowOnErrorSerializing(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string name)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string name, class [mscorlib]System.Type propertyType, class System.Configuration.SettingsProvider provider, bool isReadOnly, object defaultValue, valuetype System.Configuration.SettingsSerializeAs serializeAs, class System.Configuration.SettingsAttributeDictionary attributes, bool throwOnErrorDeserializing, bool throwOnErrorSerializing)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class System.Configuration.SettingsProperty propertyToCopy)
		{
			ret
		}
		.property instance class System.Configuration.SettingsAttributeDictionary Attributes()
		{
			.get instance class System.Configuration.SettingsAttributeDictionary System.Configuration.SettingsProperty::get_Attributes()
		}
		.property instance object DefaultValue()
		{
			.get instance object System.Configuration.SettingsProperty::get_DefaultValue()
			.set instance void System.Configuration.SettingsProperty::set_DefaultValue(object)
		}
		.property instance bool IsReadOnly()
		{
			.get instance bool System.Configuration.SettingsProperty::get_IsReadOnly()
			.set instance void System.Configuration.SettingsProperty::set_IsReadOnly(bool)
		}
		.property instance string Name()
		{
			.get instance string System.Configuration.SettingsProperty::get_Name()
			.set instance void System.Configuration.SettingsProperty::set_Name(string)
		}
		.property instance class [mscorlib]System.Type PropertyType()
		{
			.get instance class [mscorlib]System.Type System.Configuration.SettingsProperty::get_PropertyType()
			.set instance void System.Configuration.SettingsProperty::set_PropertyType(class [mscorlib]System.Type)
		}
		.property instance class System.Configuration.SettingsProvider Provider()
		{
			.get instance class System.Configuration.SettingsProvider System.Configuration.SettingsProperty::get_Provider()
			.set instance void System.Configuration.SettingsProperty::set_Provider(class System.Configuration.SettingsProvider)
		}
		.property instance valuetype System.Configuration.SettingsSerializeAs SerializeAs()
		{
			.get instance valuetype System.Configuration.SettingsSerializeAs System.Configuration.SettingsProperty::get_SerializeAs()
			.set instance void System.Configuration.SettingsProperty::set_SerializeAs(valuetype System.Configuration.SettingsSerializeAs)
		}
		.property instance bool ThrowOnErrorDeserializing()
		{
			.get instance bool System.Configuration.SettingsProperty::get_ThrowOnErrorDeserializing()
			.set instance void System.Configuration.SettingsProperty::set_ThrowOnErrorDeserializing(bool)
		}
		.property instance bool ThrowOnErrorSerializing()
		{
			.get instance bool System.Configuration.SettingsProperty::get_ThrowOnErrorSerializing()
			.set instance void System.Configuration.SettingsProperty::set_ThrowOnErrorSerializing(bool)
		}
	}
	.class public SettingsPropertyCollection
		extends [mscorlib]System.Object
		implements [mscorlib]System.ICloneable, [mscorlib]System.Collections.ICollection, [mscorlib]System.Collections.IEnumerable
	{
		.custom instance void [mscorlib]System.Reflection.DefaultMemberAttribute::.ctor(string) = (01 00 04 49 74 65 6D 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig 
			instance void Add(class System.Configuration.SettingsProperty 'property')
		{
			ret
		}
		.method public hidebysig 
			instance void Remove(string name)
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Configuration.SettingsProperty get_Item(string name)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance class [mscorlib]System.Collections.IEnumerator GetEnumerator()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object Clone()
		{
			ret
		}
		.method public hidebysig 
			instance void SetReadOnly()
		{
			ret
		}
		.method public hidebysig 
			instance void Clear()
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void OnAdd(class System.Configuration.SettingsProperty 'property')
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void OnAddComplete(class System.Configuration.SettingsProperty 'property')
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void OnClear()
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void OnClearComplete()
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void OnRemove(class System.Configuration.SettingsProperty 'property')
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void OnRemoveComplete(class System.Configuration.SettingsProperty 'property')
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance int32 get_Count()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance bool get_IsSynchronized()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance object get_SyncRoot()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void CopyTo(class [mscorlib]System.Array 'array', int32 index)
		{
			ret
		}
		.property instance int32 Count()
		{
			.get instance int32 System.Configuration.SettingsPropertyCollection::get_Count()
		}
		.property instance bool IsSynchronized()
		{
			.get instance bool System.Configuration.SettingsPropertyCollection::get_IsSynchronized()
		}
		.property instance class System.Configuration.SettingsProperty Item(string)
		{
			.get instance class System.Configuration.SettingsProperty System.Configuration.SettingsPropertyCollection::get_Item(string)
		}
		.property instance object SyncRoot()
		{
			.get instance object System.Configuration.SettingsPropertyCollection::get_SyncRoot()
		}
	}
	.class public serializable SettingsPropertyIsReadOnlyException
		extends [mscorlib]System.Exception
	{
		.method public hidebysig specialname 
			instance void .ctor(string message)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string message, class [mscorlib]System.Exception innerException)
		{
			ret
		}
		.method family hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Runtime.Serialization.SerializationInfo info, valuetype [mscorlib]System.Runtime.Serialization.StreamingContext context)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public serializable SettingsPropertyNotFoundException
		extends [mscorlib]System.Exception
	{
		.method public hidebysig specialname 
			instance void .ctor(string message)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string message, class [mscorlib]System.Exception innerException)
		{
			ret
		}
		.method family hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Runtime.Serialization.SerializationInfo info, valuetype [mscorlib]System.Runtime.Serialization.StreamingContext context)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public SettingsPropertyValue
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsDirty()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_IsDirty(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Configuration.SettingsProperty get_Property()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_UsingDefaultValue()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class System.Configuration.SettingsProperty 'property')
		{
			ret
		}
		.method public hidebysig specialname 
			instance object get_PropertyValue()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_PropertyValue(object 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance object get_SerializedValue()
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public hidebysig specialname 
			instance void set_SerializedValue(object 'value')
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public hidebysig specialname 
			instance bool get_Deserialized()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Deserialized(bool 'value')
		{
			ret
		}
		.property instance bool Deserialized()
		{
			.get instance bool System.Configuration.SettingsPropertyValue::get_Deserialized()
			.set instance void System.Configuration.SettingsPropertyValue::set_Deserialized(bool)
		}
		.property instance bool IsDirty()
		{
			.get instance bool System.Configuration.SettingsPropertyValue::get_IsDirty()
			.set instance void System.Configuration.SettingsPropertyValue::set_IsDirty(bool)
		}
		.property instance string Name()
		{
			.get instance string System.Configuration.SettingsPropertyValue::get_Name()
		}
		.property instance class System.Configuration.SettingsProperty Property()
		{
			.get instance class System.Configuration.SettingsProperty System.Configuration.SettingsPropertyValue::get_Property()
		}
		.property instance object PropertyValue()
		{
			.get instance object System.Configuration.SettingsPropertyValue::get_PropertyValue()
			.set instance void System.Configuration.SettingsPropertyValue::set_PropertyValue(object)
		}
		.property instance object SerializedValue()
		{
			.get instance object System.Configuration.SettingsPropertyValue::get_SerializedValue()
			.set instance void System.Configuration.SettingsPropertyValue::set_SerializedValue(object)
		}
		.property instance bool UsingDefaultValue()
		{
			.get instance bool System.Configuration.SettingsPropertyValue::get_UsingDefaultValue()
		}
	}
	.class public SettingsPropertyValueCollection
		extends [mscorlib]System.Object
		implements [mscorlib]System.ICloneable, [mscorlib]System.Collections.ICollection, [mscorlib]System.Collections.IEnumerable
	{
		.custom instance void [mscorlib]System.Reflection.DefaultMemberAttribute::.ctor(string) = (01 00 04 49 74 65 6D 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig 
			instance void Add(class System.Configuration.SettingsPropertyValue 'property')
		{
			ret
		}
		.method public hidebysig 
			instance void Remove(string name)
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Configuration.SettingsPropertyValue get_Item(string name)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance class [mscorlib]System.Collections.IEnumerator GetEnumerator()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object Clone()
		{
			ret
		}
		.method public hidebysig 
			instance void SetReadOnly()
		{
			ret
		}
		.method public hidebysig 
			instance void Clear()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance int32 get_Count()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance bool get_IsSynchronized()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance object get_SyncRoot()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void CopyTo(class [mscorlib]System.Array 'array', int32 index)
		{
			ret
		}
		.property instance int32 Count()
		{
			.get instance int32 System.Configuration.SettingsPropertyValueCollection::get_Count()
		}
		.property instance bool IsSynchronized()
		{
			.get instance bool System.Configuration.SettingsPropertyValueCollection::get_IsSynchronized()
		}
		.property instance class System.Configuration.SettingsPropertyValue Item(string)
		{
			.get instance class System.Configuration.SettingsPropertyValue System.Configuration.SettingsPropertyValueCollection::get_Item(string)
		}
		.property instance object SyncRoot()
		{
			.get instance object System.Configuration.SettingsPropertyValueCollection::get_SyncRoot()
		}
	}
	.class public serializable SettingsPropertyWrongTypeException
		extends [mscorlib]System.Exception
	{
		.method public hidebysig specialname 
			instance void .ctor(string message)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string message, class [mscorlib]System.Exception innerException)
		{
			ret
		}
		.method family hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Runtime.Serialization.SerializationInfo info, valuetype [mscorlib]System.Runtime.Serialization.StreamingContext context)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public abstract SettingsProvider
		extends [System.Configuration]System.Configuration.Provider.ProviderBase
	{
		.method public virtual hidebysig newslot abstract 
			instance class System.Configuration.SettingsPropertyValueCollection GetPropertyValues(class System.Configuration.SettingsContext context, class System.Configuration.SettingsPropertyCollection collection)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void SetPropertyValues(class System.Configuration.SettingsContext context, class System.Configuration.SettingsPropertyValueCollection collection)
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance string get_ApplicationName()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void set_ApplicationName(string 'value')
		{
		}
		.method family hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance string ApplicationName()
		{
			.get instance string System.Configuration.SettingsProvider::get_ApplicationName()
			.set instance void System.Configuration.SettingsProvider::set_ApplicationName(string)
		}
	}
	.class public sealed SettingsProviderAttribute
		extends [mscorlib]System.Attribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = (01 00 84 00 00 00 00 00)
		.method public hidebysig specialname 
			instance void .ctor(string providerTypeName)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Type providerType)
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_ProviderTypeName()
		{
			ret
		}
		.property instance string ProviderTypeName()
		{
			.get instance string System.Configuration.SettingsProviderAttribute::get_ProviderTypeName()
		}
	}
	.class public SettingsProviderCollection
		extends [System.Configuration]System.Configuration.Provider.ProviderCollection
	{
		.custom instance void [mscorlib]System.Reflection.DefaultMemberAttribute::.ctor(string) = (01 00 04 49 74 65 6D 00 00)
		.method public virtual hidebysig 
			instance void Add(class [System.Configuration]System.Configuration.Provider.ProviderBase provider)
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Configuration.SettingsProvider get_Item(string name)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance class System.Configuration.SettingsProvider Item(string)
		{
			.get instance class System.Configuration.SettingsProvider System.Configuration.SettingsProviderCollection::get_Item(string)
		}
	}
	.class public sealed SettingsSerializeAs
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype System.Configuration.SettingsSerializeAs Binary = int32(0x00000002)
		.field static public literal valuetype System.Configuration.SettingsSerializeAs ProviderSpecific = int32(0x00000003)
		.field static public literal valuetype System.Configuration.SettingsSerializeAs String = int32(0x00000000)
		.field static public literal valuetype System.Configuration.SettingsSerializeAs Xml = int32(0x00000001)
	}
	.class public sealed SettingsSerializeAsAttribute
		extends [mscorlib]System.Attribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = (01 00 84 00 00 00 00 00)
		.method public hidebysig specialname 
			instance void .ctor(valuetype System.Configuration.SettingsSerializeAs serializeAs)
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype System.Configuration.SettingsSerializeAs get_SerializeAs()
		{
			ret
		}
		.property instance valuetype System.Configuration.SettingsSerializeAs SerializeAs()
		{
			.get instance valuetype System.Configuration.SettingsSerializeAs System.Configuration.SettingsSerializeAsAttribute::get_SerializeAs()
		}
	}
	.class public SingleTagSectionHandler
		extends [mscorlib]System.Object
		implements System.Configuration.IConfigurationSectionHandler
	{
		.method public virtual hidebysig newslot 
			instance object Create(object parent, object context, class [System.Xml]System.Xml.XmlNode section)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public sealed SpecialSetting
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype System.Configuration.SpecialSetting ConnectionString = int32(0x00000000)
		.field static public literal valuetype System.Configuration.SpecialSetting WebServiceUrl = int32(0x00000001)
	}
	.class public sealed SpecialSettingAttribute
		extends [mscorlib]System.Attribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = (01 00 84 00 00 00 00 00)
		.method public hidebysig specialname 
			instance void .ctor(valuetype System.Configuration.SpecialSetting specialSetting)
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype System.Configuration.SpecialSetting get_SpecialSetting()
		{
			ret
		}
		.property instance valuetype System.Configuration.SpecialSetting SpecialSetting()
		{
			.get instance valuetype System.Configuration.SpecialSetting System.Configuration.SpecialSettingAttribute::get_SpecialSetting()
		}
	}
	.class public sealed UserScopedSettingAttribute
		extends System.Configuration.SettingAttribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = (01 00 80 00 00 00 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public sealed UserSettingsGroup
		extends [System.Configuration]System.Configuration.ConfigurationSectionGroup
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
}
.namespace System.Diagnostics
{
	.class public BooleanSwitch
		extends System.Diagnostics.Switch
	{
		.method public hidebysig specialname 
			instance void .ctor(string displayName, string description)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string displayName, string description, string defaultSwitchValue)
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_Enabled()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Enabled(bool 'value')
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method family virtual hidebysig 
			instance void OnValueChanged()
		{
			ret
		}
		.property instance bool Enabled()
		{
			.get instance bool System.Diagnostics.BooleanSwitch::get_Enabled()
			.set instance void System.Diagnostics.BooleanSwitch::set_Enabled(bool)
		}
	}
	.class public ConsoleTraceListener
		extends System.Diagnostics.TextWriterTraceListener
	{
		.permissionset linkcheck = (00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(bool useErrorStream)
		{
			ret
		}
	}
	.class public CorrelationManager
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance valuetype [mscorlib]System.Guid get_ActivityId()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ActivityId(valuetype [mscorlib]System.Guid 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]System.Collections.Stack get_LogicalOperationStack()
		{
			ret
		}
		.method public hidebysig 
			instance void StartLogicalOperation(object operationId)
		{
			ret
		}
		.method public hidebysig 
			instance void StartLogicalOperation()
		{
			ret
		}
		.method public hidebysig 
			instance void StopLogicalOperation()
		{
			ret
		}
		.property instance valuetype [mscorlib]System.Guid ActivityId()
		{
			.get instance valuetype [mscorlib]System.Guid System.Diagnostics.CorrelationManager::get_ActivityId()
			.set instance void System.Diagnostics.CorrelationManager::set_ActivityId(valuetype [mscorlib]System.Guid)
		}
		.property instance class [mscorlib]System.Collections.Stack LogicalOperationStack()
		{
			.get instance class [mscorlib]System.Collections.Stack System.Diagnostics.CorrelationManager::get_LogicalOperationStack()
		}
	}
	.class public DataReceivedEventArgs
		extends [mscorlib]System.EventArgs
	{
		.method public hidebysig specialname 
			instance string get_Data()
		{
			ret
		}
		.property instance string Data()
		{
			.get instance string System.Diagnostics.DataReceivedEventArgs::get_Data()
		}
	}
	.class public sealed DataReceivedEventHandler
		extends [mscorlib]System.MulticastDelegate
	{
		.method public hidebysig specialname 
			instance void .ctor(object 'object', native int 'method')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void Invoke(object sender, class System.Diagnostics.DataReceivedEventArgs e)
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance class [mscorlib]System.IAsyncResult BeginInvoke(object sender, class System.Diagnostics.DataReceivedEventArgs e, class [mscorlib]System.AsyncCallback callback, object 'object')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void EndInvoke(class [mscorlib]System.IAsyncResult result)
			runtime 
		{
		}
	}
	.class public sealed Debug
		extends [mscorlib]System.Object
	{
		.method public static hidebysig specialname 
			class System.Diagnostics.TraceListenerCollection get_Listeners()
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public static hidebysig specialname 
			bool get_AutoFlush()
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public static hidebysig specialname 
			void set_AutoFlush(bool 'value')
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public static hidebysig specialname 
			int32 get_IndentLevel()
		{
			ret
		}
		.method public static hidebysig specialname 
			void set_IndentLevel(int32 'value')
		{
			ret
		}
		.method public static hidebysig specialname 
			int32 get_IndentSize()
		{
			ret
		}
		.method public static hidebysig specialname 
			void set_IndentSize(int32 'value')
		{
			ret
		}
		.method public static hidebysig 
			void Flush()
		{
			.custom instance void [mscorlib]System.Diagnostics.ConditionalAttribute::.ctor(string) = (01 00 05 44 45 42 55 47 00 00)
			ret
		}
		.method public static hidebysig 
			void Close()
		{
			.permissionset linkcheck = (00)
			.custom instance void [mscorlib]System.Diagnostics.ConditionalAttribute::.ctor(string) = (01 00 05 44 45 42 55 47 00 00)
			ret
		}
		.method public static hidebysig 
			void Assert(bool condition)
		{
			.custom instance void [mscorlib]System.Diagnostics.ConditionalAttribute::.ctor(string) = (01 00 05 44 45 42 55 47 00 00)
			ret
		}
		.method public static hidebysig 
			void Assert(bool condition, string message)
		{
			.custom instance void [mscorlib]System.Diagnostics.ConditionalAttribute::.ctor(string) = (01 00 05 44 45 42 55 47 00 00)
			ret
		}
		.method public static hidebysig 
			void Assert(bool condition, string message, string detailMessage)
		{
			.custom instance void [mscorlib]System.Diagnostics.ConditionalAttribute::.ctor(string) = (01 00 05 44 45 42 55 47 00 00)
			ret
		}
		.method public static hidebysig 
			void Fail(string message)
		{
			.custom instance void [mscorlib]System.Diagnostics.ConditionalAttribute::.ctor(string) = (01 00 05 44 45 42 55 47 00 00)
			ret
		}
		.method public static hidebysig 
			void Fail(string message, string detailMessage)
		{
			.custom instance void [mscorlib]System.Diagnostics.ConditionalAttribute::.ctor(string) = (01 00 05 44 45 42 55 47 00 00)
			ret
		}
		.method public static hidebysig 
			void Print(string message)
		{
			.custom instance void [mscorlib]System.Diagnostics.ConditionalAttribute::.ctor(string) = (01 00 05 44 45 42 55 47 00 00)
			ret
		}
		.method public static hidebysig 
			void Print(string format, object[] args)
		{
			.custom instance void [mscorlib]System.Diagnostics.ConditionalAttribute::.ctor(string) = (01 00 05 44 45 42 55 47 00 00)
			.param [2]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = (01 00 00 00)
			ret
		}
		.method public static hidebysig 
			void Write(string message)
		{
			.custom instance void [mscorlib]System.Diagnostics.ConditionalAttribute::.ctor(string) = (01 00 05 44 45 42 55 47 00 00)
			ret
		}
		.method public static hidebysig 
			void Write(object 'value')
		{
			.custom instance void [mscorlib]System.Diagnostics.ConditionalAttribute::.ctor(string) = (01 00 05 44 45 42 55 47 00 00)
			ret
		}
		.method public static hidebysig 
			void Write(string message, string category)
		{
			.custom instance void [mscorlib]System.Diagnostics.ConditionalAttribute::.ctor(string) = (01 00 05 44 45 42 55 47 00 00)
			ret
		}
		.method public static hidebysig 
			void Write(object 'value', string category)
		{
			.custom instance void [mscorlib]System.Diagnostics.ConditionalAttribute::.ctor(string) = (01 00 05 44 45 42 55 47 00 00)
			ret
		}
		.method public static hidebysig 
			void WriteLine(string message)
		{
			.custom instance void [mscorlib]System.Diagnostics.ConditionalAttribute::.ctor(string) = (01 00 05 44 45 42 55 47 00 00)
			ret
		}
		.method public static hidebysig 
			void WriteLine(object 'value')
		{
			.custom instance void [mscorlib]System.Diagnostics.ConditionalAttribute::.ctor(string) = (01 00 05 44 45 42 55 47 00 00)
			ret
		}
		.method public static hidebysig 
			void WriteLine(string message, string category)
		{
			.custom instance void [mscorlib]System.Diagnostics.ConditionalAttribute::.ctor(string) = (01 00 05 44 45 42 55 47 00 00)
			ret
		}
		.method public static hidebysig 
			void WriteLine(object 'value', string category)
		{
			.custom instance void [mscorlib]System.Diagnostics.ConditionalAttribute::.ctor(string) = (01 00 05 44 45 42 55 47 00 00)
			ret
		}
		.method public static hidebysig 
			void WriteIf(bool condition, string message)
		{
			.custom instance void [mscorlib]System.Diagnostics.ConditionalAttribute::.ctor(string) = (01 00 05 44 45 42 55 47 00 00)
			ret
		}
		.method public static hidebysig 
			void WriteIf(bool condition, object 'value')
		{
			.custom instance void [mscorlib]System.Diagnostics.ConditionalAttribute::.ctor(string) = (01 00 05 44 45 42 55 47 00 00)
			ret
		}
		.method public static hidebysig 
			void WriteIf(bool condition, string message, string category)
		{
			.custom instance void [mscorlib]System.Diagnostics.ConditionalAttribute::.ctor(string) = (01 00 05 44 45 42 55 47 00 00)
			ret
		}
		.method public static hidebysig 
			void WriteIf(bool condition, object 'value', string category)
		{
			.custom instance void [mscorlib]System.Diagnostics.ConditionalAttribute::.ctor(string) = (01 00 05 44 45 42 55 47 00 00)
			ret
		}
		.method public static hidebysig 
			void WriteLineIf(bool condition, string message)
		{
			.custom instance void [mscorlib]System.Diagnostics.ConditionalAttribute::.ctor(string) = (01 00 05 44 45 42 55 47 00 00)
			ret
		}
		.method public static hidebysig 
			void WriteLineIf(bool condition, object 'value')
		{
			.custom instance void [mscorlib]System.Diagnostics.ConditionalAttribute::.ctor(string) = (01 00 05 44 45 42 55 47 00 00)
			ret
		}
		.method public static hidebysig 
			void WriteLineIf(bool condition, string message, string category)
		{
			.custom instance void [mscorlib]System.Diagnostics.ConditionalAttribute::.ctor(string) = (01 00 05 44 45 42 55 47 00 00)
			ret
		}
		.method public static hidebysig 
			void WriteLineIf(bool condition, object 'value', string category)
		{
			.custom instance void [mscorlib]System.Diagnostics.ConditionalAttribute::.ctor(string) = (01 00 05 44 45 42 55 47 00 00)
			ret
		}
		.method public static hidebysig 
			void Indent()
		{
			.custom instance void [mscorlib]System.Diagnostics.ConditionalAttribute::.ctor(string) = (01 00 05 44 45 42 55 47 00 00)
			ret
		}
		.method public static hidebysig 
			void Unindent()
		{
			.custom instance void [mscorlib]System.Diagnostics.ConditionalAttribute::.ctor(string) = (01 00 05 44 45 42 55 47 00 00)
			ret
		}
		.property bool AutoFlush()
		{
			.get bool System.Diagnostics.Debug::get_AutoFlush()
			.set void System.Diagnostics.Debug::set_AutoFlush(bool)
		}
		.property int32 IndentLevel()
		{
			.get int32 System.Diagnostics.Debug::get_IndentLevel()
			.set void System.Diagnostics.Debug::set_IndentLevel(int32)
		}
		.property int32 IndentSize()
		{
			.get int32 System.Diagnostics.Debug::get_IndentSize()
			.set void System.Diagnostics.Debug::set_IndentSize(int32)
		}
		.property class System.Diagnostics.TraceListenerCollection Listeners()
		{
			.get class System.Diagnostics.TraceListenerCollection System.Diagnostics.Debug::get_Listeners()
		}
	}
	.class public DefaultTraceListener
		extends System.Diagnostics.TraceListener
	{
		.permissionset linkcheck = (00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_AssertUiEnabled()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_AssertUiEnabled(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_LogFileName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_LogFileName(string 'value')
		{
			ret
		}
		.method public virtual hidebysig 
			instance void Fail(string message)
		{
			ret
		}
		.method public virtual hidebysig 
			instance void Fail(string message, string detailMessage)
		{
			ret
		}
		.method public virtual hidebysig 
			instance void Write(string message)
		{
			ret
		}
		.method public virtual hidebysig 
			instance void WriteLine(string message)
		{
			ret
		}
		.property instance bool AssertUiEnabled()
		{
			.get instance bool System.Diagnostics.DefaultTraceListener::get_AssertUiEnabled()
			.set instance void System.Diagnostics.DefaultTraceListener::set_AssertUiEnabled(bool)
		}
		.property instance string LogFileName()
		{
			.get instance string System.Diagnostics.DefaultTraceListener::get_LogFileName()
			.set instance void System.Diagnostics.DefaultTraceListener::set_LogFileName(string)
		}
	}
	.class public DelimitedListTraceListener
		extends System.Diagnostics.TextWriterTraceListener
	{
		.permissionset linkcheck = (00)
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]'System.IO.Stream' 'stream')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]'System.IO.Stream' 'stream', string name)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]'System.IO.TextWriter' writer)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]'System.IO.TextWriter' writer, string name)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string fileName)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string fileName, string name)
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Delimiter()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Delimiter(string 'value')
		{
			ret
		}
		.method famorassem virtual hidebysig 
			instance string[] GetSupportedAttributes()
		{
			ret
		}
		.method public virtual hidebysig 
			instance void TraceEvent(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, string format, object[] args)
		{
			.param [6]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = (01 00 00 00)
			ret
		}
		.method public virtual hidebysig 
			instance void TraceEvent(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, string message)
		{
			ret
		}
		.method public virtual hidebysig 
			instance void TraceData(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, object data)
		{
			ret
		}
		.method public virtual hidebysig 
			instance void TraceData(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, object[] data)
		{
			.param [5]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = (01 00 00 00)
			ret
		}
		.property instance string Delimiter()
		{
			.get instance string System.Diagnostics.DelimitedListTraceListener::get_Delimiter()
			.set instance void System.Diagnostics.DelimitedListTraceListener::set_Delimiter(string)
		}
	}
	.class public DiagnosticsConfigurationHandler
		extends [mscorlib]System.Object
		implements System.Configuration.IConfigurationSectionHandler
	{
		.custom instance void [mscorlib]System.ObsoleteAttribute::.ctor(string) = (01 00 4D 54 68 69 73 20 63 6C 61 73 73 20 68 61 73 20 62 65 65 6E 20 64 65 70 72 65 63 61 74 65 64 2E 20 20 68 74 74 70 3A 2F 2F 67 6F 2E 6D 69 63 72 6F 73 6F 66 74 2E 63 6F 6D 2F 66 77 6C 69 6E 6B 2F 3F 6C 69 6E 6B 69 64 3D 31 34 32 30 32 00 00)
		.method public virtual hidebysig newslot 
			instance object Create(object parent, object configContext, class [System.Xml]System.Xml.XmlNode section)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public EventTypeFilter
		extends System.Diagnostics.TraceFilter
	{
		.method public hidebysig specialname 
			instance void .ctor(valuetype System.Diagnostics.SourceLevels level)
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool ShouldTrace(class System.Diagnostics.TraceEventCache cache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, string formatOrMessage, object[] args, object data1, object[] data)
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype System.Diagnostics.SourceLevels get_EventType()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_EventType(valuetype System.Diagnostics.SourceLevels 'value')
		{
			ret
		}
		.property instance valuetype System.Diagnostics.SourceLevels EventType()
		{
			.get instance valuetype System.Diagnostics.SourceLevels System.Diagnostics.EventTypeFilter::get_EventType()
			.set instance void System.Diagnostics.EventTypeFilter::set_EventType(valuetype System.Diagnostics.SourceLevels)
		}
	}
	.class public MonitoringDescriptionAttribute
		extends System.ComponentModel.DescriptionAttribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = (01 00 FF 7F 00 00 00 00)
		.method public hidebysig specialname 
			instance void .ctor(string description)
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance string get_Description()
		{
			ret
		}
		.property instance string Description()
		{
			.get instance string System.Diagnostics.MonitoringDescriptionAttribute::get_Description()
		}
	}
	.class public Process
		extends System.ComponentModel.Component
	{
		.permissionset linkcheck = (00)
		.custom instance void System.ComponentModel.DefaultEventAttribute::.ctor(string) = (01 00 06 45 78 69 74 65 64 00 00)
		.method public hidebysig specialname 
			instance void add_OutputDataReceived(class System.Diagnostics.DataReceivedEventHandler 'value')
			synchronized 
		{
			ret
		}
		.method public hidebysig specialname 
			instance void remove_OutputDataReceived(class System.Diagnostics.DataReceivedEventHandler 'value')
			synchronized 
		{
			ret
		}
		.method public hidebysig specialname 
			instance void add_ErrorDataReceived(class System.Diagnostics.DataReceivedEventHandler 'value')
			synchronized 
		{
			ret
		}
		.method public hidebysig specialname 
			instance void remove_ErrorDataReceived(class System.Diagnostics.DataReceivedEventHandler 'value')
			synchronized 
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ExitCode()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_HasExited()
		{
			ret
		}
		.method public hidebysig specialname 
			instance native int get_Handle()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_Id()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_MachineName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_ProcessName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Diagnostics.ProcessStartInfo get_StartInfo()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_StartInfo(class System.Diagnostics.ProcessStartInfo 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.ComponentModel.ISynchronizeInvoke get_SynchronizingObject()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_SynchronizingObject(class System.ComponentModel.ISynchronizeInvoke 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int64 get_VirtualMemorySize64()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_EnableRaisingEvents()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_EnableRaisingEvents(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]'System.IO.StreamWriter' get_StandardInput()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]'System.IO.StreamReader' get_StandardOutput()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]'System.IO.StreamReader' get_StandardError()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int64 get_WorkingSet64()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void add_Exited(class [mscorlib]System.EventHandler 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void remove_Exited(class [mscorlib]System.EventHandler 'value')
		{
			ret
		}
		.method family virtual hidebysig 
			instance void Dispose(bool disposing)
		{
			ret
		}
		.method public hidebysig 
			instance void Close()
		{
			ret
		}
		.method public static hidebysig 
			class System.Diagnostics.Process GetCurrentProcess()
		{
			ret
		}
		.method family hidebysig 
			instance void OnExited()
		{
			ret
		}
		.method public hidebysig 
			instance void Refresh()
		{
			ret
		}
		.method public hidebysig 
			instance bool Start()
		{
			ret
		}
		.method public static hidebysig 
			class System.Diagnostics.Process Start(string fileName)
		{
			ret
		}
		.method public static hidebysig 
			class System.Diagnostics.Process Start(string fileName, string arguments)
		{
			ret
		}
		.method public static hidebysig 
			class System.Diagnostics.Process Start(class System.Diagnostics.ProcessStartInfo startInfo)
		{
			ret
		}
		.method public hidebysig 
			instance void Kill()
		{
			ret
		}
		.method public virtual hidebysig 
			instance string ToString()
		{
			ret
		}
		.method public hidebysig 
			instance bool WaitForExit(int32 milliseconds)
		{
			ret
		}
		.method public hidebysig 
			instance void WaitForExit()
		{
			ret
		}
		.method public hidebysig 
			instance void BeginOutputReadLine()
		{
			.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 00 00 00)
			ret
		}
		.method public hidebysig 
			instance void BeginErrorReadLine()
		{
			.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 00 00 00)
			ret
		}
		.method public hidebysig 
			instance void CancelOutputRead()
		{
			.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 00 00 00)
			ret
		}
		.method public hidebysig 
			instance void CancelErrorRead()
		{
			.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 00 00 00)
			ret
		}
		.event System.Diagnostics.DataReceivedEventHandler ErrorDataReceived
		{
			.custom instance void System.ComponentModel.BrowsableAttribute::.ctor(bool) = (01 00 01 00 00)
			.addon instance void System.Diagnostics.Process::add_ErrorDataReceived(class System.Diagnostics.DataReceivedEventHandler)
			.removeon instance void System.Diagnostics.Process::remove_ErrorDataReceived(class System.Diagnostics.DataReceivedEventHandler)
		}
		.event [mscorlib]System.EventHandler Exited
		{
			.custom instance void System.ComponentModel.CategoryAttribute::.ctor(string) = (01 00 08 42 65 68 61 76 69 6F 72 00 00)
			.addon instance void System.Diagnostics.Process::add_Exited(class [mscorlib]System.EventHandler)
			.removeon instance void System.Diagnostics.Process::remove_Exited(class [mscorlib]System.EventHandler)
		}
		.event System.Diagnostics.DataReceivedEventHandler OutputDataReceived
		{
			.custom instance void System.ComponentModel.BrowsableAttribute::.ctor(bool) = (01 00 01 00 00)
			.addon instance void System.Diagnostics.Process::add_OutputDataReceived(class System.Diagnostics.DataReceivedEventHandler)
			.removeon instance void System.Diagnostics.Process::remove_OutputDataReceived(class System.Diagnostics.DataReceivedEventHandler)
		}
		.property instance bool EnableRaisingEvents()
		{
			.custom instance void System.ComponentModel.BrowsableAttribute::.ctor(bool) = (01 00 00 00 00)
			.custom instance void System.ComponentModel.DefaultValueAttribute::.ctor(bool) = (01 00 00 00 00)
			.get instance bool System.Diagnostics.Process::get_EnableRaisingEvents()
			.set instance void System.Diagnostics.Process::set_EnableRaisingEvents(bool)
		}
		.property instance int32 ExitCode()
		{
			.custom instance void System.ComponentModel.BrowsableAttribute::.ctor(bool) = (01 00 00 00 00)
			.custom instance void System.ComponentModel.DesignerSerializationVisibilityAttribute::.ctor(valuetype System.ComponentModel.DesignerSerializationVisibility) = (01 00 00 00 00 00 00 00)
			.get instance int32 System.Diagnostics.Process::get_ExitCode()
		}
		.property instance native int Handle()
		{
			.custom instance void System.ComponentModel.BrowsableAttribute::.ctor(bool) = (01 00 00 00 00)
			.custom instance void System.ComponentModel.DesignerSerializationVisibilityAttribute::.ctor(valuetype System.ComponentModel.DesignerSerializationVisibility) = (01 00 00 00 00 00 00 00)
			.get instance native int System.Diagnostics.Process::get_Handle()
		}
		.property instance bool HasExited()
		{
			.custom instance void System.ComponentModel.BrowsableAttribute::.ctor(bool) = (01 00 00 00 00)
			.custom instance void System.ComponentModel.DesignerSerializationVisibilityAttribute::.ctor(valuetype System.ComponentModel.DesignerSerializationVisibility) = (01 00 00 00 00 00 00 00)
			.get instance bool System.Diagnostics.Process::get_HasExited()
		}
		.property instance int32 Id()
		{
			.custom instance void System.ComponentModel.DesignerSerializationVisibilityAttribute::.ctor(valuetype System.ComponentModel.DesignerSerializationVisibility) = (01 00 00 00 00 00 00 00)
			.get instance int32 System.Diagnostics.Process::get_Id()
		}
		.property instance string MachineName()
		{
			.custom instance void System.ComponentModel.BrowsableAttribute::.ctor(bool) = (01 00 00 00 00)
			.custom instance void System.ComponentModel.DesignerSerializationVisibilityAttribute::.ctor(valuetype System.ComponentModel.DesignerSerializationVisibility) = (01 00 00 00 00 00 00 00)
			.get instance string System.Diagnostics.Process::get_MachineName()
		}
		.property instance string ProcessName()
		{
			.custom instance void System.ComponentModel.DesignerSerializationVisibilityAttribute::.ctor(valuetype System.ComponentModel.DesignerSerializationVisibility) = (01 00 00 00 00 00 00 00)
			.get instance string System.Diagnostics.Process::get_ProcessName()
		}
		.property instance class [mscorlib]'System.IO.StreamReader' StandardError()
		{
			.custom instance void System.ComponentModel.BrowsableAttribute::.ctor(bool) = (01 00 00 00 00)
			.custom instance void System.ComponentModel.DesignerSerializationVisibilityAttribute::.ctor(valuetype System.ComponentModel.DesignerSerializationVisibility) = (01 00 00 00 00 00 00 00)
			.get instance class [mscorlib]'System.IO.StreamReader' System.Diagnostics.Process::get_StandardError()
		}
		.property instance class [mscorlib]'System.IO.StreamWriter' StandardInput()
		{
			.custom instance void System.ComponentModel.BrowsableAttribute::.ctor(bool) = (01 00 00 00 00)
			.custom instance void System.ComponentModel.DesignerSerializationVisibilityAttribute::.ctor(valuetype System.ComponentModel.DesignerSerializationVisibility) = (01 00 00 00 00 00 00 00)
			.get instance class [mscorlib]'System.IO.StreamWriter' System.Diagnostics.Process::get_StandardInput()
		}
		.property instance class [mscorlib]'System.IO.StreamReader' StandardOutput()
		{
			.custom instance void System.ComponentModel.BrowsableAttribute::.ctor(bool) = (01 00 00 00 00)
			.custom instance void System.ComponentModel.DesignerSerializationVisibilityAttribute::.ctor(valuetype System.ComponentModel.DesignerSerializationVisibility) = (01 00 00 00 00 00 00 00)
			.get instance class [mscorlib]'System.IO.StreamReader' System.Diagnostics.Process::get_StandardOutput()
		}
		.property instance class System.Diagnostics.ProcessStartInfo StartInfo()
		{
			.custom instance void System.ComponentModel.BrowsableAttribute::.ctor(bool) = (01 00 00 00 00)
			.custom instance void System.ComponentModel.DesignerSerializationVisibilityAttribute::.ctor(valuetype System.ComponentModel.DesignerSerializationVisibility) = (01 00 02 00 00 00 00 00)
			.get instance class System.Diagnostics.ProcessStartInfo System.Diagnostics.Process::get_StartInfo()
			.set instance void System.Diagnostics.Process::set_StartInfo(class System.Diagnostics.ProcessStartInfo)
		}
		.property instance class System.ComponentModel.ISynchronizeInvoke SynchronizingObject()
		{
			.custom instance void System.ComponentModel.BrowsableAttribute::.ctor(bool) = (01 00 00 00 00)
			.custom instance void System.ComponentModel.DefaultValueAttribute::.ctor(string) = (01 00 FF 00 00)
			.get instance class System.ComponentModel.ISynchronizeInvoke System.Diagnostics.Process::get_SynchronizingObject()
			.set instance void System.Diagnostics.Process::set_SynchronizingObject(class System.ComponentModel.ISynchronizeInvoke)
		}
		.property instance int64 VirtualMemorySize64()
		{
			.custom instance void System.ComponentModel.DesignerSerializationVisibilityAttribute::.ctor(valuetype System.ComponentModel.DesignerSerializationVisibility) = (01 00 00 00 00 00 00 00)
			.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 00 00 00)
			.get instance int64 System.Diagnostics.Process::get_VirtualMemorySize64()
		}
		.property instance int64 WorkingSet64()
		{
			.custom instance void System.ComponentModel.DesignerSerializationVisibilityAttribute::.ctor(valuetype System.ComponentModel.DesignerSerializationVisibility) = (01 00 00 00 00 00 00 00)
			.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 00 00 00)
			.get instance int64 System.Diagnostics.Process::get_WorkingSet64()
		}
	}
	.class public sealed ProcessPriorityClass
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype System.Diagnostics.ProcessPriorityClass AboveNormal = int32(0x00008000)
		.field static public literal valuetype System.Diagnostics.ProcessPriorityClass BelowNormal = int32(0x00004000)
		.field static public literal valuetype System.Diagnostics.ProcessPriorityClass High = int32(0x00000080)
		.field static public literal valuetype System.Diagnostics.ProcessPriorityClass Idle = int32(0x00000040)
		.field static public literal valuetype System.Diagnostics.ProcessPriorityClass Normal = int32(0x00000020)
		.field static public literal valuetype System.Diagnostics.ProcessPriorityClass RealTime = int32(0x00000100)
	}
	.class public sealed ProcessStartInfo
		extends [mscorlib]System.Object
	{
		.permissionset linkcheck = (00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string fileName)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string fileName, string arguments)
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Verb()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Verb(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Arguments()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Arguments(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_CreateNoWindow()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_CreateNoWindow(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Collections.Specialized.StringDictionary get_EnvironmentVariables()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_RedirectStandardInput()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_RedirectStandardInput(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_RedirectStandardOutput()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_RedirectStandardOutput(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_RedirectStandardError()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_RedirectStandardError(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]System.Text.Encoding get_StandardErrorEncoding()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_StandardErrorEncoding(class [mscorlib]System.Text.Encoding 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]System.Text.Encoding get_StandardOutputEncoding()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_StandardOutputEncoding(class [mscorlib]System.Text.Encoding 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_UseShellExecute()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_UseShellExecute(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_FileName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_FileName(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_WorkingDirectory()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_WorkingDirectory(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_ErrorDialog()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ErrorDialog(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance native int get_ErrorDialogParentHandle()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ErrorDialogParentHandle(native int 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype System.Diagnostics.ProcessWindowStyle get_WindowStyle()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_WindowStyle(valuetype System.Diagnostics.ProcessWindowStyle 'value')
		{
			ret
		}
		.property instance string Arguments()
		{
			.custom instance void System.ComponentModel.DefaultValueAttribute::.ctor(string) = (01 00 00 00 00)
			.custom instance void System.ComponentModel.RecommendedAsConfigurableAttribute::.ctor(bool) = (01 00 01 00 00)
			.get instance string System.Diagnostics.ProcessStartInfo::get_Arguments()
			.set instance void System.Diagnostics.ProcessStartInfo::set_Arguments(string)
		}
		.property instance bool CreateNoWindow()
		{
			.custom instance void System.ComponentModel.DefaultValueAttribute::.ctor(bool) = (01 00 00 00 00)
			.get instance bool System.Diagnostics.ProcessStartInfo::get_CreateNoWindow()
			.set instance void System.Diagnostics.ProcessStartInfo::set_CreateNoWindow(bool)
		}
		.property instance class System.Collections.Specialized.StringDictionary EnvironmentVariables()
		{
			.custom instance void System.ComponentModel.DefaultValueAttribute::.ctor(string) = (01 00 FF 00 00)
			.custom instance void System.ComponentModel.DesignerSerializationVisibilityAttribute::.ctor(valuetype System.ComponentModel.DesignerSerializationVisibility) = (01 00 02 00 00 00 00 00)
			.get instance class System.Collections.Specialized.StringDictionary System.Diagnostics.ProcessStartInfo::get_EnvironmentVariables()
		}
		.property instance bool ErrorDialog()
		{
			.custom instance void System.ComponentModel.DefaultValueAttribute::.ctor(bool) = (01 00 00 00 00)
			.get instance bool System.Diagnostics.ProcessStartInfo::get_ErrorDialog()
			.set instance void System.Diagnostics.ProcessStartInfo::set_ErrorDialog(bool)
		}
		.property instance native int ErrorDialogParentHandle()
		{
			.custom instance void System.ComponentModel.BrowsableAttribute::.ctor(bool) = (01 00 00 00 00)
			.custom instance void System.ComponentModel.DesignerSerializationVisibilityAttribute::.ctor(valuetype System.ComponentModel.DesignerSerializationVisibility) = (01 00 00 00 00 00 00 00)
			.get instance native int System.Diagnostics.ProcessStartInfo::get_ErrorDialogParentHandle()
			.set instance void System.Diagnostics.ProcessStartInfo::set_ErrorDialogParentHandle(native int)
		}
		.property instance string FileName()
		{
			.custom instance void System.ComponentModel.DefaultValueAttribute::.ctor(string) = (01 00 00 00 00)
			.custom instance void System.ComponentModel.RecommendedAsConfigurableAttribute::.ctor(bool) = (01 00 01 00 00)
			.get instance string System.Diagnostics.ProcessStartInfo::get_FileName()
			.set instance void System.Diagnostics.ProcessStartInfo::set_FileName(string)
		}
		.property instance bool RedirectStandardError()
		{
			.custom instance void System.ComponentModel.DefaultValueAttribute::.ctor(bool) = (01 00 00 00 00)
			.get instance bool System.Diagnostics.ProcessStartInfo::get_RedirectStandardError()
			.set instance void System.Diagnostics.ProcessStartInfo::set_RedirectStandardError(bool)
		}
		.property instance bool RedirectStandardInput()
		{
			.custom instance void System.ComponentModel.DefaultValueAttribute::.ctor(bool) = (01 00 00 00 00)
			.get instance bool System.Diagnostics.ProcessStartInfo::get_RedirectStandardInput()
			.set instance void System.Diagnostics.ProcessStartInfo::set_RedirectStandardInput(bool)
		}
		.property instance bool RedirectStandardOutput()
		{
			.custom instance void System.ComponentModel.DefaultValueAttribute::.ctor(bool) = (01 00 00 00 00)
			.get instance bool System.Diagnostics.ProcessStartInfo::get_RedirectStandardOutput()
			.set instance void System.Diagnostics.ProcessStartInfo::set_RedirectStandardOutput(bool)
		}
		.property instance class [mscorlib]System.Text.Encoding StandardErrorEncoding()
		{
			.get instance class [mscorlib]System.Text.Encoding System.Diagnostics.ProcessStartInfo::get_StandardErrorEncoding()
			.set instance void System.Diagnostics.ProcessStartInfo::set_StandardErrorEncoding(class [mscorlib]System.Text.Encoding)
		}
		.property instance class [mscorlib]System.Text.Encoding StandardOutputEncoding()
		{
			.get instance class [mscorlib]System.Text.Encoding System.Diagnostics.ProcessStartInfo::get_StandardOutputEncoding()
			.set instance void System.Diagnostics.ProcessStartInfo::set_StandardOutputEncoding(class [mscorlib]System.Text.Encoding)
		}
		.property instance bool UseShellExecute()
		{
			.custom instance void System.ComponentModel.DefaultValueAttribute::.ctor(bool) = (01 00 01 00 00)
			.get instance bool System.Diagnostics.ProcessStartInfo::get_UseShellExecute()
			.set instance void System.Diagnostics.ProcessStartInfo::set_UseShellExecute(bool)
		}
		.property instance string Verb()
		{
			.custom instance void System.ComponentModel.DefaultValueAttribute::.ctor(string) = (01 00 00 00 00)
			.get instance string System.Diagnostics.ProcessStartInfo::get_Verb()
			.set instance void System.Diagnostics.ProcessStartInfo::set_Verb(string)
		}
		.property instance valuetype System.Diagnostics.ProcessWindowStyle WindowStyle()
		{
			.custom instance void System.ComponentModel.DefaultValueAttribute::.ctor(object) = (01 00 55 25 53 79 73 74 65 6D 2E 44 69 61 67 6E 6F 73 74 69 63 73 2E 50 72 6F 63 65 73 73 57 69 6E 64 6F 77 53 74 79 6C 65 00 00 00 00 00 00)
			.get instance valuetype System.Diagnostics.ProcessWindowStyle System.Diagnostics.ProcessStartInfo::get_WindowStyle()
			.set instance void System.Diagnostics.ProcessStartInfo::set_WindowStyle(valuetype System.Diagnostics.ProcessWindowStyle)
		}
		.property instance string WorkingDirectory()
		{
			.custom instance void System.ComponentModel.DefaultValueAttribute::.ctor(string) = (01 00 00 00 00)
			.custom instance void System.ComponentModel.RecommendedAsConfigurableAttribute::.ctor(bool) = (01 00 01 00 00)
			.get instance string System.Diagnostics.ProcessStartInfo::get_WorkingDirectory()
			.set instance void System.Diagnostics.ProcessStartInfo::set_WorkingDirectory(string)
		}
	}
	.class public sealed ProcessWindowStyle
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype System.Diagnostics.ProcessWindowStyle Hidden = int32(0x00000001)
		.field static public literal valuetype System.Diagnostics.ProcessWindowStyle Maximized = int32(0x00000003)
		.field static public literal valuetype System.Diagnostics.ProcessWindowStyle Minimized = int32(0x00000002)
		.field static public literal valuetype System.Diagnostics.ProcessWindowStyle Normal = int32(0x00000000)
	}
	.class public SourceFilter
		extends System.Diagnostics.TraceFilter
	{
		.method public hidebysig specialname 
			instance void .ctor(string source)
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool ShouldTrace(class System.Diagnostics.TraceEventCache cache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, string formatOrMessage, object[] args, object data1, object[] data)
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Source()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Source(string 'value')
		{
			ret
		}
		.property instance string Source()
		{
			.get instance string System.Diagnostics.SourceFilter::get_Source()
			.set instance void System.Diagnostics.SourceFilter::set_Source(string)
		}
	}
	.class public sealed SourceLevels
		extends [mscorlib]System.Enum
	{
		.custom instance void [mscorlib]System.FlagsAttribute::.ctor() = (01 00 00 00)
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype System.Diagnostics.SourceLevels ActivityTracing = int32(0x0000FF00)
			.custom instance void System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype System.ComponentModel.EditorBrowsableState) = (01 00 02 00 00 00 00 00)
		.field static public literal valuetype System.Diagnostics.SourceLevels All = int32(0xFFFFFFFF)
		.field static public literal valuetype System.Diagnostics.SourceLevels Critical = int32(0x00000001)
		.field static public literal valuetype System.Diagnostics.SourceLevels Error = int32(0x00000003)
		.field static public literal valuetype System.Diagnostics.SourceLevels Information = int32(0x0000000F)
		.field static public literal valuetype System.Diagnostics.SourceLevels Off = int32(0x00000000)
		.field static public literal valuetype System.Diagnostics.SourceLevels Verbose = int32(0x0000001F)
		.field static public literal valuetype System.Diagnostics.SourceLevels Warning = int32(0x00000007)
	}
	.class public SourceSwitch
		extends System.Diagnostics.Switch
	{
		.method public hidebysig specialname 
			instance void .ctor(string name)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string displayName, string defaultSwitchValue)
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype System.Diagnostics.SourceLevels get_Level()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Level(valuetype System.Diagnostics.SourceLevels 'value')
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public hidebysig 
			instance bool ShouldTrace(valuetype System.Diagnostics.TraceEventType eventType)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnValueChanged()
		{
			ret
		}
		.property instance valuetype System.Diagnostics.SourceLevels Level()
		{
			.get instance valuetype System.Diagnostics.SourceLevels System.Diagnostics.SourceSwitch::get_Level()
			.set instance void System.Diagnostics.SourceSwitch::set_Level(valuetype System.Diagnostics.SourceLevels)
		}
	}
	.class public Stopwatch
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig 
			instance void Start()
		{
			ret
		}
		.method public static hidebysig 
			class System.Diagnostics.Stopwatch StartNew()
		{
			ret
		}
		.method public hidebysig 
			instance void Stop()
		{
			ret
		}
		.method public hidebysig 
			instance void Reset()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsRunning()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [mscorlib]System.TimeSpan get_Elapsed()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int64 get_ElapsedMilliseconds()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int64 get_ElapsedTicks()
		{
			ret
		}
		.method public static hidebysig 
			int64 GetTimestamp()
		{
			ret
		}
		.field static public initonly int64 Frequency
		.field static public initonly bool IsHighResolution
		.property instance valuetype [mscorlib]System.TimeSpan Elapsed()
		{
			.get instance valuetype [mscorlib]System.TimeSpan System.Diagnostics.Stopwatch::get_Elapsed()
		}
		.property instance int64 ElapsedMilliseconds()
		{
			.get instance int64 System.Diagnostics.Stopwatch::get_ElapsedMilliseconds()
		}
		.property instance int64 ElapsedTicks()
		{
			.get instance int64 System.Diagnostics.Stopwatch::get_ElapsedTicks()
		}
		.property instance bool IsRunning()
		{
			.get instance bool System.Diagnostics.Stopwatch::get_IsRunning()
		}
	}
	.class public abstract Switch
		extends [mscorlib]System.Object
	{
		.method family hidebysig specialname 
			instance void .ctor(string displayName, string description)
		{
			ret
		}
		.method family hidebysig specialname 
			instance void .ctor(string displayName, string description, string defaultSwitchValue)
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Collections.Specialized.StringDictionary get_Attributes()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_DisplayName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Description()
		{
			ret
		}
		.method family hidebysig specialname 
			instance int32 get_SwitchSetting()
		{
			ret
		}
		.method family hidebysig specialname 
			instance void set_SwitchSetting(int32 'value')
		{
			ret
		}
		.method family hidebysig specialname 
			instance string get_Value()
		{
			ret
		}
		.method family hidebysig specialname 
			instance void set_Value(string 'value')
		{
			ret
		}
		.method famorassem virtual hidebysig newslot 
			instance string[] GetSupportedAttributes()
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void OnSwitchSettingChanged()
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void OnValueChanged()
		{
			ret
		}
		.property instance class System.Collections.Specialized.StringDictionary Attributes()
		{
			.get instance class System.Collections.Specialized.StringDictionary System.Diagnostics.Switch::get_Attributes()
		}
		.property instance string Description()
		{
			.get instance string System.Diagnostics.Switch::get_Description()
		}
		.property instance string DisplayName()
		{
			.get instance string System.Diagnostics.Switch::get_DisplayName()
		}
		.property instance int32 SwitchSetting()
		{
			.get instance int32 System.Diagnostics.Switch::get_SwitchSetting()
			.set instance void System.Diagnostics.Switch::set_SwitchSetting(int32)
		}
		.property instance string Value()
		{
			.get instance string System.Diagnostics.Switch::get_Value()
			.set instance void System.Diagnostics.Switch::set_Value(string)
		}
	}
	.class public sealed SwitchAttribute
		extends [mscorlib]System.Attribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = (01 00 E5 02 00 00 00 00)
		.method public hidebysig specialname 
			instance void .ctor(string switchName, class [mscorlib]System.Type switchType)
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_SwitchName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_SwitchName(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]System.Type get_SwitchType()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_SwitchType(class [mscorlib]System.Type 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_SwitchDescription()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_SwitchDescription(string 'value')
		{
			ret
		}
		.method public static hidebysig 
			class System.Diagnostics.SwitchAttribute[] GetAll(class [mscorlib]System.Reflection.Assembly 'assembly')
		{
			ret
		}
		.property instance string SwitchDescription()
		{
			.get instance string System.Diagnostics.SwitchAttribute::get_SwitchDescription()
			.set instance void System.Diagnostics.SwitchAttribute::set_SwitchDescription(string)
		}
		.property instance string SwitchName()
		{
			.get instance string System.Diagnostics.SwitchAttribute::get_SwitchName()
			.set instance void System.Diagnostics.SwitchAttribute::set_SwitchName(string)
		}
		.property instance class [mscorlib]System.Type SwitchType()
		{
			.get instance class [mscorlib]System.Type System.Diagnostics.SwitchAttribute::get_SwitchType()
			.set instance void System.Diagnostics.SwitchAttribute::set_SwitchType(class [mscorlib]System.Type)
		}
	}
	.class public sealed SwitchLevelAttribute
		extends [mscorlib]System.Attribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = (01 00 04 00 00 00 00 00)
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Type switchLevelType)
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]System.Type get_SwitchLevelType()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_SwitchLevelType(class [mscorlib]System.Type 'value')
		{
			ret
		}
		.property instance class [mscorlib]System.Type SwitchLevelType()
		{
			.get instance class [mscorlib]System.Type System.Diagnostics.SwitchLevelAttribute::get_SwitchLevelType()
			.set instance void System.Diagnostics.SwitchLevelAttribute::set_SwitchLevelType(class [mscorlib]System.Type)
		}
	}
	.class public TextWriterTraceListener
		extends System.Diagnostics.TraceListener
	{
		.permissionset linkcheck = (00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]'System.IO.Stream' 'stream')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]'System.IO.Stream' 'stream', string name)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]'System.IO.TextWriter' writer)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]'System.IO.TextWriter' writer, string name)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string fileName)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string fileName, string name)
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]'System.IO.TextWriter' get_Writer()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Writer(class [mscorlib]'System.IO.TextWriter' 'value')
		{
			ret
		}
		.method public virtual hidebysig 
			instance void Close()
		{
			ret
		}
		.method family virtual hidebysig 
			instance void Dispose(bool disposing)
		{
			ret
		}
		.method public virtual hidebysig 
			instance void Flush()
		{
			ret
		}
		.method public virtual hidebysig 
			instance void Write(string message)
		{
			ret
		}
		.method public virtual hidebysig 
			instance void WriteLine(string message)
		{
			ret
		}
		.property instance class [mscorlib]'System.IO.TextWriter' Writer()
		{
			.get instance class [mscorlib]'System.IO.TextWriter' System.Diagnostics.TextWriterTraceListener::get_Writer()
			.set instance void System.Diagnostics.TextWriterTraceListener::set_Writer(class [mscorlib]'System.IO.TextWriter')
		}
	}
	.class public sealed Trace
		extends [mscorlib]System.Object
	{
		.method public static hidebysig specialname 
			class System.Diagnostics.TraceListenerCollection get_Listeners()
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public static hidebysig specialname 
			bool get_AutoFlush()
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public static hidebysig specialname 
			void set_AutoFlush(bool 'value')
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public static hidebysig specialname 
			bool get_UseGlobalLock()
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public static hidebysig specialname 
			void set_UseGlobalLock(bool 'value')
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public static hidebysig specialname 
			class System.Diagnostics.CorrelationManager get_CorrelationManager()
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public static hidebysig specialname 
			int32 get_IndentLevel()
		{
			ret
		}
		.method public static hidebysig specialname 
			void set_IndentLevel(int32 'value')
		{
			ret
		}
		.method public static hidebysig specialname 
			int32 get_IndentSize()
		{
			ret
		}
		.method public static hidebysig specialname 
			void set_IndentSize(int32 'value')
		{
			ret
		}
		.method public static hidebysig 
			void Flush()
		{
			.custom instance void [mscorlib]System.Diagnostics.ConditionalAttribute::.ctor(string) = (01 00 05 54 52 41 43 45 00 00)
			ret
		}
		.method public static hidebysig 
			void Close()
		{
			.custom instance void [mscorlib]System.Diagnostics.ConditionalAttribute::.ctor(string) = (01 00 05 54 52 41 43 45 00 00)
			ret
		}
		.method public static hidebysig 
			void Assert(bool condition)
		{
			.custom instance void [mscorlib]System.Diagnostics.ConditionalAttribute::.ctor(string) = (01 00 05 54 52 41 43 45 00 00)
			ret
		}
		.method public static hidebysig 
			void Assert(bool condition, string message)
		{
			.custom instance void [mscorlib]System.Diagnostics.ConditionalAttribute::.ctor(string) = (01 00 05 54 52 41 43 45 00 00)
			ret
		}
		.method public static hidebysig 
			void Assert(bool condition, string message, string detailMessage)
		{
			.custom instance void [mscorlib]System.Diagnostics.ConditionalAttribute::.ctor(string) = (01 00 05 54 52 41 43 45 00 00)
			ret
		}
		.method public static hidebysig 
			void Fail(string message)
		{
			.custom instance void [mscorlib]System.Diagnostics.ConditionalAttribute::.ctor(string) = (01 00 05 54 52 41 43 45 00 00)
			ret
		}
		.method public static hidebysig 
			void Fail(string message, string detailMessage)
		{
			.custom instance void [mscorlib]System.Diagnostics.ConditionalAttribute::.ctor(string) = (01 00 05 54 52 41 43 45 00 00)
			ret
		}
		.method public static hidebysig 
			void Refresh()
		{
			ret
		}
		.method public static hidebysig 
			void TraceInformation(string message)
		{
			.custom instance void [mscorlib]System.Diagnostics.ConditionalAttribute::.ctor(string) = (01 00 05 54 52 41 43 45 00 00)
			ret
		}
		.method public static hidebysig 
			void TraceInformation(string format, object[] args)
		{
			.custom instance void [mscorlib]System.Diagnostics.ConditionalAttribute::.ctor(string) = (01 00 05 54 52 41 43 45 00 00)
			.param [2]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = (01 00 00 00)
			ret
		}
		.method public static hidebysig 
			void TraceWarning(string message)
		{
			.custom instance void [mscorlib]System.Diagnostics.ConditionalAttribute::.ctor(string) = (01 00 05 54 52 41 43 45 00 00)
			ret
		}
		.method public static hidebysig 
			void TraceWarning(string format, object[] args)
		{
			.custom instance void [mscorlib]System.Diagnostics.ConditionalAttribute::.ctor(string) = (01 00 05 54 52 41 43 45 00 00)
			.param [2]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = (01 00 00 00)
			ret
		}
		.method public static hidebysig 
			void TraceError(string message)
		{
			.custom instance void [mscorlib]System.Diagnostics.ConditionalAttribute::.ctor(string) = (01 00 05 54 52 41 43 45 00 00)
			ret
		}
		.method public static hidebysig 
			void TraceError(string format, object[] args)
		{
			.custom instance void [mscorlib]System.Diagnostics.ConditionalAttribute::.ctor(string) = (01 00 05 54 52 41 43 45 00 00)
			.param [2]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = (01 00 00 00)
			ret
		}
		.method public static hidebysig 
			void Write(string message)
		{
			.custom instance void [mscorlib]System.Diagnostics.ConditionalAttribute::.ctor(string) = (01 00 05 54 52 41 43 45 00 00)
			ret
		}
		.method public static hidebysig 
			void Write(object 'value')
		{
			.custom instance void [mscorlib]System.Diagnostics.ConditionalAttribute::.ctor(string) = (01 00 05 54 52 41 43 45 00 00)
			ret
		}
		.method public static hidebysig 
			void Write(string message, string category)
		{
			.custom instance void [mscorlib]System.Diagnostics.ConditionalAttribute::.ctor(string) = (01 00 05 54 52 41 43 45 00 00)
			ret
		}
		.method public static hidebysig 
			void Write(object 'value', string category)
		{
			.custom instance void [mscorlib]System.Diagnostics.ConditionalAttribute::.ctor(string) = (01 00 05 54 52 41 43 45 00 00)
			ret
		}
		.method public static hidebysig 
			void WriteLine(string message)
		{
			.custom instance void [mscorlib]System.Diagnostics.ConditionalAttribute::.ctor(string) = (01 00 05 54 52 41 43 45 00 00)
			ret
		}
		.method public static hidebysig 
			void WriteLine(object 'value')
		{
			.custom instance void [mscorlib]System.Diagnostics.ConditionalAttribute::.ctor(string) = (01 00 05 54 52 41 43 45 00 00)
			ret
		}
		.method public static hidebysig 
			void WriteLine(string message, string category)
		{
			.custom instance void [mscorlib]System.Diagnostics.ConditionalAttribute::.ctor(string) = (01 00 05 54 52 41 43 45 00 00)
			ret
		}
		.method public static hidebysig 
			void WriteLine(object 'value', string category)
		{
			.custom instance void [mscorlib]System.Diagnostics.ConditionalAttribute::.ctor(string) = (01 00 05 54 52 41 43 45 00 00)
			ret
		}
		.method public static hidebysig 
			void WriteIf(bool condition, string message)
		{
			.custom instance void [mscorlib]System.Diagnostics.ConditionalAttribute::.ctor(string) = (01 00 05 54 52 41 43 45 00 00)
			ret
		}
		.method public static hidebysig 
			void WriteIf(bool condition, object 'value')
		{
			.custom instance void [mscorlib]System.Diagnostics.ConditionalAttribute::.ctor(string) = (01 00 05 54 52 41 43 45 00 00)
			ret
		}
		.method public static hidebysig 
			void WriteIf(bool condition, string message, string category)
		{
			.custom instance void [mscorlib]System.Diagnostics.ConditionalAttribute::.ctor(string) = (01 00 05 54 52 41 43 45 00 00)
			ret
		}
		.method public static hidebysig 
			void WriteIf(bool condition, object 'value', string category)
		{
			.custom instance void [mscorlib]System.Diagnostics.ConditionalAttribute::.ctor(string) = (01 00 05 54 52 41 43 45 00 00)
			ret
		}
		.method public static hidebysig 
			void WriteLineIf(bool condition, string message)
		{
			.custom instance void [mscorlib]System.Diagnostics.ConditionalAttribute::.ctor(string) = (01 00 05 54 52 41 43 45 00 00)
			ret
		}
		.method public static hidebysig 
			void WriteLineIf(bool condition, object 'value')
		{
			.custom instance void [mscorlib]System.Diagnostics.ConditionalAttribute::.ctor(string) = (01 00 05 54 52 41 43 45 00 00)
			ret
		}
		.method public static hidebysig 
			void WriteLineIf(bool condition, string message, string category)
		{
			.custom instance void [mscorlib]System.Diagnostics.ConditionalAttribute::.ctor(string) = (01 00 05 54 52 41 43 45 00 00)
			ret
		}
		.method public static hidebysig 
			void WriteLineIf(bool condition, object 'value', string category)
		{
			.custom instance void [mscorlib]System.Diagnostics.ConditionalAttribute::.ctor(string) = (01 00 05 54 52 41 43 45 00 00)
			ret
		}
		.method public static hidebysig 
			void Indent()
		{
			.custom instance void [mscorlib]System.Diagnostics.ConditionalAttribute::.ctor(string) = (01 00 05 54 52 41 43 45 00 00)
			ret
		}
		.method public static hidebysig 
			void Unindent()
		{
			.custom instance void [mscorlib]System.Diagnostics.ConditionalAttribute::.ctor(string) = (01 00 05 54 52 41 43 45 00 00)
			ret
		}
		.property bool AutoFlush()
		{
			.get bool System.Diagnostics.Trace::get_AutoFlush()
			.set void System.Diagnostics.Trace::set_AutoFlush(bool)
		}
		.property class System.Diagnostics.CorrelationManager CorrelationManager()
		{
			.get class System.Diagnostics.CorrelationManager System.Diagnostics.Trace::get_CorrelationManager()
		}
		.property int32 IndentLevel()
		{
			.get int32 System.Diagnostics.Trace::get_IndentLevel()
			.set void System.Diagnostics.Trace::set_IndentLevel(int32)
		}
		.property int32 IndentSize()
		{
			.get int32 System.Diagnostics.Trace::get_IndentSize()
			.set void System.Diagnostics.Trace::set_IndentSize(int32)
		}
		.property class System.Diagnostics.TraceListenerCollection Listeners()
		{
			.get class System.Diagnostics.TraceListenerCollection System.Diagnostics.Trace::get_Listeners()
		}
		.property bool UseGlobalLock()
		{
			.get bool System.Diagnostics.Trace::get_UseGlobalLock()
			.set void System.Diagnostics.Trace::set_UseGlobalLock(bool)
		}
	}
	.class public TraceEventCache
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance string get_Callstack()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]System.Collections.Stack get_LogicalOperationStack()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [mscorlib]System.DateTime get_DateTime()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ProcessId()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_ThreadId()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int64 get_Timestamp()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance string Callstack()
		{
			.get instance string System.Diagnostics.TraceEventCache::get_Callstack()
		}
		.property instance valuetype [mscorlib]System.DateTime DateTime()
		{
			.get instance valuetype [mscorlib]System.DateTime System.Diagnostics.TraceEventCache::get_DateTime()
		}
		.property instance class [mscorlib]System.Collections.Stack LogicalOperationStack()
		{
			.get instance class [mscorlib]System.Collections.Stack System.Diagnostics.TraceEventCache::get_LogicalOperationStack()
		}
		.property instance int32 ProcessId()
		{
			.get instance int32 System.Diagnostics.TraceEventCache::get_ProcessId()
		}
		.property instance string ThreadId()
		{
			.get instance string System.Diagnostics.TraceEventCache::get_ThreadId()
		}
		.property instance int64 Timestamp()
		{
			.get instance int64 System.Diagnostics.TraceEventCache::get_Timestamp()
		}
	}
	.class public sealed TraceEventType
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype System.Diagnostics.TraceEventType Critical = int32(0x00000001)
		.field static public literal valuetype System.Diagnostics.TraceEventType Error = int32(0x00000002)
		.field static public literal valuetype System.Diagnostics.TraceEventType Information = int32(0x00000008)
		.field static public literal valuetype System.Diagnostics.TraceEventType Resume = int32(0x00000800)
			.custom instance void System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype System.ComponentModel.EditorBrowsableState) = (01 00 02 00 00 00 00 00)
		.field static public literal valuetype System.Diagnostics.TraceEventType Start = int32(0x00000100)
			.custom instance void System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype System.ComponentModel.EditorBrowsableState) = (01 00 02 00 00 00 00 00)
		.field static public literal valuetype System.Diagnostics.TraceEventType Stop = int32(0x00000200)
			.custom instance void System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype System.ComponentModel.EditorBrowsableState) = (01 00 02 00 00 00 00 00)
		.field static public literal valuetype System.Diagnostics.TraceEventType Suspend = int32(0x00000400)
			.custom instance void System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype System.ComponentModel.EditorBrowsableState) = (01 00 02 00 00 00 00 00)
		.field static public literal valuetype System.Diagnostics.TraceEventType Transfer = int32(0x00001000)
			.custom instance void System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype System.ComponentModel.EditorBrowsableState) = (01 00 02 00 00 00 00 00)
		.field static public literal valuetype System.Diagnostics.TraceEventType Verbose = int32(0x00000010)
		.field static public literal valuetype System.Diagnostics.TraceEventType Warning = int32(0x00000004)
	}
	.class public abstract TraceFilter
		extends [mscorlib]System.Object
	{
		.method public virtual hidebysig newslot abstract 
			instance bool ShouldTrace(class System.Diagnostics.TraceEventCache cache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, string formatOrMessage, object[] args, object data1, object[] data)
		{
		}
		.method family hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public sealed TraceLevel
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype System.Diagnostics.TraceLevel Error = int32(0x00000001)
		.field static public literal valuetype System.Diagnostics.TraceLevel Info = int32(0x00000003)
		.field static public literal valuetype System.Diagnostics.TraceLevel Off = int32(0x00000000)
		.field static public literal valuetype System.Diagnostics.TraceLevel Verbose = int32(0x00000004)
		.field static public literal valuetype System.Diagnostics.TraceLevel Warning = int32(0x00000002)
	}
	.class public abstract TraceListener
		extends [mscorlib]System.MarshalByRefObject
		implements [mscorlib]System.IDisposable
	{
		.permissionset linkcheck = (00)
		.method family hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method family hidebysig specialname 
			instance void .ctor(string name)
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Collections.Specialized.StringDictionary get_Attributes()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance string get_Name()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_Name(string 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_IsThreadSafe()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void Dispose()
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void Dispose(bool disposing)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void Close()
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void Flush()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_IndentLevel()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_IndentLevel(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_IndentSize()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_IndentSize(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Diagnostics.TraceFilter get_Filter()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Filter(class System.Diagnostics.TraceFilter 'value')
		{
			ret
		}
		.method family hidebysig specialname 
			instance bool get_NeedIndent()
		{
			ret
		}
		.method family hidebysig specialname 
			instance void set_NeedIndent(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype System.Diagnostics.TraceOptions get_TraceOutputOptions()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_TraceOutputOptions(valuetype System.Diagnostics.TraceOptions 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void Fail(string message)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void Fail(string message, string detailMessage)
		{
			ret
		}
		.method famorassem virtual hidebysig newslot 
			instance string[] GetSupportedAttributes()
		{
			ret
		}
		.method public virtual hidebysig newslot abstract 
			instance void Write(string message)
		{
		}
		.method public virtual hidebysig newslot 
			instance void Write(object o)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void Write(string message, string category)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void Write(object o, string category)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void WriteIndent()
		{
			ret
		}
		.method public virtual hidebysig newslot abstract 
			instance void WriteLine(string message)
		{
		}
		.method public virtual hidebysig newslot 
			instance void WriteLine(object o)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void WriteLine(string message, string category)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void WriteLine(object o, string category)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void TraceData(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, object data)
		{
			.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 00 00 00)
			ret
		}
		.method public virtual hidebysig newslot 
			instance void TraceData(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, object[] data)
		{
			.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 00 00 00)
			.param [5]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = (01 00 00 00)
			ret
		}
		.method public virtual hidebysig newslot 
			instance void TraceEvent(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id)
		{
			.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 00 00 00)
			ret
		}
		.method public virtual hidebysig newslot 
			instance void TraceEvent(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, string message)
		{
			.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 00 00 00)
			ret
		}
		.method public virtual hidebysig newslot 
			instance void TraceEvent(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, string format, object[] args)
		{
			.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 00 00 00)
			.param [6]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = (01 00 00 00)
			ret
		}
		.method public virtual hidebysig newslot 
			instance void TraceTransfer(class System.Diagnostics.TraceEventCache eventCache, string source, int32 id, string message, valuetype [mscorlib]System.Guid relatedActivityId)
		{
			.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 00 00 00)
			ret
		}
		.property instance class System.Collections.Specialized.StringDictionary Attributes()
		{
			.get instance class System.Collections.Specialized.StringDictionary System.Diagnostics.TraceListener::get_Attributes()
		}
		.property instance class System.Diagnostics.TraceFilter Filter()
		{
			.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 00 00 00)
			.get instance class System.Diagnostics.TraceFilter System.Diagnostics.TraceListener::get_Filter()
			.set instance void System.Diagnostics.TraceListener::set_Filter(class System.Diagnostics.TraceFilter)
		}
		.property instance int32 IndentLevel()
		{
			.get instance int32 System.Diagnostics.TraceListener::get_IndentLevel()
			.set instance void System.Diagnostics.TraceListener::set_IndentLevel(int32)
		}
		.property instance int32 IndentSize()
		{
			.get instance int32 System.Diagnostics.TraceListener::get_IndentSize()
			.set instance void System.Diagnostics.TraceListener::set_IndentSize(int32)
		}
		.property instance bool IsThreadSafe()
		{
			.get instance bool System.Diagnostics.TraceListener::get_IsThreadSafe()
		}
		.property instance string Name()
		{
			.get instance string System.Diagnostics.TraceListener::get_Name()
			.set instance void System.Diagnostics.TraceListener::set_Name(string)
		}
		.property instance bool NeedIndent()
		{
			.get instance bool System.Diagnostics.TraceListener::get_NeedIndent()
			.set instance void System.Diagnostics.TraceListener::set_NeedIndent(bool)
		}
		.property instance valuetype System.Diagnostics.TraceOptions TraceOutputOptions()
		{
			.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 00 00 00)
			.get instance valuetype System.Diagnostics.TraceOptions System.Diagnostics.TraceListener::get_TraceOutputOptions()
			.set instance void System.Diagnostics.TraceListener::set_TraceOutputOptions(valuetype System.Diagnostics.TraceOptions)
		}
	}
	.class public TraceListenerCollection
		extends [mscorlib]System.Object
		implements [mscorlib]System.Collections.IList, [mscorlib]System.Collections.ICollection, [mscorlib]System.Collections.IEnumerable
	{
		.custom instance void [mscorlib]System.Reflection.DefaultMemberAttribute::.ctor(string) = (01 00 04 49 74 65 6D 00 00)
		.method public hidebysig specialname 
			instance class System.Diagnostics.TraceListener get_Item(int32 i)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Item(int32 i, class System.Diagnostics.TraceListener 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Diagnostics.TraceListener get_Item(string name)
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance int32 get_Count()
		{
			ret
		}
		.method public hidebysig 
			instance int32 Add(class System.Diagnostics.TraceListener listener)
		{
			ret
		}
		.method public hidebysig 
			instance void AddRange(class System.Diagnostics.TraceListener[] 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void AddRange(class System.Diagnostics.TraceListenerCollection 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void Clear()
		{
			ret
		}
		.method public hidebysig 
			instance bool Contains(class System.Diagnostics.TraceListener listener)
		{
			ret
		}
		.method public hidebysig 
			instance void CopyTo(class System.Diagnostics.TraceListener[] listeners, int32 index)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance class [mscorlib]System.Collections.IEnumerator GetEnumerator()
		{
			ret
		}
		.method public hidebysig 
			instance int32 IndexOf(class System.Diagnostics.TraceListener listener)
		{
			ret
		}
		.method public hidebysig 
			instance void Insert(int32 index, class System.Diagnostics.TraceListener listener)
		{
			ret
		}
		.method public hidebysig 
			instance void Remove(class System.Diagnostics.TraceListener listener)
		{
			ret
		}
		.method public hidebysig 
			instance void Remove(string name)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void RemoveAt(int32 index)
		{
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance object System.Collections.IList.get_Item(int32 index)
		{
			.override [mscorlib]System.Collections.IList::get_Item
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance void System.Collections.IList.set_Item(int32 index, object 'value')
		{
			.override [mscorlib]System.Collections.IList::set_Item
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance bool System.Collections.IList.get_IsReadOnly()
		{
			.override [mscorlib]System.Collections.IList::get_IsReadOnly
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance bool System.Collections.IList.get_IsFixedSize()
		{
			.override [mscorlib]System.Collections.IList::get_IsFixedSize
			ret
		}
		.method private final virtual hidebysig newslot 
			instance int32 System.Collections.IList.Add(object 'value')
		{
			.override [mscorlib]System.Collections.IList::Add
			ret
		}
		.method private final virtual hidebysig newslot 
			instance bool System.Collections.IList.Contains(object 'value')
		{
			.override [mscorlib]System.Collections.IList::Contains
			ret
		}
		.method private final virtual hidebysig newslot 
			instance int32 System.Collections.IList.IndexOf(object 'value')
		{
			.override [mscorlib]System.Collections.IList::IndexOf
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Collections.IList.Insert(int32 index, object 'value')
		{
			.override [mscorlib]System.Collections.IList::Insert
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Collections.IList.Remove(object 'value')
		{
			.override [mscorlib]System.Collections.IList::Remove
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance object System.Collections.ICollection.get_SyncRoot()
		{
			.override [mscorlib]System.Collections.ICollection::get_SyncRoot
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance bool System.Collections.ICollection.get_IsSynchronized()
		{
			.override [mscorlib]System.Collections.ICollection::get_IsSynchronized
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Collections.ICollection.CopyTo(class [mscorlib]System.Array 'array', int32 index)
		{
			.override [mscorlib]System.Collections.ICollection::CopyTo
			ret
		}
		.property instance int32 Count()
		{
			.get instance int32 System.Diagnostics.TraceListenerCollection::get_Count()
		}
		.property instance class System.Diagnostics.TraceListener Item(int32)
		{
			.get instance class System.Diagnostics.TraceListener System.Diagnostics.TraceListenerCollection::get_Item(int32)
			.set instance void System.Diagnostics.TraceListenerCollection::set_Item(int32, class System.Diagnostics.TraceListener)
		}
		.property instance class System.Diagnostics.TraceListener Item(string)
		{
			.get instance class System.Diagnostics.TraceListener System.Diagnostics.TraceListenerCollection::get_Item(string)
		}
		.property instance bool System.Collections.ICollection.IsSynchronized()
		{
			.get instance bool System.Diagnostics.TraceListenerCollection::System.Collections.ICollection.get_IsSynchronized()
		}
		.property instance object System.Collections.ICollection.SyncRoot()
		{
			.get instance object System.Diagnostics.TraceListenerCollection::System.Collections.ICollection.get_SyncRoot()
		}
		.property instance bool System.Collections.IList.IsFixedSize()
		{
			.get instance bool System.Diagnostics.TraceListenerCollection::System.Collections.IList.get_IsFixedSize()
		}
		.property instance bool System.Collections.IList.IsReadOnly()
		{
			.get instance bool System.Diagnostics.TraceListenerCollection::System.Collections.IList.get_IsReadOnly()
		}
		.property instance object System.Collections.IList.Item(int32)
		{
			.get instance object System.Diagnostics.TraceListenerCollection::System.Collections.IList.get_Item(int32)
			.set instance void System.Diagnostics.TraceListenerCollection::System.Collections.IList.set_Item(int32, object)
		}
	}
	.class public sealed TraceOptions
		extends [mscorlib]System.Enum
	{
		.custom instance void [mscorlib]System.FlagsAttribute::.ctor() = (01 00 00 00)
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype System.Diagnostics.TraceOptions Callstack = int32(0x00000020)
		.field static public literal valuetype System.Diagnostics.TraceOptions DateTime = int32(0x00000002)
		.field static public literal valuetype System.Diagnostics.TraceOptions LogicalOperationStack = int32(0x00000001)
		.field static public literal valuetype System.Diagnostics.TraceOptions None = int32(0x00000000)
		.field static public literal valuetype System.Diagnostics.TraceOptions ProcessId = int32(0x00000008)
		.field static public literal valuetype System.Diagnostics.TraceOptions ThreadId = int32(0x00000010)
		.field static public literal valuetype System.Diagnostics.TraceOptions Timestamp = int32(0x00000004)
	}
	.class public TraceSource
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance void .ctor(string name)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string name, valuetype System.Diagnostics.SourceLevels defaultLevel)
		{
			ret
		}
		.method public hidebysig 
			instance void Close()
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public hidebysig 
			instance void Flush()
		{
			ret
		}
		.method famorassem virtual hidebysig newslot 
			instance string[] GetSupportedAttributes()
		{
			ret
		}
		.method public hidebysig 
			instance void TraceEvent(valuetype System.Diagnostics.TraceEventType eventType, int32 id)
		{
			.custom instance void [mscorlib]System.Diagnostics.ConditionalAttribute::.ctor(string) = (01 00 05 54 52 41 43 45 00 00)
			ret
		}
		.method public hidebysig 
			instance void TraceEvent(valuetype System.Diagnostics.TraceEventType eventType, int32 id, string message)
		{
			.custom instance void [mscorlib]System.Diagnostics.ConditionalAttribute::.ctor(string) = (01 00 05 54 52 41 43 45 00 00)
			ret
		}
		.method public hidebysig 
			instance void TraceEvent(valuetype System.Diagnostics.TraceEventType eventType, int32 id, string format, object[] args)
		{
			.custom instance void [mscorlib]System.Diagnostics.ConditionalAttribute::.ctor(string) = (01 00 05 54 52 41 43 45 00 00)
			.param [4]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = (01 00 00 00)
			ret
		}
		.method public hidebysig 
			instance void TraceData(valuetype System.Diagnostics.TraceEventType eventType, int32 id, object data)
		{
			.custom instance void [mscorlib]System.Diagnostics.ConditionalAttribute::.ctor(string) = (01 00 05 54 52 41 43 45 00 00)
			ret
		}
		.method public hidebysig 
			instance void TraceData(valuetype System.Diagnostics.TraceEventType eventType, int32 id, object[] data)
		{
			.custom instance void [mscorlib]System.Diagnostics.ConditionalAttribute::.ctor(string) = (01 00 05 54 52 41 43 45 00 00)
			.param [3]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = (01 00 00 00)
			ret
		}
		.method public hidebysig 
			instance void TraceInformation(string message)
		{
			.custom instance void [mscorlib]System.Diagnostics.ConditionalAttribute::.ctor(string) = (01 00 05 54 52 41 43 45 00 00)
			ret
		}
		.method public hidebysig 
			instance void TraceInformation(string format, object[] args)
		{
			.custom instance void [mscorlib]System.Diagnostics.ConditionalAttribute::.ctor(string) = (01 00 05 54 52 41 43 45 00 00)
			.param [2]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = (01 00 00 00)
			ret
		}
		.method public hidebysig 
			instance void TraceTransfer(int32 id, string message, valuetype [mscorlib]System.Guid relatedActivityId)
		{
			.custom instance void [mscorlib]System.Diagnostics.ConditionalAttribute::.ctor(string) = (01 00 05 54 52 41 43 45 00 00)
			ret
		}
		.method public hidebysig specialname 
			instance class System.Collections.Specialized.StringDictionary get_Attributes()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Diagnostics.TraceListenerCollection get_Listeners()
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public hidebysig specialname 
			instance class System.Diagnostics.SourceSwitch get_Switch()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Switch(class System.Diagnostics.SourceSwitch 'value')
		{
			.permissionset linkcheck = (00)
			ret
		}
		.property instance class System.Collections.Specialized.StringDictionary Attributes()
		{
			.get instance class System.Collections.Specialized.StringDictionary System.Diagnostics.TraceSource::get_Attributes()
		}
		.property instance class System.Diagnostics.TraceListenerCollection Listeners()
		{
			.get instance class System.Diagnostics.TraceListenerCollection System.Diagnostics.TraceSource::get_Listeners()
		}
		.property instance string Name()
		{
			.get instance string System.Diagnostics.TraceSource::get_Name()
		}
		.property instance class System.Diagnostics.SourceSwitch Switch()
		{
			.get instance class System.Diagnostics.SourceSwitch System.Diagnostics.TraceSource::get_Switch()
			.set instance void System.Diagnostics.TraceSource::set_Switch(class System.Diagnostics.SourceSwitch)
		}
	}
	.class public TraceSwitch
		extends System.Diagnostics.Switch
	{
		.method public hidebysig specialname 
			instance void .ctor(string displayName, string description)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string displayName, string description, string defaultSwitchValue)
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype System.Diagnostics.TraceLevel get_Level()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Level(valuetype System.Diagnostics.TraceLevel 'value')
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public hidebysig specialname 
			instance bool get_TraceError()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_TraceWarning()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_TraceInfo()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_TraceVerbose()
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnSwitchSettingChanged()
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnValueChanged()
		{
			ret
		}
		.property instance valuetype System.Diagnostics.TraceLevel Level()
		{
			.get instance valuetype System.Diagnostics.TraceLevel System.Diagnostics.TraceSwitch::get_Level()
			.set instance void System.Diagnostics.TraceSwitch::set_Level(valuetype System.Diagnostics.TraceLevel)
		}
		.property instance bool TraceError()
		{
			.get instance bool System.Diagnostics.TraceSwitch::get_TraceError()
		}
		.property instance bool TraceInfo()
		{
			.get instance bool System.Diagnostics.TraceSwitch::get_TraceInfo()
		}
		.property instance bool TraceVerbose()
		{
			.get instance bool System.Diagnostics.TraceSwitch::get_TraceVerbose()
		}
		.property instance bool TraceWarning()
		{
			.get instance bool System.Diagnostics.TraceSwitch::get_TraceWarning()
		}
	}
	.class public XmlWriterTraceListener
		extends System.Diagnostics.TextWriterTraceListener
	{
		.permissionset linkcheck = (00)
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]'System.IO.Stream' 'stream')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]'System.IO.Stream' 'stream', string name)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]'System.IO.TextWriter' writer)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]'System.IO.TextWriter' writer, string name)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string filename)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string filename, string name)
		{
			ret
		}
		.method public virtual hidebysig 
			instance void Write(string message)
		{
			ret
		}
		.method public virtual hidebysig 
			instance void WriteLine(string message)
		{
			ret
		}
		.method public virtual hidebysig 
			instance void Fail(string message, string detailMessage)
		{
			ret
		}
		.method public virtual hidebysig 
			instance void TraceEvent(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, string format, object[] args)
		{
			.param [6]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = (01 00 00 00)
			ret
		}
		.method public virtual hidebysig 
			instance void TraceEvent(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, string message)
		{
			ret
		}
		.method public virtual hidebysig 
			instance void TraceData(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, object data)
		{
			ret
		}
		.method public virtual hidebysig 
			instance void TraceData(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, object[] data)
		{
			.param [5]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = (01 00 00 00)
			ret
		}
		.method public virtual hidebysig 
			instance void Close()
		{
			ret
		}
		.method public virtual hidebysig 
			instance void TraceTransfer(class System.Diagnostics.TraceEventCache eventCache, string source, int32 id, string message, valuetype [mscorlib]System.Guid relatedActivityId)
		{
			ret
		}
	}
}
.namespace 'System.IO'
{
	.class public sealed serializable InvalidDataException
		extends [mscorlib]System.SystemException
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string message)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string message, class [mscorlib]System.Exception innerException)
		{
			ret
		}
	}
}
.namespace 'System.IO.Compression'
{
	.class public sealed CompressionMode
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype 'System.IO.Compression.CompressionMode' Compress = int32(0x00000001)
		.field static public literal valuetype 'System.IO.Compression.CompressionMode' Decompress = int32(0x00000000)
	}
	.class public DeflateStream
		extends [mscorlib]'System.IO.Stream'
	{
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]'System.IO.Stream' 'stream', valuetype 'System.IO.Compression.CompressionMode' mode)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]'System.IO.Stream' 'stream', valuetype 'System.IO.Compression.CompressionMode' mode, bool leaveOpen)
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance bool get_CanRead()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance bool get_CanWrite()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance bool get_CanSeek()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance int64 get_Length()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance int64 get_Position()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_Position(int64 'value')
		{
			ret
		}
		.method public virtual hidebysig 
			instance void Flush()
		{
			ret
		}
		.method public virtual hidebysig 
			instance int64 Seek(int64 offset, valuetype [mscorlib]'System.IO.SeekOrigin' origin)
		{
			ret
		}
		.method public virtual hidebysig 
			instance void SetLength(int64 'value')
		{
			ret
		}
		.method public virtual hidebysig 
			instance int32 Read(uint8[] 'array', int32 offset, int32 count)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [mscorlib]System.IAsyncResult BeginRead(uint8[] 'array', int32 offset, int32 count, class [mscorlib]System.AsyncCallback asyncCallback, object asyncState)
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public virtual hidebysig 
			instance int32 EndRead(class [mscorlib]System.IAsyncResult asyncResult)
		{
			ret
		}
		.method public virtual hidebysig 
			instance void Write(uint8[] 'array', int32 offset, int32 count)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void Dispose(bool disposing)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [mscorlib]System.IAsyncResult BeginWrite(uint8[] 'array', int32 offset, int32 count, class [mscorlib]System.AsyncCallback asyncCallback, object asyncState)
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public virtual hidebysig 
			instance void EndWrite(class [mscorlib]System.IAsyncResult asyncResult)
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]'System.IO.Stream' get_BaseStream()
		{
			ret
		}
		.property instance class [mscorlib]'System.IO.Stream' BaseStream()
		{
			.get instance class [mscorlib]'System.IO.Stream' 'System.IO.Compression.DeflateStream'::get_BaseStream()
		}
		.property instance bool CanRead()
		{
			.get instance bool 'System.IO.Compression.DeflateStream'::get_CanRead()
		}
		.property instance bool CanSeek()
		{
			.get instance bool 'System.IO.Compression.DeflateStream'::get_CanSeek()
		}
		.property instance bool CanWrite()
		{
			.get instance bool 'System.IO.Compression.DeflateStream'::get_CanWrite()
		}
		.property instance int64 Length()
		{
			.get instance int64 'System.IO.Compression.DeflateStream'::get_Length()
		}
		.property instance int64 Position()
		{
			.get instance int64 'System.IO.Compression.DeflateStream'::get_Position()
			.set instance void 'System.IO.Compression.DeflateStream'::set_Position(int64)
		}
	}
	.class public GZipStream
		extends [mscorlib]'System.IO.Stream'
	{
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]'System.IO.Stream' 'stream', valuetype 'System.IO.Compression.CompressionMode' mode)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]'System.IO.Stream' 'stream', valuetype 'System.IO.Compression.CompressionMode' mode, bool leaveOpen)
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance bool get_CanRead()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance bool get_CanWrite()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance bool get_CanSeek()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance int64 get_Length()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance int64 get_Position()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_Position(int64 'value')
		{
			ret
		}
		.method public virtual hidebysig 
			instance void Flush()
		{
			ret
		}
		.method public virtual hidebysig 
			instance int64 Seek(int64 offset, valuetype [mscorlib]'System.IO.SeekOrigin' origin)
		{
			ret
		}
		.method public virtual hidebysig 
			instance void SetLength(int64 'value')
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [mscorlib]System.IAsyncResult BeginRead(uint8[] 'array', int32 offset, int32 count, class [mscorlib]System.AsyncCallback asyncCallback, object asyncState)
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public virtual hidebysig 
			instance int32 EndRead(class [mscorlib]System.IAsyncResult asyncResult)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [mscorlib]System.IAsyncResult BeginWrite(uint8[] 'array', int32 offset, int32 count, class [mscorlib]System.AsyncCallback asyncCallback, object asyncState)
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public virtual hidebysig 
			instance void EndWrite(class [mscorlib]System.IAsyncResult asyncResult)
		{
			ret
		}
		.method public virtual hidebysig 
			instance int32 Read(uint8[] 'array', int32 offset, int32 count)
		{
			ret
		}
		.method public virtual hidebysig 
			instance void Write(uint8[] 'array', int32 offset, int32 count)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void Dispose(bool disposing)
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]'System.IO.Stream' get_BaseStream()
		{
			ret
		}
		.property instance class [mscorlib]'System.IO.Stream' BaseStream()
		{
			.get instance class [mscorlib]'System.IO.Stream' 'System.IO.Compression.GZipStream'::get_BaseStream()
		}
		.property instance bool CanRead()
		{
			.get instance bool 'System.IO.Compression.GZipStream'::get_CanRead()
		}
		.property instance bool CanSeek()
		{
			.get instance bool 'System.IO.Compression.GZipStream'::get_CanSeek()
		}
		.property instance bool CanWrite()
		{
			.get instance bool 'System.IO.Compression.GZipStream'::get_CanWrite()
		}
		.property instance int64 Length()
		{
			.get instance int64 'System.IO.Compression.GZipStream'::get_Length()
		}
		.property instance int64 Position()
		{
			.get instance int64 'System.IO.Compression.GZipStream'::get_Position()
			.set instance void 'System.IO.Compression.GZipStream'::set_Position(int64)
		}
	}
}
.namespace System.Net
{
	.class public AuthenticationManager
		extends [mscorlib]System.Object
	{
		.method public static hidebysig specialname 
			class System.Net.ICredentialPolicy get_CredentialPolicy()
		{
			ret
		}
		.method public static hidebysig specialname 
			void set_CredentialPolicy(class System.Net.ICredentialPolicy 'value')
		{
			ret
		}
		.method public static hidebysig specialname 
			class System.Collections.Specialized.StringDictionary get_CustomTargetNameDictionary()
		{
			ret
		}
		.method public static hidebysig 
			class System.Net.Authorization Authenticate(string challenge, class System.Net.WebRequest 'request', class System.Net.ICredentials credentials)
		{
			ret
		}
		.method public static hidebysig 
			class System.Net.Authorization PreAuthenticate(class System.Net.WebRequest 'request', class System.Net.ICredentials credentials)
		{
			ret
		}
		.method public static hidebysig 
			void Register(class System.Net.IAuthenticationModule authenticationModule)
		{
			ret
		}
		.method public static hidebysig 
			void Unregister(class System.Net.IAuthenticationModule authenticationModule)
		{
			ret
		}
		.method public static hidebysig 
			void Unregister(string authenticationScheme)
		{
			ret
		}
		.method public static hidebysig specialname 
			class [mscorlib]System.Collections.IEnumerator get_RegisteredModules()
		{
			ret
		}
		.property class System.Net.ICredentialPolicy CredentialPolicy()
		{
			.get class System.Net.ICredentialPolicy System.Net.AuthenticationManager::get_CredentialPolicy()
			.set void System.Net.AuthenticationManager::set_CredentialPolicy(class System.Net.ICredentialPolicy)
		}
		.property class System.Collections.Specialized.StringDictionary CustomTargetNameDictionary()
		{
			.get class System.Collections.Specialized.StringDictionary System.Net.AuthenticationManager::get_CustomTargetNameDictionary()
		}
		.property class [mscorlib]System.Collections.IEnumerator RegisteredModules()
		{
			.get class [mscorlib]System.Collections.IEnumerator System.Net.AuthenticationManager::get_RegisteredModules()
		}
	}
	.class public Authorization
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance void .ctor(string token)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string token, bool finished)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string token, bool finished, string connectionGroupId)
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Message()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_ConnectionGroupId()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_Complete()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string[] get_ProtectionRealm()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ProtectionRealm(string[] 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_MutuallyAuthenticated()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_MutuallyAuthenticated(bool 'value')
		{
			ret
		}
		.property instance bool Complete()
		{
			.get instance bool System.Net.Authorization::get_Complete()
		}
		.property instance string ConnectionGroupId()
		{
			.get instance string System.Net.Authorization::get_ConnectionGroupId()
		}
		.property instance string Message()
		{
			.get instance string System.Net.Authorization::get_Message()
		}
		.property instance bool MutuallyAuthenticated()
		{
			.get instance bool System.Net.Authorization::get_MutuallyAuthenticated()
			.set instance void System.Net.Authorization::set_MutuallyAuthenticated(bool)
		}
		.property instance string[] ProtectionRealm()
		{
			.get instance string[] System.Net.Authorization::get_ProtectionRealm()
			.set instance void System.Net.Authorization::set_ProtectionRealm(string[])
		}
	}
	.class public sealed BindIPEndPoint
		extends [mscorlib]System.MulticastDelegate
	{
		.method public hidebysig specialname 
			instance void .ctor(object 'object', native int 'method')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance class System.Net.IPEndPoint Invoke(class System.Net.ServicePoint servicePoint, class System.Net.IPEndPoint remoteEndPoint, int32 retryCount)
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance class [mscorlib]System.IAsyncResult BeginInvoke(class System.Net.ServicePoint servicePoint, class System.Net.IPEndPoint remoteEndPoint, int32 retryCount, class [mscorlib]System.AsyncCallback callback, object 'object')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance class System.Net.IPEndPoint EndInvoke(class [mscorlib]System.IAsyncResult result)
			runtime 
		{
		}
	}
	.class public sealed serializable Cookie
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string name, string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string name, string 'value', string path)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string name, string 'value', string path, string domain)
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Comment()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Comment(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Uri get_CommentUri()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_CommentUri(class System.Uri 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_HttpOnly()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_HttpOnly(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_Discard()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Discard(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Domain()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Domain(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_Expired()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Expired(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [mscorlib]System.DateTime get_Expires()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Expires(valuetype [mscorlib]System.DateTime 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Name(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Path()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Path(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Port()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Port(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_Secure()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Secure(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [mscorlib]System.DateTime get_TimeStamp()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Value()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Value(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_Version()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Version(int32 'value')
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool Equals(object comparand)
		{
			ret
		}
		.method public virtual hidebysig 
			instance int32 GetHashCode()
		{
			ret
		}
		.method public virtual hidebysig 
			instance string ToString()
		{
			ret
		}
		.property instance string Comment()
		{
			.get instance string System.Net.Cookie::get_Comment()
			.set instance void System.Net.Cookie::set_Comment(string)
		}
		.property instance class System.Uri CommentUri()
		{
			.get instance class System.Uri System.Net.Cookie::get_CommentUri()
			.set instance void System.Net.Cookie::set_CommentUri(class System.Uri)
		}
		.property instance bool Discard()
		{
			.get instance bool System.Net.Cookie::get_Discard()
			.set instance void System.Net.Cookie::set_Discard(bool)
		}
		.property instance string Domain()
		{
			.get instance string System.Net.Cookie::get_Domain()
			.set instance void System.Net.Cookie::set_Domain(string)
		}
		.property instance bool Expired()
		{
			.get instance bool System.Net.Cookie::get_Expired()
			.set instance void System.Net.Cookie::set_Expired(bool)
		}
		.property instance valuetype [mscorlib]System.DateTime Expires()
		{
			.get instance valuetype [mscorlib]System.DateTime System.Net.Cookie::get_Expires()
			.set instance void System.Net.Cookie::set_Expires(valuetype [mscorlib]System.DateTime)
		}
		.property instance bool HttpOnly()
		{
			.get instance bool System.Net.Cookie::get_HttpOnly()
			.set instance void System.Net.Cookie::set_HttpOnly(bool)
		}
		.property instance string Name()
		{
			.get instance string System.Net.Cookie::get_Name()
			.set instance void System.Net.Cookie::set_Name(string)
		}
		.property instance string Path()
		{
			.get instance string System.Net.Cookie::get_Path()
			.set instance void System.Net.Cookie::set_Path(string)
		}
		.property instance string Port()
		{
			.get instance string System.Net.Cookie::get_Port()
			.set instance void System.Net.Cookie::set_Port(string)
		}
		.property instance bool Secure()
		{
			.get instance bool System.Net.Cookie::get_Secure()
			.set instance void System.Net.Cookie::set_Secure(bool)
		}
		.property instance valuetype [mscorlib]System.DateTime TimeStamp()
		{
			.get instance valuetype [mscorlib]System.DateTime System.Net.Cookie::get_TimeStamp()
		}
		.property instance string Value()
		{
			.get instance string System.Net.Cookie::get_Value()
			.set instance void System.Net.Cookie::set_Value(string)
		}
		.property instance int32 Version()
		{
			.get instance int32 System.Net.Cookie::get_Version()
			.set instance void System.Net.Cookie::set_Version(int32)
		}
	}
	.class public serializable CookieCollection
		extends [mscorlib]System.Object
		implements [mscorlib]System.Collections.ICollection, [mscorlib]System.Collections.IEnumerable
	{
		.custom instance void [mscorlib]System.Reflection.DefaultMemberAttribute::.ctor(string) = (01 00 04 49 74 65 6D 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsReadOnly()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Net.Cookie get_Item(int32 index)
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Net.Cookie get_Item(string name)
		{
			ret
		}
		.method public hidebysig 
			instance void Add(class System.Net.Cookie cookie)
		{
			ret
		}
		.method public hidebysig 
			instance void Add(class System.Net.CookieCollection cookies)
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance int32 get_Count()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance bool get_IsSynchronized()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance object get_SyncRoot()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void CopyTo(class [mscorlib]System.Array 'array', int32 index)
		{
			ret
		}
		.method public hidebysig 
			instance void CopyTo(class System.Net.Cookie[] 'array', int32 index)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance class [mscorlib]System.Collections.IEnumerator GetEnumerator()
		{
			ret
		}
		.property instance int32 Count()
		{
			.get instance int32 System.Net.CookieCollection::get_Count()
		}
		.property instance bool IsReadOnly()
		{
			.get instance bool System.Net.CookieCollection::get_IsReadOnly()
		}
		.property instance bool IsSynchronized()
		{
			.get instance bool System.Net.CookieCollection::get_IsSynchronized()
		}
		.property instance class System.Net.Cookie Item(int32)
		{
			.get instance class System.Net.Cookie System.Net.CookieCollection::get_Item(int32)
		}
		.property instance class System.Net.Cookie Item(string)
		{
			.get instance class System.Net.Cookie System.Net.CookieCollection::get_Item(string)
		}
		.property instance object SyncRoot()
		{
			.get instance object System.Net.CookieCollection::get_SyncRoot()
		}
	}
	.class public serializable CookieContainer
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(int32 capacity)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(int32 capacity, int32 perDomainCapacity, int32 maxCookieSize)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_Capacity()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Capacity(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_Count()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_MaxCookieSize()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_MaxCookieSize(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_PerDomainCapacity()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_PerDomainCapacity(int32 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void Add(class System.Net.Cookie cookie)
		{
			ret
		}
		.method public hidebysig 
			instance void Add(class System.Net.CookieCollection cookies)
		{
			ret
		}
		.method public hidebysig 
			instance void Add(class System.Uri uri, class System.Net.Cookie cookie)
		{
			ret
		}
		.method public hidebysig 
			instance void Add(class System.Uri uri, class System.Net.CookieCollection cookies)
		{
			ret
		}
		.method public hidebysig 
			instance class System.Net.CookieCollection GetCookies(class System.Uri uri)
		{
			ret
		}
		.method public hidebysig 
			instance string GetCookieHeader(class System.Uri uri)
		{
			ret
		}
		.method public hidebysig 
			instance void SetCookies(class System.Uri uri, string cookieHeader)
		{
			ret
		}
		.field static public literal int32 DefaultCookieLengthLimit = int32(0x00001000)
		.field static public literal int32 DefaultCookieLimit = int32(0x0000012C)
		.field static public literal int32 DefaultPerDomainCookieLimit = int32(0x00000014)
		.property instance int32 Capacity()
		{
			.get instance int32 System.Net.CookieContainer::get_Capacity()
			.set instance void System.Net.CookieContainer::set_Capacity(int32)
		}
		.property instance int32 Count()
		{
			.get instance int32 System.Net.CookieContainer::get_Count()
		}
		.property instance int32 MaxCookieSize()
		{
			.get instance int32 System.Net.CookieContainer::get_MaxCookieSize()
			.set instance void System.Net.CookieContainer::set_MaxCookieSize(int32)
		}
		.property instance int32 PerDomainCapacity()
		{
			.get instance int32 System.Net.CookieContainer::get_PerDomainCapacity()
			.set instance void System.Net.CookieContainer::set_PerDomainCapacity(int32)
		}
	}
	.class public serializable CookieException
		extends [mscorlib]System.FormatException
		implements [mscorlib]System.Runtime.Serialization.ISerializable
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method family hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype [mscorlib]System.Runtime.Serialization.StreamingContext streamingContext)
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Runtime.Serialization.ISerializable.GetObjectData(class [mscorlib]System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype [mscorlib]System.Runtime.Serialization.StreamingContext streamingContext)
		{
			.permissionset linkcheck = (00)
			.override [mscorlib]System.Runtime.Serialization.ISerializable::GetObjectData
			ret
		}
		.method public virtual hidebysig 
			instance void GetObjectData(class [mscorlib]System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype [mscorlib]System.Runtime.Serialization.StreamingContext streamingContext)
		{
			.permissionset linkcheck = (00)
			ret
		}
	}
	.class public CredentialCache
		extends [mscorlib]System.Object
		implements System.Net.ICredentials, System.Net.ICredentialsByHost, [mscorlib]System.Collections.IEnumerable
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig 
			instance void Add(class System.Uri uriPrefix, string authType, class System.Net.NetworkCredential cred)
		{
			ret
		}
		.method public hidebysig 
			instance void Add(string host, int32 port, string authenticationType, class System.Net.NetworkCredential credential)
		{
			ret
		}
		.method public hidebysig 
			instance void Remove(class System.Uri uriPrefix, string authType)
		{
			ret
		}
		.method public hidebysig 
			instance void Remove(string host, int32 port, string authenticationType)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance class System.Net.NetworkCredential GetCredential(class System.Uri uriPrefix, string authType)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance class System.Net.NetworkCredential GetCredential(string host, int32 port, string authenticationType)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance class [mscorlib]System.Collections.IEnumerator GetEnumerator()
		{
			ret
		}
		.method public static hidebysig specialname 
			class System.Net.ICredentials get_DefaultCredentials()
		{
			ret
		}
		.method public static hidebysig specialname 
			class System.Net.NetworkCredential get_DefaultNetworkCredentials()
		{
			ret
		}
		.property class System.Net.ICredentials DefaultCredentials()
		{
			.get class System.Net.ICredentials System.Net.CredentialCache::get_DefaultCredentials()
		}
		.property class System.Net.NetworkCredential DefaultNetworkCredentials()
		{
			.get class System.Net.NetworkCredential System.Net.CredentialCache::get_DefaultNetworkCredentials()
		}
	}
	.class public sealed DecompressionMethods
		extends [mscorlib]System.Enum
	{
		.custom instance void [mscorlib]System.FlagsAttribute::.ctor() = (01 00 00 00)
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype System.Net.DecompressionMethods Deflate = int32(0x00000002)
		.field static public literal valuetype System.Net.DecompressionMethods GZip = int32(0x00000001)
		.field static public literal valuetype System.Net.DecompressionMethods None = int32(0x00000000)
	}
	.class public abstract sealed Dns
		extends [mscorlib]System.Object
	{
		.method public static hidebysig 
			class System.Net.IPHostEntry GetHostByName(string hostName)
		{
			.custom instance void [mscorlib]System.ObsoleteAttribute::.ctor(string) = (01 00 77 47 65 74 48 6F 73 74 42 79 4E 61 6D 65 20 69 73 20 6F 62 73 6F 6C 65 74 65 64 20 66 6F 72 20 74 68 69 73 20 74 79 70 65 2C 20 70 6C 65 61 73 65 20 75 73 65 20 47 65 74 48 6F 73 74 45 6E 74 72 79 20 69 6E 73 74 65 61 64 2E 20 68 74 74 70 3A 2F 2F 67 6F 2E 6D 69 63 72 6F 73 6F 66 74 2E 63 6F 6D 2F 66 77 6C 69 6E 6B 2F 3F 6C 69 6E 6B 69 64 3D 31 34 32 30 32 00 00)
			ret
		}
		.method public static hidebysig 
			class System.Net.IPHostEntry GetHostByAddress(string address)
		{
			.custom instance void [mscorlib]System.ObsoleteAttribute::.ctor(string) = (01 00 7A 47 65 74 48 6F 73 74 42 79 41 64 64 72 65 73 73 20 69 73 20 6F 62 73 6F 6C 65 74 65 64 20 66 6F 72 20 74 68 69 73 20 74 79 70 65 2C 20 70 6C 65 61 73 65 20 75 73 65 20 47 65 74 48 6F 73 74 45 6E 74 72 79 20 69 6E 73 74 65 61 64 2E 20 68 74 74 70 3A 2F 2F 67 6F 2E 6D 69 63 72 6F 73 6F 66 74 2E 63 6F 6D 2F 66 77 6C 69 6E 6B 2F 3F 6C 69 6E 6B 69 64 3D 31 34 32 30 32 00 00)
			ret
		}
		.method public static hidebysig 
			class System.Net.IPHostEntry GetHostByAddress(class System.Net.IPAddress address)
		{
			.custom instance void [mscorlib]System.ObsoleteAttribute::.ctor(string) = (01 00 7A 47 65 74 48 6F 73 74 42 79 41 64 64 72 65 73 73 20 69 73 20 6F 62 73 6F 6C 65 74 65 64 20 66 6F 72 20 74 68 69 73 20 74 79 70 65 2C 20 70 6C 65 61 73 65 20 75 73 65 20 47 65 74 48 6F 73 74 45 6E 74 72 79 20 69 6E 73 74 65 61 64 2E 20 68 74 74 70 3A 2F 2F 67 6F 2E 6D 69 63 72 6F 73 6F 66 74 2E 63 6F 6D 2F 66 77 6C 69 6E 6B 2F 3F 6C 69 6E 6B 69 64 3D 31 34 32 30 32 00 00)
			ret
		}
		.method public static hidebysig 
			string GetHostName()
		{
			ret
		}
		.method public static hidebysig 
			class System.Net.IPHostEntry Resolve(string hostName)
		{
			.custom instance void [mscorlib]System.ObsoleteAttribute::.ctor(string) = (01 00 71 52 65 73 6F 6C 76 65 20 69 73 20 6F 62 73 6F 6C 65 74 65 64 20 66 6F 72 20 74 68 69 73 20 74 79 70 65 2C 20 70 6C 65 61 73 65 20 75 73 65 20 47 65 74 48 6F 73 74 45 6E 74 72 79 20 69 6E 73 74 65 61 64 2E 20 68 74 74 70 3A 2F 2F 67 6F 2E 6D 69 63 72 6F 73 6F 66 74 2E 63 6F 6D 2F 66 77 6C 69 6E 6B 2F 3F 6C 69 6E 6B 69 64 3D 31 34 32 30 32 00 00)
			ret
		}
		.method public static hidebysig 
			class [mscorlib]System.IAsyncResult BeginGetHostByName(string hostName, class [mscorlib]System.AsyncCallback requestCallback, object stateObject)
		{
			.permissionset linkcheck = (00)
			.custom instance void [mscorlib]System.ObsoleteAttribute::.ctor(string) = (01 00 80 81 42 65 67 69 6E 47 65 74 48 6F 73 74 42 79 4E 61 6D 65 20 69 73 20 6F 62 73 6F 6C 65 74 65 64 20 66 6F 72 20 74 68 69 73 20 74 79 70 65 2C 20 70 6C 65 61 73 65 20 75 73 65 20 42 65 67 69 6E 47 65 74 48 6F 73 74 45 6E 74 72 79 20 69 6E 73 74 65 61 64 2E 20 68 74 74 70 3A 2F 2F 67 6F 2E 6D 69 63 72 6F 73 6F 66 74 2E 63 6F 6D 2F 66 77 6C 69 6E 6B 2F 3F 6C 69 6E 6B 69 64 3D 31 34 32 30 32 00 00)
			ret
		}
		.method public static hidebysig 
			class System.Net.IPHostEntry EndGetHostByName(class [mscorlib]System.IAsyncResult asyncResult)
		{
			.custom instance void [mscorlib]System.ObsoleteAttribute::.ctor(string) = (01 00 7D 45 6E 64 47 65 74 48 6F 73 74 42 79 4E 61 6D 65 20 69 73 20 6F 62 73 6F 6C 65 74 65 64 20 66 6F 72 20 74 68 69 73 20 74 79 70 65 2C 20 70 6C 65 61 73 65 20 75 73 65 20 45 6E 64 47 65 74 48 6F 73 74 45 6E 74 72 79 20 69 6E 73 74 65 61 64 2E 20 68 74 74 70 3A 2F 2F 67 6F 2E 6D 69 63 72 6F 73 6F 66 74 2E 63 6F 6D 2F 66 77 6C 69 6E 6B 2F 3F 6C 69 6E 6B 69 64 3D 31 34 32 30 32 00 00)
			ret
		}
		.method public static hidebysig 
			class System.Net.IPHostEntry GetHostEntry(string hostNameOrAddress)
		{
			ret
		}
		.method public static hidebysig 
			class System.Net.IPHostEntry GetHostEntry(class System.Net.IPAddress address)
		{
			ret
		}
		.method public static hidebysig 
			class System.Net.IPAddress[] GetHostAddresses(string hostNameOrAddress)
		{
			ret
		}
		.method public static hidebysig 
			class [mscorlib]System.IAsyncResult BeginGetHostEntry(string hostNameOrAddress, class [mscorlib]System.AsyncCallback requestCallback, object stateObject)
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public static hidebysig 
			class [mscorlib]System.IAsyncResult BeginGetHostEntry(class System.Net.IPAddress address, class [mscorlib]System.AsyncCallback requestCallback, object stateObject)
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public static hidebysig 
			class System.Net.IPHostEntry EndGetHostEntry(class [mscorlib]System.IAsyncResult asyncResult)
		{
			ret
		}
		.method public static hidebysig 
			class [mscorlib]System.IAsyncResult BeginGetHostAddresses(string hostNameOrAddress, class [mscorlib]System.AsyncCallback requestCallback, object state)
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public static hidebysig 
			class System.Net.IPAddress[] EndGetHostAddresses(class [mscorlib]System.IAsyncResult asyncResult)
		{
			ret
		}
		.method public static hidebysig 
			class [mscorlib]System.IAsyncResult BeginResolve(string hostName, class [mscorlib]System.AsyncCallback requestCallback, object stateObject)
		{
			.permissionset linkcheck = (00)
			.custom instance void [mscorlib]System.ObsoleteAttribute::.ctor(string) = (01 00 7B 42 65 67 69 6E 52 65 73 6F 6C 76 65 20 69 73 20 6F 62 73 6F 6C 65 74 65 64 20 66 6F 72 20 74 68 69 73 20 74 79 70 65 2C 20 70 6C 65 61 73 65 20 75 73 65 20 42 65 67 69 6E 47 65 74 48 6F 73 74 45 6E 74 72 79 20 69 6E 73 74 65 61 64 2E 20 68 74 74 70 3A 2F 2F 67 6F 2E 6D 69 63 72 6F 73 6F 66 74 2E 63 6F 6D 2F 66 77 6C 69 6E 6B 2F 3F 6C 69 6E 6B 69 64 3D 31 34 32 30 32 00 00)
			ret
		}
		.method public static hidebysig 
			class System.Net.IPHostEntry EndResolve(class [mscorlib]System.IAsyncResult asyncResult)
		{
			.custom instance void [mscorlib]System.ObsoleteAttribute::.ctor(string) = (01 00 77 45 6E 64 52 65 73 6F 6C 76 65 20 69 73 20 6F 62 73 6F 6C 65 74 65 64 20 66 6F 72 20 74 68 69 73 20 74 79 70 65 2C 20 70 6C 65 61 73 65 20 75 73 65 20 45 6E 64 47 65 74 48 6F 73 74 45 6E 74 72 79 20 69 6E 73 74 65 61 64 2E 20 68 74 74 70 3A 2F 2F 67 6F 2E 6D 69 63 72 6F 73 6F 66 74 2E 63 6F 6D 2F 66 77 6C 69 6E 6B 2F 3F 6C 69 6E 6B 69 64 3D 31 34 32 30 32 00 00)
			ret
		}
	}
	.class public sealed serializable DnsPermission
		extends [mscorlib]System.Security.CodeAccessPermission
		implements [mscorlib]System.Security.Permissions.IUnrestrictedPermission
	{
		.method public hidebysig specialname 
			instance void .ctor(valuetype [mscorlib]System.Security.Permissions.PermissionState state)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance bool IsUnrestricted()
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [mscorlib]System.Security.IPermission Copy()
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [mscorlib]System.Security.IPermission Union(class [mscorlib]System.Security.IPermission target)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [mscorlib]System.Security.IPermission Intersect(class [mscorlib]System.Security.IPermission target)
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool IsSubsetOf(class [mscorlib]System.Security.IPermission target)
		{
			ret
		}
		.method public virtual hidebysig 
			instance void FromXml(class [mscorlib]System.Security.SecurityElement securityElement)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [mscorlib]System.Security.SecurityElement ToXml()
		{
			ret
		}
	}
	.class public sealed serializable DnsPermissionAttribute
		extends [mscorlib]System.Security.Permissions.CodeAccessSecurityAttribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = (01 00 6D 00 00 00 02 00 54 02 0D 41 6C 6C 6F 77 4D 75 6C 74 69 70 6C 65 01 54 02 09 49 6E 68 65 72 69 74 65 64 00)
		.method public hidebysig specialname 
			instance void .ctor(valuetype [mscorlib]System.Security.Permissions.SecurityAction action)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [mscorlib]System.Security.IPermission CreatePermission()
		{
			ret
		}
	}
	.class public DownloadDataCompletedEventArgs
		extends System.ComponentModel.AsyncCompletedEventArgs
	{
		.method public hidebysig specialname 
			instance uint8[] get_Result()
		{
			ret
		}
		.property instance uint8[] Result()
		{
			.get instance uint8[] System.Net.DownloadDataCompletedEventArgs::get_Result()
		}
	}
	.class public sealed DownloadDataCompletedEventHandler
		extends [mscorlib]System.MulticastDelegate
	{
		.method public hidebysig specialname 
			instance void .ctor(object 'object', native int 'method')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void Invoke(object sender, class System.Net.DownloadDataCompletedEventArgs e)
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance class [mscorlib]System.IAsyncResult BeginInvoke(object sender, class System.Net.DownloadDataCompletedEventArgs e, class [mscorlib]System.AsyncCallback callback, object 'object')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void EndInvoke(class [mscorlib]System.IAsyncResult result)
			runtime 
		{
		}
	}
	.class public DownloadProgressChangedEventArgs
		extends System.ComponentModel.ProgressChangedEventArgs
	{
		.method public hidebysig specialname 
			instance int64 get_BytesReceived()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int64 get_TotalBytesToReceive()
		{
			ret
		}
		.property instance int64 BytesReceived()
		{
			.get instance int64 System.Net.DownloadProgressChangedEventArgs::get_BytesReceived()
		}
		.property instance int64 TotalBytesToReceive()
		{
			.get instance int64 System.Net.DownloadProgressChangedEventArgs::get_TotalBytesToReceive()
		}
	}
	.class public sealed DownloadProgressChangedEventHandler
		extends [mscorlib]System.MulticastDelegate
	{
		.method public hidebysig specialname 
			instance void .ctor(object 'object', native int 'method')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void Invoke(object sender, class System.Net.DownloadProgressChangedEventArgs e)
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance class [mscorlib]System.IAsyncResult BeginInvoke(object sender, class System.Net.DownloadProgressChangedEventArgs e, class [mscorlib]System.AsyncCallback callback, object 'object')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void EndInvoke(class [mscorlib]System.IAsyncResult result)
			runtime 
		{
		}
	}
	.class public DownloadStringCompletedEventArgs
		extends System.ComponentModel.AsyncCompletedEventArgs
	{
		.method public hidebysig specialname 
			instance string get_Result()
		{
			ret
		}
		.property instance string Result()
		{
			.get instance string System.Net.DownloadStringCompletedEventArgs::get_Result()
		}
	}
	.class public sealed DownloadStringCompletedEventHandler
		extends [mscorlib]System.MulticastDelegate
	{
		.method public hidebysig specialname 
			instance void .ctor(object 'object', native int 'method')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void Invoke(object sender, class System.Net.DownloadStringCompletedEventArgs e)
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance class [mscorlib]System.IAsyncResult BeginInvoke(object sender, class System.Net.DownloadStringCompletedEventArgs e, class [mscorlib]System.AsyncCallback callback, object 'object')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void EndInvoke(class [mscorlib]System.IAsyncResult result)
			runtime 
		{
		}
	}
	.class public abstract serializable EndPoint
		extends [mscorlib]System.Object
	{
		.method public virtual hidebysig newslot specialname 
			instance valuetype System.Net.Sockets.AddressFamily get_AddressFamily()
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance class System.Net.SocketAddress Serialize()
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance class System.Net.EndPoint Create(class System.Net.SocketAddress socketAddress)
		{
			ret
		}
		.method family hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance valuetype System.Net.Sockets.AddressFamily AddressFamily()
		{
			.get instance valuetype System.Net.Sockets.AddressFamily System.Net.EndPoint::get_AddressFamily()
		}
	}
	.class public serializable EndpointPermission
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance string get_Hostname()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype System.Net.TransportType get_Transport()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_Port()
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool Equals(object obj)
		{
			ret
		}
		.method public virtual hidebysig 
			instance int32 GetHashCode()
		{
			ret
		}
		.method public virtual hidebysig 
			instance string ToString()
		{
			ret
		}
		.property instance string Hostname()
		{
			.get instance string System.Net.EndpointPermission::get_Hostname()
		}
		.property instance int32 Port()
		{
			.get instance int32 System.Net.EndpointPermission::get_Port()
		}
		.property instance valuetype System.Net.TransportType Transport()
		{
			.get instance valuetype System.Net.TransportType System.Net.EndpointPermission::get_Transport()
		}
	}
	.class public serializable FileWebRequest
		extends System.Net.WebRequest
		implements [mscorlib]System.Runtime.Serialization.ISerializable
	{
		.method family hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype [mscorlib]System.Runtime.Serialization.StreamingContext streamingContext)
		{
			.custom instance void [mscorlib]System.ObsoleteAttribute::.ctor(string) = (01 00 56 53 65 72 69 61 6C 69 7A 61 74 69 6F 6E 20 69 73 20 6F 62 73 6F 6C 65 74 65 64 20 66 6F 72 20 74 68 69 73 20 74 79 70 65 2E 20 68 74 74 70 3A 2F 2F 67 6F 2E 6D 69 63 72 6F 73 6F 66 74 2E 63 6F 6D 2F 66 77 6C 69 6E 6B 2F 3F 6C 69 6E 6B 69 64 3D 31 34 32 30 32 00 00)
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Runtime.Serialization.ISerializable.GetObjectData(class [mscorlib]System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype [mscorlib]System.Runtime.Serialization.StreamingContext streamingContext)
		{
			.permissionset linkcheck = (00)
			.override [mscorlib]System.Runtime.Serialization.ISerializable::GetObjectData
			ret
		}
		.method family virtual hidebysig 
			instance void GetObjectData(class [mscorlib]System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype [mscorlib]System.Runtime.Serialization.StreamingContext streamingContext)
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance string get_ConnectionGroupName()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_ConnectionGroupName(string 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance int64 get_ContentLength()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_ContentLength(int64 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance string get_ContentType()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_ContentType(string 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class System.Net.ICredentials get_Credentials()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_Credentials(class System.Net.ICredentials 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class System.Net.WebHeaderCollection get_Headers()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance string get_Method()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_Method(string 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance bool get_PreAuthenticate()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_PreAuthenticate(bool 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class System.Net.IWebProxy get_Proxy()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_Proxy(class System.Net.IWebProxy 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance int32 get_Timeout()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_Timeout(int32 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class System.Uri get_RequestUri()
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [mscorlib]System.IAsyncResult BeginGetRequestStream(class [mscorlib]System.AsyncCallback callback, object state)
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public virtual hidebysig 
			instance class [mscorlib]System.IAsyncResult BeginGetResponse(class [mscorlib]System.AsyncCallback callback, object state)
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public virtual hidebysig 
			instance class [mscorlib]'System.IO.Stream' EndGetRequestStream(class [mscorlib]System.IAsyncResult asyncResult)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class System.Net.WebResponse EndGetResponse(class [mscorlib]System.IAsyncResult asyncResult)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [mscorlib]'System.IO.Stream' GetRequestStream()
		{
			ret
		}
		.method public virtual hidebysig 
			instance class System.Net.WebResponse GetResponse()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance bool get_UseDefaultCredentials()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_UseDefaultCredentials(bool 'value')
		{
			ret
		}
		.method public virtual hidebysig 
			instance void Abort()
		{
			ret
		}
		.property instance string ConnectionGroupName()
		{
			.get instance string System.Net.FileWebRequest::get_ConnectionGroupName()
			.set instance void System.Net.FileWebRequest::set_ConnectionGroupName(string)
		}
		.property instance int64 ContentLength()
		{
			.get instance int64 System.Net.FileWebRequest::get_ContentLength()
			.set instance void System.Net.FileWebRequest::set_ContentLength(int64)
		}
		.property instance string ContentType()
		{
			.get instance string System.Net.FileWebRequest::get_ContentType()
			.set instance void System.Net.FileWebRequest::set_ContentType(string)
		}
		.property instance class System.Net.ICredentials Credentials()
		{
			.get instance class System.Net.ICredentials System.Net.FileWebRequest::get_Credentials()
			.set instance void System.Net.FileWebRequest::set_Credentials(class System.Net.ICredentials)
		}
		.property instance class System.Net.WebHeaderCollection Headers()
		{
			.get instance class System.Net.WebHeaderCollection System.Net.FileWebRequest::get_Headers()
		}
		.property instance string Method()
		{
			.get instance string System.Net.FileWebRequest::get_Method()
			.set instance void System.Net.FileWebRequest::set_Method(string)
		}
		.property instance bool PreAuthenticate()
		{
			.get instance bool System.Net.FileWebRequest::get_PreAuthenticate()
			.set instance void System.Net.FileWebRequest::set_PreAuthenticate(bool)
		}
		.property instance class System.Net.IWebProxy Proxy()
		{
			.get instance class System.Net.IWebProxy System.Net.FileWebRequest::get_Proxy()
			.set instance void System.Net.FileWebRequest::set_Proxy(class System.Net.IWebProxy)
		}
		.property instance class System.Uri RequestUri()
		{
			.get instance class System.Uri System.Net.FileWebRequest::get_RequestUri()
		}
		.property instance int32 Timeout()
		{
			.get instance int32 System.Net.FileWebRequest::get_Timeout()
			.set instance void System.Net.FileWebRequest::set_Timeout(int32)
		}
		.property instance bool UseDefaultCredentials()
		{
			.get instance bool System.Net.FileWebRequest::get_UseDefaultCredentials()
			.set instance void System.Net.FileWebRequest::set_UseDefaultCredentials(bool)
		}
	}
	.class public serializable FileWebResponse
		extends System.Net.WebResponse
		implements [mscorlib]System.Runtime.Serialization.ISerializable
	{
		.method family hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype [mscorlib]System.Runtime.Serialization.StreamingContext streamingContext)
		{
			.custom instance void [mscorlib]System.ObsoleteAttribute::.ctor(string) = (01 00 56 53 65 72 69 61 6C 69 7A 61 74 69 6F 6E 20 69 73 20 6F 62 73 6F 6C 65 74 65 64 20 66 6F 72 20 74 68 69 73 20 74 79 70 65 2E 20 68 74 74 70 3A 2F 2F 67 6F 2E 6D 69 63 72 6F 73 6F 66 74 2E 63 6F 6D 2F 66 77 6C 69 6E 6B 2F 3F 6C 69 6E 6B 69 64 3D 31 34 32 30 32 00 00)
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Runtime.Serialization.ISerializable.GetObjectData(class [mscorlib]System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype [mscorlib]System.Runtime.Serialization.StreamingContext streamingContext)
		{
			.permissionset linkcheck = (00)
			.override [mscorlib]System.Runtime.Serialization.ISerializable::GetObjectData
			ret
		}
		.method family virtual hidebysig 
			instance void GetObjectData(class [mscorlib]System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype [mscorlib]System.Runtime.Serialization.StreamingContext streamingContext)
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance int64 get_ContentLength()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance string get_ContentType()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class System.Net.WebHeaderCollection get_Headers()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class System.Uri get_ResponseUri()
		{
			ret
		}
		.method public virtual hidebysig 
			instance void Close()
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [mscorlib]'System.IO.Stream' GetResponseStream()
		{
			ret
		}
		.property instance int64 ContentLength()
		{
			.get instance int64 System.Net.FileWebResponse::get_ContentLength()
		}
		.property instance string ContentType()
		{
			.get instance string System.Net.FileWebResponse::get_ContentType()
		}
		.property instance class System.Net.WebHeaderCollection Headers()
		{
			.get instance class System.Net.WebHeaderCollection System.Net.FileWebResponse::get_Headers()
		}
		.property instance class System.Uri ResponseUri()
		{
			.get instance class System.Uri System.Net.FileWebResponse::get_ResponseUri()
		}
	}
	.class public sealed FtpStatusCode
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype System.Net.FtpStatusCode AccountNeeded = int32(0x00000214)
		.field static public literal valuetype System.Net.FtpStatusCode ActionAbortedLocalProcessingError = int32(0x000001C3)
		.field static public literal valuetype System.Net.FtpStatusCode ActionAbortedUnknownPageType = int32(0x00000227)
		.field static public literal valuetype System.Net.FtpStatusCode ActionNotTakenFileUnavailable = int32(0x00000226)
		.field static public literal valuetype System.Net.FtpStatusCode ActionNotTakenFileUnavailableOrBusy = int32(0x000001C2)
		.field static public literal valuetype System.Net.FtpStatusCode ActionNotTakenFilenameNotAllowed = int32(0x00000229)
		.field static public literal valuetype System.Net.FtpStatusCode ActionNotTakenInsufficientSpace = int32(0x000001C4)
		.field static public literal valuetype System.Net.FtpStatusCode ArgumentSyntaxError = int32(0x000001F5)
		.field static public literal valuetype System.Net.FtpStatusCode BadCommandSequence = int32(0x000001F7)
		.field static public literal valuetype System.Net.FtpStatusCode CantOpenData = int32(0x000001A9)
		.field static public literal valuetype System.Net.FtpStatusCode ClosingControl = int32(0x000000DD)
		.field static public literal valuetype System.Net.FtpStatusCode ClosingData = int32(0x000000E2)
		.field static public literal valuetype System.Net.FtpStatusCode CommandExtraneous = int32(0x000000CA)
		.field static public literal valuetype System.Net.FtpStatusCode CommandNotImplemented = int32(0x000001F6)
		.field static public literal valuetype System.Net.FtpStatusCode CommandOK = int32(0x000000C8)
		.field static public literal valuetype System.Net.FtpStatusCode CommandSyntaxError = int32(0x000001F4)
		.field static public literal valuetype System.Net.FtpStatusCode ConnectionClosed = int32(0x000001AA)
		.field static public literal valuetype System.Net.FtpStatusCode DataAlreadyOpen = int32(0x0000007D)
		.field static public literal valuetype System.Net.FtpStatusCode DirectoryStatus = int32(0x000000D4)
		.field static public literal valuetype System.Net.FtpStatusCode EnteringPassive = int32(0x000000E3)
		.field static public literal valuetype System.Net.FtpStatusCode FileActionAborted = int32(0x00000228)
		.field static public literal valuetype System.Net.FtpStatusCode FileActionOK = int32(0x000000FA)
		.field static public literal valuetype System.Net.FtpStatusCode FileCommandPending = int32(0x0000015E)
		.field static public literal valuetype System.Net.FtpStatusCode FileStatus = int32(0x000000D5)
		.field static public literal valuetype System.Net.FtpStatusCode LoggedInProceed = int32(0x000000E6)
		.field static public literal valuetype System.Net.FtpStatusCode NeedLoginAccount = int32(0x0000014C)
		.field static public literal valuetype System.Net.FtpStatusCode NotLoggedIn = int32(0x00000212)
		.field static public literal valuetype System.Net.FtpStatusCode OpeningData = int32(0x00000096)
		.field static public literal valuetype System.Net.FtpStatusCode PathnameCreated = int32(0x00000101)
		.field static public literal valuetype System.Net.FtpStatusCode RestartMarker = int32(0x0000006E)
		.field static public literal valuetype System.Net.FtpStatusCode SendPasswordCommand = int32(0x0000014B)
		.field static public literal valuetype System.Net.FtpStatusCode SendUserCommand = int32(0x000000DC)
		.field static public literal valuetype System.Net.FtpStatusCode ServerWantsSecureSession = int32(0x000000EA)
		.field static public literal valuetype System.Net.FtpStatusCode ServiceNotAvailable = int32(0x000001A5)
		.field static public literal valuetype System.Net.FtpStatusCode ServiceTemporarilyNotAvailable = int32(0x00000078)
		.field static public literal valuetype System.Net.FtpStatusCode SystemType = int32(0x000000D7)
		.field static public literal valuetype System.Net.FtpStatusCode Undefined = int32(0x00000000)
	}
	.class public sealed FtpWebRequest
		extends System.Net.WebRequest
	{
		.method public static hidebysig specialname 
			class System.Net.Cache.RequestCachePolicy get_DefaultCachePolicy()
		{
			ret
		}
		.method public static hidebysig specialname 
			void set_DefaultCachePolicy(class System.Net.Cache.RequestCachePolicy 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance string get_Method()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_Method(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_RenameTo()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_RenameTo(string 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class System.Net.ICredentials get_Credentials()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_Credentials(class System.Net.ICredentials 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class System.Uri get_RequestUri()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance int32 get_Timeout()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_Timeout(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ReadWriteTimeout()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ReadWriteTimeout(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int64 get_ContentOffset()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ContentOffset(int64 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance int64 get_ContentLength()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_ContentLength(int64 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class System.Net.IWebProxy get_Proxy()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_Proxy(class System.Net.IWebProxy 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance string get_ConnectionGroupName()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_ConnectionGroupName(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Net.ServicePoint get_ServicePoint()
		{
			ret
		}
		.method public virtual hidebysig 
			instance class System.Net.WebResponse GetResponse()
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [mscorlib]System.IAsyncResult BeginGetResponse(class [mscorlib]System.AsyncCallback callback, object state)
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public virtual hidebysig 
			instance class System.Net.WebResponse EndGetResponse(class [mscorlib]System.IAsyncResult asyncResult)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [mscorlib]'System.IO.Stream' GetRequestStream()
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [mscorlib]System.IAsyncResult BeginGetRequestStream(class [mscorlib]System.AsyncCallback callback, object state)
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public virtual hidebysig 
			instance class [mscorlib]'System.IO.Stream' EndGetRequestStream(class [mscorlib]System.IAsyncResult asyncResult)
		{
			ret
		}
		.method public virtual hidebysig 
			instance void Abort()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_KeepAlive()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_KeepAlive(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_UseBinary()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_UseBinary(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_UsePassive()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_UsePassive(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_EnableSsl()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_EnableSsl(bool 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class System.Net.WebHeaderCollection get_Headers()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_Headers(class System.Net.WebHeaderCollection 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance string get_ContentType()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_ContentType(string 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance bool get_UseDefaultCredentials()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_UseDefaultCredentials(bool 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance bool get_PreAuthenticate()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_PreAuthenticate(bool 'value')
		{
			ret
		}
		.property instance string ConnectionGroupName()
		{
			.get instance string System.Net.FtpWebRequest::get_ConnectionGroupName()
			.set instance void System.Net.FtpWebRequest::set_ConnectionGroupName(string)
		}
		.property instance int64 ContentLength()
		{
			.get instance int64 System.Net.FtpWebRequest::get_ContentLength()
			.set instance void System.Net.FtpWebRequest::set_ContentLength(int64)
		}
		.property instance int64 ContentOffset()
		{
			.get instance int64 System.Net.FtpWebRequest::get_ContentOffset()
			.set instance void System.Net.FtpWebRequest::set_ContentOffset(int64)
		}
		.property instance string ContentType()
		{
			.get instance string System.Net.FtpWebRequest::get_ContentType()
			.set instance void System.Net.FtpWebRequest::set_ContentType(string)
		}
		.property instance class System.Net.ICredentials Credentials()
		{
			.get instance class System.Net.ICredentials System.Net.FtpWebRequest::get_Credentials()
			.set instance void System.Net.FtpWebRequest::set_Credentials(class System.Net.ICredentials)
		}
		.property class System.Net.Cache.RequestCachePolicy DefaultCachePolicy()
		{
			.get class System.Net.Cache.RequestCachePolicy System.Net.FtpWebRequest::get_DefaultCachePolicy()
			.set void System.Net.FtpWebRequest::set_DefaultCachePolicy(class System.Net.Cache.RequestCachePolicy)
		}
		.property instance bool EnableSsl()
		{
			.get instance bool System.Net.FtpWebRequest::get_EnableSsl()
			.set instance void System.Net.FtpWebRequest::set_EnableSsl(bool)
		}
		.property instance class System.Net.WebHeaderCollection Headers()
		{
			.get instance class System.Net.WebHeaderCollection System.Net.FtpWebRequest::get_Headers()
			.set instance void System.Net.FtpWebRequest::set_Headers(class System.Net.WebHeaderCollection)
		}
		.property instance bool KeepAlive()
		{
			.get instance bool System.Net.FtpWebRequest::get_KeepAlive()
			.set instance void System.Net.FtpWebRequest::set_KeepAlive(bool)
		}
		.property instance string Method()
		{
			.get instance string System.Net.FtpWebRequest::get_Method()
			.set instance void System.Net.FtpWebRequest::set_Method(string)
		}
		.property instance bool PreAuthenticate()
		{
			.get instance bool System.Net.FtpWebRequest::get_PreAuthenticate()
			.set instance void System.Net.FtpWebRequest::set_PreAuthenticate(bool)
		}
		.property instance class System.Net.IWebProxy Proxy()
		{
			.get instance class System.Net.IWebProxy System.Net.FtpWebRequest::get_Proxy()
			.set instance void System.Net.FtpWebRequest::set_Proxy(class System.Net.IWebProxy)
		}
		.property instance int32 ReadWriteTimeout()
		{
			.get instance int32 System.Net.FtpWebRequest::get_ReadWriteTimeout()
			.set instance void System.Net.FtpWebRequest::set_ReadWriteTimeout(int32)
		}
		.property instance string RenameTo()
		{
			.get instance string System.Net.FtpWebRequest::get_RenameTo()
			.set instance void System.Net.FtpWebRequest::set_RenameTo(string)
		}
		.property instance class System.Uri RequestUri()
		{
			.get instance class System.Uri System.Net.FtpWebRequest::get_RequestUri()
		}
		.property instance class System.Net.ServicePoint ServicePoint()
		{
			.get instance class System.Net.ServicePoint System.Net.FtpWebRequest::get_ServicePoint()
		}
		.property instance int32 Timeout()
		{
			.get instance int32 System.Net.FtpWebRequest::get_Timeout()
			.set instance void System.Net.FtpWebRequest::set_Timeout(int32)
		}
		.property instance bool UseBinary()
		{
			.get instance bool System.Net.FtpWebRequest::get_UseBinary()
			.set instance void System.Net.FtpWebRequest::set_UseBinary(bool)
		}
		.property instance bool UseDefaultCredentials()
		{
			.get instance bool System.Net.FtpWebRequest::get_UseDefaultCredentials()
			.set instance void System.Net.FtpWebRequest::set_UseDefaultCredentials(bool)
		}
		.property instance bool UsePassive()
		{
			.get instance bool System.Net.FtpWebRequest::get_UsePassive()
			.set instance void System.Net.FtpWebRequest::set_UsePassive(bool)
		}
	}
	.class public FtpWebResponse
		extends System.Net.WebResponse
		implements [mscorlib]System.IDisposable
	{
		.method public virtual hidebysig 
			instance class [mscorlib]'System.IO.Stream' GetResponseStream()
		{
			ret
		}
		.method public virtual hidebysig 
			instance void Close()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance int64 get_ContentLength()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class System.Net.WebHeaderCollection get_Headers()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class System.Uri get_ResponseUri()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype System.Net.FtpStatusCode get_StatusCode()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_StatusDescription()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [mscorlib]System.DateTime get_LastModified()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_BannerMessage()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_WelcomeMessage()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_ExitMessage()
		{
			ret
		}
		.property instance string BannerMessage()
		{
			.get instance string System.Net.FtpWebResponse::get_BannerMessage()
		}
		.property instance int64 ContentLength()
		{
			.get instance int64 System.Net.FtpWebResponse::get_ContentLength()
		}
		.property instance string ExitMessage()
		{
			.get instance string System.Net.FtpWebResponse::get_ExitMessage()
		}
		.property instance class System.Net.WebHeaderCollection Headers()
		{
			.get instance class System.Net.WebHeaderCollection System.Net.FtpWebResponse::get_Headers()
		}
		.property instance valuetype [mscorlib]System.DateTime LastModified()
		{
			.get instance valuetype [mscorlib]System.DateTime System.Net.FtpWebResponse::get_LastModified()
		}
		.property instance class System.Uri ResponseUri()
		{
			.get instance class System.Uri System.Net.FtpWebResponse::get_ResponseUri()
		}
		.property instance valuetype System.Net.FtpStatusCode StatusCode()
		{
			.get instance valuetype System.Net.FtpStatusCode System.Net.FtpWebResponse::get_StatusCode()
		}
		.property instance string StatusDescription()
		{
			.get instance string System.Net.FtpWebResponse::get_StatusDescription()
		}
		.property instance string WelcomeMessage()
		{
			.get instance string System.Net.FtpWebResponse::get_WelcomeMessage()
		}
	}
	.class public GlobalProxySelection
		extends [mscorlib]System.Object
	{
		.custom instance void [mscorlib]System.ObsoleteAttribute::.ctor(string) = (01 00 80 CE 54 68 69 73 20 63 6C 61 73 73 20 68 61 73 20 62 65 65 6E 20 64 65 70 72 65 63 61 74 65 64 2E 20 50 6C 65 61 73 65 20 75 73 65 20 57 65 62 52 65 71 75 65 73 74 2E 44 65 66 61 75 6C 74 57 65 62 50 72 6F 78 79 20 69 6E 73 74 65 61 64 20 74 6F 20 61 63 63 65 73 73 20 61 6E 64 20 73 65 74 20 74 68 65 20 67 6C 6F 62 61 6C 20 64 65 66 61 75 6C 74 20 70 72 6F 78 79 2E 20 55 73 65 20 27 6E 75 6C 6C 27 20 69 6E 73 74 65 61 64 20 6F 66 20 47 65 74 45 6D 70 74 79 57 65 62 50 72 6F 78 79 2E 20 68 74 74 70 3A 2F 2F 67 6F 2E 6D 69 63 72 6F 73 6F 66 74 2E 63 6F 6D 2F 66 77 6C 69 6E 6B 2F 3F 6C 69 6E 6B 69 64 3D 31 34 32 30 32 00 00)
		.method public static hidebysig specialname 
			class System.Net.IWebProxy get_Select()
		{
			ret
		}
		.method public static hidebysig specialname 
			void set_Select(class System.Net.IWebProxy 'value')
		{
			ret
		}
		.method public static hidebysig 
			class System.Net.IWebProxy GetEmptyWebProxy()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property class System.Net.IWebProxy Select()
		{
			.get class System.Net.IWebProxy System.Net.GlobalProxySelection::get_Select()
			.set void System.Net.GlobalProxySelection::set_Select(class System.Net.IWebProxy)
		}
	}
	.class public sealed HttpContinueDelegate
		extends [mscorlib]System.MulticastDelegate
	{
		.method public hidebysig specialname 
			instance void .ctor(object 'object', native int 'method')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void Invoke(int32 StatusCode, class System.Net.WebHeaderCollection httpHeaders)
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance class [mscorlib]System.IAsyncResult BeginInvoke(int32 StatusCode, class System.Net.WebHeaderCollection httpHeaders, class [mscorlib]System.AsyncCallback callback, object 'object')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void EndInvoke(class [mscorlib]System.IAsyncResult result)
			runtime 
		{
		}
	}
	.class public sealed HttpRequestHeader
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype System.Net.HttpRequestHeader Accept = int32(0x00000014)
		.field static public literal valuetype System.Net.HttpRequestHeader AcceptCharset = int32(0x00000015)
		.field static public literal valuetype System.Net.HttpRequestHeader AcceptEncoding = int32(0x00000016)
		.field static public literal valuetype System.Net.HttpRequestHeader AcceptLanguage = int32(0x00000017)
		.field static public literal valuetype System.Net.HttpRequestHeader Allow = int32(0x0000000A)
		.field static public literal valuetype System.Net.HttpRequestHeader Authorization = int32(0x00000018)
		.field static public literal valuetype System.Net.HttpRequestHeader CacheControl = int32(0x00000000)
		.field static public literal valuetype System.Net.HttpRequestHeader Connection = int32(0x00000001)
		.field static public literal valuetype System.Net.HttpRequestHeader ContentEncoding = int32(0x0000000D)
		.field static public literal valuetype System.Net.HttpRequestHeader ContentLanguage = int32(0x0000000E)
		.field static public literal valuetype System.Net.HttpRequestHeader ContentLength = int32(0x0000000B)
		.field static public literal valuetype System.Net.HttpRequestHeader ContentLocation = int32(0x0000000F)
		.field static public literal valuetype System.Net.HttpRequestHeader ContentMd5 = int32(0x00000010)
		.field static public literal valuetype System.Net.HttpRequestHeader ContentRange = int32(0x00000011)
		.field static public literal valuetype System.Net.HttpRequestHeader ContentType = int32(0x0000000C)
		.field static public literal valuetype System.Net.HttpRequestHeader Cookie = int32(0x00000019)
		.field static public literal valuetype System.Net.HttpRequestHeader Date = int32(0x00000002)
		.field static public literal valuetype System.Net.HttpRequestHeader Expect = int32(0x0000001A)
		.field static public literal valuetype System.Net.HttpRequestHeader Expires = int32(0x00000012)
		.field static public literal valuetype System.Net.HttpRequestHeader From = int32(0x0000001B)
		.field static public literal valuetype System.Net.HttpRequestHeader Host = int32(0x0000001C)
		.field static public literal valuetype System.Net.HttpRequestHeader IfMatch = int32(0x0000001D)
		.field static public literal valuetype System.Net.HttpRequestHeader IfModifiedSince = int32(0x0000001E)
		.field static public literal valuetype System.Net.HttpRequestHeader IfNoneMatch = int32(0x0000001F)
		.field static public literal valuetype System.Net.HttpRequestHeader IfRange = int32(0x00000020)
		.field static public literal valuetype System.Net.HttpRequestHeader IfUnmodifiedSince = int32(0x00000021)
		.field static public literal valuetype System.Net.HttpRequestHeader KeepAlive = int32(0x00000003)
		.field static public literal valuetype System.Net.HttpRequestHeader LastModified = int32(0x00000013)
		.field static public literal valuetype System.Net.HttpRequestHeader MaxForwards = int32(0x00000022)
		.field static public literal valuetype System.Net.HttpRequestHeader Pragma = int32(0x00000004)
		.field static public literal valuetype System.Net.HttpRequestHeader ProxyAuthorization = int32(0x00000023)
		.field static public literal valuetype System.Net.HttpRequestHeader Range = int32(0x00000025)
		.field static public literal valuetype System.Net.HttpRequestHeader Referer = int32(0x00000024)
		.field static public literal valuetype System.Net.HttpRequestHeader Te = int32(0x00000026)
		.field static public literal valuetype System.Net.HttpRequestHeader Trailer = int32(0x00000005)
		.field static public literal valuetype System.Net.HttpRequestHeader TransferEncoding = int32(0x00000006)
		.field static public literal valuetype System.Net.HttpRequestHeader Translate = int32(0x00000027)
		.field static public literal valuetype System.Net.HttpRequestHeader Upgrade = int32(0x00000007)
		.field static public literal valuetype System.Net.HttpRequestHeader UserAgent = int32(0x00000028)
		.field static public literal valuetype System.Net.HttpRequestHeader Via = int32(0x00000008)
		.field static public literal valuetype System.Net.HttpRequestHeader Warning = int32(0x00000009)
	}
	.class public sealed HttpResponseHeader
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype System.Net.HttpResponseHeader AcceptRanges = int32(0x00000014)
		.field static public literal valuetype System.Net.HttpResponseHeader Age = int32(0x00000015)
		.field static public literal valuetype System.Net.HttpResponseHeader Allow = int32(0x0000000A)
		.field static public literal valuetype System.Net.HttpResponseHeader CacheControl = int32(0x00000000)
		.field static public literal valuetype System.Net.HttpResponseHeader Connection = int32(0x00000001)
		.field static public literal valuetype System.Net.HttpResponseHeader ContentEncoding = int32(0x0000000D)
		.field static public literal valuetype System.Net.HttpResponseHeader ContentLanguage = int32(0x0000000E)
		.field static public literal valuetype System.Net.HttpResponseHeader ContentLength = int32(0x0000000B)
		.field static public literal valuetype System.Net.HttpResponseHeader ContentLocation = int32(0x0000000F)
		.field static public literal valuetype System.Net.HttpResponseHeader ContentMd5 = int32(0x00000010)
		.field static public literal valuetype System.Net.HttpResponseHeader ContentRange = int32(0x00000011)
		.field static public literal valuetype System.Net.HttpResponseHeader ContentType = int32(0x0000000C)
		.field static public literal valuetype System.Net.HttpResponseHeader Date = int32(0x00000002)
		.field static public literal valuetype System.Net.HttpResponseHeader ETag = int32(0x00000016)
		.field static public literal valuetype System.Net.HttpResponseHeader Expires = int32(0x00000012)
		.field static public literal valuetype System.Net.HttpResponseHeader KeepAlive = int32(0x00000003)
		.field static public literal valuetype System.Net.HttpResponseHeader LastModified = int32(0x00000013)
		.field static public literal valuetype System.Net.HttpResponseHeader Location = int32(0x00000017)
		.field static public literal valuetype System.Net.HttpResponseHeader Pragma = int32(0x00000004)
		.field static public literal valuetype System.Net.HttpResponseHeader ProxyAuthenticate = int32(0x00000018)
		.field static public literal valuetype System.Net.HttpResponseHeader RetryAfter = int32(0x00000019)
		.field static public literal valuetype System.Net.HttpResponseHeader Server = int32(0x0000001A)
		.field static public literal valuetype System.Net.HttpResponseHeader SetCookie = int32(0x0000001B)
		.field static public literal valuetype System.Net.HttpResponseHeader Trailer = int32(0x00000005)
		.field static public literal valuetype System.Net.HttpResponseHeader TransferEncoding = int32(0x00000006)
		.field static public literal valuetype System.Net.HttpResponseHeader Upgrade = int32(0x00000007)
		.field static public literal valuetype System.Net.HttpResponseHeader Vary = int32(0x0000001C)
		.field static public literal valuetype System.Net.HttpResponseHeader Via = int32(0x00000008)
		.field static public literal valuetype System.Net.HttpResponseHeader Warning = int32(0x00000009)
		.field static public literal valuetype System.Net.HttpResponseHeader WwwAuthenticate = int32(0x0000001D)
	}
	.class public sealed HttpStatusCode
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype System.Net.HttpStatusCode Accepted = int32(0x000000CA)
		.field static public literal valuetype System.Net.HttpStatusCode Ambiguous = int32(0x0000012C)
		.field static public literal valuetype System.Net.HttpStatusCode BadGateway = int32(0x000001F6)
		.field static public literal valuetype System.Net.HttpStatusCode BadRequest = int32(0x00000190)
		.field static public literal valuetype System.Net.HttpStatusCode Conflict = int32(0x00000199)
		.field static public literal valuetype System.Net.HttpStatusCode Continue = int32(0x00000064)
		.field static public literal valuetype System.Net.HttpStatusCode Created = int32(0x000000C9)
		.field static public literal valuetype System.Net.HttpStatusCode ExpectationFailed = int32(0x000001A1)
		.field static public literal valuetype System.Net.HttpStatusCode Forbidden = int32(0x00000193)
		.field static public literal valuetype System.Net.HttpStatusCode Found = int32(0x0000012E)
		.field static public literal valuetype System.Net.HttpStatusCode GatewayTimeout = int32(0x000001F8)
		.field static public literal valuetype System.Net.HttpStatusCode Gone = int32(0x0000019A)
		.field static public literal valuetype System.Net.HttpStatusCode HttpVersionNotSupported = int32(0x000001F9)
		.field static public literal valuetype System.Net.HttpStatusCode InternalServerError = int32(0x000001F4)
		.field static public literal valuetype System.Net.HttpStatusCode LengthRequired = int32(0x0000019B)
		.field static public literal valuetype System.Net.HttpStatusCode MethodNotAllowed = int32(0x00000195)
		.field static public literal valuetype System.Net.HttpStatusCode Moved = int32(0x0000012D)
		.field static public literal valuetype System.Net.HttpStatusCode MovedPermanently = int32(0x0000012D)
		.field static public literal valuetype System.Net.HttpStatusCode MultipleChoices = int32(0x0000012C)
		.field static public literal valuetype System.Net.HttpStatusCode NoContent = int32(0x000000CC)
		.field static public literal valuetype System.Net.HttpStatusCode NonAuthoritativeInformation = int32(0x000000CB)
		.field static public literal valuetype System.Net.HttpStatusCode NotAcceptable = int32(0x00000196)
		.field static public literal valuetype System.Net.HttpStatusCode NotFound = int32(0x00000194)
		.field static public literal valuetype System.Net.HttpStatusCode NotImplemented = int32(0x000001F5)
		.field static public literal valuetype System.Net.HttpStatusCode NotModified = int32(0x00000130)
		.field static public literal valuetype System.Net.HttpStatusCode OK = int32(0x000000C8)
		.field static public literal valuetype System.Net.HttpStatusCode PartialContent = int32(0x000000CE)
		.field static public literal valuetype System.Net.HttpStatusCode PaymentRequired = int32(0x00000192)
		.field static public literal valuetype System.Net.HttpStatusCode PreconditionFailed = int32(0x0000019C)
		.field static public literal valuetype System.Net.HttpStatusCode ProxyAuthenticationRequired = int32(0x00000197)
		.field static public literal valuetype System.Net.HttpStatusCode Redirect = int32(0x0000012E)
		.field static public literal valuetype System.Net.HttpStatusCode RedirectKeepVerb = int32(0x00000133)
		.field static public literal valuetype System.Net.HttpStatusCode RedirectMethod = int32(0x0000012F)
		.field static public literal valuetype System.Net.HttpStatusCode RequestEntityTooLarge = int32(0x0000019D)
		.field static public literal valuetype System.Net.HttpStatusCode RequestTimeout = int32(0x00000198)
		.field static public literal valuetype System.Net.HttpStatusCode RequestUriTooLong = int32(0x0000019E)
		.field static public literal valuetype System.Net.HttpStatusCode RequestedRangeNotSatisfiable = int32(0x000001A0)
		.field static public literal valuetype System.Net.HttpStatusCode ResetContent = int32(0x000000CD)
		.field static public literal valuetype System.Net.HttpStatusCode SeeOther = int32(0x0000012F)
		.field static public literal valuetype System.Net.HttpStatusCode ServiceUnavailable = int32(0x000001F7)
		.field static public literal valuetype System.Net.HttpStatusCode SwitchingProtocols = int32(0x00000065)
		.field static public literal valuetype System.Net.HttpStatusCode TemporaryRedirect = int32(0x00000133)
		.field static public literal valuetype System.Net.HttpStatusCode Unauthorized = int32(0x00000191)
		.field static public literal valuetype System.Net.HttpStatusCode UnsupportedMediaType = int32(0x0000019F)
		.field static public literal valuetype System.Net.HttpStatusCode Unused = int32(0x00000132)
		.field static public literal valuetype System.Net.HttpStatusCode UseProxy = int32(0x00000131)
	}
	.class public HttpVersion
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.field static public initonly class [mscorlib]System.Version Version10
		.field static public initonly class [mscorlib]System.Version Version11
	}
	.class public serializable HttpWebRequest
		extends System.Net.WebRequest
		implements [mscorlib]System.Runtime.Serialization.ISerializable
	{
		.method public hidebysig specialname 
			instance bool get_AllowAutoRedirect()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_AllowAutoRedirect(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_AllowWriteStreamBuffering()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_AllowWriteStreamBuffering(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_HaveResponse()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_KeepAlive()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_KeepAlive(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_Pipelined()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Pipelined(bool 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance bool get_PreAuthenticate()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_PreAuthenticate(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_UnsafeAuthenticatedConnectionSharing()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_UnsafeAuthenticatedConnectionSharing(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_SendChunked()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_SendChunked(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype System.Net.DecompressionMethods get_AutomaticDecompression()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_AutomaticDecompression(valuetype System.Net.DecompressionMethods 'value')
		{
			ret
		}
		.method public static hidebysig specialname 
			class System.Net.Cache.RequestCachePolicy get_DefaultCachePolicy()
		{
			ret
		}
		.method public static hidebysig specialname 
			void set_DefaultCachePolicy(class System.Net.Cache.RequestCachePolicy 'value')
		{
			ret
		}
		.method public static hidebysig specialname 
			int32 get_DefaultMaximumResponseHeadersLength()
		{
			ret
		}
		.method public static hidebysig specialname 
			void set_DefaultMaximumResponseHeadersLength(int32 'value')
		{
			ret
		}
		.method public static hidebysig specialname 
			int32 get_DefaultMaximumErrorResponseLength()
		{
			ret
		}
		.method public static hidebysig specialname 
			void set_DefaultMaximumErrorResponseLength(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_MaximumResponseHeadersLength()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_MaximumResponseHeadersLength(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Net.CookieContainer get_CookieContainer()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_CookieContainer(class System.Net.CookieContainer 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class System.Uri get_RequestUri()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance int64 get_ContentLength()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_ContentLength(int64 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance int32 get_Timeout()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_Timeout(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ReadWriteTimeout()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ReadWriteTimeout(int32 'value')
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [mscorlib]System.IAsyncResult BeginGetRequestStream(class [mscorlib]System.AsyncCallback callback, object state)
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public virtual hidebysig 
			instance class [mscorlib]'System.IO.Stream' EndGetRequestStream(class [mscorlib]System.IAsyncResult asyncResult)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [mscorlib]'System.IO.Stream' GetRequestStream()
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [mscorlib]System.IAsyncResult BeginGetResponse(class [mscorlib]System.AsyncCallback callback, object state)
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public virtual hidebysig 
			instance class System.Net.WebResponse EndGetResponse(class [mscorlib]System.IAsyncResult asyncResult)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class System.Net.WebResponse GetResponse()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Uri get_Address()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Net.HttpContinueDelegate get_ContinueDelegate()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ContinueDelegate(class System.Net.HttpContinueDelegate 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Net.ServicePoint get_ServicePoint()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_MaximumAutomaticRedirections()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_MaximumAutomaticRedirections(int32 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance string get_Method()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_Method(string 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class System.Net.ICredentials get_Credentials()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_Credentials(class System.Net.ICredentials 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance bool get_UseDefaultCredentials()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_UseDefaultCredentials(bool 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance string get_ConnectionGroupName()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_ConnectionGroupName(string 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class System.Net.WebHeaderCollection get_Headers()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_Headers(class System.Net.WebHeaderCollection 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class System.Net.IWebProxy get_Proxy()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_Proxy(class System.Net.IWebProxy 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]System.Version get_ProtocolVersion()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ProtocolVersion(class [mscorlib]System.Version 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance string get_ContentType()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_ContentType(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_MediaType()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_MediaType(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_TransferEncoding()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_TransferEncoding(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Connection()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Connection(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Accept()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Accept(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Referer()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Referer(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_UserAgent()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_UserAgent(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Expect()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Expect(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [mscorlib]System.DateTime get_IfModifiedSince()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_IfModifiedSince(valuetype [mscorlib]System.DateTime 'value')
		{
			ret
		}
		.method public virtual hidebysig 
			instance void Abort()
		{
			ret
		}
		.method family hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype [mscorlib]System.Runtime.Serialization.StreamingContext streamingContext)
		{
			.custom instance void [mscorlib]System.ObsoleteAttribute::.ctor(string) = (01 00 57 53 65 72 69 61 6C 69 7A 61 74 69 6F 6E 20 69 73 20 6F 62 73 6F 6C 65 74 65 64 20 66 6F 72 20 74 68 69 73 20 74 79 70 65 2E 20 20 68 74 74 70 3A 2F 2F 67 6F 2E 6D 69 63 72 6F 73 6F 66 74 2E 63 6F 6D 2F 66 77 6C 69 6E 6B 2F 3F 6C 69 6E 6B 69 64 3D 31 34 32 30 32 00 00)
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Runtime.Serialization.ISerializable.GetObjectData(class [mscorlib]System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype [mscorlib]System.Runtime.Serialization.StreamingContext streamingContext)
		{
			.permissionset linkcheck = (00)
			.override [mscorlib]System.Runtime.Serialization.ISerializable::GetObjectData
			ret
		}
		.method family virtual hidebysig 
			instance void GetObjectData(class [mscorlib]System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype [mscorlib]System.Runtime.Serialization.StreamingContext streamingContext)
		{
			ret
		}
		.method public hidebysig 
			instance void AddRange(int32 from, int32 'to')
		{
			ret
		}
		.method public hidebysig 
			instance void AddRange(int32 range)
		{
			ret
		}
		.method public hidebysig 
			instance void AddRange(string rangeSpecifier, int32 from, int32 'to')
		{
			ret
		}
		.method public hidebysig 
			instance void AddRange(string rangeSpecifier, int32 range)
		{
			ret
		}
		.property instance string Accept()
		{
			.get instance string System.Net.HttpWebRequest::get_Accept()
			.set instance void System.Net.HttpWebRequest::set_Accept(string)
		}
		.property instance class System.Uri Address()
		{
			.get instance class System.Uri System.Net.HttpWebRequest::get_Address()
		}
		.property instance bool AllowAutoRedirect()
		{
			.get instance bool System.Net.HttpWebRequest::get_AllowAutoRedirect()
			.set instance void System.Net.HttpWebRequest::set_AllowAutoRedirect(bool)
		}
		.property instance bool AllowWriteStreamBuffering()
		{
			.get instance bool System.Net.HttpWebRequest::get_AllowWriteStreamBuffering()
			.set instance void System.Net.HttpWebRequest::set_AllowWriteStreamBuffering(bool)
		}
		.property instance valuetype System.Net.DecompressionMethods AutomaticDecompression()
		{
			.get instance valuetype System.Net.DecompressionMethods System.Net.HttpWebRequest::get_AutomaticDecompression()
			.set instance void System.Net.HttpWebRequest::set_AutomaticDecompression(valuetype System.Net.DecompressionMethods)
		}
		.property instance string Connection()
		{
			.get instance string System.Net.HttpWebRequest::get_Connection()
			.set instance void System.Net.HttpWebRequest::set_Connection(string)
		}
		.property instance string ConnectionGroupName()
		{
			.get instance string System.Net.HttpWebRequest::get_ConnectionGroupName()
			.set instance void System.Net.HttpWebRequest::set_ConnectionGroupName(string)
		}
		.property instance int64 ContentLength()
		{
			.get instance int64 System.Net.HttpWebRequest::get_ContentLength()
			.set instance void System.Net.HttpWebRequest::set_ContentLength(int64)
		}
		.property instance string ContentType()
		{
			.get instance string System.Net.HttpWebRequest::get_ContentType()
			.set instance void System.Net.HttpWebRequest::set_ContentType(string)
		}
		.property instance class System.Net.HttpContinueDelegate ContinueDelegate()
		{
			.get instance class System.Net.HttpContinueDelegate System.Net.HttpWebRequest::get_ContinueDelegate()
			.set instance void System.Net.HttpWebRequest::set_ContinueDelegate(class System.Net.HttpContinueDelegate)
		}
		.property instance class System.Net.CookieContainer CookieContainer()
		{
			.get instance class System.Net.CookieContainer System.Net.HttpWebRequest::get_CookieContainer()
			.set instance void System.Net.HttpWebRequest::set_CookieContainer(class System.Net.CookieContainer)
		}
		.property instance class System.Net.ICredentials Credentials()
		{
			.get instance class System.Net.ICredentials System.Net.HttpWebRequest::get_Credentials()
			.set instance void System.Net.HttpWebRequest::set_Credentials(class System.Net.ICredentials)
		}
		.property class System.Net.Cache.RequestCachePolicy DefaultCachePolicy()
		{
			.get class System.Net.Cache.RequestCachePolicy System.Net.HttpWebRequest::get_DefaultCachePolicy()
			.set void System.Net.HttpWebRequest::set_DefaultCachePolicy(class System.Net.Cache.RequestCachePolicy)
		}
		.property int32 DefaultMaximumErrorResponseLength()
		{
			.get int32 System.Net.HttpWebRequest::get_DefaultMaximumErrorResponseLength()
			.set void System.Net.HttpWebRequest::set_DefaultMaximumErrorResponseLength(int32)
		}
		.property int32 DefaultMaximumResponseHeadersLength()
		{
			.get int32 System.Net.HttpWebRequest::get_DefaultMaximumResponseHeadersLength()
			.set void System.Net.HttpWebRequest::set_DefaultMaximumResponseHeadersLength(int32)
		}
		.property instance string Expect()
		{
			.get instance string System.Net.HttpWebRequest::get_Expect()
			.set instance void System.Net.HttpWebRequest::set_Expect(string)
		}
		.property instance bool HaveResponse()
		{
			.get instance bool System.Net.HttpWebRequest::get_HaveResponse()
		}
		.property instance class System.Net.WebHeaderCollection Headers()
		{
			.get instance class System.Net.WebHeaderCollection System.Net.HttpWebRequest::get_Headers()
			.set instance void System.Net.HttpWebRequest::set_Headers(class System.Net.WebHeaderCollection)
		}
		.property instance valuetype [mscorlib]System.DateTime IfModifiedSince()
		{
			.get instance valuetype [mscorlib]System.DateTime System.Net.HttpWebRequest::get_IfModifiedSince()
			.set instance void System.Net.HttpWebRequest::set_IfModifiedSince(valuetype [mscorlib]System.DateTime)
		}
		.property instance bool KeepAlive()
		{
			.get instance bool System.Net.HttpWebRequest::get_KeepAlive()
			.set instance void System.Net.HttpWebRequest::set_KeepAlive(bool)
		}
		.property instance int32 MaximumAutomaticRedirections()
		{
			.get instance int32 System.Net.HttpWebRequest::get_MaximumAutomaticRedirections()
			.set instance void System.Net.HttpWebRequest::set_MaximumAutomaticRedirections(int32)
		}
		.property instance int32 MaximumResponseHeadersLength()
		{
			.get instance int32 System.Net.HttpWebRequest::get_MaximumResponseHeadersLength()
			.set instance void System.Net.HttpWebRequest::set_MaximumResponseHeadersLength(int32)
		}
		.property instance string MediaType()
		{
			.get instance string System.Net.HttpWebRequest::get_MediaType()
			.set instance void System.Net.HttpWebRequest::set_MediaType(string)
		}
		.property instance string Method()
		{
			.get instance string System.Net.HttpWebRequest::get_Method()
			.set instance void System.Net.HttpWebRequest::set_Method(string)
		}
		.property instance bool Pipelined()
		{
			.get instance bool System.Net.HttpWebRequest::get_Pipelined()
			.set instance void System.Net.HttpWebRequest::set_Pipelined(bool)
		}
		.property instance bool PreAuthenticate()
		{
			.get instance bool System.Net.HttpWebRequest::get_PreAuthenticate()
			.set instance void System.Net.HttpWebRequest::set_PreAuthenticate(bool)
		}
		.property instance class [mscorlib]System.Version ProtocolVersion()
		{
			.get instance class [mscorlib]System.Version System.Net.HttpWebRequest::get_ProtocolVersion()
			.set instance void System.Net.HttpWebRequest::set_ProtocolVersion(class [mscorlib]System.Version)
		}
		.property instance class System.Net.IWebProxy Proxy()
		{
			.get instance class System.Net.IWebProxy System.Net.HttpWebRequest::get_Proxy()
			.set instance void System.Net.HttpWebRequest::set_Proxy(class System.Net.IWebProxy)
		}
		.property instance int32 ReadWriteTimeout()
		{
			.get instance int32 System.Net.HttpWebRequest::get_ReadWriteTimeout()
			.set instance void System.Net.HttpWebRequest::set_ReadWriteTimeout(int32)
		}
		.property instance string Referer()
		{
			.get instance string System.Net.HttpWebRequest::get_Referer()
			.set instance void System.Net.HttpWebRequest::set_Referer(string)
		}
		.property instance class System.Uri RequestUri()
		{
			.get instance class System.Uri System.Net.HttpWebRequest::get_RequestUri()
		}
		.property instance bool SendChunked()
		{
			.get instance bool System.Net.HttpWebRequest::get_SendChunked()
			.set instance void System.Net.HttpWebRequest::set_SendChunked(bool)
		}
		.property instance class System.Net.ServicePoint ServicePoint()
		{
			.get instance class System.Net.ServicePoint System.Net.HttpWebRequest::get_ServicePoint()
		}
		.property instance int32 Timeout()
		{
			.get instance int32 System.Net.HttpWebRequest::get_Timeout()
			.set instance void System.Net.HttpWebRequest::set_Timeout(int32)
		}
		.property instance string TransferEncoding()
		{
			.get instance string System.Net.HttpWebRequest::get_TransferEncoding()
			.set instance void System.Net.HttpWebRequest::set_TransferEncoding(string)
		}
		.property instance bool UnsafeAuthenticatedConnectionSharing()
		{
			.get instance bool System.Net.HttpWebRequest::get_UnsafeAuthenticatedConnectionSharing()
			.set instance void System.Net.HttpWebRequest::set_UnsafeAuthenticatedConnectionSharing(bool)
		}
		.property instance bool UseDefaultCredentials()
		{
			.get instance bool System.Net.HttpWebRequest::get_UseDefaultCredentials()
			.set instance void System.Net.HttpWebRequest::set_UseDefaultCredentials(bool)
		}
		.property instance string UserAgent()
		{
			.get instance string System.Net.HttpWebRequest::get_UserAgent()
			.set instance void System.Net.HttpWebRequest::set_UserAgent(string)
		}
	}
	.class public serializable HttpWebResponse
		extends System.Net.WebResponse
		implements [mscorlib]System.Runtime.Serialization.ISerializable
	{
		.method public virtual hidebysig specialname 
			instance bool get_IsMutuallyAuthenticated()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Net.CookieCollection get_Cookies()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Cookies(class System.Net.CookieCollection 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class System.Net.WebHeaderCollection get_Headers()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance int64 get_ContentLength()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_ContentEncoding()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance string get_ContentType()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_CharacterSet()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Server()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [mscorlib]System.DateTime get_LastModified()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype System.Net.HttpStatusCode get_StatusCode()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_StatusDescription()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]System.Version get_ProtocolVersion()
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [mscorlib]'System.IO.Stream' GetResponseStream()
		{
			ret
		}
		.method public virtual hidebysig 
			instance void Close()
		{
			ret
		}
		.method family hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype [mscorlib]System.Runtime.Serialization.StreamingContext streamingContext)
		{
			.custom instance void [mscorlib]System.ObsoleteAttribute::.ctor(string) = (01 00 57 53 65 72 69 61 6C 69 7A 61 74 69 6F 6E 20 69 73 20 6F 62 73 6F 6C 65 74 65 64 20 66 6F 72 20 74 68 69 73 20 74 79 70 65 2E 20 20 68 74 74 70 3A 2F 2F 67 6F 2E 6D 69 63 72 6F 73 6F 66 74 2E 63 6F 6D 2F 66 77 6C 69 6E 6B 2F 3F 6C 69 6E 6B 69 64 3D 31 34 32 30 32 00 00)
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Runtime.Serialization.ISerializable.GetObjectData(class [mscorlib]System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype [mscorlib]System.Runtime.Serialization.StreamingContext streamingContext)
		{
			.permissionset linkcheck = (00)
			.override [mscorlib]System.Runtime.Serialization.ISerializable::GetObjectData
			ret
		}
		.method family virtual hidebysig 
			instance void GetObjectData(class [mscorlib]System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype [mscorlib]System.Runtime.Serialization.StreamingContext streamingContext)
		{
			ret
		}
		.method public hidebysig 
			instance string GetResponseHeader(string headerName)
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class System.Uri get_ResponseUri()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Method()
		{
			ret
		}
		.property instance string CharacterSet()
		{
			.get instance string System.Net.HttpWebResponse::get_CharacterSet()
		}
		.property instance string ContentEncoding()
		{
			.get instance string System.Net.HttpWebResponse::get_ContentEncoding()
		}
		.property instance int64 ContentLength()
		{
			.get instance int64 System.Net.HttpWebResponse::get_ContentLength()
		}
		.property instance string ContentType()
		{
			.get instance string System.Net.HttpWebResponse::get_ContentType()
		}
		.property instance class System.Net.CookieCollection Cookies()
		{
			.get instance class System.Net.CookieCollection System.Net.HttpWebResponse::get_Cookies()
			.set instance void System.Net.HttpWebResponse::set_Cookies(class System.Net.CookieCollection)
		}
		.property instance class System.Net.WebHeaderCollection Headers()
		{
			.get instance class System.Net.WebHeaderCollection System.Net.HttpWebResponse::get_Headers()
		}
		.property instance bool IsMutuallyAuthenticated()
		{
			.get instance bool System.Net.HttpWebResponse::get_IsMutuallyAuthenticated()
		}
		.property instance valuetype [mscorlib]System.DateTime LastModified()
		{
			.get instance valuetype [mscorlib]System.DateTime System.Net.HttpWebResponse::get_LastModified()
		}
		.property instance string Method()
		{
			.get instance string System.Net.HttpWebResponse::get_Method()
		}
		.property instance class [mscorlib]System.Version ProtocolVersion()
		{
			.get instance class [mscorlib]System.Version System.Net.HttpWebResponse::get_ProtocolVersion()
		}
		.property instance class System.Uri ResponseUri()
		{
			.get instance class System.Uri System.Net.HttpWebResponse::get_ResponseUri()
		}
		.property instance string Server()
		{
			.get instance string System.Net.HttpWebResponse::get_Server()
		}
		.property instance valuetype System.Net.HttpStatusCode StatusCode()
		{
			.get instance valuetype System.Net.HttpStatusCode System.Net.HttpWebResponse::get_StatusCode()
		}
		.property instance string StatusDescription()
		{
			.get instance string System.Net.HttpWebResponse::get_StatusDescription()
		}
	}
	.class public interface abstract IAuthenticationModule
	{
		.method public virtual hidebysig newslot abstract 
			instance class System.Net.Authorization Authenticate(string challenge, class System.Net.WebRequest 'request', class System.Net.ICredentials credentials)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class System.Net.Authorization PreAuthenticate(class System.Net.WebRequest 'request', class System.Net.ICredentials credentials)
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance bool get_CanPreAuthenticate()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance string get_AuthenticationType()
		{
		}
		.property instance string AuthenticationType()
		{
			.get instance string System.Net.IAuthenticationModule::get_AuthenticationType()
		}
		.property instance bool CanPreAuthenticate()
		{
			.get instance bool System.Net.IAuthenticationModule::get_CanPreAuthenticate()
		}
	}
	.class public interface abstract ICredentialPolicy
	{
		.method public virtual hidebysig newslot abstract 
			instance bool ShouldSendCredential(class System.Uri challengeUri, class System.Net.WebRequest 'request', class System.Net.NetworkCredential credential, class System.Net.IAuthenticationModule authenticationModule)
		{
		}
	}
	.class public interface abstract ICredentials
	{
		.method public virtual hidebysig newslot abstract 
			instance class System.Net.NetworkCredential GetCredential(class System.Uri uri, string authType)
		{
		}
	}
	.class public interface abstract ICredentialsByHost
	{
		.method public virtual hidebysig newslot abstract 
			instance class System.Net.NetworkCredential GetCredential(string host, int32 port, string authenticationType)
		{
		}
	}
	.class public serializable IPAddress
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance void .ctor(int64 newAddress)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(uint8[] address, int64 scopeid)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(uint8[] address)
		{
			ret
		}
		.method public static hidebysig 
			bool TryParse(string ipString, [out] class System.Net.IPAddress& address)
		{
			ret
		}
		.method public static hidebysig 
			class System.Net.IPAddress Parse(string ipString)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int64 get_Address()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Address(int64 'value')
		{
			ret
		}
		.method public hidebysig 
			instance uint8[] GetAddressBytes()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype System.Net.Sockets.AddressFamily get_AddressFamily()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int64 get_ScopeId()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ScopeId(int64 'value')
		{
			ret
		}
		.method public virtual hidebysig 
			instance string ToString()
		{
			ret
		}
		.method public static hidebysig 
			int64 HostToNetworkOrder(int64 host)
		{
			ret
		}
		.method public static hidebysig 
			int32 HostToNetworkOrder(int32 host)
		{
			ret
		}
		.method public static hidebysig 
			int16 HostToNetworkOrder(int16 host)
		{
			ret
		}
		.method public static hidebysig 
			int64 NetworkToHostOrder(int64 network)
		{
			ret
		}
		.method public static hidebysig 
			int32 NetworkToHostOrder(int32 network)
		{
			ret
		}
		.method public static hidebysig 
			int16 NetworkToHostOrder(int16 network)
		{
			ret
		}
		.method public static hidebysig 
			bool IsLoopback(class System.Net.IPAddress address)
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsIPv6Multicast()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsIPv6LinkLocal()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsIPv6SiteLocal()
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool Equals(object comparand)
		{
			ret
		}
		.method public virtual hidebysig 
			instance int32 GetHashCode()
		{
			ret
		}
		.field static public initonly class System.Net.IPAddress Any
		.field static public initonly class System.Net.IPAddress Broadcast
		.field static public initonly class System.Net.IPAddress IPv6Any
		.field static public initonly class System.Net.IPAddress IPv6Loopback
		.field static public initonly class System.Net.IPAddress IPv6None
		.field static public initonly class System.Net.IPAddress Loopback
		.field static public initonly class System.Net.IPAddress None
		.property instance int64 Address()
		{
			.custom instance void [mscorlib]System.ObsoleteAttribute::.ctor(string) = (01 00 80 AA 54 68 69 73 20 70 72 6F 70 65 72 74 79 20 68 61 73 20 62 65 65 6E 20 64 65 70 72 65 63 61 74 65 64 2E 20 49 74 20 69 73 20 61 64 64 72 65 73 73 20 66 61 6D 69 6C 79 20 64 65 70 65 6E 64 65 6E 74 2E 20 50 6C 65 61 73 65 20 75 73 65 20 49 50 41 64 64 72 65 73 73 2E 45 71 75 61 6C 73 20 6D 65 74 68 6F 64 20 74 6F 20 70 65 72 66 6F 72 6D 20 63 6F 6D 70 61 72 69 73 6F 6E 73 2E 20 68 74 74 70 3A 2F 2F 67 6F 2E 6D 69 63 72 6F 73 6F 66 74 2E 63 6F 6D 2F 66 77 6C 69 6E 6B 2F 3F 6C 69 6E 6B 69 64 3D 31 34 32 30 32 00 00)
			.get instance int64 System.Net.IPAddress::get_Address()
			.set instance void System.Net.IPAddress::set_Address(int64)
		}
		.property instance valuetype System.Net.Sockets.AddressFamily AddressFamily()
		{
			.get instance valuetype System.Net.Sockets.AddressFamily System.Net.IPAddress::get_AddressFamily()
		}
		.property instance bool IsIPv6LinkLocal()
		{
			.get instance bool System.Net.IPAddress::get_IsIPv6LinkLocal()
		}
		.property instance bool IsIPv6Multicast()
		{
			.get instance bool System.Net.IPAddress::get_IsIPv6Multicast()
		}
		.property instance bool IsIPv6SiteLocal()
		{
			.get instance bool System.Net.IPAddress::get_IsIPv6SiteLocal()
		}
		.property instance int64 ScopeId()
		{
			.get instance int64 System.Net.IPAddress::get_ScopeId()
			.set instance void System.Net.IPAddress::set_ScopeId(int64)
		}
	}
	.class public serializable IPEndPoint
		extends System.Net.EndPoint
	{
		.method public virtual hidebysig specialname 
			instance valuetype System.Net.Sockets.AddressFamily get_AddressFamily()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(int64 address, int32 port)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class System.Net.IPAddress address, int32 port)
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Net.IPAddress get_Address()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Address(class System.Net.IPAddress 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_Port()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Port(int32 'value')
		{
			ret
		}
		.method public virtual hidebysig 
			instance string ToString()
		{
			ret
		}
		.method public virtual hidebysig 
			instance class System.Net.SocketAddress Serialize()
		{
			ret
		}
		.method public virtual hidebysig 
			instance class System.Net.EndPoint Create(class System.Net.SocketAddress socketAddress)
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool Equals(object comparand)
		{
			ret
		}
		.method public virtual hidebysig 
			instance int32 GetHashCode()
		{
			ret
		}
		.field static public literal int32 MaxPort = int32(0x0000FFFF)
		.field static public literal int32 MinPort = int32(0x00000000)
		.property instance class System.Net.IPAddress Address()
		{
			.get instance class System.Net.IPAddress System.Net.IPEndPoint::get_Address()
			.set instance void System.Net.IPEndPoint::set_Address(class System.Net.IPAddress)
		}
		.property instance valuetype System.Net.Sockets.AddressFamily AddressFamily()
		{
			.get instance valuetype System.Net.Sockets.AddressFamily System.Net.IPEndPoint::get_AddressFamily()
		}
		.property instance int32 Port()
		{
			.get instance int32 System.Net.IPEndPoint::get_Port()
			.set instance void System.Net.IPEndPoint::set_Port(int32)
		}
	}
	.class public IPHostEntry
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance string get_HostName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_HostName(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string[] get_Aliases()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Aliases(string[] 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Net.IPAddress[] get_AddressList()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_AddressList(class System.Net.IPAddress[] 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance class System.Net.IPAddress[] AddressList()
		{
			.get instance class System.Net.IPAddress[] System.Net.IPHostEntry::get_AddressList()
			.set instance void System.Net.IPHostEntry::set_AddressList(class System.Net.IPAddress[])
		}
		.property instance string[] Aliases()
		{
			.get instance string[] System.Net.IPHostEntry::get_Aliases()
			.set instance void System.Net.IPHostEntry::set_Aliases(string[])
		}
		.property instance string HostName()
		{
			.get instance string System.Net.IPHostEntry::get_HostName()
			.set instance void System.Net.IPHostEntry::set_HostName(string)
		}
	}
	.class public interface abstract IWebProxy
	{
		.method public virtual hidebysig newslot abstract 
			instance class System.Uri GetProxy(class System.Uri destination)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance bool IsBypassed(class System.Uri host)
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance class System.Net.ICredentials get_Credentials()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void set_Credentials(class System.Net.ICredentials 'value')
		{
		}
		.property instance class System.Net.ICredentials Credentials()
		{
			.get instance class System.Net.ICredentials System.Net.IWebProxy::get_Credentials()
			.set instance void System.Net.IWebProxy::set_Credentials(class System.Net.ICredentials)
		}
	}
	.class public interface abstract IWebProxyScript
	{
		.method public virtual hidebysig newslot abstract 
			instance bool Load(class System.Uri scriptLocation, string script, class [mscorlib]System.Type helperType)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance string Run(string url, string host)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void Close()
		{
		}
	}
	.class public interface abstract IWebRequestCreate
	{
		.method public virtual hidebysig newslot abstract 
			instance class System.Net.WebRequest Create(class System.Uri uri)
		{
		}
	}
	.class public sealed NetworkAccess
		extends [mscorlib]System.Enum
	{
		.custom instance void [mscorlib]System.FlagsAttribute::.ctor() = (01 00 00 00)
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype System.Net.NetworkAccess Accept = int32(0x00000080)
		.field static public literal valuetype System.Net.NetworkAccess Connect = int32(0x00000040)
	}
	.class public NetworkCredential
		extends [mscorlib]System.Object
		implements System.Net.ICredentials, System.Net.ICredentialsByHost
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string userName, string password)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string userName, string password, string domain)
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_UserName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_UserName(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Password()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Password(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Domain()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Domain(string 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance class System.Net.NetworkCredential GetCredential(class System.Uri uri, string authType)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance class System.Net.NetworkCredential GetCredential(string host, int32 port, string authenticationType)
		{
			ret
		}
		.property instance string Domain()
		{
			.get instance string System.Net.NetworkCredential::get_Domain()
			.set instance void System.Net.NetworkCredential::set_Domain(string)
		}
		.property instance string Password()
		{
			.get instance string System.Net.NetworkCredential::get_Password()
			.set instance void System.Net.NetworkCredential::set_Password(string)
		}
		.property instance string UserName()
		{
			.get instance string System.Net.NetworkCredential::get_UserName()
			.set instance void System.Net.NetworkCredential::set_UserName(string)
		}
	}
	.class public OpenReadCompletedEventArgs
		extends System.ComponentModel.AsyncCompletedEventArgs
	{
		.method public hidebysig specialname 
			instance class [mscorlib]'System.IO.Stream' get_Result()
		{
			ret
		}
		.property instance class [mscorlib]'System.IO.Stream' Result()
		{
			.get instance class [mscorlib]'System.IO.Stream' System.Net.OpenReadCompletedEventArgs::get_Result()
		}
	}
	.class public sealed OpenReadCompletedEventHandler
		extends [mscorlib]System.MulticastDelegate
	{
		.method public hidebysig specialname 
			instance void .ctor(object 'object', native int 'method')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void Invoke(object sender, class System.Net.OpenReadCompletedEventArgs e)
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance class [mscorlib]System.IAsyncResult BeginInvoke(object sender, class System.Net.OpenReadCompletedEventArgs e, class [mscorlib]System.AsyncCallback callback, object 'object')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void EndInvoke(class [mscorlib]System.IAsyncResult result)
			runtime 
		{
		}
	}
	.class public OpenWriteCompletedEventArgs
		extends System.ComponentModel.AsyncCompletedEventArgs
	{
		.method public hidebysig specialname 
			instance class [mscorlib]'System.IO.Stream' get_Result()
		{
			ret
		}
		.property instance class [mscorlib]'System.IO.Stream' Result()
		{
			.get instance class [mscorlib]'System.IO.Stream' System.Net.OpenWriteCompletedEventArgs::get_Result()
		}
	}
	.class public sealed OpenWriteCompletedEventHandler
		extends [mscorlib]System.MulticastDelegate
	{
		.method public hidebysig specialname 
			instance void .ctor(object 'object', native int 'method')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void Invoke(object sender, class System.Net.OpenWriteCompletedEventArgs e)
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance class [mscorlib]System.IAsyncResult BeginInvoke(object sender, class System.Net.OpenWriteCompletedEventArgs e, class [mscorlib]System.AsyncCallback callback, object 'object')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void EndInvoke(class [mscorlib]System.IAsyncResult result)
			runtime 
		{
		}
	}
	.class public serializable ProtocolViolationException
		extends [mscorlib]System.InvalidOperationException
		implements [mscorlib]System.Runtime.Serialization.ISerializable
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string message)
		{
			ret
		}
		.method family hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype [mscorlib]System.Runtime.Serialization.StreamingContext streamingContext)
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Runtime.Serialization.ISerializable.GetObjectData(class [mscorlib]System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype [mscorlib]System.Runtime.Serialization.StreamingContext streamingContext)
		{
			.permissionset linkcheck = (00)
			.override [mscorlib]System.Runtime.Serialization.ISerializable::GetObjectData
			ret
		}
		.method public virtual hidebysig 
			instance void GetObjectData(class [mscorlib]System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype [mscorlib]System.Runtime.Serialization.StreamingContext streamingContext)
		{
			.permissionset linkcheck = (00)
			ret
		}
	}
	.class public ServicePoint
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance class System.Net.BindIPEndPoint get_BindIPEndPointDelegate()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BindIPEndPointDelegate(class System.Net.BindIPEndPoint 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ConnectionLeaseTimeout()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ConnectionLeaseTimeout(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Uri get_Address()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_MaxIdleTime()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_MaxIdleTime(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_UseNagleAlgorithm()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_UseNagleAlgorithm(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ReceiveBufferSize()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ReceiveBufferSize(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Expect100Continue(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_Expect100Continue()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [mscorlib]System.DateTime get_IdleSince()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance class [mscorlib]System.Version get_ProtocolVersion()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_ConnectionName()
		{
			ret
		}
		.method public hidebysig 
			instance bool CloseConnectionGroup(string connectionGroupName)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ConnectionLimit()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ConnectionLimit(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_CurrentConnections()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_SupportsPipelining()
		{
			ret
		}
		.property instance class System.Uri Address()
		{
			.get instance class System.Uri System.Net.ServicePoint::get_Address()
		}
		.property instance class System.Net.BindIPEndPoint BindIPEndPointDelegate()
		{
			.get instance class System.Net.BindIPEndPoint System.Net.ServicePoint::get_BindIPEndPointDelegate()
			.set instance void System.Net.ServicePoint::set_BindIPEndPointDelegate(class System.Net.BindIPEndPoint)
		}
		.property instance int32 ConnectionLeaseTimeout()
		{
			.get instance int32 System.Net.ServicePoint::get_ConnectionLeaseTimeout()
			.set instance void System.Net.ServicePoint::set_ConnectionLeaseTimeout(int32)
		}
		.property instance int32 ConnectionLimit()
		{
			.get instance int32 System.Net.ServicePoint::get_ConnectionLimit()
			.set instance void System.Net.ServicePoint::set_ConnectionLimit(int32)
		}
		.property instance string ConnectionName()
		{
			.get instance string System.Net.ServicePoint::get_ConnectionName()
		}
		.property instance int32 CurrentConnections()
		{
			.get instance int32 System.Net.ServicePoint::get_CurrentConnections()
		}
		.property instance bool Expect100Continue()
		{
			.get instance bool System.Net.ServicePoint::get_Expect100Continue()
			.set instance void System.Net.ServicePoint::set_Expect100Continue(bool)
		}
		.property instance valuetype [mscorlib]System.DateTime IdleSince()
		{
			.get instance valuetype [mscorlib]System.DateTime System.Net.ServicePoint::get_IdleSince()
		}
		.property instance int32 MaxIdleTime()
		{
			.get instance int32 System.Net.ServicePoint::get_MaxIdleTime()
			.set instance void System.Net.ServicePoint::set_MaxIdleTime(int32)
		}
		.property instance class [mscorlib]System.Version ProtocolVersion()
		{
			.get instance class [mscorlib]System.Version System.Net.ServicePoint::get_ProtocolVersion()
		}
		.property instance int32 ReceiveBufferSize()
		{
			.get instance int32 System.Net.ServicePoint::get_ReceiveBufferSize()
			.set instance void System.Net.ServicePoint::set_ReceiveBufferSize(int32)
		}
		.property instance bool SupportsPipelining()
		{
			.get instance bool System.Net.ServicePoint::get_SupportsPipelining()
		}
		.property instance bool UseNagleAlgorithm()
		{
			.get instance bool System.Net.ServicePoint::get_UseNagleAlgorithm()
			.set instance void System.Net.ServicePoint::set_UseNagleAlgorithm(bool)
		}
	}
	.class public ServicePointManager
		extends [mscorlib]System.Object
	{
		.method public static hidebysig specialname 
			int32 get_MaxServicePoints()
		{
			ret
		}
		.method public static hidebysig specialname 
			void set_MaxServicePoints(int32 'value')
		{
			ret
		}
		.method public static hidebysig specialname 
			int32 get_DefaultConnectionLimit()
		{
			ret
		}
		.method public static hidebysig specialname 
			void set_DefaultConnectionLimit(int32 'value')
		{
			ret
		}
		.method public static hidebysig specialname 
			int32 get_MaxServicePointIdleTime()
		{
			ret
		}
		.method public static hidebysig specialname 
			void set_MaxServicePointIdleTime(int32 'value')
		{
			ret
		}
		.method public static hidebysig specialname 
			bool get_UseNagleAlgorithm()
		{
			ret
		}
		.method public static hidebysig specialname 
			void set_UseNagleAlgorithm(bool 'value')
		{
			ret
		}
		.method public static hidebysig specialname 
			bool get_Expect100Continue()
		{
			ret
		}
		.method public static hidebysig specialname 
			void set_Expect100Continue(bool 'value')
		{
			ret
		}
		.method public static hidebysig specialname 
			bool get_EnableDnsRoundRobin()
		{
			ret
		}
		.method public static hidebysig specialname 
			void set_EnableDnsRoundRobin(bool 'value')
		{
			ret
		}
		.method public static hidebysig specialname 
			int32 get_DnsRefreshTimeout()
		{
			ret
		}
		.method public static hidebysig specialname 
			void set_DnsRefreshTimeout(int32 'value')
		{
			ret
		}
		.method public static hidebysig specialname 
			bool get_CheckCertificateRevocationList()
		{
			ret
		}
		.method public static hidebysig specialname 
			void set_CheckCertificateRevocationList(bool 'value')
		{
			ret
		}
		.method public static hidebysig 
			class System.Net.ServicePoint FindServicePoint(class System.Uri address)
		{
			ret
		}
		.method public static hidebysig 
			class System.Net.ServicePoint FindServicePoint(string uriString, class System.Net.IWebProxy proxy)
		{
			ret
		}
		.method public static hidebysig 
			class System.Net.ServicePoint FindServicePoint(class System.Uri address, class System.Net.IWebProxy proxy)
		{
			ret
		}
		.field static public literal int32 DefaultNonPersistentConnectionLimit = int32(0x00000004)
		.field static public literal int32 DefaultPersistentConnectionLimit = int32(0x00000002)
		.property bool CheckCertificateRevocationList()
		{
			.get bool System.Net.ServicePointManager::get_CheckCertificateRevocationList()
			.set void System.Net.ServicePointManager::set_CheckCertificateRevocationList(bool)
		}
		.property int32 DefaultConnectionLimit()
		{
			.get int32 System.Net.ServicePointManager::get_DefaultConnectionLimit()
			.set void System.Net.ServicePointManager::set_DefaultConnectionLimit(int32)
		}
		.property int32 DnsRefreshTimeout()
		{
			.get int32 System.Net.ServicePointManager::get_DnsRefreshTimeout()
			.set void System.Net.ServicePointManager::set_DnsRefreshTimeout(int32)
		}
		.property bool EnableDnsRoundRobin()
		{
			.get bool System.Net.ServicePointManager::get_EnableDnsRoundRobin()
			.set void System.Net.ServicePointManager::set_EnableDnsRoundRobin(bool)
		}
		.property bool Expect100Continue()
		{
			.get bool System.Net.ServicePointManager::get_Expect100Continue()
			.set void System.Net.ServicePointManager::set_Expect100Continue(bool)
		}
		.property int32 MaxServicePointIdleTime()
		{
			.get int32 System.Net.ServicePointManager::get_MaxServicePointIdleTime()
			.set void System.Net.ServicePointManager::set_MaxServicePointIdleTime(int32)
		}
		.property int32 MaxServicePoints()
		{
			.get int32 System.Net.ServicePointManager::get_MaxServicePoints()
			.set void System.Net.ServicePointManager::set_MaxServicePoints(int32)
		}
		.property bool UseNagleAlgorithm()
		{
			.get bool System.Net.ServicePointManager::get_UseNagleAlgorithm()
			.set void System.Net.ServicePointManager::set_UseNagleAlgorithm(bool)
		}
	}
	.class public SocketAddress
		extends [mscorlib]System.Object
	{
		.custom instance void [mscorlib]System.Reflection.DefaultMemberAttribute::.ctor(string) = (01 00 04 49 74 65 6D 00 00)
		.method public hidebysig specialname 
			instance valuetype System.Net.Sockets.AddressFamily get_Family()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_Size()
		{
			ret
		}
		.method public hidebysig specialname 
			instance uint8 get_Item(int32 offset)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Item(int32 offset, uint8 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(valuetype System.Net.Sockets.AddressFamily 'family')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(valuetype System.Net.Sockets.AddressFamily 'family', int32 size)
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool Equals(object comparand)
		{
			ret
		}
		.method public virtual hidebysig 
			instance int32 GetHashCode()
		{
			ret
		}
		.method public virtual hidebysig 
			instance string ToString()
		{
			ret
		}
		.property instance valuetype System.Net.Sockets.AddressFamily Family()
		{
			.get instance valuetype System.Net.Sockets.AddressFamily System.Net.SocketAddress::get_Family()
		}
		.property instance uint8 Item(int32)
		{
			.get instance uint8 System.Net.SocketAddress::get_Item(int32)
			.set instance void System.Net.SocketAddress::set_Item(int32, uint8)
		}
		.property instance int32 Size()
		{
			.get instance int32 System.Net.SocketAddress::get_Size()
		}
	}
	.class public sealed serializable SocketPermission
		extends [mscorlib]System.Security.CodeAccessPermission
		implements [mscorlib]System.Security.Permissions.IUnrestrictedPermission
	{
		.method public hidebysig specialname 
			instance class [mscorlib]System.Collections.IEnumerator get_ConnectList()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]System.Collections.IEnumerator get_AcceptList()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(valuetype [mscorlib]System.Security.Permissions.PermissionState state)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(valuetype System.Net.NetworkAccess access, valuetype System.Net.TransportType transport, string hostName, int32 portNumber)
		{
			ret
		}
		.method public hidebysig 
			instance void AddPermission(valuetype System.Net.NetworkAccess access, valuetype System.Net.TransportType transport, string hostName, int32 portNumber)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance bool IsUnrestricted()
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [mscorlib]System.Security.IPermission Copy()
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [mscorlib]System.Security.IPermission Union(class [mscorlib]System.Security.IPermission target)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [mscorlib]System.Security.IPermission Intersect(class [mscorlib]System.Security.IPermission target)
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool IsSubsetOf(class [mscorlib]System.Security.IPermission target)
		{
			ret
		}
		.method public virtual hidebysig 
			instance void FromXml(class [mscorlib]System.Security.SecurityElement securityElement)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [mscorlib]System.Security.SecurityElement ToXml()
		{
			ret
		}
		.field static public literal int32 AllPorts = int32(0xFFFFFFFF)
		.property instance class [mscorlib]System.Collections.IEnumerator AcceptList()
		{
			.get instance class [mscorlib]System.Collections.IEnumerator System.Net.SocketPermission::get_AcceptList()
		}
		.property instance class [mscorlib]System.Collections.IEnumerator ConnectList()
		{
			.get instance class [mscorlib]System.Collections.IEnumerator System.Net.SocketPermission::get_ConnectList()
		}
	}
	.class public sealed serializable SocketPermissionAttribute
		extends [mscorlib]System.Security.Permissions.CodeAccessSecurityAttribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = (01 00 6D 00 00 00 02 00 54 02 0D 41 6C 6C 6F 77 4D 75 6C 74 69 70 6C 65 01 54 02 09 49 6E 68 65 72 69 74 65 64 00)
		.method public hidebysig specialname 
			instance void .ctor(valuetype [mscorlib]System.Security.Permissions.SecurityAction action)
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Access()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Access(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Host()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Host(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Transport()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Transport(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Port()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Port(string 'value')
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [mscorlib]System.Security.IPermission CreatePermission()
		{
			ret
		}
		.property instance string Access()
		{
			.get instance string System.Net.SocketPermissionAttribute::get_Access()
			.set instance void System.Net.SocketPermissionAttribute::set_Access(string)
		}
		.property instance string Host()
		{
			.get instance string System.Net.SocketPermissionAttribute::get_Host()
			.set instance void System.Net.SocketPermissionAttribute::set_Host(string)
		}
		.property instance string Port()
		{
			.get instance string System.Net.SocketPermissionAttribute::get_Port()
			.set instance void System.Net.SocketPermissionAttribute::set_Port(string)
		}
		.property instance string Transport()
		{
			.get instance string System.Net.SocketPermissionAttribute::get_Transport()
			.set instance void System.Net.SocketPermissionAttribute::set_Transport(string)
		}
	}
	.class public sealed TransportType
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype System.Net.TransportType All = int32(0x00000003)
		.field static public literal valuetype System.Net.TransportType ConnectionOriented = int32(0x00000002)
		.field static public literal valuetype System.Net.TransportType Connectionless = int32(0x00000001)
		.field static public literal valuetype System.Net.TransportType Tcp = int32(0x00000002)
		.field static public literal valuetype System.Net.TransportType Udp = int32(0x00000001)
	}
	.class public UploadDataCompletedEventArgs
		extends System.ComponentModel.AsyncCompletedEventArgs
	{
		.method public hidebysig specialname 
			instance uint8[] get_Result()
		{
			ret
		}
		.property instance uint8[] Result()
		{
			.get instance uint8[] System.Net.UploadDataCompletedEventArgs::get_Result()
		}
	}
	.class public sealed UploadDataCompletedEventHandler
		extends [mscorlib]System.MulticastDelegate
	{
		.method public hidebysig specialname 
			instance void .ctor(object 'object', native int 'method')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void Invoke(object sender, class System.Net.UploadDataCompletedEventArgs e)
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance class [mscorlib]System.IAsyncResult BeginInvoke(object sender, class System.Net.UploadDataCompletedEventArgs e, class [mscorlib]System.AsyncCallback callback, object 'object')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void EndInvoke(class [mscorlib]System.IAsyncResult result)
			runtime 
		{
		}
	}
	.class public UploadFileCompletedEventArgs
		extends System.ComponentModel.AsyncCompletedEventArgs
	{
		.method public hidebysig specialname 
			instance uint8[] get_Result()
		{
			ret
		}
		.property instance uint8[] Result()
		{
			.get instance uint8[] System.Net.UploadFileCompletedEventArgs::get_Result()
		}
	}
	.class public sealed UploadFileCompletedEventHandler
		extends [mscorlib]System.MulticastDelegate
	{
		.method public hidebysig specialname 
			instance void .ctor(object 'object', native int 'method')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void Invoke(object sender, class System.Net.UploadFileCompletedEventArgs e)
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance class [mscorlib]System.IAsyncResult BeginInvoke(object sender, class System.Net.UploadFileCompletedEventArgs e, class [mscorlib]System.AsyncCallback callback, object 'object')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void EndInvoke(class [mscorlib]System.IAsyncResult result)
			runtime 
		{
		}
	}
	.class public UploadProgressChangedEventArgs
		extends System.ComponentModel.ProgressChangedEventArgs
	{
		.method public hidebysig specialname 
			instance int64 get_BytesReceived()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int64 get_TotalBytesToReceive()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int64 get_BytesSent()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int64 get_TotalBytesToSend()
		{
			ret
		}
		.property instance int64 BytesReceived()
		{
			.get instance int64 System.Net.UploadProgressChangedEventArgs::get_BytesReceived()
		}
		.property instance int64 BytesSent()
		{
			.get instance int64 System.Net.UploadProgressChangedEventArgs::get_BytesSent()
		}
		.property instance int64 TotalBytesToReceive()
		{
			.get instance int64 System.Net.UploadProgressChangedEventArgs::get_TotalBytesToReceive()
		}
		.property instance int64 TotalBytesToSend()
		{
			.get instance int64 System.Net.UploadProgressChangedEventArgs::get_TotalBytesToSend()
		}
	}
	.class public sealed UploadProgressChangedEventHandler
		extends [mscorlib]System.MulticastDelegate
	{
		.method public hidebysig specialname 
			instance void .ctor(object 'object', native int 'method')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void Invoke(object sender, class System.Net.UploadProgressChangedEventArgs e)
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance class [mscorlib]System.IAsyncResult BeginInvoke(object sender, class System.Net.UploadProgressChangedEventArgs e, class [mscorlib]System.AsyncCallback callback, object 'object')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void EndInvoke(class [mscorlib]System.IAsyncResult result)
			runtime 
		{
		}
	}
	.class public UploadStringCompletedEventArgs
		extends System.ComponentModel.AsyncCompletedEventArgs
	{
		.method public hidebysig specialname 
			instance string get_Result()
		{
			ret
		}
		.property instance string Result()
		{
			.get instance string System.Net.UploadStringCompletedEventArgs::get_Result()
		}
	}
	.class public sealed UploadStringCompletedEventHandler
		extends [mscorlib]System.MulticastDelegate
	{
		.method public hidebysig specialname 
			instance void .ctor(object 'object', native int 'method')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void Invoke(object sender, class System.Net.UploadStringCompletedEventArgs e)
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance class [mscorlib]System.IAsyncResult BeginInvoke(object sender, class System.Net.UploadStringCompletedEventArgs e, class [mscorlib]System.AsyncCallback callback, object 'object')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void EndInvoke(class [mscorlib]System.IAsyncResult result)
			runtime 
		{
		}
	}
	.class public UploadValuesCompletedEventArgs
		extends System.ComponentModel.AsyncCompletedEventArgs
	{
		.method public hidebysig specialname 
			instance uint8[] get_Result()
		{
			ret
		}
		.property instance uint8[] Result()
		{
			.get instance uint8[] System.Net.UploadValuesCompletedEventArgs::get_Result()
		}
	}
	.class public sealed UploadValuesCompletedEventHandler
		extends [mscorlib]System.MulticastDelegate
	{
		.method public hidebysig specialname 
			instance void .ctor(object 'object', native int 'method')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void Invoke(object sender, class System.Net.UploadValuesCompletedEventArgs e)
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance class [mscorlib]System.IAsyncResult BeginInvoke(object sender, class System.Net.UploadValuesCompletedEventArgs e, class [mscorlib]System.AsyncCallback callback, object 'object')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void EndInvoke(class [mscorlib]System.IAsyncResult result)
			runtime 
		{
		}
	}
	.class public WebClient
		extends System.ComponentModel.Component
	{
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]System.Text.Encoding get_Encoding()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Encoding(class [mscorlib]System.Text.Encoding 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_BaseAddress()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BaseAddress(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Net.ICredentials get_Credentials()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Credentials(class System.Net.ICredentials 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_UseDefaultCredentials()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_UseDefaultCredentials(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Net.WebHeaderCollection get_Headers()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Headers(class System.Net.WebHeaderCollection 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Collections.Specialized.NameValueCollection get_QueryString()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_QueryString(class System.Collections.Specialized.NameValueCollection 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Net.WebHeaderCollection get_ResponseHeaders()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Net.IWebProxy get_Proxy()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Proxy(class System.Net.IWebProxy 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Net.Cache.RequestCachePolicy get_CachePolicy()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_CachePolicy(class System.Net.Cache.RequestCachePolicy 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsBusy()
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance class System.Net.WebRequest GetWebRequest(class System.Uri address)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance class System.Net.WebResponse GetWebResponse(class System.Net.WebRequest 'request')
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance class System.Net.WebResponse GetWebResponse(class System.Net.WebRequest 'request', class [mscorlib]System.IAsyncResult result)
		{
			ret
		}
		.method public hidebysig 
			instance uint8[] DownloadData(string address)
		{
			ret
		}
		.method public hidebysig 
			instance uint8[] DownloadData(class System.Uri address)
		{
			ret
		}
		.method public hidebysig 
			instance void DownloadFile(string address, string fileName)
		{
			ret
		}
		.method public hidebysig 
			instance void DownloadFile(class System.Uri address, string fileName)
		{
			ret
		}
		.method public hidebysig 
			instance class [mscorlib]'System.IO.Stream' OpenRead(string address)
		{
			ret
		}
		.method public hidebysig 
			instance class [mscorlib]'System.IO.Stream' OpenRead(class System.Uri address)
		{
			ret
		}
		.method public hidebysig 
			instance class [mscorlib]'System.IO.Stream' OpenWrite(string address)
		{
			ret
		}
		.method public hidebysig 
			instance class [mscorlib]'System.IO.Stream' OpenWrite(class System.Uri address)
		{
			ret
		}
		.method public hidebysig 
			instance class [mscorlib]'System.IO.Stream' OpenWrite(string address, string 'method')
		{
			ret
		}
		.method public hidebysig 
			instance class [mscorlib]'System.IO.Stream' OpenWrite(class System.Uri address, string 'method')
		{
			ret
		}
		.method public hidebysig 
			instance uint8[] UploadData(string address, uint8[] data)
		{
			ret
		}
		.method public hidebysig 
			instance uint8[] UploadData(class System.Uri address, uint8[] data)
		{
			ret
		}
		.method public hidebysig 
			instance uint8[] UploadData(string address, string 'method', uint8[] data)
		{
			ret
		}
		.method public hidebysig 
			instance uint8[] UploadData(class System.Uri address, string 'method', uint8[] data)
		{
			ret
		}
		.method public hidebysig 
			instance uint8[] UploadFile(string address, string fileName)
		{
			ret
		}
		.method public hidebysig 
			instance uint8[] UploadFile(class System.Uri address, string fileName)
		{
			ret
		}
		.method public hidebysig 
			instance uint8[] UploadFile(string address, string 'method', string fileName)
		{
			ret
		}
		.method public hidebysig 
			instance uint8[] UploadFile(class System.Uri address, string 'method', string fileName)
		{
			ret
		}
		.method public hidebysig 
			instance uint8[] UploadValues(string address, class System.Collections.Specialized.NameValueCollection data)
		{
			ret
		}
		.method public hidebysig 
			instance uint8[] UploadValues(class System.Uri address, class System.Collections.Specialized.NameValueCollection data)
		{
			ret
		}
		.method public hidebysig 
			instance uint8[] UploadValues(string address, string 'method', class System.Collections.Specialized.NameValueCollection data)
		{
			ret
		}
		.method public hidebysig 
			instance uint8[] UploadValues(class System.Uri address, string 'method', class System.Collections.Specialized.NameValueCollection data)
		{
			ret
		}
		.method public hidebysig 
			instance string UploadString(string address, string data)
		{
			ret
		}
		.method public hidebysig 
			instance string UploadString(class System.Uri address, string data)
		{
			ret
		}
		.method public hidebysig 
			instance string UploadString(string address, string 'method', string data)
		{
			ret
		}
		.method public hidebysig 
			instance string UploadString(class System.Uri address, string 'method', string data)
		{
			ret
		}
		.method public hidebysig 
			instance string DownloadString(string address)
		{
			ret
		}
		.method public hidebysig 
			instance string DownloadString(class System.Uri address)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void add_OpenReadCompleted(class System.Net.OpenReadCompletedEventHandler 'value')
			synchronized 
		{
			ret
		}
		.method public hidebysig specialname 
			instance void remove_OpenReadCompleted(class System.Net.OpenReadCompletedEventHandler 'value')
			synchronized 
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void OnOpenReadCompleted(class System.Net.OpenReadCompletedEventArgs e)
		{
			ret
		}
		.method public hidebysig 
			instance void OpenReadAsync(class System.Uri address)
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public hidebysig 
			instance void OpenReadAsync(class System.Uri address, object userToken)
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public hidebysig specialname 
			instance void add_OpenWriteCompleted(class System.Net.OpenWriteCompletedEventHandler 'value')
			synchronized 
		{
			ret
		}
		.method public hidebysig specialname 
			instance void remove_OpenWriteCompleted(class System.Net.OpenWriteCompletedEventHandler 'value')
			synchronized 
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void OnOpenWriteCompleted(class System.Net.OpenWriteCompletedEventArgs e)
		{
			ret
		}
		.method public hidebysig 
			instance void OpenWriteAsync(class System.Uri address)
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public hidebysig 
			instance void OpenWriteAsync(class System.Uri address, string 'method')
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public hidebysig 
			instance void OpenWriteAsync(class System.Uri address, string 'method', object userToken)
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public hidebysig specialname 
			instance void add_DownloadStringCompleted(class System.Net.DownloadStringCompletedEventHandler 'value')
			synchronized 
		{
			ret
		}
		.method public hidebysig specialname 
			instance void remove_DownloadStringCompleted(class System.Net.DownloadStringCompletedEventHandler 'value')
			synchronized 
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void OnDownloadStringCompleted(class System.Net.DownloadStringCompletedEventArgs e)
		{
			ret
		}
		.method public hidebysig 
			instance void DownloadStringAsync(class System.Uri address)
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public hidebysig 
			instance void DownloadStringAsync(class System.Uri address, object userToken)
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public hidebysig specialname 
			instance void add_DownloadDataCompleted(class System.Net.DownloadDataCompletedEventHandler 'value')
			synchronized 
		{
			ret
		}
		.method public hidebysig specialname 
			instance void remove_DownloadDataCompleted(class System.Net.DownloadDataCompletedEventHandler 'value')
			synchronized 
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void OnDownloadDataCompleted(class System.Net.DownloadDataCompletedEventArgs e)
		{
			ret
		}
		.method public hidebysig 
			instance void DownloadDataAsync(class System.Uri address)
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public hidebysig 
			instance void DownloadDataAsync(class System.Uri address, object userToken)
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public hidebysig specialname 
			instance void add_DownloadFileCompleted(class System.ComponentModel.AsyncCompletedEventHandler 'value')
			synchronized 
		{
			ret
		}
		.method public hidebysig specialname 
			instance void remove_DownloadFileCompleted(class System.ComponentModel.AsyncCompletedEventHandler 'value')
			synchronized 
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void OnDownloadFileCompleted(class System.ComponentModel.AsyncCompletedEventArgs e)
		{
			ret
		}
		.method public hidebysig 
			instance void DownloadFileAsync(class System.Uri address, string fileName)
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public hidebysig 
			instance void DownloadFileAsync(class System.Uri address, string fileName, object userToken)
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public hidebysig specialname 
			instance void add_UploadStringCompleted(class System.Net.UploadStringCompletedEventHandler 'value')
			synchronized 
		{
			ret
		}
		.method public hidebysig specialname 
			instance void remove_UploadStringCompleted(class System.Net.UploadStringCompletedEventHandler 'value')
			synchronized 
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void OnUploadStringCompleted(class System.Net.UploadStringCompletedEventArgs e)
		{
			ret
		}
		.method public hidebysig 
			instance void UploadStringAsync(class System.Uri address, string data)
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public hidebysig 
			instance void UploadStringAsync(class System.Uri address, string 'method', string data)
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public hidebysig 
			instance void UploadStringAsync(class System.Uri address, string 'method', string data, object userToken)
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public hidebysig specialname 
			instance void add_UploadDataCompleted(class System.Net.UploadDataCompletedEventHandler 'value')
			synchronized 
		{
			ret
		}
		.method public hidebysig specialname 
			instance void remove_UploadDataCompleted(class System.Net.UploadDataCompletedEventHandler 'value')
			synchronized 
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void OnUploadDataCompleted(class System.Net.UploadDataCompletedEventArgs e)
		{
			ret
		}
		.method public hidebysig 
			instance void UploadDataAsync(class System.Uri address, uint8[] data)
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public hidebysig 
			instance void UploadDataAsync(class System.Uri address, string 'method', uint8[] data)
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public hidebysig 
			instance void UploadDataAsync(class System.Uri address, string 'method', uint8[] data, object userToken)
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public hidebysig specialname 
			instance void add_UploadFileCompleted(class System.Net.UploadFileCompletedEventHandler 'value')
			synchronized 
		{
			ret
		}
		.method public hidebysig specialname 
			instance void remove_UploadFileCompleted(class System.Net.UploadFileCompletedEventHandler 'value')
			synchronized 
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void OnUploadFileCompleted(class System.Net.UploadFileCompletedEventArgs e)
		{
			ret
		}
		.method public hidebysig 
			instance void UploadFileAsync(class System.Uri address, string fileName)
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public hidebysig 
			instance void UploadFileAsync(class System.Uri address, string 'method', string fileName)
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public hidebysig 
			instance void UploadFileAsync(class System.Uri address, string 'method', string fileName, object userToken)
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public hidebysig specialname 
			instance void add_UploadValuesCompleted(class System.Net.UploadValuesCompletedEventHandler 'value')
			synchronized 
		{
			ret
		}
		.method public hidebysig specialname 
			instance void remove_UploadValuesCompleted(class System.Net.UploadValuesCompletedEventHandler 'value')
			synchronized 
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void OnUploadValuesCompleted(class System.Net.UploadValuesCompletedEventArgs e)
		{
			ret
		}
		.method public hidebysig 
			instance void UploadValuesAsync(class System.Uri address, class System.Collections.Specialized.NameValueCollection data)
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public hidebysig 
			instance void UploadValuesAsync(class System.Uri address, string 'method', class System.Collections.Specialized.NameValueCollection data)
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public hidebysig 
			instance void UploadValuesAsync(class System.Uri address, string 'method', class System.Collections.Specialized.NameValueCollection data, object userToken)
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public hidebysig 
			instance void CancelAsync()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void add_DownloadProgressChanged(class System.Net.DownloadProgressChangedEventHandler 'value')
			synchronized 
		{
			ret
		}
		.method public hidebysig specialname 
			instance void remove_DownloadProgressChanged(class System.Net.DownloadProgressChangedEventHandler 'value')
			synchronized 
		{
			ret
		}
		.method public hidebysig specialname 
			instance void add_UploadProgressChanged(class System.Net.UploadProgressChangedEventHandler 'value')
			synchronized 
		{
			ret
		}
		.method public hidebysig specialname 
			instance void remove_UploadProgressChanged(class System.Net.UploadProgressChangedEventHandler 'value')
			synchronized 
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void OnDownloadProgressChanged(class System.Net.DownloadProgressChangedEventArgs e)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void OnUploadProgressChanged(class System.Net.UploadProgressChangedEventArgs e)
		{
			ret
		}
		.event System.Net.DownloadDataCompletedEventHandler DownloadDataCompleted
		{
			.addon instance void System.Net.WebClient::add_DownloadDataCompleted(class System.Net.DownloadDataCompletedEventHandler)
			.removeon instance void System.Net.WebClient::remove_DownloadDataCompleted(class System.Net.DownloadDataCompletedEventHandler)
		}
		.event System.ComponentModel.AsyncCompletedEventHandler DownloadFileCompleted
		{
			.addon instance void System.Net.WebClient::add_DownloadFileCompleted(class System.ComponentModel.AsyncCompletedEventHandler)
			.removeon instance void System.Net.WebClient::remove_DownloadFileCompleted(class System.ComponentModel.AsyncCompletedEventHandler)
		}
		.event System.Net.DownloadProgressChangedEventHandler DownloadProgressChanged
		{
			.addon instance void System.Net.WebClient::add_DownloadProgressChanged(class System.Net.DownloadProgressChangedEventHandler)
			.removeon instance void System.Net.WebClient::remove_DownloadProgressChanged(class System.Net.DownloadProgressChangedEventHandler)
		}
		.event System.Net.DownloadStringCompletedEventHandler DownloadStringCompleted
		{
			.addon instance void System.Net.WebClient::add_DownloadStringCompleted(class System.Net.DownloadStringCompletedEventHandler)
			.removeon instance void System.Net.WebClient::remove_DownloadStringCompleted(class System.Net.DownloadStringCompletedEventHandler)
		}
		.event System.Net.OpenReadCompletedEventHandler OpenReadCompleted
		{
			.addon instance void System.Net.WebClient::add_OpenReadCompleted(class System.Net.OpenReadCompletedEventHandler)
			.removeon instance void System.Net.WebClient::remove_OpenReadCompleted(class System.Net.OpenReadCompletedEventHandler)
		}
		.event System.Net.OpenWriteCompletedEventHandler OpenWriteCompleted
		{
			.addon instance void System.Net.WebClient::add_OpenWriteCompleted(class System.Net.OpenWriteCompletedEventHandler)
			.removeon instance void System.Net.WebClient::remove_OpenWriteCompleted(class System.Net.OpenWriteCompletedEventHandler)
		}
		.event System.Net.UploadDataCompletedEventHandler UploadDataCompleted
		{
			.addon instance void System.Net.WebClient::add_UploadDataCompleted(class System.Net.UploadDataCompletedEventHandler)
			.removeon instance void System.Net.WebClient::remove_UploadDataCompleted(class System.Net.UploadDataCompletedEventHandler)
		}
		.event System.Net.UploadFileCompletedEventHandler UploadFileCompleted
		{
			.addon instance void System.Net.WebClient::add_UploadFileCompleted(class System.Net.UploadFileCompletedEventHandler)
			.removeon instance void System.Net.WebClient::remove_UploadFileCompleted(class System.Net.UploadFileCompletedEventHandler)
		}
		.event System.Net.UploadProgressChangedEventHandler UploadProgressChanged
		{
			.addon instance void System.Net.WebClient::add_UploadProgressChanged(class System.Net.UploadProgressChangedEventHandler)
			.removeon instance void System.Net.WebClient::remove_UploadProgressChanged(class System.Net.UploadProgressChangedEventHandler)
		}
		.event System.Net.UploadStringCompletedEventHandler UploadStringCompleted
		{
			.addon instance void System.Net.WebClient::add_UploadStringCompleted(class System.Net.UploadStringCompletedEventHandler)
			.removeon instance void System.Net.WebClient::remove_UploadStringCompleted(class System.Net.UploadStringCompletedEventHandler)
		}
		.event System.Net.UploadValuesCompletedEventHandler UploadValuesCompleted
		{
			.addon instance void System.Net.WebClient::add_UploadValuesCompleted(class System.Net.UploadValuesCompletedEventHandler)
			.removeon instance void System.Net.WebClient::remove_UploadValuesCompleted(class System.Net.UploadValuesCompletedEventHandler)
		}
		.property instance string BaseAddress()
		{
			.get instance string System.Net.WebClient::get_BaseAddress()
			.set instance void System.Net.WebClient::set_BaseAddress(string)
		}
		.property instance class System.Net.Cache.RequestCachePolicy CachePolicy()
		{
			.get instance class System.Net.Cache.RequestCachePolicy System.Net.WebClient::get_CachePolicy()
			.set instance void System.Net.WebClient::set_CachePolicy(class System.Net.Cache.RequestCachePolicy)
		}
		.property instance class System.Net.ICredentials Credentials()
		{
			.get instance class System.Net.ICredentials System.Net.WebClient::get_Credentials()
			.set instance void System.Net.WebClient::set_Credentials(class System.Net.ICredentials)
		}
		.property instance class [mscorlib]System.Text.Encoding Encoding()
		{
			.get instance class [mscorlib]System.Text.Encoding System.Net.WebClient::get_Encoding()
			.set instance void System.Net.WebClient::set_Encoding(class [mscorlib]System.Text.Encoding)
		}
		.property instance class System.Net.WebHeaderCollection Headers()
		{
			.get instance class System.Net.WebHeaderCollection System.Net.WebClient::get_Headers()
			.set instance void System.Net.WebClient::set_Headers(class System.Net.WebHeaderCollection)
		}
		.property instance bool IsBusy()
		{
			.get instance bool System.Net.WebClient::get_IsBusy()
		}
		.property instance class System.Net.IWebProxy Proxy()
		{
			.get instance class System.Net.IWebProxy System.Net.WebClient::get_Proxy()
			.set instance void System.Net.WebClient::set_Proxy(class System.Net.IWebProxy)
		}
		.property instance class System.Collections.Specialized.NameValueCollection QueryString()
		{
			.get instance class System.Collections.Specialized.NameValueCollection System.Net.WebClient::get_QueryString()
			.set instance void System.Net.WebClient::set_QueryString(class System.Collections.Specialized.NameValueCollection)
		}
		.property instance class System.Net.WebHeaderCollection ResponseHeaders()
		{
			.get instance class System.Net.WebHeaderCollection System.Net.WebClient::get_ResponseHeaders()
		}
		.property instance bool UseDefaultCredentials()
		{
			.get instance bool System.Net.WebClient::get_UseDefaultCredentials()
			.set instance void System.Net.WebClient::set_UseDefaultCredentials(bool)
		}
	}
	.class public serializable WebException
		extends [mscorlib]System.InvalidOperationException
		implements [mscorlib]System.Runtime.Serialization.ISerializable
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string message)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string message, class [mscorlib]System.Exception innerException)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string message, valuetype System.Net.WebExceptionStatus status)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string message, class [mscorlib]System.Exception innerException, valuetype System.Net.WebExceptionStatus status, class System.Net.WebResponse response)
		{
			ret
		}
		.method family hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype [mscorlib]System.Runtime.Serialization.StreamingContext streamingContext)
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Runtime.Serialization.ISerializable.GetObjectData(class [mscorlib]System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype [mscorlib]System.Runtime.Serialization.StreamingContext streamingContext)
		{
			.permissionset linkcheck = (00)
			.override [mscorlib]System.Runtime.Serialization.ISerializable::GetObjectData
			ret
		}
		.method public virtual hidebysig 
			instance void GetObjectData(class [mscorlib]System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype [mscorlib]System.Runtime.Serialization.StreamingContext streamingContext)
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public hidebysig specialname 
			instance valuetype System.Net.WebExceptionStatus get_Status()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Net.WebResponse get_Response()
		{
			ret
		}
		.property instance class System.Net.WebResponse Response()
		{
			.get instance class System.Net.WebResponse System.Net.WebException::get_Response()
		}
		.property instance valuetype System.Net.WebExceptionStatus Status()
		{
			.get instance valuetype System.Net.WebExceptionStatus System.Net.WebException::get_Status()
		}
	}
	.class public sealed WebExceptionStatus
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype System.Net.WebExceptionStatus CacheEntryNotFound = int32(0x00000012)
		.field static public literal valuetype System.Net.WebExceptionStatus ConnectFailure = int32(0x00000002)
		.field static public literal valuetype System.Net.WebExceptionStatus ConnectionClosed = int32(0x00000008)
		.field static public literal valuetype System.Net.WebExceptionStatus KeepAliveFailure = int32(0x0000000C)
		.field static public literal valuetype System.Net.WebExceptionStatus MessageLengthLimitExceeded = int32(0x00000011)
		.field static public literal valuetype System.Net.WebExceptionStatus NameResolutionFailure = int32(0x00000001)
		.field static public literal valuetype System.Net.WebExceptionStatus Pending = int32(0x0000000D)
		.field static public literal valuetype System.Net.WebExceptionStatus PipelineFailure = int32(0x00000005)
		.field static public literal valuetype System.Net.WebExceptionStatus ProtocolError = int32(0x00000007)
		.field static public literal valuetype System.Net.WebExceptionStatus ProxyNameResolutionFailure = int32(0x0000000F)
		.field static public literal valuetype System.Net.WebExceptionStatus ReceiveFailure = int32(0x00000003)
		.field static public literal valuetype System.Net.WebExceptionStatus RequestCanceled = int32(0x00000006)
		.field static public literal valuetype System.Net.WebExceptionStatus RequestProhibitedByCachePolicy = int32(0x00000013)
		.field static public literal valuetype System.Net.WebExceptionStatus RequestProhibitedByProxy = int32(0x00000014)
		.field static public literal valuetype System.Net.WebExceptionStatus SecureChannelFailure = int32(0x0000000A)
		.field static public literal valuetype System.Net.WebExceptionStatus SendFailure = int32(0x00000004)
		.field static public literal valuetype System.Net.WebExceptionStatus ServerProtocolViolation = int32(0x0000000B)
		.field static public literal valuetype System.Net.WebExceptionStatus Success = int32(0x00000000)
		.field static public literal valuetype System.Net.WebExceptionStatus Timeout = int32(0x0000000E)
		.field static public literal valuetype System.Net.WebExceptionStatus TrustFailure = int32(0x00000009)
		.field static public literal valuetype System.Net.WebExceptionStatus UnknownError = int32(0x00000010)
	}
	.class public serializable WebHeaderCollection
		extends System.Collections.Specialized.NameValueCollection
		implements [mscorlib]System.Runtime.Serialization.ISerializable
	{
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 01 00 00)
		.method family hidebysig 
			instance void AddWithoutValidate(string headerName, string headerValue)
		{
			ret
		}
		.method public virtual hidebysig 
			instance void Add(string name, string 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void Add(string header)
		{
			ret
		}
		.method public virtual hidebysig 
			instance void Set(string name, string 'value')
		{
			ret
		}
		.method public virtual hidebysig 
			instance void Remove(string name)
		{
			ret
		}
		.method public virtual hidebysig 
			instance string[] GetValues(string header)
		{
			ret
		}
		.method public virtual hidebysig 
			instance string ToString()
		{
			ret
		}
		.method public hidebysig 
			instance uint8[] ToByteArray()
		{
			ret
		}
		.method public static hidebysig 
			bool IsRestricted(string headerName)
		{
			ret
		}
		.method public static hidebysig 
			bool IsRestricted(string headerName, bool response)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method family hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype [mscorlib]System.Runtime.Serialization.StreamingContext streamingContext)
		{
			ret
		}
		.method public virtual hidebysig 
			instance void OnDeserialization(object sender)
		{
			ret
		}
		.method public virtual hidebysig 
			instance void GetObjectData(class [mscorlib]System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype [mscorlib]System.Runtime.Serialization.StreamingContext streamingContext)
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Runtime.Serialization.ISerializable.GetObjectData(class [mscorlib]System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype [mscorlib]System.Runtime.Serialization.StreamingContext streamingContext)
		{
			.permissionset linkcheck = (00)
			.override [mscorlib]System.Runtime.Serialization.ISerializable::GetObjectData
			ret
		}
		.method public virtual hidebysig 
			instance string Get(string name)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [mscorlib]System.Collections.IEnumerator GetEnumerator()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance int32 get_Count()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance class System.Collections.Specialized.NameObjectCollectionBase/KeysCollection get_Keys()
		{
			ret
		}
		.method public virtual hidebysig 
			instance string Get(int32 index)
		{
			ret
		}
		.method public virtual hidebysig 
			instance string[] GetValues(int32 index)
		{
			ret
		}
		.method public virtual hidebysig 
			instance string GetKey(int32 index)
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance string[] get_AllKeys()
		{
			ret
		}
		.method public virtual hidebysig 
			instance void Clear()
		{
			ret
		}
		.property instance string[] AllKeys()
		{
			.get instance string[] System.Net.WebHeaderCollection::get_AllKeys()
		}
		.property instance int32 Count()
		{
			.get instance int32 System.Net.WebHeaderCollection::get_Count()
		}
		.property instance class System.Collections.Specialized.NameObjectCollectionBase/KeysCollection Keys()
		{
			.get instance class System.Collections.Specialized.NameObjectCollectionBase/KeysCollection System.Net.WebHeaderCollection::get_Keys()
		}
	}
	.class public sealed serializable WebPermission
		extends [mscorlib]System.Security.CodeAccessPermission
		implements [mscorlib]System.Security.Permissions.IUnrestrictedPermission
	{
		.method public hidebysig specialname 
			instance class [mscorlib]System.Collections.IEnumerator get_ConnectList()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]System.Collections.IEnumerator get_AcceptList()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(valuetype [mscorlib]System.Security.Permissions.PermissionState state)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(valuetype System.Net.NetworkAccess access, class System.Text.RegularExpressions.Regex uriRegex)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(valuetype System.Net.NetworkAccess access, string uriString)
		{
			ret
		}
		.method public hidebysig 
			instance void AddPermission(valuetype System.Net.NetworkAccess access, string uriString)
		{
			ret
		}
		.method public hidebysig 
			instance void AddPermission(valuetype System.Net.NetworkAccess access, class System.Text.RegularExpressions.Regex uriRegex)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance bool IsUnrestricted()
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [mscorlib]System.Security.IPermission Copy()
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool IsSubsetOf(class [mscorlib]System.Security.IPermission target)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [mscorlib]System.Security.IPermission Union(class [mscorlib]System.Security.IPermission target)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [mscorlib]System.Security.IPermission Intersect(class [mscorlib]System.Security.IPermission target)
		{
			ret
		}
		.method public virtual hidebysig 
			instance void FromXml(class [mscorlib]System.Security.SecurityElement securityElement)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [mscorlib]System.Security.SecurityElement ToXml()
		{
			ret
		}
		.property instance class [mscorlib]System.Collections.IEnumerator AcceptList()
		{
			.get instance class [mscorlib]System.Collections.IEnumerator System.Net.WebPermission::get_AcceptList()
		}
		.property instance class [mscorlib]System.Collections.IEnumerator ConnectList()
		{
			.get instance class [mscorlib]System.Collections.IEnumerator System.Net.WebPermission::get_ConnectList()
		}
	}
	.class public sealed serializable WebPermissionAttribute
		extends [mscorlib]System.Security.Permissions.CodeAccessSecurityAttribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = (01 00 6D 00 00 00 02 00 54 02 0D 41 6C 6C 6F 77 4D 75 6C 74 69 70 6C 65 01 54 02 09 49 6E 68 65 72 69 74 65 64 00)
		.method public hidebysig specialname 
			instance void .ctor(valuetype [mscorlib]System.Security.Permissions.SecurityAction action)
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Connect()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Connect(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Accept()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Accept(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_ConnectPattern()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ConnectPattern(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_AcceptPattern()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_AcceptPattern(string 'value')
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [mscorlib]System.Security.IPermission CreatePermission()
		{
			ret
		}
		.property instance string Accept()
		{
			.get instance string System.Net.WebPermissionAttribute::get_Accept()
			.set instance void System.Net.WebPermissionAttribute::set_Accept(string)
		}
		.property instance string AcceptPattern()
		{
			.get instance string System.Net.WebPermissionAttribute::get_AcceptPattern()
			.set instance void System.Net.WebPermissionAttribute::set_AcceptPattern(string)
		}
		.property instance string Connect()
		{
			.get instance string System.Net.WebPermissionAttribute::get_Connect()
			.set instance void System.Net.WebPermissionAttribute::set_Connect(string)
		}
		.property instance string ConnectPattern()
		{
			.get instance string System.Net.WebPermissionAttribute::get_ConnectPattern()
			.set instance void System.Net.WebPermissionAttribute::set_ConnectPattern(string)
		}
	}
	.class public serializable WebProxy
		extends [mscorlib]System.Object
		implements System.Net.IWebProxy, [mscorlib]System.Runtime.Serialization.ISerializable
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class System.Uri Address)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class System.Uri Address, bool BypassOnLocal)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class System.Uri Address, bool BypassOnLocal, string[] BypassList)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class System.Uri Address, bool BypassOnLocal, string[] BypassList, class System.Net.ICredentials Credentials)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string Host, int32 Port)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string Address)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string Address, bool BypassOnLocal)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string Address, bool BypassOnLocal, string[] BypassList)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string Address, bool BypassOnLocal, string[] BypassList, class System.Net.ICredentials Credentials)
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Uri get_Address()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Address(class System.Uri 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_BypassProxyOnLocal()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BypassProxyOnLocal(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string[] get_BypassList()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BypassList(string[] 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance class System.Net.ICredentials get_Credentials()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void set_Credentials(class System.Net.ICredentials 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_UseDefaultCredentials()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_UseDefaultCredentials(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]System.Collections.ArrayList get_BypassArrayList()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance class System.Uri GetProxy(class System.Uri destination)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance bool IsBypassed(class System.Uri host)
		{
			ret
		}
		.method public static hidebysig 
			class System.Net.WebProxy GetDefaultProxy()
		{
			.custom instance void [mscorlib]System.ObsoleteAttribute::.ctor(string) = (01 00 7F 54 68 69 73 20 6D 65 74 68 6F 64 20 68 61 73 20 62 65 65 6E 20 64 65 70 72 65 63 61 74 65 64 2E 20 50 6C 65 61 73 65 20 75 73 65 20 74 68 65 20 70 72 6F 78 79 20 73 65 6C 65 63 74 65 64 20 66 6F 72 20 79 6F 75 20 62 79 20 64 65 66 61 75 6C 74 2E 20 68 74 74 70 3A 2F 2F 67 6F 2E 6D 69 63 72 6F 73 6F 66 74 2E 63 6F 6D 2F 66 77 6C 69 6E 6B 2F 3F 6C 69 6E 6B 69 64 3D 31 34 32 30 32 00 00)
			ret
		}
		.method family hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype [mscorlib]System.Runtime.Serialization.StreamingContext streamingContext)
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Runtime.Serialization.ISerializable.GetObjectData(class [mscorlib]System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype [mscorlib]System.Runtime.Serialization.StreamingContext streamingContext)
		{
			.permissionset linkcheck = (00)
			.override [mscorlib]System.Runtime.Serialization.ISerializable::GetObjectData
			ret
		}
		.method family virtual hidebysig newslot 
			instance void GetObjectData(class [mscorlib]System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype [mscorlib]System.Runtime.Serialization.StreamingContext streamingContext)
		{
			.permissionset linkcheck = (00)
			ret
		}
		.property instance class System.Uri Address()
		{
			.get instance class System.Uri System.Net.WebProxy::get_Address()
			.set instance void System.Net.WebProxy::set_Address(class System.Uri)
		}
		.property instance class [mscorlib]System.Collections.ArrayList BypassArrayList()
		{
			.get instance class [mscorlib]System.Collections.ArrayList System.Net.WebProxy::get_BypassArrayList()
		}
		.property instance string[] BypassList()
		{
			.get instance string[] System.Net.WebProxy::get_BypassList()
			.set instance void System.Net.WebProxy::set_BypassList(string[])
		}
		.property instance bool BypassProxyOnLocal()
		{
			.get instance bool System.Net.WebProxy::get_BypassProxyOnLocal()
			.set instance void System.Net.WebProxy::set_BypassProxyOnLocal(bool)
		}
		.property instance class System.Net.ICredentials Credentials()
		{
			.get instance class System.Net.ICredentials System.Net.WebProxy::get_Credentials()
			.set instance void System.Net.WebProxy::set_Credentials(class System.Net.ICredentials)
		}
		.property instance bool UseDefaultCredentials()
		{
			.get instance bool System.Net.WebProxy::get_UseDefaultCredentials()
			.set instance void System.Net.WebProxy::set_UseDefaultCredentials(bool)
		}
	}
	.class public abstract serializable WebRequest
		extends [mscorlib]System.MarshalByRefObject
		implements [mscorlib]System.Runtime.Serialization.ISerializable
	{
		.method public static hidebysig 
			class System.Net.WebRequest Create(string requestUriString)
		{
			ret
		}
		.method public static hidebysig 
			class System.Net.WebRequest Create(class System.Uri requestUri)
		{
			ret
		}
		.method public static hidebysig 
			class System.Net.WebRequest CreateDefault(class System.Uri requestUri)
		{
			ret
		}
		.method public static hidebysig 
			bool RegisterPrefix(string prefix, class System.Net.IWebRequestCreate creator)
		{
			ret
		}
		.method family hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method family hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype [mscorlib]System.Runtime.Serialization.StreamingContext streamingContext)
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Runtime.Serialization.ISerializable.GetObjectData(class [mscorlib]System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype [mscorlib]System.Runtime.Serialization.StreamingContext streamingContext)
		{
			.permissionset linkcheck = (00)
			.override [mscorlib]System.Runtime.Serialization.ISerializable::GetObjectData
			ret
		}
		.method family virtual hidebysig newslot 
			instance void GetObjectData(class [mscorlib]System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype [mscorlib]System.Runtime.Serialization.StreamingContext streamingContext)
		{
			ret
		}
		.method public static hidebysig specialname 
			class System.Net.Cache.RequestCachePolicy get_DefaultCachePolicy()
		{
			ret
		}
		.method public static hidebysig specialname 
			void set_DefaultCachePolicy(class System.Net.Cache.RequestCachePolicy 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance class System.Net.Cache.RequestCachePolicy get_CachePolicy()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_CachePolicy(class System.Net.Cache.RequestCachePolicy 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance string get_Method()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_Method(string 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance class System.Uri get_RequestUri()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance string get_ConnectionGroupName()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_ConnectionGroupName(string 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance class System.Net.WebHeaderCollection get_Headers()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_Headers(class System.Net.WebHeaderCollection 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance int64 get_ContentLength()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_ContentLength(int64 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance string get_ContentType()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_ContentType(string 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance class System.Net.ICredentials get_Credentials()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_Credentials(class System.Net.ICredentials 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_UseDefaultCredentials()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_UseDefaultCredentials(bool 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance class System.Net.IWebProxy get_Proxy()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_Proxy(class System.Net.IWebProxy 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_PreAuthenticate()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_PreAuthenticate(bool 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance int32 get_Timeout()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_Timeout(int32 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance class [mscorlib]'System.IO.Stream' GetRequestStream()
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance class System.Net.WebResponse GetResponse()
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance class [mscorlib]System.IAsyncResult BeginGetResponse(class [mscorlib]System.AsyncCallback callback, object state)
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public virtual hidebysig newslot 
			instance class System.Net.WebResponse EndGetResponse(class [mscorlib]System.IAsyncResult asyncResult)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance class [mscorlib]System.IAsyncResult BeginGetRequestStream(class [mscorlib]System.AsyncCallback callback, object state)
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public virtual hidebysig newslot 
			instance class [mscorlib]'System.IO.Stream' EndGetRequestStream(class [mscorlib]System.IAsyncResult asyncResult)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void Abort()
		{
			ret
		}
		.method public static hidebysig specialname 
			class System.Net.IWebProxy get_DefaultWebProxy()
		{
			ret
		}
		.method public static hidebysig specialname 
			void set_DefaultWebProxy(class System.Net.IWebProxy 'value')
		{
			ret
		}
		.method public static hidebysig 
			class System.Net.IWebProxy GetSystemWebProxy()
		{
			ret
		}
		.property instance class System.Net.Cache.RequestCachePolicy CachePolicy()
		{
			.get instance class System.Net.Cache.RequestCachePolicy System.Net.WebRequest::get_CachePolicy()
			.set instance void System.Net.WebRequest::set_CachePolicy(class System.Net.Cache.RequestCachePolicy)
		}
		.property instance string ConnectionGroupName()
		{
			.get instance string System.Net.WebRequest::get_ConnectionGroupName()
			.set instance void System.Net.WebRequest::set_ConnectionGroupName(string)
		}
		.property instance int64 ContentLength()
		{
			.get instance int64 System.Net.WebRequest::get_ContentLength()
			.set instance void System.Net.WebRequest::set_ContentLength(int64)
		}
		.property instance string ContentType()
		{
			.get instance string System.Net.WebRequest::get_ContentType()
			.set instance void System.Net.WebRequest::set_ContentType(string)
		}
		.property instance class System.Net.ICredentials Credentials()
		{
			.get instance class System.Net.ICredentials System.Net.WebRequest::get_Credentials()
			.set instance void System.Net.WebRequest::set_Credentials(class System.Net.ICredentials)
		}
		.property class System.Net.Cache.RequestCachePolicy DefaultCachePolicy()
		{
			.get class System.Net.Cache.RequestCachePolicy System.Net.WebRequest::get_DefaultCachePolicy()
			.set void System.Net.WebRequest::set_DefaultCachePolicy(class System.Net.Cache.RequestCachePolicy)
		}
		.property class System.Net.IWebProxy DefaultWebProxy()
		{
			.get class System.Net.IWebProxy System.Net.WebRequest::get_DefaultWebProxy()
			.set void System.Net.WebRequest::set_DefaultWebProxy(class System.Net.IWebProxy)
		}
		.property instance class System.Net.WebHeaderCollection Headers()
		{
			.get instance class System.Net.WebHeaderCollection System.Net.WebRequest::get_Headers()
			.set instance void System.Net.WebRequest::set_Headers(class System.Net.WebHeaderCollection)
		}
		.property instance string Method()
		{
			.get instance string System.Net.WebRequest::get_Method()
			.set instance void System.Net.WebRequest::set_Method(string)
		}
		.property instance bool PreAuthenticate()
		{
			.get instance bool System.Net.WebRequest::get_PreAuthenticate()
			.set instance void System.Net.WebRequest::set_PreAuthenticate(bool)
		}
		.property instance class System.Net.IWebProxy Proxy()
		{
			.get instance class System.Net.IWebProxy System.Net.WebRequest::get_Proxy()
			.set instance void System.Net.WebRequest::set_Proxy(class System.Net.IWebProxy)
		}
		.property instance class System.Uri RequestUri()
		{
			.get instance class System.Uri System.Net.WebRequest::get_RequestUri()
		}
		.property instance int32 Timeout()
		{
			.get instance int32 System.Net.WebRequest::get_Timeout()
			.set instance void System.Net.WebRequest::set_Timeout(int32)
		}
		.property instance bool UseDefaultCredentials()
		{
			.get instance bool System.Net.WebRequest::get_UseDefaultCredentials()
			.set instance void System.Net.WebRequest::set_UseDefaultCredentials(bool)
		}
	}
	.class public abstract sealed WebRequestMethods
		extends [mscorlib]System.Object
	{
		.class nested public abstract sealed File
			extends [mscorlib]System.Object
		{
			.field static public literal string DownloadFile = "GET"
			.field static public literal string UploadFile = "PUT"
		}
		.class nested public abstract sealed Ftp
			extends [mscorlib]System.Object
		{
			.field static public literal string AppendFile = "APPE"
			.field static public literal string DeleteFile = "DELE"
			.field static public literal string DownloadFile = "RETR"
			.field static public literal string GetDateTimestamp = "MDTM"
			.field static public literal string GetFileSize = "SIZE"
			.field static public literal string ListDirectory = "NLST"
			.field static public literal string ListDirectoryDetails = "LIST"
			.field static public literal string MakeDirectory = "MKD"
			.field static public literal string PrintWorkingDirectory = "PWD"
			.field static public literal string RemoveDirectory = "RMD"
			.field static public literal string Rename = "RENAME"
			.field static public literal string UploadFile = "STOR"
			.field static public literal string UploadFileWithUniqueName = "STOU"
		}
		.class nested public abstract sealed Http
			extends [mscorlib]System.Object
		{
			.field static public literal string Connect = "CONNECT"
			.field static public literal string Get = "GET"
			.field static public literal string Head = "HEAD"
			.field static public literal string MkCol = "MKCOL"
			.field static public literal string Post = "POST"
			.field static public literal string Put = "PUT"
		}
	}
	.class public abstract serializable WebResponse
		extends [mscorlib]System.MarshalByRefObject
		implements [mscorlib]System.Runtime.Serialization.ISerializable, [mscorlib]System.IDisposable
	{
		.method family hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method family hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype [mscorlib]System.Runtime.Serialization.StreamingContext streamingContext)
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Runtime.Serialization.ISerializable.GetObjectData(class [mscorlib]System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype [mscorlib]System.Runtime.Serialization.StreamingContext streamingContext)
		{
			.permissionset linkcheck = (00)
			.override [mscorlib]System.Runtime.Serialization.ISerializable::GetObjectData
			ret
		}
		.method family virtual hidebysig newslot 
			instance void GetObjectData(class [mscorlib]System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype [mscorlib]System.Runtime.Serialization.StreamingContext streamingContext)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void Close()
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.IDisposable.Dispose()
		{
			.override [mscorlib]System.IDisposable::Dispose
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_IsFromCache()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_IsMutuallyAuthenticated()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance int64 get_ContentLength()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_ContentLength(int64 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance string get_ContentType()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance void set_ContentType(string 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance class [mscorlib]'System.IO.Stream' GetResponseStream()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance class System.Uri get_ResponseUri()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance class System.Net.WebHeaderCollection get_Headers()
		{
			ret
		}
		.property instance int64 ContentLength()
		{
			.get instance int64 System.Net.WebResponse::get_ContentLength()
			.set instance void System.Net.WebResponse::set_ContentLength(int64)
		}
		.property instance string ContentType()
		{
			.get instance string System.Net.WebResponse::get_ContentType()
			.set instance void System.Net.WebResponse::set_ContentType(string)
		}
		.property instance class System.Net.WebHeaderCollection Headers()
		{
			.get instance class System.Net.WebHeaderCollection System.Net.WebResponse::get_Headers()
		}
		.property instance bool IsFromCache()
		{
			.get instance bool System.Net.WebResponse::get_IsFromCache()
		}
		.property instance bool IsMutuallyAuthenticated()
		{
			.get instance bool System.Net.WebResponse::get_IsMutuallyAuthenticated()
		}
		.property instance class System.Uri ResponseUri()
		{
			.get instance class System.Uri System.Net.WebResponse::get_ResponseUri()
		}
	}
}
.namespace System.Net.Cache
{
	.class public sealed HttpCacheAgeControl
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype System.Net.Cache.HttpCacheAgeControl MaxAge = int32(0x00000002)
		.field static public literal valuetype System.Net.Cache.HttpCacheAgeControl MaxAgeAndMaxStale = int32(0x00000006)
		.field static public literal valuetype System.Net.Cache.HttpCacheAgeControl MaxAgeAndMinFresh = int32(0x00000003)
		.field static public literal valuetype System.Net.Cache.HttpCacheAgeControl MaxStale = int32(0x00000004)
		.field static public literal valuetype System.Net.Cache.HttpCacheAgeControl MinFresh = int32(0x00000001)
		.field static public literal valuetype System.Net.Cache.HttpCacheAgeControl None = int32(0x00000000)
	}
	.class public sealed HttpRequestCacheLevel
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype System.Net.Cache.HttpRequestCacheLevel BypassCache = int32(0x00000001)
		.field static public literal valuetype System.Net.Cache.HttpRequestCacheLevel CacheIfAvailable = int32(0x00000003)
		.field static public literal valuetype System.Net.Cache.HttpRequestCacheLevel CacheOnly = int32(0x00000002)
		.field static public literal valuetype System.Net.Cache.HttpRequestCacheLevel CacheOrNextCacheOnly = int32(0x00000007)
		.field static public literal valuetype System.Net.Cache.HttpRequestCacheLevel Default = int32(0x00000000)
		.field static public literal valuetype System.Net.Cache.HttpRequestCacheLevel NoCacheNoStore = int32(0x00000006)
		.field static public literal valuetype System.Net.Cache.HttpRequestCacheLevel Refresh = int32(0x00000008)
		.field static public literal valuetype System.Net.Cache.HttpRequestCacheLevel Reload = int32(0x00000005)
		.field static public literal valuetype System.Net.Cache.HttpRequestCacheLevel Revalidate = int32(0x00000004)
	}
	.class public HttpRequestCachePolicy
		extends System.Net.Cache.RequestCachePolicy
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(valuetype System.Net.Cache.HttpRequestCacheLevel level)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(valuetype System.Net.Cache.HttpCacheAgeControl cacheAgeControl, valuetype [mscorlib]System.TimeSpan ageOrFreshOrStale)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(valuetype System.Net.Cache.HttpCacheAgeControl cacheAgeControl, valuetype [mscorlib]System.TimeSpan maxAge, valuetype [mscorlib]System.TimeSpan freshOrStale)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(valuetype [mscorlib]System.DateTime cacheSyncDate)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(valuetype System.Net.Cache.HttpCacheAgeControl cacheAgeControl, valuetype [mscorlib]System.TimeSpan maxAge, valuetype [mscorlib]System.TimeSpan freshOrStale, valuetype [mscorlib]System.DateTime cacheSyncDate)
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype System.Net.Cache.HttpRequestCacheLevel get_Level()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [mscorlib]System.DateTime get_CacheSyncDate()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [mscorlib]System.TimeSpan get_MaxAge()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [mscorlib]System.TimeSpan get_MinFresh()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [mscorlib]System.TimeSpan get_MaxStale()
		{
			ret
		}
		.method public virtual hidebysig 
			instance string ToString()
		{
			ret
		}
		.property instance valuetype [mscorlib]System.DateTime CacheSyncDate()
		{
			.get instance valuetype [mscorlib]System.DateTime System.Net.Cache.HttpRequestCachePolicy::get_CacheSyncDate()
		}
		.property instance valuetype System.Net.Cache.HttpRequestCacheLevel Level()
		{
			.get instance valuetype System.Net.Cache.HttpRequestCacheLevel System.Net.Cache.HttpRequestCachePolicy::get_Level()
		}
		.property instance valuetype [mscorlib]System.TimeSpan MaxAge()
		{
			.get instance valuetype [mscorlib]System.TimeSpan System.Net.Cache.HttpRequestCachePolicy::get_MaxAge()
		}
		.property instance valuetype [mscorlib]System.TimeSpan MaxStale()
		{
			.get instance valuetype [mscorlib]System.TimeSpan System.Net.Cache.HttpRequestCachePolicy::get_MaxStale()
		}
		.property instance valuetype [mscorlib]System.TimeSpan MinFresh()
		{
			.get instance valuetype [mscorlib]System.TimeSpan System.Net.Cache.HttpRequestCachePolicy::get_MinFresh()
		}
	}
	.class public sealed RequestCacheLevel
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype System.Net.Cache.RequestCacheLevel BypassCache = int32(0x00000001)
		.field static public literal valuetype System.Net.Cache.RequestCacheLevel CacheIfAvailable = int32(0x00000003)
		.field static public literal valuetype System.Net.Cache.RequestCacheLevel CacheOnly = int32(0x00000002)
		.field static public literal valuetype System.Net.Cache.RequestCacheLevel Default = int32(0x00000000)
		.field static public literal valuetype System.Net.Cache.RequestCacheLevel NoCacheNoStore = int32(0x00000006)
		.field static public literal valuetype System.Net.Cache.RequestCacheLevel Reload = int32(0x00000005)
		.field static public literal valuetype System.Net.Cache.RequestCacheLevel Revalidate = int32(0x00000004)
	}
	.class public RequestCachePolicy
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(valuetype System.Net.Cache.RequestCacheLevel level)
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype System.Net.Cache.RequestCacheLevel get_Level()
		{
			ret
		}
		.method public virtual hidebysig 
			instance string ToString()
		{
			ret
		}
		.property instance valuetype System.Net.Cache.RequestCacheLevel Level()
		{
			.get instance valuetype System.Net.Cache.RequestCacheLevel System.Net.Cache.RequestCachePolicy::get_Level()
		}
	}
}
.namespace System.Net.Configuration
{
	.class public sealed AuthenticationModuleElement
		extends [System.Configuration]System.Configuration.ConfigurationElement
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string typeName)
		{
			ret
		}
		.method family virtual hidebysig specialname 
			instance class [System.Configuration]System.Configuration.ConfigurationPropertyCollection get_Properties()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Type()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Type(string 'value')
		{
			ret
		}
		.property instance class [System.Configuration]System.Configuration.ConfigurationPropertyCollection Properties()
		{
			.get instance class [System.Configuration]System.Configuration.ConfigurationPropertyCollection System.Net.Configuration.AuthenticationModuleElement::get_Properties()
		}
		.property instance string Type()
		{
			.get instance string System.Net.Configuration.AuthenticationModuleElement::get_Type()
			.set instance void System.Net.Configuration.AuthenticationModuleElement::set_Type(string)
		}
	}
	.class public sealed AuthenticationModuleElementCollection
		extends [System.Configuration]System.Configuration.ConfigurationElementCollection
	{
		.custom instance void [mscorlib]System.Reflection.DefaultMemberAttribute::.ctor(string) = (01 00 04 49 74 65 6D 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Net.Configuration.AuthenticationModuleElement get_Item(int32 index)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Item(int32 index, class System.Net.Configuration.AuthenticationModuleElement 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Net.Configuration.AuthenticationModuleElement get_Item(string name)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Item(string name, class System.Net.Configuration.AuthenticationModuleElement 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void Add(class System.Net.Configuration.AuthenticationModuleElement element)
		{
			ret
		}
		.method public hidebysig 
			instance void Clear()
		{
			ret
		}
		.method family virtual hidebysig 
			instance class [System.Configuration]System.Configuration.ConfigurationElement CreateNewElement()
		{
			ret
		}
		.method family virtual hidebysig 
			instance object GetElementKey(class [System.Configuration]System.Configuration.ConfigurationElement element)
		{
			ret
		}
		.method public hidebysig 
			instance int32 IndexOf(class System.Net.Configuration.AuthenticationModuleElement element)
		{
			ret
		}
		.method public hidebysig 
			instance void Remove(class System.Net.Configuration.AuthenticationModuleElement element)
		{
			ret
		}
		.method public hidebysig 
			instance void Remove(string name)
		{
			ret
		}
		.method public hidebysig 
			instance void RemoveAt(int32 index)
		{
			ret
		}
		.property instance class System.Net.Configuration.AuthenticationModuleElement Item(int32)
		{
			.get instance class System.Net.Configuration.AuthenticationModuleElement System.Net.Configuration.AuthenticationModuleElementCollection::get_Item(int32)
			.set instance void System.Net.Configuration.AuthenticationModuleElementCollection::set_Item(int32, class System.Net.Configuration.AuthenticationModuleElement)
		}
		.property instance class System.Net.Configuration.AuthenticationModuleElement Item(string)
		{
			.get instance class System.Net.Configuration.AuthenticationModuleElement System.Net.Configuration.AuthenticationModuleElementCollection::get_Item(string)
			.set instance void System.Net.Configuration.AuthenticationModuleElementCollection::set_Item(string, class System.Net.Configuration.AuthenticationModuleElement)
		}
	}
	.class public sealed AuthenticationModulesSection
		extends [System.Configuration]System.Configuration.ConfigurationSection
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method family virtual hidebysig 
			instance void PostDeserialize()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Net.Configuration.AuthenticationModuleElementCollection get_AuthenticationModules()
		{
			ret
		}
		.method family virtual hidebysig 
			instance void InitializeDefault()
		{
			ret
		}
		.method family virtual hidebysig specialname 
			instance class [System.Configuration]System.Configuration.ConfigurationPropertyCollection get_Properties()
		{
			ret
		}
		.property instance class System.Net.Configuration.AuthenticationModuleElementCollection AuthenticationModules()
		{
			.get instance class System.Net.Configuration.AuthenticationModuleElementCollection System.Net.Configuration.AuthenticationModulesSection::get_AuthenticationModules()
		}
		.property instance class [System.Configuration]System.Configuration.ConfigurationPropertyCollection Properties()
		{
			.get instance class [System.Configuration]System.Configuration.ConfigurationPropertyCollection System.Net.Configuration.AuthenticationModulesSection::get_Properties()
		}
	}
	.class public sealed BypassElement
		extends [System.Configuration]System.Configuration.ConfigurationElement
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string address)
		{
			ret
		}
		.method family virtual hidebysig specialname 
			instance class [System.Configuration]System.Configuration.ConfigurationPropertyCollection get_Properties()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Address()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Address(string 'value')
		{
			ret
		}
		.property instance string Address()
		{
			.get instance string System.Net.Configuration.BypassElement::get_Address()
			.set instance void System.Net.Configuration.BypassElement::set_Address(string)
		}
		.property instance class [System.Configuration]System.Configuration.ConfigurationPropertyCollection Properties()
		{
			.get instance class [System.Configuration]System.Configuration.ConfigurationPropertyCollection System.Net.Configuration.BypassElement::get_Properties()
		}
	}
	.class public sealed BypassElementCollection
		extends [System.Configuration]System.Configuration.ConfigurationElementCollection
	{
		.custom instance void [mscorlib]System.Reflection.DefaultMemberAttribute::.ctor(string) = (01 00 04 49 74 65 6D 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Net.Configuration.BypassElement get_Item(int32 index)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Item(int32 index, class System.Net.Configuration.BypassElement 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Net.Configuration.BypassElement get_Item(string name)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Item(string name, class System.Net.Configuration.BypassElement 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void Add(class System.Net.Configuration.BypassElement element)
		{
			ret
		}
		.method public hidebysig 
			instance void Clear()
		{
			ret
		}
		.method family virtual hidebysig 
			instance class [System.Configuration]System.Configuration.ConfigurationElement CreateNewElement()
		{
			ret
		}
		.method family virtual hidebysig 
			instance object GetElementKey(class [System.Configuration]System.Configuration.ConfigurationElement element)
		{
			ret
		}
		.method public hidebysig 
			instance int32 IndexOf(class System.Net.Configuration.BypassElement element)
		{
			ret
		}
		.method public hidebysig 
			instance void Remove(class System.Net.Configuration.BypassElement element)
		{
			ret
		}
		.method public hidebysig 
			instance void Remove(string name)
		{
			ret
		}
		.method public hidebysig 
			instance void RemoveAt(int32 index)
		{
			ret
		}
		.method family virtual hidebysig specialname 
			instance bool get_ThrowOnDuplicate()
		{
			ret
		}
		.property instance class System.Net.Configuration.BypassElement Item(int32)
		{
			.get instance class System.Net.Configuration.BypassElement System.Net.Configuration.BypassElementCollection::get_Item(int32)
			.set instance void System.Net.Configuration.BypassElementCollection::set_Item(int32, class System.Net.Configuration.BypassElement)
		}
		.property instance class System.Net.Configuration.BypassElement Item(string)
		{
			.get instance class System.Net.Configuration.BypassElement System.Net.Configuration.BypassElementCollection::get_Item(string)
			.set instance void System.Net.Configuration.BypassElementCollection::set_Item(string, class System.Net.Configuration.BypassElement)
		}
		.property instance bool ThrowOnDuplicate()
		{
			.get instance bool System.Net.Configuration.BypassElementCollection::get_ThrowOnDuplicate()
		}
	}
	.class public sealed ConnectionManagementElement
		extends [System.Configuration]System.Configuration.ConfigurationElement
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string address, int32 maxConnection)
		{
			ret
		}
		.method family virtual hidebysig specialname 
			instance class [System.Configuration]System.Configuration.ConfigurationPropertyCollection get_Properties()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Address()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Address(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_MaxConnection()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_MaxConnection(int32 'value')
		{
			ret
		}
		.property instance string Address()
		{
			.get instance string System.Net.Configuration.ConnectionManagementElement::get_Address()
			.set instance void System.Net.Configuration.ConnectionManagementElement::set_Address(string)
		}
		.property instance int32 MaxConnection()
		{
			.get instance int32 System.Net.Configuration.ConnectionManagementElement::get_MaxConnection()
			.set instance void System.Net.Configuration.ConnectionManagementElement::set_MaxConnection(int32)
		}
		.property instance class [System.Configuration]System.Configuration.ConfigurationPropertyCollection Properties()
		{
			.get instance class [System.Configuration]System.Configuration.ConfigurationPropertyCollection System.Net.Configuration.ConnectionManagementElement::get_Properties()
		}
	}
	.class public sealed ConnectionManagementElementCollection
		extends [System.Configuration]System.Configuration.ConfigurationElementCollection
	{
		.custom instance void [mscorlib]System.Reflection.DefaultMemberAttribute::.ctor(string) = (01 00 04 49 74 65 6D 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Net.Configuration.ConnectionManagementElement get_Item(int32 index)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Item(int32 index, class System.Net.Configuration.ConnectionManagementElement 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Net.Configuration.ConnectionManagementElement get_Item(string name)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Item(string name, class System.Net.Configuration.ConnectionManagementElement 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void Add(class System.Net.Configuration.ConnectionManagementElement element)
		{
			ret
		}
		.method public hidebysig 
			instance void Clear()
		{
			ret
		}
		.method family virtual hidebysig 
			instance class [System.Configuration]System.Configuration.ConfigurationElement CreateNewElement()
		{
			ret
		}
		.method family virtual hidebysig 
			instance object GetElementKey(class [System.Configuration]System.Configuration.ConfigurationElement element)
		{
			ret
		}
		.method public hidebysig 
			instance int32 IndexOf(class System.Net.Configuration.ConnectionManagementElement element)
		{
			ret
		}
		.method public hidebysig 
			instance void Remove(class System.Net.Configuration.ConnectionManagementElement element)
		{
			ret
		}
		.method public hidebysig 
			instance void Remove(string name)
		{
			ret
		}
		.method public hidebysig 
			instance void RemoveAt(int32 index)
		{
			ret
		}
		.property instance class System.Net.Configuration.ConnectionManagementElement Item(int32)
		{
			.get instance class System.Net.Configuration.ConnectionManagementElement System.Net.Configuration.ConnectionManagementElementCollection::get_Item(int32)
			.set instance void System.Net.Configuration.ConnectionManagementElementCollection::set_Item(int32, class System.Net.Configuration.ConnectionManagementElement)
		}
		.property instance class System.Net.Configuration.ConnectionManagementElement Item(string)
		{
			.get instance class System.Net.Configuration.ConnectionManagementElement System.Net.Configuration.ConnectionManagementElementCollection::get_Item(string)
			.set instance void System.Net.Configuration.ConnectionManagementElementCollection::set_Item(string, class System.Net.Configuration.ConnectionManagementElement)
		}
	}
	.class public sealed ConnectionManagementSection
		extends [System.Configuration]System.Configuration.ConfigurationSection
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Net.Configuration.ConnectionManagementElementCollection get_ConnectionManagement()
		{
			ret
		}
		.method family virtual hidebysig specialname 
			instance class [System.Configuration]System.Configuration.ConfigurationPropertyCollection get_Properties()
		{
			ret
		}
		.property instance class System.Net.Configuration.ConnectionManagementElementCollection ConnectionManagement()
		{
			.get instance class System.Net.Configuration.ConnectionManagementElementCollection System.Net.Configuration.ConnectionManagementSection::get_ConnectionManagement()
		}
		.property instance class [System.Configuration]System.Configuration.ConfigurationPropertyCollection Properties()
		{
			.get instance class [System.Configuration]System.Configuration.ConfigurationPropertyCollection System.Net.Configuration.ConnectionManagementSection::get_Properties()
		}
	}
	.class public sealed DefaultProxySection
		extends [System.Configuration]System.Configuration.ConfigurationSection
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method family virtual hidebysig 
			instance void PostDeserialize()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Net.Configuration.BypassElementCollection get_BypassList()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Net.Configuration.ModuleElement get_Module()
		{
			ret
		}
		.method family virtual hidebysig specialname 
			instance class [System.Configuration]System.Configuration.ConfigurationPropertyCollection get_Properties()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Net.Configuration.ProxyElement get_Proxy()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_Enabled()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Enabled(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_UseDefaultCredentials()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_UseDefaultCredentials(bool 'value')
		{
			ret
		}
		.method family virtual hidebysig 
			instance void Reset(class [System.Configuration]System.Configuration.ConfigurationElement parentElement)
		{
			ret
		}
		.property instance class System.Net.Configuration.BypassElementCollection BypassList()
		{
			.get instance class System.Net.Configuration.BypassElementCollection System.Net.Configuration.DefaultProxySection::get_BypassList()
		}
		.property instance bool Enabled()
		{
			.get instance bool System.Net.Configuration.DefaultProxySection::get_Enabled()
			.set instance void System.Net.Configuration.DefaultProxySection::set_Enabled(bool)
		}
		.property instance class System.Net.Configuration.ModuleElement Module()
		{
			.get instance class System.Net.Configuration.ModuleElement System.Net.Configuration.DefaultProxySection::get_Module()
		}
		.property instance class [System.Configuration]System.Configuration.ConfigurationPropertyCollection Properties()
		{
			.get instance class [System.Configuration]System.Configuration.ConfigurationPropertyCollection System.Net.Configuration.DefaultProxySection::get_Properties()
		}
		.property instance class System.Net.Configuration.ProxyElement Proxy()
		{
			.get instance class System.Net.Configuration.ProxyElement System.Net.Configuration.DefaultProxySection::get_Proxy()
		}
		.property instance bool UseDefaultCredentials()
		{
			.get instance bool System.Net.Configuration.DefaultProxySection::get_UseDefaultCredentials()
			.set instance void System.Net.Configuration.DefaultProxySection::set_UseDefaultCredentials(bool)
		}
	}
	.class public sealed FtpCachePolicyElement
		extends [System.Configuration]System.Configuration.ConfigurationElement
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method family virtual hidebysig specialname 
			instance class [System.Configuration]System.Configuration.ConfigurationPropertyCollection get_Properties()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype System.Net.Cache.RequestCacheLevel get_PolicyLevel()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_PolicyLevel(valuetype System.Net.Cache.RequestCacheLevel 'value')
		{
			ret
		}
		.method family virtual hidebysig 
			instance void DeserializeElement(class [System.Xml]System.Xml.XmlReader reader, bool serializeCollectionKey)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void Reset(class [System.Configuration]System.Configuration.ConfigurationElement parentElement)
		{
			ret
		}
		.property instance valuetype System.Net.Cache.RequestCacheLevel PolicyLevel()
		{
			.get instance valuetype System.Net.Cache.RequestCacheLevel System.Net.Configuration.FtpCachePolicyElement::get_PolicyLevel()
			.set instance void System.Net.Configuration.FtpCachePolicyElement::set_PolicyLevel(valuetype System.Net.Cache.RequestCacheLevel)
		}
		.property instance class [System.Configuration]System.Configuration.ConfigurationPropertyCollection Properties()
		{
			.get instance class [System.Configuration]System.Configuration.ConfigurationPropertyCollection System.Net.Configuration.FtpCachePolicyElement::get_Properties()
		}
	}
	.class public sealed HttpCachePolicyElement
		extends [System.Configuration]System.Configuration.ConfigurationElement
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method family virtual hidebysig specialname 
			instance class [System.Configuration]System.Configuration.ConfigurationPropertyCollection get_Properties()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [mscorlib]System.TimeSpan get_MaximumAge()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_MaximumAge(valuetype [mscorlib]System.TimeSpan 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [mscorlib]System.TimeSpan get_MaximumStale()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_MaximumStale(valuetype [mscorlib]System.TimeSpan 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [mscorlib]System.TimeSpan get_MinimumFresh()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_MinimumFresh(valuetype [mscorlib]System.TimeSpan 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype System.Net.Cache.HttpRequestCacheLevel get_PolicyLevel()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_PolicyLevel(valuetype System.Net.Cache.HttpRequestCacheLevel 'value')
		{
			ret
		}
		.method family virtual hidebysig 
			instance void DeserializeElement(class [System.Xml]System.Xml.XmlReader reader, bool serializeCollectionKey)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void Reset(class [System.Configuration]System.Configuration.ConfigurationElement parentElement)
		{
			ret
		}
		.property instance valuetype [mscorlib]System.TimeSpan MaximumAge()
		{
			.get instance valuetype [mscorlib]System.TimeSpan System.Net.Configuration.HttpCachePolicyElement::get_MaximumAge()
			.set instance void System.Net.Configuration.HttpCachePolicyElement::set_MaximumAge(valuetype [mscorlib]System.TimeSpan)
		}
		.property instance valuetype [mscorlib]System.TimeSpan MaximumStale()
		{
			.get instance valuetype [mscorlib]System.TimeSpan System.Net.Configuration.HttpCachePolicyElement::get_MaximumStale()
			.set instance void System.Net.Configuration.HttpCachePolicyElement::set_MaximumStale(valuetype [mscorlib]System.TimeSpan)
		}
		.property instance valuetype [mscorlib]System.TimeSpan MinimumFresh()
		{
			.get instance valuetype [mscorlib]System.TimeSpan System.Net.Configuration.HttpCachePolicyElement::get_MinimumFresh()
			.set instance void System.Net.Configuration.HttpCachePolicyElement::set_MinimumFresh(valuetype [mscorlib]System.TimeSpan)
		}
		.property instance valuetype System.Net.Cache.HttpRequestCacheLevel PolicyLevel()
		{
			.get instance valuetype System.Net.Cache.HttpRequestCacheLevel System.Net.Configuration.HttpCachePolicyElement::get_PolicyLevel()
			.set instance void System.Net.Configuration.HttpCachePolicyElement::set_PolicyLevel(valuetype System.Net.Cache.HttpRequestCacheLevel)
		}
		.property instance class [System.Configuration]System.Configuration.ConfigurationPropertyCollection Properties()
		{
			.get instance class [System.Configuration]System.Configuration.ConfigurationPropertyCollection System.Net.Configuration.HttpCachePolicyElement::get_Properties()
		}
	}
	.class public sealed HttpWebRequestElement
		extends [System.Configuration]System.Configuration.ConfigurationElement
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method family virtual hidebysig 
			instance void PostDeserialize()
		{
			ret
		}
		.method family virtual hidebysig specialname 
			instance class [System.Configuration]System.Configuration.ConfigurationPropertyCollection get_Properties()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_MaximumUnauthorizedUploadLength()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_MaximumUnauthorizedUploadLength(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_MaximumErrorResponseLength()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_MaximumErrorResponseLength(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_MaximumResponseHeadersLength()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_MaximumResponseHeadersLength(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_UseUnsafeHeaderParsing()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_UseUnsafeHeaderParsing(bool 'value')
		{
			ret
		}
		.property instance int32 MaximumErrorResponseLength()
		{
			.get instance int32 System.Net.Configuration.HttpWebRequestElement::get_MaximumErrorResponseLength()
			.set instance void System.Net.Configuration.HttpWebRequestElement::set_MaximumErrorResponseLength(int32)
		}
		.property instance int32 MaximumResponseHeadersLength()
		{
			.get instance int32 System.Net.Configuration.HttpWebRequestElement::get_MaximumResponseHeadersLength()
			.set instance void System.Net.Configuration.HttpWebRequestElement::set_MaximumResponseHeadersLength(int32)
		}
		.property instance int32 MaximumUnauthorizedUploadLength()
		{
			.get instance int32 System.Net.Configuration.HttpWebRequestElement::get_MaximumUnauthorizedUploadLength()
			.set instance void System.Net.Configuration.HttpWebRequestElement::set_MaximumUnauthorizedUploadLength(int32)
		}
		.property instance class [System.Configuration]System.Configuration.ConfigurationPropertyCollection Properties()
		{
			.get instance class [System.Configuration]System.Configuration.ConfigurationPropertyCollection System.Net.Configuration.HttpWebRequestElement::get_Properties()
		}
		.property instance bool UseUnsafeHeaderParsing()
		{
			.get instance bool System.Net.Configuration.HttpWebRequestElement::get_UseUnsafeHeaderParsing()
			.set instance void System.Net.Configuration.HttpWebRequestElement::set_UseUnsafeHeaderParsing(bool)
		}
	}
	.class public sealed Ipv6Element
		extends [System.Configuration]System.Configuration.ConfigurationElement
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method family virtual hidebysig specialname 
			instance class [System.Configuration]System.Configuration.ConfigurationPropertyCollection get_Properties()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_Enabled()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Enabled(bool 'value')
		{
			ret
		}
		.property instance bool Enabled()
		{
			.get instance bool System.Net.Configuration.Ipv6Element::get_Enabled()
			.set instance void System.Net.Configuration.Ipv6Element::set_Enabled(bool)
		}
		.property instance class [System.Configuration]System.Configuration.ConfigurationPropertyCollection Properties()
		{
			.get instance class [System.Configuration]System.Configuration.ConfigurationPropertyCollection System.Net.Configuration.Ipv6Element::get_Properties()
		}
	}
	.class public sealed ModuleElement
		extends [System.Configuration]System.Configuration.ConfigurationElement
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method family virtual hidebysig specialname 
			instance class [System.Configuration]System.Configuration.ConfigurationPropertyCollection get_Properties()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Type()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Type(string 'value')
		{
			ret
		}
		.property instance class [System.Configuration]System.Configuration.ConfigurationPropertyCollection Properties()
		{
			.get instance class [System.Configuration]System.Configuration.ConfigurationPropertyCollection System.Net.Configuration.ModuleElement::get_Properties()
		}
		.property instance string Type()
		{
			.get instance string System.Net.Configuration.ModuleElement::get_Type()
			.set instance void System.Net.Configuration.ModuleElement::set_Type(string)
		}
	}
	.class public sealed NetSectionGroup
		extends [System.Configuration]System.Configuration.ConfigurationSectionGroup
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Net.Configuration.AuthenticationModulesSection get_AuthenticationModules()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Net.Configuration.ConnectionManagementSection get_ConnectionManagement()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Net.Configuration.DefaultProxySection get_DefaultProxy()
		{
			ret
		}
		.method public static hidebysig 
			class System.Net.Configuration.NetSectionGroup GetSectionGroup(class [System.Configuration]System.Configuration.Configuration config)
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Net.Configuration.RequestCachingSection get_RequestCaching()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Net.Configuration.SettingsSection get_Settings()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Net.Configuration.WebRequestModulesSection get_WebRequestModules()
		{
			ret
		}
		.property instance class System.Net.Configuration.AuthenticationModulesSection AuthenticationModules()
		{
			.get instance class System.Net.Configuration.AuthenticationModulesSection System.Net.Configuration.NetSectionGroup::get_AuthenticationModules()
		}
		.property instance class System.Net.Configuration.ConnectionManagementSection ConnectionManagement()
		{
			.get instance class System.Net.Configuration.ConnectionManagementSection System.Net.Configuration.NetSectionGroup::get_ConnectionManagement()
		}
		.property instance class System.Net.Configuration.DefaultProxySection DefaultProxy()
		{
			.get instance class System.Net.Configuration.DefaultProxySection System.Net.Configuration.NetSectionGroup::get_DefaultProxy()
		}
		.property instance class System.Net.Configuration.RequestCachingSection RequestCaching()
		{
			.get instance class System.Net.Configuration.RequestCachingSection System.Net.Configuration.NetSectionGroup::get_RequestCaching()
		}
		.property instance class System.Net.Configuration.SettingsSection Settings()
		{
			.get instance class System.Net.Configuration.SettingsSection System.Net.Configuration.NetSectionGroup::get_Settings()
		}
		.property instance class System.Net.Configuration.WebRequestModulesSection WebRequestModules()
		{
			.get instance class System.Net.Configuration.WebRequestModulesSection System.Net.Configuration.NetSectionGroup::get_WebRequestModules()
		}
	}
	.class public sealed PerformanceCountersElement
		extends [System.Configuration]System.Configuration.ConfigurationElement
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_Enabled()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Enabled(bool 'value')
		{
			ret
		}
		.method family virtual hidebysig specialname 
			instance class [System.Configuration]System.Configuration.ConfigurationPropertyCollection get_Properties()
		{
			ret
		}
		.property instance bool Enabled()
		{
			.get instance bool System.Net.Configuration.PerformanceCountersElement::get_Enabled()
			.set instance void System.Net.Configuration.PerformanceCountersElement::set_Enabled(bool)
		}
		.property instance class [System.Configuration]System.Configuration.ConfigurationPropertyCollection Properties()
		{
			.get instance class [System.Configuration]System.Configuration.ConfigurationPropertyCollection System.Net.Configuration.PerformanceCountersElement::get_Properties()
		}
	}
	.class public sealed ProxyElement
		extends [System.Configuration]System.Configuration.ConfigurationElement
	{
		.class nested public sealed AutoDetectValues
			extends [mscorlib]System.Enum
		{
			.field public rtspecialname specialname int32 value__
			.field static public literal valuetype System.Net.Configuration.ProxyElement/AutoDetectValues False = int32(0x00000000)
			.field static public literal valuetype System.Net.Configuration.ProxyElement/AutoDetectValues True = int32(0x00000001)
			.field static public literal valuetype System.Net.Configuration.ProxyElement/AutoDetectValues Unspecified = int32(0xFFFFFFFF)
		}
		.class nested public sealed BypassOnLocalValues
			extends [mscorlib]System.Enum
		{
			.field public rtspecialname specialname int32 value__
			.field static public literal valuetype System.Net.Configuration.ProxyElement/BypassOnLocalValues False = int32(0x00000000)
			.field static public literal valuetype System.Net.Configuration.ProxyElement/BypassOnLocalValues True = int32(0x00000001)
			.field static public literal valuetype System.Net.Configuration.ProxyElement/BypassOnLocalValues Unspecified = int32(0xFFFFFFFF)
		}
		.class nested public sealed UseSystemDefaultValues
			extends [mscorlib]System.Enum
		{
			.field public rtspecialname specialname int32 value__
			.field static public literal valuetype System.Net.Configuration.ProxyElement/UseSystemDefaultValues False = int32(0x00000000)
			.field static public literal valuetype System.Net.Configuration.ProxyElement/UseSystemDefaultValues True = int32(0x00000001)
			.field static public literal valuetype System.Net.Configuration.ProxyElement/UseSystemDefaultValues Unspecified = int32(0xFFFFFFFF)
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method family virtual hidebysig specialname 
			instance class [System.Configuration]System.Configuration.ConfigurationPropertyCollection get_Properties()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype System.Net.Configuration.ProxyElement/AutoDetectValues get_AutoDetect()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_AutoDetect(valuetype System.Net.Configuration.ProxyElement/AutoDetectValues 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Uri get_ScriptLocation()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ScriptLocation(class System.Uri 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype System.Net.Configuration.ProxyElement/BypassOnLocalValues get_BypassOnLocal()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BypassOnLocal(valuetype System.Net.Configuration.ProxyElement/BypassOnLocalValues 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Uri get_ProxyAddress()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ProxyAddress(class System.Uri 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype System.Net.Configuration.ProxyElement/UseSystemDefaultValues get_UseSystemDefault()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_UseSystemDefault(valuetype System.Net.Configuration.ProxyElement/UseSystemDefaultValues 'value')
		{
			ret
		}
		.property instance valuetype System.Net.Configuration.ProxyElement/AutoDetectValues AutoDetect()
		{
			.get instance valuetype System.Net.Configuration.ProxyElement/AutoDetectValues System.Net.Configuration.ProxyElement::get_AutoDetect()
			.set instance void System.Net.Configuration.ProxyElement::set_AutoDetect(valuetype System.Net.Configuration.ProxyElement/AutoDetectValues)
		}
		.property instance valuetype System.Net.Configuration.ProxyElement/BypassOnLocalValues BypassOnLocal()
		{
			.get instance valuetype System.Net.Configuration.ProxyElement/BypassOnLocalValues System.Net.Configuration.ProxyElement::get_BypassOnLocal()
			.set instance void System.Net.Configuration.ProxyElement::set_BypassOnLocal(valuetype System.Net.Configuration.ProxyElement/BypassOnLocalValues)
		}
		.property instance class [System.Configuration]System.Configuration.ConfigurationPropertyCollection Properties()
		{
			.get instance class [System.Configuration]System.Configuration.ConfigurationPropertyCollection System.Net.Configuration.ProxyElement::get_Properties()
		}
		.property instance class System.Uri ProxyAddress()
		{
			.get instance class System.Uri System.Net.Configuration.ProxyElement::get_ProxyAddress()
			.set instance void System.Net.Configuration.ProxyElement::set_ProxyAddress(class System.Uri)
		}
		.property instance class System.Uri ScriptLocation()
		{
			.get instance class System.Uri System.Net.Configuration.ProxyElement::get_ScriptLocation()
			.set instance void System.Net.Configuration.ProxyElement::set_ScriptLocation(class System.Uri)
		}
		.property instance valuetype System.Net.Configuration.ProxyElement/UseSystemDefaultValues UseSystemDefault()
		{
			.get instance valuetype System.Net.Configuration.ProxyElement/UseSystemDefaultValues System.Net.Configuration.ProxyElement::get_UseSystemDefault()
			.set instance void System.Net.Configuration.ProxyElement::set_UseSystemDefault(valuetype System.Net.Configuration.ProxyElement/UseSystemDefaultValues)
		}
	}
	.class public sealed RequestCachingSection
		extends [System.Configuration]System.Configuration.ConfigurationSection
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Net.Configuration.HttpCachePolicyElement get_DefaultHttpCachePolicy()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Net.Configuration.FtpCachePolicyElement get_DefaultFtpCachePolicy()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype System.Net.Cache.RequestCacheLevel get_DefaultPolicyLevel()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_DefaultPolicyLevel(valuetype System.Net.Cache.RequestCacheLevel 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_DisableAllCaching()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_DisableAllCaching(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsPrivateCache()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_IsPrivateCache(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [mscorlib]System.TimeSpan get_UnspecifiedMaximumAge()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_UnspecifiedMaximumAge(valuetype [mscorlib]System.TimeSpan 'value')
		{
			ret
		}
		.method family virtual hidebysig 
			instance void DeserializeElement(class [System.Xml]System.Xml.XmlReader reader, bool serializeCollectionKey)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void PostDeserialize()
		{
			ret
		}
		.method family virtual hidebysig specialname 
			instance class [System.Configuration]System.Configuration.ConfigurationPropertyCollection get_Properties()
		{
			ret
		}
		.property instance class System.Net.Configuration.FtpCachePolicyElement DefaultFtpCachePolicy()
		{
			.get instance class System.Net.Configuration.FtpCachePolicyElement System.Net.Configuration.RequestCachingSection::get_DefaultFtpCachePolicy()
		}
		.property instance class System.Net.Configuration.HttpCachePolicyElement DefaultHttpCachePolicy()
		{
			.get instance class System.Net.Configuration.HttpCachePolicyElement System.Net.Configuration.RequestCachingSection::get_DefaultHttpCachePolicy()
		}
		.property instance valuetype System.Net.Cache.RequestCacheLevel DefaultPolicyLevel()
		{
			.get instance valuetype System.Net.Cache.RequestCacheLevel System.Net.Configuration.RequestCachingSection::get_DefaultPolicyLevel()
			.set instance void System.Net.Configuration.RequestCachingSection::set_DefaultPolicyLevel(valuetype System.Net.Cache.RequestCacheLevel)
		}
		.property instance bool DisableAllCaching()
		{
			.get instance bool System.Net.Configuration.RequestCachingSection::get_DisableAllCaching()
			.set instance void System.Net.Configuration.RequestCachingSection::set_DisableAllCaching(bool)
		}
		.property instance bool IsPrivateCache()
		{
			.get instance bool System.Net.Configuration.RequestCachingSection::get_IsPrivateCache()
			.set instance void System.Net.Configuration.RequestCachingSection::set_IsPrivateCache(bool)
		}
		.property instance class [System.Configuration]System.Configuration.ConfigurationPropertyCollection Properties()
		{
			.get instance class [System.Configuration]System.Configuration.ConfigurationPropertyCollection System.Net.Configuration.RequestCachingSection::get_Properties()
		}
		.property instance valuetype [mscorlib]System.TimeSpan UnspecifiedMaximumAge()
		{
			.get instance valuetype [mscorlib]System.TimeSpan System.Net.Configuration.RequestCachingSection::get_UnspecifiedMaximumAge()
			.set instance void System.Net.Configuration.RequestCachingSection::set_UnspecifiedMaximumAge(valuetype [mscorlib]System.TimeSpan)
		}
	}
	.class public sealed ServicePointManagerElement
		extends [System.Configuration]System.Configuration.ConfigurationElement
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method family virtual hidebysig 
			instance void PostDeserialize()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_CheckCertificateName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_CheckCertificateName(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_CheckCertificateRevocationList()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_CheckCertificateRevocationList(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_DnsRefreshTimeout()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_DnsRefreshTimeout(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_EnableDnsRoundRobin()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_EnableDnsRoundRobin(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_Expect100Continue()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Expect100Continue(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_UseNagleAlgorithm()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_UseNagleAlgorithm(bool 'value')
		{
			ret
		}
		.method family virtual hidebysig specialname 
			instance class [System.Configuration]System.Configuration.ConfigurationPropertyCollection get_Properties()
		{
			ret
		}
		.property instance bool CheckCertificateName()
		{
			.get instance bool System.Net.Configuration.ServicePointManagerElement::get_CheckCertificateName()
			.set instance void System.Net.Configuration.ServicePointManagerElement::set_CheckCertificateName(bool)
		}
		.property instance bool CheckCertificateRevocationList()
		{
			.get instance bool System.Net.Configuration.ServicePointManagerElement::get_CheckCertificateRevocationList()
			.set instance void System.Net.Configuration.ServicePointManagerElement::set_CheckCertificateRevocationList(bool)
		}
		.property instance int32 DnsRefreshTimeout()
		{
			.get instance int32 System.Net.Configuration.ServicePointManagerElement::get_DnsRefreshTimeout()
			.set instance void System.Net.Configuration.ServicePointManagerElement::set_DnsRefreshTimeout(int32)
		}
		.property instance bool EnableDnsRoundRobin()
		{
			.get instance bool System.Net.Configuration.ServicePointManagerElement::get_EnableDnsRoundRobin()
			.set instance void System.Net.Configuration.ServicePointManagerElement::set_EnableDnsRoundRobin(bool)
		}
		.property instance bool Expect100Continue()
		{
			.get instance bool System.Net.Configuration.ServicePointManagerElement::get_Expect100Continue()
			.set instance void System.Net.Configuration.ServicePointManagerElement::set_Expect100Continue(bool)
		}
		.property instance class [System.Configuration]System.Configuration.ConfigurationPropertyCollection Properties()
		{
			.get instance class [System.Configuration]System.Configuration.ConfigurationPropertyCollection System.Net.Configuration.ServicePointManagerElement::get_Properties()
		}
		.property instance bool UseNagleAlgorithm()
		{
			.get instance bool System.Net.Configuration.ServicePointManagerElement::get_UseNagleAlgorithm()
			.set instance void System.Net.Configuration.ServicePointManagerElement::set_UseNagleAlgorithm(bool)
		}
	}
	.class public sealed SettingsSection
		extends [System.Configuration]System.Configuration.ConfigurationSection
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Net.Configuration.HttpWebRequestElement get_HttpWebRequest()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Net.Configuration.Ipv6Element get_Ipv6()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Net.Configuration.ServicePointManagerElement get_ServicePointManager()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Net.Configuration.SocketElement get_Socket()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Net.Configuration.WebProxyScriptElement get_WebProxyScript()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Net.Configuration.PerformanceCountersElement get_PerformanceCounters()
		{
			ret
		}
		.method family virtual hidebysig specialname 
			instance class [System.Configuration]System.Configuration.ConfigurationPropertyCollection get_Properties()
		{
			ret
		}
		.property instance class System.Net.Configuration.HttpWebRequestElement HttpWebRequest()
		{
			.get instance class System.Net.Configuration.HttpWebRequestElement System.Net.Configuration.SettingsSection::get_HttpWebRequest()
		}
		.property instance class System.Net.Configuration.Ipv6Element Ipv6()
		{
			.get instance class System.Net.Configuration.Ipv6Element System.Net.Configuration.SettingsSection::get_Ipv6()
		}
		.property instance class System.Net.Configuration.PerformanceCountersElement PerformanceCounters()
		{
			.get instance class System.Net.Configuration.PerformanceCountersElement System.Net.Configuration.SettingsSection::get_PerformanceCounters()
		}
		.property instance class [System.Configuration]System.Configuration.ConfigurationPropertyCollection Properties()
		{
			.get instance class [System.Configuration]System.Configuration.ConfigurationPropertyCollection System.Net.Configuration.SettingsSection::get_Properties()
		}
		.property instance class System.Net.Configuration.ServicePointManagerElement ServicePointManager()
		{
			.get instance class System.Net.Configuration.ServicePointManagerElement System.Net.Configuration.SettingsSection::get_ServicePointManager()
		}
		.property instance class System.Net.Configuration.SocketElement Socket()
		{
			.get instance class System.Net.Configuration.SocketElement System.Net.Configuration.SettingsSection::get_Socket()
		}
		.property instance class System.Net.Configuration.WebProxyScriptElement WebProxyScript()
		{
			.get instance class System.Net.Configuration.WebProxyScriptElement System.Net.Configuration.SettingsSection::get_WebProxyScript()
		}
	}
	.class public sealed SocketElement
		extends [System.Configuration]System.Configuration.ConfigurationElement
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method family virtual hidebysig 
			instance void PostDeserialize()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_AlwaysUseCompletionPortsForAccept()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_AlwaysUseCompletionPortsForAccept(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_AlwaysUseCompletionPortsForConnect()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_AlwaysUseCompletionPortsForConnect(bool 'value')
		{
			ret
		}
		.method family virtual hidebysig specialname 
			instance class [System.Configuration]System.Configuration.ConfigurationPropertyCollection get_Properties()
		{
			ret
		}
		.property instance bool AlwaysUseCompletionPortsForAccept()
		{
			.get instance bool System.Net.Configuration.SocketElement::get_AlwaysUseCompletionPortsForAccept()
			.set instance void System.Net.Configuration.SocketElement::set_AlwaysUseCompletionPortsForAccept(bool)
		}
		.property instance bool AlwaysUseCompletionPortsForConnect()
		{
			.get instance bool System.Net.Configuration.SocketElement::get_AlwaysUseCompletionPortsForConnect()
			.set instance void System.Net.Configuration.SocketElement::set_AlwaysUseCompletionPortsForConnect(bool)
		}
		.property instance class [System.Configuration]System.Configuration.ConfigurationPropertyCollection Properties()
		{
			.get instance class [System.Configuration]System.Configuration.ConfigurationPropertyCollection System.Net.Configuration.SocketElement::get_Properties()
		}
	}
	.class public sealed WebProxyScriptElement
		extends [System.Configuration]System.Configuration.ConfigurationElement
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method family virtual hidebysig 
			instance void PostDeserialize()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [mscorlib]System.TimeSpan get_DownloadTimeout()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_DownloadTimeout(valuetype [mscorlib]System.TimeSpan 'value')
		{
			ret
		}
		.method family virtual hidebysig specialname 
			instance class [System.Configuration]System.Configuration.ConfigurationPropertyCollection get_Properties()
		{
			ret
		}
		.property instance valuetype [mscorlib]System.TimeSpan DownloadTimeout()
		{
			.get instance valuetype [mscorlib]System.TimeSpan System.Net.Configuration.WebProxyScriptElement::get_DownloadTimeout()
			.set instance void System.Net.Configuration.WebProxyScriptElement::set_DownloadTimeout(valuetype [mscorlib]System.TimeSpan)
		}
		.property instance class [System.Configuration]System.Configuration.ConfigurationPropertyCollection Properties()
		{
			.get instance class [System.Configuration]System.Configuration.ConfigurationPropertyCollection System.Net.Configuration.WebProxyScriptElement::get_Properties()
		}
	}
	.class public sealed WebRequestModuleElement
		extends [System.Configuration]System.Configuration.ConfigurationElement
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string prefix, string 'type')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string prefix, class [mscorlib]System.Type 'type')
		{
			ret
		}
		.method family virtual hidebysig specialname 
			instance class [System.Configuration]System.Configuration.ConfigurationPropertyCollection get_Properties()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Prefix()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Prefix(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]System.Type get_Type()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Type(class [mscorlib]System.Type 'value')
		{
			ret
		}
		.property instance string Prefix()
		{
			.get instance string System.Net.Configuration.WebRequestModuleElement::get_Prefix()
			.set instance void System.Net.Configuration.WebRequestModuleElement::set_Prefix(string)
		}
		.property instance class [System.Configuration]System.Configuration.ConfigurationPropertyCollection Properties()
		{
			.get instance class [System.Configuration]System.Configuration.ConfigurationPropertyCollection System.Net.Configuration.WebRequestModuleElement::get_Properties()
		}
		.property instance class [mscorlib]System.Type Type()
		{
			.get instance class [mscorlib]System.Type System.Net.Configuration.WebRequestModuleElement::get_Type()
			.set instance void System.Net.Configuration.WebRequestModuleElement::set_Type(class [mscorlib]System.Type)
		}
	}
	.class public sealed WebRequestModuleElementCollection
		extends [System.Configuration]System.Configuration.ConfigurationElementCollection
	{
		.custom instance void [mscorlib]System.Reflection.DefaultMemberAttribute::.ctor(string) = (01 00 04 49 74 65 6D 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Net.Configuration.WebRequestModuleElement get_Item(int32 index)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Item(int32 index, class System.Net.Configuration.WebRequestModuleElement 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Net.Configuration.WebRequestModuleElement get_Item(string name)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Item(string name, class System.Net.Configuration.WebRequestModuleElement 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void Add(class System.Net.Configuration.WebRequestModuleElement element)
		{
			ret
		}
		.method public hidebysig 
			instance void Clear()
		{
			ret
		}
		.method family virtual hidebysig 
			instance class [System.Configuration]System.Configuration.ConfigurationElement CreateNewElement()
		{
			ret
		}
		.method family virtual hidebysig 
			instance object GetElementKey(class [System.Configuration]System.Configuration.ConfigurationElement element)
		{
			ret
		}
		.method public hidebysig 
			instance int32 IndexOf(class System.Net.Configuration.WebRequestModuleElement element)
		{
			ret
		}
		.method public hidebysig 
			instance void Remove(class System.Net.Configuration.WebRequestModuleElement element)
		{
			ret
		}
		.method public hidebysig 
			instance void Remove(string name)
		{
			ret
		}
		.method public hidebysig 
			instance void RemoveAt(int32 index)
		{
			ret
		}
		.property instance class System.Net.Configuration.WebRequestModuleElement Item(int32)
		{
			.get instance class System.Net.Configuration.WebRequestModuleElement System.Net.Configuration.WebRequestModuleElementCollection::get_Item(int32)
			.set instance void System.Net.Configuration.WebRequestModuleElementCollection::set_Item(int32, class System.Net.Configuration.WebRequestModuleElement)
		}
		.property instance class System.Net.Configuration.WebRequestModuleElement Item(string)
		{
			.get instance class System.Net.Configuration.WebRequestModuleElement System.Net.Configuration.WebRequestModuleElementCollection::get_Item(string)
			.set instance void System.Net.Configuration.WebRequestModuleElementCollection::set_Item(string, class System.Net.Configuration.WebRequestModuleElement)
		}
	}
	.class public sealed WebRequestModulesSection
		extends [System.Configuration]System.Configuration.ConfigurationSection
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method family virtual hidebysig 
			instance void PostDeserialize()
		{
			ret
		}
		.method family virtual hidebysig 
			instance void InitializeDefault()
		{
			ret
		}
		.method family virtual hidebysig specialname 
			instance class [System.Configuration]System.Configuration.ConfigurationPropertyCollection get_Properties()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Net.Configuration.WebRequestModuleElementCollection get_WebRequestModules()
		{
			ret
		}
		.property instance class [System.Configuration]System.Configuration.ConfigurationPropertyCollection Properties()
		{
			.get instance class [System.Configuration]System.Configuration.ConfigurationPropertyCollection System.Net.Configuration.WebRequestModulesSection::get_Properties()
		}
		.property instance class System.Net.Configuration.WebRequestModuleElementCollection WebRequestModules()
		{
			.get instance class System.Net.Configuration.WebRequestModuleElementCollection System.Net.Configuration.WebRequestModulesSection::get_WebRequestModules()
		}
	}
}
.namespace System.Net.Security
{
	.class public sealed AuthenticationLevel
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype System.Net.Security.AuthenticationLevel MutualAuthRequested = int32(0x00000001)
		.field static public literal valuetype System.Net.Security.AuthenticationLevel MutualAuthRequired = int32(0x00000002)
		.field static public literal valuetype System.Net.Security.AuthenticationLevel None = int32(0x00000000)
	}
	.class public sealed ProtectionLevel
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype System.Net.Security.ProtectionLevel EncryptAndSign = int32(0x00000002)
		.field static public literal valuetype System.Net.Security.ProtectionLevel None = int32(0x00000000)
		.field static public literal valuetype System.Net.Security.ProtectionLevel Sign = int32(0x00000001)
	}
}
.namespace System.Net.Sockets
{
	.class public sealed AddressFamily
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype System.Net.Sockets.AddressFamily AppleTalk = int32(0x00000010)
		.field static public literal valuetype System.Net.Sockets.AddressFamily Atm = int32(0x00000016)
		.field static public literal valuetype System.Net.Sockets.AddressFamily Banyan = int32(0x00000015)
		.field static public literal valuetype System.Net.Sockets.AddressFamily Ccitt = int32(0x0000000A)
		.field static public literal valuetype System.Net.Sockets.AddressFamily Chaos = int32(0x00000005)
		.field static public literal valuetype System.Net.Sockets.AddressFamily Cluster = int32(0x00000018)
		.field static public literal valuetype System.Net.Sockets.AddressFamily DataKit = int32(0x00000009)
		.field static public literal valuetype System.Net.Sockets.AddressFamily DataLink = int32(0x0000000D)
		.field static public literal valuetype System.Net.Sockets.AddressFamily DecNet = int32(0x0000000C)
		.field static public literal valuetype System.Net.Sockets.AddressFamily Ecma = int32(0x00000008)
		.field static public literal valuetype System.Net.Sockets.AddressFamily FireFox = int32(0x00000013)
		.field static public literal valuetype System.Net.Sockets.AddressFamily HyperChannel = int32(0x0000000F)
		.field static public literal valuetype System.Net.Sockets.AddressFamily Ieee12844 = int32(0x00000019)
		.field static public literal valuetype System.Net.Sockets.AddressFamily ImpLink = int32(0x00000003)
		.field static public literal valuetype System.Net.Sockets.AddressFamily InterNetwork = int32(0x00000002)
		.field static public literal valuetype System.Net.Sockets.AddressFamily InterNetworkV6 = int32(0x00000017)
		.field static public literal valuetype System.Net.Sockets.AddressFamily Ipx = int32(0x00000006)
		.field static public literal valuetype System.Net.Sockets.AddressFamily Irda = int32(0x0000001A)
		.field static public literal valuetype System.Net.Sockets.AddressFamily Iso = int32(0x00000007)
		.field static public literal valuetype System.Net.Sockets.AddressFamily Lat = int32(0x0000000E)
		.field static public literal valuetype System.Net.Sockets.AddressFamily Max = int32(0x0000001D)
		.field static public literal valuetype System.Net.Sockets.AddressFamily NS = int32(0x00000006)
		.field static public literal valuetype System.Net.Sockets.AddressFamily NetBios = int32(0x00000011)
		.field static public literal valuetype System.Net.Sockets.AddressFamily NetworkDesigners = int32(0x0000001C)
		.field static public literal valuetype System.Net.Sockets.AddressFamily Osi = int32(0x00000007)
		.field static public literal valuetype System.Net.Sockets.AddressFamily Pup = int32(0x00000004)
		.field static public literal valuetype System.Net.Sockets.AddressFamily Sna = int32(0x0000000B)
		.field static public literal valuetype System.Net.Sockets.AddressFamily Unix = int32(0x00000001)
		.field static public literal valuetype System.Net.Sockets.AddressFamily Unknown = int32(0xFFFFFFFF)
		.field static public literal valuetype System.Net.Sockets.AddressFamily Unspecified = int32(0x00000000)
		.field static public literal valuetype System.Net.Sockets.AddressFamily VoiceView = int32(0x00000012)
	}
	.class public sealed IOControlCode
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int64 value__
		.field static public literal valuetype System.Net.Sockets.IOControlCode AbsorbRouterAlert = int64(0x98000005)
		.field static public literal valuetype System.Net.Sockets.IOControlCode AddMulticastGroupOnInterface = int64(0x9800000A)
		.field static public literal valuetype System.Net.Sockets.IOControlCode AddressListChange = int64(0x28000017)
		.field static public literal valuetype System.Net.Sockets.IOControlCode AddressListQuery = int64(0x48000016)
		.field static public literal valuetype System.Net.Sockets.IOControlCode AddressListSort = int64(0xC8000019)
		.field static public literal valuetype System.Net.Sockets.IOControlCode AssociateHandle = int64(0x88000001)
		.field static public literal valuetype System.Net.Sockets.IOControlCode AsyncIO = int64(0x8004667D)
		.field static public literal valuetype System.Net.Sockets.IOControlCode BindToInterface = int64(0x98000008)
		.field static public literal valuetype System.Net.Sockets.IOControlCode DataToRead = int64(0x4004667F)
		.field static public literal valuetype System.Net.Sockets.IOControlCode DeleteMulticastGroupFromInterface = int64(0x9800000B)
		.field static public literal valuetype System.Net.Sockets.IOControlCode EnableCircularQueuing = int64(0x28000002)
		.field static public literal valuetype System.Net.Sockets.IOControlCode Flush = int64(0x28000004)
		.field static public literal valuetype System.Net.Sockets.IOControlCode GetBroadcastAddress = int64(0x48000005)
		.field static public literal valuetype System.Net.Sockets.IOControlCode GetExtensionFunctionPointer = int64(0xC8000006)
		.field static public literal valuetype System.Net.Sockets.IOControlCode GetGroupQos = int64(0xC8000008)
		.field static public literal valuetype System.Net.Sockets.IOControlCode GetQos = int64(0xC8000007)
		.field static public literal valuetype System.Net.Sockets.IOControlCode KeepAliveValues = int64(0x98000004)
		.field static public literal valuetype System.Net.Sockets.IOControlCode LimitBroadcasts = int64(0x98000007)
		.field static public literal valuetype System.Net.Sockets.IOControlCode MulticastInterface = int64(0x98000009)
		.field static public literal valuetype System.Net.Sockets.IOControlCode MulticastScope = int64(0x8800000A)
		.field static public literal valuetype System.Net.Sockets.IOControlCode MultipointLoopback = int64(0x88000009)
		.field static public literal valuetype System.Net.Sockets.IOControlCode NamespaceChange = int64(0x88000019)
		.field static public literal valuetype System.Net.Sockets.IOControlCode NonBlockingIO = int64(0x8004667E)
		.field static public literal valuetype System.Net.Sockets.IOControlCode OobDataRead = int64(0x40047307)
		.field static public literal valuetype System.Net.Sockets.IOControlCode QueryTargetPnpHandle = int64(0x48000018)
		.field static public literal valuetype System.Net.Sockets.IOControlCode ReceiveAll = int64(0x98000001)
		.field static public literal valuetype System.Net.Sockets.IOControlCode ReceiveAllIgmpMulticast = int64(0x98000003)
		.field static public literal valuetype System.Net.Sockets.IOControlCode ReceiveAllMulticast = int64(0x98000002)
		.field static public literal valuetype System.Net.Sockets.IOControlCode RoutingInterfaceChange = int64(0x88000015)
		.field static public literal valuetype System.Net.Sockets.IOControlCode RoutingInterfaceQuery = int64(0xC8000014)
		.field static public literal valuetype System.Net.Sockets.IOControlCode SetGroupQos = int64(0x8800000C)
		.field static public literal valuetype System.Net.Sockets.IOControlCode SetQos = int64(0x8800000B)
		.field static public literal valuetype System.Net.Sockets.IOControlCode TranslateHandle = int64(0xC800000D)
		.field static public literal valuetype System.Net.Sockets.IOControlCode UnicastInterface = int64(0x98000006)
	}
	.class public sequential sealed IPPacketInformation
		extends [mscorlib]System.ValueType
	{
		.method public hidebysig specialname 
			instance class System.Net.IPAddress get_Address()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_Interface()
		{
			ret
		}
		.method public static hidebysig specialname 
			bool op_Equality(valuetype System.Net.Sockets.IPPacketInformation packetInformation1, valuetype System.Net.Sockets.IPPacketInformation packetInformation2)
		{
			ret
		}
		.method public static hidebysig specialname 
			bool op_Inequality(valuetype System.Net.Sockets.IPPacketInformation packetInformation1, valuetype System.Net.Sockets.IPPacketInformation packetInformation2)
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool Equals(object comparand)
		{
			ret
		}
		.method public virtual hidebysig 
			instance int32 GetHashCode()
		{
			ret
		}

		//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
		.field private int32 __Asmmeta_Private_Field
		.property instance class System.Net.IPAddress Address()
		{
			.get instance class System.Net.IPAddress System.Net.Sockets.IPPacketInformation::get_Address()
		}
		.property instance int32 Interface()
		{
			.get instance int32 System.Net.Sockets.IPPacketInformation::get_Interface()
		}
	}
	.class public IPv6MulticastOption
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance void .ctor(class System.Net.IPAddress group, int64 ifindex)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class System.Net.IPAddress group)
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Net.IPAddress get_Group()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Group(class System.Net.IPAddress 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int64 get_InterfaceIndex()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_InterfaceIndex(int64 'value')
		{
			ret
		}
		.property instance class System.Net.IPAddress Group()
		{
			.get instance class System.Net.IPAddress System.Net.Sockets.IPv6MulticastOption::get_Group()
			.set instance void System.Net.Sockets.IPv6MulticastOption::set_Group(class System.Net.IPAddress)
		}
		.property instance int64 InterfaceIndex()
		{
			.get instance int64 System.Net.Sockets.IPv6MulticastOption::get_InterfaceIndex()
			.set instance void System.Net.Sockets.IPv6MulticastOption::set_InterfaceIndex(int64)
		}
	}
	.class public LingerOption
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance void .ctor(bool enable, int32 seconds)
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_Enabled()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Enabled(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_LingerTime()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_LingerTime(int32 'value')
		{
			ret
		}
		.property instance bool Enabled()
		{
			.get instance bool System.Net.Sockets.LingerOption::get_Enabled()
			.set instance void System.Net.Sockets.LingerOption::set_Enabled(bool)
		}
		.property instance int32 LingerTime()
		{
			.get instance int32 System.Net.Sockets.LingerOption::get_LingerTime()
			.set instance void System.Net.Sockets.LingerOption::set_LingerTime(int32)
		}
	}
	.class public MulticastOption
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance void .ctor(class System.Net.IPAddress group, class System.Net.IPAddress mcint)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class System.Net.IPAddress group, int32 interfaceIndex)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class System.Net.IPAddress group)
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Net.IPAddress get_Group()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Group(class System.Net.IPAddress 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Net.IPAddress get_LocalAddress()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_LocalAddress(class System.Net.IPAddress 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_InterfaceIndex()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_InterfaceIndex(int32 'value')
		{
			ret
		}
		.property instance class System.Net.IPAddress Group()
		{
			.get instance class System.Net.IPAddress System.Net.Sockets.MulticastOption::get_Group()
			.set instance void System.Net.Sockets.MulticastOption::set_Group(class System.Net.IPAddress)
		}
		.property instance int32 InterfaceIndex()
		{
			.get instance int32 System.Net.Sockets.MulticastOption::get_InterfaceIndex()
			.set instance void System.Net.Sockets.MulticastOption::set_InterfaceIndex(int32)
		}
		.property instance class System.Net.IPAddress LocalAddress()
		{
			.get instance class System.Net.IPAddress System.Net.Sockets.MulticastOption::get_LocalAddress()
			.set instance void System.Net.Sockets.MulticastOption::set_LocalAddress(class System.Net.IPAddress)
		}
	}
	.class public NetworkStream
		extends [mscorlib]'System.IO.Stream'
	{
		.method public hidebysig specialname 
			instance void .ctor(class System.Net.Sockets.Socket socket)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class System.Net.Sockets.Socket socket, bool ownsSocket)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class System.Net.Sockets.Socket socket, valuetype [mscorlib]'System.IO.FileAccess' access)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class System.Net.Sockets.Socket socket, valuetype [mscorlib]'System.IO.FileAccess' access, bool ownsSocket)
		{
			ret
		}
		.method family hidebysig specialname 
			instance class System.Net.Sockets.Socket get_Socket()
		{
			ret
		}
		.method family hidebysig specialname 
			instance bool get_Readable()
		{
			ret
		}
		.method family hidebysig specialname 
			instance void set_Readable(bool 'value')
		{
			ret
		}
		.method family hidebysig specialname 
			instance bool get_Writeable()
		{
			ret
		}
		.method family hidebysig specialname 
			instance void set_Writeable(bool 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance bool get_CanRead()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance bool get_CanSeek()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance bool get_CanWrite()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance bool get_CanTimeout()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance int32 get_ReadTimeout()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_ReadTimeout(int32 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance int32 get_WriteTimeout()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_WriteTimeout(int32 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_DataAvailable()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance int64 get_Length()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance int64 get_Position()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance void set_Position(int64 'value')
		{
			ret
		}
		.method public virtual hidebysig 
			instance int64 Seek(int64 offset, valuetype [mscorlib]'System.IO.SeekOrigin' origin)
		{
			ret
		}
		.method public virtual hidebysig 
			instance int32 Read([in][out] uint8[] buffer, int32 offset, int32 size)
		{
			ret
		}
		.method public virtual hidebysig 
			instance void Write(uint8[] buffer, int32 offset, int32 size)
		{
			ret
		}
		.method public hidebysig 
			instance void Close(int32 timeout)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void Dispose(bool disposing)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void Finalize()
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [mscorlib]System.IAsyncResult BeginRead(uint8[] buffer, int32 offset, int32 size, class [mscorlib]System.AsyncCallback callback, object state)
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public virtual hidebysig 
			instance int32 EndRead(class [mscorlib]System.IAsyncResult asyncResult)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [mscorlib]System.IAsyncResult BeginWrite(uint8[] buffer, int32 offset, int32 size, class [mscorlib]System.AsyncCallback callback, object state)
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public virtual hidebysig 
			instance void EndWrite(class [mscorlib]System.IAsyncResult asyncResult)
		{
			ret
		}
		.method public virtual hidebysig 
			instance void Flush()
		{
			ret
		}
		.method public virtual hidebysig 
			instance void SetLength(int64 'value')
		{
			ret
		}
		.property instance bool CanRead()
		{
			.get instance bool System.Net.Sockets.NetworkStream::get_CanRead()
		}
		.property instance bool CanSeek()
		{
			.get instance bool System.Net.Sockets.NetworkStream::get_CanSeek()
		}
		.property instance bool CanTimeout()
		{
			.get instance bool System.Net.Sockets.NetworkStream::get_CanTimeout()
		}
		.property instance bool CanWrite()
		{
			.get instance bool System.Net.Sockets.NetworkStream::get_CanWrite()
		}
		.property instance bool DataAvailable()
		{
			.get instance bool System.Net.Sockets.NetworkStream::get_DataAvailable()
		}
		.property instance int64 Length()
		{
			.get instance int64 System.Net.Sockets.NetworkStream::get_Length()
		}
		.property instance int64 Position()
		{
			.get instance int64 System.Net.Sockets.NetworkStream::get_Position()
			.set instance void System.Net.Sockets.NetworkStream::set_Position(int64)
		}
		.property instance int32 ReadTimeout()
		{
			.get instance int32 System.Net.Sockets.NetworkStream::get_ReadTimeout()
			.set instance void System.Net.Sockets.NetworkStream::set_ReadTimeout(int32)
		}
		.property instance bool Readable()
		{
			.get instance bool System.Net.Sockets.NetworkStream::get_Readable()
			.set instance void System.Net.Sockets.NetworkStream::set_Readable(bool)
		}
		.property instance class System.Net.Sockets.Socket Socket()
		{
			.get instance class System.Net.Sockets.Socket System.Net.Sockets.NetworkStream::get_Socket()
		}
		.property instance int32 WriteTimeout()
		{
			.get instance int32 System.Net.Sockets.NetworkStream::get_WriteTimeout()
			.set instance void System.Net.Sockets.NetworkStream::set_WriteTimeout(int32)
		}
		.property instance bool Writeable()
		{
			.get instance bool System.Net.Sockets.NetworkStream::get_Writeable()
			.set instance void System.Net.Sockets.NetworkStream::set_Writeable(bool)
		}
	}
	.class public sealed ProtocolFamily
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype System.Net.Sockets.ProtocolFamily AppleTalk = int32(0x00000010)
		.field static public literal valuetype System.Net.Sockets.ProtocolFamily Atm = int32(0x00000016)
		.field static public literal valuetype System.Net.Sockets.ProtocolFamily Banyan = int32(0x00000015)
		.field static public literal valuetype System.Net.Sockets.ProtocolFamily Ccitt = int32(0x0000000A)
		.field static public literal valuetype System.Net.Sockets.ProtocolFamily Chaos = int32(0x00000005)
		.field static public literal valuetype System.Net.Sockets.ProtocolFamily Cluster = int32(0x00000018)
		.field static public literal valuetype System.Net.Sockets.ProtocolFamily DataKit = int32(0x00000009)
		.field static public literal valuetype System.Net.Sockets.ProtocolFamily DataLink = int32(0x0000000D)
		.field static public literal valuetype System.Net.Sockets.ProtocolFamily DecNet = int32(0x0000000C)
		.field static public literal valuetype System.Net.Sockets.ProtocolFamily Ecma = int32(0x00000008)
		.field static public literal valuetype System.Net.Sockets.ProtocolFamily FireFox = int32(0x00000013)
		.field static public literal valuetype System.Net.Sockets.ProtocolFamily HyperChannel = int32(0x0000000F)
		.field static public literal valuetype System.Net.Sockets.ProtocolFamily Ieee12844 = int32(0x00000019)
		.field static public literal valuetype System.Net.Sockets.ProtocolFamily ImpLink = int32(0x00000003)
		.field static public literal valuetype System.Net.Sockets.ProtocolFamily InterNetwork = int32(0x00000002)
		.field static public literal valuetype System.Net.Sockets.ProtocolFamily InterNetworkV6 = int32(0x00000017)
		.field static public literal valuetype System.Net.Sockets.ProtocolFamily Ipx = int32(0x00000006)
		.field static public literal valuetype System.Net.Sockets.ProtocolFamily Irda = int32(0x0000001A)
		.field static public literal valuetype System.Net.Sockets.ProtocolFamily Iso = int32(0x00000007)
		.field static public literal valuetype System.Net.Sockets.ProtocolFamily Lat = int32(0x0000000E)
		.field static public literal valuetype System.Net.Sockets.ProtocolFamily Max = int32(0x0000001D)
		.field static public literal valuetype System.Net.Sockets.ProtocolFamily NS = int32(0x00000006)
		.field static public literal valuetype System.Net.Sockets.ProtocolFamily NetBios = int32(0x00000011)
		.field static public literal valuetype System.Net.Sockets.ProtocolFamily NetworkDesigners = int32(0x0000001C)
		.field static public literal valuetype System.Net.Sockets.ProtocolFamily Osi = int32(0x00000007)
		.field static public literal valuetype System.Net.Sockets.ProtocolFamily Pup = int32(0x00000004)
		.field static public literal valuetype System.Net.Sockets.ProtocolFamily Sna = int32(0x0000000B)
		.field static public literal valuetype System.Net.Sockets.ProtocolFamily Unix = int32(0x00000001)
		.field static public literal valuetype System.Net.Sockets.ProtocolFamily Unknown = int32(0xFFFFFFFF)
		.field static public literal valuetype System.Net.Sockets.ProtocolFamily Unspecified = int32(0x00000000)
		.field static public literal valuetype System.Net.Sockets.ProtocolFamily VoiceView = int32(0x00000012)
	}
	.class public sealed ProtocolType
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype System.Net.Sockets.ProtocolType Ggp = int32(0x00000003)
		.field static public literal valuetype System.Net.Sockets.ProtocolType IP = int32(0x00000000)
		.field static public literal valuetype System.Net.Sockets.ProtocolType IPSecAuthenticationHeader = int32(0x00000033)
		.field static public literal valuetype System.Net.Sockets.ProtocolType IPSecEncapsulatingSecurityPayload = int32(0x00000032)
		.field static public literal valuetype System.Net.Sockets.ProtocolType IPv4 = int32(0x00000004)
		.field static public literal valuetype System.Net.Sockets.ProtocolType IPv6 = int32(0x00000029)
		.field static public literal valuetype System.Net.Sockets.ProtocolType IPv6DestinationOptions = int32(0x0000003C)
		.field static public literal valuetype System.Net.Sockets.ProtocolType IPv6FragmentHeader = int32(0x0000002C)
		.field static public literal valuetype System.Net.Sockets.ProtocolType IPv6HopByHopOptions = int32(0x00000000)
		.field static public literal valuetype System.Net.Sockets.ProtocolType IPv6NoNextHeader = int32(0x0000003B)
		.field static public literal valuetype System.Net.Sockets.ProtocolType IPv6RoutingHeader = int32(0x0000002B)
		.field static public literal valuetype System.Net.Sockets.ProtocolType Icmp = int32(0x00000001)
		.field static public literal valuetype System.Net.Sockets.ProtocolType IcmpV6 = int32(0x0000003A)
		.field static public literal valuetype System.Net.Sockets.ProtocolType Idp = int32(0x00000016)
		.field static public literal valuetype System.Net.Sockets.ProtocolType Igmp = int32(0x00000002)
		.field static public literal valuetype System.Net.Sockets.ProtocolType Ipx = int32(0x000003E8)
		.field static public literal valuetype System.Net.Sockets.ProtocolType ND = int32(0x0000004D)
		.field static public literal valuetype System.Net.Sockets.ProtocolType Pup = int32(0x0000000C)
		.field static public literal valuetype System.Net.Sockets.ProtocolType Raw = int32(0x000000FF)
		.field static public literal valuetype System.Net.Sockets.ProtocolType Spx = int32(0x000004E8)
		.field static public literal valuetype System.Net.Sockets.ProtocolType SpxII = int32(0x000004E9)
		.field static public literal valuetype System.Net.Sockets.ProtocolType Tcp = int32(0x00000006)
		.field static public literal valuetype System.Net.Sockets.ProtocolType Udp = int32(0x00000011)
		.field static public literal valuetype System.Net.Sockets.ProtocolType Unknown = int32(0xFFFFFFFF)
		.field static public literal valuetype System.Net.Sockets.ProtocolType Unspecified = int32(0x00000000)
	}
	.class public sealed SelectMode
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype System.Net.Sockets.SelectMode SelectError = int32(0x00000002)
		.field static public literal valuetype System.Net.Sockets.SelectMode SelectRead = int32(0x00000000)
		.field static public literal valuetype System.Net.Sockets.SelectMode SelectWrite = int32(0x00000001)
	}
	.class public Socket
		extends [mscorlib]System.Object
		implements [mscorlib]System.IDisposable
	{
		.method public hidebysig specialname 
			instance void .ctor(valuetype System.Net.Sockets.AddressFamily addressFamily, valuetype System.Net.Sockets.SocketType socketType, valuetype System.Net.Sockets.ProtocolType protocolType)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(valuetype System.Net.Sockets.SocketInformation socketInformation)
		{
			ret
		}
		.method public static hidebysig specialname 
			bool get_SupportsIPv4()
		{
			ret
		}
		.method public static hidebysig specialname 
			bool get_SupportsIPv6()
		{
			ret
		}
		.method public static hidebysig specialname 
			bool get_OSSupportsIPv6()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_Available()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Net.EndPoint get_LocalEndPoint()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Net.EndPoint get_RemoteEndPoint()
		{
			ret
		}
		.method public hidebysig specialname 
			instance native int get_Handle()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_Blocking()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Blocking(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_UseOnlyOverlappedIO()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_UseOnlyOverlappedIO(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_Connected()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype System.Net.Sockets.AddressFamily get_AddressFamily()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype System.Net.Sockets.SocketType get_SocketType()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype System.Net.Sockets.ProtocolType get_ProtocolType()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsBound()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_ExclusiveAddressUse()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ExclusiveAddressUse(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ReceiveBufferSize()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ReceiveBufferSize(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_SendBufferSize()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_SendBufferSize(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ReceiveTimeout()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ReceiveTimeout(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_SendTimeout()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_SendTimeout(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Net.Sockets.LingerOption get_LingerState()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_LingerState(class System.Net.Sockets.LingerOption 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_NoDelay()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_NoDelay(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int16 get_Ttl()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Ttl(int16 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_DontFragment()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_DontFragment(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_MulticastLoopback()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_MulticastLoopback(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_EnableBroadcast()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_EnableBroadcast(bool 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void Bind(class System.Net.EndPoint localEP)
		{
			ret
		}
		.method public hidebysig 
			instance void Connect(class System.Net.EndPoint remoteEP)
		{
			ret
		}
		.method public hidebysig 
			instance void Connect(class System.Net.IPAddress address, int32 port)
		{
			ret
		}
		.method public hidebysig 
			instance void Connect(string host, int32 port)
		{
			ret
		}
		.method public hidebysig 
			instance void Connect(class System.Net.IPAddress[] addresses, int32 port)
		{
			ret
		}
		.method public hidebysig 
			instance void Close()
		{
			ret
		}
		.method public hidebysig 
			instance void Close(int32 timeout)
		{
			ret
		}
		.method public hidebysig 
			instance void Listen(int32 backlog)
		{
			ret
		}
		.method public hidebysig 
			instance class System.Net.Sockets.Socket Accept()
		{
			ret
		}
		.method public hidebysig 
			instance int32 Send(uint8[] buffer, int32 size, valuetype System.Net.Sockets.SocketFlags socketFlags)
		{
			ret
		}
		.method public hidebysig 
			instance int32 Send(uint8[] buffer, valuetype System.Net.Sockets.SocketFlags socketFlags)
		{
			ret
		}
		.method public hidebysig 
			instance int32 Send(uint8[] buffer)
		{
			ret
		}
		.method public hidebysig 
			instance int32 Send(uint8[] buffer, int32 offset, int32 size, valuetype System.Net.Sockets.SocketFlags socketFlags)
		{
			ret
		}
		.method public hidebysig 
			instance int32 Send(uint8[] buffer, int32 offset, int32 size, valuetype System.Net.Sockets.SocketFlags socketFlags, [out] valuetype System.Net.Sockets.SocketError& errorCode)
		{
			ret
		}
		.method public hidebysig 
			instance int32 SendTo(uint8[] buffer, int32 offset, int32 size, valuetype System.Net.Sockets.SocketFlags socketFlags, class System.Net.EndPoint remoteEP)
		{
			ret
		}
		.method public hidebysig 
			instance int32 SendTo(uint8[] buffer, int32 size, valuetype System.Net.Sockets.SocketFlags socketFlags, class System.Net.EndPoint remoteEP)
		{
			ret
		}
		.method public hidebysig 
			instance int32 SendTo(uint8[] buffer, valuetype System.Net.Sockets.SocketFlags socketFlags, class System.Net.EndPoint remoteEP)
		{
			ret
		}
		.method public hidebysig 
			instance int32 SendTo(uint8[] buffer, class System.Net.EndPoint remoteEP)
		{
			ret
		}
		.method public hidebysig 
			instance int32 Receive(uint8[] buffer, int32 size, valuetype System.Net.Sockets.SocketFlags socketFlags)
		{
			ret
		}
		.method public hidebysig 
			instance int32 Receive(uint8[] buffer, valuetype System.Net.Sockets.SocketFlags socketFlags)
		{
			ret
		}
		.method public hidebysig 
			instance int32 Receive(uint8[] buffer)
		{
			ret
		}
		.method public hidebysig 
			instance int32 Receive(uint8[] buffer, int32 offset, int32 size, valuetype System.Net.Sockets.SocketFlags socketFlags)
		{
			ret
		}
		.method public hidebysig 
			instance int32 Receive(uint8[] buffer, int32 offset, int32 size, valuetype System.Net.Sockets.SocketFlags socketFlags, [out] valuetype System.Net.Sockets.SocketError& errorCode)
		{
			ret
		}
		.method public hidebysig 
			instance int32 Receive(class [mscorlib]'System.Collections.Generic.IList`1'<valuetype [mscorlib]'System.ArraySegment`1'<uint8>> buffers)
		{
			ret
		}
		.method public hidebysig 
			instance int32 Receive(class [mscorlib]'System.Collections.Generic.IList`1'<valuetype [mscorlib]'System.ArraySegment`1'<uint8>> buffers, valuetype System.Net.Sockets.SocketFlags socketFlags)
		{
			.custom instance void [mscorlib]System.CLSCompliantAttribute::.ctor(bool) = (01 00 00 00 00)
			ret
		}
		.method public hidebysig 
			instance int32 Receive(class [mscorlib]'System.Collections.Generic.IList`1'<valuetype [mscorlib]'System.ArraySegment`1'<uint8>> buffers, valuetype System.Net.Sockets.SocketFlags socketFlags, [out] valuetype System.Net.Sockets.SocketError& errorCode)
		{
			.custom instance void [mscorlib]System.CLSCompliantAttribute::.ctor(bool) = (01 00 00 00 00)
			ret
		}
		.method public hidebysig 
			instance int32 ReceiveMessageFrom(uint8[] buffer, int32 offset, int32 size, valuetype System.Net.Sockets.SocketFlags& socketFlags, class System.Net.EndPoint& remoteEP, [out] valuetype System.Net.Sockets.IPPacketInformation& ipPacketInformation)
		{
			ret
		}
		.method public hidebysig 
			instance int32 ReceiveFrom(uint8[] buffer, int32 offset, int32 size, valuetype System.Net.Sockets.SocketFlags socketFlags, class System.Net.EndPoint& remoteEP)
		{
			ret
		}
		.method public hidebysig 
			instance int32 ReceiveFrom(uint8[] buffer, int32 size, valuetype System.Net.Sockets.SocketFlags socketFlags, class System.Net.EndPoint& remoteEP)
		{
			ret
		}
		.method public hidebysig 
			instance int32 ReceiveFrom(uint8[] buffer, valuetype System.Net.Sockets.SocketFlags socketFlags, class System.Net.EndPoint& remoteEP)
		{
			ret
		}
		.method public hidebysig 
			instance int32 ReceiveFrom(uint8[] buffer, class System.Net.EndPoint& remoteEP)
		{
			ret
		}
		.method public hidebysig 
			instance int32 IOControl(int32 ioControlCode, uint8[] optionInValue, uint8[] optionOutValue)
		{
			ret
		}
		.method public hidebysig 
			instance int32 IOControl(valuetype System.Net.Sockets.IOControlCode ioControlCode, uint8[] optionInValue, uint8[] optionOutValue)
		{
			ret
		}
		.method public hidebysig 
			instance void SetSocketOption(valuetype System.Net.Sockets.SocketOptionLevel optionLevel, valuetype System.Net.Sockets.SocketOptionName optionName, int32 optionValue)
		{
			ret
		}
		.method public hidebysig 
			instance void SetSocketOption(valuetype System.Net.Sockets.SocketOptionLevel optionLevel, valuetype System.Net.Sockets.SocketOptionName optionName, uint8[] optionValue)
		{
			ret
		}
		.method public hidebysig 
			instance void SetSocketOption(valuetype System.Net.Sockets.SocketOptionLevel optionLevel, valuetype System.Net.Sockets.SocketOptionName optionName, bool optionValue)
		{
			ret
		}
		.method public hidebysig 
			instance void SetSocketOption(valuetype System.Net.Sockets.SocketOptionLevel optionLevel, valuetype System.Net.Sockets.SocketOptionName optionName, object optionValue)
		{
			ret
		}
		.method public hidebysig 
			instance object GetSocketOption(valuetype System.Net.Sockets.SocketOptionLevel optionLevel, valuetype System.Net.Sockets.SocketOptionName optionName)
		{
			ret
		}
		.method public hidebysig 
			instance void GetSocketOption(valuetype System.Net.Sockets.SocketOptionLevel optionLevel, valuetype System.Net.Sockets.SocketOptionName optionName, uint8[] optionValue)
		{
			ret
		}
		.method public hidebysig 
			instance uint8[] GetSocketOption(valuetype System.Net.Sockets.SocketOptionLevel optionLevel, valuetype System.Net.Sockets.SocketOptionName optionName, int32 optionLength)
		{
			ret
		}
		.method public hidebysig 
			instance bool Poll(int32 microSeconds, valuetype System.Net.Sockets.SelectMode mode)
		{
			ret
		}
		.method public static hidebysig 
			void Select(class [mscorlib]System.Collections.IList checkRead, class [mscorlib]System.Collections.IList checkWrite, class [mscorlib]System.Collections.IList checkError, int32 microSeconds)
		{
			ret
		}
		.method public hidebysig 
			instance class [mscorlib]System.IAsyncResult BeginConnect(class System.Net.EndPoint remoteEP, class [mscorlib]System.AsyncCallback callback, object state)
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public hidebysig 
			instance valuetype System.Net.Sockets.SocketInformation DuplicateAndClose(int32 targetProcessId)
		{
			ret
		}
		.method public hidebysig 
			instance class [mscorlib]System.IAsyncResult BeginConnect(string host, int32 port, class [mscorlib]System.AsyncCallback requestCallback, object state)
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public hidebysig 
			instance class [mscorlib]System.IAsyncResult BeginConnect(class System.Net.IPAddress address, int32 port, class [mscorlib]System.AsyncCallback requestCallback, object state)
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public hidebysig 
			instance class [mscorlib]System.IAsyncResult BeginConnect(class System.Net.IPAddress[] addresses, int32 port, class [mscorlib]System.AsyncCallback requestCallback, object state)
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public hidebysig 
			instance class [mscorlib]System.IAsyncResult BeginDisconnect(bool reuseSocket, class [mscorlib]System.AsyncCallback callback, object state)
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public hidebysig 
			instance void Disconnect(bool reuseSocket)
		{
			ret
		}
		.method public hidebysig 
			instance void EndConnect(class [mscorlib]System.IAsyncResult asyncResult)
		{
			ret
		}
		.method public hidebysig 
			instance void EndDisconnect(class [mscorlib]System.IAsyncResult asyncResult)
		{
			ret
		}
		.method public hidebysig 
			instance class [mscorlib]System.IAsyncResult BeginSend(uint8[] buffer, int32 offset, int32 size, valuetype System.Net.Sockets.SocketFlags socketFlags, class [mscorlib]System.AsyncCallback callback, object state)
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public hidebysig 
			instance class [mscorlib]System.IAsyncResult BeginSend(uint8[] buffer, int32 offset, int32 size, valuetype System.Net.Sockets.SocketFlags socketFlags, [out] valuetype System.Net.Sockets.SocketError& errorCode, class [mscorlib]System.AsyncCallback callback, object state)
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public hidebysig 
			instance class [mscorlib]System.IAsyncResult BeginSend(class [mscorlib]'System.Collections.Generic.IList`1'<valuetype [mscorlib]'System.ArraySegment`1'<uint8>> buffers, valuetype System.Net.Sockets.SocketFlags socketFlags, class [mscorlib]System.AsyncCallback callback, object state)
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public hidebysig 
			instance class [mscorlib]System.IAsyncResult BeginSend(class [mscorlib]'System.Collections.Generic.IList`1'<valuetype [mscorlib]'System.ArraySegment`1'<uint8>> buffers, valuetype System.Net.Sockets.SocketFlags socketFlags, [out] valuetype System.Net.Sockets.SocketError& errorCode, class [mscorlib]System.AsyncCallback callback, object state)
		{
			.permissionset linkcheck = (00)
			.custom instance void [mscorlib]System.CLSCompliantAttribute::.ctor(bool) = (01 00 00 00 00)
			ret
		}
		.method public hidebysig 
			instance int32 EndSend(class [mscorlib]System.IAsyncResult asyncResult)
		{
			ret
		}
		.method public hidebysig 
			instance int32 EndSend(class [mscorlib]System.IAsyncResult asyncResult, [out] valuetype System.Net.Sockets.SocketError& errorCode)
		{
			ret
		}
		.method public hidebysig 
			instance class [mscorlib]System.IAsyncResult BeginSendTo(uint8[] buffer, int32 offset, int32 size, valuetype System.Net.Sockets.SocketFlags socketFlags, class System.Net.EndPoint remoteEP, class [mscorlib]System.AsyncCallback callback, object state)
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public hidebysig 
			instance int32 EndSendTo(class [mscorlib]System.IAsyncResult asyncResult)
		{
			ret
		}
		.method public hidebysig 
			instance class [mscorlib]System.IAsyncResult BeginReceive(uint8[] buffer, int32 offset, int32 size, valuetype System.Net.Sockets.SocketFlags socketFlags, class [mscorlib]System.AsyncCallback callback, object state)
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public hidebysig 
			instance class [mscorlib]System.IAsyncResult BeginReceive(uint8[] buffer, int32 offset, int32 size, valuetype System.Net.Sockets.SocketFlags socketFlags, [out] valuetype System.Net.Sockets.SocketError& errorCode, class [mscorlib]System.AsyncCallback callback, object state)
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public hidebysig 
			instance class [mscorlib]System.IAsyncResult BeginReceive(class [mscorlib]'System.Collections.Generic.IList`1'<valuetype [mscorlib]'System.ArraySegment`1'<uint8>> buffers, valuetype System.Net.Sockets.SocketFlags socketFlags, class [mscorlib]System.AsyncCallback callback, object state)
		{
			.permissionset linkcheck = (00)
			.custom instance void [mscorlib]System.CLSCompliantAttribute::.ctor(bool) = (01 00 00 00 00)
			ret
		}
		.method public hidebysig 
			instance class [mscorlib]System.IAsyncResult BeginReceive(class [mscorlib]'System.Collections.Generic.IList`1'<valuetype [mscorlib]'System.ArraySegment`1'<uint8>> buffers, valuetype System.Net.Sockets.SocketFlags socketFlags, [out] valuetype System.Net.Sockets.SocketError& errorCode, class [mscorlib]System.AsyncCallback callback, object state)
		{
			.permissionset linkcheck = (00)
			.custom instance void [mscorlib]System.CLSCompliantAttribute::.ctor(bool) = (01 00 00 00 00)
			ret
		}
		.method public hidebysig 
			instance int32 EndReceive(class [mscorlib]System.IAsyncResult asyncResult)
		{
			ret
		}
		.method public hidebysig 
			instance int32 EndReceive(class [mscorlib]System.IAsyncResult asyncResult, [out] valuetype System.Net.Sockets.SocketError& errorCode)
		{
			ret
		}
		.method public hidebysig 
			instance class [mscorlib]System.IAsyncResult BeginReceiveMessageFrom(uint8[] buffer, int32 offset, int32 size, valuetype System.Net.Sockets.SocketFlags socketFlags, class System.Net.EndPoint& remoteEP, class [mscorlib]System.AsyncCallback callback, object state)
		{
			ret
		}
		.method public hidebysig 
			instance int32 EndReceiveMessageFrom(class [mscorlib]System.IAsyncResult asyncResult, valuetype System.Net.Sockets.SocketFlags& socketFlags, class System.Net.EndPoint& endPoint, [out] valuetype System.Net.Sockets.IPPacketInformation& ipPacketInformation)
		{
			ret
		}
		.method public hidebysig 
			instance class [mscorlib]System.IAsyncResult BeginReceiveFrom(uint8[] buffer, int32 offset, int32 size, valuetype System.Net.Sockets.SocketFlags socketFlags, class System.Net.EndPoint& remoteEP, class [mscorlib]System.AsyncCallback callback, object state)
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public hidebysig 
			instance int32 EndReceiveFrom(class [mscorlib]System.IAsyncResult asyncResult, class System.Net.EndPoint& endPoint)
		{
			ret
		}
		.method public hidebysig 
			instance class [mscorlib]System.IAsyncResult BeginAccept(class [mscorlib]System.AsyncCallback callback, object state)
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public hidebysig 
			instance class System.Net.Sockets.Socket EndAccept(class [mscorlib]System.IAsyncResult asyncResult)
		{
			ret
		}
		.method public hidebysig 
			instance void Shutdown(valuetype System.Net.Sockets.SocketShutdown how)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void Dispose(bool disposing)
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.IDisposable.Dispose()
		{
			.override [mscorlib]System.IDisposable::Dispose
			ret
		}
		.method family virtual hidebysig 
			instance void Finalize()
		{
			ret
		}
		.property instance valuetype System.Net.Sockets.AddressFamily AddressFamily()
		{
			.get instance valuetype System.Net.Sockets.AddressFamily System.Net.Sockets.Socket::get_AddressFamily()
		}
		.property instance int32 Available()
		{
			.get instance int32 System.Net.Sockets.Socket::get_Available()
		}
		.property instance bool Blocking()
		{
			.get instance bool System.Net.Sockets.Socket::get_Blocking()
			.set instance void System.Net.Sockets.Socket::set_Blocking(bool)
		}
		.property instance bool Connected()
		{
			.get instance bool System.Net.Sockets.Socket::get_Connected()
		}
		.property instance bool DontFragment()
		{
			.get instance bool System.Net.Sockets.Socket::get_DontFragment()
			.set instance void System.Net.Sockets.Socket::set_DontFragment(bool)
		}
		.property instance bool EnableBroadcast()
		{
			.get instance bool System.Net.Sockets.Socket::get_EnableBroadcast()
			.set instance void System.Net.Sockets.Socket::set_EnableBroadcast(bool)
		}
		.property instance bool ExclusiveAddressUse()
		{
			.get instance bool System.Net.Sockets.Socket::get_ExclusiveAddressUse()
			.set instance void System.Net.Sockets.Socket::set_ExclusiveAddressUse(bool)
		}
		.property instance native int Handle()
		{
			.get instance native int System.Net.Sockets.Socket::get_Handle()
		}
		.property instance bool IsBound()
		{
			.get instance bool System.Net.Sockets.Socket::get_IsBound()
		}
		.property instance class System.Net.Sockets.LingerOption LingerState()
		{
			.get instance class System.Net.Sockets.LingerOption System.Net.Sockets.Socket::get_LingerState()
			.set instance void System.Net.Sockets.Socket::set_LingerState(class System.Net.Sockets.LingerOption)
		}
		.property instance class System.Net.EndPoint LocalEndPoint()
		{
			.get instance class System.Net.EndPoint System.Net.Sockets.Socket::get_LocalEndPoint()
		}
		.property instance bool MulticastLoopback()
		{
			.get instance bool System.Net.Sockets.Socket::get_MulticastLoopback()
			.set instance void System.Net.Sockets.Socket::set_MulticastLoopback(bool)
		}
		.property instance bool NoDelay()
		{
			.get instance bool System.Net.Sockets.Socket::get_NoDelay()
			.set instance void System.Net.Sockets.Socket::set_NoDelay(bool)
		}
		.property bool OSSupportsIPv6()
		{
			.get bool System.Net.Sockets.Socket::get_OSSupportsIPv6()
		}
		.property instance valuetype System.Net.Sockets.ProtocolType ProtocolType()
		{
			.get instance valuetype System.Net.Sockets.ProtocolType System.Net.Sockets.Socket::get_ProtocolType()
		}
		.property instance int32 ReceiveBufferSize()
		{
			.get instance int32 System.Net.Sockets.Socket::get_ReceiveBufferSize()
			.set instance void System.Net.Sockets.Socket::set_ReceiveBufferSize(int32)
		}
		.property instance int32 ReceiveTimeout()
		{
			.get instance int32 System.Net.Sockets.Socket::get_ReceiveTimeout()
			.set instance void System.Net.Sockets.Socket::set_ReceiveTimeout(int32)
		}
		.property instance class System.Net.EndPoint RemoteEndPoint()
		{
			.get instance class System.Net.EndPoint System.Net.Sockets.Socket::get_RemoteEndPoint()
		}
		.property instance int32 SendBufferSize()
		{
			.get instance int32 System.Net.Sockets.Socket::get_SendBufferSize()
			.set instance void System.Net.Sockets.Socket::set_SendBufferSize(int32)
		}
		.property instance int32 SendTimeout()
		{
			.get instance int32 System.Net.Sockets.Socket::get_SendTimeout()
			.set instance void System.Net.Sockets.Socket::set_SendTimeout(int32)
		}
		.property instance valuetype System.Net.Sockets.SocketType SocketType()
		{
			.get instance valuetype System.Net.Sockets.SocketType System.Net.Sockets.Socket::get_SocketType()
		}
		.property bool SupportsIPv4()
		{
			.get bool System.Net.Sockets.Socket::get_SupportsIPv4()
		}
		.property bool SupportsIPv6()
		{
			.custom instance void [mscorlib]System.ObsoleteAttribute::.ctor(string) = (01 00 78 53 75 70 70 6F 72 74 73 49 50 76 36 20 69 73 20 6F 62 73 6F 6C 65 74 65 64 20 66 6F 72 20 74 68 69 73 20 74 79 70 65 2C 20 70 6C 65 61 73 65 20 75 73 65 20 4F 53 53 75 70 70 6F 72 74 73 49 50 76 36 20 69 6E 73 74 65 61 64 2E 20 68 74 74 70 3A 2F 2F 67 6F 2E 6D 69 63 72 6F 73 6F 66 74 2E 63 6F 6D 2F 66 77 6C 69 6E 6B 2F 3F 6C 69 6E 6B 69 64 3D 31 34 32 30 32 00 00)
			.get bool System.Net.Sockets.Socket::get_SupportsIPv6()
		}
		.property instance int16 Ttl()
		{
			.get instance int16 System.Net.Sockets.Socket::get_Ttl()
			.set instance void System.Net.Sockets.Socket::set_Ttl(int16)
		}
		.property instance bool UseOnlyOverlappedIO()
		{
			.get instance bool System.Net.Sockets.Socket::get_UseOnlyOverlappedIO()
			.set instance void System.Net.Sockets.Socket::set_UseOnlyOverlappedIO(bool)
		}
	}
	.class public sealed SocketError
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype System.Net.Sockets.SocketError AccessDenied = int32(0x0000271D)
		.field static public literal valuetype System.Net.Sockets.SocketError AddressAlreadyInUse = int32(0x00002740)
		.field static public literal valuetype System.Net.Sockets.SocketError AddressFamilyNotSupported = int32(0x0000273F)
		.field static public literal valuetype System.Net.Sockets.SocketError AddressNotAvailable = int32(0x00002741)
		.field static public literal valuetype System.Net.Sockets.SocketError AlreadyInProgress = int32(0x00002735)
		.field static public literal valuetype System.Net.Sockets.SocketError ConnectionAborted = int32(0x00002745)
		.field static public literal valuetype System.Net.Sockets.SocketError ConnectionRefused = int32(0x0000274D)
		.field static public literal valuetype System.Net.Sockets.SocketError ConnectionReset = int32(0x00002746)
		.field static public literal valuetype System.Net.Sockets.SocketError DestinationAddressRequired = int32(0x00002737)
		.field static public literal valuetype System.Net.Sockets.SocketError Disconnecting = int32(0x00002775)
		.field static public literal valuetype System.Net.Sockets.SocketError Fault = int32(0x0000271E)
		.field static public literal valuetype System.Net.Sockets.SocketError HostDown = int32(0x00002750)
		.field static public literal valuetype System.Net.Sockets.SocketError HostNotFound = int32(0x00002AF9)
		.field static public literal valuetype System.Net.Sockets.SocketError HostUnreachable = int32(0x00002751)
		.field static public literal valuetype System.Net.Sockets.SocketError IOPending = int32(0x000003E5)
		.field static public literal valuetype System.Net.Sockets.SocketError InProgress = int32(0x00002734)
		.field static public literal valuetype System.Net.Sockets.SocketError Interrupted = int32(0x00002714)
		.field static public literal valuetype System.Net.Sockets.SocketError InvalidArgument = int32(0x00002726)
		.field static public literal valuetype System.Net.Sockets.SocketError IsConnected = int32(0x00002748)
		.field static public literal valuetype System.Net.Sockets.SocketError MessageSize = int32(0x00002738)
		.field static public literal valuetype System.Net.Sockets.SocketError NetworkDown = int32(0x00002742)
		.field static public literal valuetype System.Net.Sockets.SocketError NetworkReset = int32(0x00002744)
		.field static public literal valuetype System.Net.Sockets.SocketError NetworkUnreachable = int32(0x00002743)
		.field static public literal valuetype System.Net.Sockets.SocketError NoBufferSpaceAvailable = int32(0x00002747)
		.field static public literal valuetype System.Net.Sockets.SocketError NoData = int32(0x00002AFC)
		.field static public literal valuetype System.Net.Sockets.SocketError NoRecovery = int32(0x00002AFB)
		.field static public literal valuetype System.Net.Sockets.SocketError NotConnected = int32(0x00002749)
		.field static public literal valuetype System.Net.Sockets.SocketError NotInitialized = int32(0x0000276D)
		.field static public literal valuetype System.Net.Sockets.SocketError NotSocket = int32(0x00002736)
		.field static public literal valuetype System.Net.Sockets.SocketError OperationAborted = int32(0x000003E3)
		.field static public literal valuetype System.Net.Sockets.SocketError OperationNotSupported = int32(0x0000273D)
		.field static public literal valuetype System.Net.Sockets.SocketError ProcessLimit = int32(0x00002753)
		.field static public literal valuetype System.Net.Sockets.SocketError ProtocolFamilyNotSupported = int32(0x0000273E)
		.field static public literal valuetype System.Net.Sockets.SocketError ProtocolNotSupported = int32(0x0000273B)
		.field static public literal valuetype System.Net.Sockets.SocketError ProtocolOption = int32(0x0000273A)
		.field static public literal valuetype System.Net.Sockets.SocketError ProtocolType = int32(0x00002739)
		.field static public literal valuetype System.Net.Sockets.SocketError Shutdown = int32(0x0000274A)
		.field static public literal valuetype System.Net.Sockets.SocketError SocketError = int32(0xFFFFFFFF)
		.field static public literal valuetype System.Net.Sockets.SocketError SocketNotSupported = int32(0x0000273C)
		.field static public literal valuetype System.Net.Sockets.SocketError Success = int32(0x00000000)
		.field static public literal valuetype System.Net.Sockets.SocketError SystemNotReady = int32(0x0000276B)
		.field static public literal valuetype System.Net.Sockets.SocketError TimedOut = int32(0x0000274C)
		.field static public literal valuetype System.Net.Sockets.SocketError TooManyOpenSockets = int32(0x00002728)
		.field static public literal valuetype System.Net.Sockets.SocketError TryAgain = int32(0x00002AFA)
		.field static public literal valuetype System.Net.Sockets.SocketError TypeNotFound = int32(0x0000277D)
		.field static public literal valuetype System.Net.Sockets.SocketError VersionNotSupported = int32(0x0000276C)
		.field static public literal valuetype System.Net.Sockets.SocketError WouldBlock = int32(0x00002733)
	}
	.class public serializable SocketException
		extends System.ComponentModel.Win32Exception
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(int32 errorCode)
		{
			ret
		}
		.method family hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype [mscorlib]System.Runtime.Serialization.StreamingContext streamingContext)
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance int32 get_ErrorCode()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype System.Net.Sockets.SocketError get_SocketErrorCode()
		{
			ret
		}
		.property instance int32 ErrorCode()
		{
			.get instance int32 System.Net.Sockets.SocketException::get_ErrorCode()
		}
		.property instance valuetype System.Net.Sockets.SocketError SocketErrorCode()
		{
			.get instance valuetype System.Net.Sockets.SocketError System.Net.Sockets.SocketException::get_SocketErrorCode()
		}
	}
	.class public sealed SocketFlags
		extends [mscorlib]System.Enum
	{
		.custom instance void [mscorlib]System.FlagsAttribute::.ctor() = (01 00 00 00)
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype System.Net.Sockets.SocketFlags Broadcast = int32(0x00000400)
		.field static public literal valuetype System.Net.Sockets.SocketFlags ControlDataTruncated = int32(0x00000200)
		.field static public literal valuetype System.Net.Sockets.SocketFlags DontRoute = int32(0x00000004)
		.field static public literal valuetype System.Net.Sockets.SocketFlags MaxIOVectorLength = int32(0x00000010)
		.field static public literal valuetype System.Net.Sockets.SocketFlags Multicast = int32(0x00000800)
		.field static public literal valuetype System.Net.Sockets.SocketFlags None = int32(0x00000000)
		.field static public literal valuetype System.Net.Sockets.SocketFlags OutOfBand = int32(0x00000001)
		.field static public literal valuetype System.Net.Sockets.SocketFlags Partial = int32(0x00008000)
		.field static public literal valuetype System.Net.Sockets.SocketFlags Peek = int32(0x00000002)
		.field static public literal valuetype System.Net.Sockets.SocketFlags Truncated = int32(0x00000100)
	}
	.class public sequential sealed serializable SocketInformation
		extends [mscorlib]System.ValueType
	{
		.method public hidebysig specialname 
			instance uint8[] get_ProtocolInformation()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ProtocolInformation(uint8[] 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype System.Net.Sockets.SocketInformationOptions get_Options()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Options(valuetype System.Net.Sockets.SocketInformationOptions 'value')
		{
			ret
		}

		//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
		.field private int32 __Asmmeta_Private_Field
		.property instance valuetype System.Net.Sockets.SocketInformationOptions Options()
		{
			.get instance valuetype System.Net.Sockets.SocketInformationOptions System.Net.Sockets.SocketInformation::get_Options()
			.set instance void System.Net.Sockets.SocketInformation::set_Options(valuetype System.Net.Sockets.SocketInformationOptions)
		}
		.property instance uint8[] ProtocolInformation()
		{
			.get instance uint8[] System.Net.Sockets.SocketInformation::get_ProtocolInformation()
			.set instance void System.Net.Sockets.SocketInformation::set_ProtocolInformation(uint8[])
		}
	}
	.class public sealed SocketInformationOptions
		extends [mscorlib]System.Enum
	{
		.custom instance void [mscorlib]System.FlagsAttribute::.ctor() = (01 00 00 00)
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype System.Net.Sockets.SocketInformationOptions Connected = int32(0x00000002)
		.field static public literal valuetype System.Net.Sockets.SocketInformationOptions Listening = int32(0x00000004)
		.field static public literal valuetype System.Net.Sockets.SocketInformationOptions NonBlocking = int32(0x00000001)
		.field static public literal valuetype System.Net.Sockets.SocketInformationOptions UseOnlyOverlappedIO = int32(0x00000008)
	}
	.class public sealed SocketOptionLevel
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype System.Net.Sockets.SocketOptionLevel IP = int32(0x00000000)
		.field static public literal valuetype System.Net.Sockets.SocketOptionLevel IPv6 = int32(0x00000029)
		.field static public literal valuetype System.Net.Sockets.SocketOptionLevel Socket = int32(0x0000FFFF)
		.field static public literal valuetype System.Net.Sockets.SocketOptionLevel Tcp = int32(0x00000006)
		.field static public literal valuetype System.Net.Sockets.SocketOptionLevel Udp = int32(0x00000011)
	}
	.class public sealed SocketOptionName
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype System.Net.Sockets.SocketOptionName AcceptConnection = int32(0x00000002)
		.field static public literal valuetype System.Net.Sockets.SocketOptionName AddMembership = int32(0x0000000C)
		.field static public literal valuetype System.Net.Sockets.SocketOptionName AddSourceMembership = int32(0x0000000F)
		.field static public literal valuetype System.Net.Sockets.SocketOptionName BlockSource = int32(0x00000011)
		.field static public literal valuetype System.Net.Sockets.SocketOptionName Broadcast = int32(0x00000020)
		.field static public literal valuetype System.Net.Sockets.SocketOptionName BsdUrgent = int32(0x00000002)
		.field static public literal valuetype System.Net.Sockets.SocketOptionName ChecksumCoverage = int32(0x00000014)
		.field static public literal valuetype System.Net.Sockets.SocketOptionName Debug = int32(0x00000001)
		.field static public literal valuetype System.Net.Sockets.SocketOptionName DontFragment = int32(0x0000000E)
		.field static public literal valuetype System.Net.Sockets.SocketOptionName DontLinger = int32(0xFFFFFF7F)
		.field static public literal valuetype System.Net.Sockets.SocketOptionName DontRoute = int32(0x00000010)
		.field static public literal valuetype System.Net.Sockets.SocketOptionName DropMembership = int32(0x0000000D)
		.field static public literal valuetype System.Net.Sockets.SocketOptionName DropSourceMembership = int32(0x00000010)
		.field static public literal valuetype System.Net.Sockets.SocketOptionName Error = int32(0x00001007)
		.field static public literal valuetype System.Net.Sockets.SocketOptionName ExclusiveAddressUse = int32(0xFFFFFFFB)
		.field static public literal valuetype System.Net.Sockets.SocketOptionName Expedited = int32(0x00000002)
		.field static public literal valuetype System.Net.Sockets.SocketOptionName HeaderIncluded = int32(0x00000002)
		.field static public literal valuetype System.Net.Sockets.SocketOptionName HopLimit = int32(0x00000015)
		.field static public literal valuetype System.Net.Sockets.SocketOptionName IPOptions = int32(0x00000001)
		.field static public literal valuetype System.Net.Sockets.SocketOptionName IpTimeToLive = int32(0x00000004)
		.field static public literal valuetype System.Net.Sockets.SocketOptionName KeepAlive = int32(0x00000008)
		.field static public literal valuetype System.Net.Sockets.SocketOptionName Linger = int32(0x00000080)
		.field static public literal valuetype System.Net.Sockets.SocketOptionName MaxConnections = int32(0x7FFFFFFF)
		.field static public literal valuetype System.Net.Sockets.SocketOptionName MulticastInterface = int32(0x00000009)
		.field static public literal valuetype System.Net.Sockets.SocketOptionName MulticastLoopback = int32(0x0000000B)
		.field static public literal valuetype System.Net.Sockets.SocketOptionName MulticastTimeToLive = int32(0x0000000A)
		.field static public literal valuetype System.Net.Sockets.SocketOptionName NoChecksum = int32(0x00000001)
		.field static public literal valuetype System.Net.Sockets.SocketOptionName NoDelay = int32(0x00000001)
		.field static public literal valuetype System.Net.Sockets.SocketOptionName OutOfBandInline = int32(0x00000100)
		.field static public literal valuetype System.Net.Sockets.SocketOptionName PacketInformation = int32(0x00000013)
		.field static public literal valuetype System.Net.Sockets.SocketOptionName ReceiveBuffer = int32(0x00001002)
		.field static public literal valuetype System.Net.Sockets.SocketOptionName ReceiveLowWater = int32(0x00001004)
		.field static public literal valuetype System.Net.Sockets.SocketOptionName ReceiveTimeout = int32(0x00001006)
		.field static public literal valuetype System.Net.Sockets.SocketOptionName ReuseAddress = int32(0x00000004)
		.field static public literal valuetype System.Net.Sockets.SocketOptionName SendBuffer = int32(0x00001001)
		.field static public literal valuetype System.Net.Sockets.SocketOptionName SendLowWater = int32(0x00001003)
		.field static public literal valuetype System.Net.Sockets.SocketOptionName SendTimeout = int32(0x00001005)
		.field static public literal valuetype System.Net.Sockets.SocketOptionName Type = int32(0x00001008)
		.field static public literal valuetype System.Net.Sockets.SocketOptionName TypeOfService = int32(0x00000003)
		.field static public literal valuetype System.Net.Sockets.SocketOptionName UnblockSource = int32(0x00000012)
		.field static public literal valuetype System.Net.Sockets.SocketOptionName UpdateAcceptContext = int32(0x0000700B)
		.field static public literal valuetype System.Net.Sockets.SocketOptionName UpdateConnectContext = int32(0x00007010)
		.field static public literal valuetype System.Net.Sockets.SocketOptionName UseLoopback = int32(0x00000040)
	}
	.class public sealed SocketShutdown
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype System.Net.Sockets.SocketShutdown Both = int32(0x00000002)
		.field static public literal valuetype System.Net.Sockets.SocketShutdown Receive = int32(0x00000000)
		.field static public literal valuetype System.Net.Sockets.SocketShutdown Send = int32(0x00000001)
	}
	.class public sealed SocketType
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype System.Net.Sockets.SocketType Dgram = int32(0x00000002)
		.field static public literal valuetype System.Net.Sockets.SocketType Raw = int32(0x00000003)
		.field static public literal valuetype System.Net.Sockets.SocketType Rdm = int32(0x00000004)
		.field static public literal valuetype System.Net.Sockets.SocketType Seqpacket = int32(0x00000005)
		.field static public literal valuetype System.Net.Sockets.SocketType Stream = int32(0x00000001)
		.field static public literal valuetype System.Net.Sockets.SocketType Unknown = int32(0xFFFFFFFF)
	}
	.class public TcpClient
		extends [mscorlib]System.Object
		implements [mscorlib]System.IDisposable
	{
		.method public hidebysig specialname 
			instance void .ctor(class System.Net.IPEndPoint localEP)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(valuetype System.Net.Sockets.AddressFamily 'family')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string hostname, int32 port)
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Net.Sockets.Socket get_Client()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Client(class System.Net.Sockets.Socket 'value')
		{
			ret
		}
		.method family hidebysig specialname 
			instance bool get_Active()
		{
			ret
		}
		.method family hidebysig specialname 
			instance void set_Active(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_Available()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_Connected()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_ExclusiveAddressUse()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ExclusiveAddressUse(bool 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void Connect(string hostname, int32 port)
		{
			ret
		}
		.method public hidebysig 
			instance void Connect(class System.Net.IPAddress address, int32 port)
		{
			ret
		}
		.method public hidebysig 
			instance void Connect(class System.Net.IPEndPoint remoteEP)
		{
			ret
		}
		.method public hidebysig 
			instance void Connect(class System.Net.IPAddress[] ipAddresses, int32 port)
		{
			ret
		}
		.method public hidebysig 
			instance class [mscorlib]System.IAsyncResult BeginConnect(string host, int32 port, class [mscorlib]System.AsyncCallback requestCallback, object state)
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public hidebysig 
			instance class [mscorlib]System.IAsyncResult BeginConnect(class System.Net.IPAddress address, int32 port, class [mscorlib]System.AsyncCallback requestCallback, object state)
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public hidebysig 
			instance class [mscorlib]System.IAsyncResult BeginConnect(class System.Net.IPAddress[] addresses, int32 port, class [mscorlib]System.AsyncCallback requestCallback, object state)
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public hidebysig 
			instance void EndConnect(class [mscorlib]System.IAsyncResult asyncResult)
		{
			ret
		}
		.method public hidebysig 
			instance class System.Net.Sockets.NetworkStream GetStream()
		{
			ret
		}
		.method public hidebysig 
			instance void Close()
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void Dispose(bool disposing)
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.IDisposable.Dispose()
		{
			.override [mscorlib]System.IDisposable::Dispose
			ret
		}
		.method family virtual hidebysig 
			instance void Finalize()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ReceiveBufferSize()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ReceiveBufferSize(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_SendBufferSize()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_SendBufferSize(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ReceiveTimeout()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ReceiveTimeout(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_SendTimeout()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_SendTimeout(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Net.Sockets.LingerOption get_LingerState()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_LingerState(class System.Net.Sockets.LingerOption 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_NoDelay()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_NoDelay(bool 'value')
		{
			ret
		}
		.property instance bool Active()
		{
			.get instance bool System.Net.Sockets.TcpClient::get_Active()
			.set instance void System.Net.Sockets.TcpClient::set_Active(bool)
		}
		.property instance int32 Available()
		{
			.get instance int32 System.Net.Sockets.TcpClient::get_Available()
		}
		.property instance class System.Net.Sockets.Socket Client()
		{
			.get instance class System.Net.Sockets.Socket System.Net.Sockets.TcpClient::get_Client()
			.set instance void System.Net.Sockets.TcpClient::set_Client(class System.Net.Sockets.Socket)
		}
		.property instance bool Connected()
		{
			.get instance bool System.Net.Sockets.TcpClient::get_Connected()
		}
		.property instance bool ExclusiveAddressUse()
		{
			.get instance bool System.Net.Sockets.TcpClient::get_ExclusiveAddressUse()
			.set instance void System.Net.Sockets.TcpClient::set_ExclusiveAddressUse(bool)
		}
		.property instance class System.Net.Sockets.LingerOption LingerState()
		{
			.get instance class System.Net.Sockets.LingerOption System.Net.Sockets.TcpClient::get_LingerState()
			.set instance void System.Net.Sockets.TcpClient::set_LingerState(class System.Net.Sockets.LingerOption)
		}
		.property instance bool NoDelay()
		{
			.get instance bool System.Net.Sockets.TcpClient::get_NoDelay()
			.set instance void System.Net.Sockets.TcpClient::set_NoDelay(bool)
		}
		.property instance int32 ReceiveBufferSize()
		{
			.get instance int32 System.Net.Sockets.TcpClient::get_ReceiveBufferSize()
			.set instance void System.Net.Sockets.TcpClient::set_ReceiveBufferSize(int32)
		}
		.property instance int32 ReceiveTimeout()
		{
			.get instance int32 System.Net.Sockets.TcpClient::get_ReceiveTimeout()
			.set instance void System.Net.Sockets.TcpClient::set_ReceiveTimeout(int32)
		}
		.property instance int32 SendBufferSize()
		{
			.get instance int32 System.Net.Sockets.TcpClient::get_SendBufferSize()
			.set instance void System.Net.Sockets.TcpClient::set_SendBufferSize(int32)
		}
		.property instance int32 SendTimeout()
		{
			.get instance int32 System.Net.Sockets.TcpClient::get_SendTimeout()
			.set instance void System.Net.Sockets.TcpClient::set_SendTimeout(int32)
		}
	}
	.class public TcpListener
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance void .ctor(class System.Net.IPEndPoint localEP)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class System.Net.IPAddress localaddr, int32 port)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(int32 port)
		{
			.custom instance void [mscorlib]System.ObsoleteAttribute::.ctor(string) = (01 00 80 8C 54 68 69 73 20 6D 65 74 68 6F 64 20 68 61 73 20 62 65 65 6E 20 64 65 70 72 65 63 61 74 65 64 2E 20 50 6C 65 61 73 65 20 75 73 65 20 54 63 70 4C 69 73 74 65 6E 65 72 28 49 50 41 64 64 72 65 73 73 20 6C 6F 63 61 6C 61 64 64 72 2C 20 69 6E 74 20 70 6F 72 74 29 20 69 6E 73 74 65 61 64 2E 20 68 74 74 70 3A 2F 2F 67 6F 2E 6D 69 63 72 6F 73 6F 66 74 2E 63 6F 6D 2F 66 77 6C 69 6E 6B 2F 3F 6C 69 6E 6B 69 64 3D 31 34 32 30 32 00 00)
			ret
		}
		.method public hidebysig specialname 
			instance class System.Net.Sockets.Socket get_Server()
		{
			ret
		}
		.method family hidebysig specialname 
			instance bool get_Active()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Net.EndPoint get_LocalEndpoint()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_ExclusiveAddressUse()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ExclusiveAddressUse(bool 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void Start()
		{
			ret
		}
		.method public hidebysig 
			instance void Start(int32 backlog)
		{
			ret
		}
		.method public hidebysig 
			instance void Stop()
		{
			ret
		}
		.method public hidebysig 
			instance bool Pending()
		{
			ret
		}
		.method public hidebysig 
			instance class System.Net.Sockets.Socket AcceptSocket()
		{
			ret
		}
		.method public hidebysig 
			instance class System.Net.Sockets.TcpClient AcceptTcpClient()
		{
			ret
		}
		.method public hidebysig 
			instance class [mscorlib]System.IAsyncResult BeginAcceptSocket(class [mscorlib]System.AsyncCallback callback, object state)
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public hidebysig 
			instance class System.Net.Sockets.Socket EndAcceptSocket(class [mscorlib]System.IAsyncResult asyncResult)
		{
			ret
		}
		.method public hidebysig 
			instance class [mscorlib]System.IAsyncResult BeginAcceptTcpClient(class [mscorlib]System.AsyncCallback callback, object state)
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public hidebysig 
			instance class System.Net.Sockets.TcpClient EndAcceptTcpClient(class [mscorlib]System.IAsyncResult asyncResult)
		{
			ret
		}
		.property instance bool Active()
		{
			.get instance bool System.Net.Sockets.TcpListener::get_Active()
		}
		.property instance bool ExclusiveAddressUse()
		{
			.get instance bool System.Net.Sockets.TcpListener::get_ExclusiveAddressUse()
			.set instance void System.Net.Sockets.TcpListener::set_ExclusiveAddressUse(bool)
		}
		.property instance class System.Net.EndPoint LocalEndpoint()
		{
			.get instance class System.Net.EndPoint System.Net.Sockets.TcpListener::get_LocalEndpoint()
		}
		.property instance class System.Net.Sockets.Socket Server()
		{
			.get instance class System.Net.Sockets.Socket System.Net.Sockets.TcpListener::get_Server()
		}
	}
	.class public sealed TransmitFileOptions
		extends [mscorlib]System.Enum
	{
		.custom instance void [mscorlib]System.FlagsAttribute::.ctor() = (01 00 00 00)
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype System.Net.Sockets.TransmitFileOptions Disconnect = int32(0x00000001)
		.field static public literal valuetype System.Net.Sockets.TransmitFileOptions ReuseSocket = int32(0x00000002)
		.field static public literal valuetype System.Net.Sockets.TransmitFileOptions UseDefaultWorkerThread = int32(0x00000000)
		.field static public literal valuetype System.Net.Sockets.TransmitFileOptions UseKernelApc = int32(0x00000020)
		.field static public literal valuetype System.Net.Sockets.TransmitFileOptions UseSystemThread = int32(0x00000010)
		.field static public literal valuetype System.Net.Sockets.TransmitFileOptions WriteBehind = int32(0x00000004)
	}
	.class public UdpClient
		extends [mscorlib]System.Object
		implements [mscorlib]System.IDisposable
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(valuetype System.Net.Sockets.AddressFamily 'family')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(int32 port)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(int32 port, valuetype System.Net.Sockets.AddressFamily 'family')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class System.Net.IPEndPoint localEP)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string hostname, int32 port)
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Net.Sockets.Socket get_Client()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Client(class System.Net.Sockets.Socket 'value')
		{
			ret
		}
		.method family hidebysig specialname 
			instance bool get_Active()
		{
			ret
		}
		.method family hidebysig specialname 
			instance void set_Active(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_Available()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int16 get_Ttl()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Ttl(int16 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_DontFragment()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_DontFragment(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_MulticastLoopback()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_MulticastLoopback(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_EnableBroadcast()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_EnableBroadcast(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_ExclusiveAddressUse()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ExclusiveAddressUse(bool 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void Close()
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.IDisposable.Dispose()
		{
			.override [mscorlib]System.IDisposable::Dispose
			ret
		}
		.method family virtual hidebysig newslot 
			instance void Dispose(bool disposing)
		{
			ret
		}
		.method public hidebysig 
			instance void Connect(string hostname, int32 port)
		{
			ret
		}
		.method public hidebysig 
			instance void Connect(class System.Net.IPAddress addr, int32 port)
		{
			ret
		}
		.method public hidebysig 
			instance void Connect(class System.Net.IPEndPoint endPoint)
		{
			ret
		}
		.method public hidebysig 
			instance int32 Send(uint8[] dgram, int32 bytes, class System.Net.IPEndPoint endPoint)
		{
			ret
		}
		.method public hidebysig 
			instance int32 Send(uint8[] dgram, int32 bytes, string hostname, int32 port)
		{
			ret
		}
		.method public hidebysig 
			instance int32 Send(uint8[] dgram, int32 bytes)
		{
			ret
		}
		.method public hidebysig 
			instance class [mscorlib]System.IAsyncResult BeginSend(uint8[] datagram, int32 bytes, class System.Net.IPEndPoint endPoint, class [mscorlib]System.AsyncCallback requestCallback, object state)
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public hidebysig 
			instance class [mscorlib]System.IAsyncResult BeginSend(uint8[] datagram, int32 bytes, string hostname, int32 port, class [mscorlib]System.AsyncCallback requestCallback, object state)
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public hidebysig 
			instance class [mscorlib]System.IAsyncResult BeginSend(uint8[] datagram, int32 bytes, class [mscorlib]System.AsyncCallback requestCallback, object state)
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public hidebysig 
			instance int32 EndSend(class [mscorlib]System.IAsyncResult asyncResult)
		{
			ret
		}
		.method public hidebysig 
			instance uint8[] Receive(class System.Net.IPEndPoint& remoteEP)
		{
			ret
		}
		.method public hidebysig 
			instance class [mscorlib]System.IAsyncResult BeginReceive(class [mscorlib]System.AsyncCallback requestCallback, object state)
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public hidebysig 
			instance uint8[] EndReceive(class [mscorlib]System.IAsyncResult asyncResult, class System.Net.IPEndPoint& remoteEP)
		{
			ret
		}
		.method public hidebysig 
			instance void JoinMulticastGroup(class System.Net.IPAddress multicastAddr)
		{
			ret
		}
		.method public hidebysig 
			instance void JoinMulticastGroup(class System.Net.IPAddress multicastAddr, class System.Net.IPAddress localAddress)
		{
			ret
		}
		.method public hidebysig 
			instance void JoinMulticastGroup(int32 ifindex, class System.Net.IPAddress multicastAddr)
		{
			ret
		}
		.method public hidebysig 
			instance void JoinMulticastGroup(class System.Net.IPAddress multicastAddr, int32 timeToLive)
		{
			ret
		}
		.method public hidebysig 
			instance void DropMulticastGroup(class System.Net.IPAddress multicastAddr)
		{
			ret
		}
		.method public hidebysig 
			instance void DropMulticastGroup(class System.Net.IPAddress multicastAddr, int32 ifindex)
		{
			ret
		}
		.property instance bool Active()
		{
			.get instance bool System.Net.Sockets.UdpClient::get_Active()
			.set instance void System.Net.Sockets.UdpClient::set_Active(bool)
		}
		.property instance int32 Available()
		{
			.get instance int32 System.Net.Sockets.UdpClient::get_Available()
		}
		.property instance class System.Net.Sockets.Socket Client()
		{
			.get instance class System.Net.Sockets.Socket System.Net.Sockets.UdpClient::get_Client()
			.set instance void System.Net.Sockets.UdpClient::set_Client(class System.Net.Sockets.Socket)
		}
		.property instance bool DontFragment()
		{
			.get instance bool System.Net.Sockets.UdpClient::get_DontFragment()
			.set instance void System.Net.Sockets.UdpClient::set_DontFragment(bool)
		}
		.property instance bool EnableBroadcast()
		{
			.get instance bool System.Net.Sockets.UdpClient::get_EnableBroadcast()
			.set instance void System.Net.Sockets.UdpClient::set_EnableBroadcast(bool)
		}
		.property instance bool ExclusiveAddressUse()
		{
			.get instance bool System.Net.Sockets.UdpClient::get_ExclusiveAddressUse()
			.set instance void System.Net.Sockets.UdpClient::set_ExclusiveAddressUse(bool)
		}
		.property instance bool MulticastLoopback()
		{
			.get instance bool System.Net.Sockets.UdpClient::get_MulticastLoopback()
			.set instance void System.Net.Sockets.UdpClient::set_MulticastLoopback(bool)
		}
		.property instance int16 Ttl()
		{
			.get instance int16 System.Net.Sockets.UdpClient::get_Ttl()
			.set instance void System.Net.Sockets.UdpClient::set_Ttl(int16)
		}
	}
}
.namespace System.Runtime.InteropServices
{
	.class public sealed DefaultParameterValueAttribute
		extends [mscorlib]System.Attribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = (01 00 00 08 00 00 00 00)
		.method public hidebysig specialname 
			instance void .ctor(object 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance object get_Value()
		{
			ret
		}
		.property instance object Value()
		{
			.get instance object System.Runtime.InteropServices.DefaultParameterValueAttribute::get_Value()
		}
	}
	.class public sealed HandleCollector
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance void .ctor(string name, int32 initialThreshold)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string name, int32 initialThreshold, int32 maximumThreshold)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_Count()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_InitialThreshold()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_MaximumThreshold()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method public hidebysig 
			instance void Add()
		{
			ret
		}
		.method public hidebysig 
			instance void Remove()
		{
			ret
		}
		.property instance int32 Count()
		{
			.get instance int32 System.Runtime.InteropServices.HandleCollector::get_Count()
		}
		.property instance int32 InitialThreshold()
		{
			.get instance int32 System.Runtime.InteropServices.HandleCollector::get_InitialThreshold()
		}
		.property instance int32 MaximumThreshold()
		{
			.get instance int32 System.Runtime.InteropServices.HandleCollector::get_MaximumThreshold()
		}
		.property instance string Name()
		{
			.get instance string System.Runtime.InteropServices.HandleCollector::get_Name()
		}
	}
}
.namespace System.Security.Permissions
{
	.class public abstract serializable ResourcePermissionBase
		extends [mscorlib]System.Security.CodeAccessPermission
		implements [mscorlib]System.Security.Permissions.IUnrestrictedPermission
	{
		.method family hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method family hidebysig specialname 
			instance void .ctor(valuetype [mscorlib]System.Security.Permissions.PermissionState state)
		{
			ret
		}
		.method family hidebysig specialname 
			instance class [mscorlib]System.Type get_PermissionAccessType()
		{
			ret
		}
		.method family hidebysig specialname 
			instance void set_PermissionAccessType(class [mscorlib]System.Type 'value')
		{
			ret
		}
		.method family hidebysig specialname 
			instance string[] get_TagNames()
		{
			ret
		}
		.method family hidebysig specialname 
			instance void set_TagNames(string[] 'value')
		{
			ret
		}
		.method family hidebysig 
			instance void AddPermissionAccess(class System.Security.Permissions.ResourcePermissionBaseEntry entry)
		{
			ret
		}
		.method family hidebysig 
			instance void Clear()
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [mscorlib]System.Security.IPermission Copy()
		{
			ret
		}
		.method family hidebysig 
			instance class System.Security.Permissions.ResourcePermissionBaseEntry[] GetPermissionEntries()
		{
			ret
		}
		.method public virtual hidebysig 
			instance void FromXml(class [mscorlib]System.Security.SecurityElement securityElement)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [mscorlib]System.Security.IPermission Intersect(class [mscorlib]System.Security.IPermission target)
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool IsSubsetOf(class [mscorlib]System.Security.IPermission target)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance bool IsUnrestricted()
		{
			ret
		}
		.method family hidebysig 
			instance void RemovePermissionAccess(class System.Security.Permissions.ResourcePermissionBaseEntry entry)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [mscorlib]System.Security.SecurityElement ToXml()
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [mscorlib]System.Security.IPermission Union(class [mscorlib]System.Security.IPermission target)
		{
			ret
		}
		.field static public literal string Any = "*"
		.field static public literal string Local = "."
		.property instance class [mscorlib]System.Type PermissionAccessType()
		{
			.get instance class [mscorlib]System.Type System.Security.Permissions.ResourcePermissionBase::get_PermissionAccessType()
			.set instance void System.Security.Permissions.ResourcePermissionBase::set_PermissionAccessType(class [mscorlib]System.Type)
		}
		.property instance string[] TagNames()
		{
			.get instance string[] System.Security.Permissions.ResourcePermissionBase::get_TagNames()
			.set instance void System.Security.Permissions.ResourcePermissionBase::set_TagNames(string[])
		}
	}
	.class public serializable ResourcePermissionBaseEntry
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(int32 permissionAccess, string[] permissionAccessPath)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_PermissionAccess()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string[] get_PermissionAccessPath()
		{
			ret
		}
		.property instance int32 PermissionAccess()
		{
			.get instance int32 System.Security.Permissions.ResourcePermissionBaseEntry::get_PermissionAccess()
		}
		.property instance string[] PermissionAccessPath()
		{
			.get instance string[] System.Security.Permissions.ResourcePermissionBaseEntry::get_PermissionAccessPath()
		}
	}
}
.namespace System.Text.RegularExpressions
{
	.class public serializable Capture
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance int32 get_Index()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_Length()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Value()
		{
			ret
		}
		.method public virtual hidebysig 
			instance string ToString()
		{
			ret
		}
		.property instance int32 Index()
		{
			.get instance int32 System.Text.RegularExpressions.Capture::get_Index()
		}
		.property instance int32 Length()
		{
			.get instance int32 System.Text.RegularExpressions.Capture::get_Length()
		}
		.property instance string Value()
		{
			.get instance string System.Text.RegularExpressions.Capture::get_Value()
		}
	}
	.class public serializable CaptureCollection
		extends [mscorlib]System.Object
		implements [mscorlib]System.Collections.ICollection, [mscorlib]System.Collections.IEnumerable
	{
		.custom instance void [mscorlib]System.Reflection.DefaultMemberAttribute::.ctor(string) = (01 00 04 49 74 65 6D 00 00)
		.method public final virtual hidebysig newslot specialname 
			instance object get_SyncRoot()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance bool get_IsSynchronized()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsReadOnly()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance int32 get_Count()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Text.RegularExpressions.Capture get_Item(int32 i)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void CopyTo(class [mscorlib]System.Array 'array', int32 arrayIndex)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance class [mscorlib]System.Collections.IEnumerator GetEnumerator()
		{
			ret
		}
		.property instance int32 Count()
		{
			.get instance int32 System.Text.RegularExpressions.CaptureCollection::get_Count()
		}
		.property instance bool IsReadOnly()
		{
			.get instance bool System.Text.RegularExpressions.CaptureCollection::get_IsReadOnly()
		}
		.property instance bool IsSynchronized()
		{
			.get instance bool System.Text.RegularExpressions.CaptureCollection::get_IsSynchronized()
		}
		.property instance class System.Text.RegularExpressions.Capture Item(int32)
		{
			.get instance class System.Text.RegularExpressions.Capture System.Text.RegularExpressions.CaptureCollection::get_Item(int32)
		}
		.property instance object SyncRoot()
		{
			.get instance object System.Text.RegularExpressions.CaptureCollection::get_SyncRoot()
		}
	}
	.class public serializable Group
		extends System.Text.RegularExpressions.Capture
	{
		.method public hidebysig specialname 
			instance bool get_Success()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Text.RegularExpressions.CaptureCollection get_Captures()
		{
			ret
		}
		.method public static hidebysig 
			class System.Text.RegularExpressions.Group Synchronized(class System.Text.RegularExpressions.Group inner)
		{
			.permissionset linkcheck = (00)
			ret
		}
		.property instance class System.Text.RegularExpressions.CaptureCollection Captures()
		{
			.get instance class System.Text.RegularExpressions.CaptureCollection System.Text.RegularExpressions.Group::get_Captures()
		}
		.property instance bool Success()
		{
			.get instance bool System.Text.RegularExpressions.Group::get_Success()
		}
	}
	.class public serializable GroupCollection
		extends [mscorlib]System.Object
		implements [mscorlib]System.Collections.ICollection, [mscorlib]System.Collections.IEnumerable
	{
		.custom instance void [mscorlib]System.Reflection.DefaultMemberAttribute::.ctor(string) = (01 00 04 49 74 65 6D 00 00)
		.method public final virtual hidebysig newslot specialname 
			instance object get_SyncRoot()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance bool get_IsSynchronized()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsReadOnly()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance int32 get_Count()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Text.RegularExpressions.Group get_Item(int32 groupnum)
		{
			ret
		}
		.method public hidebysig specialname 
			instance class System.Text.RegularExpressions.Group get_Item(string groupname)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void CopyTo(class [mscorlib]System.Array 'array', int32 arrayIndex)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance class [mscorlib]System.Collections.IEnumerator GetEnumerator()
		{
			ret
		}
		.property instance int32 Count()
		{
			.get instance int32 System.Text.RegularExpressions.GroupCollection::get_Count()
		}
		.property instance bool IsReadOnly()
		{
			.get instance bool System.Text.RegularExpressions.GroupCollection::get_IsReadOnly()
		}
		.property instance bool IsSynchronized()
		{
			.get instance bool System.Text.RegularExpressions.GroupCollection::get_IsSynchronized()
		}
		.property instance class System.Text.RegularExpressions.Group Item(int32)
		{
			.get instance class System.Text.RegularExpressions.Group System.Text.RegularExpressions.GroupCollection::get_Item(int32)
		}
		.property instance class System.Text.RegularExpressions.Group Item(string)
		{
			.get instance class System.Text.RegularExpressions.Group System.Text.RegularExpressions.GroupCollection::get_Item(string)
		}
		.property instance object SyncRoot()
		{
			.get instance object System.Text.RegularExpressions.GroupCollection::get_SyncRoot()
		}
	}
	.class public serializable Match
		extends System.Text.RegularExpressions.Group
	{
		.method public static hidebysig specialname 
			class System.Text.RegularExpressions.Match get_Empty()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance class System.Text.RegularExpressions.GroupCollection get_Groups()
		{
			ret
		}
		.method public hidebysig 
			instance class System.Text.RegularExpressions.Match NextMatch()
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance string Result(string replacement)
		{
			ret
		}
		.method public static hidebysig 
			class System.Text.RegularExpressions.Match Synchronized(class System.Text.RegularExpressions.Match inner)
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public hidebysig specialname 
			instance bool get_Debug()
		{
			ret
		}
		.property instance bool Debug()
		{
			.get instance bool System.Text.RegularExpressions.Match::get_Debug()
		}
		.property class System.Text.RegularExpressions.Match Empty()
		{
			.get class System.Text.RegularExpressions.Match System.Text.RegularExpressions.Match::get_Empty()
		}
		.property instance class System.Text.RegularExpressions.GroupCollection Groups()
		{
			.get instance class System.Text.RegularExpressions.GroupCollection System.Text.RegularExpressions.Match::get_Groups()
		}
	}
	.class public serializable MatchCollection
		extends [mscorlib]System.Object
		implements [mscorlib]System.Collections.ICollection, [mscorlib]System.Collections.IEnumerable
	{
		.custom instance void [mscorlib]System.Reflection.DefaultMemberAttribute::.ctor(string) = (01 00 04 49 74 65 6D 00 00)
		.method public final virtual hidebysig newslot specialname 
			instance int32 get_Count()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance object get_SyncRoot()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance bool get_IsSynchronized()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsReadOnly()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance class System.Text.RegularExpressions.Match get_Item(int32 i)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void CopyTo(class [mscorlib]System.Array 'array', int32 arrayIndex)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance class [mscorlib]System.Collections.IEnumerator GetEnumerator()
		{
			ret
		}
		.property instance int32 Count()
		{
			.get instance int32 System.Text.RegularExpressions.MatchCollection::get_Count()
		}
		.property instance bool IsReadOnly()
		{
			.get instance bool System.Text.RegularExpressions.MatchCollection::get_IsReadOnly()
		}
		.property instance bool IsSynchronized()
		{
			.get instance bool System.Text.RegularExpressions.MatchCollection::get_IsSynchronized()
		}
		.property instance class System.Text.RegularExpressions.Match Item(int32)
		{
			.get instance class System.Text.RegularExpressions.Match System.Text.RegularExpressions.MatchCollection::get_Item(int32)
		}
		.property instance object SyncRoot()
		{
			.get instance object System.Text.RegularExpressions.MatchCollection::get_SyncRoot()
		}
	}
	.class public sealed serializable MatchEvaluator
		extends [mscorlib]System.MulticastDelegate
	{
		.method public hidebysig specialname 
			instance void .ctor(object 'object', native int 'method')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance string Invoke(class System.Text.RegularExpressions.Match match)
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance class [mscorlib]System.IAsyncResult BeginInvoke(class System.Text.RegularExpressions.Match match, class [mscorlib]System.AsyncCallback callback, object 'object')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance string EndInvoke(class [mscorlib]System.IAsyncResult result)
			runtime 
		{
		}
	}
	.class public serializable Regex
		extends [mscorlib]System.Object
		implements [mscorlib]System.Runtime.Serialization.ISerializable
	{
		.method family hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string pattern)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string pattern, valuetype System.Text.RegularExpressions.RegexOptions options)
		{
			ret
		}
		.method family hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Runtime.Serialization.SerializationInfo info, valuetype [mscorlib]System.Runtime.Serialization.StreamingContext context)
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Runtime.Serialization.ISerializable.GetObjectData(class [mscorlib]System.Runtime.Serialization.SerializationInfo si, valuetype [mscorlib]System.Runtime.Serialization.StreamingContext context)
		{
			.override [mscorlib]System.Runtime.Serialization.ISerializable::GetObjectData
			ret
		}
		.method public static hidebysig 
			string Escape(string str)
		{
			ret
		}
		.method public static hidebysig 
			string Unescape(string str)
		{
			ret
		}
		.method public static hidebysig specialname 
			int32 get_CacheSize()
		{
			ret
		}
		.method public static hidebysig specialname 
			void set_CacheSize(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype System.Text.RegularExpressions.RegexOptions get_Options()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_RightToLeft()
		{
			ret
		}
		.method public virtual hidebysig 
			instance string ToString()
		{
			ret
		}
		.method public hidebysig 
			instance string[] GetGroupNames()
		{
			ret
		}
		.method public hidebysig 
			instance int32[] GetGroupNumbers()
		{
			ret
		}
		.method public hidebysig 
			instance string GroupNameFromNumber(int32 i)
		{
			ret
		}
		.method public hidebysig 
			instance int32 GroupNumberFromName(string name)
		{
			ret
		}
		.method public static hidebysig 
			bool IsMatch(string input, string pattern)
		{
			ret
		}
		.method public static hidebysig 
			bool IsMatch(string input, string pattern, valuetype System.Text.RegularExpressions.RegexOptions options)
		{
			ret
		}
		.method public hidebysig 
			instance bool IsMatch(string input)
		{
			ret
		}
		.method public hidebysig 
			instance bool IsMatch(string input, int32 startat)
		{
			ret
		}
		.method public static hidebysig 
			class System.Text.RegularExpressions.Match Match(string input, string pattern)
		{
			ret
		}
		.method public static hidebysig 
			class System.Text.RegularExpressions.Match Match(string input, string pattern, valuetype System.Text.RegularExpressions.RegexOptions options)
		{
			ret
		}
		.method public hidebysig 
			instance class System.Text.RegularExpressions.Match Match(string input)
		{
			ret
		}
		.method public hidebysig 
			instance class System.Text.RegularExpressions.Match Match(string input, int32 startat)
		{
			ret
		}
		.method public hidebysig 
			instance class System.Text.RegularExpressions.Match Match(string input, int32 beginning, int32 length)
		{
			ret
		}
		.method public static hidebysig 
			class System.Text.RegularExpressions.MatchCollection Matches(string input, string pattern)
		{
			ret
		}
		.method public static hidebysig 
			class System.Text.RegularExpressions.MatchCollection Matches(string input, string pattern, valuetype System.Text.RegularExpressions.RegexOptions options)
		{
			ret
		}
		.method public hidebysig 
			instance class System.Text.RegularExpressions.MatchCollection Matches(string input)
		{
			ret
		}
		.method public hidebysig 
			instance class System.Text.RegularExpressions.MatchCollection Matches(string input, int32 startat)
		{
			ret
		}
		.method public static hidebysig 
			string Replace(string input, string pattern, string replacement)
		{
			ret
		}
		.method public static hidebysig 
			string Replace(string input, string pattern, string replacement, valuetype System.Text.RegularExpressions.RegexOptions options)
		{
			ret
		}
		.method public hidebysig 
			instance string Replace(string input, string replacement)
		{
			ret
		}
		.method public hidebysig 
			instance string Replace(string input, string replacement, int32 count)
		{
			ret
		}
		.method public hidebysig 
			instance string Replace(string input, string replacement, int32 count, int32 startat)
		{
			ret
		}
		.method public static hidebysig 
			string Replace(string input, string pattern, class System.Text.RegularExpressions.MatchEvaluator evaluator)
		{
			ret
		}
		.method public static hidebysig 
			string Replace(string input, string pattern, class System.Text.RegularExpressions.MatchEvaluator evaluator, valuetype System.Text.RegularExpressions.RegexOptions options)
		{
			ret
		}
		.method public hidebysig 
			instance string Replace(string input, class System.Text.RegularExpressions.MatchEvaluator evaluator)
		{
			ret
		}
		.method public hidebysig 
			instance string Replace(string input, class System.Text.RegularExpressions.MatchEvaluator evaluator, int32 count)
		{
			ret
		}
		.method public hidebysig 
			instance string Replace(string input, class System.Text.RegularExpressions.MatchEvaluator evaluator, int32 count, int32 startat)
		{
			ret
		}
		.method public static hidebysig 
			string[] Split(string input, string pattern)
		{
			ret
		}
		.method public static hidebysig 
			string[] Split(string input, string pattern, valuetype System.Text.RegularExpressions.RegexOptions options)
		{
			ret
		}
		.method public hidebysig 
			instance string[] Split(string input)
		{
			ret
		}
		.method public hidebysig 
			instance string[] Split(string input, int32 count)
		{
			ret
		}
		.method public hidebysig 
			instance string[] Split(string input, int32 count, int32 startat)
		{
			ret
		}
		.method public static hidebysig 
			void CompileToAssembly(class System.Text.RegularExpressions.RegexCompilationInfo[] regexinfos, class [mscorlib]System.Reflection.AssemblyName assemblyname)
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public static hidebysig 
			void CompileToAssembly(class System.Text.RegularExpressions.RegexCompilationInfo[] regexinfos, class [mscorlib]System.Reflection.AssemblyName assemblyname, class [mscorlib]System.Reflection.Emit.CustomAttributeBuilder[] attributes)
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public static hidebysig 
			void CompileToAssembly(class System.Text.RegularExpressions.RegexCompilationInfo[] regexinfos, class [mscorlib]System.Reflection.AssemblyName assemblyname, class [mscorlib]System.Reflection.Emit.CustomAttributeBuilder[] attributes, string resourceFile)
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method family hidebysig 
			instance void InitializeReferences()
		{
			ret
		}
		.method family hidebysig 
			instance bool UseOptionC()
		{
			ret
		}
		.method family hidebysig 
			instance bool UseOptionR()
		{
			ret
		}
		.field famorassem class [mscorlib]System.Collections.Hashtable capnames
		.field famorassem class [mscorlib]System.Collections.Hashtable caps
		.field famorassem int32 capsize
		.field famorassem string[] capslist
		.field famorassem class System.Text.RegularExpressions.RegexRunnerFactory factory
		.field famorassem string pattern
		.field famorassem valuetype System.Text.RegularExpressions.RegexOptions roptions
		.property int32 CacheSize()
		{
			.get int32 System.Text.RegularExpressions.Regex::get_CacheSize()
			.set void System.Text.RegularExpressions.Regex::set_CacheSize(int32)
		}
		.property instance valuetype System.Text.RegularExpressions.RegexOptions Options()
		{
			.get instance valuetype System.Text.RegularExpressions.RegexOptions System.Text.RegularExpressions.Regex::get_Options()
		}
		.property instance bool RightToLeft()
		{
			.get instance bool System.Text.RegularExpressions.Regex::get_RightToLeft()
		}
	}
	.class public serializable RegexCompilationInfo
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance void .ctor(string pattern, valuetype System.Text.RegularExpressions.RegexOptions options, string name, string fullnamespace, bool ispublic)
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Pattern()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Pattern(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype System.Text.RegularExpressions.RegexOptions get_Options()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Options(valuetype System.Text.RegularExpressions.RegexOptions 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Name(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Namespace()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Namespace(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsPublic()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_IsPublic(bool 'value')
		{
			ret
		}
		.property instance bool IsPublic()
		{
			.get instance bool System.Text.RegularExpressions.RegexCompilationInfo::get_IsPublic()
			.set instance void System.Text.RegularExpressions.RegexCompilationInfo::set_IsPublic(bool)
		}
		.property instance string Name()
		{
			.get instance string System.Text.RegularExpressions.RegexCompilationInfo::get_Name()
			.set instance void System.Text.RegularExpressions.RegexCompilationInfo::set_Name(string)
		}
		.property instance string Namespace()
		{
			.get instance string System.Text.RegularExpressions.RegexCompilationInfo::get_Namespace()
			.set instance void System.Text.RegularExpressions.RegexCompilationInfo::set_Namespace(string)
		}
		.property instance valuetype System.Text.RegularExpressions.RegexOptions Options()
		{
			.get instance valuetype System.Text.RegularExpressions.RegexOptions System.Text.RegularExpressions.RegexCompilationInfo::get_Options()
			.set instance void System.Text.RegularExpressions.RegexCompilationInfo::set_Options(valuetype System.Text.RegularExpressions.RegexOptions)
		}
		.property instance string Pattern()
		{
			.get instance string System.Text.RegularExpressions.RegexCompilationInfo::get_Pattern()
			.set instance void System.Text.RegularExpressions.RegexCompilationInfo::set_Pattern(string)
		}
	}
	.class public sealed RegexOptions
		extends [mscorlib]System.Enum
	{
		.custom instance void [mscorlib]System.FlagsAttribute::.ctor() = (01 00 00 00)
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype System.Text.RegularExpressions.RegexOptions Compiled = int32(0x00000008)
		.field static public literal valuetype System.Text.RegularExpressions.RegexOptions CultureInvariant = int32(0x00000200)
		.field static public literal valuetype System.Text.RegularExpressions.RegexOptions Debug = int32(0x00000080)
		.field static public literal valuetype System.Text.RegularExpressions.RegexOptions ECMAScript = int32(0x00000100)
		.field static public literal valuetype System.Text.RegularExpressions.RegexOptions ExplicitCapture = int32(0x00000004)
		.field static public literal valuetype System.Text.RegularExpressions.RegexOptions IgnoreCase = int32(0x00000001)
		.field static public literal valuetype System.Text.RegularExpressions.RegexOptions IgnorePatternWhitespace = int32(0x00000020)
		.field static public literal valuetype System.Text.RegularExpressions.RegexOptions Multiline = int32(0x00000002)
		.field static public literal valuetype System.Text.RegularExpressions.RegexOptions None = int32(0x00000000)
		.field static public literal valuetype System.Text.RegularExpressions.RegexOptions RightToLeft = int32(0x00000040)
		.field static public literal valuetype System.Text.RegularExpressions.RegexOptions Singleline = int32(0x00000010)
	}
	.class public abstract RegexRunner
		extends [mscorlib]System.Object
	{
		.custom instance void System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype System.ComponentModel.EditorBrowsableState) = (01 00 01 00 00 00 00 00)
		.method famorassem hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method famorassem hidebysig 
			instance class System.Text.RegularExpressions.Match Scan(class System.Text.RegularExpressions.Regex regex, string text, int32 textbeg, int32 textend, int32 textstart, int32 prevlen, bool quick)
		{
			ret
		}
		.method family virtual hidebysig newslot abstract 
			instance void Go()
		{
		}
		.method family virtual hidebysig newslot abstract 
			instance bool FindFirstChar()
		{
		}
		.method family virtual hidebysig newslot abstract 
			instance void InitTrackCount()
		{
		}
		.method family hidebysig 
			instance void EnsureStorage()
		{
			ret
		}
		.method family hidebysig 
			instance bool IsBoundary(int32 index, int32 startpos, int32 endpos)
		{
			ret
		}
		.method family hidebysig 
			instance bool IsECMABoundary(int32 index, int32 startpos, int32 endpos)
		{
			ret
		}
		.method family static hidebysig 
			bool CharInSet(char ch, string set, string category)
		{
			ret
		}
		.method family static hidebysig 
			bool CharInClass(char ch, string charClass)
		{
			ret
		}
		.method family hidebysig 
			instance void DoubleTrack()
		{
			ret
		}
		.method family hidebysig 
			instance void DoubleStack()
		{
			ret
		}
		.method family hidebysig 
			instance void DoubleCrawl()
		{
			ret
		}
		.method family hidebysig 
			instance void Crawl(int32 i)
		{
			ret
		}
		.method family hidebysig 
			instance int32 Popcrawl()
		{
			ret
		}
		.method family hidebysig 
			instance int32 Crawlpos()
		{
			ret
		}
		.method family hidebysig 
			instance void Capture(int32 capnum, int32 start, int32 end)
		{
			ret
		}
		.method family hidebysig 
			instance void TransferCapture(int32 capnum, int32 uncapnum, int32 start, int32 end)
		{
			ret
		}
		.method family hidebysig 
			instance void Uncapture()
		{
			ret
		}
		.method family hidebysig 
			instance bool IsMatched(int32 cap)
		{
			ret
		}
		.method family hidebysig 
			instance int32 MatchIndex(int32 cap)
		{
			ret
		}
		.method family hidebysig 
			instance int32 MatchLength(int32 cap)
		{
			ret
		}
		.field famorassem int32[] runcrawl
		.field famorassem int32 runcrawlpos
		.field famorassem class System.Text.RegularExpressions.Match runmatch
		.field famorassem class System.Text.RegularExpressions.Regex runregex
		.field famorassem int32[] runstack
		.field famorassem int32 runstackpos
		.field famorassem string runtext
		.field famorassem int32 runtextbeg
		.field famorassem int32 runtextend
		.field famorassem int32 runtextpos
		.field famorassem int32 runtextstart
		.field famorassem int32[] runtrack
		.field famorassem int32 runtrackcount
		.field famorassem int32 runtrackpos
	}
	.class public abstract RegexRunnerFactory
		extends [mscorlib]System.Object
	{
		.custom instance void System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype System.ComponentModel.EditorBrowsableState) = (01 00 01 00 00 00 00 00)
		.method family hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method famorassem virtual hidebysig newslot abstract 
			instance class System.Text.RegularExpressions.RegexRunner CreateInstance()
		{
		}
	}
}
.namespace System.Threading
{
	.class public sealed Semaphore
		extends [mscorlib]System.Threading.WaitHandle
	{
		.permissionset linkcheck = (00)
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 00 00 00)
		.method public hidebysig specialname 
			instance void .ctor(int32 initialCount, int32 maximumCount)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(int32 initialCount, int32 maximumCount, string name)
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(int32 initialCount, int32 maximumCount, string name, [out] bool& createdNew)
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public static hidebysig 
			class System.Threading.Semaphore OpenExisting(string name)
		{
			.permissionset linkcheck = (00)
			ret
		}
		.method public hidebysig 
			instance int32 Release()
		{
			ret
		}
		.method public hidebysig 
			instance int32 Release(int32 releaseCount)
		{
			ret
		}
	}
	.class public serializable SemaphoreFullException
		extends [mscorlib]System.SystemException
	{
		.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (01 00 00 00 00)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string message)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string message, class [mscorlib]System.Exception innerException)
		{
			ret
		}
		.method family hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Runtime.Serialization.SerializationInfo info, valuetype [mscorlib]System.Runtime.Serialization.StreamingContext context)
		{
			ret
		}
	}
}
.namespace System.Web
{
	.class public sealed serializable AspNetHostingPermission
		extends [mscorlib]System.Security.CodeAccessPermission
		implements [mscorlib]System.Security.Permissions.IUnrestrictedPermission
	{
		.method public hidebysig specialname 
			instance void .ctor(valuetype [mscorlib]System.Security.Permissions.PermissionState state)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(valuetype System.Web.AspNetHostingPermissionLevel level)
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype System.Web.AspNetHostingPermissionLevel get_Level()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Level(valuetype System.Web.AspNetHostingPermissionLevel 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance bool IsUnrestricted()
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [mscorlib]System.Security.IPermission Copy()
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [mscorlib]System.Security.IPermission Union(class [mscorlib]System.Security.IPermission target)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [mscorlib]System.Security.IPermission Intersect(class [mscorlib]System.Security.IPermission target)
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool IsSubsetOf(class [mscorlib]System.Security.IPermission target)
		{
			ret
		}
		.method public virtual hidebysig 
			instance void FromXml(class [mscorlib]System.Security.SecurityElement securityElement)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [mscorlib]System.Security.SecurityElement ToXml()
		{
			ret
		}
		.property instance valuetype System.Web.AspNetHostingPermissionLevel Level()
		{
			.get instance valuetype System.Web.AspNetHostingPermissionLevel System.Web.AspNetHostingPermission::get_Level()
			.set instance void System.Web.AspNetHostingPermission::set_Level(valuetype System.Web.AspNetHostingPermissionLevel)
		}
	}
	.class public sealed serializable AspNetHostingPermissionAttribute
		extends [mscorlib]System.Security.Permissions.CodeAccessSecurityAttribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = (01 00 FF 7F 00 00 02 00 54 02 0D 41 6C 6C 6F 77 4D 75 6C 74 69 70 6C 65 01 54 02 09 49 6E 68 65 72 69 74 65 64 00)
		.method public hidebysig specialname 
			instance void .ctor(valuetype [mscorlib]System.Security.Permissions.SecurityAction action)
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype System.Web.AspNetHostingPermissionLevel get_Level()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Level(valuetype System.Web.AspNetHostingPermissionLevel 'value')
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [mscorlib]System.Security.IPermission CreatePermission()
		{
			ret
		}
		.property instance valuetype System.Web.AspNetHostingPermissionLevel Level()
		{
			.get instance valuetype System.Web.AspNetHostingPermissionLevel System.Web.AspNetHostingPermissionAttribute::get_Level()
			.set instance void System.Web.AspNetHostingPermissionAttribute::set_Level(valuetype System.Web.AspNetHostingPermissionLevel)
		}
	}
	.class public sealed serializable AspNetHostingPermissionLevel
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype System.Web.AspNetHostingPermissionLevel High = int32(0x000001F4)
		.field static public literal valuetype System.Web.AspNetHostingPermissionLevel Low = int32(0x0000012C)
		.field static public literal valuetype System.Web.AspNetHostingPermissionLevel Medium = int32(0x00000190)
		.field static public literal valuetype System.Web.AspNetHostingPermissionLevel Minimal = int32(0x000000C8)
		.field static public literal valuetype System.Web.AspNetHostingPermissionLevel None = int32(0x00000064)
		.field static public literal valuetype System.Web.AspNetHostingPermissionLevel Unrestricted = int32(0x00000258)
	}
}
