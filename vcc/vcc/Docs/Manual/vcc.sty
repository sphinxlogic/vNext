\usepackage{newvbtm}
\usepackage{listings}
\definecolor{vccOutColor}{rgb}{0.0,0.0,0.3}
\definecolor{vccDotsColor}{rgb}{0.3,0.3,0.3}
\lstloadlanguages{C}
\lstdefinelanguage{VCC}[ANSI]{C}{%
  morekeywords={axiom,requires,ensures,reads,writes,
                assert,assume,invariant,unwrapping,wrap,unwrap,atomic,
        	unchecked,NULL,ghost,
        	__vcc_spec,bool,logic,always,
                \true,\false,\proper,\old,\writable,\thread_local,
                \object,\thread,\owner,\me,\closed,\wrapped,\inv,\span,
		\result,\mine,\this,\forall,\exists,\lambda,\in,\owns,\diff,\inter,\domain,
                \union_with,\diff_with,\fresh,
                \claim,\claim_struct,\claim_count,\claims_object,\claims,\make_claim,\destroy_claim,
		\wrapped0,\at,\active_claim,\state,\valid,\bool,\true,\false,\natural,
                \objset,\unchanged,\is,\inv, \inv2,\inv2s, \integer, \forall, \exists, datatype,
                \addr, \type, \typeof \ghost, \non_primitive_ptr, \object, \embedding,
                \sizeof_object, \everything, \universe, \disjoint, \diff, retype, dynamic_owns,
                \state, \at, \now, \unchanged, \thread, \me, \old, group, inline, invariant, 
                record, \join_arrays, \split_array, root_index, blob, blobify, join_blobs, split_blob,
                blob_of, unblobify, union_reinterpret, \claim, \make_claim, \destroy_claim, \claims,
                \claims_object, \active_claim, \claims_claim, \claimable, \make_claim, 
                by_claim, \always_by_claim, \destroy_claim, \when_claimed, \program_entry_point,
                \me, atomic_inline, requires, ensures, writes, reads, maintains, always, 
                updates, out_param, returns, pure, def, admissibility, havoc_others, 
                recursive_with, decreases, unwrap, wrap, bump_volatile_version, unwrapping,
                now, \domain, \domian_updated_at, assert, assume, atomic, ghost_atomic,
                atomic_read, begin_update, \fresh, \nested, \extent, \full_extent, 
                \extent_mutable, \extent_zero, \extent_fresh, \thread_local, \thread_local_array, 
                \mutable, \mutable_array, \in_array, \array_range, \domain, \vdomain, 
                \alloc_array, \alloc, \not_shared, \object_root, \union_active, \addr_eq,
                \arrays_disjoint, \wrapped_with_deep_domain, \domain_root, \index_within,
                \writable, \size, \shallow_eq, \deep_eq, \wrapped0, \old, \unchanged, \macro,
                frameaxiom, no_frameaxiom, \start_here, assume_correct, no_reads_check, known,
                skip_smoke
},
  moretexcs={true,false,proper,old,writable,thread_local,
                object,thread,owner,me,closed,consistent,wrapped,mutable,inv,span,
        	result,mine,any,this,forall,exists,lambda,in,owns,diff,inter,set,domain,
                union_with,diff_with,fresh,
                claim,claim_struct,claim_count,claims_object,claims,make_claim,destroy_claim,
        	wrapped0,at,active_claim,state,valid,},
  moredelim=[is][\fontfamily{cmtt}\selectfont\textcolor{vccOutColor}]{/*`}{`*/},
  morecomment=[is]{//--}{//--},
}[tex]

\lstnewenvironment{VCC}[1][]{%
  \lstset{%
    floatplacement={tbp},
    keywordstyle=,
    captionpos=b,language=VCC,#1
    }}{}%

%% \lstnewenvironment{VCC2}[1][0.45]
%%     {\global\let\lst@intname\@empty
%%      \gdef\lst@sample{}%
%%     \setbox0=\hbox\bgroup
%%          \setkeys{lst}{floatplacement={tbp},captionpos=b,language=VCC}
%%          }
%%     {\egroup%
%%       \noindent\begin{minipage}{#1\linewidth}\hbox to\linewidth{\box0\hss}\end{minipage}}

% eliminate keyword highlighting for the manual
\def\vcc{%
    \lstinline[language=VCC, keywordstyle=]}

\newcommand\vccInput[2][]{{\lstset{language=VCC}\lstinputlisting[#1]{#2}}}
\newcommand\vccInputSC[2][]{{\lstset{language=VCC,morecomment=[is]{/*}{*/}}\lstinputlisting[#1]{#2}}}

