#include "vcc.h"

_(record) union S {
	struct {
		unsigned int b1 : 1;
		unsigned int b2 : 1;
		unsigned int b3 : 6;
		unsigned int b5 : 1;
		unsigned int b6 : 1;
		unsigned int b7 : 22;
	};
	_(backing_member) unsigned int AsUINT;
};

_(ghost union S foo(union S s0)
  _(ensures \result == s0 / { .b1 = 1 })
{
  return s0 / { .b1 = 1 };
})

void bar() {
  _(ghost union S s)
  _(ghost s = (union S) { .b1 = 0, .b2 = 1, .b7 = 10 })
  _(ghost s = foo(s))

  _(assert s.b1 == 1)
  _(assert s.b7 == 10)
  _(assert s.b2 == 1)

}
`
Verification of foo succeeded.
Verification of bar succeeded.
`
