#include "vcc.h"

_(claimable) struct S {
    int *x;
    _(invariant \mine((void[3])x))
};

vcc_attr("no_infer", "always_by_claim")
void foo(struct S *s _(ghost \claim c))
    _(always c, s->\closed)
{
    _(atomic c,s) {}
    _(assert \is_array(s->x, 3))
    _(assert s->x==_(by_claim c)(s->x))
    _(assert s->x[2] == _(by_claim c)(s->x[2]))
    _(assert \unchanged(s->x[2]))
}
`
Verification of S#adm succeeded.
Verification of foo succeeded.
`
