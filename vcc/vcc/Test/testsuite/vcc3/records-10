#include <vcc.h>

typedef _(record) struct R
{
	int Register0;
	int Register1;
};

struct S {
	int data;
	int data2;
	
	_(ghost struct R rec)

	_(invariant rec.Register0 == data && rec.Register1 == data2)
};


void foo(struct S *s) 
  _(maintains \wrapped(s))
  _(writes s)
{
  _(assert s->data == s->rec.Register0)
  _(assert s->data2 == s->rec.Register1)
  _(unwrapping s) {
    int tmp = s->data;
    s->data = s->data2;
    s->data2 = tmp;
    _(ghost s->rec = s->rec / { .Register0 = s->rec.Register1, .Register1 = s->rec.Register0 })
  }
}
`
Verification of S#adm succeeded.
Verification of foo succeeded.
`
