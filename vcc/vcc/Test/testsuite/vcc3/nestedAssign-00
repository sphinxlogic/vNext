#include <vcc.h>

union U {
	_(backing_member)
	int AsInt32;
	
	struct {
		int a:16;
		int b:16;
	};
};

struct S {
	_(inline) union U u;
};

struct T {
	struct S s;

	_(invariant \mine(&s))
};

void foo(struct T *t)
	_(writes t)
	_(requires \wrapped(t))
{
	union U u, u1, u2, u3;
	_(unwrap t)
	_(unwrap &t->s)
	u3 = u2 = u1 = u = t->s.u;
}

`
Verification of T#adm succeeded.
Verification of foo succeeded.
`
