#include <vcc.h>

_(logic \bool fresh_object(\object ptr) =
  \object_root(ptr) && \mutable(ptr) && \fresh(ptr))

void *alloc(unsigned __int64  sz)
  _(ensures fresh_object(_(blob sz)(\result)))
  ;

void mfree(void *p, unsigned __int64 sz)
  _(writes \extent(_(blob sz)p))
  ;

struct A {
  int x, y;
};

struct B {
  struct A a1;
  struct A a2;
  int x;
};

void f2()
{
  struct B * b = _(unblobify) (struct B*)alloc(sizeof(struct B));
  b->x = 20;
  b->a1.x = 10;
  b->a2.y = 20;
  _(blobify b)
  mfree(b, sizeof(*b));
}

void f2_fail1()
{
  struct B * b = _(unblobify) (struct B*)alloc(sizeof(struct B));
  _(wrap &b->a1)
  _(blobify b)
  mfree(b, sizeof(*b));
}

void f2_fail2()
{
  struct B * b = _(unblobify) (struct B*)alloc(sizeof(struct B) - 1);
}

void f2_fail3()
{
  struct B * b = _(unblobify) (struct B*)alloc(sizeof(struct B) + 1);
}
`
Verification of f2 succeeded.
Verification of f2_fail1 failed.
testcase(38,13) : error VC8507: Assertion 'extent(b) is writable' did not verify.
Verification of f2_fail2 failed.
testcase(44,31) : error VC8507: Assertion '_(blob ...) ((struct B*)alloc(sizeof(struct B) - 1)) is writable' did not verify.
Verification of f2_fail3 failed.
testcase(49,31) : error VC8507: Assertion '_(blob ...) ((struct B*)alloc(sizeof(struct B) + 1)) is writable' did not verify.
`
