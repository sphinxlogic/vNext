#include "vcc.h"

typedef volatile struct _COUNTER
{
    unsigned AsUNSIGNED;
} COUNTER;

typedef _(claimable) struct _Foo
{
    _(invariant \mine(&c))
    COUNTER c;
} Foo;

void foo(Foo* p _(ghost \claim c))
    _(always c,(&p->c)->\closed)
{
    _(atomic c,&p->c) {
        p->c.AsUNSIGNED = 2;
        //error VC8507: Assertion 'p->c.AsUNSIGNED is writable' did not verify.
    }
}

`
Verification of _Foo#adm succeeded.
Verification of foo succeeded.
`
