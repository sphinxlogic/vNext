
#include "vcc.h"

struct S {
	volatile int i;
	_(invariant \on_unwrap(\this, \false))
};

_(pure) int foo(int i)
	_(ensures \result == \true)
{
	return 1;
}

void bar(struct S *s)
	_(requires \wrapped(s))
{
	int i;
	_(atomic s) 
	{
		_(assert foo(i))
		s->i = 1;
	}
}
`
Verification of S#adm succeeded.
Verification of foo succeeded.
Verification of bar succeeded.
`
