#include "vcc.h"

_(ghost typedef unsigned map_t[unsigned])

_(ghost _(pure) map_t upd(map_t m,unsigned y)
    _(returns \lambda unsigned x; x==y ? 0 : m[x]))

_(ghost _(pure) map_t abs(unsigned *m, unsigned z)
    _(reads \universe())
    _(returns \lambda unsigned x; x < z ? m[x] : 0))

void trg(unsigned *m, unsigned z)
    _(requires z)
    _(requires ((void[z])m)->\valid)
    _(writes m+0)
{
    m[0] = 0;
    _(assert abs(m,z)==upd(\old(abs(m,z)),0))
}

_(ghost typedef _(record) struct x { map_t m; } rec_t)

_(ghost _(pure) rec_t rec_upd(rec_t r,unsigned y)
    _(returns r / { .m = \lambda unsigned x; x==y ? 0 : r.m[x] }))

_(ghost _(pure) rec_t rec_abs(unsigned *m, unsigned z)
    _(reads \universe())
    _(returns (rec_t) { .m = \lambda unsigned x; x < z ? m[x] : 0 }))

void trg2(unsigned *m, unsigned z)
    _(requires z)
    _(requires ((void[z])m)->\valid)
    _(writes m+0)
{
    m[0] = 0;
    //assert(rec_abs(m,z).m==rec_upd(old(rec_abs(m,z)),0).m);
    _(assert rec_abs(m,z)==rec_upd(\old(rec_abs(m,z)),0))
}
`
Verification of trg succeeded.
Verification of trg2 succeeded.
`
