#include <vcc.h>

struct A {
  int x;
};

struct B {
  int dummy;
  _(ghost  struct A ^a;)

  _(invariant \ghost(\this) && a->x == 12)
};


void foo()
{
_(ghost  struct B ^b;)
_(ghost {
  b = \alloc<struct B>();
  b->a = \alloc<struct A>();
  b->a->x = 12;
  _(wrap b)})
}

struct B2 {
  int dummy;
  _(ghost  struct A ^a;)

  _(invariant \ghost(\this) && a->x == 12)
};

_(admissibility)
void adm_B2(struct B2* x)
{
  _(havoc_others x)
}
`
Verification of B#adm failed.
testcase(11,32) : error VC8012: invariant(a->x == 12) of B is not admissible.
Verification of B2#adm succeeded.
Verification of foo succeeded.
Verification of adm_B2 failed.
testcase(36,1) : error VC8012: invariant(a->x == 12) of B2 is not admissible.
`
