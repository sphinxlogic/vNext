// Implementation file for parser generated by fsyacc
#light
#nowarn "64";; // turn off warnings that type variables used in production annotations are instantiated to concrete type
open Microsoft.FSharp.Text.Lexing
open Microsoft.FSharp.Text.Parsing.ParseHelpers
# 1 ".\parse.fsy"


open Ast;;
open Parse_util;;
open Microsoft.FSharp.Compatibility.OCaml.Big_int;;


# 14 "..\..\obj\beat\parse.fs"
// This type is the type of tokens accepted by the parser
type token = 
  | EOF
  | EAX
  | EBX
  | ECX
  | EDX
  | ESI
  | EDI
  | EBP
  | ESP
  | FORALL
  | EXISTS
  | OLD
  | COLONCOLON
  | EQEQGT
  | LTEQEQGT
  | REQUIRES of (loc)
  | ENSURES of (loc)
  | MODIFIES of (loc)
  | INVARIANT of (loc)
  | ASSUME of (loc)
  | ASSERT of (loc)
  | GOTO of (loc)
  | CALL of (loc)
  | CONST of (loc)
  | FUNCTION of (loc)
  | RETURNS of (loc)
  | TYPE of (loc)
  | AXIOM of (loc)
  | PROCEDURE of (loc)
  | IMPLEMENTATION of (loc)
  | AMP
  | NULL
  | INT
  | BOOL
  | DOT
  | UNDERSCORE
  | FUN
  | COLONEQ of (loc)
  | REQARROW
  | RLOL
  | SLASH
  | BACKSLASH
  | AT
  | DOLLAR
  | PERCENT
  | SQUOTE
  | BQUOTE
  | BARBAR
  | PLUSPLUS
  | HASH
  | CARET
  | AMPAMP of (loc)
  | PLUS
  | MINUS
  | STAR
  | LT
  | GT
  | BAR
  | EQ
  | BANG
  | QUESTION
  | COMMA
  | RARROW
  | LARROW
  | LE
  | GE
  | EQEQ
  | NE
  | LPAREN
  | RPAREN
  | LBRACKET
  | RBRACKET
  | COLON of (loc)
  | LITBOOL of (bool)
  | LITINT of (bigint)
  | IF of (loc)
  | ELSE of (loc)
  | WHILE of (loc)
  | RETURN of (loc)
  | VAR of (loc)
  | LBRACE of (loc)
  | RBRACE of (loc)
  | SEMI of (loc)
  | QLID of (string)
  | QUID of (string)
  | DLID of (string)
  | DUID of (string)
  | LID of (string)
  | UID of (string)
// This type is used to give symbolic names to token indexes, useful for error messages
type tokenId = 
    | TOKEN_EOF
    | TOKEN_EAX
    | TOKEN_EBX
    | TOKEN_ECX
    | TOKEN_EDX
    | TOKEN_ESI
    | TOKEN_EDI
    | TOKEN_EBP
    | TOKEN_ESP
    | TOKEN_FORALL
    | TOKEN_EXISTS
    | TOKEN_OLD
    | TOKEN_COLONCOLON
    | TOKEN_EQEQGT
    | TOKEN_LTEQEQGT
    | TOKEN_REQUIRES
    | TOKEN_ENSURES
    | TOKEN_MODIFIES
    | TOKEN_INVARIANT
    | TOKEN_ASSUME
    | TOKEN_ASSERT
    | TOKEN_GOTO
    | TOKEN_CALL
    | TOKEN_CONST
    | TOKEN_FUNCTION
    | TOKEN_RETURNS
    | TOKEN_TYPE
    | TOKEN_AXIOM
    | TOKEN_PROCEDURE
    | TOKEN_IMPLEMENTATION
    | TOKEN_AMP
    | TOKEN_NULL
    | TOKEN_INT
    | TOKEN_BOOL
    | TOKEN_DOT
    | TOKEN_UNDERSCORE
    | TOKEN_FUN
    | TOKEN_COLONEQ
    | TOKEN_REQARROW
    | TOKEN_RLOL
    | TOKEN_SLASH
    | TOKEN_BACKSLASH
    | TOKEN_AT
    | TOKEN_DOLLAR
    | TOKEN_PERCENT
    | TOKEN_SQUOTE
    | TOKEN_BQUOTE
    | TOKEN_BARBAR
    | TOKEN_PLUSPLUS
    | TOKEN_HASH
    | TOKEN_CARET
    | TOKEN_AMPAMP
    | TOKEN_PLUS
    | TOKEN_MINUS
    | TOKEN_STAR
    | TOKEN_LT
    | TOKEN_GT
    | TOKEN_BAR
    | TOKEN_EQ
    | TOKEN_BANG
    | TOKEN_QUESTION
    | TOKEN_COMMA
    | TOKEN_RARROW
    | TOKEN_LARROW
    | TOKEN_LE
    | TOKEN_GE
    | TOKEN_EQEQ
    | TOKEN_NE
    | TOKEN_LPAREN
    | TOKEN_RPAREN
    | TOKEN_LBRACKET
    | TOKEN_RBRACKET
    | TOKEN_COLON
    | TOKEN_LITBOOL
    | TOKEN_LITINT
    | TOKEN_IF
    | TOKEN_ELSE
    | TOKEN_WHILE
    | TOKEN_RETURN
    | TOKEN_VAR
    | TOKEN_LBRACE
    | TOKEN_RBRACE
    | TOKEN_SEMI
    | TOKEN_QLID
    | TOKEN_QUID
    | TOKEN_DLID
    | TOKEN_DUID
    | TOKEN_LID
    | TOKEN_UID
    | TOKEN_end_of_input
    | TOKEN_error
// This type is used to give symbolic names to token indexes, useful for error messages
type nonTerminalId = 
    | NONTERM__startstart
    | NONTERM_start
    | NONTERM_ID
    | NONTERM_Type
    | NONTERM_Types
    | NONTERM_Triggers
    | NONTERM_Exp
    | NONTERM_Exps
    | NONTERM_AnyId
    | NONTERM_AnyIds
    | NONTERM_LoopInvs
    | NONTERM_BFormalTyp
    | NONTERM_Stmt
    | NONTERM_Stmts
    | NONTERM_Block
    | NONTERM_FormalVar
    | NONTERM_FormalVars
    | NONTERM_Formal
    | NONTERM_Formals
    | NONTERM_FormalFun
    | NONTERM_FormalFuns
    | NONTERM_Spec
    | NONTERM_Specs
    | NONTERM_Attr
    | NONTERM_ProcOrImpl
    | NONTERM_Decl
    | NONTERM_Decls

// This function maps tokens to integers indexes
let tagOfToken (t:token) = 
  match t with
  | EOF  -> 0 
  | EAX  -> 1 
  | EBX  -> 2 
  | ECX  -> 3 
  | EDX  -> 4 
  | ESI  -> 5 
  | EDI  -> 6 
  | EBP  -> 7 
  | ESP  -> 8 
  | FORALL  -> 9 
  | EXISTS  -> 10 
  | OLD  -> 11 
  | COLONCOLON  -> 12 
  | EQEQGT  -> 13 
  | LTEQEQGT  -> 14 
  | REQUIRES _ -> 15 
  | ENSURES _ -> 16 
  | MODIFIES _ -> 17 
  | INVARIANT _ -> 18 
  | ASSUME _ -> 19 
  | ASSERT _ -> 20 
  | GOTO _ -> 21 
  | CALL _ -> 22 
  | CONST _ -> 23 
  | FUNCTION _ -> 24 
  | RETURNS _ -> 25 
  | TYPE _ -> 26 
  | AXIOM _ -> 27 
  | PROCEDURE _ -> 28 
  | IMPLEMENTATION _ -> 29 
  | AMP  -> 30 
  | NULL  -> 31 
  | INT  -> 32 
  | BOOL  -> 33 
  | DOT  -> 34 
  | UNDERSCORE  -> 35 
  | FUN  -> 36 
  | COLONEQ _ -> 37 
  | REQARROW  -> 38 
  | RLOL  -> 39 
  | SLASH  -> 40 
  | BACKSLASH  -> 41 
  | AT  -> 42 
  | DOLLAR  -> 43 
  | PERCENT  -> 44 
  | SQUOTE  -> 45 
  | BQUOTE  -> 46 
  | BARBAR  -> 47 
  | PLUSPLUS  -> 48 
  | HASH  -> 49 
  | CARET  -> 50 
  | AMPAMP _ -> 51 
  | PLUS  -> 52 
  | MINUS  -> 53 
  | STAR  -> 54 
  | LT  -> 55 
  | GT  -> 56 
  | BAR  -> 57 
  | EQ  -> 58 
  | BANG  -> 59 
  | QUESTION  -> 60 
  | COMMA  -> 61 
  | RARROW  -> 62 
  | LARROW  -> 63 
  | LE  -> 64 
  | GE  -> 65 
  | EQEQ  -> 66 
  | NE  -> 67 
  | LPAREN  -> 68 
  | RPAREN  -> 69 
  | LBRACKET  -> 70 
  | RBRACKET  -> 71 
  | COLON _ -> 72 
  | LITBOOL _ -> 73 
  | LITINT _ -> 74 
  | IF _ -> 75 
  | ELSE _ -> 76 
  | WHILE _ -> 77 
  | RETURN _ -> 78 
  | VAR _ -> 79 
  | LBRACE _ -> 80 
  | RBRACE _ -> 81 
  | SEMI _ -> 82 
  | QLID _ -> 83 
  | QUID _ -> 84 
  | DLID _ -> 85 
  | DUID _ -> 86 
  | LID _ -> 87 
  | UID _ -> 88 

// This function maps integers indexes to symbolic token ids
let tokenTagToTokenId (tokenIdx:int) = 
  match tokenIdx with
  | 0 -> TOKEN_EOF 
  | 1 -> TOKEN_EAX 
  | 2 -> TOKEN_EBX 
  | 3 -> TOKEN_ECX 
  | 4 -> TOKEN_EDX 
  | 5 -> TOKEN_ESI 
  | 6 -> TOKEN_EDI 
  | 7 -> TOKEN_EBP 
  | 8 -> TOKEN_ESP 
  | 9 -> TOKEN_FORALL 
  | 10 -> TOKEN_EXISTS 
  | 11 -> TOKEN_OLD 
  | 12 -> TOKEN_COLONCOLON 
  | 13 -> TOKEN_EQEQGT 
  | 14 -> TOKEN_LTEQEQGT 
  | 15 -> TOKEN_REQUIRES 
  | 16 -> TOKEN_ENSURES 
  | 17 -> TOKEN_MODIFIES 
  | 18 -> TOKEN_INVARIANT 
  | 19 -> TOKEN_ASSUME 
  | 20 -> TOKEN_ASSERT 
  | 21 -> TOKEN_GOTO 
  | 22 -> TOKEN_CALL 
  | 23 -> TOKEN_CONST 
  | 24 -> TOKEN_FUNCTION 
  | 25 -> TOKEN_RETURNS 
  | 26 -> TOKEN_TYPE 
  | 27 -> TOKEN_AXIOM 
  | 28 -> TOKEN_PROCEDURE 
  | 29 -> TOKEN_IMPLEMENTATION 
  | 30 -> TOKEN_AMP 
  | 31 -> TOKEN_NULL 
  | 32 -> TOKEN_INT 
  | 33 -> TOKEN_BOOL 
  | 34 -> TOKEN_DOT 
  | 35 -> TOKEN_UNDERSCORE 
  | 36 -> TOKEN_FUN 
  | 37 -> TOKEN_COLONEQ 
  | 38 -> TOKEN_REQARROW 
  | 39 -> TOKEN_RLOL 
  | 40 -> TOKEN_SLASH 
  | 41 -> TOKEN_BACKSLASH 
  | 42 -> TOKEN_AT 
  | 43 -> TOKEN_DOLLAR 
  | 44 -> TOKEN_PERCENT 
  | 45 -> TOKEN_SQUOTE 
  | 46 -> TOKEN_BQUOTE 
  | 47 -> TOKEN_BARBAR 
  | 48 -> TOKEN_PLUSPLUS 
  | 49 -> TOKEN_HASH 
  | 50 -> TOKEN_CARET 
  | 51 -> TOKEN_AMPAMP 
  | 52 -> TOKEN_PLUS 
  | 53 -> TOKEN_MINUS 
  | 54 -> TOKEN_STAR 
  | 55 -> TOKEN_LT 
  | 56 -> TOKEN_GT 
  | 57 -> TOKEN_BAR 
  | 58 -> TOKEN_EQ 
  | 59 -> TOKEN_BANG 
  | 60 -> TOKEN_QUESTION 
  | 61 -> TOKEN_COMMA 
  | 62 -> TOKEN_RARROW 
  | 63 -> TOKEN_LARROW 
  | 64 -> TOKEN_LE 
  | 65 -> TOKEN_GE 
  | 66 -> TOKEN_EQEQ 
  | 67 -> TOKEN_NE 
  | 68 -> TOKEN_LPAREN 
  | 69 -> TOKEN_RPAREN 
  | 70 -> TOKEN_LBRACKET 
  | 71 -> TOKEN_RBRACKET 
  | 72 -> TOKEN_COLON 
  | 73 -> TOKEN_LITBOOL 
  | 74 -> TOKEN_LITINT 
  | 75 -> TOKEN_IF 
  | 76 -> TOKEN_ELSE 
  | 77 -> TOKEN_WHILE 
  | 78 -> TOKEN_RETURN 
  | 79 -> TOKEN_VAR 
  | 80 -> TOKEN_LBRACE 
  | 81 -> TOKEN_RBRACE 
  | 82 -> TOKEN_SEMI 
  | 83 -> TOKEN_QLID 
  | 84 -> TOKEN_QUID 
  | 85 -> TOKEN_DLID 
  | 86 -> TOKEN_DUID 
  | 87 -> TOKEN_LID 
  | 88 -> TOKEN_UID 
  | 91 -> TOKEN_end_of_input
  | 89 -> TOKEN_error
  | _ -> failwith "tokenTagToTokenId: bad token"

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
let prodIdxToNonTerminal (prodIdx:int) = 
  match prodIdx with
    | 0 -> NONTERM__startstart 
    | 1 -> NONTERM_start 
    | 2 -> NONTERM_ID 
    | 3 -> NONTERM_ID 
    | 4 -> NONTERM_Type 
    | 5 -> NONTERM_Type 
    | 6 -> NONTERM_Type 
    | 7 -> NONTERM_Type 
    | 8 -> NONTERM_Types 
    | 9 -> NONTERM_Types 
    | 10 -> NONTERM_Triggers 
    | 11 -> NONTERM_Triggers 
    | 12 -> NONTERM_Exp 
    | 13 -> NONTERM_Exp 
    | 14 -> NONTERM_Exp 
    | 15 -> NONTERM_Exp 
    | 16 -> NONTERM_Exp 
    | 17 -> NONTERM_Exp 
    | 18 -> NONTERM_Exp 
    | 19 -> NONTERM_Exp 
    | 20 -> NONTERM_Exp 
    | 21 -> NONTERM_Exp 
    | 22 -> NONTERM_Exp 
    | 23 -> NONTERM_Exp 
    | 24 -> NONTERM_Exp 
    | 25 -> NONTERM_Exp 
    | 26 -> NONTERM_Exp 
    | 27 -> NONTERM_Exp 
    | 28 -> NONTERM_Exp 
    | 29 -> NONTERM_Exp 
    | 30 -> NONTERM_Exp 
    | 31 -> NONTERM_Exp 
    | 32 -> NONTERM_Exp 
    | 33 -> NONTERM_Exp 
    | 34 -> NONTERM_Exp 
    | 35 -> NONTERM_Exp 
    | 36 -> NONTERM_Exp 
    | 37 -> NONTERM_Exp 
    | 38 -> NONTERM_Exp 
    | 39 -> NONTERM_Exp 
    | 40 -> NONTERM_Exp 
    | 41 -> NONTERM_Exp 
    | 42 -> NONTERM_Exp 
    | 43 -> NONTERM_Exp 
    | 44 -> NONTERM_Exps 
    | 45 -> NONTERM_Exps 
    | 46 -> NONTERM_Exps 
    | 47 -> NONTERM_AnyId 
    | 48 -> NONTERM_AnyId 
    | 49 -> NONTERM_AnyId 
    | 50 -> NONTERM_AnyId 
    | 51 -> NONTERM_AnyId 
    | 52 -> NONTERM_AnyId 
    | 53 -> NONTERM_AnyId 
    | 54 -> NONTERM_AnyIds 
    | 55 -> NONTERM_AnyIds 
    | 56 -> NONTERM_AnyIds 
    | 57 -> NONTERM_LoopInvs 
    | 58 -> NONTERM_LoopInvs 
    | 59 -> NONTERM_BFormalTyp 
    | 60 -> NONTERM_BFormalTyp 
    | 61 -> NONTERM_Stmt 
    | 62 -> NONTERM_Stmt 
    | 63 -> NONTERM_Stmt 
    | 64 -> NONTERM_Stmt 
    | 65 -> NONTERM_Stmt 
    | 66 -> NONTERM_Stmt 
    | 67 -> NONTERM_Stmt 
    | 68 -> NONTERM_Stmt 
    | 69 -> NONTERM_Stmt 
    | 70 -> NONTERM_Stmt 
    | 71 -> NONTERM_Stmt 
    | 72 -> NONTERM_Stmt 
    | 73 -> NONTERM_Stmt 
    | 74 -> NONTERM_Stmt 
    | 75 -> NONTERM_Stmts 
    | 76 -> NONTERM_Stmts 
    | 77 -> NONTERM_Block 
    | 78 -> NONTERM_FormalVar 
    | 79 -> NONTERM_FormalVar 
    | 80 -> NONTERM_FormalVars 
    | 81 -> NONTERM_FormalVars 
    | 82 -> NONTERM_FormalVars 
    | 83 -> NONTERM_Formal 
    | 84 -> NONTERM_Formals 
    | 85 -> NONTERM_Formals 
    | 86 -> NONTERM_Formals 
    | 87 -> NONTERM_FormalFun 
    | 88 -> NONTERM_FormalFun 
    | 89 -> NONTERM_FormalFuns 
    | 90 -> NONTERM_FormalFuns 
    | 91 -> NONTERM_FormalFuns 
    | 92 -> NONTERM_Spec 
    | 93 -> NONTERM_Spec 
    | 94 -> NONTERM_Spec 
    | 95 -> NONTERM_Spec 
    | 96 -> NONTERM_Spec 
    | 97 -> NONTERM_Specs 
    | 98 -> NONTERM_Specs 
    | 99 -> NONTERM_Attr 
    | 100 -> NONTERM_Attr 
    | 101 -> NONTERM_ProcOrImpl 
    | 102 -> NONTERM_ProcOrImpl 
    | 103 -> NONTERM_Decl 
    | 104 -> NONTERM_Decl 
    | 105 -> NONTERM_Decl 
    | 106 -> NONTERM_Decl 
    | 107 -> NONTERM_Decl 
    | 108 -> NONTERM_Decl 
    | 109 -> NONTERM_Decl 
    | 110 -> NONTERM_Decl 
    | 111 -> NONTERM_Decl 
    | 112 -> NONTERM_Decl 
    | 113 -> NONTERM_Decl 
    | 114 -> NONTERM_Decl 
    | 115 -> NONTERM_Decls 
    | 116 -> NONTERM_Decls 
    | _ -> failwith "prodIdxToNonTerminal: bad production index"

let _fsyacc_endOfInputTag = 91 
let _fsyacc_tagOfErrorTerminal = 89

// This function gets the name of a token as a string
let token_to_string (t:token) = 
  match t with 
  | EOF  -> "EOF" 
  | EAX  -> "EAX" 
  | EBX  -> "EBX" 
  | ECX  -> "ECX" 
  | EDX  -> "EDX" 
  | ESI  -> "ESI" 
  | EDI  -> "EDI" 
  | EBP  -> "EBP" 
  | ESP  -> "ESP" 
  | FORALL  -> "FORALL" 
  | EXISTS  -> "EXISTS" 
  | OLD  -> "OLD" 
  | COLONCOLON  -> "COLONCOLON" 
  | EQEQGT  -> "EQEQGT" 
  | LTEQEQGT  -> "LTEQEQGT" 
  | REQUIRES _ -> "REQUIRES" 
  | ENSURES _ -> "ENSURES" 
  | MODIFIES _ -> "MODIFIES" 
  | INVARIANT _ -> "INVARIANT" 
  | ASSUME _ -> "ASSUME" 
  | ASSERT _ -> "ASSERT" 
  | GOTO _ -> "GOTO" 
  | CALL _ -> "CALL" 
  | CONST _ -> "CONST" 
  | FUNCTION _ -> "FUNCTION" 
  | RETURNS _ -> "RETURNS" 
  | TYPE _ -> "TYPE" 
  | AXIOM _ -> "AXIOM" 
  | PROCEDURE _ -> "PROCEDURE" 
  | IMPLEMENTATION _ -> "IMPLEMENTATION" 
  | AMP  -> "AMP" 
  | NULL  -> "NULL" 
  | INT  -> "INT" 
  | BOOL  -> "BOOL" 
  | DOT  -> "DOT" 
  | UNDERSCORE  -> "UNDERSCORE" 
  | FUN  -> "FUN" 
  | COLONEQ _ -> "COLONEQ" 
  | REQARROW  -> "REQARROW" 
  | RLOL  -> "RLOL" 
  | SLASH  -> "SLASH" 
  | BACKSLASH  -> "BACKSLASH" 
  | AT  -> "AT" 
  | DOLLAR  -> "DOLLAR" 
  | PERCENT  -> "PERCENT" 
  | SQUOTE  -> "SQUOTE" 
  | BQUOTE  -> "BQUOTE" 
  | BARBAR  -> "BARBAR" 
  | PLUSPLUS  -> "PLUSPLUS" 
  | HASH  -> "HASH" 
  | CARET  -> "CARET" 
  | AMPAMP _ -> "AMPAMP" 
  | PLUS  -> "PLUS" 
  | MINUS  -> "MINUS" 
  | STAR  -> "STAR" 
  | LT  -> "LT" 
  | GT  -> "GT" 
  | BAR  -> "BAR" 
  | EQ  -> "EQ" 
  | BANG  -> "BANG" 
  | QUESTION  -> "QUESTION" 
  | COMMA  -> "COMMA" 
  | RARROW  -> "RARROW" 
  | LARROW  -> "LARROW" 
  | LE  -> "LE" 
  | GE  -> "GE" 
  | EQEQ  -> "EQEQ" 
  | NE  -> "NE" 
  | LPAREN  -> "LPAREN" 
  | RPAREN  -> "RPAREN" 
  | LBRACKET  -> "LBRACKET" 
  | RBRACKET  -> "RBRACKET" 
  | COLON _ -> "COLON" 
  | LITBOOL _ -> "LITBOOL" 
  | LITINT _ -> "LITINT" 
  | IF _ -> "IF" 
  | ELSE _ -> "ELSE" 
  | WHILE _ -> "WHILE" 
  | RETURN _ -> "RETURN" 
  | VAR _ -> "VAR" 
  | LBRACE _ -> "LBRACE" 
  | RBRACE _ -> "RBRACE" 
  | SEMI _ -> "SEMI" 
  | QLID _ -> "QLID" 
  | QUID _ -> "QUID" 
  | DLID _ -> "DLID" 
  | DUID _ -> "DUID" 
  | LID _ -> "LID" 
  | UID _ -> "UID" 

// This function gets the data carried by a token as an object
let _fsyacc_dataOfToken (t:token) = 
  match t with 
  | EOF  -> (null : System.Object) 
  | EAX  -> (null : System.Object) 
  | EBX  -> (null : System.Object) 
  | ECX  -> (null : System.Object) 
  | EDX  -> (null : System.Object) 
  | ESI  -> (null : System.Object) 
  | EDI  -> (null : System.Object) 
  | EBP  -> (null : System.Object) 
  | ESP  -> (null : System.Object) 
  | FORALL  -> (null : System.Object) 
  | EXISTS  -> (null : System.Object) 
  | OLD  -> (null : System.Object) 
  | COLONCOLON  -> (null : System.Object) 
  | EQEQGT  -> (null : System.Object) 
  | LTEQEQGT  -> (null : System.Object) 
  | REQUIRES _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | ENSURES _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | MODIFIES _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INVARIANT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | ASSUME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | ASSERT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | GOTO _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CALL _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CONST _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | FUNCTION _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | RETURNS _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | TYPE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | AXIOM _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | PROCEDURE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | IMPLEMENTATION _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | AMP  -> (null : System.Object) 
  | NULL  -> (null : System.Object) 
  | INT  -> (null : System.Object) 
  | BOOL  -> (null : System.Object) 
  | DOT  -> (null : System.Object) 
  | UNDERSCORE  -> (null : System.Object) 
  | FUN  -> (null : System.Object) 
  | COLONEQ _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | REQARROW  -> (null : System.Object) 
  | RLOL  -> (null : System.Object) 
  | SLASH  -> (null : System.Object) 
  | BACKSLASH  -> (null : System.Object) 
  | AT  -> (null : System.Object) 
  | DOLLAR  -> (null : System.Object) 
  | PERCENT  -> (null : System.Object) 
  | SQUOTE  -> (null : System.Object) 
  | BQUOTE  -> (null : System.Object) 
  | BARBAR  -> (null : System.Object) 
  | PLUSPLUS  -> (null : System.Object) 
  | HASH  -> (null : System.Object) 
  | CARET  -> (null : System.Object) 
  | AMPAMP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | PLUS  -> (null : System.Object) 
  | MINUS  -> (null : System.Object) 
  | STAR  -> (null : System.Object) 
  | LT  -> (null : System.Object) 
  | GT  -> (null : System.Object) 
  | BAR  -> (null : System.Object) 
  | EQ  -> (null : System.Object) 
  | BANG  -> (null : System.Object) 
  | QUESTION  -> (null : System.Object) 
  | COMMA  -> (null : System.Object) 
  | RARROW  -> (null : System.Object) 
  | LARROW  -> (null : System.Object) 
  | LE  -> (null : System.Object) 
  | GE  -> (null : System.Object) 
  | EQEQ  -> (null : System.Object) 
  | NE  -> (null : System.Object) 
  | LPAREN  -> (null : System.Object) 
  | RPAREN  -> (null : System.Object) 
  | LBRACKET  -> (null : System.Object) 
  | RBRACKET  -> (null : System.Object) 
  | COLON _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | LITBOOL _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | LITINT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | IF _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | ELSE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | WHILE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | RETURN _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | VAR _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | LBRACE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | RBRACE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | SEMI _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | QLID _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | QUID _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | DLID _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | DUID _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | LID _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | UID _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
let _fsyacc_gotos = [| 0us; 65535us; 1us; 65535us; 0us; 1us; 48us; 65535us; 20us; 101us; 24us; 101us; 63us; 101us; 64us; 101us; 65us; 101us; 66us; 101us; 67us; 101us; 68us; 101us; 69us; 101us; 70us; 101us; 71us; 101us; 72us; 101us; 73us; 101us; 74us; 101us; 75us; 101us; 76us; 101us; 77us; 101us; 78us; 101us; 80us; 101us; 84us; 101us; 89us; 101us; 91us; 101us; 94us; 101us; 99us; 101us; 102us; 101us; 109us; 101us; 122us; 101us; 131us; 132us; 138us; 101us; 141us; 101us; 147us; 101us; 151us; 101us; 153us; 101us; 156us; 101us; 158us; 101us; 161us; 101us; 164us; 101us; 171us; 101us; 177us; 129us; 179us; 129us; 199us; 101us; 203us; 101us; 205us; 101us; 248us; 249us; 254us; 259us; 257us; 101us; 263us; 101us; 270us; 101us; 11us; 65535us; 12us; 17us; 14us; 15us; 18us; 17us; 125us; 126us; 183us; 184us; 191us; 192us; 197us; 198us; 226us; 227us; 235us; 236us; 254us; 255us; 260us; 261us; 2us; 65535us; 12us; 13us; 18us; 19us; 3us; 65535us; 22us; 23us; 83us; 84us; 88us; 89us; 43us; 65535us; 20us; 48us; 24us; 25us; 63us; 27us; 64us; 28us; 65us; 29us; 66us; 30us; 67us; 31us; 68us; 32us; 69us; 33us; 70us; 34us; 71us; 35us; 72us; 36us; 73us; 37us; 74us; 38us; 75us; 39us; 76us; 40us; 77us; 41us; 78us; 42us; 80us; 43us; 84us; 44us; 89us; 45us; 91us; 48us; 94us; 46us; 99us; 47us; 102us; 48us; 109us; 48us; 122us; 49us; 138us; 50us; 141us; 51us; 147us; 52us; 151us; 53us; 153us; 54us; 156us; 55us; 158us; 48us; 161us; 56us; 164us; 48us; 171us; 48us; 199us; 57us; 203us; 58us; 205us; 59us; 257us; 60us; 263us; 61us; 270us; 62us; 7us; 65535us; 20us; 21us; 91us; 92us; 102us; 103us; 109us; 110us; 158us; 159us; 164us; 165us; 171us; 172us; 34us; 65535us; 12us; 16us; 14us; 16us; 18us; 16us; 81us; 190us; 86us; 190us; 120us; 118us; 125us; 16us; 127us; 128us; 134us; 135us; 163us; 119us; 169us; 170us; 177us; 155us; 179us; 155us; 183us; 16us; 185us; 186us; 188us; 182us; 191us; 16us; 194us; 190us; 197us; 16us; 201us; 196us; 207us; 118us; 211us; 190us; 218us; 219us; 224us; 225us; 226us; 16us; 230us; 190us; 233us; 234us; 235us; 16us; 238us; 239us; 240us; 182us; 250us; 196us; 254us; 16us; 260us; 16us; 267us; 268us; 3us; 65535us; 120us; 121us; 163us; 168us; 207us; 208us; 2us; 65535us; 123us; 124us; 148us; 149us; 1us; 65535us; 135us; 136us; 2us; 65535us; 177us; 177us; 179us; 177us; 2us; 65535us; 177us; 178us; 179us; 180us; 4us; 65535us; 142us; 143us; 144us; 145us; 149us; 150us; 245us; 246us; 2us; 65535us; 188us; 187us; 240us; 187us; 2us; 65535us; 188us; 189us; 240us; 241us; 5us; 65535us; 81us; 193us; 86us; 193us; 194us; 193us; 211us; 193us; 230us; 193us; 5us; 65535us; 81us; 82us; 86us; 87us; 194us; 195us; 211us; 212us; 230us; 231us; 2us; 65535us; 201us; 200us; 250us; 200us; 2us; 65535us; 201us; 202us; 250us; 251us; 3us; 65535us; 215us; 215us; 242us; 215us; 243us; 215us; 3us; 65535us; 215us; 216us; 242us; 245us; 243us; 244us; 1us; 65535us; 247us; 248us; 2us; 65535us; 0us; 238us; 272us; 238us; 2us; 65535us; 0us; 272us; 272us; 272us; 2us; 65535us; 0us; 2us; 272us; 273us; |]
let _fsyacc_sparseGotoTableRowOffsets = [|0us; 1us; 3us; 52us; 64us; 67us; 71us; 115us; 123us; 158us; 162us; 165us; 167us; 170us; 173us; 178us; 181us; 184us; 190us; 196us; 199us; 202us; 206us; 210us; 212us; 215us; 218us; |]
let _fsyacc_stateToProdIdxsTableElements = [| 1us; 0us; 1us; 0us; 1us; 1us; 1us; 1us; 1us; 2us; 2us; 2us; 39us; 2us; 2us; 48us; 1us; 3us; 2us; 3us; 38us; 2us; 3us; 47us; 1us; 4us; 1us; 5us; 1us; 6us; 1us; 6us; 1us; 6us; 1us; 6us; 1us; 7us; 2us; 8us; 9us; 1us; 9us; 1us; 9us; 1us; 11us; 1us; 11us; 1us; 11us; 1us; 11us; 4us; 12us; 28us; 30us; 31us; 18us; 12us; 13us; 14us; 15us; 16us; 17us; 18us; 19us; 20us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 32us; 33us; 1us; 12us; 18us; 13us; 13us; 14us; 15us; 16us; 17us; 18us; 19us; 20us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 32us; 33us; 18us; 13us; 14us; 14us; 15us; 16us; 17us; 18us; 19us; 20us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 32us; 33us; 18us; 13us; 14us; 15us; 15us; 16us; 17us; 18us; 19us; 20us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 32us; 33us; 18us; 13us; 14us; 15us; 16us; 16us; 17us; 18us; 19us; 20us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 32us; 33us; 18us; 13us; 14us; 15us; 16us; 17us; 17us; 18us; 19us; 20us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 32us; 33us; 18us; 13us; 14us; 15us; 16us; 17us; 18us; 18us; 19us; 20us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 32us; 33us; 18us; 13us; 14us; 15us; 16us; 17us; 18us; 19us; 19us; 20us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 32us; 33us; 18us; 13us; 14us; 15us; 16us; 17us; 18us; 19us; 20us; 20us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 32us; 33us; 18us; 13us; 14us; 15us; 16us; 17us; 18us; 19us; 20us; 21us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 32us; 33us; 18us; 13us; 14us; 15us; 16us; 17us; 18us; 19us; 20us; 21us; 22us; 22us; 23us; 24us; 25us; 26us; 27us; 32us; 33us; 18us; 13us; 14us; 15us; 16us; 17us; 18us; 19us; 20us; 21us; 22us; 23us; 23us; 24us; 25us; 26us; 27us; 32us; 33us; 18us; 13us; 14us; 15us; 16us; 17us; 18us; 19us; 20us; 21us; 22us; 23us; 24us; 24us; 25us; 26us; 27us; 32us; 33us; 18us; 13us; 14us; 15us; 16us; 17us; 18us; 19us; 20us; 21us; 22us; 23us; 24us; 25us; 25us; 26us; 27us; 32us; 33us; 18us; 13us; 14us; 15us; 16us; 17us; 18us; 19us; 20us; 21us; 22us; 23us; 24us; 25us; 26us; 26us; 27us; 32us; 33us; 18us; 13us; 14us; 15us; 16us; 17us; 18us; 19us; 20us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 27us; 32us; 33us; 18us; 13us; 14us; 15us; 16us; 17us; 18us; 19us; 20us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 28us; 32us; 33us; 18us; 13us; 14us; 15us; 16us; 17us; 18us; 19us; 20us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 29us; 32us; 33us; 18us; 13us; 14us; 15us; 16us; 17us; 18us; 19us; 20us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 30us; 32us; 33us; 18us; 13us; 14us; 15us; 16us; 17us; 18us; 19us; 20us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 31us; 32us; 33us; 18us; 13us; 14us; 15us; 16us; 17us; 18us; 19us; 20us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 32us; 33us; 33us; 18us; 13us; 14us; 15us; 16us; 17us; 18us; 19us; 20us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 32us; 33us; 36us; 19us; 13us; 14us; 15us; 16us; 17us; 18us; 19us; 20us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 32us; 33us; 45us; 46us; 18us; 13us; 14us; 15us; 16us; 17us; 18us; 19us; 20us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 32us; 33us; 58us; 18us; 13us; 14us; 15us; 16us; 17us; 18us; 19us; 20us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 32us; 33us; 64us; 19us; 13us; 14us; 15us; 16us; 17us; 18us; 19us; 20us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 32us; 33us; 65us; 66us; 18us; 13us; 14us; 15us; 16us; 17us; 18us; 19us; 20us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 32us; 33us; 67us; 18us; 13us; 14us; 15us; 16us; 17us; 18us; 19us; 20us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 32us; 33us; 68us; 18us; 13us; 14us; 15us; 16us; 17us; 18us; 19us; 20us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 32us; 33us; 69us; 18us; 13us; 14us; 15us; 16us; 17us; 18us; 19us; 20us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 32us; 33us; 70us; 18us; 13us; 14us; 15us; 16us; 17us; 18us; 19us; 20us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 32us; 33us; 71us; 18us; 13us; 14us; 15us; 16us; 17us; 18us; 19us; 20us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 32us; 33us; 88us; 18us; 13us; 14us; 15us; 16us; 17us; 18us; 19us; 20us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 32us; 33us; 92us; 18us; 13us; 14us; 15us; 16us; 17us; 18us; 19us; 20us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 32us; 33us; 93us; 18us; 13us; 14us; 15us; 16us; 17us; 18us; 19us; 20us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 32us; 33us; 109us; 18us; 13us; 14us; 15us; 16us; 17us; 18us; 19us; 20us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 32us; 33us; 110us; 18us; 13us; 14us; 15us; 16us; 17us; 18us; 19us; 20us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 32us; 33us; 114us; 1us; 13us; 1us; 14us; 1us; 15us; 1us; 16us; 1us; 17us; 1us; 18us; 1us; 19us; 1us; 20us; 1us; 21us; 1us; 22us; 1us; 23us; 1us; 24us; 1us; 25us; 1us; 26us; 1us; 27us; 1us; 28us; 1us; 28us; 1us; 29us; 1us; 30us; 1us; 30us; 1us; 30us; 1us; 30us; 1us; 30us; 1us; 31us; 1us; 31us; 1us; 31us; 1us; 31us; 1us; 31us; 2us; 32us; 33us; 2us; 32us; 33us; 1us; 32us; 1us; 33us; 1us; 33us; 1us; 34us; 1us; 35us; 1us; 36us; 1us; 36us; 1us; 36us; 1us; 37us; 1us; 37us; 1us; 37us; 1us; 37us; 1us; 40us; 1us; 41us; 1us; 42us; 1us; 43us; 1us; 46us; 1us; 46us; 1us; 47us; 1us; 48us; 1us; 49us; 1us; 50us; 1us; 51us; 1us; 52us; 1us; 53us; 2us; 55us; 56us; 3us; 55us; 56us; 72us; 1us; 56us; 1us; 56us; 1us; 58us; 1us; 58us; 1us; 58us; 1us; 59us; 1us; 59us; 1us; 60us; 1us; 60us; 1us; 61us; 1us; 61us; 1us; 62us; 1us; 62us; 1us; 62us; 2us; 63us; 64us; 2us; 63us; 64us; 2us; 63us; 64us; 1us; 63us; 1us; 64us; 1us; 64us; 2us; 65us; 66us; 2us; 65us; 66us; 2us; 65us; 66us; 2us; 65us; 66us; 1us; 66us; 1us; 66us; 1us; 67us; 1us; 67us; 1us; 67us; 1us; 67us; 1us; 67us; 1us; 68us; 1us; 68us; 1us; 69us; 1us; 69us; 2us; 70us; 71us; 1us; 70us; 1us; 70us; 1us; 71us; 1us; 71us; 1us; 71us; 1us; 71us; 1us; 71us; 2us; 72us; 73us; 1us; 72us; 1us; 72us; 1us; 72us; 1us; 72us; 1us; 73us; 1us; 73us; 1us; 73us; 1us; 73us; 1us; 73us; 1us; 73us; 1us; 73us; 1us; 74us; 1us; 74us; 1us; 76us; 1us; 76us; 1us; 77us; 1us; 77us; 1us; 77us; 2us; 78us; 79us; 1us; 78us; 1us; 78us; 1us; 79us; 1us; 79us; 2us; 81us; 82us; 1us; 82us; 1us; 82us; 1us; 83us; 1us; 83us; 1us; 83us; 2us; 85us; 86us; 1us; 86us; 1us; 86us; 2us; 87us; 88us; 2us; 87us; 88us; 2us; 87us; 88us; 1us; 88us; 2us; 90us; 91us; 1us; 91us; 1us; 91us; 1us; 92us; 1us; 92us; 1us; 93us; 1us; 93us; 1us; 94us; 1us; 94us; 1us; 94us; 2us; 95us; 96us; 2us; 95us; 96us; 2us; 95us; 96us; 2us; 95us; 96us; 1us; 96us; 1us; 98us; 1us; 98us; 1us; 100us; 1us; 100us; 1us; 100us; 1us; 100us; 1us; 100us; 1us; 101us; 1us; 102us; 2us; 103us; 104us; 2us; 103us; 104us; 1us; 103us; 1us; 103us; 1us; 103us; 1us; 104us; 1us; 104us; 1us; 104us; 1us; 104us; 1us; 105us; 1us; 105us; 1us; 105us; 1us; 105us; 1us; 105us; 3us; 106us; 107us; 108us; 3us; 106us; 107us; 108us; 3us; 106us; 107us; 108us; 3us; 106us; 107us; 108us; 3us; 106us; 107us; 108us; 1us; 106us; 1us; 106us; 2us; 107us; 108us; 1us; 108us; 4us; 109us; 110us; 111us; 112us; 4us; 109us; 110us; 111us; 112us; 4us; 109us; 110us; 111us; 112us; 4us; 109us; 110us; 111us; 112us; 4us; 109us; 110us; 111us; 112us; 4us; 109us; 110us; 111us; 112us; 4us; 109us; 110us; 111us; 112us; 4us; 109us; 110us; 111us; 112us; 2us; 109us; 111us; 2us; 109us; 111us; 1us; 109us; 1us; 109us; 2us; 110us; 112us; 2us; 110us; 112us; 2us; 110us; 112us; 2us; 110us; 112us; 1us; 110us; 1us; 110us; 1us; 111us; 1us; 112us; 1us; 113us; 1us; 113us; 1us; 113us; 1us; 114us; 1us; 114us; 1us; 116us; 1us; 116us; |]
let _fsyacc_stateToProdIdxsTableRowOffsets = [|0us; 2us; 4us; 6us; 8us; 10us; 13us; 16us; 18us; 21us; 24us; 26us; 28us; 30us; 32us; 34us; 36us; 38us; 41us; 43us; 45us; 47us; 49us; 51us; 53us; 58us; 77us; 79us; 98us; 117us; 136us; 155us; 174us; 193us; 212us; 231us; 250us; 269us; 288us; 307us; 326us; 345us; 364us; 383us; 402us; 421us; 440us; 459us; 478us; 498us; 517us; 536us; 556us; 575us; 594us; 613us; 632us; 651us; 670us; 689us; 708us; 727us; 746us; 765us; 767us; 769us; 771us; 773us; 775us; 777us; 779us; 781us; 783us; 785us; 787us; 789us; 791us; 793us; 795us; 797us; 799us; 801us; 803us; 805us; 807us; 809us; 811us; 813us; 815us; 817us; 819us; 821us; 824us; 827us; 829us; 831us; 833us; 835us; 837us; 839us; 841us; 843us; 845us; 847us; 849us; 851us; 853us; 855us; 857us; 859us; 861us; 863us; 865us; 867us; 869us; 871us; 873us; 875us; 877us; 880us; 884us; 886us; 888us; 890us; 892us; 894us; 896us; 898us; 900us; 902us; 904us; 906us; 908us; 910us; 912us; 915us; 918us; 921us; 923us; 925us; 927us; 930us; 933us; 936us; 939us; 941us; 943us; 945us; 947us; 949us; 951us; 953us; 955us; 957us; 959us; 961us; 964us; 966us; 968us; 970us; 972us; 974us; 976us; 978us; 981us; 983us; 985us; 987us; 989us; 991us; 993us; 995us; 997us; 999us; 1001us; 1003us; 1005us; 1007us; 1009us; 1011us; 1013us; 1015us; 1017us; 1020us; 1022us; 1024us; 1026us; 1028us; 1031us; 1033us; 1035us; 1037us; 1039us; 1041us; 1044us; 1046us; 1048us; 1051us; 1054us; 1057us; 1059us; 1062us; 1064us; 1066us; 1068us; 1070us; 1072us; 1074us; 1076us; 1078us; 1080us; 1083us; 1086us; 1089us; 1092us; 1094us; 1096us; 1098us; 1100us; 1102us; 1104us; 1106us; 1108us; 1110us; 1112us; 1115us; 1118us; 1120us; 1122us; 1124us; 1126us; 1128us; 1130us; 1132us; 1134us; 1136us; 1138us; 1140us; 1142us; 1146us; 1150us; 1154us; 1158us; 1162us; 1164us; 1166us; 1169us; 1171us; 1176us; 1181us; 1186us; 1191us; 1196us; 1201us; 1206us; 1211us; 1214us; 1217us; 1219us; 1221us; 1224us; 1227us; 1230us; 1233us; 1235us; 1237us; 1239us; 1241us; 1243us; 1245us; 1247us; 1249us; 1251us; 1253us; |]
let _fsyacc_action_rows = 274
let _fsyacc_actionTableElements = [|7us; 16499us; 23us; 233us; 24us; 247us; 26us; 267us; 27us; 270us; 28us; 222us; 29us; 223us; 79us; 224us; 0us; 49152us; 1us; 32768us; 0us; 3us; 0us; 16385us; 0us; 16386us; 22us; 16386us; 13us; 16423us; 14us; 16423us; 37us; 16423us; 40us; 16423us; 44us; 16423us; 47us; 16423us; 51us; 16423us; 52us; 16423us; 53us; 16423us; 54us; 16423us; 55us; 16423us; 56us; 16423us; 61us; 16423us; 64us; 16423us; 65us; 16423us; 66us; 16423us; 67us; 16423us; 69us; 16423us; 70us; 16423us; 71us; 16423us; 81us; 16423us; 82us; 16423us; 3us; 16386us; 37us; 16432us; 69us; 16432us; 70us; 16432us; 0us; 16387us; 22us; 16387us; 13us; 16422us; 14us; 16422us; 37us; 16422us; 40us; 16422us; 44us; 16422us; 47us; 16422us; 51us; 16422us; 52us; 16422us; 53us; 16422us; 54us; 16422us; 55us; 16422us; 56us; 16422us; 61us; 16422us; 64us; 16422us; 65us; 16422us; 66us; 16422us; 67us; 16422us; 69us; 16422us; 70us; 16422us; 71us; 16422us; 81us; 16422us; 82us; 16422us; 3us; 16387us; 37us; 16431us; 69us; 16431us; 70us; 16431us; 0us; 16388us; 0us; 16389us; 10us; 32768us; 32us; 10us; 33us; 11us; 35us; 117us; 70us; 12us; 83us; 116us; 84us; 115us; 85us; 114us; 86us; 113us; 87us; 112us; 88us; 111us; 1us; 32768us; 71us; 14us; 10us; 32768us; 32us; 10us; 33us; 11us; 35us; 117us; 70us; 12us; 83us; 116us; 84us; 115us; 85us; 114us; 86us; 113us; 87us; 112us; 88us; 111us; 0us; 16390us; 0us; 16391us; 1us; 16392us; 61us; 18us; 10us; 32768us; 32us; 10us; 33us; 11us; 35us; 117us; 70us; 12us; 83us; 116us; 84us; 115us; 85us; 114us; 86us; 113us; 87us; 112us; 88us; 111us; 0us; 16393us; 11us; 16428us; 11us; 98us; 59us; 80us; 68us; 24us; 73us; 97us; 74us; 96us; 83us; 108us; 84us; 107us; 85us; 106us; 86us; 105us; 87us; 5us; 88us; 8us; 1us; 32768us; 81us; 22us; 1us; 16394us; 80us; 20us; 0us; 16395us; 14us; 32768us; 9us; 81us; 10us; 86us; 11us; 98us; 53us; 78us; 59us; 80us; 68us; 24us; 73us; 97us; 74us; 96us; 83us; 108us; 84us; 107us; 85us; 106us; 86us; 105us; 87us; 5us; 88us; 8us; 17us; 32768us; 13us; 64us; 14us; 63us; 40us; 76us; 44us; 77us; 47us; 66us; 51us; 65us; 52us; 73us; 53us; 74us; 54us; 75us; 55us; 69us; 56us; 70us; 64us; 71us; 65us; 72us; 66us; 67us; 67us; 68us; 69us; 26us; 70us; 91us; 0us; 16396us; 15us; 16397us; 13us; 64us; 40us; 76us; 44us; 77us; 47us; 66us; 51us; 65us; 52us; 73us; 53us; 74us; 54us; 75us; 55us; 69us; 56us; 70us; 64us; 71us; 65us; 72us; 66us; 67us; 67us; 68us; 70us; 91us; 15us; 16398us; 13us; 64us; 40us; 76us; 44us; 77us; 47us; 66us; 51us; 65us; 52us; 73us; 53us; 74us; 54us; 75us; 55us; 69us; 56us; 70us; 64us; 71us; 65us; 72us; 66us; 67us; 67us; 68us; 70us; 91us; 12us; 16399us; 40us; 76us; 44us; 77us; 52us; 73us; 53us; 74us; 54us; 75us; 55us; 69us; 56us; 70us; 64us; 71us; 65us; 72us; 66us; 67us; 67us; 68us; 70us; 91us; 12us; 16400us; 40us; 76us; 44us; 77us; 52us; 73us; 53us; 74us; 54us; 75us; 55us; 69us; 56us; 70us; 64us; 71us; 65us; 72us; 66us; 67us; 67us; 68us; 70us; 91us; 6us; 16401us; 40us; 76us; 44us; 77us; 52us; 73us; 53us; 74us; 54us; 75us; 70us; 91us; 6us; 16402us; 40us; 76us; 44us; 77us; 52us; 73us; 53us; 74us; 54us; 75us; 70us; 91us; 6us; 16403us; 40us; 76us; 44us; 77us; 52us; 73us; 53us; 74us; 54us; 75us; 70us; 91us; 6us; 16404us; 40us; 76us; 44us; 77us; 52us; 73us; 53us; 74us; 54us; 75us; 70us; 91us; 6us; 16405us; 40us; 76us; 44us; 77us; 52us; 73us; 53us; 74us; 54us; 75us; 70us; 91us; 6us; 16406us; 40us; 76us; 44us; 77us; 52us; 73us; 53us; 74us; 54us; 75us; 70us; 91us; 4us; 16407us; 40us; 76us; 44us; 77us; 54us; 75us; 70us; 91us; 4us; 16408us; 40us; 76us; 44us; 77us; 54us; 75us; 70us; 91us; 1us; 16409us; 70us; 91us; 1us; 16410us; 70us; 91us; 1us; 16411us; 70us; 91us; 17us; 32768us; 13us; 64us; 14us; 63us; 40us; 76us; 44us; 77us; 47us; 66us; 51us; 65us; 52us; 73us; 53us; 74us; 54us; 75us; 55us; 69us; 56us; 70us; 64us; 71us; 65us; 72us; 66us; 67us; 67us; 68us; 69us; 79us; 70us; 91us; 1us; 16413us; 70us; 91us; 17us; 32768us; 13us; 64us; 14us; 63us; 40us; 76us; 44us; 77us; 47us; 66us; 51us; 65us; 52us; 73us; 53us; 74us; 54us; 75us; 55us; 69us; 56us; 70us; 64us; 71us; 65us; 72us; 66us; 67us; 67us; 68us; 69us; 85us; 70us; 91us; 17us; 32768us; 13us; 64us; 14us; 63us; 40us; 76us; 44us; 77us; 47us; 66us; 51us; 65us; 52us; 73us; 53us; 74us; 54us; 75us; 55us; 69us; 56us; 70us; 64us; 71us; 65us; 72us; 66us; 67us; 67us; 68us; 69us; 90us; 70us; 91us; 17us; 32768us; 13us; 64us; 14us; 63us; 40us; 76us; 44us; 77us; 47us; 66us; 51us; 65us; 52us; 73us; 53us; 74us; 54us; 75us; 55us; 69us; 56us; 70us; 64us; 71us; 65us; 72us; 66us; 67us; 67us; 68us; 70us; 91us; 71us; 95us; 17us; 32768us; 13us; 64us; 14us; 63us; 40us; 76us; 44us; 77us; 47us; 66us; 51us; 65us; 52us; 73us; 53us; 74us; 54us; 75us; 55us; 69us; 56us; 70us; 64us; 71us; 65us; 72us; 66us; 67us; 67us; 68us; 69us; 100us; 70us; 91us; 17us; 16429us; 13us; 64us; 14us; 63us; 40us; 76us; 44us; 77us; 47us; 66us; 51us; 65us; 52us; 73us; 53us; 74us; 54us; 75us; 55us; 69us; 56us; 70us; 61us; 109us; 64us; 71us; 65us; 72us; 66us; 67us; 67us; 68us; 70us; 91us; 17us; 32768us; 13us; 64us; 14us; 63us; 40us; 76us; 44us; 77us; 47us; 66us; 51us; 65us; 52us; 73us; 53us; 74us; 54us; 75us; 55us; 69us; 56us; 70us; 64us; 71us; 65us; 72us; 66us; 67us; 67us; 68us; 70us; 91us; 82us; 123us; 17us; 32768us; 13us; 64us; 14us; 63us; 40us; 76us; 44us; 77us; 47us; 66us; 51us; 65us; 52us; 73us; 53us; 74us; 54us; 75us; 55us; 69us; 56us; 70us; 64us; 71us; 65us; 72us; 66us; 67us; 67us; 68us; 70us; 91us; 82us; 139us; 17us; 32768us; 13us; 64us; 14us; 63us; 40us; 76us; 44us; 77us; 47us; 66us; 51us; 65us; 52us; 73us; 53us; 74us; 54us; 75us; 55us; 69us; 56us; 70us; 64us; 71us; 65us; 72us; 66us; 67us; 67us; 68us; 69us; 142us; 70us; 91us; 17us; 32768us; 13us; 64us; 14us; 63us; 40us; 76us; 44us; 77us; 47us; 66us; 51us; 65us; 52us; 73us; 53us; 74us; 54us; 75us; 55us; 69us; 56us; 70us; 64us; 71us; 65us; 72us; 66us; 67us; 67us; 68us; 69us; 148us; 70us; 91us; 17us; 32768us; 13us; 64us; 14us; 63us; 40us; 76us; 44us; 77us; 47us; 66us; 51us; 65us; 52us; 73us; 53us; 74us; 54us; 75us; 55us; 69us; 56us; 70us; 64us; 71us; 65us; 72us; 66us; 67us; 67us; 68us; 70us; 91us; 82us; 152us; 17us; 32768us; 13us; 64us; 14us; 63us; 40us; 76us; 44us; 77us; 47us; 66us; 51us; 65us; 52us; 73us; 53us; 74us; 54us; 75us; 55us; 69us; 56us; 70us; 64us; 71us; 65us; 72us; 66us; 67us; 67us; 68us; 70us; 91us; 82us; 154us; 17us; 32768us; 13us; 64us; 14us; 63us; 40us; 76us; 44us; 77us; 47us; 66us; 51us; 65us; 52us; 73us; 53us; 74us; 54us; 75us; 55us; 69us; 56us; 70us; 64us; 71us; 65us; 72us; 66us; 67us; 67us; 68us; 70us; 91us; 82us; 157us; 17us; 32768us; 13us; 64us; 14us; 63us; 40us; 76us; 44us; 77us; 47us; 66us; 51us; 65us; 52us; 73us; 53us; 74us; 54us; 75us; 55us; 69us; 56us; 70us; 64us; 71us; 65us; 72us; 66us; 67us; 67us; 68us; 70us; 91us; 82us; 162us; 16us; 16472us; 13us; 64us; 14us; 63us; 40us; 76us; 44us; 77us; 47us; 66us; 51us; 65us; 52us; 73us; 53us; 74us; 54us; 75us; 55us; 69us; 56us; 70us; 64us; 71us; 65us; 72us; 66us; 67us; 67us; 68us; 70us; 91us; 17us; 32768us; 13us; 64us; 14us; 63us; 40us; 76us; 44us; 77us; 47us; 66us; 51us; 65us; 52us; 73us; 53us; 74us; 54us; 75us; 55us; 69us; 56us; 70us; 64us; 71us; 65us; 72us; 66us; 67us; 67us; 68us; 70us; 91us; 82us; 204us; 17us; 32768us; 13us; 64us; 14us; 63us; 40us; 76us; 44us; 77us; 47us; 66us; 51us; 65us; 52us; 73us; 53us; 74us; 54us; 75us; 55us; 69us; 56us; 70us; 64us; 71us; 65us; 72us; 66us; 67us; 67us; 68us; 70us; 91us; 82us; 206us; 17us; 32768us; 13us; 64us; 14us; 63us; 40us; 76us; 44us; 77us; 47us; 66us; 51us; 65us; 52us; 73us; 53us; 74us; 54us; 75us; 55us; 69us; 56us; 70us; 64us; 71us; 65us; 72us; 66us; 67us; 67us; 68us; 70us; 91us; 81us; 258us; 17us; 32768us; 13us; 64us; 14us; 63us; 40us; 76us; 44us; 77us; 47us; 66us; 51us; 65us; 52us; 73us; 53us; 74us; 54us; 75us; 55us; 69us; 56us; 70us; 64us; 71us; 65us; 72us; 66us; 67us; 67us; 68us; 70us; 91us; 81us; 264us; 17us; 32768us; 13us; 64us; 14us; 63us; 40us; 76us; 44us; 77us; 47us; 66us; 51us; 65us; 52us; 73us; 53us; 74us; 54us; 75us; 55us; 69us; 56us; 70us; 64us; 71us; 65us; 72us; 66us; 67us; 67us; 68us; 70us; 91us; 82us; 271us; 11us; 32768us; 11us; 98us; 59us; 80us; 68us; 24us; 73us; 97us; 74us; 96us; 83us; 108us; 84us; 107us; 85us; 106us; 86us; 105us; 87us; 5us; 88us; 8us; 11us; 32768us; 11us; 98us; 59us; 80us; 68us; 24us; 73us; 97us; 74us; 96us; 83us; 108us; 84us; 107us; 85us; 106us; 86us; 105us; 87us; 5us; 88us; 8us; 11us; 32768us; 11us; 98us; 59us; 80us; 68us; 24us; 73us; 97us; 74us; 96us; 83us; 108us; 84us; 107us; 85us; 106us; 86us; 105us; 87us; 5us; 88us; 8us; 11us; 32768us; 11us; 98us; 59us; 80us; 68us; 24us; 73us; 97us; 74us; 96us; 83us; 108us; 84us; 107us; 85us; 106us; 86us; 105us; 87us; 5us; 88us; 8us; 11us; 32768us; 11us; 98us; 59us; 80us; 68us; 24us; 73us; 97us; 74us; 96us; 83us; 108us; 84us; 107us; 85us; 106us; 86us; 105us; 87us; 5us; 88us; 8us; 11us; 32768us; 11us; 98us; 59us; 80us; 68us; 24us; 73us; 97us; 74us; 96us; 83us; 108us; 84us; 107us; 85us; 106us; 86us; 105us; 87us; 5us; 88us; 8us; 11us; 32768us; 11us; 98us; 59us; 80us; 68us; 24us; 73us; 97us; 74us; 96us; 83us; 108us; 84us; 107us; 85us; 106us; 86us; 105us; 87us; 5us; 88us; 8us; 11us; 32768us; 11us; 98us; 59us; 80us; 68us; 24us; 73us; 97us; 74us; 96us; 83us; 108us; 84us; 107us; 85us; 106us; 86us; 105us; 87us; 5us; 88us; 8us; 11us; 32768us; 11us; 98us; 59us; 80us; 68us; 24us; 73us; 97us; 74us; 96us; 83us; 108us; 84us; 107us; 85us; 106us; 86us; 105us; 87us; 5us; 88us; 8us; 11us; 32768us; 11us; 98us; 59us; 80us; 68us; 24us; 73us; 97us; 74us; 96us; 83us; 108us; 84us; 107us; 85us; 106us; 86us; 105us; 87us; 5us; 88us; 8us; 11us; 32768us; 11us; 98us; 59us; 80us; 68us; 24us; 73us; 97us; 74us; 96us; 83us; 108us; 84us; 107us; 85us; 106us; 86us; 105us; 87us; 5us; 88us; 8us; 11us; 32768us; 11us; 98us; 59us; 80us; 68us; 24us; 73us; 97us; 74us; 96us; 83us; 108us; 84us; 107us; 85us; 106us; 86us; 105us; 87us; 5us; 88us; 8us; 11us; 32768us; 11us; 98us; 59us; 80us; 68us; 24us; 73us; 97us; 74us; 96us; 83us; 108us; 84us; 107us; 85us; 106us; 86us; 105us; 87us; 5us; 88us; 8us; 11us; 32768us; 11us; 98us; 59us; 80us; 68us; 24us; 73us; 97us; 74us; 96us; 83us; 108us; 84us; 107us; 85us; 106us; 86us; 105us; 87us; 5us; 88us; 8us; 11us; 32768us; 11us; 98us; 59us; 80us; 68us; 24us; 73us; 97us; 74us; 96us; 83us; 108us; 84us; 107us; 85us; 106us; 86us; 105us; 87us; 5us; 88us; 8us; 11us; 32768us; 11us; 98us; 59us; 80us; 68us; 24us; 73us; 97us; 74us; 96us; 83us; 108us; 84us; 107us; 85us; 106us; 86us; 105us; 87us; 5us; 88us; 8us; 0us; 16412us; 11us; 32768us; 11us; 98us; 59us; 80us; 68us; 24us; 73us; 97us; 74us; 96us; 83us; 108us; 84us; 107us; 85us; 106us; 86us; 105us; 87us; 5us; 88us; 8us; 7us; 16468us; 35us; 117us; 83us; 116us; 84us; 115us; 85us; 114us; 86us; 113us; 87us; 112us; 88us; 111us; 1us; 32768us; 12us; 83us; 1us; 16394us; 80us; 20us; 11us; 32768us; 11us; 98us; 59us; 80us; 68us; 24us; 73us; 97us; 74us; 96us; 83us; 108us; 84us; 107us; 85us; 106us; 86us; 105us; 87us; 5us; 88us; 8us; 0us; 16414us; 7us; 16468us; 35us; 117us; 83us; 116us; 84us; 115us; 85us; 114us; 86us; 113us; 87us; 112us; 88us; 111us; 1us; 32768us; 12us; 88us; 1us; 16394us; 80us; 20us; 11us; 32768us; 11us; 98us; 59us; 80us; 68us; 24us; 73us; 97us; 74us; 96us; 83us; 108us; 84us; 107us; 85us; 106us; 86us; 105us; 87us; 5us; 88us; 8us; 0us; 16415us; 11us; 16428us; 11us; 98us; 59us; 80us; 68us; 24us; 73us; 97us; 74us; 96us; 83us; 108us; 84us; 107us; 85us; 106us; 86us; 105us; 87us; 5us; 88us; 8us; 2us; 32768us; 37us; 94us; 71us; 93us; 0us; 16416us; 11us; 32768us; 11us; 98us; 59us; 80us; 68us; 24us; 73us; 97us; 74us; 96us; 83us; 108us; 84us; 107us; 85us; 106us; 86us; 105us; 87us; 5us; 88us; 8us; 0us; 16417us; 0us; 16418us; 0us; 16419us; 1us; 32768us; 68us; 99us; 11us; 32768us; 11us; 98us; 59us; 80us; 68us; 24us; 73us; 97us; 74us; 96us; 83us; 108us; 84us; 107us; 85us; 106us; 86us; 105us; 87us; 5us; 88us; 8us; 0us; 16420us; 1us; 32768us; 68us; 102us; 11us; 16428us; 11us; 98us; 59us; 80us; 68us; 24us; 73us; 97us; 74us; 96us; 83us; 108us; 84us; 107us; 85us; 106us; 86us; 105us; 87us; 5us; 88us; 8us; 1us; 32768us; 69us; 104us; 0us; 16421us; 0us; 16424us; 0us; 16425us; 0us; 16426us; 0us; 16427us; 11us; 16428us; 11us; 98us; 59us; 80us; 68us; 24us; 73us; 97us; 74us; 96us; 83us; 108us; 84us; 107us; 85us; 106us; 86us; 105us; 87us; 5us; 88us; 8us; 0us; 16430us; 0us; 16431us; 0us; 16432us; 0us; 16433us; 0us; 16434us; 0us; 16435us; 0us; 16436us; 0us; 16437us; 1us; 16439us; 61us; 120us; 2us; 16439us; 61us; 120us; 68us; 164us; 7us; 16438us; 35us; 117us; 83us; 116us; 84us; 115us; 85us; 114us; 86us; 113us; 87us; 112us; 88us; 111us; 0us; 16440us; 11us; 32768us; 11us; 98us; 59us; 80us; 68us; 24us; 73us; 97us; 74us; 96us; 83us; 108us; 84us; 107us; 85us; 106us; 86us; 105us; 87us; 5us; 88us; 8us; 1us; 16441us; 18us; 122us; 0us; 16442us; 10us; 32768us; 32us; 10us; 33us; 11us; 35us; 117us; 70us; 12us; 83us; 116us; 84us; 115us; 85us; 114us; 86us; 113us; 87us; 112us; 88us; 111us; 0us; 16443us; 7us; 32768us; 35us; 117us; 83us; 116us; 84us; 115us; 85us; 114us; 86us; 113us; 87us; 112us; 88us; 111us; 0us; 16444us; 1us; 32768us; 72us; 130us; 0us; 16445us; 2us; 32768us; 87us; 4us; 88us; 7us; 1us; 32768us; 82us; 133us; 0us; 16446us; 7us; 32768us; 35us; 117us; 83us; 116us; 84us; 115us; 85us; 114us; 86us; 113us; 87us; 112us; 88us; 111us; 2us; 32768us; 42us; 127us; 72us; 125us; 2us; 32768us; 37us; 138us; 82us; 137us; 0us; 16447us; 11us; 32768us; 11us; 98us; 59us; 80us; 68us; 24us; 73us; 97us; 74us; 96us; 83us; 108us; 84us; 107us; 85us; 106us; 86us; 105us; 87us; 5us; 88us; 8us; 0us; 16448us; 1us; 32768us; 68us; 141us; 11us; 32768us; 11us; 98us; 59us; 80us; 68us; 24us; 73us; 97us; 74us; 96us; 83us; 108us; 84us; 107us; 85us; 106us; 86us; 105us; 87us; 5us; 88us; 8us; 1us; 32768us; 80us; 179us; 1us; 16449us; 76us; 144us; 1us; 32768us; 80us; 179us; 0us; 16450us; 1us; 32768us; 68us; 147us; 11us; 32768us; 11us; 98us; 59us; 80us; 68us; 24us; 73us; 97us; 74us; 96us; 83us; 108us; 84us; 107us; 85us; 106us; 86us; 105us; 87us; 5us; 88us; 8us; 1us; 16441us; 18us; 122us; 1us; 32768us; 80us; 179us; 0us; 16451us; 11us; 32768us; 11us; 98us; 59us; 80us; 68us; 24us; 73us; 97us; 74us; 96us; 83us; 108us; 84us; 107us; 85us; 106us; 86us; 105us; 87us; 5us; 88us; 8us; 0us; 16452us; 11us; 32768us; 11us; 98us; 59us; 80us; 68us; 24us; 73us; 97us; 74us; 96us; 83us; 108us; 84us; 107us; 85us; 106us; 86us; 105us; 87us; 5us; 88us; 8us; 0us; 16453us; 2us; 32768us; 37us; 156us; 70us; 158us; 11us; 32768us; 11us; 98us; 59us; 80us; 68us; 24us; 73us; 97us; 74us; 96us; 83us; 108us; 84us; 107us; 85us; 106us; 86us; 105us; 87us; 5us; 88us; 8us; 0us; 16454us; 11us; 16428us; 11us; 98us; 59us; 80us; 68us; 24us; 73us; 97us; 74us; 96us; 83us; 108us; 84us; 107us; 85us; 106us; 86us; 105us; 87us; 5us; 88us; 8us; 1us; 32768us; 71us; 160us; 1us; 32768us; 37us; 161us; 11us; 32768us; 11us; 98us; 59us; 80us; 68us; 24us; 73us; 97us; 74us; 96us; 83us; 108us; 84us; 107us; 85us; 106us; 86us; 105us; 87us; 5us; 88us; 8us; 0us; 16455us; 7us; 16438us; 35us; 117us; 83us; 116us; 84us; 115us; 85us; 114us; 86us; 113us; 87us; 112us; 88us; 111us; 11us; 16428us; 11us; 98us; 59us; 80us; 68us; 24us; 73us; 97us; 74us; 96us; 83us; 108us; 84us; 107us; 85us; 106us; 86us; 105us; 87us; 5us; 88us; 8us; 1us; 32768us; 69us; 166us; 1us; 32768us; 82us; 167us; 0us; 16456us; 1us; 32768us; 37us; 169us; 7us; 32768us; 35us; 117us; 83us; 116us; 84us; 115us; 85us; 114us; 86us; 113us; 87us; 112us; 88us; 111us; 1us; 32768us; 68us; 171us; 11us; 16428us; 11us; 98us; 59us; 80us; 68us; 24us; 73us; 97us; 74us; 96us; 83us; 108us; 84us; 107us; 85us; 106us; 86us; 105us; 87us; 5us; 88us; 8us; 1us; 32768us; 69us; 173us; 1us; 32768us; 82us; 174us; 0us; 16457us; 1us; 32768us; 82us; 176us; 0us; 16458us; 15us; 16459us; 19us; 151us; 20us; 153us; 21us; 131us; 22us; 163us; 35us; 117us; 75us; 140us; 77us; 146us; 78us; 175us; 79us; 134us; 83us; 116us; 84us; 115us; 85us; 114us; 86us; 113us; 87us; 6us; 88us; 9us; 0us; 16460us; 15us; 16459us; 19us; 151us; 20us; 153us; 21us; 131us; 22us; 163us; 35us; 117us; 75us; 140us; 77us; 146us; 78us; 175us; 79us; 134us; 83us; 116us; 84us; 115us; 85us; 114us; 86us; 113us; 87us; 6us; 88us; 9us; 1us; 32768us; 81us; 181us; 0us; 16461us; 2us; 32768us; 42us; 185us; 72us; 183us; 10us; 32768us; 32us; 10us; 33us; 11us; 35us; 117us; 70us; 12us; 83us; 116us; 84us; 115us; 85us; 114us; 86us; 113us; 87us; 112us; 88us; 111us; 0us; 16462us; 7us; 32768us; 35us; 117us; 83us; 116us; 84us; 115us; 85us; 114us; 86us; 113us; 87us; 112us; 88us; 111us; 0us; 16463us; 1us; 16465us; 61us; 188us; 7us; 16464us; 35us; 117us; 83us; 116us; 84us; 115us; 85us; 114us; 86us; 113us; 87us; 112us; 88us; 111us; 0us; 16466us; 1us; 32768us; 72us; 191us; 10us; 32768us; 32us; 10us; 33us; 11us; 35us; 117us; 70us; 12us; 83us; 116us; 84us; 115us; 85us; 114us; 86us; 113us; 87us; 112us; 88us; 111us; 0us; 16467us; 1us; 16469us; 61us; 194us; 7us; 16468us; 35us; 117us; 83us; 116us; 84us; 115us; 85us; 114us; 86us; 113us; 87us; 112us; 88us; 111us; 0us; 16470us; 1us; 32768us; 72us; 197us; 10us; 32768us; 32us; 10us; 33us; 11us; 35us; 117us; 70us; 12us; 83us; 116us; 84us; 115us; 85us; 114us; 86us; 113us; 87us; 112us; 88us; 111us; 1us; 16471us; 37us; 199us; 11us; 32768us; 11us; 98us; 59us; 80us; 68us; 24us; 73us; 97us; 74us; 96us; 83us; 108us; 84us; 107us; 85us; 106us; 86us; 105us; 87us; 5us; 88us; 8us; 1us; 16474us; 61us; 201us; 7us; 16473us; 35us; 117us; 83us; 116us; 84us; 115us; 85us; 114us; 86us; 113us; 87us; 112us; 88us; 111us; 0us; 16475us; 11us; 32768us; 11us; 98us; 59us; 80us; 68us; 24us; 73us; 97us; 74us; 96us; 83us; 108us; 84us; 107us; 85us; 106us; 86us; 105us; 87us; 5us; 88us; 8us; 0us; 16476us; 11us; 32768us; 11us; 98us; 59us; 80us; 68us; 24us; 73us; 97us; 74us; 96us; 83us; 108us; 84us; 107us; 85us; 106us; 86us; 105us; 87us; 5us; 88us; 8us; 0us; 16477us; 7us; 16438us; 35us; 117us; 83us; 116us; 84us; 115us; 85us; 114us; 86us; 113us; 87us; 112us; 88us; 111us; 1us; 32768us; 82us; 209us; 0us; 16478us; 1us; 32768us; 68us; 211us; 7us; 16468us; 35us; 117us; 83us; 116us; 84us; 115us; 85us; 114us; 86us; 113us; 87us; 112us; 88us; 111us; 1us; 32768us; 69us; 213us; 1us; 16479us; 82us; 214us; 0us; 16480us; 4us; 16481us; 15us; 203us; 16us; 205us; 17us; 207us; 25us; 210us; 0us; 16482us; 1us; 32768us; 72us; 218us; 7us; 32768us; 35us; 117us; 83us; 116us; 84us; 115us; 85us; 114us; 86us; 113us; 87us; 112us; 88us; 111us; 1us; 32768us; 73us; 220us; 1us; 32768us; 81us; 221us; 0us; 16484us; 0us; 16485us; 0us; 16486us; 7us; 32768us; 35us; 117us; 83us; 116us; 84us; 115us; 85us; 114us; 86us; 113us; 87us; 112us; 88us; 111us; 2us; 32768us; 42us; 229us; 72us; 226us; 10us; 32768us; 32us; 10us; 33us; 11us; 35us; 117us; 70us; 12us; 83us; 116us; 84us; 115us; 85us; 114us; 86us; 113us; 87us; 112us; 88us; 111us; 1us; 32768us; 82us; 228us; 0us; 16487us; 1us; 32768us; 80us; 230us; 7us; 16468us; 35us; 117us; 83us; 116us; 84us; 115us; 85us; 114us; 86us; 113us; 87us; 112us; 88us; 111us; 1us; 32768us; 81us; 232us; 0us; 16488us; 7us; 32768us; 35us; 117us; 83us; 116us; 84us; 115us; 85us; 114us; 86us; 113us; 87us; 112us; 88us; 111us; 1us; 32768us; 72us; 235us; 10us; 32768us; 32us; 10us; 33us; 11us; 35us; 117us; 70us; 12us; 83us; 116us; 84us; 115us; 85us; 114us; 86us; 113us; 87us; 112us; 88us; 111us; 1us; 32768us; 82us; 237us; 0us; 16489us; 7us; 32768us; 35us; 117us; 83us; 116us; 84us; 115us; 85us; 114us; 86us; 113us; 87us; 112us; 88us; 111us; 1us; 32768us; 68us; 240us; 7us; 16464us; 35us; 117us; 83us; 116us; 84us; 115us; 85us; 114us; 86us; 113us; 87us; 112us; 88us; 111us; 1us; 32768us; 69us; 242us; 5us; 16481us; 15us; 203us; 16us; 205us; 17us; 207us; 25us; 210us; 82us; 243us; 4us; 16481us; 15us; 203us; 16us; 205us; 17us; 207us; 25us; 210us; 0us; 16490us; 1us; 16491us; 80us; 179us; 0us; 16492us; 1us; 16483us; 80us; 217us; 2us; 32768us; 87us; 4us; 88us; 7us; 1us; 32768us; 68us; 250us; 7us; 16473us; 35us; 117us; 83us; 116us; 84us; 115us; 85us; 114us; 86us; 113us; 87us; 112us; 88us; 111us; 1us; 32768us; 69us; 252us; 1us; 32768us; 25us; 253us; 1us; 32768us; 68us; 254us; 10us; 32768us; 32us; 10us; 33us; 11us; 35us; 117us; 70us; 12us; 83us; 116us; 84us; 115us; 85us; 114us; 86us; 113us; 87us; 6us; 88us; 9us; 1us; 32768us; 69us; 256us; 2us; 32768us; 80us; 257us; 82us; 265us; 11us; 32768us; 11us; 98us; 59us; 80us; 68us; 24us; 73us; 97us; 74us; 96us; 83us; 108us; 84us; 107us; 85us; 106us; 86us; 105us; 87us; 5us; 88us; 8us; 0us; 16493us; 1us; 32768us; 72us; 260us; 10us; 32768us; 32us; 10us; 33us; 11us; 35us; 117us; 70us; 12us; 83us; 116us; 84us; 115us; 85us; 114us; 86us; 113us; 87us; 112us; 88us; 111us; 1us; 32768us; 69us; 262us; 2us; 32768us; 80us; 263us; 82us; 266us; 11us; 32768us; 11us; 98us; 59us; 80us; 68us; 24us; 73us; 97us; 74us; 96us; 83us; 108us; 84us; 107us; 85us; 106us; 86us; 105us; 87us; 5us; 88us; 8us; 0us; 16494us; 0us; 16495us; 0us; 16496us; 7us; 32768us; 35us; 117us; 83us; 116us; 84us; 115us; 85us; 114us; 86us; 113us; 87us; 112us; 88us; 111us; 1us; 32768us; 82us; 269us; 0us; 16497us; 11us; 32768us; 11us; 98us; 59us; 80us; 68us; 24us; 73us; 97us; 74us; 96us; 83us; 108us; 84us; 107us; 85us; 106us; 86us; 105us; 87us; 5us; 88us; 8us; 0us; 16498us; 7us; 16499us; 23us; 233us; 24us; 247us; 26us; 267us; 27us; 270us; 28us; 222us; 29us; 223us; 79us; 224us; 0us; 16500us; |]
let _fsyacc_actionTableRowOffsets = [|0us; 8us; 9us; 11us; 12us; 13us; 36us; 40us; 41us; 64us; 68us; 69us; 70us; 81us; 83us; 94us; 95us; 96us; 98us; 109us; 110us; 122us; 124us; 126us; 127us; 142us; 160us; 161us; 177us; 193us; 206us; 219us; 226us; 233us; 240us; 247us; 254us; 261us; 266us; 271us; 273us; 275us; 277us; 295us; 297us; 315us; 333us; 351us; 369us; 387us; 405us; 423us; 441us; 459us; 477us; 495us; 513us; 531us; 548us; 566us; 584us; 602us; 620us; 638us; 650us; 662us; 674us; 686us; 698us; 710us; 722us; 734us; 746us; 758us; 770us; 782us; 794us; 806us; 818us; 830us; 831us; 843us; 851us; 853us; 855us; 867us; 868us; 876us; 878us; 880us; 892us; 893us; 905us; 908us; 909us; 921us; 922us; 923us; 924us; 926us; 938us; 939us; 941us; 953us; 955us; 956us; 957us; 958us; 959us; 960us; 972us; 973us; 974us; 975us; 976us; 977us; 978us; 979us; 980us; 982us; 985us; 993us; 994us; 1006us; 1008us; 1009us; 1020us; 1021us; 1029us; 1030us; 1032us; 1033us; 1036us; 1038us; 1039us; 1047us; 1050us; 1053us; 1054us; 1066us; 1067us; 1069us; 1081us; 1083us; 1085us; 1087us; 1088us; 1090us; 1102us; 1104us; 1106us; 1107us; 1119us; 1120us; 1132us; 1133us; 1136us; 1148us; 1149us; 1161us; 1163us; 1165us; 1177us; 1178us; 1186us; 1198us; 1200us; 1202us; 1203us; 1205us; 1213us; 1215us; 1227us; 1229us; 1231us; 1232us; 1234us; 1235us; 1251us; 1252us; 1268us; 1270us; 1271us; 1274us; 1285us; 1286us; 1294us; 1295us; 1297us; 1305us; 1306us; 1308us; 1319us; 1320us; 1322us; 1330us; 1331us; 1333us; 1344us; 1346us; 1358us; 1360us; 1368us; 1369us; 1381us; 1382us; 1394us; 1395us; 1403us; 1405us; 1406us; 1408us; 1416us; 1418us; 1420us; 1421us; 1426us; 1427us; 1429us; 1437us; 1439us; 1441us; 1442us; 1443us; 1444us; 1452us; 1455us; 1466us; 1468us; 1469us; 1471us; 1479us; 1481us; 1482us; 1490us; 1492us; 1503us; 1505us; 1506us; 1514us; 1516us; 1524us; 1526us; 1532us; 1537us; 1538us; 1540us; 1541us; 1543us; 1546us; 1548us; 1556us; 1558us; 1560us; 1562us; 1573us; 1575us; 1578us; 1590us; 1591us; 1593us; 1604us; 1606us; 1609us; 1621us; 1622us; 1623us; 1624us; 1632us; 1634us; 1635us; 1647us; 1648us; 1656us; |]
let _fsyacc_reductionSymbolCounts = [|1us; 2us; 1us; 1us; 1us; 1us; 4us; 1us; 1us; 3us; 0us; 4us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 4us; 2us; 7us; 7us; 4us; 6us; 1us; 1us; 4us; 4us; 1us; 1us; 1us; 1us; 1us; 1us; 0us; 1us; 3us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 0us; 1us; 3us; 0us; 4us; 2us; 2us; 2us; 3us; 4us; 6us; 5us; 7us; 6us; 3us; 3us; 4us; 7us; 6us; 8us; 2us; 0us; 2us; 3us; 3us; 3us; 0us; 1us; 3us; 3us; 0us; 1us; 3us; 3us; 5us; 0us; 1us; 3us; 3us; 3us; 3us; 4us; 5us; 0us; 2us; 0us; 5us; 1us; 1us; 5us; 6us; 5us; 7us; 6us; 7us; 13us; 15us; 11us; 13us; 3us; 3us; 0us; 2us; |]
let _fsyacc_productionToNonTerminalTable = [|0us; 1us; 2us; 2us; 3us; 3us; 3us; 3us; 4us; 4us; 5us; 5us; 6us; 6us; 6us; 6us; 6us; 6us; 6us; 6us; 6us; 6us; 6us; 6us; 6us; 6us; 6us; 6us; 6us; 6us; 6us; 6us; 6us; 6us; 6us; 6us; 6us; 6us; 6us; 6us; 6us; 6us; 6us; 6us; 7us; 7us; 7us; 8us; 8us; 8us; 8us; 8us; 8us; 8us; 9us; 9us; 9us; 10us; 10us; 11us; 11us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 13us; 13us; 14us; 15us; 15us; 16us; 16us; 16us; 17us; 18us; 18us; 18us; 19us; 19us; 20us; 20us; 20us; 21us; 21us; 21us; 21us; 21us; 22us; 22us; 23us; 23us; 24us; 24us; 25us; 25us; 25us; 25us; 25us; 25us; 25us; 25us; 25us; 25us; 25us; 25us; 26us; 26us; |]
let _fsyacc_immediateActions = [|65535us; 49152us; 65535us; 16385us; 16386us; 65535us; 65535us; 16387us; 65535us; 65535us; 16388us; 16389us; 65535us; 65535us; 65535us; 16390us; 16391us; 65535us; 65535us; 16393us; 65535us; 65535us; 65535us; 16395us; 65535us; 65535us; 16396us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16412us; 65535us; 65535us; 65535us; 65535us; 65535us; 16414us; 65535us; 65535us; 65535us; 65535us; 16415us; 65535us; 65535us; 16416us; 65535us; 16417us; 16418us; 16419us; 65535us; 65535us; 16420us; 65535us; 65535us; 65535us; 16421us; 16424us; 16425us; 16426us; 16427us; 65535us; 16430us; 16431us; 16432us; 16433us; 16434us; 16435us; 16436us; 16437us; 65535us; 65535us; 65535us; 16440us; 65535us; 65535us; 16442us; 65535us; 16443us; 65535us; 16444us; 65535us; 16445us; 65535us; 65535us; 16446us; 65535us; 65535us; 65535us; 16447us; 65535us; 16448us; 65535us; 65535us; 65535us; 65535us; 65535us; 16450us; 65535us; 65535us; 65535us; 65535us; 16451us; 65535us; 16452us; 65535us; 16453us; 65535us; 65535us; 16454us; 65535us; 65535us; 65535us; 65535us; 16455us; 65535us; 65535us; 65535us; 65535us; 16456us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16457us; 65535us; 16458us; 65535us; 16460us; 65535us; 65535us; 16461us; 65535us; 65535us; 16462us; 65535us; 16463us; 65535us; 65535us; 16466us; 65535us; 65535us; 16467us; 65535us; 65535us; 16470us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16475us; 65535us; 16476us; 65535us; 16477us; 65535us; 65535us; 16478us; 65535us; 65535us; 65535us; 65535us; 16480us; 65535us; 16482us; 65535us; 65535us; 65535us; 65535us; 16484us; 16485us; 16486us; 65535us; 65535us; 65535us; 65535us; 16487us; 65535us; 65535us; 65535us; 16488us; 65535us; 65535us; 65535us; 65535us; 16489us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16490us; 65535us; 16492us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16493us; 65535us; 65535us; 65535us; 65535us; 65535us; 16494us; 16495us; 16496us; 65535us; 65535us; 16497us; 65535us; 16498us; 65535us; 16500us; |]
let _fsyacc_reductions ()  =    [| 
# 739 "..\..\obj\beat\parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : (loc * Ast.bdecl) list)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (Microsoft.FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : '_startstart));
# 748 "..\..\obj\beat\parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Decls)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 56 ".\parse.fsy"
                      _1 
                   )
# 56 ".\parse.fsy"
                 : (loc * Ast.bdecl) list));
# 759 "..\..\obj\beat\parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 59 ".\parse.fsy"
                      _1 
                   )
# 59 ".\parse.fsy"
                 : 'ID));
# 770 "..\..\obj\beat\parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 60 ".\parse.fsy"
                      _1 
                   )
# 60 ".\parse.fsy"
                 : 'ID));
# 781 "..\..\obj\beat\parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 63 ".\parse.fsy"
                      BInt 
                   )
# 63 ".\parse.fsy"
                 : 'Type));
# 791 "..\..\obj\beat\parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 64 ".\parse.fsy"
                      BBool 
                   )
# 64 ".\parse.fsy"
                 : 'Type));
# 801 "..\..\obj\beat\parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Types)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'Type)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 65 ".\parse.fsy"
                      BArray (_2, _4) 
                   )
# 65 ".\parse.fsy"
                 : 'Type));
# 813 "..\..\obj\beat\parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'AnyId)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 66 ".\parse.fsy"
                      BNamedType _1 
                   )
# 66 ".\parse.fsy"
                 : 'Type));
# 824 "..\..\obj\beat\parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Type)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 69 ".\parse.fsy"
                      [_1] 
                   )
# 69 ".\parse.fsy"
                 : 'Types));
# 835 "..\..\obj\beat\parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Type)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Types)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 70 ".\parse.fsy"
                      _1::_3 
                   )
# 70 ".\parse.fsy"
                 : 'Types));
# 847 "..\..\obj\beat\parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 73 ".\parse.fsy"
                      [] 
                   )
# 73 ".\parse.fsy"
                 : 'Triggers));
# 857 "..\..\obj\beat\parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exps)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'Triggers)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 74 ".\parse.fsy"
                      _2 
                   )
# 74 ".\parse.fsy"
                 : 'Triggers));
# 871 "..\..\obj\beat\parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 77 ".\parse.fsy"
                      _2 
                   )
# 77 ".\parse.fsy"
                 : 'Exp));
# 882 "..\..\obj\beat\parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 78 ".\parse.fsy"
                      BBop (BEquiv, _1, _3) 
                   )
# 78 ".\parse.fsy"
                 : 'Exp));
# 894 "..\..\obj\beat\parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 79 ".\parse.fsy"
                      BBop (BImply, _1, _3) 
                   )
# 79 ".\parse.fsy"
                 : 'Exp));
# 906 "..\..\obj\beat\parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 80 ".\parse.fsy"
                      BLoc (_2, BBop (BAnd, _1, _3)) 
                   )
# 80 ".\parse.fsy"
                 : 'Exp));
# 919 "..\..\obj\beat\parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 81 ".\parse.fsy"
                      BBop (BOr, _1, _3) 
                   )
# 81 ".\parse.fsy"
                 : 'Exp));
# 931 "..\..\obj\beat\parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 82 ".\parse.fsy"
                      BBop (BEq, _1, _3) 
                   )
# 82 ".\parse.fsy"
                 : 'Exp));
# 943 "..\..\obj\beat\parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 83 ".\parse.fsy"
                      BBop (BNe, _1, _3) 
                   )
# 83 ".\parse.fsy"
                 : 'Exp));
# 955 "..\..\obj\beat\parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 84 ".\parse.fsy"
                      BBop (BLt, _1, _3) 
                   )
# 84 ".\parse.fsy"
                 : 'Exp));
# 967 "..\..\obj\beat\parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 85 ".\parse.fsy"
                      BBop (BGt, _1, _3) 
                   )
# 85 ".\parse.fsy"
                 : 'Exp));
# 979 "..\..\obj\beat\parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 86 ".\parse.fsy"
                      BBop (BLe, _1, _3) 
                   )
# 86 ".\parse.fsy"
                 : 'Exp));
# 991 "..\..\obj\beat\parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 87 ".\parse.fsy"
                      BBop (BGe, _1, _3) 
                   )
# 87 ".\parse.fsy"
                 : 'Exp));
# 1003 "..\..\obj\beat\parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 88 ".\parse.fsy"
                      BBop (BAdd, _1, _3) 
                   )
# 88 ".\parse.fsy"
                 : 'Exp));
# 1015 "..\..\obj\beat\parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 89 ".\parse.fsy"
                      BBop (BSub, _1, _3) 
                   )
# 89 ".\parse.fsy"
                 : 'Exp));
# 1027 "..\..\obj\beat\parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 90 ".\parse.fsy"
                      BBop (BMul, _1, _3) 
                   )
# 90 ".\parse.fsy"
                 : 'Exp));
# 1039 "..\..\obj\beat\parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 91 ".\parse.fsy"
                      BBop (BDiv, _1, _3) 
                   )
# 91 ".\parse.fsy"
                 : 'Exp));
# 1051 "..\..\obj\beat\parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 92 ".\parse.fsy"
                      BBop (BMod, _1, _3) 
                   )
# 92 ".\parse.fsy"
                 : 'Exp));
# 1063 "..\..\obj\beat\parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 93 ".\parse.fsy"
                      BUop (BNeg, _3) 
                   )
# 93 ".\parse.fsy"
                 : 'Exp));
# 1074 "..\..\obj\beat\parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 94 ".\parse.fsy"
                      BUop (BNot, _2) 
                   )
# 94 ".\parse.fsy"
                 : 'Exp));
# 1085 "..\..\obj\beat\parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Formals)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'Triggers)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 95 ".\parse.fsy"
                      BQuant (BForall, _3, _5, _6) 
                   )
# 95 ".\parse.fsy"
                 : 'Exp));
# 1098 "..\..\obj\beat\parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Formals)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'Triggers)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 96 ".\parse.fsy"
                      BQuant (BExists, _3, _5, _6)  
                   )
# 96 ".\parse.fsy"
                 : 'Exp));
# 1111 "..\..\obj\beat\parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exps)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 97 ".\parse.fsy"
                      BSubscript (_1, _3) 
                   )
# 97 ".\parse.fsy"
                 : 'Exp));
# 1123 "..\..\obj\beat\parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exps)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 98 ".\parse.fsy"
                      BUpdate (_1, _3, _5) 
                   )
# 98 ".\parse.fsy"
                 : 'Exp));
# 1137 "..\..\obj\beat\parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bigint)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 99 ".\parse.fsy"
                      BIntConst _1 
                   )
# 99 ".\parse.fsy"
                 : 'Exp));
# 1148 "..\..\obj\beat\parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 100 ".\parse.fsy"
                      BBoolConst _1 
                   )
# 100 ".\parse.fsy"
                 : 'Exp));
# 1159 "..\..\obj\beat\parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 101 ".\parse.fsy"
                      BUop (BOld, _3) 
                   )
# 101 ".\parse.fsy"
                 : 'Exp));
# 1170 "..\..\obj\beat\parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'ID)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exps)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 102 ".\parse.fsy"
                      BApply (_1, _3) 
                   )
# 102 ".\parse.fsy"
                 : 'Exp));
# 1182 "..\..\obj\beat\parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 103 ".\parse.fsy"
                      BVar _1 
                   )
# 103 ".\parse.fsy"
                 : 'Exp));
# 1193 "..\..\obj\beat\parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 104 ".\parse.fsy"
                      BVar _1 
                   )
# 104 ".\parse.fsy"
                 : 'Exp));
# 1204 "..\..\obj\beat\parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 105 ".\parse.fsy"
                      BVar _1 
                   )
# 105 ".\parse.fsy"
                 : 'Exp));
# 1215 "..\..\obj\beat\parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 106 ".\parse.fsy"
                      BVar _1 
                   )
# 106 ".\parse.fsy"
                 : 'Exp));
# 1226 "..\..\obj\beat\parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 107 ".\parse.fsy"
                      BVar _1 
                   )
# 107 ".\parse.fsy"
                 : 'Exp));
# 1237 "..\..\obj\beat\parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 108 ".\parse.fsy"
                      BVar _1 
                   )
# 108 ".\parse.fsy"
                 : 'Exp));
# 1248 "..\..\obj\beat\parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 110 ".\parse.fsy"
                      [] 
                   )
# 110 ".\parse.fsy"
                 : 'Exps));
# 1258 "..\..\obj\beat\parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 111 ".\parse.fsy"
                      [_1] 
                   )
# 111 ".\parse.fsy"
                 : 'Exps));
# 1269 "..\..\obj\beat\parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exps)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 112 ".\parse.fsy"
                      _1::_3 
                   )
# 112 ".\parse.fsy"
                 : 'Exps));
# 1281 "..\..\obj\beat\parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 114 ".\parse.fsy"
                      _1 
                   )
# 114 ".\parse.fsy"
                 : 'AnyId));
# 1292 "..\..\obj\beat\parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 115 ".\parse.fsy"
                      _1 
                   )
# 115 ".\parse.fsy"
                 : 'AnyId));
# 1303 "..\..\obj\beat\parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 116 ".\parse.fsy"
                      _1 
                   )
# 116 ".\parse.fsy"
                 : 'AnyId));
# 1314 "..\..\obj\beat\parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 117 ".\parse.fsy"
                      _1 
                   )
# 117 ".\parse.fsy"
                 : 'AnyId));
# 1325 "..\..\obj\beat\parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 118 ".\parse.fsy"
                      _1 
                   )
# 118 ".\parse.fsy"
                 : 'AnyId));
# 1336 "..\..\obj\beat\parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 119 ".\parse.fsy"
                      _1 
                   )
# 119 ".\parse.fsy"
                 : 'AnyId));
# 1347 "..\..\obj\beat\parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 120 ".\parse.fsy"
                      "_" 
                   )
# 120 ".\parse.fsy"
                 : 'AnyId));
# 1357 "..\..\obj\beat\parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 122 ".\parse.fsy"
                      [] 
                   )
# 122 ".\parse.fsy"
                 : 'AnyIds));
# 1367 "..\..\obj\beat\parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'AnyId)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 123 ".\parse.fsy"
                      [_1] 
                   )
# 123 ".\parse.fsy"
                 : 'AnyIds));
# 1378 "..\..\obj\beat\parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'AnyId)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'AnyIds)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 124 ".\parse.fsy"
                      _1::_3 
                   )
# 124 ".\parse.fsy"
                 : 'AnyIds));
# 1390 "..\..\obj\beat\parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 127 ".\parse.fsy"
                      [] 
                   )
# 127 ".\parse.fsy"
                 : 'LoopInvs));
# 1400 "..\..\obj\beat\parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'LoopInvs)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 128 ".\parse.fsy"
                      (_1, _2)::_4 
                   )
# 128 ".\parse.fsy"
                 : 'LoopInvs));
# 1414 "..\..\obj\beat\parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Type)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 131 ".\parse.fsy"
                      BFormalType _2 
                   )
# 131 ".\parse.fsy"
                 : 'BFormalTyp));
# 1426 "..\..\obj\beat\parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'AnyId)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 132 ".\parse.fsy"
                      BFormalAlias _2 
                   )
# 132 ".\parse.fsy"
                 : 'BFormalTyp));
# 1437 "..\..\obj\beat\parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'ID)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 135 ".\parse.fsy"
                      (_2, BLabel _1) 
                   )
# 135 ".\parse.fsy"
                 : 'Stmt));
# 1449 "..\..\obj\beat\parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'ID)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 136 ".\parse.fsy"
                      (_1, BGoto _2) 
                   )
# 136 ".\parse.fsy"
                 : 'Stmt));
# 1462 "..\..\obj\beat\parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'AnyId)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'BFormalTyp)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 137 ".\parse.fsy"
                      (_1, BLocalDecl (_2, _3, None)) 
                   )
# 137 ".\parse.fsy"
                 : 'Stmt));
# 1476 "..\..\obj\beat\parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'AnyId)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'BFormalTyp)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 138 ".\parse.fsy"
                      (_1, BLocalDecl (_2, _3, Some _5)) 
                   )
# 138 ".\parse.fsy"
                 : 'Stmt));
# 1492 "..\..\obj\beat\parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'Block)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 139 ".\parse.fsy"
                      (_1, BIf (_3, _5, None)) 
                   )
# 139 ".\parse.fsy"
                 : 'Stmt));
# 1505 "..\..\obj\beat\parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'Block)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'Block)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 140 ".\parse.fsy"
                      (_1, BIf (_3, _5, Some _7)) 
                   )
# 140 ".\parse.fsy"
                 : 'Stmt));
# 1520 "..\..\obj\beat\parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'LoopInvs)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'Block)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 141 ".\parse.fsy"
                      (_1, BWhile (_3, _5, _6)) 
                   )
# 141 ".\parse.fsy"
                 : 'Stmt));
# 1534 "..\..\obj\beat\parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 142 ".\parse.fsy"
                      (_1, BAssume _2) 
                   )
# 142 ".\parse.fsy"
                 : 'Stmt));
# 1547 "..\..\obj\beat\parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 143 ".\parse.fsy"
                      (_1, BAssert _2) 
                   )
# 143 ".\parse.fsy"
                 : 'Stmt));
# 1560 "..\..\obj\beat\parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'AnyId)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 144 ".\parse.fsy"
                      (_2, BAssign (_1, _3)) 
                   )
# 144 ".\parse.fsy"
                 : 'Stmt));
# 1574 "..\..\obj\beat\parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'AnyId)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exps)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 145 ".\parse.fsy"
                      (_5, BAssign (_1, BUpdate(BVar _1, _3, _6))) 
                   )
# 145 ".\parse.fsy"
                 : 'Stmt));
# 1589 "..\..\obj\beat\parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'AnyId)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exps)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 146 ".\parse.fsy"
                      (_1, BCall ([], _2, _4)) 
                   )
# 146 ".\parse.fsy"
                 : 'Stmt));
# 1603 "..\..\obj\beat\parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'AnyIds)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'AnyId)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exps)) in
            let _8 = (let data = parseState.GetInput(8) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 147 ".\parse.fsy"
                      (_1, BCall (_2, _4, _6)) 
                   )
# 147 ".\parse.fsy"
                 : 'Stmt));
# 1619 "..\..\obj\beat\parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 148 ".\parse.fsy"
                      (_1, BReturn) 
                   )
# 148 ".\parse.fsy"
                 : 'Stmt));
# 1631 "..\..\obj\beat\parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 151 ".\parse.fsy"
                      [] 
                   )
# 151 ".\parse.fsy"
                 : 'Stmts));
# 1641 "..\..\obj\beat\parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Stmt)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Stmts)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 152 ".\parse.fsy"
                      _1::_2 
                   )
# 152 ".\parse.fsy"
                 : 'Stmts));
# 1653 "..\..\obj\beat\parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Stmts)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 155 ".\parse.fsy"
                      _2 
                   )
# 155 ".\parse.fsy"
                 : 'Block));
# 1666 "..\..\obj\beat\parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'AnyId)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Type)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 158 ".\parse.fsy"
                      (_1, BFormalType _3) 
                   )
# 158 ".\parse.fsy"
                 : 'FormalVar));
# 1679 "..\..\obj\beat\parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'AnyId)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'AnyId)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 159 ".\parse.fsy"
                      (_1, BFormalAlias _3) 
                   )
# 159 ".\parse.fsy"
                 : 'FormalVar));
# 1691 "..\..\obj\beat\parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 161 ".\parse.fsy"
                      [] 
                   )
# 161 ".\parse.fsy"
                 : 'FormalVars));
# 1701 "..\..\obj\beat\parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'FormalVar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 162 ".\parse.fsy"
                      [_1] 
                   )
# 162 ".\parse.fsy"
                 : 'FormalVars));
# 1712 "..\..\obj\beat\parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'FormalVar)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'FormalVars)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 163 ".\parse.fsy"
                      _1::_3 
                   )
# 163 ".\parse.fsy"
                 : 'FormalVars));
# 1724 "..\..\obj\beat\parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'AnyId)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Type)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 166 ".\parse.fsy"
                      (_1, _3) 
                   )
# 166 ".\parse.fsy"
                 : 'Formal));
# 1737 "..\..\obj\beat\parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 168 ".\parse.fsy"
                      [] 
                   )
# 168 ".\parse.fsy"
                 : 'Formals));
# 1747 "..\..\obj\beat\parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Formal)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 169 ".\parse.fsy"
                      [_1] 
                   )
# 169 ".\parse.fsy"
                 : 'Formals));
# 1758 "..\..\obj\beat\parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Formal)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Formals)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 170 ".\parse.fsy"
                      _1::_3 
                   )
# 170 ".\parse.fsy"
                 : 'Formals));
# 1770 "..\..\obj\beat\parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'AnyId)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Type)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 173 ".\parse.fsy"
                      (_1, _3, None) 
                   )
# 173 ".\parse.fsy"
                 : 'FormalFun));
# 1783 "..\..\obj\beat\parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'AnyId)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Type)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 174 ".\parse.fsy"
                      (_1, _3, Some _5) 
                   )
# 174 ".\parse.fsy"
                 : 'FormalFun));
# 1798 "..\..\obj\beat\parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 176 ".\parse.fsy"
                      [] 
                   )
# 176 ".\parse.fsy"
                 : 'FormalFuns));
# 1808 "..\..\obj\beat\parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'FormalFun)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 177 ".\parse.fsy"
                      [_1] 
                   )
# 177 ".\parse.fsy"
                 : 'FormalFuns));
# 1819 "..\..\obj\beat\parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'FormalFun)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'FormalFuns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 178 ".\parse.fsy"
                      _1::_3 
                   )
# 178 ".\parse.fsy"
                 : 'FormalFuns));
# 1831 "..\..\obj\beat\parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 181 ".\parse.fsy"
                      (_1, BRequires _2) 
                   )
# 181 ".\parse.fsy"
                 : 'Spec));
# 1844 "..\..\obj\beat\parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 182 ".\parse.fsy"
                      (_1, BEnsures _2) 
                   )
# 182 ".\parse.fsy"
                 : 'Spec));
# 1857 "..\..\obj\beat\parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'AnyIds)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 183 ".\parse.fsy"
                      (_1, BModifies _2) 
                   )
# 183 ".\parse.fsy"
                 : 'Spec));
# 1870 "..\..\obj\beat\parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Formals)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 184 ".\parse.fsy"
                      (_1, BReturns _3) 
                   )
# 184 ".\parse.fsy"
                 : 'Spec));
# 1882 "..\..\obj\beat\parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Formals)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 185 ".\parse.fsy"
                      (_1, BReturns _3) 
                   )
# 185 ".\parse.fsy"
                 : 'Spec));
# 1895 "..\..\obj\beat\parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 187 ".\parse.fsy"
                      [] 
                   )
# 187 ".\parse.fsy"
                 : 'Specs));
# 1905 "..\..\obj\beat\parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Spec)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Specs)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 188 ".\parse.fsy"
                      _1::_2 
                   )
# 188 ".\parse.fsy"
                 : 'Specs));
# 1917 "..\..\obj\beat\parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 191 ".\parse.fsy"
                      
                   )
# 191 ".\parse.fsy"
                 : 'Attr));
# 1927 "..\..\obj\beat\parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'AnyId)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 192 ".\parse.fsy"
                      
                   )
# 192 ".\parse.fsy"
                 : 'Attr));
# 1942 "..\..\obj\beat\parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 194 ".\parse.fsy"
                      (_1, Procedure) 
                   )
# 194 ".\parse.fsy"
                 : 'ProcOrImpl));
# 1953 "..\..\obj\beat\parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 194 ".\parse.fsy"
                      (_1, Implementation) 
                   )
# 194 ".\parse.fsy"
                 : 'ProcOrImpl));
# 1964 "..\..\obj\beat\parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'AnyId)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'Type)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 197 ".\parse.fsy"
                      (_1, BGlobalDecl (_2, _4)) 
                   )
# 197 ".\parse.fsy"
                 : 'Decl));
# 1979 "..\..\obj\beat\parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'AnyId)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'Formals)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 198 ".\parse.fsy"
                      (_1, BGlobalAliasDecl (_2, _5)) 
                   )
# 198 ".\parse.fsy"
                 : 'Decl));
# 1994 "..\..\obj\beat\parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'AnyId)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'Type)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 199 ".\parse.fsy"
                      (_1, BConstDecl (_2, _4)) 
                   )
# 199 ".\parse.fsy"
                 : 'Decl));
# 2009 "..\..\obj\beat\parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'ProcOrImpl)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'AnyId)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'FormalVars)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'Specs)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 201 ".\parse.fsy"
                      (fst _1, BProcDecl (_2, _4, _7, None, snd _1)) 
                   )
# 201 ".\parse.fsy"
                 : 'Decl));
# 2024 "..\..\obj\beat\parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'ProcOrImpl)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'AnyId)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'FormalVars)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'Specs)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 203 ".\parse.fsy"
                      (fst _1, BProcDecl (_2, _4, _6, None, snd _1)) 
                   )
# 203 ".\parse.fsy"
                 : 'Decl));
# 2038 "..\..\obj\beat\parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'ProcOrImpl)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'AnyId)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'FormalVars)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'Specs)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'Block)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 205 ".\parse.fsy"
                      (fst _1, BProcDecl (_2, _4, _6, Some _7, snd _1)) 
                   )
# 205 ".\parse.fsy"
                 : 'Decl));
# 2053 "..\..\obj\beat\parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Attr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ID)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'FormalFuns)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _9 = (let data = parseState.GetInput(9) in (Microsoft.FSharp.Core.Operators.unbox data : 'Type)) in
            let _11 = (let data = parseState.GetInput(11) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _12 = (let data = parseState.GetInput(12) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp)) in
            let _13 = (let data = parseState.GetInput(13) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 206 ".\parse.fsy"
                      (_1, BFunDecl (_3, _5, _9, Some _12)) 
                   )
# 206 ".\parse.fsy"
                 : 'Decl));
# 2072 "..\..\obj\beat\parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Attr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ID)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'FormalFuns)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _9 = (let data = parseState.GetInput(9) in (Microsoft.FSharp.Core.Operators.unbox data : 'ID)) in
            let _10 = (let data = parseState.GetInput(10) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _11 = (let data = parseState.GetInput(11) in (Microsoft.FSharp.Core.Operators.unbox data : 'Type)) in
            let _13 = (let data = parseState.GetInput(13) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _14 = (let data = parseState.GetInput(14) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp)) in
            let _15 = (let data = parseState.GetInput(15) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 207 ".\parse.fsy"
                      (_1, BFunDecl (_3, _5, _11, Some _14)) 
                   )
# 207 ".\parse.fsy"
                 : 'Decl));
# 2093 "..\..\obj\beat\parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Attr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ID)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'FormalFuns)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _9 = (let data = parseState.GetInput(9) in (Microsoft.FSharp.Core.Operators.unbox data : 'Type)) in
            let _11 = (let data = parseState.GetInput(11) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 208 ".\parse.fsy"
                      (_1, BFunDecl (_3, _5, _9, None)) 
                   )
# 208 ".\parse.fsy"
                 : 'Decl));
# 2110 "..\..\obj\beat\parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Attr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ID)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'FormalFuns)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _9 = (let data = parseState.GetInput(9) in (Microsoft.FSharp.Core.Operators.unbox data : 'ID)) in
            let _10 = (let data = parseState.GetInput(10) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _11 = (let data = parseState.GetInput(11) in (Microsoft.FSharp.Core.Operators.unbox data : 'Type)) in
            let _13 = (let data = parseState.GetInput(13) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 209 ".\parse.fsy"
                      (_1, BFunDecl (_3, _5, _11, None)) 
                   )
# 209 ".\parse.fsy"
                 : 'Decl));
# 2129 "..\..\obj\beat\parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'AnyId)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 210 ".\parse.fsy"
                      (_1, BTypeDecl _2) 
                   )
# 210 ".\parse.fsy"
                 : 'Decl));
# 2142 "..\..\obj\beat\parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 211 ".\parse.fsy"
                      (_1, BAxiomDecl _2) 
                   )
# 211 ".\parse.fsy"
                 : 'Decl));
# 2155 "..\..\obj\beat\parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 213 ".\parse.fsy"
                      [] 
                   )
# 213 ".\parse.fsy"
                 : 'Decls));
# 2165 "..\..\obj\beat\parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Decl)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Decls)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 214 ".\parse.fsy"
                      _1::_2 
                   )
# 214 ".\parse.fsy"
                 : 'Decls));
|]
# 2178 "..\..\obj\beat\parse.fs"
let tables () : Microsoft.FSharp.Text.Parsing.Tables<_> = 
  { reductions= _fsyacc_reductions ();
    endOfInputTag = _fsyacc_endOfInputTag;
    tagOfToken = tagOfToken;
    dataOfToken = _fsyacc_dataOfToken; 
    actionTableElements = _fsyacc_actionTableElements;
    actionTableRowOffsets = _fsyacc_actionTableRowOffsets;
    stateToProdIdxsTableElements = _fsyacc_stateToProdIdxsTableElements;
    stateToProdIdxsTableRowOffsets = _fsyacc_stateToProdIdxsTableRowOffsets;
    reductionSymbolCounts = _fsyacc_reductionSymbolCounts;
    immediateActions = _fsyacc_immediateActions;
    gotos = _fsyacc_gotos;
    sparseGotoTableRowOffsets = _fsyacc_sparseGotoTableRowOffsets;
    tagOfErrorTerminal = _fsyacc_tagOfErrorTerminal;
    parseError = (fun (ctxt:Microsoft.FSharp.Text.Parsing.ParseErrorContext<_>) -> 
                              match parse_error_rich with 
                              | Some f -> f ctxt
                              | None -> parse_error ctxt.Message);
    numTerminals = 92;
    productionToNonTerminalTable = _fsyacc_productionToNonTerminalTable  }
let engine lexer lexbuf startState = (tables ()).Interpret(lexer, lexbuf, startState)
let start lexer lexbuf : (loc * Ast.bdecl) list =
    Microsoft.FSharp.Core.Operators.unbox ((tables ()).Interpret(lexer, lexbuf, 0))
