; Listing generated by Microsoft (R) Optimizing Compiler Version 14.00.50727.762 

	TITLE	D:\OSes\VERVE\verify\src\Trusted\BootLoader\SingLdrPc\blentry.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?BlStartTime@@3U_BL_TIME@@A			; BlStartTime
PUBLIC	?BlBootStackLimit@@3PAXA			; BlBootStackLimit
PUBLIC	?BlBootStackBase@@3PAXA				; BlBootStackBase
_BSS	SEGMENT
?BlStartTime@@3U_BL_TIME@@A DB 0cH DUP (?)		; BlStartTime
?BlBootStackLimit@@3PAXA DD 01H DUP (?)			; BlBootStackLimit
?BlBootStackBase@@3PAXA DD 01H DUP (?)			; BlBootStackBase
_BSS	ENDS
PUBLIC	??_C@_0M@OKIOIALF@blentry?4cpp?$AA@		; `string'
PUBLIC	?BlApEntry@@YIXXZ				; BlApEntry
EXTRN	?BlRtlHaltInternal@@YIXPBDK@Z:PROC		; BlRtlHaltInternal
EXTRN	?BlSingularityApEntry@@YIXXZ:PROC		; BlSingularityApEntry
;	COMDAT ??_C@_0M@OKIOIALF@blentry?4cpp?$AA@
; File d:\oses\verve\verify\src\trusted\bootloader\singldrpc\blentry.cpp
CONST	SEGMENT
??_C@_0M@OKIOIALF@blentry?4cpp?$AA@ DB 'blentry.cpp', 00H ; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT ?BlApEntry@@YIXXZ
_TEXT	SEGMENT
?BlApEntry@@YIXXZ PROC					; BlApEntry, COMDAT

; 37   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 38   :     BlSingularityApEntry();

  00003	e8 00 00 00 00	 call	 ?BlSingularityApEntry@@YIXXZ ; BlSingularityApEntry

; 39   : 
; 40   :     BlRtlHalt();

  00008	ba 28 00 00 00	 mov	 edx, 40			; 00000028H
  0000d	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_0M@OKIOIALF@blentry?4cpp?$AA@
  00012	e8 00 00 00 00	 call	 ?BlRtlHaltInternal@@YIXPBDK@Z ; BlRtlHaltInternal

; 41   : }

  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?BlApEntry@@YIXXZ ENDP					; BlApEntry
_TEXT	ENDS
PUBLIC	??_C@_11LOCGONAA@?$AA?$AA@			; `string'
PUBLIC	??_C@_0BB@HJLOGHGL@unknown?5source?$CB?6?$AA@	; `string'
PUBLIC	??_C@_07HCENNHAB@Flash?4?6?$AA@			; `string'
PUBLIC	??_C@_09JKNBOLCM@network?4?6?$AA@		; `string'
PUBLIC	??_C@_0BJ@OHCMCPKN@FAT32?5on?5drive?50x?$CF02x?4?6?6?$AA@ ; `string'
PUBLIC	??_C@_0BJ@NLIFOCJG@FAT16?5on?5drive?50x?$CF02x?4?6?6?$AA@ ; `string'
PUBLIC	??_C@_0BG@HNCLEJLF@CD?5in?5drive?50x?$CF02x?4?6?6?$AA@ ; `string'
PUBLIC	??_C@_0O@PEJMEJNJ@Booting?5from?5?$AA@		; `string'
PUBLIC	?BlGetBeb@@YIPAU_BEB@@XZ			; BlGetBeb
PUBLIC	?BlInitialize@@YIXXZ				; BlInitialize
EXTRN	?BlSingularityInitialize@@YIXKPAU_FAR_POINTER@@0@Z:PROC ; BlSingularityInitialize
EXTRN	?BlCommandLine@@3PA_WA:DWORD			; BlCommandLine
EXTRN	?BlAcpiNumberOfProcessors@@3KA:DWORD		; BlAcpiNumberOfProcessors
EXTRN	?BlAcpiInitialize@@YIXXZ:PROC			; BlAcpiInitialize
EXTRN	?BlMpsInitialize@@YIXXZ:PROC			; BlMpsInitialize
EXTRN	?BlPnpInitialize@@YIXXZ:PROC			; BlPnpInitialize
EXTRN	?BlFlashInitialize@@YIXPAX0@Z:PROC		; BlFlashInitialize
EXTRN	?BlPxeInitialize@@YIXXZ:PROC			; BlPxeInitialize
EXTRN	?BlFatInitialize@@YIXEE@Z:PROC			; BlFatInitialize
EXTRN	?BlCdInitialize@@YIXE@Z:PROC			; BlCdInitialize
EXTRN	?BlRtlPrintf@@YAEPBDZZ:PROC			; BlRtlPrintf
;	COMDAT ??_C@_11LOCGONAA@?$AA?$AA@
CONST	SEGMENT
??_C@_11LOCGONAA@?$AA?$AA@ DB 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@HJLOGHGL@unknown?5source?$CB?6?$AA@
CONST	SEGMENT
??_C@_0BB@HJLOGHGL@unknown?5source?$CB?6?$AA@ DB 'unknown source!', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07HCENNHAB@Flash?4?6?$AA@
CONST	SEGMENT
??_C@_07HCENNHAB@Flash?4?6?$AA@ DB 'Flash.', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09JKNBOLCM@network?4?6?$AA@
CONST	SEGMENT
??_C@_09JKNBOLCM@network?4?6?$AA@ DB 'network.', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@OHCMCPKN@FAT32?5on?5drive?50x?$CF02x?4?6?6?$AA@
CONST	SEGMENT
??_C@_0BJ@OHCMCPKN@FAT32?5on?5drive?50x?$CF02x?4?6?6?$AA@ DB 'FAT32 on dr'
	DB	'ive 0x%02x.', 0aH, 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@NLIFOCJG@FAT16?5on?5drive?50x?$CF02x?4?6?6?$AA@
CONST	SEGMENT
??_C@_0BJ@NLIFOCJG@FAT16?5on?5drive?50x?$CF02x?4?6?6?$AA@ DB 'FAT16 on dr'
	DB	'ive 0x%02x.', 0aH, 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@HNCLEJLF@CD?5in?5drive?50x?$CF02x?4?6?6?$AA@
CONST	SEGMENT
??_C@_0BG@HNCLEJLF@CD?5in?5drive?50x?$CF02x?4?6?6?$AA@ DB 'CD in drive 0x'
	DB	'%02x.', 0aH, 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@PEJMEJNJ@Booting?5from?5?$AA@
CONST	SEGMENT
??_C@_0O@PEJMEJNJ@Booting?5from?5?$AA@ DB 'Booting from ', 00H ; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT ?BlInitialize@@YIXXZ
_TEXT	SEGMENT
tv65 = -8						; size = 4
_Beb$ = -4						; size = 4
?BlInitialize@@YIXXZ PROC				; BlInitialize, COMDAT

; 56   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 57   :     PBEB Beb;
; 58   : 
; 59   :     Beb = BlGetBeb();

  00006	e8 00 00 00 00	 call	 ?BlGetBeb@@YIPAU_BEB@@XZ ; BlGetBeb
  0000b	89 45 fc	 mov	 DWORD PTR _Beb$[ebp], eax

; 60   : 
; 61   :     //
; 62   :     // Check boot type and perform any necessary source specific initialization.
; 63   :     //
; 64   : 
; 65   :     BlRtlPrintf("Booting from ");

  0000e	68 00 00 00 00	 push	 OFFSET ??_C@_0O@PEJMEJNJ@Booting?5from?5?$AA@
  00013	e8 00 00 00 00	 call	 ?BlRtlPrintf@@YAEPBDZZ	; BlRtlPrintf
  00018	83 c4 04	 add	 esp, 4

; 66   : 
; 67   :     switch (Beb->BootType) {

  0001b	8b 45 fc	 mov	 eax, DWORD PTR _Beb$[ebp]
  0001e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00020	89 4d f8	 mov	 DWORD PTR tv65[ebp], ecx
  00023	8b 55 f8	 mov	 edx, DWORD PTR tv65[ebp]
  00026	83 ea 01	 sub	 edx, 1
  00029	89 55 f8	 mov	 DWORD PTR tv65[ebp], edx
  0002c	83 7d f8 04	 cmp	 DWORD PTR tv65[ebp], 4
  00030	0f 87 a8 00 00
	00		 ja	 $LN5@BlInitiali
  00036	8b 45 f8	 mov	 eax, DWORD PTR tv65[ebp]
  00039	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN15@BlInitiali[eax*4]
$LN10@BlInitiali:

; 68   : 
; 69   :         case BL_CD_BOOT: {
; 70   : 
; 71   :             BlRtlPrintf("CD in drive 0x%02x.\n\n", Beb->BootDriveNumber);

  00040	8b 4d fc	 mov	 ecx, DWORD PTR _Beb$[ebp]
  00043	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00046	52		 push	 edx
  00047	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@HNCLEJLF@CD?5in?5drive?50x?$CF02x?4?6?6?$AA@
  0004c	e8 00 00 00 00	 call	 ?BlRtlPrintf@@YAEPBDZZ	; BlRtlPrintf
  00051	83 c4 08	 add	 esp, 8

; 72   : 
; 73   :             BlCdInitialize((UINT8) Beb->BootDriveNumber);

  00054	8b 45 fc	 mov	 eax, DWORD PTR _Beb$[ebp]
  00057	8a 48 04	 mov	 cl, BYTE PTR [eax+4]
  0005a	e8 00 00 00 00	 call	 ?BlCdInitialize@@YIXE@Z	; BlCdInitialize

; 74   : 
; 75   :             break;

  0005f	e9 96 00 00 00	 jmp	 $LN11@BlInitiali
$LN9@BlInitiali:

; 76   :         }
; 77   : 
; 78   :         case BL_FAT16_BOOT: {
; 79   : 
; 80   :             BlRtlPrintf("FAT16 on drive 0x%02x.\n\n", Beb->BootDriveNumber);

  00064	8b 4d fc	 mov	 ecx, DWORD PTR _Beb$[ebp]
  00067	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0006a	52		 push	 edx
  0006b	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@NLIFOCJG@FAT16?5on?5drive?50x?$CF02x?4?6?6?$AA@
  00070	e8 00 00 00 00	 call	 ?BlRtlPrintf@@YAEPBDZZ	; BlRtlPrintf
  00075	83 c4 08	 add	 esp, 8

; 81   : 
; 82   :             BlFatInitialize((UINT8) Beb->BootDriveNumber, MBR_FAT16LBA);

  00078	b2 0e		 mov	 dl, 14			; 0000000eH
  0007a	8b 45 fc	 mov	 eax, DWORD PTR _Beb$[ebp]
  0007d	8a 48 04	 mov	 cl, BYTE PTR [eax+4]
  00080	e8 00 00 00 00	 call	 ?BlFatInitialize@@YIXEE@Z ; BlFatInitialize

; 83   : 
; 84   :             break;

  00085	eb 73		 jmp	 SHORT $LN11@BlInitiali
$LN8@BlInitiali:

; 85   :         }
; 86   : 
; 87   :         case BL_FAT32_BOOT: {
; 88   : 
; 89   :             BlRtlPrintf("FAT32 on drive 0x%02x.\n\n", Beb->BootDriveNumber);

  00087	8b 4d fc	 mov	 ecx, DWORD PTR _Beb$[ebp]
  0008a	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0008d	52		 push	 edx
  0008e	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@OHCMCPKN@FAT32?5on?5drive?50x?$CF02x?4?6?6?$AA@
  00093	e8 00 00 00 00	 call	 ?BlRtlPrintf@@YAEPBDZZ	; BlRtlPrintf
  00098	83 c4 08	 add	 esp, 8

; 90   : 
; 91   :             BlFatInitialize((UINT8) Beb->BootDriveNumber, MBR_FAT32LBA);

  0009b	b2 0c		 mov	 dl, 12			; 0000000cH
  0009d	8b 45 fc	 mov	 eax, DWORD PTR _Beb$[ebp]
  000a0	8a 48 04	 mov	 cl, BYTE PTR [eax+4]
  000a3	e8 00 00 00 00	 call	 ?BlFatInitialize@@YIXEE@Z ; BlFatInitialize

; 92   : 
; 93   :             break;

  000a8	eb 50		 jmp	 SHORT $LN11@BlInitiali
$LN7@BlInitiali:

; 94   :         }
; 95   : 
; 96   :         case BL_PXE_BOOT: {
; 97   : 
; 98   :             BlRtlPrintf("network.\n");

  000aa	68 00 00 00 00	 push	 OFFSET ??_C@_09JKNBOLCM@network?4?6?$AA@
  000af	e8 00 00 00 00	 call	 ?BlRtlPrintf@@YAEPBDZZ	; BlRtlPrintf
  000b4	83 c4 04	 add	 esp, 4

; 99   : 
; 100  :             BlPxeInitialize();

  000b7	e8 00 00 00 00	 call	 ?BlPxeInitialize@@YIXXZ	; BlPxeInitialize

; 101  : 
; 102  :             break;

  000bc	eb 3c		 jmp	 SHORT $LN11@BlInitiali
$LN6@BlInitiali:

; 103  :         }
; 104  : 
; 105  :         case BL_FLASH_BOOT: {
; 106  : 
; 107  :             BlRtlPrintf("Flash.\n");

  000be	68 00 00 00 00	 push	 OFFSET ??_C@_07HCENNHAB@Flash?4?6?$AA@
  000c3	e8 00 00 00 00	 call	 ?BlRtlPrintf@@YAEPBDZZ	; BlRtlPrintf
  000c8	83 c4 04	 add	 esp, 4

; 108  : 
; 109  :             BlFlashInitialize((PVOID)Beb->FlashImage, (PVOID)Beb->FlashImage);

  000cb	8b 4d fc	 mov	 ecx, DWORD PTR _Beb$[ebp]
  000ce	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  000d1	8b 45 fc	 mov	 eax, DWORD PTR _Beb$[ebp]
  000d4	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000d7	e8 00 00 00 00	 call	 ?BlFlashInitialize@@YIXPAX0@Z ; BlFlashInitialize

; 110  : 
; 111  :             break;

  000dc	eb 1c		 jmp	 SHORT $LN11@BlInitiali
$LN5@BlInitiali:

; 112  :         }
; 113  : 
; 114  :         default: {
; 115  : 
; 116  :             BlRtlPrintf("unknown source!\n");

  000de	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@HJLOGHGL@unknown?5source?$CB?6?$AA@
  000e3	e8 00 00 00 00	 call	 ?BlRtlPrintf@@YAEPBDZZ	; BlRtlPrintf
  000e8	83 c4 04	 add	 esp, 4

; 117  : 
; 118  :             BlRtlHalt();

  000eb	ba 76 00 00 00	 mov	 edx, 118		; 00000076H
  000f0	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_0M@OKIOIALF@blentry?4cpp?$AA@
  000f5	e8 00 00 00 00	 call	 ?BlRtlHaltInternal@@YIXPBDK@Z ; BlRtlHaltInternal
$LN11@BlInitiali:

; 119  :         }
; 120  :     }
; 121  : 
; 122  :     //
; 123  :     // Initialize PNP BIOS support.
; 124  :     //
; 125  : 
; 126  :     if (Beb->BootType != BL_FLASH_BOOT) {

  000fa	8b 4d fc	 mov	 ecx, DWORD PTR _Beb$[ebp]
  000fd	83 39 05	 cmp	 DWORD PTR [ecx], 5
  00100	74 05		 je	 SHORT $LN4@BlInitiali

; 127  : 
; 128  :         BlPnpInitialize();

  00102	e8 00 00 00 00	 call	 ?BlPnpInitialize@@YIXXZ	; BlPnpInitialize
$LN4@BlInitiali:

; 129  : 
; 130  :     }
; 131  : 
; 132  :     //
; 133  :     // Initialize MPS support.
; 134  :     //
; 135  : 
; 136  :     BlMpsInitialize();

  00107	e8 00 00 00 00	 call	 ?BlMpsInitialize@@YIXXZ	; BlMpsInitialize

; 137  : 
; 138  :     //
; 139  :     // Initialize ACPI support.
; 140  :     //
; 141  : 
; 142  :     if (Beb->BootType != BL_FLASH_BOOT) {

  0010c	8b 55 fc	 mov	 edx, DWORD PTR _Beb$[ebp]
  0010f	83 3a 05	 cmp	 DWORD PTR [edx], 5
  00112	74 07		 je	 SHORT $LN3@BlInitiali

; 143  : 
; 144  :         BlAcpiInitialize();

  00114	e8 00 00 00 00	 call	 ?BlAcpiInitialize@@YIXXZ ; BlAcpiInitialize

; 145  : 
; 146  :     }
; 147  :     else {

  00119	eb 0a		 jmp	 SHORT $LN2@BlInitiali
$LN3@BlInitiali:

; 148  : 
; 149  :         BlAcpiNumberOfProcessors = 1;

  0011b	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?BlAcpiNumberOfProcessors@@3KA, 1 ; BlAcpiNumberOfProcessors
$LN2@BlInitiali:

; 150  : 
; 151  :     }
; 152  : 
; 153  :     //
; 154  :     // Set AP entry address.
; 155  :     //
; 156  : 
; 157  :     Beb->ApEntry = (UINT32) (ULONG_PTR) BlApEntry;

  00125	8b 45 fc	 mov	 eax, DWORD PTR _Beb$[ebp]
  00128	c7 40 5c 00 00
	00 00		 mov	 DWORD PTR [eax+92], OFFSET ?BlApEntry@@YIXXZ ; BlApEntry

; 158  : 
; 159  :     //
; 160  :     // Initialize Singularity.
; 161  :     //
; 162  : 
; 163  :     if (BlCommandLine == NULL) {

  0012f	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?BlCommandLine@@3PA_WA, 0 ; BlCommandLine
  00136	75 0a		 jne	 SHORT $LN1@BlInitiali

; 164  : 
; 165  :         BlCommandLine = L"";

  00138	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?BlCommandLine@@3PA_WA, OFFSET ??_C@_11LOCGONAA@?$AA?$AA@ ; BlCommandLine
$LN1@BlInitiali:

; 166  :     }
; 167  : 
; 168  :     BlSingularityInitialize(BlAcpiNumberOfProcessors,
; 169  :                             &Beb->ApEntry16,
; 170  :                             &Beb->ApStartupLock);

  00142	8b 4d fc	 mov	 ecx, DWORD PTR _Beb$[ebp]
  00145	83 c1 60	 add	 ecx, 96			; 00000060H
  00148	51		 push	 ecx
  00149	8b 55 fc	 mov	 edx, DWORD PTR _Beb$[ebp]
  0014c	83 c2 58	 add	 edx, 88			; 00000058H
  0014f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?BlAcpiNumberOfProcessors@@3KA ; BlAcpiNumberOfProcessors
  00155	e8 00 00 00 00	 call	 ?BlSingularityInitialize@@YIXKPAU_FAR_POINTER@@0@Z ; BlSingularityInitialize

; 171  : }

  0015a	8b e5		 mov	 esp, ebp
  0015c	5d		 pop	 ebp
  0015d	c3		 ret	 0
  0015e	8b ff		 npad	 2
$LN15@BlInitiali:
  00160	00 00 00 00	 DD	 $LN10@BlInitiali
  00164	00 00 00 00	 DD	 $LN9@BlInitiali
  00168	00 00 00 00	 DD	 $LN8@BlInitiali
  0016c	00 00 00 00	 DD	 $LN7@BlInitiali
  00170	00 00 00 00	 DD	 $LN6@BlInitiali
?BlInitialize@@YIXXZ ENDP				; BlInitialize
; Function compile flags: /Odtp
; File d:\oses\verve\verify\src\trusted\bootloader\singldrpc\bl.h
_TEXT	ENDS
;	COMDAT ?BlGetBeb@@YIPAU_BEB@@XZ
_TEXT	SEGMENT
?BlGetBeb@@YIPAU_BEB@@XZ PROC				; BlGetBeb, COMDAT

; 355  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 356  :     return ((PBEB) BEB_BASE);

  00003	b8 00 f0 02 00	 mov	 eax, 192512		; 0002f000H

; 357  : }

  00008	5d		 pop	 ebp
  00009	c3		 ret	 0
?BlGetBeb@@YIPAU_BEB@@XZ ENDP				; BlGetBeb
_TEXT	ENDS
PUBLIC	??_C@_0CK@OAMGPDO@Boot?5Time?3?5?$CF02u?1?$CF02u?1?$CF02u?5?$CF02u?3?$CF@ ; `string'
PUBLIC	??_C@_0BH@BBNKHCHK@Looking?5for?5debugger?4?6?$AA@ ; `string'
PUBLIC	??_C@_0CF@IHFGBGKJ@Singularity?5?$CFs?5Boot?5Loader?5?$FL?$CFs?5?$CF@ ; `string'
PUBLIC	??_C@_03NDFEINMN@x86?$AA@			; `string'
PUBLIC	??_C@_0M@KMACNJBK@Mar?515?52020?$AA@		; `string'
PUBLIC	??_C@_08MJIEIAMO@04?318?318?$AA@		; `string'
PUBLIC	?BlEntry@@YIXXZ					; BlEntry
EXTRN	?BlMmSwitchStack@@YIXPAX0@Z:PROC		; BlMmSwitchStack
EXTRN	?BlMmAllocatePhysicalRegion@@YI_KKK@Z:PROC	; BlMmAllocatePhysicalRegion
EXTRN	?BlPciInitialize@@YIXXZ:PROC			; BlPciInitialize
EXTRN	?BlMmInitializeSystem@@YIXXZ:PROC		; BlMmInitializeSystem
EXTRN	?BlRtlGetCurrentTime@@YIXPAU_BL_TIME@@@Z:PROC	; BlRtlGetCurrentTime
EXTRN	?BlVideoInitialize@@YIXXZ:PROC			; BlVideoInitialize
EXTRN	?BlTrapEnable@@YIXXZ:PROC			; BlTrapEnable
;	COMDAT ??_C@_0CK@OAMGPDO@Boot?5Time?3?5?$CF02u?1?$CF02u?1?$CF02u?5?$CF02u?3?$CF@
; File d:\oses\verve\verify\src\trusted\bootloader\singldrpc\blentry.cpp
CONST	SEGMENT
??_C@_0CK@OAMGPDO@Boot?5Time?3?5?$CF02u?1?$CF02u?1?$CF02u?5?$CF02u?3?$CF@ DB 'B'
	DB	'oot Time: %02u/%02u/%02u %02u:%02u:%02u', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@BBNKHCHK@Looking?5for?5debugger?4?6?$AA@
CONST	SEGMENT
??_C@_0BH@BBNKHCHK@Looking?5for?5debugger?4?6?$AA@ DB 'Looking for debugg'
	DB	'er.', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@IHFGBGKJ@Singularity?5?$CFs?5Boot?5Loader?5?$FL?$CFs?5?$CF@
CONST	SEGMENT
??_C@_0CF@IHFGBGKJ@Singularity?5?$CFs?5Boot?5Loader?5?$FL?$CFs?5?$CF@ DB 'S'
	DB	'ingularity %s Boot Loader [%s %s]', 0aH, 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03NDFEINMN@x86?$AA@
CONST	SEGMENT
??_C@_03NDFEINMN@x86?$AA@ DB 'x86', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@KMACNJBK@Mar?515?52020?$AA@
CONST	SEGMENT
??_C@_0M@KMACNJBK@Mar?515?52020?$AA@ DB 'Mar 15 2020', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08MJIEIAMO@04?318?318?$AA@
CONST	SEGMENT
??_C@_08MJIEIAMO@04?318?318?$AA@ DB '04:18:18', 00H	; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT ?BlEntry@@YIXXZ
_TEXT	SEGMENT
_Beb$ = -4						; size = 4
?BlEntry@@YIXXZ PROC					; BlEntry, COMDAT

; 198  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 199  :     PBEB Beb;
; 200  : 
; 201  :     Beb = BlGetBeb();

  00004	e8 00 00 00 00	 call	 ?BlGetBeb@@YIPAU_BEB@@XZ ; BlGetBeb
  00009	89 45 fc	 mov	 DWORD PTR _Beb$[ebp], eax

; 202  : 
; 203  :     //
; 204  :     // Initialize the trap table.
; 205  :     //
; 206  :     BlTrapEnable();

  0000c	e8 00 00 00 00	 call	 ?BlTrapEnable@@YIXXZ	; BlTrapEnable

; 207  : 
; 208  :     //
; 209  :     // Initialize video.
; 210  :     //
; 211  : 
; 212  :     BlVideoInitialize();

  00011	e8 00 00 00 00	 call	 ?BlVideoInitialize@@YIXXZ ; BlVideoInitialize

; 213  : 
; 214  :     //
; 215  :     // Print the welcome banner.
; 216  :     //
; 217  : 
; 218  :     BlRtlPrintf("Singularity %s Boot Loader [%s %s]\n"
; 219  :                 "\n",
; 220  :                 PLATFORM_STRING,
; 221  :                 __DATE__,
; 222  :                 __TIME__);

  00016	68 00 00 00 00	 push	 OFFSET ??_C@_08MJIEIAMO@04?318?318?$AA@
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0M@KMACNJBK@Mar?515?52020?$AA@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_03NDFEINMN@x86?$AA@
  00025	68 00 00 00 00	 push	 OFFSET ??_C@_0CF@IHFGBGKJ@Singularity?5?$CFs?5Boot?5Loader?5?$FL?$CFs?5?$CF@
  0002a	e8 00 00 00 00	 call	 ?BlRtlPrintf@@YAEPBDZZ	; BlRtlPrintf
  0002f	83 c4 10	 add	 esp, 16			; 00000010H

; 223  : 
; 224  :     //
; 225  :     // Capture boot start time.
; 226  :     //
; 227  : 
; 228  :     if (Beb->BootType != BL_FLASH_BOOT) {

  00032	8b 45 fc	 mov	 eax, DWORD PTR _Beb$[ebp]
  00035	83 38 05	 cmp	 DWORD PTR [eax], 5
  00038	74 0a		 je	 SHORT $LN2@BlEntry

; 229  : 
; 230  :         BlRtlGetCurrentTime(&BlStartTime);

  0003a	b9 00 00 00 00	 mov	 ecx, OFFSET ?BlStartTime@@3U_BL_TIME@@A ; BlStartTime
  0003f	e8 00 00 00 00	 call	 ?BlRtlGetCurrentTime@@YIXPAU_BL_TIME@@@Z ; BlRtlGetCurrentTime
$LN2@BlEntry:

; 231  : 
; 232  :     }
; 233  : 
; 234  :     //
; 235  :     // Initialize memory management (ring transitions must follow this call).
; 236  :     //
; 237  : 
; 238  :     BlMmInitializeSystem();

  00044	e8 00 00 00 00	 call	 ?BlMmInitializeSystem@@YIXXZ ; BlMmInitializeSystem

; 239  : 
; 240  :     //
; 241  :     // Initialize PCI support (probe for 1394 interfaces for KD).
; 242  :     //
; 243  : 
; 244  :     if (Beb->BootType != BL_FLASH_BOOT) {

  00049	8b 4d fc	 mov	 ecx, DWORD PTR _Beb$[ebp]
  0004c	83 39 05	 cmp	 DWORD PTR [ecx], 5
  0004f	74 05		 je	 SHORT $LN1@BlEntry

; 245  : 
; 246  :         BlPciInitialize();

  00051	e8 00 00 00 00	 call	 ?BlPciInitialize@@YIXXZ	; BlPciInitialize
$LN1@BlEntry:

; 247  : 
; 248  :     }
; 249  : 
; 250  :     //
; 251  :     // Initialize KD.
; 252  :     //
; 253  : 
; 254  :     BlRtlPrintf("Looking for debugger.\n");

  00056	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@BBNKHCHK@Looking?5for?5debugger?4?6?$AA@
  0005b	e8 00 00 00 00	 call	 ?BlRtlPrintf@@YAEPBDZZ	; BlRtlPrintf
  00060	83 c4 04	 add	 esp, 4

; 255  : //    BlKdInitialize();
; 256  : 
; 257  :     //
; 258  :     // Print the welcome banner.
; 259  :     //
; 260  : 
; 261  :     BlRtlPrintf("Boot Time: %02u/%02u/%02u %02u:%02u:%02u\n",
; 262  :                 BlStartTime.Month,
; 263  :                 BlStartTime.Day,
; 264  :                 BlStartTime.Year,
; 265  :                 BlStartTime.Hour,
; 266  :                 BlStartTime.Minute,
; 267  :                 BlStartTime.Second);

  00063	0f b6 15 08 00
	00 00		 movzx	 edx, BYTE PTR ?BlStartTime@@3U_BL_TIME@@A+8
  0006a	52		 push	 edx
  0006b	0f b6 05 07 00
	00 00		 movzx	 eax, BYTE PTR ?BlStartTime@@3U_BL_TIME@@A+7
  00072	50		 push	 eax
  00073	0f b6 0d 06 00
	00 00		 movzx	 ecx, BYTE PTR ?BlStartTime@@3U_BL_TIME@@A+6
  0007a	51		 push	 ecx
  0007b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?BlStartTime@@3U_BL_TIME@@A
  00081	52		 push	 edx
  00082	0f b6 05 05 00
	00 00		 movzx	 eax, BYTE PTR ?BlStartTime@@3U_BL_TIME@@A+5
  00089	50		 push	 eax
  0008a	0f b6 0d 04 00
	00 00		 movzx	 ecx, BYTE PTR ?BlStartTime@@3U_BL_TIME@@A+4
  00091	51		 push	 ecx
  00092	68 00 00 00 00	 push	 OFFSET ??_C@_0CK@OAMGPDO@Boot?5Time?3?5?$CF02u?1?$CF02u?1?$CF02u?5?$CF02u?3?$CF@
  00097	e8 00 00 00 00	 call	 ?BlRtlPrintf@@YAEPBDZZ	; BlRtlPrintf
  0009c	83 c4 1c	 add	 esp, 28			; 0000001cH

; 268  : 
; 269  :     //
; 270  :     // Initialize VESA support.
; 271  :     //
; 272  : 
; 273  : #if VESA_ENABLED
; 274  : 
; 275  :     BlVesaInitialize();
; 276  : 
; 277  : #endif
; 278  : 
; 279  :     //
; 280  :     // Allocate and switch to the boot stack.
; 281  :     //
; 282  : 
; 283  :     BlBootStackLimit = (PVOID) (ULONG_PTR) BlMmAllocatePhysicalRegion(BL_BOOT_STACK_SIZE, BL_MM_PHYSICAL_REGION_BOOT_STACK);

  0009f	ba 0f 00 00 00	 mov	 edx, 15			; 0000000fH
  000a4	b9 00 00 01 00	 mov	 ecx, 65536		; 00010000H
  000a9	e8 00 00 00 00	 call	 ?BlMmAllocatePhysicalRegion@@YI_KKK@Z ; BlMmAllocatePhysicalRegion
  000ae	a3 00 00 00 00	 mov	 DWORD PTR ?BlBootStackLimit@@3PAXA, eax ; BlBootStackLimit

; 284  :     BlBootStackBase = (PVOID) ((ULONG_PTR) BlBootStackLimit + BL_BOOT_STACK_SIZE);

  000b3	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?BlBootStackLimit@@3PAXA ; BlBootStackLimit
  000b9	81 c2 00 00 01
	00		 add	 edx, 65536		; 00010000H
  000bf	89 15 00 00 00
	00		 mov	 DWORD PTR ?BlBootStackBase@@3PAXA, edx ; BlBootStackBase

; 285  : 
; 286  :     BlMmSwitchStack(BlBootStackBase, BlInitialize);

  000c5	ba 00 00 00 00	 mov	 edx, OFFSET ?BlInitialize@@YIXXZ ; BlInitialize
  000ca	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?BlBootStackBase@@3PAXA ; BlBootStackBase
  000d0	e8 00 00 00 00	 call	 ?BlMmSwitchStack@@YIXPAX0@Z ; BlMmSwitchStack

; 287  : }

  000d5	8b e5		 mov	 esp, ebp
  000d7	5d		 pop	 ebp
  000d8	c3		 ret	 0
?BlEntry@@YIXXZ ENDP					; BlEntry
_TEXT	ENDS
END
