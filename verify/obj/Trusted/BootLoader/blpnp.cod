; Listing generated by Microsoft (R) Optimizing Compiler Version 14.00.50727.762 

	TITLE	D:\OSes\VERVE\verify\src\Trusted\BootLoader\SingLdrPc\blpnp.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?BlPnpSystemDeviceNodeListSize@@3KA		; BlPnpSystemDeviceNodeListSize
PUBLIC	?BlPnpNodeData@@3PAEA				; BlPnpNodeData
PUBLIC	?BlPnpIsaConfiguration@@3U_PNP_ISA_CONFIGURATION@@A ; BlPnpIsaConfiguration
PUBLIC	?BlPnpSystemDeviceNodeList@@3PAU_PNP_SYSTEM_DEVICE_NODE@@A ; BlPnpSystemDeviceNodeList
PUBLIC	?BlPnpBiosInformation@@3PAU_PNP_INSTALLATION_CHECK@@A ; BlPnpBiosInformation
PUBLIC	?BlPnpHandle@@3EA				; BlPnpHandle
PUBLIC	?BlPnpCallFrame@@3PAGA				; BlPnpCallFrame
PUBLIC	?BlPnpNodeSize@@3KA				; BlPnpNodeSize
PUBLIC	?BlPnpNumberOfNodes@@3EA			; BlPnpNumberOfNodes
_BSS	SEGMENT
?BlPnpSystemDeviceNodeListSize@@3KA DD 01H DUP (?)	; BlPnpSystemDeviceNodeListSize
?BlPnpNodeData@@3PAEA DB 01000H DUP (?)			; BlPnpNodeData
	ALIGN	8

?BlPnpIsaConfiguration@@3U_PNP_ISA_CONFIGURATION@@A DF 01H DUP (?) ; BlPnpIsaConfiguration
	ALIGN	4

?BlPnpSystemDeviceNodeList@@3PAU_PNP_SYSTEM_DEVICE_NODE@@A DD 01H DUP (?) ; BlPnpSystemDeviceNodeList
?BlPnpBiosInformation@@3PAU_PNP_INSTALLATION_CHECK@@A DD 01H DUP (?) ; BlPnpBiosInformation
?BlPnpHandle@@3EA DB 01H DUP (?)			; BlPnpHandle
	ALIGN	4

?BlPnpCallFrame@@3PAGA DW 010H DUP (?)			; BlPnpCallFrame
?BlPnpNodeSize@@3KA DD 01H DUP (?)			; BlPnpNodeSize
?BlPnpNumberOfNodes@@3EA DB 01H DUP (?)			; BlPnpNumberOfNodes
_BSS	ENDS
PUBLIC	?BlPnpGetNumberOfSystemDeviceNodes@@YIGPAEPAKG@Z ; BlPnpGetNumberOfSystemDeviceNodes
EXTRN	?BlRtlCallLegacyFunction@@YIXGGPAXKPAU_BL_LEGACY_CALL_CONTEXT@@1@Z:PROC ; BlRtlCallLegacyFunction
EXTRN	?BlRtlZeroMemory@@YIXPAXK@Z:PROC		; BlRtlZeroMemory
EXTRN	?BlRtlConvertLinearPointerToFarPointer@@YIXPAXPAU_FAR_POINTER@@@Z:PROC ; BlRtlConvertLinearPointerToFarPointer
; Function compile flags: /Odtp
; File d:\oses\verve\verify\src\trusted\bootloader\singldrpc\blpnp.cpp
;	COMDAT ?BlPnpGetNumberOfSystemDeviceNodes@@YIGPAEPAKG@Z
_TEXT	SEGMENT
_NodeSize$ = -44					; size = 4
_NumberOfNodes$ = -40					; size = 4
_Context$ = -36						; size = 36
_BiosSelector$ = 8					; size = 2
?BlPnpGetNumberOfSystemDeviceNodes@@YIGPAEPAKG@Z PROC	; BlPnpGetNumberOfSystemDeviceNodes, COMDAT
; _NumberOfNodes$ = ecx
; _NodeSize$ = edx

; 80   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 2c	 sub	 esp, 44			; 0000002cH
  00006	89 55 d4	 mov	 DWORD PTR _NodeSize$[ebp], edx
  00009	89 4d d8	 mov	 DWORD PTR _NumberOfNodes$[ebp], ecx

; 81   :     BL_LEGACY_CALL_CONTEXT Context;
; 82   : 
; 83   :     BlPnpNumberOfNodes = 0;

  0000c	c6 05 00 00 00
	00 00		 mov	 BYTE PTR ?BlPnpNumberOfNodes@@3EA, 0 ; BlPnpNumberOfNodes

; 84   :     BlPnpNodeSize = 0;

  00013	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?BlPnpNodeSize@@3KA, 0 ; BlPnpNodeSize

; 85   : 
; 86   :     BlPnpCallFrame[0] = 0;

  0001d	66 c7 05 00 00
	00 00 00 00	 mov	 WORD PTR ?BlPnpCallFrame@@3PAGA, 0

; 87   :     BlRtlConvertLinearPointerToFarPointer(&BlPnpNumberOfNodes, (PFAR_POINTER) &BlPnpCallFrame[1]);

  00026	ba 02 00 00 00	 mov	 edx, OFFSET ?BlPnpCallFrame@@3PAGA+2
  0002b	b9 00 00 00 00	 mov	 ecx, OFFSET ?BlPnpNumberOfNodes@@3EA ; BlPnpNumberOfNodes
  00030	e8 00 00 00 00	 call	 ?BlRtlConvertLinearPointerToFarPointer@@YIXPAXPAU_FAR_POINTER@@@Z ; BlRtlConvertLinearPointerToFarPointer

; 88   :     BlRtlConvertLinearPointerToFarPointer(&BlPnpNodeSize, (PFAR_POINTER) &BlPnpCallFrame[3]);

  00035	ba 06 00 00 00	 mov	 edx, OFFSET ?BlPnpCallFrame@@3PAGA+6
  0003a	b9 00 00 00 00	 mov	 ecx, OFFSET ?BlPnpNodeSize@@3KA ; BlPnpNodeSize
  0003f	e8 00 00 00 00	 call	 ?BlRtlConvertLinearPointerToFarPointer@@YIXPAXPAU_FAR_POINTER@@@Z ; BlRtlConvertLinearPointerToFarPointer

; 89   :     BlPnpCallFrame[5] = BiosSelector;

  00044	66 8b 45 08	 mov	 ax, WORD PTR _BiosSelector$[ebp]
  00048	66 a3 0a 00 00
	00		 mov	 WORD PTR ?BlPnpCallFrame@@3PAGA+10, ax

; 90   : 
; 91   :     BlRtlZeroMemory(&Context, sizeof(BL_LEGACY_CALL_CONTEXT));

  0004e	ba 24 00 00 00	 mov	 edx, 36			; 00000024H
  00053	8d 4d dc	 lea	 ecx, DWORD PTR _Context$[ebp]
  00056	e8 00 00 00 00	 call	 ?BlRtlZeroMemory@@YIXPAXK@Z ; BlRtlZeroMemory

; 92   : 
; 93   :     BlRtlCallLegacyFunction(BlPnpBiosInformation->RealModeCodeSegment16,
; 94   :                             BlPnpBiosInformation->RealModeCodeOffset16,
; 95   :                             BlPnpCallFrame,
; 96   :                             6 * sizeof(UINT16),
; 97   :                             &Context,
; 98   :                             &Context);

  0005b	8d 4d dc	 lea	 ecx, DWORD PTR _Context$[ebp]
  0005e	51		 push	 ecx
  0005f	8d 55 dc	 lea	 edx, DWORD PTR _Context$[ebp]
  00062	52		 push	 edx
  00063	6a 0c		 push	 12			; 0000000cH
  00065	68 00 00 00 00	 push	 OFFSET ?BlPnpCallFrame@@3PAGA
  0006a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?BlPnpBiosInformation@@3PAU_PNP_INSTALLATION_CHECK@@A ; BlPnpBiosInformation
  0006f	66 8b 50 0d	 mov	 dx, WORD PTR [eax+13]
  00073	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?BlPnpBiosInformation@@3PAU_PNP_INSTALLATION_CHECK@@A ; BlPnpBiosInformation
  00079	66 8b 49 0f	 mov	 cx, WORD PTR [ecx+15]
  0007d	e8 00 00 00 00	 call	 ?BlRtlCallLegacyFunction@@YIXGGPAXKPAU_BL_LEGACY_CALL_CONTEXT@@1@Z ; BlRtlCallLegacyFunction

; 99   : 
; 100  :     if ((PNP_STATUS) Context.eax == PNP_STATUS_SUCCESS) {

  00082	0f b7 55 dc	 movzx	 edx, WORD PTR _Context$[ebp]
  00086	85 d2		 test	 edx, edx
  00088	75 15		 jne	 SHORT $LN1@BlPnpGetNu

; 101  : 
; 102  :         *NumberOfNodes = BlPnpNumberOfNodes;

  0008a	8b 45 d8	 mov	 eax, DWORD PTR _NumberOfNodes$[ebp]
  0008d	8a 0d 00 00 00
	00		 mov	 cl, BYTE PTR ?BlPnpNumberOfNodes@@3EA ; BlPnpNumberOfNodes
  00093	88 08		 mov	 BYTE PTR [eax], cl

; 103  :         *NodeSize = BlPnpNodeSize;

  00095	8b 55 d4	 mov	 edx, DWORD PTR _NodeSize$[ebp]
  00098	a1 00 00 00 00	 mov	 eax, DWORD PTR ?BlPnpNodeSize@@3KA ; BlPnpNodeSize
  0009d	89 02		 mov	 DWORD PTR [edx], eax
$LN1@BlPnpGetNu:

; 104  :     }
; 105  : 
; 106  :     return (PNP_STATUS) Context.eax;

  0009f	66 8b 45 dc	 mov	 ax, WORD PTR _Context$[ebp]

; 107  : }

  000a3	8b e5		 mov	 esp, ebp
  000a5	5d		 pop	 ebp
  000a6	c2 04 00	 ret	 4
?BlPnpGetNumberOfSystemDeviceNodes@@YIGPAEPAKG@Z ENDP	; BlPnpGetNumberOfSystemDeviceNodes
_TEXT	ENDS
PUBLIC	??_C@_09CDGHECLD@blpnp?4cpp?$AA@		; `string'
PUBLIC	?BlPnpGetSystemDeviceNode@@YIGPAEPAU_PNP_SYSTEM_DEVICE_NODE@@KGG@Z ; BlPnpGetSystemDeviceNode
EXTRN	?BlRtlCopyMemory@@YIXPAXPBXK@Z:PROC		; BlRtlCopyMemory
EXTRN	?BlRtlAssertFailed@@YIXPBDK@Z:PROC		; BlRtlAssertFailed
;	COMDAT ??_C@_09CDGHECLD@blpnp?4cpp?$AA@
CONST	SEGMENT
??_C@_09CDGHECLD@blpnp?4cpp?$AA@ DB 'blpnp.cpp', 00H	; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT ?BlPnpGetSystemDeviceNode@@YIGPAEPAU_PNP_SYSTEM_DEVICE_NODE@@KGG@Z
_TEXT	SEGMENT
_Node$ = -44						; size = 4
_Handle$ = -40						; size = 4
_Context$ = -36						; size = 36
_NodeSize$ = 8						; size = 4
_Control$ = 12						; size = 2
_BiosSelector$ = 16					; size = 2
?BlPnpGetSystemDeviceNode@@YIGPAEPAU_PNP_SYSTEM_DEVICE_NODE@@KGG@Z PROC ; BlPnpGetSystemDeviceNode, COMDAT
; _Handle$ = ecx
; _Node$ = edx

; 144  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 2c	 sub	 esp, 44			; 0000002cH
  00006	89 55 d4	 mov	 DWORD PTR _Node$[ebp], edx
  00009	89 4d d8	 mov	 DWORD PTR _Handle$[ebp], ecx

; 145  :     BL_LEGACY_CALL_CONTEXT Context;
; 146  : 
; 147  :     BLASSERT(NodeSize > 0);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _NodeSize$[ebp], 0
  00010	77 0f		 ja	 SHORT $LN4@BlPnpGetSy
  00012	ba 93 00 00 00	 mov	 edx, 147		; 00000093H
  00017	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_09CDGHECLD@blpnp?4cpp?$AA@
  0001c	e8 00 00 00 00	 call	 ?BlRtlAssertFailed@@YIXPBDK@Z ; BlRtlAssertFailed
$LN4@BlPnpGetSy:

; 148  : 
; 149  :     BLASSERT(NodeSize <= sizeof(BlPnpNodeData));

  00021	81 7d 08 00 10
	00 00		 cmp	 DWORD PTR _NodeSize$[ebp], 4096 ; 00001000H
  00028	76 0f		 jbe	 SHORT $LN3@BlPnpGetSy
  0002a	ba 95 00 00 00	 mov	 edx, 149		; 00000095H
  0002f	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_09CDGHECLD@blpnp?4cpp?$AA@
  00034	e8 00 00 00 00	 call	 ?BlRtlAssertFailed@@YIXPBDK@Z ; BlRtlAssertFailed
$LN3@BlPnpGetSy:

; 150  : 
; 151  :     BlPnpHandle = *Handle;

  00039	8b 45 d8	 mov	 eax, DWORD PTR _Handle$[ebp]
  0003c	8a 08		 mov	 cl, BYTE PTR [eax]
  0003e	88 0d 00 00 00
	00		 mov	 BYTE PTR ?BlPnpHandle@@3EA, cl ; BlPnpHandle

; 152  : 
; 153  :     BlPnpCallFrame[0] = 1;

  00044	66 c7 05 00 00
	00 00 01 00	 mov	 WORD PTR ?BlPnpCallFrame@@3PAGA, 1

; 154  :     BlRtlConvertLinearPointerToFarPointer(&BlPnpHandle, (PFAR_POINTER) &BlPnpCallFrame[1]);

  0004d	ba 02 00 00 00	 mov	 edx, OFFSET ?BlPnpCallFrame@@3PAGA+2
  00052	b9 00 00 00 00	 mov	 ecx, OFFSET ?BlPnpHandle@@3EA ; BlPnpHandle
  00057	e8 00 00 00 00	 call	 ?BlRtlConvertLinearPointerToFarPointer@@YIXPAXPAU_FAR_POINTER@@@Z ; BlRtlConvertLinearPointerToFarPointer

; 155  :     BlRtlConvertLinearPointerToFarPointer(BlPnpNodeData, (PFAR_POINTER) &BlPnpCallFrame[3]);

  0005c	ba 06 00 00 00	 mov	 edx, OFFSET ?BlPnpCallFrame@@3PAGA+6
  00061	b9 00 00 00 00	 mov	 ecx, OFFSET ?BlPnpNodeData@@3PAEA ; BlPnpNodeData
  00066	e8 00 00 00 00	 call	 ?BlRtlConvertLinearPointerToFarPointer@@YIXPAXPAU_FAR_POINTER@@@Z ; BlRtlConvertLinearPointerToFarPointer

; 156  :     BlPnpCallFrame[5] = Control;

  0006b	66 8b 55 0c	 mov	 dx, WORD PTR _Control$[ebp]
  0006f	66 89 15 0a 00
	00 00		 mov	 WORD PTR ?BlPnpCallFrame@@3PAGA+10, dx

; 157  :     BlPnpCallFrame[6] = BiosSelector;

  00076	66 8b 45 10	 mov	 ax, WORD PTR _BiosSelector$[ebp]
  0007a	66 a3 0c 00 00
	00		 mov	 WORD PTR ?BlPnpCallFrame@@3PAGA+12, ax

; 158  : 
; 159  :     BlRtlZeroMemory(&Context, sizeof(BL_LEGACY_CALL_CONTEXT));

  00080	ba 24 00 00 00	 mov	 edx, 36			; 00000024H
  00085	8d 4d dc	 lea	 ecx, DWORD PTR _Context$[ebp]
  00088	e8 00 00 00 00	 call	 ?BlRtlZeroMemory@@YIXPAXK@Z ; BlRtlZeroMemory

; 160  : 
; 161  :     BlRtlCallLegacyFunction(BlPnpBiosInformation->RealModeCodeSegment16,
; 162  :                             BlPnpBiosInformation->RealModeCodeOffset16,
; 163  :                             BlPnpCallFrame,
; 164  :                             7 * sizeof(UINT16),
; 165  :                             &Context,
; 166  :                             &Context);

  0008d	8d 4d dc	 lea	 ecx, DWORD PTR _Context$[ebp]
  00090	51		 push	 ecx
  00091	8d 55 dc	 lea	 edx, DWORD PTR _Context$[ebp]
  00094	52		 push	 edx
  00095	6a 0e		 push	 14			; 0000000eH
  00097	68 00 00 00 00	 push	 OFFSET ?BlPnpCallFrame@@3PAGA
  0009c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?BlPnpBiosInformation@@3PAU_PNP_INSTALLATION_CHECK@@A ; BlPnpBiosInformation
  000a1	66 8b 50 0d	 mov	 dx, WORD PTR [eax+13]
  000a5	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?BlPnpBiosInformation@@3PAU_PNP_INSTALLATION_CHECK@@A ; BlPnpBiosInformation
  000ab	66 8b 49 0f	 mov	 cx, WORD PTR [ecx+15]
  000af	e8 00 00 00 00	 call	 ?BlRtlCallLegacyFunction@@YIXGGPAXKPAU_BL_LEGACY_CALL_CONTEXT@@1@Z ; BlRtlCallLegacyFunction

; 167  : 
; 168  :     if ((PNP_STATUS) Context.eax == PNP_STATUS_SUCCESS) {

  000b4	0f b7 55 dc	 movzx	 edx, WORD PTR _Context$[ebp]
  000b8	85 d2		 test	 edx, edx
  000ba	75 3b		 jne	 SHORT $LN2@BlPnpGetSy

; 169  : 
; 170  :         *Handle = BlPnpHandle;

  000bc	8b 45 d8	 mov	 eax, DWORD PTR _Handle$[ebp]
  000bf	8a 0d 00 00 00
	00		 mov	 cl, BYTE PTR ?BlPnpHandle@@3EA ; BlPnpHandle
  000c5	88 08		 mov	 BYTE PTR [eax], cl

; 171  : 
; 172  :         BLASSERT(((PPNP_SYSTEM_DEVICE_NODE) BlPnpNodeData)->Size <= NodeSize);

  000c7	0f b7 15 00 00
	00 00		 movzx	 edx, WORD PTR ?BlPnpNodeData@@3PAEA
  000ce	3b 55 08	 cmp	 edx, DWORD PTR _NodeSize$[ebp]
  000d1	76 0f		 jbe	 SHORT $LN1@BlPnpGetSy
  000d3	ba ac 00 00 00	 mov	 edx, 172		; 000000acH
  000d8	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_09CDGHECLD@blpnp?4cpp?$AA@
  000dd	e8 00 00 00 00	 call	 ?BlRtlAssertFailed@@YIXPBDK@Z ; BlRtlAssertFailed
$LN1@BlPnpGetSy:

; 173  : 
; 174  :         BlRtlCopyMemory(Node,
; 175  :                         BlPnpNodeData,
; 176  :                         ((PPNP_SYSTEM_DEVICE_NODE) BlPnpNodeData)->Size);

  000e2	0f b7 05 00 00
	00 00		 movzx	 eax, WORD PTR ?BlPnpNodeData@@3PAEA
  000e9	50		 push	 eax
  000ea	ba 00 00 00 00	 mov	 edx, OFFSET ?BlPnpNodeData@@3PAEA ; BlPnpNodeData
  000ef	8b 4d d4	 mov	 ecx, DWORD PTR _Node$[ebp]
  000f2	e8 00 00 00 00	 call	 ?BlRtlCopyMemory@@YIXPAXPBXK@Z ; BlRtlCopyMemory
$LN2@BlPnpGetSy:

; 177  :     }
; 178  : 
; 179  :     return (PNP_STATUS) Context.eax;

  000f7	66 8b 45 dc	 mov	 ax, WORD PTR _Context$[ebp]

; 180  : }

  000fb	8b e5		 mov	 esp, ebp
  000fd	5d		 pop	 ebp
  000fe	c2 0c 00	 ret	 12			; 0000000cH
?BlPnpGetSystemDeviceNode@@YIGPAEPAU_PNP_SYSTEM_DEVICE_NODE@@KGG@Z ENDP ; BlPnpGetSystemDeviceNode
_TEXT	ENDS
PUBLIC	?BlPnpGetIsaConfiguration@@YIGPAU_PNP_ISA_CONFIGURATION@@G@Z ; BlPnpGetIsaConfiguration
; Function compile flags: /Odtp
;	COMDAT ?BlPnpGetIsaConfiguration@@YIGPAU_PNP_ISA_CONFIGURATION@@G@Z
_TEXT	SEGMENT
_BiosSelector$ = -44					; size = 2
_IsaConfiguration$ = -40				; size = 4
_Context$ = -36						; size = 36
?BlPnpGetIsaConfiguration@@YIGPAU_PNP_ISA_CONFIGURATION@@G@Z PROC ; BlPnpGetIsaConfiguration, COMDAT
; _IsaConfiguration$ = ecx
; _BiosSelector$ = dx

; 206  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 2c	 sub	 esp, 44			; 0000002cH
  00006	66 89 55 d4	 mov	 WORD PTR _BiosSelector$[ebp], dx
  0000a	89 4d d8	 mov	 DWORD PTR _IsaConfiguration$[ebp], ecx

; 207  :     BL_LEGACY_CALL_CONTEXT Context;
; 208  : 
; 209  :     BlRtlZeroMemory(IsaConfiguration, sizeof(PNP_ISA_CONFIGURATION));

  0000d	ba 06 00 00 00	 mov	 edx, 6
  00012	8b 4d d8	 mov	 ecx, DWORD PTR _IsaConfiguration$[ebp]
  00015	e8 00 00 00 00	 call	 ?BlRtlZeroMemory@@YIXPAXK@Z ; BlRtlZeroMemory

; 210  : 
; 211  :     IsaConfiguration->Revision = 1;

  0001a	8b 45 d8	 mov	 eax, DWORD PTR _IsaConfiguration$[ebp]
  0001d	c6 00 01	 mov	 BYTE PTR [eax], 1

; 212  : 
; 213  :     BlPnpCallFrame[0] = 0x40;

  00020	66 c7 05 00 00
	00 00 40 00	 mov	 WORD PTR ?BlPnpCallFrame@@3PAGA, 64 ; 00000040H

; 214  :     BlRtlConvertLinearPointerToFarPointer(IsaConfiguration, (PFAR_POINTER) &BlPnpCallFrame[1]);

  00029	ba 02 00 00 00	 mov	 edx, OFFSET ?BlPnpCallFrame@@3PAGA+2
  0002e	8b 4d d8	 mov	 ecx, DWORD PTR _IsaConfiguration$[ebp]
  00031	e8 00 00 00 00	 call	 ?BlRtlConvertLinearPointerToFarPointer@@YIXPAXPAU_FAR_POINTER@@@Z ; BlRtlConvertLinearPointerToFarPointer

; 215  :     BlPnpCallFrame[3] = BiosSelector;

  00036	66 8b 4d d4	 mov	 cx, WORD PTR _BiosSelector$[ebp]
  0003a	66 89 0d 06 00
	00 00		 mov	 WORD PTR ?BlPnpCallFrame@@3PAGA+6, cx

; 216  : 
; 217  :     BlRtlZeroMemory(&Context, sizeof(BL_LEGACY_CALL_CONTEXT));

  00041	ba 24 00 00 00	 mov	 edx, 36			; 00000024H
  00046	8d 4d dc	 lea	 ecx, DWORD PTR _Context$[ebp]
  00049	e8 00 00 00 00	 call	 ?BlRtlZeroMemory@@YIXPAXK@Z ; BlRtlZeroMemory

; 218  : 
; 219  :     BlRtlCallLegacyFunction(BlPnpBiosInformation->RealModeCodeSegment16,
; 220  :                             BlPnpBiosInformation->RealModeCodeOffset16,
; 221  :                             BlPnpCallFrame,
; 222  :                             4 * sizeof(UINT16),
; 223  :                             &Context,
; 224  :                             &Context);

  0004e	8d 55 dc	 lea	 edx, DWORD PTR _Context$[ebp]
  00051	52		 push	 edx
  00052	8d 45 dc	 lea	 eax, DWORD PTR _Context$[ebp]
  00055	50		 push	 eax
  00056	6a 08		 push	 8
  00058	68 00 00 00 00	 push	 OFFSET ?BlPnpCallFrame@@3PAGA
  0005d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?BlPnpBiosInformation@@3PAU_PNP_INSTALLATION_CHECK@@A ; BlPnpBiosInformation
  00063	66 8b 51 0d	 mov	 dx, WORD PTR [ecx+13]
  00067	a1 00 00 00 00	 mov	 eax, DWORD PTR ?BlPnpBiosInformation@@3PAU_PNP_INSTALLATION_CHECK@@A ; BlPnpBiosInformation
  0006c	66 8b 48 0f	 mov	 cx, WORD PTR [eax+15]
  00070	e8 00 00 00 00	 call	 ?BlRtlCallLegacyFunction@@YIXGGPAXKPAU_BL_LEGACY_CALL_CONTEXT@@1@Z ; BlRtlCallLegacyFunction

; 225  : 
; 226  :     return (PNP_STATUS) Context.eax;

  00075	66 8b 45 dc	 mov	 ax, WORD PTR _Context$[ebp]

; 227  : }

  00079	8b e5		 mov	 esp, ebp
  0007b	5d		 pop	 ebp
  0007c	c3		 ret	 0
?BlPnpGetIsaConfiguration@@YIGPAU_PNP_ISA_CONFIGURATION@@G@Z ENDP ; BlPnpGetIsaConfiguration
_TEXT	ENDS
PUBLIC	?BlPnpLocateBios@@YIPAU_PNP_INSTALLATION_CHECK@@XZ ; BlPnpLocateBios
EXTRN	?BlRtlComputeChecksum8@@YIEPBXK@Z:PROC		; BlRtlComputeChecksum8
; Function compile flags: /Odtp
;	COMDAT ?BlPnpLocateBios@@YIPAU_PNP_INSTALLATION_CHECK@@XZ
_TEXT	SEGMENT
_End$ = -12						; size = 4
_Pnp$ = -8						; size = 4
_Start$ = -4						; size = 4
?BlPnpLocateBios@@YIPAU_PNP_INSTALLATION_CHECK@@XZ PROC	; BlPnpLocateBios, COMDAT

; 247  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 248  :     ULONG_PTR End;
; 249  :     PPNP_INSTALLATION_CHECK Pnp;
; 250  :     ULONG_PTR Start;
; 251  : 
; 252  :     Start = 0xF0000;

  00006	c7 45 fc 00 00
	0f 00		 mov	 DWORD PTR _Start$[ebp], 983040 ; 000f0000H

; 253  :     End = 0x100000;

  0000d	c7 45 f4 00 00
	10 00		 mov	 DWORD PTR _End$[ebp], 1048576 ; 00100000H
$LN3@BlPnpLocat:

; 254  : 
; 255  :     while (Start != End) {

  00014	8b 45 fc	 mov	 eax, DWORD PTR _Start$[ebp]
  00017	3b 45 f4	 cmp	 eax, DWORD PTR _End$[ebp]
  0001a	74 73		 je	 SHORT $LN2@BlPnpLocat

; 256  : 
; 257  :         Pnp = (PPNP_INSTALLATION_CHECK) Start;

  0001c	8b 4d fc	 mov	 ecx, DWORD PTR _Start$[ebp]
  0001f	89 4d f8	 mov	 DWORD PTR _Pnp$[ebp], ecx

; 258  : 
; 259  :         if ((Pnp->Signature[0] == '$') &&
; 260  :             (Pnp->Signature[1] == 'P') &&
; 261  :             (Pnp->Signature[2] == 'n') &&
; 262  :             (Pnp->Signature[3] == 'P') &&
; 263  :             (Pnp->Version == 0x10) &&
; 264  :             (Pnp->Length == 0x21) &&
; 265  :             (BlRtlComputeChecksum8(Pnp, Pnp->Length) == 0)
; 266  :             ) {

  00022	8b 55 f8	 mov	 edx, DWORD PTR _Pnp$[ebp]
  00025	0f be 02	 movsx	 eax, BYTE PTR [edx]
  00028	83 f8 24	 cmp	 eax, 36			; 00000024H
  0002b	75 57		 jne	 SHORT $LN1@BlPnpLocat
  0002d	8b 4d f8	 mov	 ecx, DWORD PTR _Pnp$[ebp]
  00030	0f be 51 01	 movsx	 edx, BYTE PTR [ecx+1]
  00034	83 fa 50	 cmp	 edx, 80			; 00000050H
  00037	75 4b		 jne	 SHORT $LN1@BlPnpLocat
  00039	8b 45 f8	 mov	 eax, DWORD PTR _Pnp$[ebp]
  0003c	0f be 48 02	 movsx	 ecx, BYTE PTR [eax+2]
  00040	83 f9 6e	 cmp	 ecx, 110		; 0000006eH
  00043	75 3f		 jne	 SHORT $LN1@BlPnpLocat
  00045	8b 55 f8	 mov	 edx, DWORD PTR _Pnp$[ebp]
  00048	0f be 42 03	 movsx	 eax, BYTE PTR [edx+3]
  0004c	83 f8 50	 cmp	 eax, 80			; 00000050H
  0004f	75 33		 jne	 SHORT $LN1@BlPnpLocat
  00051	8b 4d f8	 mov	 ecx, DWORD PTR _Pnp$[ebp]
  00054	0f b6 51 04	 movzx	 edx, BYTE PTR [ecx+4]
  00058	83 fa 10	 cmp	 edx, 16			; 00000010H
  0005b	75 27		 jne	 SHORT $LN1@BlPnpLocat
  0005d	8b 45 f8	 mov	 eax, DWORD PTR _Pnp$[ebp]
  00060	0f b6 48 05	 movzx	 ecx, BYTE PTR [eax+5]
  00064	83 f9 21	 cmp	 ecx, 33			; 00000021H
  00067	75 1b		 jne	 SHORT $LN1@BlPnpLocat
  00069	8b 55 f8	 mov	 edx, DWORD PTR _Pnp$[ebp]
  0006c	0f b6 52 05	 movzx	 edx, BYTE PTR [edx+5]
  00070	8b 4d f8	 mov	 ecx, DWORD PTR _Pnp$[ebp]
  00073	e8 00 00 00 00	 call	 ?BlRtlComputeChecksum8@@YIEPBXK@Z ; BlRtlComputeChecksum8
  00078	0f b6 c0	 movzx	 eax, al
  0007b	85 c0		 test	 eax, eax
  0007d	75 05		 jne	 SHORT $LN1@BlPnpLocat

; 267  : 
; 268  :             return Pnp;

  0007f	8b 45 f8	 mov	 eax, DWORD PTR _Pnp$[ebp]
  00082	eb 0d		 jmp	 SHORT $LN4@BlPnpLocat
$LN1@BlPnpLocat:

; 269  :         }
; 270  : 
; 271  :         Start += 16;

  00084	8b 4d fc	 mov	 ecx, DWORD PTR _Start$[ebp]
  00087	83 c1 10	 add	 ecx, 16			; 00000010H
  0008a	89 4d fc	 mov	 DWORD PTR _Start$[ebp], ecx

; 272  :     }

  0008d	eb 85		 jmp	 SHORT $LN3@BlPnpLocat
$LN2@BlPnpLocat:

; 273  : 
; 274  :     return NULL;

  0008f	33 c0		 xor	 eax, eax
$LN4@BlPnpLocat:

; 275  : }

  00091	8b e5		 mov	 esp, ebp
  00093	5d		 pop	 ebp
  00094	c3		 ret	 0
?BlPnpLocateBios@@YIPAU_PNP_INSTALLATION_CHECK@@XZ ENDP	; BlPnpLocateBios
_TEXT	ENDS
PUBLIC	??_C@_0DH@ODPGOPBA@PNP?3?5BlPnpGetSystemDeviceNode?5fa@ ; `string'
PUBLIC	?BlPnpInitialize@@YIXXZ				; BlPnpInitialize
EXTRN	?BlRtlHaltInternal@@YIXPBDK@Z:PROC		; BlRtlHaltInternal
EXTRN	?BlRtlPrintf@@YAEPBDZZ:PROC			; BlRtlPrintf
EXTRN	?BlPoolFreeBlock@@YIXPAX@Z:PROC			; BlPoolFreeBlock
EXTRN	?BlPoolAllocateBlock@@YIPAXK@Z:PROC		; BlPoolAllocateBlock
;	COMDAT ??_C@_0DH@ODPGOPBA@PNP?3?5BlPnpGetSystemDeviceNode?5fa@
CONST	SEGMENT
??_C@_0DH@ODPGOPBA@PNP?3?5BlPnpGetSystemDeviceNode?5fa@ DB 'PNP: BlPnpGet'
	DB	'SystemDeviceNode failed with error %04x.', 0aH, 00H ; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT ?BlPnpInitialize@@YIXXZ
_TEXT	SEGMENT
_Pnp$ = -28						; size = 4
_Node$ = -24						; size = 4
_Result$ = -20						; size = 2
_Handle$ = -13						; size = 1
_NodeSize$ = -12					; size = 4
_NumberOfNodes$ = -5					; size = 1
_NodeListSize$ = -4					; size = 4
?BlPnpInitialize@@YIXXZ PROC				; BlPnpInitialize, COMDAT

; 290  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH

; 291  :     UINT8 Handle;
; 292  :     PPNP_SYSTEM_DEVICE_NODE Node;
; 293  :     UINT32 NodeListSize;
; 294  :     UINT32 NodeSize;
; 295  :     UINT8 NumberOfNodes;
; 296  :     PPNP_INSTALLATION_CHECK Pnp;
; 297  :     PNP_STATUS Result;
; 298  : 
; 299  :     //
; 300  :     // Initialize empty node list.
; 301  :     //
; 302  : 
; 303  :     BlPnpSystemDeviceNodeList = NULL;

  00006	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?BlPnpSystemDeviceNodeList@@3PAU_PNP_SYSTEM_DEVICE_NODE@@A, 0 ; BlPnpSystemDeviceNodeList

; 304  :     BlPnpSystemDeviceNodeListSize = 0;

  00010	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?BlPnpSystemDeviceNodeListSize@@3KA, 0 ; BlPnpSystemDeviceNodeListSize

; 305  : 
; 306  :     //
; 307  :     // Locate PNP BIOS.
; 308  :     //
; 309  : 
; 310  :     Pnp = BlPnpLocateBios();

  0001a	e8 00 00 00 00	 call	 ?BlPnpLocateBios@@YIPAU_PNP_INSTALLATION_CHECK@@XZ ; BlPnpLocateBios
  0001f	89 45 e4	 mov	 DWORD PTR _Pnp$[ebp], eax

; 311  : 
; 312  :     if (Pnp == NULL) {

  00022	83 7d e4 00	 cmp	 DWORD PTR _Pnp$[ebp], 0
  00026	75 05		 jne	 SHORT $LN11@BlPnpIniti

; 313  : 
; 314  : #if PNP_VERBOSE
; 315  : 
; 316  :         BlRtlPrintf("PNP: PNP BIOS not found!\n");
; 317  : 
; 318  : #endif
; 319  : 
; 320  :         return;

  00028	e9 5a 01 00 00	 jmp	 $LN12@BlPnpIniti
$LN11@BlPnpIniti:

; 321  :     }
; 322  : 
; 323  : #if PNP_VERBOSE
; 324  : 
; 325  :     BlRtlPrintf("PNP: PNP BIOS detected @ %p\n", Pnp);
; 326  : 
; 327  : #endif
; 328  : 
; 329  :     BlPnpBiosInformation = Pnp;

  0002d	8b 45 e4	 mov	 eax, DWORD PTR _Pnp$[ebp]
  00030	a3 00 00 00 00	 mov	 DWORD PTR ?BlPnpBiosInformation@@3PAU_PNP_INSTALLATION_CHECK@@A, eax ; BlPnpBiosInformation

; 330  : 
; 331  : #if PNP_VERBOSE
; 332  : 
; 333  :     BlRtlPrintf("PNP:   Real-Mode Code: %04x:%04x\n",
; 334  :                 Pnp->RealModeCodeSegment16,
; 335  :                 Pnp->RealModeCodeOffset16);
; 336  : 
; 337  :     BlRtlPrintf("PNP:   Real-Mode Data: %04x:\n", Pnp->RealModeDataSegment16);
; 338  : 
; 339  : #endif
; 340  : 
; 341  :     //
; 342  :     // Build PNP system device node list.
; 343  :     //
; 344  : 
; 345  :     Result = BlPnpGetNumberOfSystemDeviceNodes(&NumberOfNodes,
; 346  :                                                &NodeSize,
; 347  :                                                Pnp->RealModeDataSegment16);

  00035	8b 4d e4	 mov	 ecx, DWORD PTR _Pnp$[ebp]
  00038	66 8b 51 1b	 mov	 dx, WORD PTR [ecx+27]
  0003c	52		 push	 edx
  0003d	8d 55 f4	 lea	 edx, DWORD PTR _NodeSize$[ebp]
  00040	8d 4d fb	 lea	 ecx, DWORD PTR _NumberOfNodes$[ebp]
  00043	e8 00 00 00 00	 call	 ?BlPnpGetNumberOfSystemDeviceNodes@@YIGPAEPAKG@Z ; BlPnpGetNumberOfSystemDeviceNodes
  00048	66 89 45 ec	 mov	 WORD PTR _Result$[ebp], ax

; 348  : 
; 349  :     if (Result != PNP_STATUS_SUCCESS) {

  0004c	0f b7 45 ec	 movzx	 eax, WORD PTR _Result$[ebp]
  00050	85 c0		 test	 eax, eax
  00052	74 05		 je	 SHORT $LN10@BlPnpIniti

; 350  : 
; 351  : #if PNP_VERBOSE
; 352  : 
; 353  :         BlRtlPrintf("PNP: BlPnpGetNumberOfSystemDeviceNodes failed with error %04x.\n", Result);
; 354  : 
; 355  : #endif
; 356  : 
; 357  :         return;

  00054	e9 2e 01 00 00	 jmp	 $LN12@BlPnpIniti
$LN10@BlPnpIniti:

; 358  :     }
; 359  : 
; 360  : #if PNP_VERBOSE
; 361  : 
; 362  :     BlRtlPrintf("PNP: %u node(s), %u bytes in largest node.\n",
; 363  :                 NumberOfNodes,
; 364  :                 NodeSize);
; 365  : 
; 366  : #endif
; 367  : 
; 368  :     if (NumberOfNodes == 0) {

  00059	0f b6 4d fb	 movzx	 ecx, BYTE PTR _NumberOfNodes$[ebp]
  0005d	85 c9		 test	 ecx, ecx
  0005f	75 05		 jne	 SHORT $LN9@BlPnpIniti

; 369  :         return;

  00061	e9 21 01 00 00	 jmp	 $LN12@BlPnpIniti
$LN9@BlPnpIniti:

; 370  :     }
; 371  : 
; 372  :     Node = (PPNP_SYSTEM_DEVICE_NODE) BlPoolAllocateBlock(NodeSize);

  00066	8b 4d f4	 mov	 ecx, DWORD PTR _NodeSize$[ebp]
  00069	e8 00 00 00 00	 call	 ?BlPoolAllocateBlock@@YIPAXK@Z ; BlPoolAllocateBlock
  0006e	89 45 e8	 mov	 DWORD PTR _Node$[ebp], eax

; 373  : 
; 374  :     NodeListSize = 0;

  00071	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _NodeListSize$[ebp], 0

; 375  : 
; 376  :     Handle = 0;

  00078	c6 45 f3 00	 mov	 BYTE PTR _Handle$[ebp], 0
$LN8@BlPnpIniti:

; 377  : 
; 378  :     for (;;) {
; 379  : 
; 380  :         BlRtlZeroMemory(Node, sizeof(*Node));

  0007c	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  00081	8b 4d e8	 mov	 ecx, DWORD PTR _Node$[ebp]
  00084	e8 00 00 00 00	 call	 ?BlRtlZeroMemory@@YIXPAXK@Z ; BlRtlZeroMemory

; 381  : 
; 382  :         Result = BlPnpGetSystemDeviceNode(&Handle,
; 383  :                                           Node,
; 384  :                                           NodeSize,
; 385  :                                           1,
; 386  :                                           Pnp->RealModeDataSegment16);

  00089	8b 55 e4	 mov	 edx, DWORD PTR _Pnp$[ebp]
  0008c	66 8b 42 1b	 mov	 ax, WORD PTR [edx+27]
  00090	50		 push	 eax
  00091	6a 01		 push	 1
  00093	8b 4d f4	 mov	 ecx, DWORD PTR _NodeSize$[ebp]
  00096	51		 push	 ecx
  00097	8b 55 e8	 mov	 edx, DWORD PTR _Node$[ebp]
  0009a	8d 4d f3	 lea	 ecx, DWORD PTR _Handle$[ebp]
  0009d	e8 00 00 00 00	 call	 ?BlPnpGetSystemDeviceNode@@YIGPAEPAU_PNP_SYSTEM_DEVICE_NODE@@KGG@Z ; BlPnpGetSystemDeviceNode
  000a2	66 89 45 ec	 mov	 WORD PTR _Result$[ebp], ax

; 387  : 
; 388  :         if (Result != PNP_STATUS_SUCCESS) {

  000a6	0f b7 55 ec	 movzx	 edx, WORD PTR _Result$[ebp]
  000aa	85 d2		 test	 edx, edx
  000ac	74 0d		 je	 SHORT $LN6@BlPnpIniti

; 389  : 
; 390  : #if PNP_VERBOSE
; 391  : 
; 392  :             BlRtlPrintf("PNP: BlPnpGetSystemDeviceNode failed with error %04x.\n", Result);
; 393  : 
; 394  : #endif
; 395  : 
; 396  :             BlPoolFreeBlock(Node);

  000ae	8b 4d e8	 mov	 ecx, DWORD PTR _Node$[ebp]
  000b1	e8 00 00 00 00	 call	 ?BlPoolFreeBlock@@YIXPAX@Z ; BlPoolFreeBlock

; 397  : 
; 398  :             return;

  000b6	e9 cc 00 00 00	 jmp	 $LN12@BlPnpIniti
$LN6@BlPnpIniti:

; 399  :         }
; 400  : 
; 401  :         NodeListSize += Node->Size;

  000bb	8b 45 e8	 mov	 eax, DWORD PTR _Node$[ebp]
  000be	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  000c1	03 4d fc	 add	 ecx, DWORD PTR _NodeListSize$[ebp]
  000c4	89 4d fc	 mov	 DWORD PTR _NodeListSize$[ebp], ecx

; 402  : 
; 403  :         if (Handle == PNP_NO_MORE_NODES) {

  000c7	0f b6 55 f3	 movzx	 edx, BYTE PTR _Handle$[ebp]
  000cb	81 fa ff 00 00
	00		 cmp	 edx, 255		; 000000ffH
  000d1	75 02		 jne	 SHORT $LN5@BlPnpIniti

; 404  : 
; 405  :             break;

  000d3	eb 02		 jmp	 SHORT $LN7@BlPnpIniti
$LN5@BlPnpIniti:

; 406  :         }
; 407  :     }

  000d5	eb a5		 jmp	 SHORT $LN8@BlPnpIniti
$LN7@BlPnpIniti:

; 408  : 
; 409  :     BlPnpSystemDeviceNodeList = (PPNP_SYSTEM_DEVICE_NODE)BlPoolAllocateBlock(NodeListSize);

  000d7	8b 4d fc	 mov	 ecx, DWORD PTR _NodeListSize$[ebp]
  000da	e8 00 00 00 00	 call	 ?BlPoolAllocateBlock@@YIPAXK@Z ; BlPoolAllocateBlock
  000df	a3 00 00 00 00	 mov	 DWORD PTR ?BlPnpSystemDeviceNodeList@@3PAU_PNP_SYSTEM_DEVICE_NODE@@A, eax ; BlPnpSystemDeviceNodeList

; 410  :     BlPnpSystemDeviceNodeListSize = NodeListSize;

  000e4	8b 45 fc	 mov	 eax, DWORD PTR _NodeListSize$[ebp]
  000e7	a3 00 00 00 00	 mov	 DWORD PTR ?BlPnpSystemDeviceNodeListSize@@3KA, eax ; BlPnpSystemDeviceNodeListSize

; 411  : 
; 412  :     Node = BlPnpSystemDeviceNodeList;

  000ec	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?BlPnpSystemDeviceNodeList@@3PAU_PNP_SYSTEM_DEVICE_NODE@@A ; BlPnpSystemDeviceNodeList
  000f2	89 4d e8	 mov	 DWORD PTR _Node$[ebp], ecx

; 413  : 
; 414  :     Handle = 0;

  000f5	c6 45 f3 00	 mov	 BYTE PTR _Handle$[ebp], 0
$LN4@BlPnpIniti:

; 415  : 
; 416  :     for (;;) {
; 417  : 
; 418  :         BlRtlZeroMemory(Node, sizeof(*Node));

  000f9	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  000fe	8b 4d e8	 mov	 ecx, DWORD PTR _Node$[ebp]
  00101	e8 00 00 00 00	 call	 ?BlRtlZeroMemory@@YIXPAXK@Z ; BlRtlZeroMemory

; 419  : 
; 420  :         Result = BlPnpGetSystemDeviceNode(&Handle,
; 421  :                                           Node,
; 422  :                                           NodeSize,
; 423  :                                           1,
; 424  :                                           Pnp->RealModeDataSegment16);

  00106	8b 55 e4	 mov	 edx, DWORD PTR _Pnp$[ebp]
  00109	66 8b 42 1b	 mov	 ax, WORD PTR [edx+27]
  0010d	50		 push	 eax
  0010e	6a 01		 push	 1
  00110	8b 4d f4	 mov	 ecx, DWORD PTR _NodeSize$[ebp]
  00113	51		 push	 ecx
  00114	8b 55 e8	 mov	 edx, DWORD PTR _Node$[ebp]
  00117	8d 4d f3	 lea	 ecx, DWORD PTR _Handle$[ebp]
  0011a	e8 00 00 00 00	 call	 ?BlPnpGetSystemDeviceNode@@YIGPAEPAU_PNP_SYSTEM_DEVICE_NODE@@KGG@Z ; BlPnpGetSystemDeviceNode
  0011f	66 89 45 ec	 mov	 WORD PTR _Result$[ebp], ax

; 425  : 
; 426  :         if (Result != PNP_STATUS_SUCCESS) {

  00123	0f b7 55 ec	 movzx	 edx, WORD PTR _Result$[ebp]
  00127	85 d2		 test	 edx, edx
  00129	74 21		 je	 SHORT $LN2@BlPnpIniti

; 427  : 
; 428  :             BlRtlPrintf("PNP: BlPnpGetSystemDeviceNode failed with error %04x.\n", Result);

  0012b	0f b7 45 ec	 movzx	 eax, WORD PTR _Result$[ebp]
  0012f	50		 push	 eax
  00130	68 00 00 00 00	 push	 OFFSET ??_C@_0DH@ODPGOPBA@PNP?3?5BlPnpGetSystemDeviceNode?5fa@
  00135	e8 00 00 00 00	 call	 ?BlRtlPrintf@@YAEPBDZZ	; BlRtlPrintf
  0013a	83 c4 08	 add	 esp, 8

; 429  :             BlRtlHalt();

  0013d	ba ad 01 00 00	 mov	 edx, 429		; 000001adH
  00142	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_09CDGHECLD@blpnp?4cpp?$AA@
  00147	e8 00 00 00 00	 call	 ?BlRtlHaltInternal@@YIXPBDK@Z ; BlRtlHaltInternal
$LN2@BlPnpIniti:

; 430  :         }
; 431  : 
; 432  :         if (Handle == PNP_NO_MORE_NODES) {

  0014c	0f b6 4d f3	 movzx	 ecx, BYTE PTR _Handle$[ebp]
  00150	81 f9 ff 00 00
	00		 cmp	 ecx, 255		; 000000ffH
  00156	75 02		 jne	 SHORT $LN1@BlPnpIniti

; 433  : 
; 434  :             break;

  00158	eb 1c		 jmp	 SHORT $LN3@BlPnpIniti
$LN1@BlPnpIniti:

; 435  :         }
; 436  : 
; 437  :         Node = (PPNP_SYSTEM_DEVICE_NODE) (((ULONG_PTR) Node) + Node->Size);

  0015a	8b 55 e8	 mov	 edx, DWORD PTR _Node$[ebp]
  0015d	0f b7 02	 movzx	 eax, WORD PTR [edx]
  00160	03 45 e8	 add	 eax, DWORD PTR _Node$[ebp]
  00163	89 45 e8	 mov	 DWORD PTR _Node$[ebp], eax

; 438  :         NodeSize -= Node->Size;

  00166	8b 4d e8	 mov	 ecx, DWORD PTR _Node$[ebp]
  00169	0f b7 11	 movzx	 edx, WORD PTR [ecx]
  0016c	8b 45 f4	 mov	 eax, DWORD PTR _NodeSize$[ebp]
  0016f	2b c2		 sub	 eax, edx
  00171	89 45 f4	 mov	 DWORD PTR _NodeSize$[ebp], eax

; 439  :     }

  00174	eb 83		 jmp	 SHORT $LN4@BlPnpIniti
$LN3@BlPnpIniti:

; 440  : 
; 441  : #if PNP_VERBOSE
; 442  : 
; 443  :     BlRtlPrintf("PNP: DeviceNodeList: %p ... %p\n",
; 444  :                 BlPnpSystemDeviceNodeList,
; 445  :                 (ULONG_PTR) BlPnpSystemDeviceNodeList + BlPnpSystemDeviceNodeListSize - 1);
; 446  : 
; 447  : #endif
; 448  : 
; 449  :     //
; 450  :     // Query PNP ISA configuration.
; 451  :     //
; 452  : 
; 453  :     BlPnpGetIsaConfiguration(&BlPnpIsaConfiguration, Pnp->RealModeDataSegment16);

  00176	8b 4d e4	 mov	 ecx, DWORD PTR _Pnp$[ebp]
  00179	66 8b 51 1b	 mov	 dx, WORD PTR [ecx+27]
  0017d	b9 00 00 00 00	 mov	 ecx, OFFSET ?BlPnpIsaConfiguration@@3U_PNP_ISA_CONFIGURATION@@A ; BlPnpIsaConfiguration
  00182	e8 00 00 00 00	 call	 ?BlPnpGetIsaConfiguration@@YIGPAU_PNP_ISA_CONFIGURATION@@G@Z ; BlPnpGetIsaConfiguration
$LN12@BlPnpIniti:

; 454  : 
; 455  : #if PNP_VERBOSE
; 456  : 
; 457  :     BlRtlPrintf("PNP: ISA Configuration:\n"
; 458  :                 "PNP:   Revision                 : %u\n"
; 459  :                 "PNP:   # of Card Select Numbers : %u\n"
; 460  :                 "PNP:   Data read port           : %04x\n",
; 461  :                 BlPnpIsaConfiguration.Revision,
; 462  :                 BlPnpIsaConfiguration.NumberOfCardSelectNumbers,
; 463  :                 BlPnpIsaConfiguration.DataReadPort);
; 464  : 
; 465  : #endif
; 466  : 
; 467  :     return;
; 468  : }

  00187	8b e5		 mov	 esp, ebp
  00189	5d		 pop	 ebp
  0018a	c3		 ret	 0
?BlPnpInitialize@@YIXXZ ENDP				; BlPnpInitialize
_TEXT	ENDS
END
