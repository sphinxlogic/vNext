; Listing generated by Microsoft (R) Optimizing Compiler Version 14.00.50727.762 

	TITLE	D:\OSes\VERVE\verify\src\Trusted\BootLoader\SingLdrPc\blmps.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?BlMpsFps@@3PAXA				; BlMpsFps
_BSS	SEGMENT
?BlMpsFps@@3PAXA DD 01H DUP (?)				; BlMpsFps
_BSS	ENDS
PUBLIC	?BlMpsLocateFpsInRange@@YIPAU_MPS_FPS@@KK@Z	; BlMpsLocateFpsInRange
EXTRN	?BlRtlComputeChecksum8@@YIEPBXK@Z:PROC		; BlRtlComputeChecksum8
; Function compile flags: /Odtp
; File d:\oses\verve\verify\src\trusted\bootloader\singldrpc\blmps.cpp
;	COMDAT ?BlMpsLocateFpsInRange@@YIPAU_MPS_FPS@@KK@Z
_TEXT	SEGMENT
_End$ = -12						; size = 4
_Start$ = -8						; size = 4
_Fps$ = -4						; size = 4
?BlMpsLocateFpsInRange@@YIPAU_MPS_FPS@@KK@Z PROC	; BlMpsLocateFpsInRange, COMDAT
; _Start$ = ecx
; _End$ = edx

; 60   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 55 f4	 mov	 DWORD PTR _End$[ebp], edx
  00009	89 4d f8	 mov	 DWORD PTR _Start$[ebp], ecx

; 61   :     PMPS_FPS Fps;
; 62   : 
; 63   :     Start = ROUND_UP_TO_POWER2(Start, 16);

  0000c	8b 45 f8	 mov	 eax, DWORD PTR _Start$[ebp]
  0000f	83 c0 0f	 add	 eax, 15			; 0000000fH
  00012	83 e0 f0	 and	 eax, -16		; fffffff0H
  00015	89 45 f8	 mov	 DWORD PTR _Start$[ebp], eax

; 64   :     End &= ~((ULONG_PTR) 15);

  00018	8b 4d f4	 mov	 ecx, DWORD PTR _End$[ebp]
  0001b	83 e1 f0	 and	 ecx, -16		; fffffff0H
  0001e	89 4d f4	 mov	 DWORD PTR _End$[ebp], ecx
$LN3@BlMpsLocat:

; 65   : 
; 66   :     while (Start < End) {

  00021	8b 55 f8	 mov	 edx, DWORD PTR _Start$[ebp]
  00024	3b 55 f4	 cmp	 edx, DWORD PTR _End$[ebp]
  00027	73 5e		 jae	 SHORT $LN2@BlMpsLocat

; 67   : 
; 68   :         Fps = (PMPS_FPS) Start;

  00029	8b 45 f8	 mov	 eax, DWORD PTR _Start$[ebp]
  0002c	89 45 fc	 mov	 DWORD PTR _Fps$[ebp], eax

; 69   : 
; 70   :         if ((Fps->Signature[0] == '_') &&
; 71   :             (Fps->Signature[1] == 'M') &&
; 72   :             (Fps->Signature[2] == 'P') &&
; 73   :             (Fps->Signature[3] == '_') &&
; 74   :             (BlRtlComputeChecksum8(Fps, Fps->Length * 16) == 0)) {

  0002f	8b 4d fc	 mov	 ecx, DWORD PTR _Fps$[ebp]
  00032	0f be 11	 movsx	 edx, BYTE PTR [ecx]
  00035	83 fa 5f	 cmp	 edx, 95			; 0000005fH
  00038	75 42		 jne	 SHORT $LN1@BlMpsLocat
  0003a	8b 45 fc	 mov	 eax, DWORD PTR _Fps$[ebp]
  0003d	0f be 48 01	 movsx	 ecx, BYTE PTR [eax+1]
  00041	83 f9 4d	 cmp	 ecx, 77			; 0000004dH
  00044	75 36		 jne	 SHORT $LN1@BlMpsLocat
  00046	8b 55 fc	 mov	 edx, DWORD PTR _Fps$[ebp]
  00049	0f be 42 02	 movsx	 eax, BYTE PTR [edx+2]
  0004d	83 f8 50	 cmp	 eax, 80			; 00000050H
  00050	75 2a		 jne	 SHORT $LN1@BlMpsLocat
  00052	8b 4d fc	 mov	 ecx, DWORD PTR _Fps$[ebp]
  00055	0f be 51 03	 movsx	 edx, BYTE PTR [ecx+3]
  00059	83 fa 5f	 cmp	 edx, 95			; 0000005fH
  0005c	75 1e		 jne	 SHORT $LN1@BlMpsLocat
  0005e	8b 45 fc	 mov	 eax, DWORD PTR _Fps$[ebp]
  00061	0f b6 50 08	 movzx	 edx, BYTE PTR [eax+8]
  00065	c1 e2 04	 shl	 edx, 4
  00068	8b 4d fc	 mov	 ecx, DWORD PTR _Fps$[ebp]
  0006b	e8 00 00 00 00	 call	 ?BlRtlComputeChecksum8@@YIEPBXK@Z ; BlRtlComputeChecksum8
  00070	0f b6 c8	 movzx	 ecx, al
  00073	85 c9		 test	 ecx, ecx
  00075	75 05		 jne	 SHORT $LN1@BlMpsLocat

; 75   : 
; 76   :             return Fps;

  00077	8b 45 fc	 mov	 eax, DWORD PTR _Fps$[ebp]
  0007a	eb 0d		 jmp	 SHORT $LN4@BlMpsLocat
$LN1@BlMpsLocat:

; 77   :         }
; 78   : 
; 79   :         Start += 16;

  0007c	8b 55 f8	 mov	 edx, DWORD PTR _Start$[ebp]
  0007f	83 c2 10	 add	 edx, 16			; 00000010H
  00082	89 55 f8	 mov	 DWORD PTR _Start$[ebp], edx

; 80   :     }

  00085	eb 9a		 jmp	 SHORT $LN3@BlMpsLocat
$LN2@BlMpsLocat:

; 81   : 
; 82   :     return NULL;

  00087	33 c0		 xor	 eax, eax
$LN4@BlMpsLocat:

; 83   : }

  00089	8b e5		 mov	 esp, ebp
  0008b	5d		 pop	 ebp
  0008c	c3		 ret	 0
?BlMpsLocateFpsInRange@@YIPAU_MPS_FPS@@KK@Z ENDP	; BlMpsLocateFpsInRange
_TEXT	ENDS
PUBLIC	?BlMpsLocateFps@@YIPAU_MPS_FPS@@XZ		; BlMpsLocateFps
EXTRN	?BlMmExtendedBiosDataArea@@3PAXA:DWORD		; BlMmExtendedBiosDataArea
; Function compile flags: /Odtp
;	COMDAT ?BlMpsLocateFps@@YIPAU_MPS_FPS@@XZ
_TEXT	SEGMENT
_Fps$ = -4						; size = 4
?BlMpsLocateFps@@YIPAU_MPS_FPS@@XZ PROC			; BlMpsLocateFps, COMDAT

; 103  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 104  :     PMPS_FPS Fps;
; 105  : 
; 106  :     //
; 107  :     // Look for FPS in the first KB of the EBDA first.
; 108  :     //
; 109  : 
; 110  :     Fps = BlMpsLocateFpsInRange((ULONG_PTR) BlMmExtendedBiosDataArea, (ULONG_PTR) BlMmExtendedBiosDataArea + 1024);

  00004	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?BlMmExtendedBiosDataArea@@3PAXA ; BlMmExtendedBiosDataArea
  0000a	81 c2 00 04 00
	00		 add	 edx, 1024		; 00000400H
  00010	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?BlMmExtendedBiosDataArea@@3PAXA ; BlMmExtendedBiosDataArea
  00016	e8 00 00 00 00	 call	 ?BlMpsLocateFpsInRange@@YIPAU_MPS_FPS@@KK@Z ; BlMpsLocateFpsInRange
  0001b	89 45 fc	 mov	 DWORD PTR _Fps$[ebp], eax

; 111  : 
; 112  :     if (Fps != NULL) {

  0001e	83 7d fc 00	 cmp	 DWORD PTR _Fps$[ebp], 0
  00022	74 05		 je	 SHORT $LN3@BlMpsLocat@2

; 113  : 
; 114  :         return Fps;

  00024	8b 45 fc	 mov	 eax, DWORD PTR _Fps$[ebp]
  00027	eb 3c		 jmp	 SHORT $LN4@BlMpsLocat@2
$LN3@BlMpsLocat@2:

; 115  :     }
; 116  : 
; 117  :     //
; 118  :     // Look for FPS in the 639KB - 640KB range.
; 119  :     //
; 120  : 
; 121  :     Fps = BlMpsLocateFpsInRange(639 * 1024, 640 * 1024);

  00029	ba 00 00 0a 00	 mov	 edx, 655360		; 000a0000H
  0002e	b9 00 fc 09 00	 mov	 ecx, 654336		; 0009fc00H
  00033	e8 00 00 00 00	 call	 ?BlMpsLocateFpsInRange@@YIPAU_MPS_FPS@@KK@Z ; BlMpsLocateFpsInRange
  00038	89 45 fc	 mov	 DWORD PTR _Fps$[ebp], eax

; 122  : 
; 123  :     if (Fps != NULL) {

  0003b	83 7d fc 00	 cmp	 DWORD PTR _Fps$[ebp], 0
  0003f	74 05		 je	 SHORT $LN2@BlMpsLocat@2

; 124  : 
; 125  :         return Fps;

  00041	8b 45 fc	 mov	 eax, DWORD PTR _Fps$[ebp]
  00044	eb 1f		 jmp	 SHORT $LN4@BlMpsLocat@2
$LN2@BlMpsLocat@2:

; 126  :     }
; 127  : 
; 128  :     //
; 129  :     // Look for FPS in the BIOS ROM range (0xF0000 - 0xFFFFF).
; 130  :     //
; 131  : 
; 132  :     Fps = BlMpsLocateFpsInRange(0xF0000, 0x100000);

  00046	ba 00 00 10 00	 mov	 edx, 1048576		; 00100000H
  0004b	b9 00 00 0f 00	 mov	 ecx, 983040		; 000f0000H
  00050	e8 00 00 00 00	 call	 ?BlMpsLocateFpsInRange@@YIPAU_MPS_FPS@@KK@Z ; BlMpsLocateFpsInRange
  00055	89 45 fc	 mov	 DWORD PTR _Fps$[ebp], eax

; 133  : 
; 134  :     if (Fps != NULL) {

  00058	83 7d fc 00	 cmp	 DWORD PTR _Fps$[ebp], 0
  0005c	74 05		 je	 SHORT $LN1@BlMpsLocat@2

; 135  : 
; 136  :         return Fps;

  0005e	8b 45 fc	 mov	 eax, DWORD PTR _Fps$[ebp]
  00061	eb 02		 jmp	 SHORT $LN4@BlMpsLocat@2
$LN1@BlMpsLocat@2:

; 137  :     }
; 138  : 
; 139  :     //
; 140  :     // If FPS is not located, then return NULL.
; 141  :     //
; 142  : 
; 143  :     return NULL;

  00063	33 c0		 xor	 eax, eax
$LN4@BlMpsLocat@2:

; 144  : }

  00065	8b e5		 mov	 esp, ebp
  00067	5d		 pop	 ebp
  00068	c3		 ret	 0
?BlMpsLocateFps@@YIPAU_MPS_FPS@@XZ ENDP			; BlMpsLocateFps
_TEXT	ENDS
PUBLIC	?BlMpsInitialize@@YIXXZ				; BlMpsInitialize
; Function compile flags: /Odtp
;	COMDAT ?BlMpsInitialize@@YIXXZ
_TEXT	SEGMENT
_Fps$ = -4						; size = 4
?BlMpsInitialize@@YIXXZ PROC				; BlMpsInitialize, COMDAT

; 159  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 160  :     PMPS_FPS Fps;
; 161  : 
; 162  :     Fps = BlMpsLocateFps();

  00004	e8 00 00 00 00	 call	 ?BlMpsLocateFps@@YIPAU_MPS_FPS@@XZ ; BlMpsLocateFps
  00009	89 45 fc	 mov	 DWORD PTR _Fps$[ebp], eax

; 163  : 
; 164  :     if (Fps == NULL) {

  0000c	83 7d fc 00	 cmp	 DWORD PTR _Fps$[ebp], 0
  00010	75 02		 jne	 SHORT $LN1@BlMpsIniti

; 165  : 
; 166  : #if MPS_VERBOSE
; 167  : 
; 168  :         BlRtlPrintf("MPS: MPS not supported!\n");
; 169  : 
; 170  : #endif
; 171  : 
; 172  :         return;

  00012	eb 08		 jmp	 SHORT $LN2@BlMpsIniti
$LN1@BlMpsIniti:

; 173  :     }
; 174  : 
; 175  : #if MPS_VERBOSE
; 176  : 
; 177  :     BlRtlPrintf("MPS: Found version 1.%u.\n", Fps->Revision);
; 178  : 
; 179  : #endif
; 180  : 
; 181  :     BlMpsFps = Fps;

  00014	8b 45 fc	 mov	 eax, DWORD PTR _Fps$[ebp]
  00017	a3 00 00 00 00	 mov	 DWORD PTR ?BlMpsFps@@3PAXA, eax ; BlMpsFps
$LN2@BlMpsIniti:

; 182  : 
; 183  :     return;
; 184  : }

  0001c	8b e5		 mov	 esp, ebp
  0001e	5d		 pop	 ebp
  0001f	c3		 ret	 0
?BlMpsInitialize@@YIXXZ ENDP				; BlMpsInitialize
_TEXT	ENDS
END
