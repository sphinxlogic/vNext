; Listing generated by Microsoft (R) Optimizing Compiler Version 14.00.50727.762 

	TITLE	D:\OSes\VERVE\verify\src\Trusted\BootLoader\SingLdrPc\blvesa.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?BlVesaMode@@3T_BL_VESA_MODE@@A			; BlVesaMode
PUBLIC	?BlVesaInfo@@3T_BL_VESA_INFO@@A			; BlVesaInfo
PUBLIC	?BlVesaVideoBuffer@@3KA				; BlVesaVideoBuffer
_BSS	SEGMENT
?BlVesaMode@@3T_BL_VESA_MODE@@A DB 0400H DUP (?)	; BlVesaMode
?BlVesaInfo@@3T_BL_VESA_INFO@@A DB 0400H DUP (?)	; BlVesaInfo
?BlVesaVideoBuffer@@3KA DD 01H DUP (?)			; BlVesaVideoBuffer
_BSS	ENDS
PUBLIC	?BlVesaInvoke@@YIKKKKPAX@Z			; BlVesaInvoke
EXTRN	?BlRtlCallLegacyInterruptService@@YIXEPAU_BL_LEGACY_CALL_CONTEXT@@0@Z:PROC ; BlRtlCallLegacyInterruptService
EXTRN	?BlRtlZeroMemory@@YIXPAXK@Z:PROC		; BlRtlZeroMemory
; Function compile flags: /Odtp
; File d:\oses\verve\verify\src\trusted\bootloader\singldrpc\blvesa.cpp
;	COMDAT ?BlVesaInvoke@@YIKKKKPAX@Z
_TEXT	SEGMENT
_Bx$ = -48						; size = 4
_Ax$ = -44						; size = 4
_Context$ = -40						; size = 36
_Address$ = -4						; size = 4
_Cx$ = 8						; size = 4
_Buffer$ = 12						; size = 4
?BlVesaInvoke@@YIKKKKPAX@Z PROC				; BlVesaInvoke, COMDAT
; _Ax$ = ecx
; _Bx$ = edx

; 84   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 30	 sub	 esp, 48			; 00000030H
  00006	89 55 d0	 mov	 DWORD PTR _Bx$[ebp], edx
  00009	89 4d d4	 mov	 DWORD PTR _Ax$[ebp], ecx

; 85   :     ULONG_PTR Address;
; 86   :     BL_LEGACY_CALL_CONTEXT Context;
; 87   : 
; 88   :     BlRtlZeroMemory(&Context, sizeof(Context));

  0000c	ba 24 00 00 00	 mov	 edx, 36			; 00000024H
  00011	8d 4d d8	 lea	 ecx, DWORD PTR _Context$[ebp]
  00014	e8 00 00 00 00	 call	 ?BlRtlZeroMemory@@YIXPAXK@Z ; BlRtlZeroMemory

; 89   : 
; 90   :     Context.eax = Ax;

  00019	8b 45 d4	 mov	 eax, DWORD PTR _Ax$[ebp]
  0001c	89 45 d8	 mov	 DWORD PTR _Context$[ebp], eax

; 91   :     Context.ebx = Bx;

  0001f	8b 4d d0	 mov	 ecx, DWORD PTR _Bx$[ebp]
  00022	89 4d dc	 mov	 DWORD PTR _Context$[ebp+4], ecx

; 92   :     Context.ecx = Cx;

  00025	8b 55 08	 mov	 edx, DWORD PTR _Cx$[ebp]
  00028	89 55 e0	 mov	 DWORD PTR _Context$[ebp+8], edx

; 93   : 
; 94   :     Address = (ULONG_PTR)Buffer;

  0002b	8b 45 0c	 mov	 eax, DWORD PTR _Buffer$[ebp]
  0002e	89 45 fc	 mov	 DWORD PTR _Address$[ebp], eax

; 95   :     Context.es = (UINT32)(Address >> 4);

  00031	8b 4d fc	 mov	 ecx, DWORD PTR _Address$[ebp]
  00034	c1 e9 04	 shr	 ecx, 4
  00037	89 4d f4	 mov	 DWORD PTR _Context$[ebp+28], ecx

; 96   :     Context.edi = (UINT32)(Address & 0xF);

  0003a	8b 55 fc	 mov	 edx, DWORD PTR _Address$[ebp]
  0003d	83 e2 0f	 and	 edx, 15			; 0000000fH
  00040	89 55 ec	 mov	 DWORD PTR _Context$[ebp+20], edx

; 97   : 
; 98   :     BlRtlCallLegacyInterruptService(0x10, &Context, &Context);

  00043	8d 45 d8	 lea	 eax, DWORD PTR _Context$[ebp]
  00046	50		 push	 eax
  00047	8d 55 d8	 lea	 edx, DWORD PTR _Context$[ebp]
  0004a	b1 10		 mov	 cl, 16			; 00000010H
  0004c	e8 00 00 00 00	 call	 ?BlRtlCallLegacyInterruptService@@YIXEPAU_BL_LEGACY_CALL_CONTEXT@@0@Z ; BlRtlCallLegacyInterruptService

; 99   : 
; 100  :     return Context.eax;

  00051	8b 45 d8	 mov	 eax, DWORD PTR _Context$[ebp]

; 101  : }

  00054	8b e5		 mov	 esp, ebp
  00056	5d		 pop	 ebp
  00057	c2 08 00	 ret	 8
?BlVesaInvoke@@YIKKKKPAX@Z ENDP				; BlVesaInvoke
_TEXT	ENDS
PUBLIC	??_C@_0CD@CLGCHEI@VESA?3?5Select?51024?5x?5768?5x?516?5?$EA?5?$CF@ ; `string'
PUBLIC	??_C@_0CK@DGOLEMIL@?5?5?5?5Couldn?8t?5enable?5Linear?5Frame@ ; `string'
PUBLIC	??_C@_0DC@BFIHAFDA@VESA?3?5Mode?5?$CF03x?3?5Attr?$DN?$CF04x?0?5Addr@ ; `string'
PUBLIC	??_C@_0BP@KMGIIHJN@VESA?3?5?$CFc?$CFc?$CFc?$CFc?5V?$CFx?5?$CFs?5?$CI?$CFd?5MB?$CJ?6?$AA@ ; `string'
PUBLIC	??_C@_0BG@DMFJCOOA@VESA?3?5No?5VESA?5found?4?6?$AA@ ; `string'
PUBLIC	?BlVesaInitialize@@YIEXZ			; BlVesaInitialize
EXTRN	?BlRtlConvertFarPointerToLinearPointer@@YIPAXPAU_FAR_POINTER@@@Z:PROC ; BlRtlConvertFarPointerToLinearPointer
EXTRN	?BlRtlPrintf@@YAEPBDZZ:PROC			; BlRtlPrintf
;	COMDAT ??_C@_0CD@CLGCHEI@VESA?3?5Select?51024?5x?5768?5x?516?5?$EA?5?$CF@
CONST	SEGMENT
??_C@_0CD@CLGCHEI@VESA?3?5Select?51024?5x?5768?5x?516?5?$EA?5?$CF@ DB 'VE'
	DB	'SA: Select 1024 x 768 x 16 @ %p', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@DGOLEMIL@?5?5?5?5Couldn?8t?5enable?5Linear?5Frame@
CONST	SEGMENT
??_C@_0CK@DGOLEMIL@?5?5?5?5Couldn?8t?5enable?5Linear?5Frame@ DB '    Coul'
	DB	'dn''t enable Linear Frame Buffer.', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@BFIHAFDA@VESA?3?5Mode?5?$CF03x?3?5Attr?$DN?$CF04x?0?5Addr@
CONST	SEGMENT
??_C@_0DC@BFIHAFDA@VESA?3?5Mode?5?$CF03x?3?5Attr?$DN?$CF04x?0?5Addr@ DB 'V'
	DB	'ESA: Mode %03x: Attr=%04x, Addr=%p Res=%dx%dx%d', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@KMGIIHJN@VESA?3?5?$CFc?$CFc?$CFc?$CFc?5V?$CFx?5?$CFs?5?$CI?$CFd?5MB?$CJ?6?$AA@
CONST	SEGMENT
??_C@_0BP@KMGIIHJN@VESA?3?5?$CFc?$CFc?$CFc?$CFc?5V?$CFx?5?$CFs?5?$CI?$CFd?5MB?$CJ?6?$AA@ DB 'V'
	DB	'ESA: %c%c%c%c V%x %s (%d MB)', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@DMFJCOOA@VESA?3?5No?5VESA?5found?4?6?$AA@
CONST	SEGMENT
??_C@_0BG@DMFJCOOA@VESA?3?5No?5VESA?5found?4?6?$AA@ DB 'VESA: No VESA fou'
	DB	'nd.', 0aH, 00H				; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT ?BlVesaInitialize@@YIEXZ
_TEXT	SEGMENT
_Buffer$3386 = -24					; size = 4
_i$3388 = -20						; size = 4
_Returned$ = -16					; size = 4
_ModeList$ = -12					; size = 4
_Video$ = -8						; size = 4
_Mode$ = -4						; size = 2
?BlVesaInitialize@@YIEXZ PROC				; BlVesaInitialize, COMDAT

; 107  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H

; 108  :     UINT32 Returned;
; 109  :     PUINT16 ModeList;
; 110  :     UINT16 Mode;
; 111  :     ULONG_PTR Video;
; 112  : 
; 113  :     //
; 114  :     // Determine if a VESA video card is enabled.
; 115  :     //
; 116  : 
; 117  :     BlRtlZeroMemory(&BlVesaInfo, sizeof(BlVesaInfo));

  00006	ba 00 04 00 00	 mov	 edx, 1024		; 00000400H
  0000b	b9 00 00 00 00	 mov	 ecx, OFFSET ?BlVesaInfo@@3T_BL_VESA_INFO@@A ; BlVesaInfo
  00010	e8 00 00 00 00	 call	 ?BlRtlZeroMemory@@YIXPAXK@Z ; BlRtlZeroMemory

; 118  : 
; 119  :     Returned = BlVesaInvoke(0x4f00, 0, 0, &BlVesaInfo);

  00015	68 00 00 00 00	 push	 OFFSET ?BlVesaInfo@@3T_BL_VESA_INFO@@A ; BlVesaInfo
  0001a	6a 00		 push	 0
  0001c	33 d2		 xor	 edx, edx
  0001e	b9 00 4f 00 00	 mov	 ecx, 20224		; 00004f00H
  00023	e8 00 00 00 00	 call	 ?BlVesaInvoke@@YIKKKKPAX@Z ; BlVesaInvoke
  00028	89 45 f0	 mov	 DWORD PTR _Returned$[ebp], eax

; 120  : 
; 121  :     if (Returned != 0x4f ||
; 122  :         BlVesaInfo.Signature[0] != 'V' ||
; 123  :         BlVesaInfo.Signature[1] != 'E' ||
; 124  :         BlVesaInfo.Signature[2] != 'S' ||
; 125  :         BlVesaInfo.Signature[3] != 'A' ||
; 126  :         BlVesaInfo.Version < 0x200) {

  0002b	83 7d f0 4f	 cmp	 DWORD PTR _Returned$[ebp], 79 ; 0000004fH
  0002f	75 3f		 jne	 SHORT $LN23@BlVesaInit
  00031	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?BlVesaInfo@@3T_BL_VESA_INFO@@A
  00038	83 f8 56	 cmp	 eax, 86			; 00000056H
  0003b	75 33		 jne	 SHORT $LN23@BlVesaInit
  0003d	0f b6 0d 01 00
	00 00		 movzx	 ecx, BYTE PTR ?BlVesaInfo@@3T_BL_VESA_INFO@@A+1
  00044	83 f9 45	 cmp	 ecx, 69			; 00000045H
  00047	75 27		 jne	 SHORT $LN23@BlVesaInit
  00049	0f b6 15 02 00
	00 00		 movzx	 edx, BYTE PTR ?BlVesaInfo@@3T_BL_VESA_INFO@@A+2
  00050	83 fa 53	 cmp	 edx, 83			; 00000053H
  00053	75 1b		 jne	 SHORT $LN23@BlVesaInit
  00055	0f b6 05 03 00
	00 00		 movzx	 eax, BYTE PTR ?BlVesaInfo@@3T_BL_VESA_INFO@@A+3
  0005c	83 f8 41	 cmp	 eax, 65			; 00000041H
  0005f	75 0f		 jne	 SHORT $LN23@BlVesaInit
  00061	0f b7 0d 04 00
	00 00		 movzx	 ecx, WORD PTR ?BlVesaInfo@@3T_BL_VESA_INFO@@A+4
  00068	81 f9 00 02 00
	00		 cmp	 ecx, 512		; 00000200H
  0006e	7d 14		 jge	 SHORT $LN24@BlVesaInit
$LN23@BlVesaInit:

; 127  : 
; 128  :         BlRtlPrintf("VESA: No VESA found.\n");

  00070	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@DMFJCOOA@VESA?3?5No?5VESA?5found?4?6?$AA@
  00075	e8 00 00 00 00	 call	 ?BlRtlPrintf@@YAEPBDZZ	; BlRtlPrintf
  0007a	83 c4 04	 add	 esp, 4

; 129  :         return FALSE;

  0007d	32 c0		 xor	 al, al
  0007f	e9 68 02 00 00	 jmp	 $LN25@BlVesaInit
$LN24@BlVesaInit:

; 130  :     }
; 131  : 
; 132  :     //
; 133  :     // Print the VESA identification information.
; 134  :     //
; 135  : 
; 136  :     BlRtlPrintf("VESA: %c%c%c%c V%x %s (%d MB)\n",
; 137  :                 BlVesaInfo.Signature[0],
; 138  :                 BlVesaInfo.Signature[1],
; 139  :                 BlVesaInfo.Signature[2],
; 140  :                 BlVesaInfo.Signature[3],
; 141  :                 BlVesaInfo.Version,
; 142  :                 (PCHAR) BlRtlConvertFarPointerToLinearPointer(&BlVesaInfo.Oem),
; 143  :                 BlVesaInfo.Memory / 16);

  00084	0f b7 05 12 00
	00 00		 movzx	 eax, WORD PTR ?BlVesaInfo@@3T_BL_VESA_INFO@@A+18
  0008b	99		 cdq
  0008c	83 e2 0f	 and	 edx, 15			; 0000000fH
  0008f	03 c2		 add	 eax, edx
  00091	c1 f8 04	 sar	 eax, 4
  00094	50		 push	 eax
  00095	b9 06 00 00 00	 mov	 ecx, OFFSET ?BlVesaInfo@@3T_BL_VESA_INFO@@A+6
  0009a	e8 00 00 00 00	 call	 ?BlRtlConvertFarPointerToLinearPointer@@YIPAXPAU_FAR_POINTER@@@Z ; BlRtlConvertFarPointerToLinearPointer
  0009f	50		 push	 eax
  000a0	0f b7 15 04 00
	00 00		 movzx	 edx, WORD PTR ?BlVesaInfo@@3T_BL_VESA_INFO@@A+4
  000a7	52		 push	 edx
  000a8	0f b6 05 03 00
	00 00		 movzx	 eax, BYTE PTR ?BlVesaInfo@@3T_BL_VESA_INFO@@A+3
  000af	50		 push	 eax
  000b0	0f b6 0d 02 00
	00 00		 movzx	 ecx, BYTE PTR ?BlVesaInfo@@3T_BL_VESA_INFO@@A+2
  000b7	51		 push	 ecx
  000b8	0f b6 15 01 00
	00 00		 movzx	 edx, BYTE PTR ?BlVesaInfo@@3T_BL_VESA_INFO@@A+1
  000bf	52		 push	 edx
  000c0	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?BlVesaInfo@@3T_BL_VESA_INFO@@A
  000c7	50		 push	 eax
  000c8	68 00 00 00 00	 push	 OFFSET ??_C@_0BP@KMGIIHJN@VESA?3?5?$CFc?$CFc?$CFc?$CFc?5V?$CFx?5?$CFs?5?$CI?$CFd?5MB?$CJ?6?$AA@
  000cd	e8 00 00 00 00	 call	 ?BlRtlPrintf@@YAEPBDZZ	; BlRtlPrintf
  000d2	83 c4 20	 add	 esp, 32			; 00000020H

; 144  : 
; 145  :     //
; 146  :     // Search list of modes for 1024 x 768 x 16.
; 147  :     //
; 148  : 
; 149  :     ModeList = (PUINT16) BlRtlConvertFarPointerToLinearPointer((PFAR_POINTER) &BlVesaInfo.Modes);

  000d5	b9 0e 00 00 00	 mov	 ecx, OFFSET ?BlVesaInfo@@3T_BL_VESA_INFO@@A+14
  000da	e8 00 00 00 00	 call	 ?BlRtlConvertFarPointerToLinearPointer@@YIPAXPAU_FAR_POINTER@@@Z ; BlRtlConvertFarPointerToLinearPointer
  000df	89 45 f4	 mov	 DWORD PTR _ModeList$[ebp], eax
  000e2	eb 09		 jmp	 SHORT $LN22@BlVesaInit
$LN21@BlVesaInit:

; 150  : 
; 151  :     for (; *ModeList != 0xffff; ModeList++) {

  000e4	8b 4d f4	 mov	 ecx, DWORD PTR _ModeList$[ebp]
  000e7	83 c1 02	 add	 ecx, 2
  000ea	89 4d f4	 mov	 DWORD PTR _ModeList$[ebp], ecx
$LN22@BlVesaInit:
  000ed	8b 55 f4	 mov	 edx, DWORD PTR _ModeList$[ebp]
  000f0	0f b7 02	 movzx	 eax, WORD PTR [edx]
  000f3	3d ff ff 00 00	 cmp	 eax, 65535		; 0000ffffH
  000f8	0f 84 48 01 00
	00		 je	 $LN20@BlVesaInit

; 152  : 
; 153  :         Mode = *ModeList;

  000fe	8b 4d f4	 mov	 ecx, DWORD PTR _ModeList$[ebp]
  00101	66 8b 11	 mov	 dx, WORD PTR [ecx]
  00104	66 89 55 fc	 mov	 WORD PTR _Mode$[ebp], dx

; 154  : 
; 155  :         //
; 156  :         // Query for the mode information.
; 157  :         //
; 158  : 
; 159  :         BlRtlZeroMemory(&BlVesaMode, sizeof(BlVesaMode));

  00108	ba 00 04 00 00	 mov	 edx, 1024		; 00000400H
  0010d	b9 00 00 00 00	 mov	 ecx, OFFSET ?BlVesaMode@@3T_BL_VESA_MODE@@A ; BlVesaMode
  00112	e8 00 00 00 00	 call	 ?BlRtlZeroMemory@@YIXPAXK@Z ; BlRtlZeroMemory

; 160  : 
; 161  :         Returned = BlVesaInvoke(0x4f01, 0, Mode, &BlVesaMode);

  00117	68 00 00 00 00	 push	 OFFSET ?BlVesaMode@@3T_BL_VESA_MODE@@A ; BlVesaMode
  0011c	0f b7 45 fc	 movzx	 eax, WORD PTR _Mode$[ebp]
  00120	50		 push	 eax
  00121	33 d2		 xor	 edx, edx
  00123	b9 01 4f 00 00	 mov	 ecx, 20225		; 00004f01H
  00128	e8 00 00 00 00	 call	 ?BlVesaInvoke@@YIKKKKPAX@Z ; BlVesaInvoke
  0012d	89 45 f0	 mov	 DWORD PTR _Returned$[ebp], eax

; 162  : 
; 163  :         if (Returned != 0x4f || BlVesaMode.BitsPerPixel > 8) {

  00130	83 7d f0 4f	 cmp	 DWORD PTR _Returned$[ebp], 79 ; 0000004fH
  00134	75 10		 jne	 SHORT $LN18@BlVesaInit
  00136	0f b6 0d 19 00
	00 00		 movzx	 ecx, BYTE PTR ?BlVesaMode@@3T_BL_VESA_MODE@@A+25
  0013d	83 f9 08	 cmp	 ecx, 8
  00140	0f 8e fb 00 00
	00		 jle	 $LN19@BlVesaInit
$LN18@BlVesaInit:

; 164  : 
; 165  :             BlRtlPrintf("VESA: Mode %03x: Attr=%04x, Addr=%p Res=%dx%dx%d\n",
; 166  :                         Mode,
; 167  :                         BlVesaMode.Attributes,
; 168  :                         (ULONG_PTR)BlVesaMode.PhysBasePtr,
; 169  :                         BlVesaMode.XRes,
; 170  :                         BlVesaMode.YRes,
; 171  :                         BlVesaMode.BitsPerPixel);

  00146	0f b6 15 19 00
	00 00		 movzx	 edx, BYTE PTR ?BlVesaMode@@3T_BL_VESA_MODE@@A+25
  0014d	52		 push	 edx
  0014e	0f b7 05 14 00
	00 00		 movzx	 eax, WORD PTR ?BlVesaMode@@3T_BL_VESA_MODE@@A+20
  00155	50		 push	 eax
  00156	0f b7 0d 12 00
	00 00		 movzx	 ecx, WORD PTR ?BlVesaMode@@3T_BL_VESA_MODE@@A+18
  0015d	51		 push	 ecx
  0015e	8b 15 28 00 00
	00		 mov	 edx, DWORD PTR ?BlVesaMode@@3T_BL_VESA_MODE@@A+40
  00164	52		 push	 edx
  00165	0f b7 05 00 00
	00 00		 movzx	 eax, WORD PTR ?BlVesaMode@@3T_BL_VESA_MODE@@A
  0016c	50		 push	 eax
  0016d	0f b7 4d fc	 movzx	 ecx, WORD PTR _Mode$[ebp]
  00171	51		 push	 ecx
  00172	68 00 00 00 00	 push	 OFFSET ??_C@_0DC@BFIHAFDA@VESA?3?5Mode?5?$CF03x?3?5Attr?$DN?$CF04x?0?5Addr@
  00177	e8 00 00 00 00	 call	 ?BlRtlPrintf@@YAEPBDZZ	; BlRtlPrintf
  0017c	83 c4 1c	 add	 esp, 28			; 0000001cH

; 172  : 
; 173  :             //
; 174  :             // See if one of the modes suport 1024 x 768 x 16 bits.
; 175  :             //
; 176  : 
; 177  :             if (BlVesaMode.XRes == 1024 &&
; 178  :                 BlVesaMode.YRes == 768 &&
; 179  :                 BlVesaMode.BitsPerPixel == 16) {

  0017f	0f b7 15 12 00
	00 00		 movzx	 edx, WORD PTR ?BlVesaMode@@3T_BL_VESA_MODE@@A+18
  00186	81 fa 00 04 00
	00		 cmp	 edx, 1024		; 00000400H
  0018c	0f 85 af 00 00
	00		 jne	 $LN19@BlVesaInit
  00192	0f b7 05 14 00
	00 00		 movzx	 eax, WORD PTR ?BlVesaMode@@3T_BL_VESA_MODE@@A+20
  00199	3d 00 03 00 00	 cmp	 eax, 768		; 00000300H
  0019e	0f 85 9d 00 00
	00		 jne	 $LN19@BlVesaInit
  001a4	0f b6 0d 19 00
	00 00		 movzx	 ecx, BYTE PTR ?BlVesaMode@@3T_BL_VESA_MODE@@A+25
  001ab	83 f9 10	 cmp	 ecx, 16			; 00000010H
  001ae	0f 85 8d 00 00
	00		 jne	 $LN19@BlVesaInit

; 180  : 
; 181  :                 Video = (ULONG_PTR)BlVesaMode.PhysBasePtr;

  001b4	8b 15 28 00 00
	00		 mov	 edx, DWORD PTR ?BlVesaMode@@3T_BL_VESA_MODE@@A+40
  001ba	89 55 f8	 mov	 DWORD PTR _Video$[ebp], edx

; 182  :                 BlRtlZeroMemory(&BlVesaMode, sizeof(BlVesaMode));

  001bd	ba 00 04 00 00	 mov	 edx, 1024		; 00000400H
  001c2	b9 00 00 00 00	 mov	 ecx, OFFSET ?BlVesaMode@@3T_BL_VESA_MODE@@A ; BlVesaMode
  001c7	e8 00 00 00 00	 call	 ?BlRtlZeroMemory@@YIXPAXK@Z ; BlRtlZeroMemory

; 183  : 
; 184  :                 if (Mode >= 0x100) {

  001cc	0f b7 45 fc	 movzx	 eax, WORD PTR _Mode$[ebp]
  001d0	3d 00 01 00 00	 cmp	 eax, 256		; 00000100H
  001d5	7c 20		 jl	 SHORT $LN16@BlVesaInit

; 185  : 
; 186  :                     Returned = BlVesaInvoke(0x4f02, 0x4000 | Mode, 0, &BlVesaMode);

  001d7	68 00 00 00 00	 push	 OFFSET ?BlVesaMode@@3T_BL_VESA_MODE@@A ; BlVesaMode
  001dc	6a 00		 push	 0
  001de	0f b7 55 fc	 movzx	 edx, WORD PTR _Mode$[ebp]
  001e2	81 ca 00 40 00
	00		 or	 edx, 16384		; 00004000H
  001e8	b9 02 4f 00 00	 mov	 ecx, 20226		; 00004f02H
  001ed	e8 00 00 00 00	 call	 ?BlVesaInvoke@@YIKKKKPAX@Z ; BlVesaInvoke
  001f2	89 45 f0	 mov	 DWORD PTR _Returned$[ebp], eax

; 187  :                 }
; 188  :                 else {

  001f5	eb 18		 jmp	 SHORT $LN15@BlVesaInit
$LN16@BlVesaInit:

; 189  : 
; 190  :                     Returned = BlVesaInvoke(0x4f02, Mode, 0, &BlVesaMode);

  001f7	68 00 00 00 00	 push	 OFFSET ?BlVesaMode@@3T_BL_VESA_MODE@@A ; BlVesaMode
  001fc	6a 00		 push	 0
  001fe	0f b7 55 fc	 movzx	 edx, WORD PTR _Mode$[ebp]
  00202	b9 02 4f 00 00	 mov	 ecx, 20226		; 00004f02H
  00207	e8 00 00 00 00	 call	 ?BlVesaInvoke@@YIKKKKPAX@Z ; BlVesaInvoke
  0020c	89 45 f0	 mov	 DWORD PTR _Returned$[ebp], eax
$LN15@BlVesaInit:

; 191  :                 }
; 192  : 
; 193  :                 if (Returned != 0x4f) {

  0020f	83 7d f0 4f	 cmp	 DWORD PTR _Returned$[ebp], 79 ; 0000004fH
  00213	74 12		 je	 SHORT $LN14@BlVesaInit

; 194  : 
; 195  :                     BlRtlPrintf("    Couldn't enable Linear Frame Buffer.\n");

  00215	68 00 00 00 00	 push	 OFFSET ??_C@_0CK@DGOLEMIL@?5?5?5?5Couldn?8t?5enable?5Linear?5Frame@
  0021a	e8 00 00 00 00	 call	 ?BlRtlPrintf@@YAEPBDZZ	; BlRtlPrintf
  0021f	83 c4 04	 add	 esp, 4

; 196  :                     continue;

  00222	e9 bd fe ff ff	 jmp	 $LN21@BlVesaInit
$LN14@BlVesaInit:

; 197  :                 }
; 198  : 
; 199  :                 BlRtlPrintf("VESA: Select 1024 x 768 x 16 @ %p\n", Video);

  00227	8b 4d f8	 mov	 ecx, DWORD PTR _Video$[ebp]
  0022a	51		 push	 ecx
  0022b	68 00 00 00 00	 push	 OFFSET ??_C@_0CD@CLGCHEI@VESA?3?5Select?51024?5x?5768?5x?516?5?$EA?5?$CF@
  00230	e8 00 00 00 00	 call	 ?BlRtlPrintf@@YAEPBDZZ	; BlRtlPrintf
  00235	83 c4 08	 add	 esp, 8

; 200  :                 BlVesaVideoBuffer = Video;

  00238	8b 55 f8	 mov	 edx, DWORD PTR _Video$[ebp]
  0023b	89 15 00 00 00
	00		 mov	 DWORD PTR ?BlVesaVideoBuffer@@3KA, edx ; BlVesaVideoBuffer
$LN19@BlVesaInit:

; 201  :             }
; 202  :         }
; 203  :     }

  00241	e9 9e fe ff ff	 jmp	 $LN21@BlVesaInit
$LN20@BlVesaInit:

; 204  : 
; 205  :     if (BlVesaVideoBuffer != 0) {

  00246	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?BlVesaVideoBuffer@@3KA, 0 ; BlVesaVideoBuffer
  0024d	0f 84 97 00 00
	00		 je	 $LN13@BlVesaInit

; 206  : 
; 207  :         PUINT16 Buffer = (PUINT16)BlVesaVideoBuffer;

  00253	a1 00 00 00 00	 mov	 eax, DWORD PTR ?BlVesaVideoBuffer@@3KA ; BlVesaVideoBuffer
  00258	89 45 e8	 mov	 DWORD PTR _Buffer$3386[ebp], eax

; 208  :         INT32 i = 0;

  0025b	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _i$3388[ebp], 0
  00262	eb 09		 jmp	 SHORT $LN12@BlVesaInit
$LN11@BlVesaInit:

; 209  : 
; 210  :         for (; i < 1 * 1024; i++) {

  00264	8b 4d ec	 mov	 ecx, DWORD PTR _i$3388[ebp]
  00267	83 c1 01	 add	 ecx, 1
  0026a	89 4d ec	 mov	 DWORD PTR _i$3388[ebp], ecx
$LN12@BlVesaInit:
  0026d	81 7d ec 00 04
	00 00		 cmp	 DWORD PTR _i$3388[ebp], 1024 ; 00000400H
  00274	7d 0e		 jge	 SHORT $LN10@BlVesaInit

; 211  : 
; 212  :             Buffer[i] = 0xf800;

  00276	8b 55 ec	 mov	 edx, DWORD PTR _i$3388[ebp]
  00279	8b 45 e8	 mov	 eax, DWORD PTR _Buffer$3386[ebp]
  0027c	66 c7 04 50 00
	f8		 mov	 WORD PTR [eax+edx*2], 63488 ; 0000f800H

; 213  :         }

  00282	eb e0		 jmp	 SHORT $LN11@BlVesaInit
$LN10@BlVesaInit:

; 214  : 
; 215  :         for (; i < 2 * 1024; i++) {

  00284	eb 09		 jmp	 SHORT $LN9@BlVesaInit
$LN8@BlVesaInit:
  00286	8b 4d ec	 mov	 ecx, DWORD PTR _i$3388[ebp]
  00289	83 c1 01	 add	 ecx, 1
  0028c	89 4d ec	 mov	 DWORD PTR _i$3388[ebp], ecx
$LN9@BlVesaInit:
  0028f	81 7d ec 00 08
	00 00		 cmp	 DWORD PTR _i$3388[ebp], 2048 ; 00000800H
  00296	7d 0e		 jge	 SHORT $LN7@BlVesaInit

; 216  : 
; 217  :             Buffer[i] = 0x07e0;

  00298	8b 55 ec	 mov	 edx, DWORD PTR _i$3388[ebp]
  0029b	8b 45 e8	 mov	 eax, DWORD PTR _Buffer$3386[ebp]
  0029e	66 c7 04 50 e0
	07		 mov	 WORD PTR [eax+edx*2], 2016 ; 000007e0H

; 218  :         }

  002a4	eb e0		 jmp	 SHORT $LN8@BlVesaInit
$LN7@BlVesaInit:

; 219  : 
; 220  :         for (; i < 3 * 1024; i++) {

  002a6	eb 09		 jmp	 SHORT $LN6@BlVesaInit
$LN5@BlVesaInit:
  002a8	8b 4d ec	 mov	 ecx, DWORD PTR _i$3388[ebp]
  002ab	83 c1 01	 add	 ecx, 1
  002ae	89 4d ec	 mov	 DWORD PTR _i$3388[ebp], ecx
$LN6@BlVesaInit:
  002b1	81 7d ec 00 0c
	00 00		 cmp	 DWORD PTR _i$3388[ebp], 3072 ; 00000c00H
  002b8	7d 0e		 jge	 SHORT $LN4@BlVesaInit

; 221  : 
; 222  :             Buffer[i] = 0x001f;

  002ba	8b 55 ec	 mov	 edx, DWORD PTR _i$3388[ebp]
  002bd	8b 45 e8	 mov	 eax, DWORD PTR _Buffer$3386[ebp]
  002c0	66 c7 04 50 1f
	00		 mov	 WORD PTR [eax+edx*2], 31 ; 0000001fH

; 223  :         }

  002c6	eb e0		 jmp	 SHORT $LN5@BlVesaInit
$LN4@BlVesaInit:

; 224  : 
; 225  :         for (; i < 4 * 1024; i++) {

  002c8	eb 09		 jmp	 SHORT $LN3@BlVesaInit
$LN2@BlVesaInit:
  002ca	8b 4d ec	 mov	 ecx, DWORD PTR _i$3388[ebp]
  002cd	83 c1 01	 add	 ecx, 1
  002d0	89 4d ec	 mov	 DWORD PTR _i$3388[ebp], ecx
$LN3@BlVesaInit:
  002d3	81 7d ec 00 10
	00 00		 cmp	 DWORD PTR _i$3388[ebp], 4096 ; 00001000H
  002da	7d 0e		 jge	 SHORT $LN13@BlVesaInit

; 226  : 
; 227  :             Buffer[i] = 0xffff;

  002dc	8b 55 ec	 mov	 edx, DWORD PTR _i$3388[ebp]
  002df	8b 45 e8	 mov	 eax, DWORD PTR _Buffer$3386[ebp]
  002e2	66 c7 04 50 ff
	ff		 mov	 WORD PTR [eax+edx*2], 65535 ; 0000ffffH

; 228  :         }

  002e8	eb e0		 jmp	 SHORT $LN2@BlVesaInit
$LN13@BlVesaInit:

; 229  :     }
; 230  : 
; 231  :     return FALSE;

  002ea	32 c0		 xor	 al, al
$LN25@BlVesaInit:

; 232  : }

  002ec	8b e5		 mov	 esp, ebp
  002ee	5d		 pop	 ebp
  002ef	c3		 ret	 0
?BlVesaInitialize@@YIEXZ ENDP				; BlVesaInitialize
_TEXT	ENDS
END
