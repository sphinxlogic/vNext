Output file describing compiled parser placed in ..\..\obj\boogieasm\parse.fs and ..\..\obj\boogieasm\parse.fsi
------------------------
states = 
state 0:
  items:
    _startstart ->  . start

  actions:
    action 'EOF' (noprec):   reduce Decls --> 
    action 'EAX' (noprec):   reduce Decls --> 
    action 'EBX' (noprec):   reduce Decls --> 
    action 'ECX' (noprec):   reduce Decls --> 
    action 'EDX' (noprec):   reduce Decls --> 
    action 'ESI' (noprec):   reduce Decls --> 
    action 'EDI' (noprec):   reduce Decls --> 
    action 'EBP' (noprec):   reduce Decls --> 
    action 'ESP' (noprec):   reduce Decls --> 
    action 'MODIFIES' (noprec):   reduce Decls --> 
    action 'INVARIANT' (noprec):   reduce Decls --> 
    action 'ASSERT' (noprec):   reduce Decls --> 
    action 'HAVOC' (noprec):   reduce Decls --> 
    action 'GOTO' (noprec):   reduce Decls --> 
    action 'CALL' (noprec):   reduce Decls --> 
    action 'CCALL' (noprec):   reduce Decls --> 
    action 'RET' (noprec):   reduce Decls --> 
    action 'IRET' (noprec):   reduce Decls --> 
    action 'GO' (noprec):   reduce Decls --> 
    action 'FORALL' (noprec):   reduce Decls --> 
    action 'EXISTS' (noprec):   reduce Decls --> 
    action 'OLD' (noprec):   reduce Decls --> 
    action 'COLONCOLON' (noprec):   reduce Decls --> 
    action 'EQEQGT' (noprec):   reduce Decls --> 
    action 'LTEQEQGT' (noprec):   reduce Decls --> 
    action 'TYPE' (noprec):   shift 329
    action 'CONST' (noprec):   shift 375
    action 'FUNCTION' (noprec):   shift 380
    action 'RETURNS' (noprec):   reduce Decls --> 
    action 'AXIOM' (noprec):   shift 393
    action 'PROCEDURE' (noprec):   shift 320
    action 'IMPLEMENTATION' (noprec):   shift 321
    action 'REQUIRES' (noprec):   reduce Decls --> 
    action 'ENSURES' (noprec):   reduce Decls --> 
    action 'LT' (noprec):   reduce Decls --> 
    action 'GT' (noprec):   reduce Decls --> 
    action 'EQ' (noprec):   reduce Decls --> 
    action 'BANG' (noprec):   reduce Decls --> 
    action 'COMMA' (noprec):   reduce Decls --> 
    action 'LE' (noprec):   reduce Decls --> 
    action 'GE' (noprec):   reduce Decls --> 
    action 'EQEQ' (noprec):   reduce Decls --> 
    action 'NE' (noprec):   reduce Decls --> 
    action 'PLUS' (noprec):   reduce Decls --> 
    action 'MINUS' (noprec):   reduce Decls --> 
    action 'STAR' (noprec):   reduce Decls --> 
    action 'SLASH' (noprec):   reduce Decls --> 
    action 'PERCENT' (noprec):   reduce Decls --> 
    action 'AMPAMP' (noprec):   reduce Decls --> 
    action 'BARBAR' (noprec):   reduce Decls --> 
    action 'COLONEQ' (noprec):   reduce Decls --> 
    action 'INT' (noprec):   reduce Decls --> 
    action 'BOOL' (noprec):   reduce Decls --> 
    action 'IF' (noprec):   reduce Decls --> 
    action 'RETURN' (noprec):   reduce Decls --> 
    action 'VAR' (noprec):   shift 332
    action 'LBRACE' (noprec):   reduce Decls --> 
    action 'RBRACE' (noprec):   reduce Decls --> 
    action 'SEMI' (noprec):   reduce Decls --> 
    action 'COLON' (noprec):   reduce Decls --> 
    action 'LPAREN' (noprec):   reduce Decls --> 
    action 'RPAREN' (noprec):   reduce Decls --> 
    action 'LBRACKET' (noprec):   reduce Decls --> 
    action 'RBRACKET' (noprec):   reduce Decls --> 
    action 'LITBOOL' (noprec):   reduce Decls --> 
    action 'LITINT' (noprec):   reduce Decls --> 
    action 'QLID' (noprec):   reduce Decls --> 
    action 'QUID' (noprec):   reduce Decls --> 
    action 'DLID' (noprec):   reduce Decls --> 
    action 'DUID' (noprec):   reduce Decls --> 
    action 'LID' (noprec):   reduce Decls --> 
    action 'UID' (noprec):   reduce Decls --> 
    action 'error' (noprec):   reduce Decls --> 
    action '#' (noprec):   reduce Decls --> 
    action '$$' (noprec):   reduce Decls --> 

  immediate action: <none>
 gotos:
    goto start: 1
    goto ProcOrImpl: 345
    goto Decl: 407
    goto Decls: 2

state 1:
  items:
    _startstart -> start . 

  actions:
    action 'EOF' (noprec):   accept
    action 'EAX' (noprec):   accept
    action 'EBX' (noprec):   accept
    action 'ECX' (noprec):   accept
    action 'EDX' (noprec):   accept
    action 'ESI' (noprec):   accept
    action 'EDI' (noprec):   accept
    action 'EBP' (noprec):   accept
    action 'ESP' (noprec):   accept
    action 'MODIFIES' (noprec):   accept
    action 'INVARIANT' (noprec):   accept
    action 'ASSERT' (noprec):   accept
    action 'HAVOC' (noprec):   accept
    action 'GOTO' (noprec):   accept
    action 'CALL' (noprec):   accept
    action 'CCALL' (noprec):   accept
    action 'RET' (noprec):   accept
    action 'IRET' (noprec):   accept
    action 'GO' (noprec):   accept
    action 'FORALL' (noprec):   accept
    action 'EXISTS' (noprec):   accept
    action 'OLD' (noprec):   accept
    action 'COLONCOLON' (noprec):   accept
    action 'EQEQGT' (noprec):   accept
    action 'LTEQEQGT' (noprec):   accept
    action 'TYPE' (noprec):   accept
    action 'CONST' (noprec):   accept
    action 'FUNCTION' (noprec):   accept
    action 'RETURNS' (noprec):   accept
    action 'AXIOM' (noprec):   accept
    action 'PROCEDURE' (noprec):   accept
    action 'IMPLEMENTATION' (noprec):   accept
    action 'REQUIRES' (noprec):   accept
    action 'ENSURES' (noprec):   accept
    action 'LT' (noprec):   accept
    action 'GT' (noprec):   accept
    action 'EQ' (noprec):   accept
    action 'BANG' (noprec):   accept
    action 'COMMA' (noprec):   accept
    action 'LE' (noprec):   accept
    action 'GE' (noprec):   accept
    action 'EQEQ' (noprec):   accept
    action 'NE' (noprec):   accept
    action 'PLUS' (noprec):   accept
    action 'MINUS' (noprec):   accept
    action 'STAR' (noprec):   accept
    action 'SLASH' (noprec):   accept
    action 'PERCENT' (noprec):   accept
    action 'AMPAMP' (noprec):   accept
    action 'BARBAR' (noprec):   accept
    action 'COLONEQ' (noprec):   accept
    action 'INT' (noprec):   accept
    action 'BOOL' (noprec):   accept
    action 'IF' (noprec):   accept
    action 'RETURN' (noprec):   accept
    action 'VAR' (noprec):   accept
    action 'LBRACE' (noprec):   accept
    action 'RBRACE' (noprec):   accept
    action 'SEMI' (noprec):   accept
    action 'COLON' (noprec):   accept
    action 'LPAREN' (noprec):   accept
    action 'RPAREN' (noprec):   accept
    action 'LBRACKET' (noprec):   accept
    action 'RBRACKET' (noprec):   accept
    action 'LITBOOL' (noprec):   accept
    action 'LITINT' (noprec):   accept
    action 'QLID' (noprec):   accept
    action 'QUID' (noprec):   accept
    action 'DLID' (noprec):   accept
    action 'DUID' (noprec):   accept
    action 'LID' (noprec):   accept
    action 'UID' (noprec):   accept
    action 'error' (noprec):   accept
    action '#' (noprec):   accept
    action '$$' (noprec):   accept

  immediate action:   accept
 gotos:

state 2:
  items:
    start -> Decls . 'EOF'

  actions:
    action 'EOF' (noprec):   shift 3
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 3:
  items:
    start -> Decls 'EOF' . 

  actions:
    action 'EOF' (noprec):   reduce start --> Decls 'EOF'
    action 'EAX' (noprec):   reduce start --> Decls 'EOF'
    action 'EBX' (noprec):   reduce start --> Decls 'EOF'
    action 'ECX' (noprec):   reduce start --> Decls 'EOF'
    action 'EDX' (noprec):   reduce start --> Decls 'EOF'
    action 'ESI' (noprec):   reduce start --> Decls 'EOF'
    action 'EDI' (noprec):   reduce start --> Decls 'EOF'
    action 'EBP' (noprec):   reduce start --> Decls 'EOF'
    action 'ESP' (noprec):   reduce start --> Decls 'EOF'
    action 'MODIFIES' (noprec):   reduce start --> Decls 'EOF'
    action 'INVARIANT' (noprec):   reduce start --> Decls 'EOF'
    action 'ASSERT' (noprec):   reduce start --> Decls 'EOF'
    action 'HAVOC' (noprec):   reduce start --> Decls 'EOF'
    action 'GOTO' (noprec):   reduce start --> Decls 'EOF'
    action 'CALL' (noprec):   reduce start --> Decls 'EOF'
    action 'CCALL' (noprec):   reduce start --> Decls 'EOF'
    action 'RET' (noprec):   reduce start --> Decls 'EOF'
    action 'IRET' (noprec):   reduce start --> Decls 'EOF'
    action 'GO' (noprec):   reduce start --> Decls 'EOF'
    action 'FORALL' (noprec):   reduce start --> Decls 'EOF'
    action 'EXISTS' (noprec):   reduce start --> Decls 'EOF'
    action 'OLD' (noprec):   reduce start --> Decls 'EOF'
    action 'COLONCOLON' (noprec):   reduce start --> Decls 'EOF'
    action 'EQEQGT' (noprec):   reduce start --> Decls 'EOF'
    action 'LTEQEQGT' (noprec):   reduce start --> Decls 'EOF'
    action 'TYPE' (noprec):   reduce start --> Decls 'EOF'
    action 'CONST' (noprec):   reduce start --> Decls 'EOF'
    action 'FUNCTION' (noprec):   reduce start --> Decls 'EOF'
    action 'RETURNS' (noprec):   reduce start --> Decls 'EOF'
    action 'AXIOM' (noprec):   reduce start --> Decls 'EOF'
    action 'PROCEDURE' (noprec):   reduce start --> Decls 'EOF'
    action 'IMPLEMENTATION' (noprec):   reduce start --> Decls 'EOF'
    action 'REQUIRES' (noprec):   reduce start --> Decls 'EOF'
    action 'ENSURES' (noprec):   reduce start --> Decls 'EOF'
    action 'LT' (noprec):   reduce start --> Decls 'EOF'
    action 'GT' (noprec):   reduce start --> Decls 'EOF'
    action 'EQ' (noprec):   reduce start --> Decls 'EOF'
    action 'BANG' (noprec):   reduce start --> Decls 'EOF'
    action 'COMMA' (noprec):   reduce start --> Decls 'EOF'
    action 'LE' (noprec):   reduce start --> Decls 'EOF'
    action 'GE' (noprec):   reduce start --> Decls 'EOF'
    action 'EQEQ' (noprec):   reduce start --> Decls 'EOF'
    action 'NE' (noprec):   reduce start --> Decls 'EOF'
    action 'PLUS' (noprec):   reduce start --> Decls 'EOF'
    action 'MINUS' (noprec):   reduce start --> Decls 'EOF'
    action 'STAR' (noprec):   reduce start --> Decls 'EOF'
    action 'SLASH' (noprec):   reduce start --> Decls 'EOF'
    action 'PERCENT' (noprec):   reduce start --> Decls 'EOF'
    action 'AMPAMP' (noprec):   reduce start --> Decls 'EOF'
    action 'BARBAR' (noprec):   reduce start --> Decls 'EOF'
    action 'COLONEQ' (noprec):   reduce start --> Decls 'EOF'
    action 'INT' (noprec):   reduce start --> Decls 'EOF'
    action 'BOOL' (noprec):   reduce start --> Decls 'EOF'
    action 'IF' (noprec):   reduce start --> Decls 'EOF'
    action 'RETURN' (noprec):   reduce start --> Decls 'EOF'
    action 'VAR' (noprec):   reduce start --> Decls 'EOF'
    action 'LBRACE' (noprec):   reduce start --> Decls 'EOF'
    action 'RBRACE' (noprec):   reduce start --> Decls 'EOF'
    action 'SEMI' (noprec):   reduce start --> Decls 'EOF'
    action 'COLON' (noprec):   reduce start --> Decls 'EOF'
    action 'LPAREN' (noprec):   reduce start --> Decls 'EOF'
    action 'RPAREN' (noprec):   reduce start --> Decls 'EOF'
    action 'LBRACKET' (noprec):   reduce start --> Decls 'EOF'
    action 'RBRACKET' (noprec):   reduce start --> Decls 'EOF'
    action 'LITBOOL' (noprec):   reduce start --> Decls 'EOF'
    action 'LITINT' (noprec):   reduce start --> Decls 'EOF'
    action 'QLID' (noprec):   reduce start --> Decls 'EOF'
    action 'QUID' (noprec):   reduce start --> Decls 'EOF'
    action 'DLID' (noprec):   reduce start --> Decls 'EOF'
    action 'DUID' (noprec):   reduce start --> Decls 'EOF'
    action 'LID' (noprec):   reduce start --> Decls 'EOF'
    action 'UID' (noprec):   reduce start --> Decls 'EOF'
    action 'error' (noprec):   reduce start --> Decls 'EOF'
    action '#' (noprec):   reduce start --> Decls 'EOF'
    action '$$' (noprec):   reduce start --> Decls 'EOF'

  immediate action:   reduce start --> Decls 'EOF'
 gotos:

state 4:
  items:
    ID -> 'LID' . 

  actions:
    action 'EOF' (noprec):   reduce ID --> 'LID'
    action 'EAX' (noprec):   reduce ID --> 'LID'
    action 'EBX' (noprec):   reduce ID --> 'LID'
    action 'ECX' (noprec):   reduce ID --> 'LID'
    action 'EDX' (noprec):   reduce ID --> 'LID'
    action 'ESI' (noprec):   reduce ID --> 'LID'
    action 'EDI' (noprec):   reduce ID --> 'LID'
    action 'EBP' (noprec):   reduce ID --> 'LID'
    action 'ESP' (noprec):   reduce ID --> 'LID'
    action 'MODIFIES' (noprec):   reduce ID --> 'LID'
    action 'INVARIANT' (noprec):   reduce ID --> 'LID'
    action 'ASSERT' (noprec):   reduce ID --> 'LID'
    action 'HAVOC' (noprec):   reduce ID --> 'LID'
    action 'GOTO' (noprec):   reduce ID --> 'LID'
    action 'CALL' (noprec):   reduce ID --> 'LID'
    action 'CCALL' (noprec):   reduce ID --> 'LID'
    action 'RET' (noprec):   reduce ID --> 'LID'
    action 'IRET' (noprec):   reduce ID --> 'LID'
    action 'GO' (noprec):   reduce ID --> 'LID'
    action 'FORALL' (noprec):   reduce ID --> 'LID'
    action 'EXISTS' (noprec):   reduce ID --> 'LID'
    action 'OLD' (noprec):   reduce ID --> 'LID'
    action 'COLONCOLON' (noprec):   reduce ID --> 'LID'
    action 'EQEQGT' (noprec):   reduce ID --> 'LID'
    action 'LTEQEQGT' (noprec):   reduce ID --> 'LID'
    action 'TYPE' (noprec):   reduce ID --> 'LID'
    action 'CONST' (noprec):   reduce ID --> 'LID'
    action 'FUNCTION' (noprec):   reduce ID --> 'LID'
    action 'RETURNS' (noprec):   reduce ID --> 'LID'
    action 'AXIOM' (noprec):   reduce ID --> 'LID'
    action 'PROCEDURE' (noprec):   reduce ID --> 'LID'
    action 'IMPLEMENTATION' (noprec):   reduce ID --> 'LID'
    action 'REQUIRES' (noprec):   reduce ID --> 'LID'
    action 'ENSURES' (noprec):   reduce ID --> 'LID'
    action 'LT' (noprec):   reduce ID --> 'LID'
    action 'GT' (noprec):   reduce ID --> 'LID'
    action 'EQ' (noprec):   reduce ID --> 'LID'
    action 'BANG' (noprec):   reduce ID --> 'LID'
    action 'COMMA' (noprec):   reduce ID --> 'LID'
    action 'LE' (noprec):   reduce ID --> 'LID'
    action 'GE' (noprec):   reduce ID --> 'LID'
    action 'EQEQ' (noprec):   reduce ID --> 'LID'
    action 'NE' (noprec):   reduce ID --> 'LID'
    action 'PLUS' (noprec):   reduce ID --> 'LID'
    action 'MINUS' (noprec):   reduce ID --> 'LID'
    action 'STAR' (noprec):   reduce ID --> 'LID'
    action 'SLASH' (noprec):   reduce ID --> 'LID'
    action 'PERCENT' (noprec):   reduce ID --> 'LID'
    action 'AMPAMP' (noprec):   reduce ID --> 'LID'
    action 'BARBAR' (noprec):   reduce ID --> 'LID'
    action 'COLONEQ' (noprec):   reduce ID --> 'LID'
    action 'INT' (noprec):   reduce ID --> 'LID'
    action 'BOOL' (noprec):   reduce ID --> 'LID'
    action 'IF' (noprec):   reduce ID --> 'LID'
    action 'RETURN' (noprec):   reduce ID --> 'LID'
    action 'VAR' (noprec):   reduce ID --> 'LID'
    action 'LBRACE' (noprec):   reduce ID --> 'LID'
    action 'RBRACE' (noprec):   reduce ID --> 'LID'
    action 'SEMI' (noprec):   reduce ID --> 'LID'
    action 'COLON' (noprec):   reduce ID --> 'LID'
    action 'LPAREN' (noprec):   reduce ID --> 'LID'
    action 'RPAREN' (noprec):   reduce ID --> 'LID'
    action 'LBRACKET' (noprec):   reduce ID --> 'LID'
    action 'RBRACKET' (noprec):   reduce ID --> 'LID'
    action 'LITBOOL' (noprec):   reduce ID --> 'LID'
    action 'LITINT' (noprec):   reduce ID --> 'LID'
    action 'QLID' (noprec):   reduce ID --> 'LID'
    action 'QUID' (noprec):   reduce ID --> 'LID'
    action 'DLID' (noprec):   reduce ID --> 'LID'
    action 'DUID' (noprec):   reduce ID --> 'LID'
    action 'LID' (noprec):   reduce ID --> 'LID'
    action 'UID' (noprec):   reduce ID --> 'LID'
    action 'error' (noprec):   reduce ID --> 'LID'
    action '#' (noprec):   reduce ID --> 'LID'
    action '$$' (noprec):   reduce ID --> 'LID'

  immediate action:   reduce ID --> 'LID'
 gotos:

state 5:
  items:
    ID -> 'UID' . 

  actions:
    action 'EOF' (noprec):   reduce ID --> 'UID'
    action 'EAX' (noprec):   reduce ID --> 'UID'
    action 'EBX' (noprec):   reduce ID --> 'UID'
    action 'ECX' (noprec):   reduce ID --> 'UID'
    action 'EDX' (noprec):   reduce ID --> 'UID'
    action 'ESI' (noprec):   reduce ID --> 'UID'
    action 'EDI' (noprec):   reduce ID --> 'UID'
    action 'EBP' (noprec):   reduce ID --> 'UID'
    action 'ESP' (noprec):   reduce ID --> 'UID'
    action 'MODIFIES' (noprec):   reduce ID --> 'UID'
    action 'INVARIANT' (noprec):   reduce ID --> 'UID'
    action 'ASSERT' (noprec):   reduce ID --> 'UID'
    action 'HAVOC' (noprec):   reduce ID --> 'UID'
    action 'GOTO' (noprec):   reduce ID --> 'UID'
    action 'CALL' (noprec):   reduce ID --> 'UID'
    action 'CCALL' (noprec):   reduce ID --> 'UID'
    action 'RET' (noprec):   reduce ID --> 'UID'
    action 'IRET' (noprec):   reduce ID --> 'UID'
    action 'GO' (noprec):   reduce ID --> 'UID'
    action 'FORALL' (noprec):   reduce ID --> 'UID'
    action 'EXISTS' (noprec):   reduce ID --> 'UID'
    action 'OLD' (noprec):   reduce ID --> 'UID'
    action 'COLONCOLON' (noprec):   reduce ID --> 'UID'
    action 'EQEQGT' (noprec):   reduce ID --> 'UID'
    action 'LTEQEQGT' (noprec):   reduce ID --> 'UID'
    action 'TYPE' (noprec):   reduce ID --> 'UID'
    action 'CONST' (noprec):   reduce ID --> 'UID'
    action 'FUNCTION' (noprec):   reduce ID --> 'UID'
    action 'RETURNS' (noprec):   reduce ID --> 'UID'
    action 'AXIOM' (noprec):   reduce ID --> 'UID'
    action 'PROCEDURE' (noprec):   reduce ID --> 'UID'
    action 'IMPLEMENTATION' (noprec):   reduce ID --> 'UID'
    action 'REQUIRES' (noprec):   reduce ID --> 'UID'
    action 'ENSURES' (noprec):   reduce ID --> 'UID'
    action 'LT' (noprec):   reduce ID --> 'UID'
    action 'GT' (noprec):   reduce ID --> 'UID'
    action 'EQ' (noprec):   reduce ID --> 'UID'
    action 'BANG' (noprec):   reduce ID --> 'UID'
    action 'COMMA' (noprec):   reduce ID --> 'UID'
    action 'LE' (noprec):   reduce ID --> 'UID'
    action 'GE' (noprec):   reduce ID --> 'UID'
    action 'EQEQ' (noprec):   reduce ID --> 'UID'
    action 'NE' (noprec):   reduce ID --> 'UID'
    action 'PLUS' (noprec):   reduce ID --> 'UID'
    action 'MINUS' (noprec):   reduce ID --> 'UID'
    action 'STAR' (noprec):   reduce ID --> 'UID'
    action 'SLASH' (noprec):   reduce ID --> 'UID'
    action 'PERCENT' (noprec):   reduce ID --> 'UID'
    action 'AMPAMP' (noprec):   reduce ID --> 'UID'
    action 'BARBAR' (noprec):   reduce ID --> 'UID'
    action 'COLONEQ' (noprec):   reduce ID --> 'UID'
    action 'INT' (noprec):   reduce ID --> 'UID'
    action 'BOOL' (noprec):   reduce ID --> 'UID'
    action 'IF' (noprec):   reduce ID --> 'UID'
    action 'RETURN' (noprec):   reduce ID --> 'UID'
    action 'VAR' (noprec):   reduce ID --> 'UID'
    action 'LBRACE' (noprec):   reduce ID --> 'UID'
    action 'RBRACE' (noprec):   reduce ID --> 'UID'
    action 'SEMI' (noprec):   reduce ID --> 'UID'
    action 'COLON' (noprec):   reduce ID --> 'UID'
    action 'LPAREN' (noprec):   reduce ID --> 'UID'
    action 'RPAREN' (noprec):   reduce ID --> 'UID'
    action 'LBRACKET' (noprec):   reduce ID --> 'UID'
    action 'RBRACKET' (noprec):   reduce ID --> 'UID'
    action 'LITBOOL' (noprec):   reduce ID --> 'UID'
    action 'LITINT' (noprec):   reduce ID --> 'UID'
    action 'QLID' (noprec):   reduce ID --> 'UID'
    action 'QUID' (noprec):   reduce ID --> 'UID'
    action 'DLID' (noprec):   reduce ID --> 'UID'
    action 'DUID' (noprec):   reduce ID --> 'UID'
    action 'LID' (noprec):   reduce ID --> 'UID'
    action 'UID' (noprec):   reduce ID --> 'UID'
    action 'error' (noprec):   reduce ID --> 'UID'
    action '#' (noprec):   reduce ID --> 'UID'
    action '$$' (noprec):   reduce ID --> 'UID'

  immediate action:   reduce ID --> 'UID'
 gotos:

state 6:
  items:
    Type -> 'INT' . 

  actions:
    action 'EOF' (noprec):   reduce Type --> 'INT'
    action 'EAX' (noprec):   reduce Type --> 'INT'
    action 'EBX' (noprec):   reduce Type --> 'INT'
    action 'ECX' (noprec):   reduce Type --> 'INT'
    action 'EDX' (noprec):   reduce Type --> 'INT'
    action 'ESI' (noprec):   reduce Type --> 'INT'
    action 'EDI' (noprec):   reduce Type --> 'INT'
    action 'EBP' (noprec):   reduce Type --> 'INT'
    action 'ESP' (noprec):   reduce Type --> 'INT'
    action 'MODIFIES' (noprec):   reduce Type --> 'INT'
    action 'INVARIANT' (noprec):   reduce Type --> 'INT'
    action 'ASSERT' (noprec):   reduce Type --> 'INT'
    action 'HAVOC' (noprec):   reduce Type --> 'INT'
    action 'GOTO' (noprec):   reduce Type --> 'INT'
    action 'CALL' (noprec):   reduce Type --> 'INT'
    action 'CCALL' (noprec):   reduce Type --> 'INT'
    action 'RET' (noprec):   reduce Type --> 'INT'
    action 'IRET' (noprec):   reduce Type --> 'INT'
    action 'GO' (noprec):   reduce Type --> 'INT'
    action 'FORALL' (noprec):   reduce Type --> 'INT'
    action 'EXISTS' (noprec):   reduce Type --> 'INT'
    action 'OLD' (noprec):   reduce Type --> 'INT'
    action 'COLONCOLON' (noprec):   reduce Type --> 'INT'
    action 'EQEQGT' (noprec):   reduce Type --> 'INT'
    action 'LTEQEQGT' (noprec):   reduce Type --> 'INT'
    action 'TYPE' (noprec):   reduce Type --> 'INT'
    action 'CONST' (noprec):   reduce Type --> 'INT'
    action 'FUNCTION' (noprec):   reduce Type --> 'INT'
    action 'RETURNS' (noprec):   reduce Type --> 'INT'
    action 'AXIOM' (noprec):   reduce Type --> 'INT'
    action 'PROCEDURE' (noprec):   reduce Type --> 'INT'
    action 'IMPLEMENTATION' (noprec):   reduce Type --> 'INT'
    action 'REQUIRES' (noprec):   reduce Type --> 'INT'
    action 'ENSURES' (noprec):   reduce Type --> 'INT'
    action 'LT' (noprec):   reduce Type --> 'INT'
    action 'GT' (noprec):   reduce Type --> 'INT'
    action 'EQ' (noprec):   reduce Type --> 'INT'
    action 'BANG' (noprec):   reduce Type --> 'INT'
    action 'COMMA' (noprec):   reduce Type --> 'INT'
    action 'LE' (noprec):   reduce Type --> 'INT'
    action 'GE' (noprec):   reduce Type --> 'INT'
    action 'EQEQ' (noprec):   reduce Type --> 'INT'
    action 'NE' (noprec):   reduce Type --> 'INT'
    action 'PLUS' (noprec):   reduce Type --> 'INT'
    action 'MINUS' (noprec):   reduce Type --> 'INT'
    action 'STAR' (noprec):   reduce Type --> 'INT'
    action 'SLASH' (noprec):   reduce Type --> 'INT'
    action 'PERCENT' (noprec):   reduce Type --> 'INT'
    action 'AMPAMP' (noprec):   reduce Type --> 'INT'
    action 'BARBAR' (noprec):   reduce Type --> 'INT'
    action 'COLONEQ' (noprec):   reduce Type --> 'INT'
    action 'INT' (noprec):   reduce Type --> 'INT'
    action 'BOOL' (noprec):   reduce Type --> 'INT'
    action 'IF' (noprec):   reduce Type --> 'INT'
    action 'RETURN' (noprec):   reduce Type --> 'INT'
    action 'VAR' (noprec):   reduce Type --> 'INT'
    action 'LBRACE' (noprec):   reduce Type --> 'INT'
    action 'RBRACE' (noprec):   reduce Type --> 'INT'
    action 'SEMI' (noprec):   reduce Type --> 'INT'
    action 'COLON' (noprec):   reduce Type --> 'INT'
    action 'LPAREN' (noprec):   reduce Type --> 'INT'
    action 'RPAREN' (noprec):   reduce Type --> 'INT'
    action 'LBRACKET' (noprec):   reduce Type --> 'INT'
    action 'RBRACKET' (noprec):   reduce Type --> 'INT'
    action 'LITBOOL' (noprec):   reduce Type --> 'INT'
    action 'LITINT' (noprec):   reduce Type --> 'INT'
    action 'QLID' (noprec):   reduce Type --> 'INT'
    action 'QUID' (noprec):   reduce Type --> 'INT'
    action 'DLID' (noprec):   reduce Type --> 'INT'
    action 'DUID' (noprec):   reduce Type --> 'INT'
    action 'LID' (noprec):   reduce Type --> 'INT'
    action 'UID' (noprec):   reduce Type --> 'INT'
    action 'error' (noprec):   reduce Type --> 'INT'
    action '#' (noprec):   reduce Type --> 'INT'
    action '$$' (noprec):   reduce Type --> 'INT'

  immediate action:   reduce Type --> 'INT'
 gotos:

state 7:
  items:
    Type -> 'BOOL' . 

  actions:
    action 'EOF' (noprec):   reduce Type --> 'BOOL'
    action 'EAX' (noprec):   reduce Type --> 'BOOL'
    action 'EBX' (noprec):   reduce Type --> 'BOOL'
    action 'ECX' (noprec):   reduce Type --> 'BOOL'
    action 'EDX' (noprec):   reduce Type --> 'BOOL'
    action 'ESI' (noprec):   reduce Type --> 'BOOL'
    action 'EDI' (noprec):   reduce Type --> 'BOOL'
    action 'EBP' (noprec):   reduce Type --> 'BOOL'
    action 'ESP' (noprec):   reduce Type --> 'BOOL'
    action 'MODIFIES' (noprec):   reduce Type --> 'BOOL'
    action 'INVARIANT' (noprec):   reduce Type --> 'BOOL'
    action 'ASSERT' (noprec):   reduce Type --> 'BOOL'
    action 'HAVOC' (noprec):   reduce Type --> 'BOOL'
    action 'GOTO' (noprec):   reduce Type --> 'BOOL'
    action 'CALL' (noprec):   reduce Type --> 'BOOL'
    action 'CCALL' (noprec):   reduce Type --> 'BOOL'
    action 'RET' (noprec):   reduce Type --> 'BOOL'
    action 'IRET' (noprec):   reduce Type --> 'BOOL'
    action 'GO' (noprec):   reduce Type --> 'BOOL'
    action 'FORALL' (noprec):   reduce Type --> 'BOOL'
    action 'EXISTS' (noprec):   reduce Type --> 'BOOL'
    action 'OLD' (noprec):   reduce Type --> 'BOOL'
    action 'COLONCOLON' (noprec):   reduce Type --> 'BOOL'
    action 'EQEQGT' (noprec):   reduce Type --> 'BOOL'
    action 'LTEQEQGT' (noprec):   reduce Type --> 'BOOL'
    action 'TYPE' (noprec):   reduce Type --> 'BOOL'
    action 'CONST' (noprec):   reduce Type --> 'BOOL'
    action 'FUNCTION' (noprec):   reduce Type --> 'BOOL'
    action 'RETURNS' (noprec):   reduce Type --> 'BOOL'
    action 'AXIOM' (noprec):   reduce Type --> 'BOOL'
    action 'PROCEDURE' (noprec):   reduce Type --> 'BOOL'
    action 'IMPLEMENTATION' (noprec):   reduce Type --> 'BOOL'
    action 'REQUIRES' (noprec):   reduce Type --> 'BOOL'
    action 'ENSURES' (noprec):   reduce Type --> 'BOOL'
    action 'LT' (noprec):   reduce Type --> 'BOOL'
    action 'GT' (noprec):   reduce Type --> 'BOOL'
    action 'EQ' (noprec):   reduce Type --> 'BOOL'
    action 'BANG' (noprec):   reduce Type --> 'BOOL'
    action 'COMMA' (noprec):   reduce Type --> 'BOOL'
    action 'LE' (noprec):   reduce Type --> 'BOOL'
    action 'GE' (noprec):   reduce Type --> 'BOOL'
    action 'EQEQ' (noprec):   reduce Type --> 'BOOL'
    action 'NE' (noprec):   reduce Type --> 'BOOL'
    action 'PLUS' (noprec):   reduce Type --> 'BOOL'
    action 'MINUS' (noprec):   reduce Type --> 'BOOL'
    action 'STAR' (noprec):   reduce Type --> 'BOOL'
    action 'SLASH' (noprec):   reduce Type --> 'BOOL'
    action 'PERCENT' (noprec):   reduce Type --> 'BOOL'
    action 'AMPAMP' (noprec):   reduce Type --> 'BOOL'
    action 'BARBAR' (noprec):   reduce Type --> 'BOOL'
    action 'COLONEQ' (noprec):   reduce Type --> 'BOOL'
    action 'INT' (noprec):   reduce Type --> 'BOOL'
    action 'BOOL' (noprec):   reduce Type --> 'BOOL'
    action 'IF' (noprec):   reduce Type --> 'BOOL'
    action 'RETURN' (noprec):   reduce Type --> 'BOOL'
    action 'VAR' (noprec):   reduce Type --> 'BOOL'
    action 'LBRACE' (noprec):   reduce Type --> 'BOOL'
    action 'RBRACE' (noprec):   reduce Type --> 'BOOL'
    action 'SEMI' (noprec):   reduce Type --> 'BOOL'
    action 'COLON' (noprec):   reduce Type --> 'BOOL'
    action 'LPAREN' (noprec):   reduce Type --> 'BOOL'
    action 'RPAREN' (noprec):   reduce Type --> 'BOOL'
    action 'LBRACKET' (noprec):   reduce Type --> 'BOOL'
    action 'RBRACKET' (noprec):   reduce Type --> 'BOOL'
    action 'LITBOOL' (noprec):   reduce Type --> 'BOOL'
    action 'LITINT' (noprec):   reduce Type --> 'BOOL'
    action 'QLID' (noprec):   reduce Type --> 'BOOL'
    action 'QUID' (noprec):   reduce Type --> 'BOOL'
    action 'DLID' (noprec):   reduce Type --> 'BOOL'
    action 'DUID' (noprec):   reduce Type --> 'BOOL'
    action 'LID' (noprec):   reduce Type --> 'BOOL'
    action 'UID' (noprec):   reduce Type --> 'BOOL'
    action 'error' (noprec):   reduce Type --> 'BOOL'
    action '#' (noprec):   reduce Type --> 'BOOL'
    action '$$' (noprec):   reduce Type --> 'BOOL'

  immediate action:   reduce Type --> 'BOOL'
 gotos:

state 8:
  items:
    Type -> 'LBRACKET' . Type 'RBRACKET' Type

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   shift 6
    action 'BOOL' (noprec):   shift 7
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (explicit left 10000):   shift 8
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   shift 145
    action 'QUID' (noprec):   shift 144
    action 'DLID' (noprec):   shift 143
    action 'DUID' (noprec):   shift 142
    action 'LID' (noprec):   shift 4
    action 'UID' (noprec):   shift 5
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto ID: 141
    goto Type: 9
    goto AnyId: 12

state 9:
  items:
    Type -> 'LBRACKET' Type . 'RBRACKET' Type

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (explicit left 10000):   shift 10
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 10:
  items:
    Type -> 'LBRACKET' Type 'RBRACKET' . Type

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   shift 6
    action 'BOOL' (noprec):   shift 7
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (explicit left 10000):   shift 8
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   shift 145
    action 'QUID' (noprec):   shift 144
    action 'DLID' (noprec):   shift 143
    action 'DUID' (noprec):   shift 142
    action 'LID' (noprec):   shift 4
    action 'UID' (noprec):   shift 5
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto ID: 141
    goto Type: 11
    goto AnyId: 12

state 11:
  items:
    Type -> 'LBRACKET' Type 'RBRACKET' Type . 

  actions:
    action 'EOF' (explicit left 10000):   reduce Type --> 'LBRACKET' Type 'RBRACKET' Type
    action 'EAX' (explicit left 10000):   reduce Type --> 'LBRACKET' Type 'RBRACKET' Type
    action 'EBX' (explicit left 10000):   reduce Type --> 'LBRACKET' Type 'RBRACKET' Type
    action 'ECX' (explicit left 10000):   reduce Type --> 'LBRACKET' Type 'RBRACKET' Type
    action 'EDX' (explicit left 10000):   reduce Type --> 'LBRACKET' Type 'RBRACKET' Type
    action 'ESI' (explicit left 10000):   reduce Type --> 'LBRACKET' Type 'RBRACKET' Type
    action 'EDI' (explicit left 10000):   reduce Type --> 'LBRACKET' Type 'RBRACKET' Type
    action 'EBP' (explicit left 10000):   reduce Type --> 'LBRACKET' Type 'RBRACKET' Type
    action 'ESP' (explicit left 10000):   reduce Type --> 'LBRACKET' Type 'RBRACKET' Type
    action 'MODIFIES' (explicit left 10000):   reduce Type --> 'LBRACKET' Type 'RBRACKET' Type
    action 'INVARIANT' (explicit left 10000):   reduce Type --> 'LBRACKET' Type 'RBRACKET' Type
    action 'ASSERT' (explicit left 10000):   reduce Type --> 'LBRACKET' Type 'RBRACKET' Type
    action 'HAVOC' (explicit left 10000):   reduce Type --> 'LBRACKET' Type 'RBRACKET' Type
    action 'GOTO' (explicit left 10000):   reduce Type --> 'LBRACKET' Type 'RBRACKET' Type
    action 'CALL' (explicit left 10000):   reduce Type --> 'LBRACKET' Type 'RBRACKET' Type
    action 'CCALL' (explicit left 10000):   reduce Type --> 'LBRACKET' Type 'RBRACKET' Type
    action 'RET' (explicit left 10000):   reduce Type --> 'LBRACKET' Type 'RBRACKET' Type
    action 'IRET' (explicit left 10000):   reduce Type --> 'LBRACKET' Type 'RBRACKET' Type
    action 'GO' (explicit left 10000):   reduce Type --> 'LBRACKET' Type 'RBRACKET' Type
    action 'FORALL' (explicit left 10000):   reduce Type --> 'LBRACKET' Type 'RBRACKET' Type
    action 'EXISTS' (explicit left 10000):   reduce Type --> 'LBRACKET' Type 'RBRACKET' Type
    action 'OLD' (explicit left 10000):   reduce Type --> 'LBRACKET' Type 'RBRACKET' Type
    action 'COLONCOLON' (explicit left 10000):   reduce Type --> 'LBRACKET' Type 'RBRACKET' Type
    action 'EQEQGT' (explicit left 10000):   reduce Type --> 'LBRACKET' Type 'RBRACKET' Type
    action 'LTEQEQGT' (explicit left 10000):   reduce Type --> 'LBRACKET' Type 'RBRACKET' Type
    action 'TYPE' (explicit left 10000):   reduce Type --> 'LBRACKET' Type 'RBRACKET' Type
    action 'CONST' (explicit left 10000):   reduce Type --> 'LBRACKET' Type 'RBRACKET' Type
    action 'FUNCTION' (explicit left 10000):   reduce Type --> 'LBRACKET' Type 'RBRACKET' Type
    action 'RETURNS' (explicit left 10000):   reduce Type --> 'LBRACKET' Type 'RBRACKET' Type
    action 'AXIOM' (explicit left 10000):   reduce Type --> 'LBRACKET' Type 'RBRACKET' Type
    action 'PROCEDURE' (explicit left 10000):   reduce Type --> 'LBRACKET' Type 'RBRACKET' Type
    action 'IMPLEMENTATION' (explicit left 10000):   reduce Type --> 'LBRACKET' Type 'RBRACKET' Type
    action 'REQUIRES' (explicit left 10000):   reduce Type --> 'LBRACKET' Type 'RBRACKET' Type
    action 'ENSURES' (explicit left 10000):   reduce Type --> 'LBRACKET' Type 'RBRACKET' Type
    action 'LT' (explicit left 10000):   reduce Type --> 'LBRACKET' Type 'RBRACKET' Type
    action 'GT' (explicit left 10000):   reduce Type --> 'LBRACKET' Type 'RBRACKET' Type
    action 'EQ' (explicit left 10000):   reduce Type --> 'LBRACKET' Type 'RBRACKET' Type
    action 'BANG' (explicit left 10000):   reduce Type --> 'LBRACKET' Type 'RBRACKET' Type
    action 'COMMA' (explicit left 10000):   reduce Type --> 'LBRACKET' Type 'RBRACKET' Type
    action 'LE' (explicit left 10000):   reduce Type --> 'LBRACKET' Type 'RBRACKET' Type
    action 'GE' (explicit left 10000):   reduce Type --> 'LBRACKET' Type 'RBRACKET' Type
    action 'EQEQ' (explicit left 10000):   reduce Type --> 'LBRACKET' Type 'RBRACKET' Type
    action 'NE' (explicit left 10000):   reduce Type --> 'LBRACKET' Type 'RBRACKET' Type
    action 'PLUS' (explicit left 10000):   reduce Type --> 'LBRACKET' Type 'RBRACKET' Type
    action 'MINUS' (explicit left 10000):   reduce Type --> 'LBRACKET' Type 'RBRACKET' Type
    action 'STAR' (explicit left 10000):   reduce Type --> 'LBRACKET' Type 'RBRACKET' Type
    action 'SLASH' (explicit left 10000):   reduce Type --> 'LBRACKET' Type 'RBRACKET' Type
    action 'PERCENT' (explicit left 10000):   reduce Type --> 'LBRACKET' Type 'RBRACKET' Type
    action 'AMPAMP' (explicit left 10000):   reduce Type --> 'LBRACKET' Type 'RBRACKET' Type
    action 'BARBAR' (explicit left 10000):   reduce Type --> 'LBRACKET' Type 'RBRACKET' Type
    action 'COLONEQ' (explicit left 10000):   reduce Type --> 'LBRACKET' Type 'RBRACKET' Type
    action 'INT' (explicit left 10000):   reduce Type --> 'LBRACKET' Type 'RBRACKET' Type
    action 'BOOL' (explicit left 10000):   reduce Type --> 'LBRACKET' Type 'RBRACKET' Type
    action 'IF' (explicit left 10000):   reduce Type --> 'LBRACKET' Type 'RBRACKET' Type
    action 'RETURN' (explicit left 10000):   reduce Type --> 'LBRACKET' Type 'RBRACKET' Type
    action 'VAR' (explicit left 10000):   reduce Type --> 'LBRACKET' Type 'RBRACKET' Type
    action 'LBRACE' (explicit left 10000):   reduce Type --> 'LBRACKET' Type 'RBRACKET' Type
    action 'RBRACE' (explicit left 10000):   reduce Type --> 'LBRACKET' Type 'RBRACKET' Type
    action 'SEMI' (explicit left 10000):   reduce Type --> 'LBRACKET' Type 'RBRACKET' Type
    action 'COLON' (explicit left 10000):   reduce Type --> 'LBRACKET' Type 'RBRACKET' Type
    action 'LPAREN' (explicit left 10000):   reduce Type --> 'LBRACKET' Type 'RBRACKET' Type
    action 'RPAREN' (explicit left 10000):   reduce Type --> 'LBRACKET' Type 'RBRACKET' Type
    action 'LBRACKET' (explicit left 10000):   reduce Type --> 'LBRACKET' Type 'RBRACKET' Type
    action 'RBRACKET' (explicit left 10000):   reduce Type --> 'LBRACKET' Type 'RBRACKET' Type
    action 'LITBOOL' (explicit left 10000):   reduce Type --> 'LBRACKET' Type 'RBRACKET' Type
    action 'LITINT' (explicit left 10000):   reduce Type --> 'LBRACKET' Type 'RBRACKET' Type
    action 'QLID' (explicit left 10000):   reduce Type --> 'LBRACKET' Type 'RBRACKET' Type
    action 'QUID' (explicit left 10000):   reduce Type --> 'LBRACKET' Type 'RBRACKET' Type
    action 'DLID' (explicit left 10000):   reduce Type --> 'LBRACKET' Type 'RBRACKET' Type
    action 'DUID' (explicit left 10000):   reduce Type --> 'LBRACKET' Type 'RBRACKET' Type
    action 'LID' (explicit left 10000):   reduce Type --> 'LBRACKET' Type 'RBRACKET' Type
    action 'UID' (explicit left 10000):   reduce Type --> 'LBRACKET' Type 'RBRACKET' Type
    action 'error' (explicit left 10000):   reduce Type --> 'LBRACKET' Type 'RBRACKET' Type
    action '#' (explicit left 10000):   reduce Type --> 'LBRACKET' Type 'RBRACKET' Type
    action '$$' (explicit left 10000):   reduce Type --> 'LBRACKET' Type 'RBRACKET' Type

  immediate action:   reduce Type --> 'LBRACKET' Type 'RBRACKET' Type
 gotos:

state 12:
  items:
    Type -> AnyId . 

  actions:
    action 'EOF' (noprec):   reduce Type --> AnyId
    action 'EAX' (noprec):   reduce Type --> AnyId
    action 'EBX' (noprec):   reduce Type --> AnyId
    action 'ECX' (noprec):   reduce Type --> AnyId
    action 'EDX' (noprec):   reduce Type --> AnyId
    action 'ESI' (noprec):   reduce Type --> AnyId
    action 'EDI' (noprec):   reduce Type --> AnyId
    action 'EBP' (noprec):   reduce Type --> AnyId
    action 'ESP' (noprec):   reduce Type --> AnyId
    action 'MODIFIES' (noprec):   reduce Type --> AnyId
    action 'INVARIANT' (noprec):   reduce Type --> AnyId
    action 'ASSERT' (noprec):   reduce Type --> AnyId
    action 'HAVOC' (noprec):   reduce Type --> AnyId
    action 'GOTO' (noprec):   reduce Type --> AnyId
    action 'CALL' (noprec):   reduce Type --> AnyId
    action 'CCALL' (noprec):   reduce Type --> AnyId
    action 'RET' (noprec):   reduce Type --> AnyId
    action 'IRET' (noprec):   reduce Type --> AnyId
    action 'GO' (noprec):   reduce Type --> AnyId
    action 'FORALL' (noprec):   reduce Type --> AnyId
    action 'EXISTS' (noprec):   reduce Type --> AnyId
    action 'OLD' (noprec):   reduce Type --> AnyId
    action 'COLONCOLON' (noprec):   reduce Type --> AnyId
    action 'EQEQGT' (noprec):   reduce Type --> AnyId
    action 'LTEQEQGT' (noprec):   reduce Type --> AnyId
    action 'TYPE' (noprec):   reduce Type --> AnyId
    action 'CONST' (noprec):   reduce Type --> AnyId
    action 'FUNCTION' (noprec):   reduce Type --> AnyId
    action 'RETURNS' (noprec):   reduce Type --> AnyId
    action 'AXIOM' (noprec):   reduce Type --> AnyId
    action 'PROCEDURE' (noprec):   reduce Type --> AnyId
    action 'IMPLEMENTATION' (noprec):   reduce Type --> AnyId
    action 'REQUIRES' (noprec):   reduce Type --> AnyId
    action 'ENSURES' (noprec):   reduce Type --> AnyId
    action 'LT' (noprec):   reduce Type --> AnyId
    action 'GT' (noprec):   reduce Type --> AnyId
    action 'EQ' (noprec):   reduce Type --> AnyId
    action 'BANG' (noprec):   reduce Type --> AnyId
    action 'COMMA' (noprec):   reduce Type --> AnyId
    action 'LE' (noprec):   reduce Type --> AnyId
    action 'GE' (noprec):   reduce Type --> AnyId
    action 'EQEQ' (noprec):   reduce Type --> AnyId
    action 'NE' (noprec):   reduce Type --> AnyId
    action 'PLUS' (noprec):   reduce Type --> AnyId
    action 'MINUS' (noprec):   reduce Type --> AnyId
    action 'STAR' (noprec):   reduce Type --> AnyId
    action 'SLASH' (noprec):   reduce Type --> AnyId
    action 'PERCENT' (noprec):   reduce Type --> AnyId
    action 'AMPAMP' (noprec):   reduce Type --> AnyId
    action 'BARBAR' (noprec):   reduce Type --> AnyId
    action 'COLONEQ' (noprec):   reduce Type --> AnyId
    action 'INT' (noprec):   reduce Type --> AnyId
    action 'BOOL' (noprec):   reduce Type --> AnyId
    action 'IF' (noprec):   reduce Type --> AnyId
    action 'RETURN' (noprec):   reduce Type --> AnyId
    action 'VAR' (noprec):   reduce Type --> AnyId
    action 'LBRACE' (noprec):   reduce Type --> AnyId
    action 'RBRACE' (noprec):   reduce Type --> AnyId
    action 'SEMI' (noprec):   reduce Type --> AnyId
    action 'COLON' (noprec):   reduce Type --> AnyId
    action 'LPAREN' (noprec):   reduce Type --> AnyId
    action 'RPAREN' (noprec):   reduce Type --> AnyId
    action 'LBRACKET' (noprec):   reduce Type --> AnyId
    action 'RBRACKET' (noprec):   reduce Type --> AnyId
    action 'LITBOOL' (noprec):   reduce Type --> AnyId
    action 'LITINT' (noprec):   reduce Type --> AnyId
    action 'QLID' (noprec):   reduce Type --> AnyId
    action 'QUID' (noprec):   reduce Type --> AnyId
    action 'DLID' (noprec):   reduce Type --> AnyId
    action 'DUID' (noprec):   reduce Type --> AnyId
    action 'LID' (noprec):   reduce Type --> AnyId
    action 'UID' (noprec):   reduce Type --> AnyId
    action 'error' (noprec):   reduce Type --> AnyId
    action '#' (noprec):   reduce Type --> AnyId
    action '$$' (noprec):   reduce Type --> AnyId

  immediate action:   reduce Type --> AnyId
 gotos:

state 13:
  items:
    Type -> AnyId . 
    FunRet -> AnyId . 'COLON' Type

  actions:
    action 'EOF' (noprec):   reduce Type --> AnyId
    action 'EAX' (noprec):   reduce Type --> AnyId
    action 'EBX' (noprec):   reduce Type --> AnyId
    action 'ECX' (noprec):   reduce Type --> AnyId
    action 'EDX' (noprec):   reduce Type --> AnyId
    action 'ESI' (noprec):   reduce Type --> AnyId
    action 'EDI' (noprec):   reduce Type --> AnyId
    action 'EBP' (noprec):   reduce Type --> AnyId
    action 'ESP' (noprec):   reduce Type --> AnyId
    action 'MODIFIES' (noprec):   reduce Type --> AnyId
    action 'INVARIANT' (noprec):   reduce Type --> AnyId
    action 'ASSERT' (noprec):   reduce Type --> AnyId
    action 'HAVOC' (noprec):   reduce Type --> AnyId
    action 'GOTO' (noprec):   reduce Type --> AnyId
    action 'CALL' (noprec):   reduce Type --> AnyId
    action 'CCALL' (noprec):   reduce Type --> AnyId
    action 'RET' (noprec):   reduce Type --> AnyId
    action 'IRET' (noprec):   reduce Type --> AnyId
    action 'GO' (noprec):   reduce Type --> AnyId
    action 'FORALL' (noprec):   reduce Type --> AnyId
    action 'EXISTS' (noprec):   reduce Type --> AnyId
    action 'OLD' (noprec):   reduce Type --> AnyId
    action 'COLONCOLON' (noprec):   reduce Type --> AnyId
    action 'EQEQGT' (noprec):   reduce Type --> AnyId
    action 'LTEQEQGT' (noprec):   reduce Type --> AnyId
    action 'TYPE' (noprec):   reduce Type --> AnyId
    action 'CONST' (noprec):   reduce Type --> AnyId
    action 'FUNCTION' (noprec):   reduce Type --> AnyId
    action 'RETURNS' (noprec):   reduce Type --> AnyId
    action 'AXIOM' (noprec):   reduce Type --> AnyId
    action 'PROCEDURE' (noprec):   reduce Type --> AnyId
    action 'IMPLEMENTATION' (noprec):   reduce Type --> AnyId
    action 'REQUIRES' (noprec):   reduce Type --> AnyId
    action 'ENSURES' (noprec):   reduce Type --> AnyId
    action 'LT' (noprec):   reduce Type --> AnyId
    action 'GT' (noprec):   reduce Type --> AnyId
    action 'EQ' (noprec):   reduce Type --> AnyId
    action 'BANG' (noprec):   reduce Type --> AnyId
    action 'COMMA' (noprec):   reduce Type --> AnyId
    action 'LE' (noprec):   reduce Type --> AnyId
    action 'GE' (noprec):   reduce Type --> AnyId
    action 'EQEQ' (noprec):   reduce Type --> AnyId
    action 'NE' (noprec):   reduce Type --> AnyId
    action 'PLUS' (noprec):   reduce Type --> AnyId
    action 'MINUS' (noprec):   reduce Type --> AnyId
    action 'STAR' (noprec):   reduce Type --> AnyId
    action 'SLASH' (noprec):   reduce Type --> AnyId
    action 'PERCENT' (noprec):   reduce Type --> AnyId
    action 'AMPAMP' (noprec):   reduce Type --> AnyId
    action 'BARBAR' (noprec):   reduce Type --> AnyId
    action 'COLONEQ' (noprec):   reduce Type --> AnyId
    action 'INT' (noprec):   reduce Type --> AnyId
    action 'BOOL' (noprec):   reduce Type --> AnyId
    action 'IF' (noprec):   reduce Type --> AnyId
    action 'RETURN' (noprec):   reduce Type --> AnyId
    action 'VAR' (noprec):   reduce Type --> AnyId
    action 'LBRACE' (noprec):   reduce Type --> AnyId
    action 'RBRACE' (noprec):   reduce Type --> AnyId
    action 'SEMI' (noprec):   reduce Type --> AnyId
    action 'COLON' (noprec):   shift 323
    action 'LPAREN' (noprec):   reduce Type --> AnyId
    action 'RPAREN' (noprec):   reduce Type --> AnyId
    action 'LBRACKET' (noprec):   reduce Type --> AnyId
    action 'RBRACKET' (noprec):   reduce Type --> AnyId
    action 'LITBOOL' (noprec):   reduce Type --> AnyId
    action 'LITINT' (noprec):   reduce Type --> AnyId
    action 'QLID' (noprec):   reduce Type --> AnyId
    action 'QUID' (noprec):   reduce Type --> AnyId
    action 'DLID' (noprec):   reduce Type --> AnyId
    action 'DUID' (noprec):   reduce Type --> AnyId
    action 'LID' (noprec):   reduce Type --> AnyId
    action 'UID' (noprec):   reduce Type --> AnyId
    action 'error' (noprec):   reduce Type --> AnyId
    action '#' (noprec):   reduce Type --> AnyId
    action '$$' (noprec):   reduce Type --> AnyId

  immediate action: <none>
 gotos:

state 14:
  items:
    Reg -> 'EAX' . 

  actions:
    action 'EOF' (noprec):   reduce Reg --> 'EAX'
    action 'EAX' (noprec):   reduce Reg --> 'EAX'
    action 'EBX' (noprec):   reduce Reg --> 'EAX'
    action 'ECX' (noprec):   reduce Reg --> 'EAX'
    action 'EDX' (noprec):   reduce Reg --> 'EAX'
    action 'ESI' (noprec):   reduce Reg --> 'EAX'
    action 'EDI' (noprec):   reduce Reg --> 'EAX'
    action 'EBP' (noprec):   reduce Reg --> 'EAX'
    action 'ESP' (noprec):   reduce Reg --> 'EAX'
    action 'MODIFIES' (noprec):   reduce Reg --> 'EAX'
    action 'INVARIANT' (noprec):   reduce Reg --> 'EAX'
    action 'ASSERT' (noprec):   reduce Reg --> 'EAX'
    action 'HAVOC' (noprec):   reduce Reg --> 'EAX'
    action 'GOTO' (noprec):   reduce Reg --> 'EAX'
    action 'CALL' (noprec):   reduce Reg --> 'EAX'
    action 'CCALL' (noprec):   reduce Reg --> 'EAX'
    action 'RET' (noprec):   reduce Reg --> 'EAX'
    action 'IRET' (noprec):   reduce Reg --> 'EAX'
    action 'GO' (noprec):   reduce Reg --> 'EAX'
    action 'FORALL' (noprec):   reduce Reg --> 'EAX'
    action 'EXISTS' (noprec):   reduce Reg --> 'EAX'
    action 'OLD' (noprec):   reduce Reg --> 'EAX'
    action 'COLONCOLON' (noprec):   reduce Reg --> 'EAX'
    action 'EQEQGT' (noprec):   reduce Reg --> 'EAX'
    action 'LTEQEQGT' (noprec):   reduce Reg --> 'EAX'
    action 'TYPE' (noprec):   reduce Reg --> 'EAX'
    action 'CONST' (noprec):   reduce Reg --> 'EAX'
    action 'FUNCTION' (noprec):   reduce Reg --> 'EAX'
    action 'RETURNS' (noprec):   reduce Reg --> 'EAX'
    action 'AXIOM' (noprec):   reduce Reg --> 'EAX'
    action 'PROCEDURE' (noprec):   reduce Reg --> 'EAX'
    action 'IMPLEMENTATION' (noprec):   reduce Reg --> 'EAX'
    action 'REQUIRES' (noprec):   reduce Reg --> 'EAX'
    action 'ENSURES' (noprec):   reduce Reg --> 'EAX'
    action 'LT' (noprec):   reduce Reg --> 'EAX'
    action 'GT' (noprec):   reduce Reg --> 'EAX'
    action 'EQ' (noprec):   reduce Reg --> 'EAX'
    action 'BANG' (noprec):   reduce Reg --> 'EAX'
    action 'COMMA' (noprec):   reduce Reg --> 'EAX'
    action 'LE' (noprec):   reduce Reg --> 'EAX'
    action 'GE' (noprec):   reduce Reg --> 'EAX'
    action 'EQEQ' (noprec):   reduce Reg --> 'EAX'
    action 'NE' (noprec):   reduce Reg --> 'EAX'
    action 'PLUS' (noprec):   reduce Reg --> 'EAX'
    action 'MINUS' (noprec):   reduce Reg --> 'EAX'
    action 'STAR' (noprec):   reduce Reg --> 'EAX'
    action 'SLASH' (noprec):   reduce Reg --> 'EAX'
    action 'PERCENT' (noprec):   reduce Reg --> 'EAX'
    action 'AMPAMP' (noprec):   reduce Reg --> 'EAX'
    action 'BARBAR' (noprec):   reduce Reg --> 'EAX'
    action 'COLONEQ' (noprec):   reduce Reg --> 'EAX'
    action 'INT' (noprec):   reduce Reg --> 'EAX'
    action 'BOOL' (noprec):   reduce Reg --> 'EAX'
    action 'IF' (noprec):   reduce Reg --> 'EAX'
    action 'RETURN' (noprec):   reduce Reg --> 'EAX'
    action 'VAR' (noprec):   reduce Reg --> 'EAX'
    action 'LBRACE' (noprec):   reduce Reg --> 'EAX'
    action 'RBRACE' (noprec):   reduce Reg --> 'EAX'
    action 'SEMI' (noprec):   reduce Reg --> 'EAX'
    action 'COLON' (noprec):   reduce Reg --> 'EAX'
    action 'LPAREN' (noprec):   reduce Reg --> 'EAX'
    action 'RPAREN' (noprec):   reduce Reg --> 'EAX'
    action 'LBRACKET' (noprec):   reduce Reg --> 'EAX'
    action 'RBRACKET' (noprec):   reduce Reg --> 'EAX'
    action 'LITBOOL' (noprec):   reduce Reg --> 'EAX'
    action 'LITINT' (noprec):   reduce Reg --> 'EAX'
    action 'QLID' (noprec):   reduce Reg --> 'EAX'
    action 'QUID' (noprec):   reduce Reg --> 'EAX'
    action 'DLID' (noprec):   reduce Reg --> 'EAX'
    action 'DUID' (noprec):   reduce Reg --> 'EAX'
    action 'LID' (noprec):   reduce Reg --> 'EAX'
    action 'UID' (noprec):   reduce Reg --> 'EAX'
    action 'error' (noprec):   reduce Reg --> 'EAX'
    action '#' (noprec):   reduce Reg --> 'EAX'
    action '$$' (noprec):   reduce Reg --> 'EAX'

  immediate action:   reduce Reg --> 'EAX'
 gotos:

state 15:
  items:
    Reg -> 'EBX' . 

  actions:
    action 'EOF' (noprec):   reduce Reg --> 'EBX'
    action 'EAX' (noprec):   reduce Reg --> 'EBX'
    action 'EBX' (noprec):   reduce Reg --> 'EBX'
    action 'ECX' (noprec):   reduce Reg --> 'EBX'
    action 'EDX' (noprec):   reduce Reg --> 'EBX'
    action 'ESI' (noprec):   reduce Reg --> 'EBX'
    action 'EDI' (noprec):   reduce Reg --> 'EBX'
    action 'EBP' (noprec):   reduce Reg --> 'EBX'
    action 'ESP' (noprec):   reduce Reg --> 'EBX'
    action 'MODIFIES' (noprec):   reduce Reg --> 'EBX'
    action 'INVARIANT' (noprec):   reduce Reg --> 'EBX'
    action 'ASSERT' (noprec):   reduce Reg --> 'EBX'
    action 'HAVOC' (noprec):   reduce Reg --> 'EBX'
    action 'GOTO' (noprec):   reduce Reg --> 'EBX'
    action 'CALL' (noprec):   reduce Reg --> 'EBX'
    action 'CCALL' (noprec):   reduce Reg --> 'EBX'
    action 'RET' (noprec):   reduce Reg --> 'EBX'
    action 'IRET' (noprec):   reduce Reg --> 'EBX'
    action 'GO' (noprec):   reduce Reg --> 'EBX'
    action 'FORALL' (noprec):   reduce Reg --> 'EBX'
    action 'EXISTS' (noprec):   reduce Reg --> 'EBX'
    action 'OLD' (noprec):   reduce Reg --> 'EBX'
    action 'COLONCOLON' (noprec):   reduce Reg --> 'EBX'
    action 'EQEQGT' (noprec):   reduce Reg --> 'EBX'
    action 'LTEQEQGT' (noprec):   reduce Reg --> 'EBX'
    action 'TYPE' (noprec):   reduce Reg --> 'EBX'
    action 'CONST' (noprec):   reduce Reg --> 'EBX'
    action 'FUNCTION' (noprec):   reduce Reg --> 'EBX'
    action 'RETURNS' (noprec):   reduce Reg --> 'EBX'
    action 'AXIOM' (noprec):   reduce Reg --> 'EBX'
    action 'PROCEDURE' (noprec):   reduce Reg --> 'EBX'
    action 'IMPLEMENTATION' (noprec):   reduce Reg --> 'EBX'
    action 'REQUIRES' (noprec):   reduce Reg --> 'EBX'
    action 'ENSURES' (noprec):   reduce Reg --> 'EBX'
    action 'LT' (noprec):   reduce Reg --> 'EBX'
    action 'GT' (noprec):   reduce Reg --> 'EBX'
    action 'EQ' (noprec):   reduce Reg --> 'EBX'
    action 'BANG' (noprec):   reduce Reg --> 'EBX'
    action 'COMMA' (noprec):   reduce Reg --> 'EBX'
    action 'LE' (noprec):   reduce Reg --> 'EBX'
    action 'GE' (noprec):   reduce Reg --> 'EBX'
    action 'EQEQ' (noprec):   reduce Reg --> 'EBX'
    action 'NE' (noprec):   reduce Reg --> 'EBX'
    action 'PLUS' (noprec):   reduce Reg --> 'EBX'
    action 'MINUS' (noprec):   reduce Reg --> 'EBX'
    action 'STAR' (noprec):   reduce Reg --> 'EBX'
    action 'SLASH' (noprec):   reduce Reg --> 'EBX'
    action 'PERCENT' (noprec):   reduce Reg --> 'EBX'
    action 'AMPAMP' (noprec):   reduce Reg --> 'EBX'
    action 'BARBAR' (noprec):   reduce Reg --> 'EBX'
    action 'COLONEQ' (noprec):   reduce Reg --> 'EBX'
    action 'INT' (noprec):   reduce Reg --> 'EBX'
    action 'BOOL' (noprec):   reduce Reg --> 'EBX'
    action 'IF' (noprec):   reduce Reg --> 'EBX'
    action 'RETURN' (noprec):   reduce Reg --> 'EBX'
    action 'VAR' (noprec):   reduce Reg --> 'EBX'
    action 'LBRACE' (noprec):   reduce Reg --> 'EBX'
    action 'RBRACE' (noprec):   reduce Reg --> 'EBX'
    action 'SEMI' (noprec):   reduce Reg --> 'EBX'
    action 'COLON' (noprec):   reduce Reg --> 'EBX'
    action 'LPAREN' (noprec):   reduce Reg --> 'EBX'
    action 'RPAREN' (noprec):   reduce Reg --> 'EBX'
    action 'LBRACKET' (noprec):   reduce Reg --> 'EBX'
    action 'RBRACKET' (noprec):   reduce Reg --> 'EBX'
    action 'LITBOOL' (noprec):   reduce Reg --> 'EBX'
    action 'LITINT' (noprec):   reduce Reg --> 'EBX'
    action 'QLID' (noprec):   reduce Reg --> 'EBX'
    action 'QUID' (noprec):   reduce Reg --> 'EBX'
    action 'DLID' (noprec):   reduce Reg --> 'EBX'
    action 'DUID' (noprec):   reduce Reg --> 'EBX'
    action 'LID' (noprec):   reduce Reg --> 'EBX'
    action 'UID' (noprec):   reduce Reg --> 'EBX'
    action 'error' (noprec):   reduce Reg --> 'EBX'
    action '#' (noprec):   reduce Reg --> 'EBX'
    action '$$' (noprec):   reduce Reg --> 'EBX'

  immediate action:   reduce Reg --> 'EBX'
 gotos:

state 16:
  items:
    Reg -> 'ECX' . 

  actions:
    action 'EOF' (noprec):   reduce Reg --> 'ECX'
    action 'EAX' (noprec):   reduce Reg --> 'ECX'
    action 'EBX' (noprec):   reduce Reg --> 'ECX'
    action 'ECX' (noprec):   reduce Reg --> 'ECX'
    action 'EDX' (noprec):   reduce Reg --> 'ECX'
    action 'ESI' (noprec):   reduce Reg --> 'ECX'
    action 'EDI' (noprec):   reduce Reg --> 'ECX'
    action 'EBP' (noprec):   reduce Reg --> 'ECX'
    action 'ESP' (noprec):   reduce Reg --> 'ECX'
    action 'MODIFIES' (noprec):   reduce Reg --> 'ECX'
    action 'INVARIANT' (noprec):   reduce Reg --> 'ECX'
    action 'ASSERT' (noprec):   reduce Reg --> 'ECX'
    action 'HAVOC' (noprec):   reduce Reg --> 'ECX'
    action 'GOTO' (noprec):   reduce Reg --> 'ECX'
    action 'CALL' (noprec):   reduce Reg --> 'ECX'
    action 'CCALL' (noprec):   reduce Reg --> 'ECX'
    action 'RET' (noprec):   reduce Reg --> 'ECX'
    action 'IRET' (noprec):   reduce Reg --> 'ECX'
    action 'GO' (noprec):   reduce Reg --> 'ECX'
    action 'FORALL' (noprec):   reduce Reg --> 'ECX'
    action 'EXISTS' (noprec):   reduce Reg --> 'ECX'
    action 'OLD' (noprec):   reduce Reg --> 'ECX'
    action 'COLONCOLON' (noprec):   reduce Reg --> 'ECX'
    action 'EQEQGT' (noprec):   reduce Reg --> 'ECX'
    action 'LTEQEQGT' (noprec):   reduce Reg --> 'ECX'
    action 'TYPE' (noprec):   reduce Reg --> 'ECX'
    action 'CONST' (noprec):   reduce Reg --> 'ECX'
    action 'FUNCTION' (noprec):   reduce Reg --> 'ECX'
    action 'RETURNS' (noprec):   reduce Reg --> 'ECX'
    action 'AXIOM' (noprec):   reduce Reg --> 'ECX'
    action 'PROCEDURE' (noprec):   reduce Reg --> 'ECX'
    action 'IMPLEMENTATION' (noprec):   reduce Reg --> 'ECX'
    action 'REQUIRES' (noprec):   reduce Reg --> 'ECX'
    action 'ENSURES' (noprec):   reduce Reg --> 'ECX'
    action 'LT' (noprec):   reduce Reg --> 'ECX'
    action 'GT' (noprec):   reduce Reg --> 'ECX'
    action 'EQ' (noprec):   reduce Reg --> 'ECX'
    action 'BANG' (noprec):   reduce Reg --> 'ECX'
    action 'COMMA' (noprec):   reduce Reg --> 'ECX'
    action 'LE' (noprec):   reduce Reg --> 'ECX'
    action 'GE' (noprec):   reduce Reg --> 'ECX'
    action 'EQEQ' (noprec):   reduce Reg --> 'ECX'
    action 'NE' (noprec):   reduce Reg --> 'ECX'
    action 'PLUS' (noprec):   reduce Reg --> 'ECX'
    action 'MINUS' (noprec):   reduce Reg --> 'ECX'
    action 'STAR' (noprec):   reduce Reg --> 'ECX'
    action 'SLASH' (noprec):   reduce Reg --> 'ECX'
    action 'PERCENT' (noprec):   reduce Reg --> 'ECX'
    action 'AMPAMP' (noprec):   reduce Reg --> 'ECX'
    action 'BARBAR' (noprec):   reduce Reg --> 'ECX'
    action 'COLONEQ' (noprec):   reduce Reg --> 'ECX'
    action 'INT' (noprec):   reduce Reg --> 'ECX'
    action 'BOOL' (noprec):   reduce Reg --> 'ECX'
    action 'IF' (noprec):   reduce Reg --> 'ECX'
    action 'RETURN' (noprec):   reduce Reg --> 'ECX'
    action 'VAR' (noprec):   reduce Reg --> 'ECX'
    action 'LBRACE' (noprec):   reduce Reg --> 'ECX'
    action 'RBRACE' (noprec):   reduce Reg --> 'ECX'
    action 'SEMI' (noprec):   reduce Reg --> 'ECX'
    action 'COLON' (noprec):   reduce Reg --> 'ECX'
    action 'LPAREN' (noprec):   reduce Reg --> 'ECX'
    action 'RPAREN' (noprec):   reduce Reg --> 'ECX'
    action 'LBRACKET' (noprec):   reduce Reg --> 'ECX'
    action 'RBRACKET' (noprec):   reduce Reg --> 'ECX'
    action 'LITBOOL' (noprec):   reduce Reg --> 'ECX'
    action 'LITINT' (noprec):   reduce Reg --> 'ECX'
    action 'QLID' (noprec):   reduce Reg --> 'ECX'
    action 'QUID' (noprec):   reduce Reg --> 'ECX'
    action 'DLID' (noprec):   reduce Reg --> 'ECX'
    action 'DUID' (noprec):   reduce Reg --> 'ECX'
    action 'LID' (noprec):   reduce Reg --> 'ECX'
    action 'UID' (noprec):   reduce Reg --> 'ECX'
    action 'error' (noprec):   reduce Reg --> 'ECX'
    action '#' (noprec):   reduce Reg --> 'ECX'
    action '$$' (noprec):   reduce Reg --> 'ECX'

  immediate action:   reduce Reg --> 'ECX'
 gotos:

state 17:
  items:
    Reg -> 'EDX' . 

  actions:
    action 'EOF' (noprec):   reduce Reg --> 'EDX'
    action 'EAX' (noprec):   reduce Reg --> 'EDX'
    action 'EBX' (noprec):   reduce Reg --> 'EDX'
    action 'ECX' (noprec):   reduce Reg --> 'EDX'
    action 'EDX' (noprec):   reduce Reg --> 'EDX'
    action 'ESI' (noprec):   reduce Reg --> 'EDX'
    action 'EDI' (noprec):   reduce Reg --> 'EDX'
    action 'EBP' (noprec):   reduce Reg --> 'EDX'
    action 'ESP' (noprec):   reduce Reg --> 'EDX'
    action 'MODIFIES' (noprec):   reduce Reg --> 'EDX'
    action 'INVARIANT' (noprec):   reduce Reg --> 'EDX'
    action 'ASSERT' (noprec):   reduce Reg --> 'EDX'
    action 'HAVOC' (noprec):   reduce Reg --> 'EDX'
    action 'GOTO' (noprec):   reduce Reg --> 'EDX'
    action 'CALL' (noprec):   reduce Reg --> 'EDX'
    action 'CCALL' (noprec):   reduce Reg --> 'EDX'
    action 'RET' (noprec):   reduce Reg --> 'EDX'
    action 'IRET' (noprec):   reduce Reg --> 'EDX'
    action 'GO' (noprec):   reduce Reg --> 'EDX'
    action 'FORALL' (noprec):   reduce Reg --> 'EDX'
    action 'EXISTS' (noprec):   reduce Reg --> 'EDX'
    action 'OLD' (noprec):   reduce Reg --> 'EDX'
    action 'COLONCOLON' (noprec):   reduce Reg --> 'EDX'
    action 'EQEQGT' (noprec):   reduce Reg --> 'EDX'
    action 'LTEQEQGT' (noprec):   reduce Reg --> 'EDX'
    action 'TYPE' (noprec):   reduce Reg --> 'EDX'
    action 'CONST' (noprec):   reduce Reg --> 'EDX'
    action 'FUNCTION' (noprec):   reduce Reg --> 'EDX'
    action 'RETURNS' (noprec):   reduce Reg --> 'EDX'
    action 'AXIOM' (noprec):   reduce Reg --> 'EDX'
    action 'PROCEDURE' (noprec):   reduce Reg --> 'EDX'
    action 'IMPLEMENTATION' (noprec):   reduce Reg --> 'EDX'
    action 'REQUIRES' (noprec):   reduce Reg --> 'EDX'
    action 'ENSURES' (noprec):   reduce Reg --> 'EDX'
    action 'LT' (noprec):   reduce Reg --> 'EDX'
    action 'GT' (noprec):   reduce Reg --> 'EDX'
    action 'EQ' (noprec):   reduce Reg --> 'EDX'
    action 'BANG' (noprec):   reduce Reg --> 'EDX'
    action 'COMMA' (noprec):   reduce Reg --> 'EDX'
    action 'LE' (noprec):   reduce Reg --> 'EDX'
    action 'GE' (noprec):   reduce Reg --> 'EDX'
    action 'EQEQ' (noprec):   reduce Reg --> 'EDX'
    action 'NE' (noprec):   reduce Reg --> 'EDX'
    action 'PLUS' (noprec):   reduce Reg --> 'EDX'
    action 'MINUS' (noprec):   reduce Reg --> 'EDX'
    action 'STAR' (noprec):   reduce Reg --> 'EDX'
    action 'SLASH' (noprec):   reduce Reg --> 'EDX'
    action 'PERCENT' (noprec):   reduce Reg --> 'EDX'
    action 'AMPAMP' (noprec):   reduce Reg --> 'EDX'
    action 'BARBAR' (noprec):   reduce Reg --> 'EDX'
    action 'COLONEQ' (noprec):   reduce Reg --> 'EDX'
    action 'INT' (noprec):   reduce Reg --> 'EDX'
    action 'BOOL' (noprec):   reduce Reg --> 'EDX'
    action 'IF' (noprec):   reduce Reg --> 'EDX'
    action 'RETURN' (noprec):   reduce Reg --> 'EDX'
    action 'VAR' (noprec):   reduce Reg --> 'EDX'
    action 'LBRACE' (noprec):   reduce Reg --> 'EDX'
    action 'RBRACE' (noprec):   reduce Reg --> 'EDX'
    action 'SEMI' (noprec):   reduce Reg --> 'EDX'
    action 'COLON' (noprec):   reduce Reg --> 'EDX'
    action 'LPAREN' (noprec):   reduce Reg --> 'EDX'
    action 'RPAREN' (noprec):   reduce Reg --> 'EDX'
    action 'LBRACKET' (noprec):   reduce Reg --> 'EDX'
    action 'RBRACKET' (noprec):   reduce Reg --> 'EDX'
    action 'LITBOOL' (noprec):   reduce Reg --> 'EDX'
    action 'LITINT' (noprec):   reduce Reg --> 'EDX'
    action 'QLID' (noprec):   reduce Reg --> 'EDX'
    action 'QUID' (noprec):   reduce Reg --> 'EDX'
    action 'DLID' (noprec):   reduce Reg --> 'EDX'
    action 'DUID' (noprec):   reduce Reg --> 'EDX'
    action 'LID' (noprec):   reduce Reg --> 'EDX'
    action 'UID' (noprec):   reduce Reg --> 'EDX'
    action 'error' (noprec):   reduce Reg --> 'EDX'
    action '#' (noprec):   reduce Reg --> 'EDX'
    action '$$' (noprec):   reduce Reg --> 'EDX'

  immediate action:   reduce Reg --> 'EDX'
 gotos:

state 18:
  items:
    Reg -> 'ESI' . 

  actions:
    action 'EOF' (noprec):   reduce Reg --> 'ESI'
    action 'EAX' (noprec):   reduce Reg --> 'ESI'
    action 'EBX' (noprec):   reduce Reg --> 'ESI'
    action 'ECX' (noprec):   reduce Reg --> 'ESI'
    action 'EDX' (noprec):   reduce Reg --> 'ESI'
    action 'ESI' (noprec):   reduce Reg --> 'ESI'
    action 'EDI' (noprec):   reduce Reg --> 'ESI'
    action 'EBP' (noprec):   reduce Reg --> 'ESI'
    action 'ESP' (noprec):   reduce Reg --> 'ESI'
    action 'MODIFIES' (noprec):   reduce Reg --> 'ESI'
    action 'INVARIANT' (noprec):   reduce Reg --> 'ESI'
    action 'ASSERT' (noprec):   reduce Reg --> 'ESI'
    action 'HAVOC' (noprec):   reduce Reg --> 'ESI'
    action 'GOTO' (noprec):   reduce Reg --> 'ESI'
    action 'CALL' (noprec):   reduce Reg --> 'ESI'
    action 'CCALL' (noprec):   reduce Reg --> 'ESI'
    action 'RET' (noprec):   reduce Reg --> 'ESI'
    action 'IRET' (noprec):   reduce Reg --> 'ESI'
    action 'GO' (noprec):   reduce Reg --> 'ESI'
    action 'FORALL' (noprec):   reduce Reg --> 'ESI'
    action 'EXISTS' (noprec):   reduce Reg --> 'ESI'
    action 'OLD' (noprec):   reduce Reg --> 'ESI'
    action 'COLONCOLON' (noprec):   reduce Reg --> 'ESI'
    action 'EQEQGT' (noprec):   reduce Reg --> 'ESI'
    action 'LTEQEQGT' (noprec):   reduce Reg --> 'ESI'
    action 'TYPE' (noprec):   reduce Reg --> 'ESI'
    action 'CONST' (noprec):   reduce Reg --> 'ESI'
    action 'FUNCTION' (noprec):   reduce Reg --> 'ESI'
    action 'RETURNS' (noprec):   reduce Reg --> 'ESI'
    action 'AXIOM' (noprec):   reduce Reg --> 'ESI'
    action 'PROCEDURE' (noprec):   reduce Reg --> 'ESI'
    action 'IMPLEMENTATION' (noprec):   reduce Reg --> 'ESI'
    action 'REQUIRES' (noprec):   reduce Reg --> 'ESI'
    action 'ENSURES' (noprec):   reduce Reg --> 'ESI'
    action 'LT' (noprec):   reduce Reg --> 'ESI'
    action 'GT' (noprec):   reduce Reg --> 'ESI'
    action 'EQ' (noprec):   reduce Reg --> 'ESI'
    action 'BANG' (noprec):   reduce Reg --> 'ESI'
    action 'COMMA' (noprec):   reduce Reg --> 'ESI'
    action 'LE' (noprec):   reduce Reg --> 'ESI'
    action 'GE' (noprec):   reduce Reg --> 'ESI'
    action 'EQEQ' (noprec):   reduce Reg --> 'ESI'
    action 'NE' (noprec):   reduce Reg --> 'ESI'
    action 'PLUS' (noprec):   reduce Reg --> 'ESI'
    action 'MINUS' (noprec):   reduce Reg --> 'ESI'
    action 'STAR' (noprec):   reduce Reg --> 'ESI'
    action 'SLASH' (noprec):   reduce Reg --> 'ESI'
    action 'PERCENT' (noprec):   reduce Reg --> 'ESI'
    action 'AMPAMP' (noprec):   reduce Reg --> 'ESI'
    action 'BARBAR' (noprec):   reduce Reg --> 'ESI'
    action 'COLONEQ' (noprec):   reduce Reg --> 'ESI'
    action 'INT' (noprec):   reduce Reg --> 'ESI'
    action 'BOOL' (noprec):   reduce Reg --> 'ESI'
    action 'IF' (noprec):   reduce Reg --> 'ESI'
    action 'RETURN' (noprec):   reduce Reg --> 'ESI'
    action 'VAR' (noprec):   reduce Reg --> 'ESI'
    action 'LBRACE' (noprec):   reduce Reg --> 'ESI'
    action 'RBRACE' (noprec):   reduce Reg --> 'ESI'
    action 'SEMI' (noprec):   reduce Reg --> 'ESI'
    action 'COLON' (noprec):   reduce Reg --> 'ESI'
    action 'LPAREN' (noprec):   reduce Reg --> 'ESI'
    action 'RPAREN' (noprec):   reduce Reg --> 'ESI'
    action 'LBRACKET' (noprec):   reduce Reg --> 'ESI'
    action 'RBRACKET' (noprec):   reduce Reg --> 'ESI'
    action 'LITBOOL' (noprec):   reduce Reg --> 'ESI'
    action 'LITINT' (noprec):   reduce Reg --> 'ESI'
    action 'QLID' (noprec):   reduce Reg --> 'ESI'
    action 'QUID' (noprec):   reduce Reg --> 'ESI'
    action 'DLID' (noprec):   reduce Reg --> 'ESI'
    action 'DUID' (noprec):   reduce Reg --> 'ESI'
    action 'LID' (noprec):   reduce Reg --> 'ESI'
    action 'UID' (noprec):   reduce Reg --> 'ESI'
    action 'error' (noprec):   reduce Reg --> 'ESI'
    action '#' (noprec):   reduce Reg --> 'ESI'
    action '$$' (noprec):   reduce Reg --> 'ESI'

  immediate action:   reduce Reg --> 'ESI'
 gotos:

state 19:
  items:
    Reg -> 'EDI' . 

  actions:
    action 'EOF' (noprec):   reduce Reg --> 'EDI'
    action 'EAX' (noprec):   reduce Reg --> 'EDI'
    action 'EBX' (noprec):   reduce Reg --> 'EDI'
    action 'ECX' (noprec):   reduce Reg --> 'EDI'
    action 'EDX' (noprec):   reduce Reg --> 'EDI'
    action 'ESI' (noprec):   reduce Reg --> 'EDI'
    action 'EDI' (noprec):   reduce Reg --> 'EDI'
    action 'EBP' (noprec):   reduce Reg --> 'EDI'
    action 'ESP' (noprec):   reduce Reg --> 'EDI'
    action 'MODIFIES' (noprec):   reduce Reg --> 'EDI'
    action 'INVARIANT' (noprec):   reduce Reg --> 'EDI'
    action 'ASSERT' (noprec):   reduce Reg --> 'EDI'
    action 'HAVOC' (noprec):   reduce Reg --> 'EDI'
    action 'GOTO' (noprec):   reduce Reg --> 'EDI'
    action 'CALL' (noprec):   reduce Reg --> 'EDI'
    action 'CCALL' (noprec):   reduce Reg --> 'EDI'
    action 'RET' (noprec):   reduce Reg --> 'EDI'
    action 'IRET' (noprec):   reduce Reg --> 'EDI'
    action 'GO' (noprec):   reduce Reg --> 'EDI'
    action 'FORALL' (noprec):   reduce Reg --> 'EDI'
    action 'EXISTS' (noprec):   reduce Reg --> 'EDI'
    action 'OLD' (noprec):   reduce Reg --> 'EDI'
    action 'COLONCOLON' (noprec):   reduce Reg --> 'EDI'
    action 'EQEQGT' (noprec):   reduce Reg --> 'EDI'
    action 'LTEQEQGT' (noprec):   reduce Reg --> 'EDI'
    action 'TYPE' (noprec):   reduce Reg --> 'EDI'
    action 'CONST' (noprec):   reduce Reg --> 'EDI'
    action 'FUNCTION' (noprec):   reduce Reg --> 'EDI'
    action 'RETURNS' (noprec):   reduce Reg --> 'EDI'
    action 'AXIOM' (noprec):   reduce Reg --> 'EDI'
    action 'PROCEDURE' (noprec):   reduce Reg --> 'EDI'
    action 'IMPLEMENTATION' (noprec):   reduce Reg --> 'EDI'
    action 'REQUIRES' (noprec):   reduce Reg --> 'EDI'
    action 'ENSURES' (noprec):   reduce Reg --> 'EDI'
    action 'LT' (noprec):   reduce Reg --> 'EDI'
    action 'GT' (noprec):   reduce Reg --> 'EDI'
    action 'EQ' (noprec):   reduce Reg --> 'EDI'
    action 'BANG' (noprec):   reduce Reg --> 'EDI'
    action 'COMMA' (noprec):   reduce Reg --> 'EDI'
    action 'LE' (noprec):   reduce Reg --> 'EDI'
    action 'GE' (noprec):   reduce Reg --> 'EDI'
    action 'EQEQ' (noprec):   reduce Reg --> 'EDI'
    action 'NE' (noprec):   reduce Reg --> 'EDI'
    action 'PLUS' (noprec):   reduce Reg --> 'EDI'
    action 'MINUS' (noprec):   reduce Reg --> 'EDI'
    action 'STAR' (noprec):   reduce Reg --> 'EDI'
    action 'SLASH' (noprec):   reduce Reg --> 'EDI'
    action 'PERCENT' (noprec):   reduce Reg --> 'EDI'
    action 'AMPAMP' (noprec):   reduce Reg --> 'EDI'
    action 'BARBAR' (noprec):   reduce Reg --> 'EDI'
    action 'COLONEQ' (noprec):   reduce Reg --> 'EDI'
    action 'INT' (noprec):   reduce Reg --> 'EDI'
    action 'BOOL' (noprec):   reduce Reg --> 'EDI'
    action 'IF' (noprec):   reduce Reg --> 'EDI'
    action 'RETURN' (noprec):   reduce Reg --> 'EDI'
    action 'VAR' (noprec):   reduce Reg --> 'EDI'
    action 'LBRACE' (noprec):   reduce Reg --> 'EDI'
    action 'RBRACE' (noprec):   reduce Reg --> 'EDI'
    action 'SEMI' (noprec):   reduce Reg --> 'EDI'
    action 'COLON' (noprec):   reduce Reg --> 'EDI'
    action 'LPAREN' (noprec):   reduce Reg --> 'EDI'
    action 'RPAREN' (noprec):   reduce Reg --> 'EDI'
    action 'LBRACKET' (noprec):   reduce Reg --> 'EDI'
    action 'RBRACKET' (noprec):   reduce Reg --> 'EDI'
    action 'LITBOOL' (noprec):   reduce Reg --> 'EDI'
    action 'LITINT' (noprec):   reduce Reg --> 'EDI'
    action 'QLID' (noprec):   reduce Reg --> 'EDI'
    action 'QUID' (noprec):   reduce Reg --> 'EDI'
    action 'DLID' (noprec):   reduce Reg --> 'EDI'
    action 'DUID' (noprec):   reduce Reg --> 'EDI'
    action 'LID' (noprec):   reduce Reg --> 'EDI'
    action 'UID' (noprec):   reduce Reg --> 'EDI'
    action 'error' (noprec):   reduce Reg --> 'EDI'
    action '#' (noprec):   reduce Reg --> 'EDI'
    action '$$' (noprec):   reduce Reg --> 'EDI'

  immediate action:   reduce Reg --> 'EDI'
 gotos:

state 20:
  items:
    Reg -> 'EBP' . 

  actions:
    action 'EOF' (noprec):   reduce Reg --> 'EBP'
    action 'EAX' (noprec):   reduce Reg --> 'EBP'
    action 'EBX' (noprec):   reduce Reg --> 'EBP'
    action 'ECX' (noprec):   reduce Reg --> 'EBP'
    action 'EDX' (noprec):   reduce Reg --> 'EBP'
    action 'ESI' (noprec):   reduce Reg --> 'EBP'
    action 'EDI' (noprec):   reduce Reg --> 'EBP'
    action 'EBP' (noprec):   reduce Reg --> 'EBP'
    action 'ESP' (noprec):   reduce Reg --> 'EBP'
    action 'MODIFIES' (noprec):   reduce Reg --> 'EBP'
    action 'INVARIANT' (noprec):   reduce Reg --> 'EBP'
    action 'ASSERT' (noprec):   reduce Reg --> 'EBP'
    action 'HAVOC' (noprec):   reduce Reg --> 'EBP'
    action 'GOTO' (noprec):   reduce Reg --> 'EBP'
    action 'CALL' (noprec):   reduce Reg --> 'EBP'
    action 'CCALL' (noprec):   reduce Reg --> 'EBP'
    action 'RET' (noprec):   reduce Reg --> 'EBP'
    action 'IRET' (noprec):   reduce Reg --> 'EBP'
    action 'GO' (noprec):   reduce Reg --> 'EBP'
    action 'FORALL' (noprec):   reduce Reg --> 'EBP'
    action 'EXISTS' (noprec):   reduce Reg --> 'EBP'
    action 'OLD' (noprec):   reduce Reg --> 'EBP'
    action 'COLONCOLON' (noprec):   reduce Reg --> 'EBP'
    action 'EQEQGT' (noprec):   reduce Reg --> 'EBP'
    action 'LTEQEQGT' (noprec):   reduce Reg --> 'EBP'
    action 'TYPE' (noprec):   reduce Reg --> 'EBP'
    action 'CONST' (noprec):   reduce Reg --> 'EBP'
    action 'FUNCTION' (noprec):   reduce Reg --> 'EBP'
    action 'RETURNS' (noprec):   reduce Reg --> 'EBP'
    action 'AXIOM' (noprec):   reduce Reg --> 'EBP'
    action 'PROCEDURE' (noprec):   reduce Reg --> 'EBP'
    action 'IMPLEMENTATION' (noprec):   reduce Reg --> 'EBP'
    action 'REQUIRES' (noprec):   reduce Reg --> 'EBP'
    action 'ENSURES' (noprec):   reduce Reg --> 'EBP'
    action 'LT' (noprec):   reduce Reg --> 'EBP'
    action 'GT' (noprec):   reduce Reg --> 'EBP'
    action 'EQ' (noprec):   reduce Reg --> 'EBP'
    action 'BANG' (noprec):   reduce Reg --> 'EBP'
    action 'COMMA' (noprec):   reduce Reg --> 'EBP'
    action 'LE' (noprec):   reduce Reg --> 'EBP'
    action 'GE' (noprec):   reduce Reg --> 'EBP'
    action 'EQEQ' (noprec):   reduce Reg --> 'EBP'
    action 'NE' (noprec):   reduce Reg --> 'EBP'
    action 'PLUS' (noprec):   reduce Reg --> 'EBP'
    action 'MINUS' (noprec):   reduce Reg --> 'EBP'
    action 'STAR' (noprec):   reduce Reg --> 'EBP'
    action 'SLASH' (noprec):   reduce Reg --> 'EBP'
    action 'PERCENT' (noprec):   reduce Reg --> 'EBP'
    action 'AMPAMP' (noprec):   reduce Reg --> 'EBP'
    action 'BARBAR' (noprec):   reduce Reg --> 'EBP'
    action 'COLONEQ' (noprec):   reduce Reg --> 'EBP'
    action 'INT' (noprec):   reduce Reg --> 'EBP'
    action 'BOOL' (noprec):   reduce Reg --> 'EBP'
    action 'IF' (noprec):   reduce Reg --> 'EBP'
    action 'RETURN' (noprec):   reduce Reg --> 'EBP'
    action 'VAR' (noprec):   reduce Reg --> 'EBP'
    action 'LBRACE' (noprec):   reduce Reg --> 'EBP'
    action 'RBRACE' (noprec):   reduce Reg --> 'EBP'
    action 'SEMI' (noprec):   reduce Reg --> 'EBP'
    action 'COLON' (noprec):   reduce Reg --> 'EBP'
    action 'LPAREN' (noprec):   reduce Reg --> 'EBP'
    action 'RPAREN' (noprec):   reduce Reg --> 'EBP'
    action 'LBRACKET' (noprec):   reduce Reg --> 'EBP'
    action 'RBRACKET' (noprec):   reduce Reg --> 'EBP'
    action 'LITBOOL' (noprec):   reduce Reg --> 'EBP'
    action 'LITINT' (noprec):   reduce Reg --> 'EBP'
    action 'QLID' (noprec):   reduce Reg --> 'EBP'
    action 'QUID' (noprec):   reduce Reg --> 'EBP'
    action 'DLID' (noprec):   reduce Reg --> 'EBP'
    action 'DUID' (noprec):   reduce Reg --> 'EBP'
    action 'LID' (noprec):   reduce Reg --> 'EBP'
    action 'UID' (noprec):   reduce Reg --> 'EBP'
    action 'error' (noprec):   reduce Reg --> 'EBP'
    action '#' (noprec):   reduce Reg --> 'EBP'
    action '$$' (noprec):   reduce Reg --> 'EBP'

  immediate action:   reduce Reg --> 'EBP'
 gotos:

state 21:
  items:
    Reg -> 'ESP' . 

  actions:
    action 'EOF' (noprec):   reduce Reg --> 'ESP'
    action 'EAX' (noprec):   reduce Reg --> 'ESP'
    action 'EBX' (noprec):   reduce Reg --> 'ESP'
    action 'ECX' (noprec):   reduce Reg --> 'ESP'
    action 'EDX' (noprec):   reduce Reg --> 'ESP'
    action 'ESI' (noprec):   reduce Reg --> 'ESP'
    action 'EDI' (noprec):   reduce Reg --> 'ESP'
    action 'EBP' (noprec):   reduce Reg --> 'ESP'
    action 'ESP' (noprec):   reduce Reg --> 'ESP'
    action 'MODIFIES' (noprec):   reduce Reg --> 'ESP'
    action 'INVARIANT' (noprec):   reduce Reg --> 'ESP'
    action 'ASSERT' (noprec):   reduce Reg --> 'ESP'
    action 'HAVOC' (noprec):   reduce Reg --> 'ESP'
    action 'GOTO' (noprec):   reduce Reg --> 'ESP'
    action 'CALL' (noprec):   reduce Reg --> 'ESP'
    action 'CCALL' (noprec):   reduce Reg --> 'ESP'
    action 'RET' (noprec):   reduce Reg --> 'ESP'
    action 'IRET' (noprec):   reduce Reg --> 'ESP'
    action 'GO' (noprec):   reduce Reg --> 'ESP'
    action 'FORALL' (noprec):   reduce Reg --> 'ESP'
    action 'EXISTS' (noprec):   reduce Reg --> 'ESP'
    action 'OLD' (noprec):   reduce Reg --> 'ESP'
    action 'COLONCOLON' (noprec):   reduce Reg --> 'ESP'
    action 'EQEQGT' (noprec):   reduce Reg --> 'ESP'
    action 'LTEQEQGT' (noprec):   reduce Reg --> 'ESP'
    action 'TYPE' (noprec):   reduce Reg --> 'ESP'
    action 'CONST' (noprec):   reduce Reg --> 'ESP'
    action 'FUNCTION' (noprec):   reduce Reg --> 'ESP'
    action 'RETURNS' (noprec):   reduce Reg --> 'ESP'
    action 'AXIOM' (noprec):   reduce Reg --> 'ESP'
    action 'PROCEDURE' (noprec):   reduce Reg --> 'ESP'
    action 'IMPLEMENTATION' (noprec):   reduce Reg --> 'ESP'
    action 'REQUIRES' (noprec):   reduce Reg --> 'ESP'
    action 'ENSURES' (noprec):   reduce Reg --> 'ESP'
    action 'LT' (noprec):   reduce Reg --> 'ESP'
    action 'GT' (noprec):   reduce Reg --> 'ESP'
    action 'EQ' (noprec):   reduce Reg --> 'ESP'
    action 'BANG' (noprec):   reduce Reg --> 'ESP'
    action 'COMMA' (noprec):   reduce Reg --> 'ESP'
    action 'LE' (noprec):   reduce Reg --> 'ESP'
    action 'GE' (noprec):   reduce Reg --> 'ESP'
    action 'EQEQ' (noprec):   reduce Reg --> 'ESP'
    action 'NE' (noprec):   reduce Reg --> 'ESP'
    action 'PLUS' (noprec):   reduce Reg --> 'ESP'
    action 'MINUS' (noprec):   reduce Reg --> 'ESP'
    action 'STAR' (noprec):   reduce Reg --> 'ESP'
    action 'SLASH' (noprec):   reduce Reg --> 'ESP'
    action 'PERCENT' (noprec):   reduce Reg --> 'ESP'
    action 'AMPAMP' (noprec):   reduce Reg --> 'ESP'
    action 'BARBAR' (noprec):   reduce Reg --> 'ESP'
    action 'COLONEQ' (noprec):   reduce Reg --> 'ESP'
    action 'INT' (noprec):   reduce Reg --> 'ESP'
    action 'BOOL' (noprec):   reduce Reg --> 'ESP'
    action 'IF' (noprec):   reduce Reg --> 'ESP'
    action 'RETURN' (noprec):   reduce Reg --> 'ESP'
    action 'VAR' (noprec):   reduce Reg --> 'ESP'
    action 'LBRACE' (noprec):   reduce Reg --> 'ESP'
    action 'RBRACE' (noprec):   reduce Reg --> 'ESP'
    action 'SEMI' (noprec):   reduce Reg --> 'ESP'
    action 'COLON' (noprec):   reduce Reg --> 'ESP'
    action 'LPAREN' (noprec):   reduce Reg --> 'ESP'
    action 'RPAREN' (noprec):   reduce Reg --> 'ESP'
    action 'LBRACKET' (noprec):   reduce Reg --> 'ESP'
    action 'RBRACKET' (noprec):   reduce Reg --> 'ESP'
    action 'LITBOOL' (noprec):   reduce Reg --> 'ESP'
    action 'LITINT' (noprec):   reduce Reg --> 'ESP'
    action 'QLID' (noprec):   reduce Reg --> 'ESP'
    action 'QUID' (noprec):   reduce Reg --> 'ESP'
    action 'DLID' (noprec):   reduce Reg --> 'ESP'
    action 'DUID' (noprec):   reduce Reg --> 'ESP'
    action 'LID' (noprec):   reduce Reg --> 'ESP'
    action 'UID' (noprec):   reduce Reg --> 'ESP'
    action 'error' (noprec):   reduce Reg --> 'ESP'
    action '#' (noprec):   reduce Reg --> 'ESP'
    action '$$' (noprec):   reduce Reg --> 'ESP'

  immediate action:   reduce Reg --> 'ESP'
 gotos:

state 22:
  items:
    Const -> 'LITINT' . 

  actions:
    action 'EOF' (noprec):   reduce Const --> 'LITINT'
    action 'EAX' (noprec):   reduce Const --> 'LITINT'
    action 'EBX' (noprec):   reduce Const --> 'LITINT'
    action 'ECX' (noprec):   reduce Const --> 'LITINT'
    action 'EDX' (noprec):   reduce Const --> 'LITINT'
    action 'ESI' (noprec):   reduce Const --> 'LITINT'
    action 'EDI' (noprec):   reduce Const --> 'LITINT'
    action 'EBP' (noprec):   reduce Const --> 'LITINT'
    action 'ESP' (noprec):   reduce Const --> 'LITINT'
    action 'MODIFIES' (noprec):   reduce Const --> 'LITINT'
    action 'INVARIANT' (noprec):   reduce Const --> 'LITINT'
    action 'ASSERT' (noprec):   reduce Const --> 'LITINT'
    action 'HAVOC' (noprec):   reduce Const --> 'LITINT'
    action 'GOTO' (noprec):   reduce Const --> 'LITINT'
    action 'CALL' (noprec):   reduce Const --> 'LITINT'
    action 'CCALL' (noprec):   reduce Const --> 'LITINT'
    action 'RET' (noprec):   reduce Const --> 'LITINT'
    action 'IRET' (noprec):   reduce Const --> 'LITINT'
    action 'GO' (noprec):   reduce Const --> 'LITINT'
    action 'FORALL' (noprec):   reduce Const --> 'LITINT'
    action 'EXISTS' (noprec):   reduce Const --> 'LITINT'
    action 'OLD' (noprec):   reduce Const --> 'LITINT'
    action 'COLONCOLON' (noprec):   reduce Const --> 'LITINT'
    action 'EQEQGT' (noprec):   reduce Const --> 'LITINT'
    action 'LTEQEQGT' (noprec):   reduce Const --> 'LITINT'
    action 'TYPE' (noprec):   reduce Const --> 'LITINT'
    action 'CONST' (noprec):   reduce Const --> 'LITINT'
    action 'FUNCTION' (noprec):   reduce Const --> 'LITINT'
    action 'RETURNS' (noprec):   reduce Const --> 'LITINT'
    action 'AXIOM' (noprec):   reduce Const --> 'LITINT'
    action 'PROCEDURE' (noprec):   reduce Const --> 'LITINT'
    action 'IMPLEMENTATION' (noprec):   reduce Const --> 'LITINT'
    action 'REQUIRES' (noprec):   reduce Const --> 'LITINT'
    action 'ENSURES' (noprec):   reduce Const --> 'LITINT'
    action 'LT' (noprec):   reduce Const --> 'LITINT'
    action 'GT' (noprec):   reduce Const --> 'LITINT'
    action 'EQ' (noprec):   reduce Const --> 'LITINT'
    action 'BANG' (noprec):   reduce Const --> 'LITINT'
    action 'COMMA' (noprec):   reduce Const --> 'LITINT'
    action 'LE' (noprec):   reduce Const --> 'LITINT'
    action 'GE' (noprec):   reduce Const --> 'LITINT'
    action 'EQEQ' (noprec):   reduce Const --> 'LITINT'
    action 'NE' (noprec):   reduce Const --> 'LITINT'
    action 'PLUS' (noprec):   reduce Const --> 'LITINT'
    action 'MINUS' (noprec):   reduce Const --> 'LITINT'
    action 'STAR' (noprec):   reduce Const --> 'LITINT'
    action 'SLASH' (noprec):   reduce Const --> 'LITINT'
    action 'PERCENT' (noprec):   reduce Const --> 'LITINT'
    action 'AMPAMP' (noprec):   reduce Const --> 'LITINT'
    action 'BARBAR' (noprec):   reduce Const --> 'LITINT'
    action 'COLONEQ' (noprec):   reduce Const --> 'LITINT'
    action 'INT' (noprec):   reduce Const --> 'LITINT'
    action 'BOOL' (noprec):   reduce Const --> 'LITINT'
    action 'IF' (noprec):   reduce Const --> 'LITINT'
    action 'RETURN' (noprec):   reduce Const --> 'LITINT'
    action 'VAR' (noprec):   reduce Const --> 'LITINT'
    action 'LBRACE' (noprec):   reduce Const --> 'LITINT'
    action 'RBRACE' (noprec):   reduce Const --> 'LITINT'
    action 'SEMI' (noprec):   reduce Const --> 'LITINT'
    action 'COLON' (noprec):   reduce Const --> 'LITINT'
    action 'LPAREN' (noprec):   reduce Const --> 'LITINT'
    action 'RPAREN' (noprec):   reduce Const --> 'LITINT'
    action 'LBRACKET' (noprec):   reduce Const --> 'LITINT'
    action 'RBRACKET' (noprec):   reduce Const --> 'LITINT'
    action 'LITBOOL' (noprec):   reduce Const --> 'LITINT'
    action 'LITINT' (noprec):   reduce Const --> 'LITINT'
    action 'QLID' (noprec):   reduce Const --> 'LITINT'
    action 'QUID' (noprec):   reduce Const --> 'LITINT'
    action 'DLID' (noprec):   reduce Const --> 'LITINT'
    action 'DUID' (noprec):   reduce Const --> 'LITINT'
    action 'LID' (noprec):   reduce Const --> 'LITINT'
    action 'UID' (noprec):   reduce Const --> 'LITINT'
    action 'error' (noprec):   reduce Const --> 'LITINT'
    action '#' (noprec):   reduce Const --> 'LITINT'
    action '$$' (noprec):   reduce Const --> 'LITINT'

  immediate action:   reduce Const --> 'LITINT'
 gotos:

state 23:
  items:
    Const -> 'QUID' . 

  actions:
    action 'EOF' (noprec):   reduce Const --> 'QUID'
    action 'EAX' (noprec):   reduce Const --> 'QUID'
    action 'EBX' (noprec):   reduce Const --> 'QUID'
    action 'ECX' (noprec):   reduce Const --> 'QUID'
    action 'EDX' (noprec):   reduce Const --> 'QUID'
    action 'ESI' (noprec):   reduce Const --> 'QUID'
    action 'EDI' (noprec):   reduce Const --> 'QUID'
    action 'EBP' (noprec):   reduce Const --> 'QUID'
    action 'ESP' (noprec):   reduce Const --> 'QUID'
    action 'MODIFIES' (noprec):   reduce Const --> 'QUID'
    action 'INVARIANT' (noprec):   reduce Const --> 'QUID'
    action 'ASSERT' (noprec):   reduce Const --> 'QUID'
    action 'HAVOC' (noprec):   reduce Const --> 'QUID'
    action 'GOTO' (noprec):   reduce Const --> 'QUID'
    action 'CALL' (noprec):   reduce Const --> 'QUID'
    action 'CCALL' (noprec):   reduce Const --> 'QUID'
    action 'RET' (noprec):   reduce Const --> 'QUID'
    action 'IRET' (noprec):   reduce Const --> 'QUID'
    action 'GO' (noprec):   reduce Const --> 'QUID'
    action 'FORALL' (noprec):   reduce Const --> 'QUID'
    action 'EXISTS' (noprec):   reduce Const --> 'QUID'
    action 'OLD' (noprec):   reduce Const --> 'QUID'
    action 'COLONCOLON' (noprec):   reduce Const --> 'QUID'
    action 'EQEQGT' (noprec):   reduce Const --> 'QUID'
    action 'LTEQEQGT' (noprec):   reduce Const --> 'QUID'
    action 'TYPE' (noprec):   reduce Const --> 'QUID'
    action 'CONST' (noprec):   reduce Const --> 'QUID'
    action 'FUNCTION' (noprec):   reduce Const --> 'QUID'
    action 'RETURNS' (noprec):   reduce Const --> 'QUID'
    action 'AXIOM' (noprec):   reduce Const --> 'QUID'
    action 'PROCEDURE' (noprec):   reduce Const --> 'QUID'
    action 'IMPLEMENTATION' (noprec):   reduce Const --> 'QUID'
    action 'REQUIRES' (noprec):   reduce Const --> 'QUID'
    action 'ENSURES' (noprec):   reduce Const --> 'QUID'
    action 'LT' (noprec):   reduce Const --> 'QUID'
    action 'GT' (noprec):   reduce Const --> 'QUID'
    action 'EQ' (noprec):   reduce Const --> 'QUID'
    action 'BANG' (noprec):   reduce Const --> 'QUID'
    action 'COMMA' (noprec):   reduce Const --> 'QUID'
    action 'LE' (noprec):   reduce Const --> 'QUID'
    action 'GE' (noprec):   reduce Const --> 'QUID'
    action 'EQEQ' (noprec):   reduce Const --> 'QUID'
    action 'NE' (noprec):   reduce Const --> 'QUID'
    action 'PLUS' (noprec):   reduce Const --> 'QUID'
    action 'MINUS' (noprec):   reduce Const --> 'QUID'
    action 'STAR' (noprec):   reduce Const --> 'QUID'
    action 'SLASH' (noprec):   reduce Const --> 'QUID'
    action 'PERCENT' (noprec):   reduce Const --> 'QUID'
    action 'AMPAMP' (noprec):   reduce Const --> 'QUID'
    action 'BARBAR' (noprec):   reduce Const --> 'QUID'
    action 'COLONEQ' (noprec):   reduce Const --> 'QUID'
    action 'INT' (noprec):   reduce Const --> 'QUID'
    action 'BOOL' (noprec):   reduce Const --> 'QUID'
    action 'IF' (noprec):   reduce Const --> 'QUID'
    action 'RETURN' (noprec):   reduce Const --> 'QUID'
    action 'VAR' (noprec):   reduce Const --> 'QUID'
    action 'LBRACE' (noprec):   reduce Const --> 'QUID'
    action 'RBRACE' (noprec):   reduce Const --> 'QUID'
    action 'SEMI' (noprec):   reduce Const --> 'QUID'
    action 'COLON' (noprec):   reduce Const --> 'QUID'
    action 'LPAREN' (noprec):   reduce Const --> 'QUID'
    action 'RPAREN' (noprec):   reduce Const --> 'QUID'
    action 'LBRACKET' (noprec):   reduce Const --> 'QUID'
    action 'RBRACKET' (noprec):   reduce Const --> 'QUID'
    action 'LITBOOL' (noprec):   reduce Const --> 'QUID'
    action 'LITINT' (noprec):   reduce Const --> 'QUID'
    action 'QLID' (noprec):   reduce Const --> 'QUID'
    action 'QUID' (noprec):   reduce Const --> 'QUID'
    action 'DLID' (noprec):   reduce Const --> 'QUID'
    action 'DUID' (noprec):   reduce Const --> 'QUID'
    action 'LID' (noprec):   reduce Const --> 'QUID'
    action 'UID' (noprec):   reduce Const --> 'QUID'
    action 'error' (noprec):   reduce Const --> 'QUID'
    action '#' (noprec):   reduce Const --> 'QUID'
    action '$$' (noprec):   reduce Const --> 'QUID'

  immediate action:   reduce Const --> 'QUID'
 gotos:

state 24:
  items:
    Operand -> Reg . 

  actions:
    action 'EOF' (noprec):   reduce Operand --> Reg
    action 'EAX' (noprec):   reduce Operand --> Reg
    action 'EBX' (noprec):   reduce Operand --> Reg
    action 'ECX' (noprec):   reduce Operand --> Reg
    action 'EDX' (noprec):   reduce Operand --> Reg
    action 'ESI' (noprec):   reduce Operand --> Reg
    action 'EDI' (noprec):   reduce Operand --> Reg
    action 'EBP' (noprec):   reduce Operand --> Reg
    action 'ESP' (noprec):   reduce Operand --> Reg
    action 'MODIFIES' (noprec):   reduce Operand --> Reg
    action 'INVARIANT' (noprec):   reduce Operand --> Reg
    action 'ASSERT' (noprec):   reduce Operand --> Reg
    action 'HAVOC' (noprec):   reduce Operand --> Reg
    action 'GOTO' (noprec):   reduce Operand --> Reg
    action 'CALL' (noprec):   reduce Operand --> Reg
    action 'CCALL' (noprec):   reduce Operand --> Reg
    action 'RET' (noprec):   reduce Operand --> Reg
    action 'IRET' (noprec):   reduce Operand --> Reg
    action 'GO' (noprec):   reduce Operand --> Reg
    action 'FORALL' (noprec):   reduce Operand --> Reg
    action 'EXISTS' (noprec):   reduce Operand --> Reg
    action 'OLD' (noprec):   reduce Operand --> Reg
    action 'COLONCOLON' (noprec):   reduce Operand --> Reg
    action 'EQEQGT' (noprec):   reduce Operand --> Reg
    action 'LTEQEQGT' (noprec):   reduce Operand --> Reg
    action 'TYPE' (noprec):   reduce Operand --> Reg
    action 'CONST' (noprec):   reduce Operand --> Reg
    action 'FUNCTION' (noprec):   reduce Operand --> Reg
    action 'RETURNS' (noprec):   reduce Operand --> Reg
    action 'AXIOM' (noprec):   reduce Operand --> Reg
    action 'PROCEDURE' (noprec):   reduce Operand --> Reg
    action 'IMPLEMENTATION' (noprec):   reduce Operand --> Reg
    action 'REQUIRES' (noprec):   reduce Operand --> Reg
    action 'ENSURES' (noprec):   reduce Operand --> Reg
    action 'LT' (noprec):   reduce Operand --> Reg
    action 'GT' (noprec):   reduce Operand --> Reg
    action 'EQ' (noprec):   reduce Operand --> Reg
    action 'BANG' (noprec):   reduce Operand --> Reg
    action 'COMMA' (noprec):   reduce Operand --> Reg
    action 'LE' (noprec):   reduce Operand --> Reg
    action 'GE' (noprec):   reduce Operand --> Reg
    action 'EQEQ' (noprec):   reduce Operand --> Reg
    action 'NE' (noprec):   reduce Operand --> Reg
    action 'PLUS' (noprec):   reduce Operand --> Reg
    action 'MINUS' (noprec):   reduce Operand --> Reg
    action 'STAR' (noprec):   reduce Operand --> Reg
    action 'SLASH' (noprec):   reduce Operand --> Reg
    action 'PERCENT' (noprec):   reduce Operand --> Reg
    action 'AMPAMP' (noprec):   reduce Operand --> Reg
    action 'BARBAR' (noprec):   reduce Operand --> Reg
    action 'COLONEQ' (noprec):   reduce Operand --> Reg
    action 'INT' (noprec):   reduce Operand --> Reg
    action 'BOOL' (noprec):   reduce Operand --> Reg
    action 'IF' (noprec):   reduce Operand --> Reg
    action 'RETURN' (noprec):   reduce Operand --> Reg
    action 'VAR' (noprec):   reduce Operand --> Reg
    action 'LBRACE' (noprec):   reduce Operand --> Reg
    action 'RBRACE' (noprec):   reduce Operand --> Reg
    action 'SEMI' (noprec):   reduce Operand --> Reg
    action 'COLON' (noprec):   reduce Operand --> Reg
    action 'LPAREN' (noprec):   reduce Operand --> Reg
    action 'RPAREN' (noprec):   reduce Operand --> Reg
    action 'LBRACKET' (noprec):   reduce Operand --> Reg
    action 'RBRACKET' (noprec):   reduce Operand --> Reg
    action 'LITBOOL' (noprec):   reduce Operand --> Reg
    action 'LITINT' (noprec):   reduce Operand --> Reg
    action 'QLID' (noprec):   reduce Operand --> Reg
    action 'QUID' (noprec):   reduce Operand --> Reg
    action 'DLID' (noprec):   reduce Operand --> Reg
    action 'DUID' (noprec):   reduce Operand --> Reg
    action 'LID' (noprec):   reduce Operand --> Reg
    action 'UID' (noprec):   reduce Operand --> Reg
    action 'error' (noprec):   reduce Operand --> Reg
    action '#' (noprec):   reduce Operand --> Reg
    action '$$' (noprec):   reduce Operand --> Reg

  immediate action:   reduce Operand --> Reg
 gotos:

state 25:
  items:
    Operand -> Reg . 
    SrcOperand -> Reg . 'PLUS' Const
    SrcOperand -> Reg . 'PLUS' Reg
    SrcOperand -> Reg . 'PLUS' Const 'STAR' Reg
    SrcOperand -> Reg . 'PLUS' Const 'STAR' Reg 'PLUS' Const

  actions:
    action 'EOF' (noprec):   reduce Operand --> Reg
    action 'EAX' (noprec):   reduce Operand --> Reg
    action 'EBX' (noprec):   reduce Operand --> Reg
    action 'ECX' (noprec):   reduce Operand --> Reg
    action 'EDX' (noprec):   reduce Operand --> Reg
    action 'ESI' (noprec):   reduce Operand --> Reg
    action 'EDI' (noprec):   reduce Operand --> Reg
    action 'EBP' (noprec):   reduce Operand --> Reg
    action 'ESP' (noprec):   reduce Operand --> Reg
    action 'MODIFIES' (noprec):   reduce Operand --> Reg
    action 'INVARIANT' (noprec):   reduce Operand --> Reg
    action 'ASSERT' (noprec):   reduce Operand --> Reg
    action 'HAVOC' (noprec):   reduce Operand --> Reg
    action 'GOTO' (noprec):   reduce Operand --> Reg
    action 'CALL' (noprec):   reduce Operand --> Reg
    action 'CCALL' (noprec):   reduce Operand --> Reg
    action 'RET' (noprec):   reduce Operand --> Reg
    action 'IRET' (noprec):   reduce Operand --> Reg
    action 'GO' (noprec):   reduce Operand --> Reg
    action 'FORALL' (noprec):   reduce Operand --> Reg
    action 'EXISTS' (noprec):   reduce Operand --> Reg
    action 'OLD' (noprec):   reduce Operand --> Reg
    action 'COLONCOLON' (noprec):   reduce Operand --> Reg
    action 'EQEQGT' (noprec):   reduce Operand --> Reg
    action 'LTEQEQGT' (noprec):   reduce Operand --> Reg
    action 'TYPE' (noprec):   reduce Operand --> Reg
    action 'CONST' (noprec):   reduce Operand --> Reg
    action 'FUNCTION' (noprec):   reduce Operand --> Reg
    action 'RETURNS' (noprec):   reduce Operand --> Reg
    action 'AXIOM' (noprec):   reduce Operand --> Reg
    action 'PROCEDURE' (noprec):   reduce Operand --> Reg
    action 'IMPLEMENTATION' (noprec):   reduce Operand --> Reg
    action 'REQUIRES' (noprec):   reduce Operand --> Reg
    action 'ENSURES' (noprec):   reduce Operand --> Reg
    action 'LT' (noprec):   reduce Operand --> Reg
    action 'GT' (noprec):   reduce Operand --> Reg
    action 'EQ' (noprec):   reduce Operand --> Reg
    action 'BANG' (noprec):   reduce Operand --> Reg
    action 'COMMA' (noprec):   reduce Operand --> Reg
    action 'LE' (noprec):   reduce Operand --> Reg
    action 'GE' (noprec):   reduce Operand --> Reg
    action 'EQEQ' (noprec):   reduce Operand --> Reg
    action 'NE' (noprec):   reduce Operand --> Reg
    action 'PLUS' (explicit left 9997):   shift 34
    action 'MINUS' (noprec):   reduce Operand --> Reg
    action 'STAR' (noprec):   reduce Operand --> Reg
    action 'SLASH' (noprec):   reduce Operand --> Reg
    action 'PERCENT' (noprec):   reduce Operand --> Reg
    action 'AMPAMP' (noprec):   reduce Operand --> Reg
    action 'BARBAR' (noprec):   reduce Operand --> Reg
    action 'COLONEQ' (noprec):   reduce Operand --> Reg
    action 'INT' (noprec):   reduce Operand --> Reg
    action 'BOOL' (noprec):   reduce Operand --> Reg
    action 'IF' (noprec):   reduce Operand --> Reg
    action 'RETURN' (noprec):   reduce Operand --> Reg
    action 'VAR' (noprec):   reduce Operand --> Reg
    action 'LBRACE' (noprec):   reduce Operand --> Reg
    action 'RBRACE' (noprec):   reduce Operand --> Reg
    action 'SEMI' (noprec):   reduce Operand --> Reg
    action 'COLON' (noprec):   reduce Operand --> Reg
    action 'LPAREN' (noprec):   reduce Operand --> Reg
    action 'RPAREN' (noprec):   reduce Operand --> Reg
    action 'LBRACKET' (noprec):   reduce Operand --> Reg
    action 'RBRACKET' (noprec):   reduce Operand --> Reg
    action 'LITBOOL' (noprec):   reduce Operand --> Reg
    action 'LITINT' (noprec):   reduce Operand --> Reg
    action 'QLID' (noprec):   reduce Operand --> Reg
    action 'QUID' (noprec):   reduce Operand --> Reg
    action 'DLID' (noprec):   reduce Operand --> Reg
    action 'DUID' (noprec):   reduce Operand --> Reg
    action 'LID' (noprec):   reduce Operand --> Reg
    action 'UID' (noprec):   reduce Operand --> Reg
    action 'error' (noprec):   reduce Operand --> Reg
    action '#' (noprec):   reduce Operand --> Reg
    action '$$' (noprec):   reduce Operand --> Reg

  immediate action: <none>
 gotos:

state 26:
  items:
    Operand -> 'UID' . 

  actions:
    action 'EOF' (noprec):   reduce Operand --> 'UID'
    action 'EAX' (noprec):   reduce Operand --> 'UID'
    action 'EBX' (noprec):   reduce Operand --> 'UID'
    action 'ECX' (noprec):   reduce Operand --> 'UID'
    action 'EDX' (noprec):   reduce Operand --> 'UID'
    action 'ESI' (noprec):   reduce Operand --> 'UID'
    action 'EDI' (noprec):   reduce Operand --> 'UID'
    action 'EBP' (noprec):   reduce Operand --> 'UID'
    action 'ESP' (noprec):   reduce Operand --> 'UID'
    action 'MODIFIES' (noprec):   reduce Operand --> 'UID'
    action 'INVARIANT' (noprec):   reduce Operand --> 'UID'
    action 'ASSERT' (noprec):   reduce Operand --> 'UID'
    action 'HAVOC' (noprec):   reduce Operand --> 'UID'
    action 'GOTO' (noprec):   reduce Operand --> 'UID'
    action 'CALL' (noprec):   reduce Operand --> 'UID'
    action 'CCALL' (noprec):   reduce Operand --> 'UID'
    action 'RET' (noprec):   reduce Operand --> 'UID'
    action 'IRET' (noprec):   reduce Operand --> 'UID'
    action 'GO' (noprec):   reduce Operand --> 'UID'
    action 'FORALL' (noprec):   reduce Operand --> 'UID'
    action 'EXISTS' (noprec):   reduce Operand --> 'UID'
    action 'OLD' (noprec):   reduce Operand --> 'UID'
    action 'COLONCOLON' (noprec):   reduce Operand --> 'UID'
    action 'EQEQGT' (noprec):   reduce Operand --> 'UID'
    action 'LTEQEQGT' (noprec):   reduce Operand --> 'UID'
    action 'TYPE' (noprec):   reduce Operand --> 'UID'
    action 'CONST' (noprec):   reduce Operand --> 'UID'
    action 'FUNCTION' (noprec):   reduce Operand --> 'UID'
    action 'RETURNS' (noprec):   reduce Operand --> 'UID'
    action 'AXIOM' (noprec):   reduce Operand --> 'UID'
    action 'PROCEDURE' (noprec):   reduce Operand --> 'UID'
    action 'IMPLEMENTATION' (noprec):   reduce Operand --> 'UID'
    action 'REQUIRES' (noprec):   reduce Operand --> 'UID'
    action 'ENSURES' (noprec):   reduce Operand --> 'UID'
    action 'LT' (noprec):   reduce Operand --> 'UID'
    action 'GT' (noprec):   reduce Operand --> 'UID'
    action 'EQ' (noprec):   reduce Operand --> 'UID'
    action 'BANG' (noprec):   reduce Operand --> 'UID'
    action 'COMMA' (noprec):   reduce Operand --> 'UID'
    action 'LE' (noprec):   reduce Operand --> 'UID'
    action 'GE' (noprec):   reduce Operand --> 'UID'
    action 'EQEQ' (noprec):   reduce Operand --> 'UID'
    action 'NE' (noprec):   reduce Operand --> 'UID'
    action 'PLUS' (noprec):   reduce Operand --> 'UID'
    action 'MINUS' (noprec):   reduce Operand --> 'UID'
    action 'STAR' (noprec):   reduce Operand --> 'UID'
    action 'SLASH' (noprec):   reduce Operand --> 'UID'
    action 'PERCENT' (noprec):   reduce Operand --> 'UID'
    action 'AMPAMP' (noprec):   reduce Operand --> 'UID'
    action 'BARBAR' (noprec):   reduce Operand --> 'UID'
    action 'COLONEQ' (noprec):   reduce Operand --> 'UID'
    action 'INT' (noprec):   reduce Operand --> 'UID'
    action 'BOOL' (noprec):   reduce Operand --> 'UID'
    action 'IF' (noprec):   reduce Operand --> 'UID'
    action 'RETURN' (noprec):   reduce Operand --> 'UID'
    action 'VAR' (noprec):   reduce Operand --> 'UID'
    action 'LBRACE' (noprec):   reduce Operand --> 'UID'
    action 'RBRACE' (noprec):   reduce Operand --> 'UID'
    action 'SEMI' (noprec):   reduce Operand --> 'UID'
    action 'COLON' (noprec):   reduce Operand --> 'UID'
    action 'LPAREN' (noprec):   reduce Operand --> 'UID'
    action 'RPAREN' (noprec):   reduce Operand --> 'UID'
    action 'LBRACKET' (noprec):   reduce Operand --> 'UID'
    action 'RBRACKET' (noprec):   reduce Operand --> 'UID'
    action 'LITBOOL' (noprec):   reduce Operand --> 'UID'
    action 'LITINT' (noprec):   reduce Operand --> 'UID'
    action 'QLID' (noprec):   reduce Operand --> 'UID'
    action 'QUID' (noprec):   reduce Operand --> 'UID'
    action 'DLID' (noprec):   reduce Operand --> 'UID'
    action 'DUID' (noprec):   reduce Operand --> 'UID'
    action 'LID' (noprec):   reduce Operand --> 'UID'
    action 'UID' (noprec):   reduce Operand --> 'UID'
    action 'error' (noprec):   reduce Operand --> 'UID'
    action '#' (noprec):   reduce Operand --> 'UID'
    action '$$' (noprec):   reduce Operand --> 'UID'

  immediate action:   reduce Operand --> 'UID'
 gotos:

state 27:
  items:
    Operand -> 'UID' . 
    Stmt -> 'CALL' 'UID' . 'LPAREN' SrcOperands 'RPAREN' 'SEMI'

  actions:
    action 'EOF' (noprec):   reduce Operand --> 'UID'
    action 'EAX' (noprec):   reduce Operand --> 'UID'
    action 'EBX' (noprec):   reduce Operand --> 'UID'
    action 'ECX' (noprec):   reduce Operand --> 'UID'
    action 'EDX' (noprec):   reduce Operand --> 'UID'
    action 'ESI' (noprec):   reduce Operand --> 'UID'
    action 'EDI' (noprec):   reduce Operand --> 'UID'
    action 'EBP' (noprec):   reduce Operand --> 'UID'
    action 'ESP' (noprec):   reduce Operand --> 'UID'
    action 'MODIFIES' (noprec):   reduce Operand --> 'UID'
    action 'INVARIANT' (noprec):   reduce Operand --> 'UID'
    action 'ASSERT' (noprec):   reduce Operand --> 'UID'
    action 'HAVOC' (noprec):   reduce Operand --> 'UID'
    action 'GOTO' (noprec):   reduce Operand --> 'UID'
    action 'CALL' (noprec):   reduce Operand --> 'UID'
    action 'CCALL' (noprec):   reduce Operand --> 'UID'
    action 'RET' (noprec):   reduce Operand --> 'UID'
    action 'IRET' (noprec):   reduce Operand --> 'UID'
    action 'GO' (noprec):   reduce Operand --> 'UID'
    action 'FORALL' (noprec):   reduce Operand --> 'UID'
    action 'EXISTS' (noprec):   reduce Operand --> 'UID'
    action 'OLD' (noprec):   reduce Operand --> 'UID'
    action 'COLONCOLON' (noprec):   reduce Operand --> 'UID'
    action 'EQEQGT' (noprec):   reduce Operand --> 'UID'
    action 'LTEQEQGT' (noprec):   reduce Operand --> 'UID'
    action 'TYPE' (noprec):   reduce Operand --> 'UID'
    action 'CONST' (noprec):   reduce Operand --> 'UID'
    action 'FUNCTION' (noprec):   reduce Operand --> 'UID'
    action 'RETURNS' (noprec):   reduce Operand --> 'UID'
    action 'AXIOM' (noprec):   reduce Operand --> 'UID'
    action 'PROCEDURE' (noprec):   reduce Operand --> 'UID'
    action 'IMPLEMENTATION' (noprec):   reduce Operand --> 'UID'
    action 'REQUIRES' (noprec):   reduce Operand --> 'UID'
    action 'ENSURES' (noprec):   reduce Operand --> 'UID'
    action 'LT' (noprec):   reduce Operand --> 'UID'
    action 'GT' (noprec):   reduce Operand --> 'UID'
    action 'EQ' (noprec):   reduce Operand --> 'UID'
    action 'BANG' (noprec):   reduce Operand --> 'UID'
    action 'COMMA' (noprec):   reduce Operand --> 'UID'
    action 'LE' (noprec):   reduce Operand --> 'UID'
    action 'GE' (noprec):   reduce Operand --> 'UID'
    action 'EQEQ' (noprec):   reduce Operand --> 'UID'
    action 'NE' (noprec):   reduce Operand --> 'UID'
    action 'PLUS' (noprec):   reduce Operand --> 'UID'
    action 'MINUS' (noprec):   reduce Operand --> 'UID'
    action 'STAR' (noprec):   reduce Operand --> 'UID'
    action 'SLASH' (noprec):   reduce Operand --> 'UID'
    action 'PERCENT' (noprec):   reduce Operand --> 'UID'
    action 'AMPAMP' (noprec):   reduce Operand --> 'UID'
    action 'BARBAR' (noprec):   reduce Operand --> 'UID'
    action 'COLONEQ' (noprec):   reduce Operand --> 'UID'
    action 'INT' (noprec):   reduce Operand --> 'UID'
    action 'BOOL' (noprec):   reduce Operand --> 'UID'
    action 'IF' (noprec):   reduce Operand --> 'UID'
    action 'RETURN' (noprec):   reduce Operand --> 'UID'
    action 'VAR' (noprec):   reduce Operand --> 'UID'
    action 'LBRACE' (noprec):   reduce Operand --> 'UID'
    action 'RBRACE' (noprec):   reduce Operand --> 'UID'
    action 'SEMI' (noprec):   reduce Operand --> 'UID'
    action 'COLON' (noprec):   reduce Operand --> 'UID'
    action 'LPAREN' (explicit left 10000):   shift 218
    action 'RPAREN' (noprec):   reduce Operand --> 'UID'
    action 'LBRACKET' (noprec):   reduce Operand --> 'UID'
    action 'RBRACKET' (noprec):   reduce Operand --> 'UID'
    action 'LITBOOL' (noprec):   reduce Operand --> 'UID'
    action 'LITINT' (noprec):   reduce Operand --> 'UID'
    action 'QLID' (noprec):   reduce Operand --> 'UID'
    action 'QUID' (noprec):   reduce Operand --> 'UID'
    action 'DLID' (noprec):   reduce Operand --> 'UID'
    action 'DUID' (noprec):   reduce Operand --> 'UID'
    action 'LID' (noprec):   reduce Operand --> 'UID'
    action 'UID' (noprec):   reduce Operand --> 'UID'
    action 'error' (noprec):   reduce Operand --> 'UID'
    action '#' (noprec):   reduce Operand --> 'UID'
    action '$$' (noprec):   reduce Operand --> 'UID'

  immediate action: <none>
 gotos:

state 28:
  items:
    Operand -> 'LID' . 

  actions:
    action 'EOF' (noprec):   reduce Operand --> 'LID'
    action 'EAX' (noprec):   reduce Operand --> 'LID'
    action 'EBX' (noprec):   reduce Operand --> 'LID'
    action 'ECX' (noprec):   reduce Operand --> 'LID'
    action 'EDX' (noprec):   reduce Operand --> 'LID'
    action 'ESI' (noprec):   reduce Operand --> 'LID'
    action 'EDI' (noprec):   reduce Operand --> 'LID'
    action 'EBP' (noprec):   reduce Operand --> 'LID'
    action 'ESP' (noprec):   reduce Operand --> 'LID'
    action 'MODIFIES' (noprec):   reduce Operand --> 'LID'
    action 'INVARIANT' (noprec):   reduce Operand --> 'LID'
    action 'ASSERT' (noprec):   reduce Operand --> 'LID'
    action 'HAVOC' (noprec):   reduce Operand --> 'LID'
    action 'GOTO' (noprec):   reduce Operand --> 'LID'
    action 'CALL' (noprec):   reduce Operand --> 'LID'
    action 'CCALL' (noprec):   reduce Operand --> 'LID'
    action 'RET' (noprec):   reduce Operand --> 'LID'
    action 'IRET' (noprec):   reduce Operand --> 'LID'
    action 'GO' (noprec):   reduce Operand --> 'LID'
    action 'FORALL' (noprec):   reduce Operand --> 'LID'
    action 'EXISTS' (noprec):   reduce Operand --> 'LID'
    action 'OLD' (noprec):   reduce Operand --> 'LID'
    action 'COLONCOLON' (noprec):   reduce Operand --> 'LID'
    action 'EQEQGT' (noprec):   reduce Operand --> 'LID'
    action 'LTEQEQGT' (noprec):   reduce Operand --> 'LID'
    action 'TYPE' (noprec):   reduce Operand --> 'LID'
    action 'CONST' (noprec):   reduce Operand --> 'LID'
    action 'FUNCTION' (noprec):   reduce Operand --> 'LID'
    action 'RETURNS' (noprec):   reduce Operand --> 'LID'
    action 'AXIOM' (noprec):   reduce Operand --> 'LID'
    action 'PROCEDURE' (noprec):   reduce Operand --> 'LID'
    action 'IMPLEMENTATION' (noprec):   reduce Operand --> 'LID'
    action 'REQUIRES' (noprec):   reduce Operand --> 'LID'
    action 'ENSURES' (noprec):   reduce Operand --> 'LID'
    action 'LT' (noprec):   reduce Operand --> 'LID'
    action 'GT' (noprec):   reduce Operand --> 'LID'
    action 'EQ' (noprec):   reduce Operand --> 'LID'
    action 'BANG' (noprec):   reduce Operand --> 'LID'
    action 'COMMA' (noprec):   reduce Operand --> 'LID'
    action 'LE' (noprec):   reduce Operand --> 'LID'
    action 'GE' (noprec):   reduce Operand --> 'LID'
    action 'EQEQ' (noprec):   reduce Operand --> 'LID'
    action 'NE' (noprec):   reduce Operand --> 'LID'
    action 'PLUS' (noprec):   reduce Operand --> 'LID'
    action 'MINUS' (noprec):   reduce Operand --> 'LID'
    action 'STAR' (noprec):   reduce Operand --> 'LID'
    action 'SLASH' (noprec):   reduce Operand --> 'LID'
    action 'PERCENT' (noprec):   reduce Operand --> 'LID'
    action 'AMPAMP' (noprec):   reduce Operand --> 'LID'
    action 'BARBAR' (noprec):   reduce Operand --> 'LID'
    action 'COLONEQ' (noprec):   reduce Operand --> 'LID'
    action 'INT' (noprec):   reduce Operand --> 'LID'
    action 'BOOL' (noprec):   reduce Operand --> 'LID'
    action 'IF' (noprec):   reduce Operand --> 'LID'
    action 'RETURN' (noprec):   reduce Operand --> 'LID'
    action 'VAR' (noprec):   reduce Operand --> 'LID'
    action 'LBRACE' (noprec):   reduce Operand --> 'LID'
    action 'RBRACE' (noprec):   reduce Operand --> 'LID'
    action 'SEMI' (noprec):   reduce Operand --> 'LID'
    action 'COLON' (noprec):   reduce Operand --> 'LID'
    action 'LPAREN' (noprec):   reduce Operand --> 'LID'
    action 'RPAREN' (noprec):   reduce Operand --> 'LID'
    action 'LBRACKET' (noprec):   reduce Operand --> 'LID'
    action 'RBRACKET' (noprec):   reduce Operand --> 'LID'
    action 'LITBOOL' (noprec):   reduce Operand --> 'LID'
    action 'LITINT' (noprec):   reduce Operand --> 'LID'
    action 'QLID' (noprec):   reduce Operand --> 'LID'
    action 'QUID' (noprec):   reduce Operand --> 'LID'
    action 'DLID' (noprec):   reduce Operand --> 'LID'
    action 'DUID' (noprec):   reduce Operand --> 'LID'
    action 'LID' (noprec):   reduce Operand --> 'LID'
    action 'UID' (noprec):   reduce Operand --> 'LID'
    action 'error' (noprec):   reduce Operand --> 'LID'
    action '#' (noprec):   reduce Operand --> 'LID'
    action '$$' (noprec):   reduce Operand --> 'LID'

  immediate action:   reduce Operand --> 'LID'
 gotos:

state 29:
  items:
    Operand -> 'LID' . 
    Stmt -> 'CALL' 'LID' . 'LPAREN' Exps 'RPAREN' 'SEMI'

  actions:
    action 'EOF' (noprec):   reduce Operand --> 'LID'
    action 'EAX' (noprec):   reduce Operand --> 'LID'
    action 'EBX' (noprec):   reduce Operand --> 'LID'
    action 'ECX' (noprec):   reduce Operand --> 'LID'
    action 'EDX' (noprec):   reduce Operand --> 'LID'
    action 'ESI' (noprec):   reduce Operand --> 'LID'
    action 'EDI' (noprec):   reduce Operand --> 'LID'
    action 'EBP' (noprec):   reduce Operand --> 'LID'
    action 'ESP' (noprec):   reduce Operand --> 'LID'
    action 'MODIFIES' (noprec):   reduce Operand --> 'LID'
    action 'INVARIANT' (noprec):   reduce Operand --> 'LID'
    action 'ASSERT' (noprec):   reduce Operand --> 'LID'
    action 'HAVOC' (noprec):   reduce Operand --> 'LID'
    action 'GOTO' (noprec):   reduce Operand --> 'LID'
    action 'CALL' (noprec):   reduce Operand --> 'LID'
    action 'CCALL' (noprec):   reduce Operand --> 'LID'
    action 'RET' (noprec):   reduce Operand --> 'LID'
    action 'IRET' (noprec):   reduce Operand --> 'LID'
    action 'GO' (noprec):   reduce Operand --> 'LID'
    action 'FORALL' (noprec):   reduce Operand --> 'LID'
    action 'EXISTS' (noprec):   reduce Operand --> 'LID'
    action 'OLD' (noprec):   reduce Operand --> 'LID'
    action 'COLONCOLON' (noprec):   reduce Operand --> 'LID'
    action 'EQEQGT' (noprec):   reduce Operand --> 'LID'
    action 'LTEQEQGT' (noprec):   reduce Operand --> 'LID'
    action 'TYPE' (noprec):   reduce Operand --> 'LID'
    action 'CONST' (noprec):   reduce Operand --> 'LID'
    action 'FUNCTION' (noprec):   reduce Operand --> 'LID'
    action 'RETURNS' (noprec):   reduce Operand --> 'LID'
    action 'AXIOM' (noprec):   reduce Operand --> 'LID'
    action 'PROCEDURE' (noprec):   reduce Operand --> 'LID'
    action 'IMPLEMENTATION' (noprec):   reduce Operand --> 'LID'
    action 'REQUIRES' (noprec):   reduce Operand --> 'LID'
    action 'ENSURES' (noprec):   reduce Operand --> 'LID'
    action 'LT' (noprec):   reduce Operand --> 'LID'
    action 'GT' (noprec):   reduce Operand --> 'LID'
    action 'EQ' (noprec):   reduce Operand --> 'LID'
    action 'BANG' (noprec):   reduce Operand --> 'LID'
    action 'COMMA' (noprec):   reduce Operand --> 'LID'
    action 'LE' (noprec):   reduce Operand --> 'LID'
    action 'GE' (noprec):   reduce Operand --> 'LID'
    action 'EQEQ' (noprec):   reduce Operand --> 'LID'
    action 'NE' (noprec):   reduce Operand --> 'LID'
    action 'PLUS' (noprec):   reduce Operand --> 'LID'
    action 'MINUS' (noprec):   reduce Operand --> 'LID'
    action 'STAR' (noprec):   reduce Operand --> 'LID'
    action 'SLASH' (noprec):   reduce Operand --> 'LID'
    action 'PERCENT' (noprec):   reduce Operand --> 'LID'
    action 'AMPAMP' (noprec):   reduce Operand --> 'LID'
    action 'BARBAR' (noprec):   reduce Operand --> 'LID'
    action 'COLONEQ' (noprec):   reduce Operand --> 'LID'
    action 'INT' (noprec):   reduce Operand --> 'LID'
    action 'BOOL' (noprec):   reduce Operand --> 'LID'
    action 'IF' (noprec):   reduce Operand --> 'LID'
    action 'RETURN' (noprec):   reduce Operand --> 'LID'
    action 'VAR' (noprec):   reduce Operand --> 'LID'
    action 'LBRACE' (noprec):   reduce Operand --> 'LID'
    action 'RBRACE' (noprec):   reduce Operand --> 'LID'
    action 'SEMI' (noprec):   reduce Operand --> 'LID'
    action 'COLON' (noprec):   reduce Operand --> 'LID'
    action 'LPAREN' (explicit left 10000):   shift 196
    action 'RPAREN' (noprec):   reduce Operand --> 'LID'
    action 'LBRACKET' (noprec):   reduce Operand --> 'LID'
    action 'RBRACKET' (noprec):   reduce Operand --> 'LID'
    action 'LITBOOL' (noprec):   reduce Operand --> 'LID'
    action 'LITINT' (noprec):   reduce Operand --> 'LID'
    action 'QLID' (noprec):   reduce Operand --> 'LID'
    action 'QUID' (noprec):   reduce Operand --> 'LID'
    action 'DLID' (noprec):   reduce Operand --> 'LID'
    action 'DUID' (noprec):   reduce Operand --> 'LID'
    action 'LID' (noprec):   reduce Operand --> 'LID'
    action 'UID' (noprec):   reduce Operand --> 'LID'
    action 'error' (noprec):   reduce Operand --> 'LID'
    action '#' (noprec):   reduce Operand --> 'LID'
    action '$$' (noprec):   reduce Operand --> 'LID'

  immediate action: <none>
 gotos:

state 30:
  items:
    DestOperand -> Operand . 

  actions:
    action 'EOF' (noprec):   reduce DestOperand --> Operand
    action 'EAX' (noprec):   reduce DestOperand --> Operand
    action 'EBX' (noprec):   reduce DestOperand --> Operand
    action 'ECX' (noprec):   reduce DestOperand --> Operand
    action 'EDX' (noprec):   reduce DestOperand --> Operand
    action 'ESI' (noprec):   reduce DestOperand --> Operand
    action 'EDI' (noprec):   reduce DestOperand --> Operand
    action 'EBP' (noprec):   reduce DestOperand --> Operand
    action 'ESP' (noprec):   reduce DestOperand --> Operand
    action 'MODIFIES' (noprec):   reduce DestOperand --> Operand
    action 'INVARIANT' (noprec):   reduce DestOperand --> Operand
    action 'ASSERT' (noprec):   reduce DestOperand --> Operand
    action 'HAVOC' (noprec):   reduce DestOperand --> Operand
    action 'GOTO' (noprec):   reduce DestOperand --> Operand
    action 'CALL' (noprec):   reduce DestOperand --> Operand
    action 'CCALL' (noprec):   reduce DestOperand --> Operand
    action 'RET' (noprec):   reduce DestOperand --> Operand
    action 'IRET' (noprec):   reduce DestOperand --> Operand
    action 'GO' (noprec):   reduce DestOperand --> Operand
    action 'FORALL' (noprec):   reduce DestOperand --> Operand
    action 'EXISTS' (noprec):   reduce DestOperand --> Operand
    action 'OLD' (noprec):   reduce DestOperand --> Operand
    action 'COLONCOLON' (noprec):   reduce DestOperand --> Operand
    action 'EQEQGT' (noprec):   reduce DestOperand --> Operand
    action 'LTEQEQGT' (noprec):   reduce DestOperand --> Operand
    action 'TYPE' (noprec):   reduce DestOperand --> Operand
    action 'CONST' (noprec):   reduce DestOperand --> Operand
    action 'FUNCTION' (noprec):   reduce DestOperand --> Operand
    action 'RETURNS' (noprec):   reduce DestOperand --> Operand
    action 'AXIOM' (noprec):   reduce DestOperand --> Operand
    action 'PROCEDURE' (noprec):   reduce DestOperand --> Operand
    action 'IMPLEMENTATION' (noprec):   reduce DestOperand --> Operand
    action 'REQUIRES' (noprec):   reduce DestOperand --> Operand
    action 'ENSURES' (noprec):   reduce DestOperand --> Operand
    action 'LT' (noprec):   reduce DestOperand --> Operand
    action 'GT' (noprec):   reduce DestOperand --> Operand
    action 'EQ' (noprec):   reduce DestOperand --> Operand
    action 'BANG' (noprec):   reduce DestOperand --> Operand
    action 'COMMA' (noprec):   reduce DestOperand --> Operand
    action 'LE' (noprec):   reduce DestOperand --> Operand
    action 'GE' (noprec):   reduce DestOperand --> Operand
    action 'EQEQ' (noprec):   reduce DestOperand --> Operand
    action 'NE' (noprec):   reduce DestOperand --> Operand
    action 'PLUS' (noprec):   reduce DestOperand --> Operand
    action 'MINUS' (noprec):   reduce DestOperand --> Operand
    action 'STAR' (noprec):   reduce DestOperand --> Operand
    action 'SLASH' (noprec):   reduce DestOperand --> Operand
    action 'PERCENT' (noprec):   reduce DestOperand --> Operand
    action 'AMPAMP' (noprec):   reduce DestOperand --> Operand
    action 'BARBAR' (noprec):   reduce DestOperand --> Operand
    action 'COLONEQ' (noprec):   reduce DestOperand --> Operand
    action 'INT' (noprec):   reduce DestOperand --> Operand
    action 'BOOL' (noprec):   reduce DestOperand --> Operand
    action 'IF' (noprec):   reduce DestOperand --> Operand
    action 'RETURN' (noprec):   reduce DestOperand --> Operand
    action 'VAR' (noprec):   reduce DestOperand --> Operand
    action 'LBRACE' (noprec):   reduce DestOperand --> Operand
    action 'RBRACE' (noprec):   reduce DestOperand --> Operand
    action 'SEMI' (noprec):   reduce DestOperand --> Operand
    action 'COLON' (noprec):   reduce DestOperand --> Operand
    action 'LPAREN' (noprec):   reduce DestOperand --> Operand
    action 'RPAREN' (noprec):   reduce DestOperand --> Operand
    action 'LBRACKET' (noprec):   reduce DestOperand --> Operand
    action 'RBRACKET' (noprec):   reduce DestOperand --> Operand
    action 'LITBOOL' (noprec):   reduce DestOperand --> Operand
    action 'LITINT' (noprec):   reduce DestOperand --> Operand
    action 'QLID' (noprec):   reduce DestOperand --> Operand
    action 'QUID' (noprec):   reduce DestOperand --> Operand
    action 'DLID' (noprec):   reduce DestOperand --> Operand
    action 'DUID' (noprec):   reduce DestOperand --> Operand
    action 'LID' (noprec):   reduce DestOperand --> Operand
    action 'UID' (noprec):   reduce DestOperand --> Operand
    action 'error' (noprec):   reduce DestOperand --> Operand
    action '#' (noprec):   reduce DestOperand --> Operand
    action '$$' (noprec):   reduce DestOperand --> Operand

  immediate action:   reduce DestOperand --> Operand
 gotos:

state 31:
  items:
    SrcOperand -> Operand . 

  actions:
    action 'EOF' (noprec):   reduce SrcOperand --> Operand
    action 'EAX' (noprec):   reduce SrcOperand --> Operand
    action 'EBX' (noprec):   reduce SrcOperand --> Operand
    action 'ECX' (noprec):   reduce SrcOperand --> Operand
    action 'EDX' (noprec):   reduce SrcOperand --> Operand
    action 'ESI' (noprec):   reduce SrcOperand --> Operand
    action 'EDI' (noprec):   reduce SrcOperand --> Operand
    action 'EBP' (noprec):   reduce SrcOperand --> Operand
    action 'ESP' (noprec):   reduce SrcOperand --> Operand
    action 'MODIFIES' (noprec):   reduce SrcOperand --> Operand
    action 'INVARIANT' (noprec):   reduce SrcOperand --> Operand
    action 'ASSERT' (noprec):   reduce SrcOperand --> Operand
    action 'HAVOC' (noprec):   reduce SrcOperand --> Operand
    action 'GOTO' (noprec):   reduce SrcOperand --> Operand
    action 'CALL' (noprec):   reduce SrcOperand --> Operand
    action 'CCALL' (noprec):   reduce SrcOperand --> Operand
    action 'RET' (noprec):   reduce SrcOperand --> Operand
    action 'IRET' (noprec):   reduce SrcOperand --> Operand
    action 'GO' (noprec):   reduce SrcOperand --> Operand
    action 'FORALL' (noprec):   reduce SrcOperand --> Operand
    action 'EXISTS' (noprec):   reduce SrcOperand --> Operand
    action 'OLD' (noprec):   reduce SrcOperand --> Operand
    action 'COLONCOLON' (noprec):   reduce SrcOperand --> Operand
    action 'EQEQGT' (noprec):   reduce SrcOperand --> Operand
    action 'LTEQEQGT' (noprec):   reduce SrcOperand --> Operand
    action 'TYPE' (noprec):   reduce SrcOperand --> Operand
    action 'CONST' (noprec):   reduce SrcOperand --> Operand
    action 'FUNCTION' (noprec):   reduce SrcOperand --> Operand
    action 'RETURNS' (noprec):   reduce SrcOperand --> Operand
    action 'AXIOM' (noprec):   reduce SrcOperand --> Operand
    action 'PROCEDURE' (noprec):   reduce SrcOperand --> Operand
    action 'IMPLEMENTATION' (noprec):   reduce SrcOperand --> Operand
    action 'REQUIRES' (noprec):   reduce SrcOperand --> Operand
    action 'ENSURES' (noprec):   reduce SrcOperand --> Operand
    action 'LT' (noprec):   reduce SrcOperand --> Operand
    action 'GT' (noprec):   reduce SrcOperand --> Operand
    action 'EQ' (noprec):   reduce SrcOperand --> Operand
    action 'BANG' (noprec):   reduce SrcOperand --> Operand
    action 'COMMA' (noprec):   reduce SrcOperand --> Operand
    action 'LE' (noprec):   reduce SrcOperand --> Operand
    action 'GE' (noprec):   reduce SrcOperand --> Operand
    action 'EQEQ' (noprec):   reduce SrcOperand --> Operand
    action 'NE' (noprec):   reduce SrcOperand --> Operand
    action 'PLUS' (noprec):   reduce SrcOperand --> Operand
    action 'MINUS' (noprec):   reduce SrcOperand --> Operand
    action 'STAR' (noprec):   reduce SrcOperand --> Operand
    action 'SLASH' (noprec):   reduce SrcOperand --> Operand
    action 'PERCENT' (noprec):   reduce SrcOperand --> Operand
    action 'AMPAMP' (noprec):   reduce SrcOperand --> Operand
    action 'BARBAR' (noprec):   reduce SrcOperand --> Operand
    action 'COLONEQ' (noprec):   reduce SrcOperand --> Operand
    action 'INT' (noprec):   reduce SrcOperand --> Operand
    action 'BOOL' (noprec):   reduce SrcOperand --> Operand
    action 'IF' (noprec):   reduce SrcOperand --> Operand
    action 'RETURN' (noprec):   reduce SrcOperand --> Operand
    action 'VAR' (noprec):   reduce SrcOperand --> Operand
    action 'LBRACE' (noprec):   reduce SrcOperand --> Operand
    action 'RBRACE' (noprec):   reduce SrcOperand --> Operand
    action 'SEMI' (noprec):   reduce SrcOperand --> Operand
    action 'COLON' (noprec):   reduce SrcOperand --> Operand
    action 'LPAREN' (noprec):   reduce SrcOperand --> Operand
    action 'RPAREN' (noprec):   reduce SrcOperand --> Operand
    action 'LBRACKET' (noprec):   reduce SrcOperand --> Operand
    action 'RBRACKET' (noprec):   reduce SrcOperand --> Operand
    action 'LITBOOL' (noprec):   reduce SrcOperand --> Operand
    action 'LITINT' (noprec):   reduce SrcOperand --> Operand
    action 'QLID' (noprec):   reduce SrcOperand --> Operand
    action 'QUID' (noprec):   reduce SrcOperand --> Operand
    action 'DLID' (noprec):   reduce SrcOperand --> Operand
    action 'DUID' (noprec):   reduce SrcOperand --> Operand
    action 'LID' (noprec):   reduce SrcOperand --> Operand
    action 'UID' (noprec):   reduce SrcOperand --> Operand
    action 'error' (noprec):   reduce SrcOperand --> Operand
    action '#' (noprec):   reduce SrcOperand --> Operand
    action '$$' (noprec):   reduce SrcOperand --> Operand

  immediate action:   reduce SrcOperand --> Operand
 gotos:

state 32:
  items:
    SrcOperand -> 'QLID' . 

  actions:
    action 'EOF' (noprec):   reduce SrcOperand --> 'QLID'
    action 'EAX' (noprec):   reduce SrcOperand --> 'QLID'
    action 'EBX' (noprec):   reduce SrcOperand --> 'QLID'
    action 'ECX' (noprec):   reduce SrcOperand --> 'QLID'
    action 'EDX' (noprec):   reduce SrcOperand --> 'QLID'
    action 'ESI' (noprec):   reduce SrcOperand --> 'QLID'
    action 'EDI' (noprec):   reduce SrcOperand --> 'QLID'
    action 'EBP' (noprec):   reduce SrcOperand --> 'QLID'
    action 'ESP' (noprec):   reduce SrcOperand --> 'QLID'
    action 'MODIFIES' (noprec):   reduce SrcOperand --> 'QLID'
    action 'INVARIANT' (noprec):   reduce SrcOperand --> 'QLID'
    action 'ASSERT' (noprec):   reduce SrcOperand --> 'QLID'
    action 'HAVOC' (noprec):   reduce SrcOperand --> 'QLID'
    action 'GOTO' (noprec):   reduce SrcOperand --> 'QLID'
    action 'CALL' (noprec):   reduce SrcOperand --> 'QLID'
    action 'CCALL' (noprec):   reduce SrcOperand --> 'QLID'
    action 'RET' (noprec):   reduce SrcOperand --> 'QLID'
    action 'IRET' (noprec):   reduce SrcOperand --> 'QLID'
    action 'GO' (noprec):   reduce SrcOperand --> 'QLID'
    action 'FORALL' (noprec):   reduce SrcOperand --> 'QLID'
    action 'EXISTS' (noprec):   reduce SrcOperand --> 'QLID'
    action 'OLD' (noprec):   reduce SrcOperand --> 'QLID'
    action 'COLONCOLON' (noprec):   reduce SrcOperand --> 'QLID'
    action 'EQEQGT' (noprec):   reduce SrcOperand --> 'QLID'
    action 'LTEQEQGT' (noprec):   reduce SrcOperand --> 'QLID'
    action 'TYPE' (noprec):   reduce SrcOperand --> 'QLID'
    action 'CONST' (noprec):   reduce SrcOperand --> 'QLID'
    action 'FUNCTION' (noprec):   reduce SrcOperand --> 'QLID'
    action 'RETURNS' (noprec):   reduce SrcOperand --> 'QLID'
    action 'AXIOM' (noprec):   reduce SrcOperand --> 'QLID'
    action 'PROCEDURE' (noprec):   reduce SrcOperand --> 'QLID'
    action 'IMPLEMENTATION' (noprec):   reduce SrcOperand --> 'QLID'
    action 'REQUIRES' (noprec):   reduce SrcOperand --> 'QLID'
    action 'ENSURES' (noprec):   reduce SrcOperand --> 'QLID'
    action 'LT' (noprec):   reduce SrcOperand --> 'QLID'
    action 'GT' (noprec):   reduce SrcOperand --> 'QLID'
    action 'EQ' (noprec):   reduce SrcOperand --> 'QLID'
    action 'BANG' (noprec):   reduce SrcOperand --> 'QLID'
    action 'COMMA' (noprec):   reduce SrcOperand --> 'QLID'
    action 'LE' (noprec):   reduce SrcOperand --> 'QLID'
    action 'GE' (noprec):   reduce SrcOperand --> 'QLID'
    action 'EQEQ' (noprec):   reduce SrcOperand --> 'QLID'
    action 'NE' (noprec):   reduce SrcOperand --> 'QLID'
    action 'PLUS' (noprec):   reduce SrcOperand --> 'QLID'
    action 'MINUS' (noprec):   reduce SrcOperand --> 'QLID'
    action 'STAR' (noprec):   reduce SrcOperand --> 'QLID'
    action 'SLASH' (noprec):   reduce SrcOperand --> 'QLID'
    action 'PERCENT' (noprec):   reduce SrcOperand --> 'QLID'
    action 'AMPAMP' (noprec):   reduce SrcOperand --> 'QLID'
    action 'BARBAR' (noprec):   reduce SrcOperand --> 'QLID'
    action 'COLONEQ' (noprec):   reduce SrcOperand --> 'QLID'
    action 'INT' (noprec):   reduce SrcOperand --> 'QLID'
    action 'BOOL' (noprec):   reduce SrcOperand --> 'QLID'
    action 'IF' (noprec):   reduce SrcOperand --> 'QLID'
    action 'RETURN' (noprec):   reduce SrcOperand --> 'QLID'
    action 'VAR' (noprec):   reduce SrcOperand --> 'QLID'
    action 'LBRACE' (noprec):   reduce SrcOperand --> 'QLID'
    action 'RBRACE' (noprec):   reduce SrcOperand --> 'QLID'
    action 'SEMI' (noprec):   reduce SrcOperand --> 'QLID'
    action 'COLON' (noprec):   reduce SrcOperand --> 'QLID'
    action 'LPAREN' (noprec):   reduce SrcOperand --> 'QLID'
    action 'RPAREN' (noprec):   reduce SrcOperand --> 'QLID'
    action 'LBRACKET' (noprec):   reduce SrcOperand --> 'QLID'
    action 'RBRACKET' (noprec):   reduce SrcOperand --> 'QLID'
    action 'LITBOOL' (noprec):   reduce SrcOperand --> 'QLID'
    action 'LITINT' (noprec):   reduce SrcOperand --> 'QLID'
    action 'QLID' (noprec):   reduce SrcOperand --> 'QLID'
    action 'QUID' (noprec):   reduce SrcOperand --> 'QLID'
    action 'DLID' (noprec):   reduce SrcOperand --> 'QLID'
    action 'DUID' (noprec):   reduce SrcOperand --> 'QLID'
    action 'LID' (noprec):   reduce SrcOperand --> 'QLID'
    action 'UID' (noprec):   reduce SrcOperand --> 'QLID'
    action 'error' (noprec):   reduce SrcOperand --> 'QLID'
    action '#' (noprec):   reduce SrcOperand --> 'QLID'
    action '$$' (noprec):   reduce SrcOperand --> 'QLID'

  immediate action:   reduce SrcOperand --> 'QLID'
 gotos:

state 33:
  items:
    SrcOperand -> Const . 

  actions:
    action 'EOF' (noprec):   reduce SrcOperand --> Const
    action 'EAX' (noprec):   reduce SrcOperand --> Const
    action 'EBX' (noprec):   reduce SrcOperand --> Const
    action 'ECX' (noprec):   reduce SrcOperand --> Const
    action 'EDX' (noprec):   reduce SrcOperand --> Const
    action 'ESI' (noprec):   reduce SrcOperand --> Const
    action 'EDI' (noprec):   reduce SrcOperand --> Const
    action 'EBP' (noprec):   reduce SrcOperand --> Const
    action 'ESP' (noprec):   reduce SrcOperand --> Const
    action 'MODIFIES' (noprec):   reduce SrcOperand --> Const
    action 'INVARIANT' (noprec):   reduce SrcOperand --> Const
    action 'ASSERT' (noprec):   reduce SrcOperand --> Const
    action 'HAVOC' (noprec):   reduce SrcOperand --> Const
    action 'GOTO' (noprec):   reduce SrcOperand --> Const
    action 'CALL' (noprec):   reduce SrcOperand --> Const
    action 'CCALL' (noprec):   reduce SrcOperand --> Const
    action 'RET' (noprec):   reduce SrcOperand --> Const
    action 'IRET' (noprec):   reduce SrcOperand --> Const
    action 'GO' (noprec):   reduce SrcOperand --> Const
    action 'FORALL' (noprec):   reduce SrcOperand --> Const
    action 'EXISTS' (noprec):   reduce SrcOperand --> Const
    action 'OLD' (noprec):   reduce SrcOperand --> Const
    action 'COLONCOLON' (noprec):   reduce SrcOperand --> Const
    action 'EQEQGT' (noprec):   reduce SrcOperand --> Const
    action 'LTEQEQGT' (noprec):   reduce SrcOperand --> Const
    action 'TYPE' (noprec):   reduce SrcOperand --> Const
    action 'CONST' (noprec):   reduce SrcOperand --> Const
    action 'FUNCTION' (noprec):   reduce SrcOperand --> Const
    action 'RETURNS' (noprec):   reduce SrcOperand --> Const
    action 'AXIOM' (noprec):   reduce SrcOperand --> Const
    action 'PROCEDURE' (noprec):   reduce SrcOperand --> Const
    action 'IMPLEMENTATION' (noprec):   reduce SrcOperand --> Const
    action 'REQUIRES' (noprec):   reduce SrcOperand --> Const
    action 'ENSURES' (noprec):   reduce SrcOperand --> Const
    action 'LT' (noprec):   reduce SrcOperand --> Const
    action 'GT' (noprec):   reduce SrcOperand --> Const
    action 'EQ' (noprec):   reduce SrcOperand --> Const
    action 'BANG' (noprec):   reduce SrcOperand --> Const
    action 'COMMA' (noprec):   reduce SrcOperand --> Const
    action 'LE' (noprec):   reduce SrcOperand --> Const
    action 'GE' (noprec):   reduce SrcOperand --> Const
    action 'EQEQ' (noprec):   reduce SrcOperand --> Const
    action 'NE' (noprec):   reduce SrcOperand --> Const
    action 'PLUS' (noprec):   reduce SrcOperand --> Const
    action 'MINUS' (noprec):   reduce SrcOperand --> Const
    action 'STAR' (noprec):   reduce SrcOperand --> Const
    action 'SLASH' (noprec):   reduce SrcOperand --> Const
    action 'PERCENT' (noprec):   reduce SrcOperand --> Const
    action 'AMPAMP' (noprec):   reduce SrcOperand --> Const
    action 'BARBAR' (noprec):   reduce SrcOperand --> Const
    action 'COLONEQ' (noprec):   reduce SrcOperand --> Const
    action 'INT' (noprec):   reduce SrcOperand --> Const
    action 'BOOL' (noprec):   reduce SrcOperand --> Const
    action 'IF' (noprec):   reduce SrcOperand --> Const
    action 'RETURN' (noprec):   reduce SrcOperand --> Const
    action 'VAR' (noprec):   reduce SrcOperand --> Const
    action 'LBRACE' (noprec):   reduce SrcOperand --> Const
    action 'RBRACE' (noprec):   reduce SrcOperand --> Const
    action 'SEMI' (noprec):   reduce SrcOperand --> Const
    action 'COLON' (noprec):   reduce SrcOperand --> Const
    action 'LPAREN' (noprec):   reduce SrcOperand --> Const
    action 'RPAREN' (noprec):   reduce SrcOperand --> Const
    action 'LBRACKET' (noprec):   reduce SrcOperand --> Const
    action 'RBRACKET' (noprec):   reduce SrcOperand --> Const
    action 'LITBOOL' (noprec):   reduce SrcOperand --> Const
    action 'LITINT' (noprec):   reduce SrcOperand --> Const
    action 'QLID' (noprec):   reduce SrcOperand --> Const
    action 'QUID' (noprec):   reduce SrcOperand --> Const
    action 'DLID' (noprec):   reduce SrcOperand --> Const
    action 'DUID' (noprec):   reduce SrcOperand --> Const
    action 'LID' (noprec):   reduce SrcOperand --> Const
    action 'UID' (noprec):   reduce SrcOperand --> Const
    action 'error' (noprec):   reduce SrcOperand --> Const
    action '#' (noprec):   reduce SrcOperand --> Const
    action '$$' (noprec):   reduce SrcOperand --> Const

  immediate action:   reduce SrcOperand --> Const
 gotos:

state 34:
  items:
    SrcOperand -> Reg 'PLUS' . Const
    SrcOperand -> Reg 'PLUS' . Reg
    SrcOperand -> Reg 'PLUS' . Const 'STAR' Reg
    SrcOperand -> Reg 'PLUS' . Const 'STAR' Reg 'PLUS' Const

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   shift 14
    action 'EBX' (noprec):   shift 15
    action 'ECX' (noprec):   shift 16
    action 'EDX' (noprec):   shift 17
    action 'ESI' (noprec):   shift 18
    action 'EDI' (noprec):   shift 19
    action 'EBP' (noprec):   shift 20
    action 'ESP' (noprec):   shift 21
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   shift 22
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   shift 23
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto Reg: 36
    goto Const: 35

state 35:
  items:
    SrcOperand -> Reg 'PLUS' Const . 
    SrcOperand -> Reg 'PLUS' Const . 'STAR' Reg
    SrcOperand -> Reg 'PLUS' Const . 'STAR' Reg 'PLUS' Const

  actions:
    action 'EOF' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const
    action 'EAX' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const
    action 'EBX' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const
    action 'ECX' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const
    action 'EDX' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const
    action 'ESI' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const
    action 'EDI' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const
    action 'EBP' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const
    action 'ESP' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const
    action 'MODIFIES' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const
    action 'INVARIANT' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const
    action 'ASSERT' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const
    action 'HAVOC' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const
    action 'GOTO' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const
    action 'CALL' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const
    action 'CCALL' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const
    action 'RET' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const
    action 'IRET' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const
    action 'GO' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const
    action 'FORALL' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const
    action 'EXISTS' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const
    action 'OLD' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const
    action 'COLONCOLON' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const
    action 'EQEQGT' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const
    action 'LTEQEQGT' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const
    action 'TYPE' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const
    action 'CONST' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const
    action 'FUNCTION' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const
    action 'RETURNS' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const
    action 'AXIOM' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const
    action 'PROCEDURE' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const
    action 'IMPLEMENTATION' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const
    action 'REQUIRES' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const
    action 'ENSURES' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const
    action 'LT' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const
    action 'GT' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const
    action 'EQ' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const
    action 'BANG' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const
    action 'COMMA' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const
    action 'LE' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const
    action 'GE' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const
    action 'EQEQ' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const
    action 'NE' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const
    action 'PLUS' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const
    action 'MINUS' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const
    action 'STAR' (explicit left 9998):   shift 37
    action 'SLASH' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const
    action 'PERCENT' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const
    action 'AMPAMP' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const
    action 'BARBAR' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const
    action 'COLONEQ' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const
    action 'INT' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const
    action 'BOOL' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const
    action 'IF' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const
    action 'RETURN' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const
    action 'VAR' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const
    action 'LBRACE' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const
    action 'RBRACE' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const
    action 'SEMI' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const
    action 'COLON' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const
    action 'LPAREN' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const
    action 'RPAREN' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const
    action 'LBRACKET' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const
    action 'RBRACKET' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const
    action 'LITBOOL' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const
    action 'LITINT' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const
    action 'QLID' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const
    action 'QUID' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const
    action 'DLID' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const
    action 'DUID' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const
    action 'LID' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const
    action 'UID' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const
    action 'error' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const
    action '#' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const
    action '$$' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const

  immediate action: <none>
 gotos:

state 36:
  items:
    SrcOperand -> Reg 'PLUS' Reg . 

  actions:
    action 'EOF' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Reg
    action 'EAX' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Reg
    action 'EBX' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Reg
    action 'ECX' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Reg
    action 'EDX' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Reg
    action 'ESI' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Reg
    action 'EDI' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Reg
    action 'EBP' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Reg
    action 'ESP' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Reg
    action 'MODIFIES' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Reg
    action 'INVARIANT' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Reg
    action 'ASSERT' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Reg
    action 'HAVOC' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Reg
    action 'GOTO' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Reg
    action 'CALL' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Reg
    action 'CCALL' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Reg
    action 'RET' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Reg
    action 'IRET' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Reg
    action 'GO' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Reg
    action 'FORALL' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Reg
    action 'EXISTS' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Reg
    action 'OLD' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Reg
    action 'COLONCOLON' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Reg
    action 'EQEQGT' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Reg
    action 'LTEQEQGT' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Reg
    action 'TYPE' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Reg
    action 'CONST' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Reg
    action 'FUNCTION' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Reg
    action 'RETURNS' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Reg
    action 'AXIOM' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Reg
    action 'PROCEDURE' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Reg
    action 'IMPLEMENTATION' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Reg
    action 'REQUIRES' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Reg
    action 'ENSURES' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Reg
    action 'LT' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Reg
    action 'GT' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Reg
    action 'EQ' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Reg
    action 'BANG' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Reg
    action 'COMMA' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Reg
    action 'LE' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Reg
    action 'GE' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Reg
    action 'EQEQ' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Reg
    action 'NE' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Reg
    action 'PLUS' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Reg
    action 'MINUS' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Reg
    action 'STAR' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Reg
    action 'SLASH' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Reg
    action 'PERCENT' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Reg
    action 'AMPAMP' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Reg
    action 'BARBAR' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Reg
    action 'COLONEQ' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Reg
    action 'INT' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Reg
    action 'BOOL' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Reg
    action 'IF' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Reg
    action 'RETURN' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Reg
    action 'VAR' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Reg
    action 'LBRACE' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Reg
    action 'RBRACE' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Reg
    action 'SEMI' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Reg
    action 'COLON' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Reg
    action 'LPAREN' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Reg
    action 'RPAREN' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Reg
    action 'LBRACKET' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Reg
    action 'RBRACKET' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Reg
    action 'LITBOOL' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Reg
    action 'LITINT' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Reg
    action 'QLID' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Reg
    action 'QUID' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Reg
    action 'DLID' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Reg
    action 'DUID' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Reg
    action 'LID' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Reg
    action 'UID' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Reg
    action 'error' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Reg
    action '#' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Reg
    action '$$' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Reg

  immediate action:   reduce SrcOperand --> Reg 'PLUS' Reg
 gotos:

state 37:
  items:
    SrcOperand -> Reg 'PLUS' Const 'STAR' . Reg
    SrcOperand -> Reg 'PLUS' Const 'STAR' . Reg 'PLUS' Const

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   shift 14
    action 'EBX' (noprec):   shift 15
    action 'ECX' (noprec):   shift 16
    action 'EDX' (noprec):   shift 17
    action 'ESI' (noprec):   shift 18
    action 'EDI' (noprec):   shift 19
    action 'EBP' (noprec):   shift 20
    action 'ESP' (noprec):   shift 21
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto Reg: 38

state 38:
  items:
    SrcOperand -> Reg 'PLUS' Const 'STAR' Reg . 
    SrcOperand -> Reg 'PLUS' Const 'STAR' Reg . 'PLUS' Const

  actions:
    action 'EOF' (explicit left 9998):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg
    action 'EAX' (explicit left 9998):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg
    action 'EBX' (explicit left 9998):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg
    action 'ECX' (explicit left 9998):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg
    action 'EDX' (explicit left 9998):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg
    action 'ESI' (explicit left 9998):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg
    action 'EDI' (explicit left 9998):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg
    action 'EBP' (explicit left 9998):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg
    action 'ESP' (explicit left 9998):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg
    action 'MODIFIES' (explicit left 9998):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg
    action 'INVARIANT' (explicit left 9998):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg
    action 'ASSERT' (explicit left 9998):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg
    action 'HAVOC' (explicit left 9998):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg
    action 'GOTO' (explicit left 9998):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg
    action 'CALL' (explicit left 9998):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg
    action 'CCALL' (explicit left 9998):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg
    action 'RET' (explicit left 9998):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg
    action 'IRET' (explicit left 9998):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg
    action 'GO' (explicit left 9998):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg
    action 'FORALL' (explicit left 9998):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg
    action 'EXISTS' (explicit left 9998):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg
    action 'OLD' (explicit left 9998):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg
    action 'COLONCOLON' (explicit left 9998):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg
    action 'EQEQGT' (explicit left 9998):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg
    action 'LTEQEQGT' (explicit left 9998):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg
    action 'TYPE' (explicit left 9998):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg
    action 'CONST' (explicit left 9998):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg
    action 'FUNCTION' (explicit left 9998):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg
    action 'RETURNS' (explicit left 9998):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg
    action 'AXIOM' (explicit left 9998):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg
    action 'PROCEDURE' (explicit left 9998):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg
    action 'IMPLEMENTATION' (explicit left 9998):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg
    action 'REQUIRES' (explicit left 9998):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg
    action 'ENSURES' (explicit left 9998):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg
    action 'LT' (explicit left 9998):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg
    action 'GT' (explicit left 9998):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg
    action 'EQ' (explicit left 9998):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg
    action 'BANG' (explicit left 9998):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg
    action 'COMMA' (explicit left 9998):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg
    action 'LE' (explicit left 9998):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg
    action 'GE' (explicit left 9998):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg
    action 'EQEQ' (explicit left 9998):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg
    action 'NE' (explicit left 9998):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg
    action 'PLUS' (explicit left 9997):   shift 39
    action 'MINUS' (explicit left 9998):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg
    action 'STAR' (explicit left 9998):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg
    action 'SLASH' (explicit left 9998):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg
    action 'PERCENT' (explicit left 9998):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg
    action 'AMPAMP' (explicit left 9998):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg
    action 'BARBAR' (explicit left 9998):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg
    action 'COLONEQ' (explicit left 9998):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg
    action 'INT' (explicit left 9998):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg
    action 'BOOL' (explicit left 9998):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg
    action 'IF' (explicit left 9998):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg
    action 'RETURN' (explicit left 9998):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg
    action 'VAR' (explicit left 9998):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg
    action 'LBRACE' (explicit left 9998):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg
    action 'RBRACE' (explicit left 9998):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg
    action 'SEMI' (explicit left 9998):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg
    action 'COLON' (explicit left 9998):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg
    action 'LPAREN' (explicit left 9998):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg
    action 'RPAREN' (explicit left 9998):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg
    action 'LBRACKET' (explicit left 9998):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg
    action 'RBRACKET' (explicit left 9998):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg
    action 'LITBOOL' (explicit left 9998):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg
    action 'LITINT' (explicit left 9998):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg
    action 'QLID' (explicit left 9998):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg
    action 'QUID' (explicit left 9998):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg
    action 'DLID' (explicit left 9998):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg
    action 'DUID' (explicit left 9998):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg
    action 'LID' (explicit left 9998):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg
    action 'UID' (explicit left 9998):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg
    action 'error' (explicit left 9998):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg
    action '#' (explicit left 9998):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg
    action '$$' (explicit left 9998):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg

  immediate action: <none>
 gotos:

state 39:
  items:
    SrcOperand -> Reg 'PLUS' Const 'STAR' Reg 'PLUS' . Const

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   shift 22
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   shift 23
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto Const: 40

state 40:
  items:
    SrcOperand -> Reg 'PLUS' Const 'STAR' Reg 'PLUS' Const . 

  actions:
    action 'EOF' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg 'PLUS' Const
    action 'EAX' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg 'PLUS' Const
    action 'EBX' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg 'PLUS' Const
    action 'ECX' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg 'PLUS' Const
    action 'EDX' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg 'PLUS' Const
    action 'ESI' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg 'PLUS' Const
    action 'EDI' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg 'PLUS' Const
    action 'EBP' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg 'PLUS' Const
    action 'ESP' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg 'PLUS' Const
    action 'MODIFIES' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg 'PLUS' Const
    action 'INVARIANT' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg 'PLUS' Const
    action 'ASSERT' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg 'PLUS' Const
    action 'HAVOC' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg 'PLUS' Const
    action 'GOTO' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg 'PLUS' Const
    action 'CALL' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg 'PLUS' Const
    action 'CCALL' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg 'PLUS' Const
    action 'RET' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg 'PLUS' Const
    action 'IRET' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg 'PLUS' Const
    action 'GO' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg 'PLUS' Const
    action 'FORALL' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg 'PLUS' Const
    action 'EXISTS' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg 'PLUS' Const
    action 'OLD' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg 'PLUS' Const
    action 'COLONCOLON' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg 'PLUS' Const
    action 'EQEQGT' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg 'PLUS' Const
    action 'LTEQEQGT' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg 'PLUS' Const
    action 'TYPE' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg 'PLUS' Const
    action 'CONST' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg 'PLUS' Const
    action 'FUNCTION' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg 'PLUS' Const
    action 'RETURNS' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg 'PLUS' Const
    action 'AXIOM' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg 'PLUS' Const
    action 'PROCEDURE' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg 'PLUS' Const
    action 'IMPLEMENTATION' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg 'PLUS' Const
    action 'REQUIRES' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg 'PLUS' Const
    action 'ENSURES' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg 'PLUS' Const
    action 'LT' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg 'PLUS' Const
    action 'GT' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg 'PLUS' Const
    action 'EQ' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg 'PLUS' Const
    action 'BANG' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg 'PLUS' Const
    action 'COMMA' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg 'PLUS' Const
    action 'LE' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg 'PLUS' Const
    action 'GE' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg 'PLUS' Const
    action 'EQEQ' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg 'PLUS' Const
    action 'NE' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg 'PLUS' Const
    action 'PLUS' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg 'PLUS' Const
    action 'MINUS' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg 'PLUS' Const
    action 'STAR' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg 'PLUS' Const
    action 'SLASH' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg 'PLUS' Const
    action 'PERCENT' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg 'PLUS' Const
    action 'AMPAMP' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg 'PLUS' Const
    action 'BARBAR' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg 'PLUS' Const
    action 'COLONEQ' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg 'PLUS' Const
    action 'INT' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg 'PLUS' Const
    action 'BOOL' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg 'PLUS' Const
    action 'IF' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg 'PLUS' Const
    action 'RETURN' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg 'PLUS' Const
    action 'VAR' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg 'PLUS' Const
    action 'LBRACE' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg 'PLUS' Const
    action 'RBRACE' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg 'PLUS' Const
    action 'SEMI' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg 'PLUS' Const
    action 'COLON' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg 'PLUS' Const
    action 'LPAREN' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg 'PLUS' Const
    action 'RPAREN' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg 'PLUS' Const
    action 'LBRACKET' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg 'PLUS' Const
    action 'RBRACKET' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg 'PLUS' Const
    action 'LITBOOL' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg 'PLUS' Const
    action 'LITINT' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg 'PLUS' Const
    action 'QLID' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg 'PLUS' Const
    action 'QUID' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg 'PLUS' Const
    action 'DLID' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg 'PLUS' Const
    action 'DUID' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg 'PLUS' Const
    action 'LID' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg 'PLUS' Const
    action 'UID' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg 'PLUS' Const
    action 'error' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg 'PLUS' Const
    action '#' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg 'PLUS' Const
    action '$$' (explicit left 9997):   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg 'PLUS' Const

  immediate action:   reduce SrcOperand --> Reg 'PLUS' Const 'STAR' Reg 'PLUS' Const
 gotos:

state 41:
  items:
    SrcOperand -> 'LPAREN' . Exp 'RPAREN'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   shift 14
    action 'EBX' (noprec):   shift 15
    action 'ECX' (noprec):   shift 16
    action 'EDX' (noprec):   shift 17
    action 'ESI' (noprec):   shift 18
    action 'EDI' (noprec):   shift 19
    action 'EBP' (noprec):   shift 20
    action 'ESP' (noprec):   shift 21
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   shift 125
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (explicit right 9999):   shift 107
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (explicit left 10000):   shift 54
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   shift 124
    action 'LITINT' (noprec):   shift 123
    action 'QLID' (noprec):   shift 145
    action 'QUID' (noprec):   shift 144
    action 'DLID' (noprec):   shift 143
    action 'DUID' (noprec):   shift 142
    action 'LID' (noprec):   shift 4
    action 'UID' (noprec):   shift 5
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto ID: 141
    goto Reg: 132
    goto Exp: 42
    goto AnyId: 128

state 42:
  items:
    SrcOperand -> 'LPAREN' Exp . 'RPAREN'
    Exp -> Exp . 'LTEQEQGT' Exp
    Exp -> Exp . 'EQEQGT' Exp
    Exp -> Exp . 'AMPAMP' Exp
    Exp -> Exp . 'BARBAR' Exp
    Exp -> Exp . 'EQEQ' Exp
    Exp -> Exp . 'NE' Exp
    Exp -> Exp . 'LT' Exp
    Exp -> Exp . 'GT' Exp
    Exp -> Exp . 'LE' Exp
    Exp -> Exp . 'GE' Exp
    Exp -> Exp . 'PLUS' Exp
    Exp -> Exp . 'MINUS' Exp
    Exp -> Exp . 'STAR' Exp
    Exp -> Exp . 'SLASH' Exp
    Exp -> Exp . 'PERCENT' Exp
    Exp -> Exp . 'LBRACKET' Exps 'RBRACKET'
    Exp -> Exp . 'LBRACKET' Exps 'COLONEQ' Exp 'RBRACKET'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (explicit right 9994):   shift 91
    action 'LTEQEQGT' (explicit left 9993):   shift 90
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (explicit left 9996):   shift 96
    action 'GT' (explicit left 9996):   shift 97
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (explicit left 9996):   shift 98
    action 'GE' (explicit left 9996):   shift 99
    action 'EQEQ' (explicit left 9996):   shift 94
    action 'NE' (explicit left 9996):   shift 95
    action 'PLUS' (explicit left 9997):   shift 100
    action 'MINUS' (explicit left 9997):   shift 101
    action 'STAR' (explicit left 9998):   shift 102
    action 'SLASH' (explicit left 9998):   shift 103
    action 'PERCENT' (explicit left 9998):   shift 104
    action 'AMPAMP' (explicit left 9995):   shift 92
    action 'BARBAR' (explicit left 9995):   shift 93
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (explicit left 10000):   shift 43
    action 'LBRACKET' (explicit left 10000):   shift 118
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 43:
  items:
    SrcOperand -> 'LPAREN' Exp 'RPAREN' . 

  actions:
    action 'EOF' (explicit left 10000):   reduce SrcOperand --> 'LPAREN' Exp 'RPAREN'
    action 'EAX' (explicit left 10000):   reduce SrcOperand --> 'LPAREN' Exp 'RPAREN'
    action 'EBX' (explicit left 10000):   reduce SrcOperand --> 'LPAREN' Exp 'RPAREN'
    action 'ECX' (explicit left 10000):   reduce SrcOperand --> 'LPAREN' Exp 'RPAREN'
    action 'EDX' (explicit left 10000):   reduce SrcOperand --> 'LPAREN' Exp 'RPAREN'
    action 'ESI' (explicit left 10000):   reduce SrcOperand --> 'LPAREN' Exp 'RPAREN'
    action 'EDI' (explicit left 10000):   reduce SrcOperand --> 'LPAREN' Exp 'RPAREN'
    action 'EBP' (explicit left 10000):   reduce SrcOperand --> 'LPAREN' Exp 'RPAREN'
    action 'ESP' (explicit left 10000):   reduce SrcOperand --> 'LPAREN' Exp 'RPAREN'
    action 'MODIFIES' (explicit left 10000):   reduce SrcOperand --> 'LPAREN' Exp 'RPAREN'
    action 'INVARIANT' (explicit left 10000):   reduce SrcOperand --> 'LPAREN' Exp 'RPAREN'
    action 'ASSERT' (explicit left 10000):   reduce SrcOperand --> 'LPAREN' Exp 'RPAREN'
    action 'HAVOC' (explicit left 10000):   reduce SrcOperand --> 'LPAREN' Exp 'RPAREN'
    action 'GOTO' (explicit left 10000):   reduce SrcOperand --> 'LPAREN' Exp 'RPAREN'
    action 'CALL' (explicit left 10000):   reduce SrcOperand --> 'LPAREN' Exp 'RPAREN'
    action 'CCALL' (explicit left 10000):   reduce SrcOperand --> 'LPAREN' Exp 'RPAREN'
    action 'RET' (explicit left 10000):   reduce SrcOperand --> 'LPAREN' Exp 'RPAREN'
    action 'IRET' (explicit left 10000):   reduce SrcOperand --> 'LPAREN' Exp 'RPAREN'
    action 'GO' (explicit left 10000):   reduce SrcOperand --> 'LPAREN' Exp 'RPAREN'
    action 'FORALL' (explicit left 10000):   reduce SrcOperand --> 'LPAREN' Exp 'RPAREN'
    action 'EXISTS' (explicit left 10000):   reduce SrcOperand --> 'LPAREN' Exp 'RPAREN'
    action 'OLD' (explicit left 10000):   reduce SrcOperand --> 'LPAREN' Exp 'RPAREN'
    action 'COLONCOLON' (explicit left 10000):   reduce SrcOperand --> 'LPAREN' Exp 'RPAREN'
    action 'EQEQGT' (explicit left 10000):   reduce SrcOperand --> 'LPAREN' Exp 'RPAREN'
    action 'LTEQEQGT' (explicit left 10000):   reduce SrcOperand --> 'LPAREN' Exp 'RPAREN'
    action 'TYPE' (explicit left 10000):   reduce SrcOperand --> 'LPAREN' Exp 'RPAREN'
    action 'CONST' (explicit left 10000):   reduce SrcOperand --> 'LPAREN' Exp 'RPAREN'
    action 'FUNCTION' (explicit left 10000):   reduce SrcOperand --> 'LPAREN' Exp 'RPAREN'
    action 'RETURNS' (explicit left 10000):   reduce SrcOperand --> 'LPAREN' Exp 'RPAREN'
    action 'AXIOM' (explicit left 10000):   reduce SrcOperand --> 'LPAREN' Exp 'RPAREN'
    action 'PROCEDURE' (explicit left 10000):   reduce SrcOperand --> 'LPAREN' Exp 'RPAREN'
    action 'IMPLEMENTATION' (explicit left 10000):   reduce SrcOperand --> 'LPAREN' Exp 'RPAREN'
    action 'REQUIRES' (explicit left 10000):   reduce SrcOperand --> 'LPAREN' Exp 'RPAREN'
    action 'ENSURES' (explicit left 10000):   reduce SrcOperand --> 'LPAREN' Exp 'RPAREN'
    action 'LT' (explicit left 10000):   reduce SrcOperand --> 'LPAREN' Exp 'RPAREN'
    action 'GT' (explicit left 10000):   reduce SrcOperand --> 'LPAREN' Exp 'RPAREN'
    action 'EQ' (explicit left 10000):   reduce SrcOperand --> 'LPAREN' Exp 'RPAREN'
    action 'BANG' (explicit left 10000):   reduce SrcOperand --> 'LPAREN' Exp 'RPAREN'
    action 'COMMA' (explicit left 10000):   reduce SrcOperand --> 'LPAREN' Exp 'RPAREN'
    action 'LE' (explicit left 10000):   reduce SrcOperand --> 'LPAREN' Exp 'RPAREN'
    action 'GE' (explicit left 10000):   reduce SrcOperand --> 'LPAREN' Exp 'RPAREN'
    action 'EQEQ' (explicit left 10000):   reduce SrcOperand --> 'LPAREN' Exp 'RPAREN'
    action 'NE' (explicit left 10000):   reduce SrcOperand --> 'LPAREN' Exp 'RPAREN'
    action 'PLUS' (explicit left 10000):   reduce SrcOperand --> 'LPAREN' Exp 'RPAREN'
    action 'MINUS' (explicit left 10000):   reduce SrcOperand --> 'LPAREN' Exp 'RPAREN'
    action 'STAR' (explicit left 10000):   reduce SrcOperand --> 'LPAREN' Exp 'RPAREN'
    action 'SLASH' (explicit left 10000):   reduce SrcOperand --> 'LPAREN' Exp 'RPAREN'
    action 'PERCENT' (explicit left 10000):   reduce SrcOperand --> 'LPAREN' Exp 'RPAREN'
    action 'AMPAMP' (explicit left 10000):   reduce SrcOperand --> 'LPAREN' Exp 'RPAREN'
    action 'BARBAR' (explicit left 10000):   reduce SrcOperand --> 'LPAREN' Exp 'RPAREN'
    action 'COLONEQ' (explicit left 10000):   reduce SrcOperand --> 'LPAREN' Exp 'RPAREN'
    action 'INT' (explicit left 10000):   reduce SrcOperand --> 'LPAREN' Exp 'RPAREN'
    action 'BOOL' (explicit left 10000):   reduce SrcOperand --> 'LPAREN' Exp 'RPAREN'
    action 'IF' (explicit left 10000):   reduce SrcOperand --> 'LPAREN' Exp 'RPAREN'
    action 'RETURN' (explicit left 10000):   reduce SrcOperand --> 'LPAREN' Exp 'RPAREN'
    action 'VAR' (explicit left 10000):   reduce SrcOperand --> 'LPAREN' Exp 'RPAREN'
    action 'LBRACE' (explicit left 10000):   reduce SrcOperand --> 'LPAREN' Exp 'RPAREN'
    action 'RBRACE' (explicit left 10000):   reduce SrcOperand --> 'LPAREN' Exp 'RPAREN'
    action 'SEMI' (explicit left 10000):   reduce SrcOperand --> 'LPAREN' Exp 'RPAREN'
    action 'COLON' (explicit left 10000):   reduce SrcOperand --> 'LPAREN' Exp 'RPAREN'
    action 'LPAREN' (explicit left 10000):   reduce SrcOperand --> 'LPAREN' Exp 'RPAREN'
    action 'RPAREN' (explicit left 10000):   reduce SrcOperand --> 'LPAREN' Exp 'RPAREN'
    action 'LBRACKET' (explicit left 10000):   reduce SrcOperand --> 'LPAREN' Exp 'RPAREN'
    action 'RBRACKET' (explicit left 10000):   reduce SrcOperand --> 'LPAREN' Exp 'RPAREN'
    action 'LITBOOL' (explicit left 10000):   reduce SrcOperand --> 'LPAREN' Exp 'RPAREN'
    action 'LITINT' (explicit left 10000):   reduce SrcOperand --> 'LPAREN' Exp 'RPAREN'
    action 'QLID' (explicit left 10000):   reduce SrcOperand --> 'LPAREN' Exp 'RPAREN'
    action 'QUID' (explicit left 10000):   reduce SrcOperand --> 'LPAREN' Exp 'RPAREN'
    action 'DLID' (explicit left 10000):   reduce SrcOperand --> 'LPAREN' Exp 'RPAREN'
    action 'DUID' (explicit left 10000):   reduce SrcOperand --> 'LPAREN' Exp 'RPAREN'
    action 'LID' (explicit left 10000):   reduce SrcOperand --> 'LPAREN' Exp 'RPAREN'
    action 'UID' (explicit left 10000):   reduce SrcOperand --> 'LPAREN' Exp 'RPAREN'
    action 'error' (explicit left 10000):   reduce SrcOperand --> 'LPAREN' Exp 'RPAREN'
    action '#' (explicit left 10000):   reduce SrcOperand --> 'LPAREN' Exp 'RPAREN'
    action '$$' (explicit left 10000):   reduce SrcOperand --> 'LPAREN' Exp 'RPAREN'

  immediate action:   reduce SrcOperand --> 'LPAREN' Exp 'RPAREN'
 gotos:

state 44:
  items:
    Cmp -> 'EQEQ' . 

  actions:
    action 'EOF' (explicit left 9996):   reduce Cmp --> 'EQEQ'
    action 'EAX' (explicit left 9996):   reduce Cmp --> 'EQEQ'
    action 'EBX' (explicit left 9996):   reduce Cmp --> 'EQEQ'
    action 'ECX' (explicit left 9996):   reduce Cmp --> 'EQEQ'
    action 'EDX' (explicit left 9996):   reduce Cmp --> 'EQEQ'
    action 'ESI' (explicit left 9996):   reduce Cmp --> 'EQEQ'
    action 'EDI' (explicit left 9996):   reduce Cmp --> 'EQEQ'
    action 'EBP' (explicit left 9996):   reduce Cmp --> 'EQEQ'
    action 'ESP' (explicit left 9996):   reduce Cmp --> 'EQEQ'
    action 'MODIFIES' (explicit left 9996):   reduce Cmp --> 'EQEQ'
    action 'INVARIANT' (explicit left 9996):   reduce Cmp --> 'EQEQ'
    action 'ASSERT' (explicit left 9996):   reduce Cmp --> 'EQEQ'
    action 'HAVOC' (explicit left 9996):   reduce Cmp --> 'EQEQ'
    action 'GOTO' (explicit left 9996):   reduce Cmp --> 'EQEQ'
    action 'CALL' (explicit left 9996):   reduce Cmp --> 'EQEQ'
    action 'CCALL' (explicit left 9996):   reduce Cmp --> 'EQEQ'
    action 'RET' (explicit left 9996):   reduce Cmp --> 'EQEQ'
    action 'IRET' (explicit left 9996):   reduce Cmp --> 'EQEQ'
    action 'GO' (explicit left 9996):   reduce Cmp --> 'EQEQ'
    action 'FORALL' (explicit left 9996):   reduce Cmp --> 'EQEQ'
    action 'EXISTS' (explicit left 9996):   reduce Cmp --> 'EQEQ'
    action 'OLD' (explicit left 9996):   reduce Cmp --> 'EQEQ'
    action 'COLONCOLON' (explicit left 9996):   reduce Cmp --> 'EQEQ'
    action 'EQEQGT' (explicit left 9996):   reduce Cmp --> 'EQEQ'
    action 'LTEQEQGT' (explicit left 9996):   reduce Cmp --> 'EQEQ'
    action 'TYPE' (explicit left 9996):   reduce Cmp --> 'EQEQ'
    action 'CONST' (explicit left 9996):   reduce Cmp --> 'EQEQ'
    action 'FUNCTION' (explicit left 9996):   reduce Cmp --> 'EQEQ'
    action 'RETURNS' (explicit left 9996):   reduce Cmp --> 'EQEQ'
    action 'AXIOM' (explicit left 9996):   reduce Cmp --> 'EQEQ'
    action 'PROCEDURE' (explicit left 9996):   reduce Cmp --> 'EQEQ'
    action 'IMPLEMENTATION' (explicit left 9996):   reduce Cmp --> 'EQEQ'
    action 'REQUIRES' (explicit left 9996):   reduce Cmp --> 'EQEQ'
    action 'ENSURES' (explicit left 9996):   reduce Cmp --> 'EQEQ'
    action 'LT' (explicit left 9996):   reduce Cmp --> 'EQEQ'
    action 'GT' (explicit left 9996):   reduce Cmp --> 'EQEQ'
    action 'EQ' (explicit left 9996):   reduce Cmp --> 'EQEQ'
    action 'BANG' (explicit left 9996):   reduce Cmp --> 'EQEQ'
    action 'COMMA' (explicit left 9996):   reduce Cmp --> 'EQEQ'
    action 'LE' (explicit left 9996):   reduce Cmp --> 'EQEQ'
    action 'GE' (explicit left 9996):   reduce Cmp --> 'EQEQ'
    action 'EQEQ' (explicit left 9996):   reduce Cmp --> 'EQEQ'
    action 'NE' (explicit left 9996):   reduce Cmp --> 'EQEQ'
    action 'PLUS' (explicit left 9996):   reduce Cmp --> 'EQEQ'
    action 'MINUS' (explicit left 9996):   reduce Cmp --> 'EQEQ'
    action 'STAR' (explicit left 9996):   reduce Cmp --> 'EQEQ'
    action 'SLASH' (explicit left 9996):   reduce Cmp --> 'EQEQ'
    action 'PERCENT' (explicit left 9996):   reduce Cmp --> 'EQEQ'
    action 'AMPAMP' (explicit left 9996):   reduce Cmp --> 'EQEQ'
    action 'BARBAR' (explicit left 9996):   reduce Cmp --> 'EQEQ'
    action 'COLONEQ' (explicit left 9996):   reduce Cmp --> 'EQEQ'
    action 'INT' (explicit left 9996):   reduce Cmp --> 'EQEQ'
    action 'BOOL' (explicit left 9996):   reduce Cmp --> 'EQEQ'
    action 'IF' (explicit left 9996):   reduce Cmp --> 'EQEQ'
    action 'RETURN' (explicit left 9996):   reduce Cmp --> 'EQEQ'
    action 'VAR' (explicit left 9996):   reduce Cmp --> 'EQEQ'
    action 'LBRACE' (explicit left 9996):   reduce Cmp --> 'EQEQ'
    action 'RBRACE' (explicit left 9996):   reduce Cmp --> 'EQEQ'
    action 'SEMI' (explicit left 9996):   reduce Cmp --> 'EQEQ'
    action 'COLON' (explicit left 9996):   reduce Cmp --> 'EQEQ'
    action 'LPAREN' (explicit left 9996):   reduce Cmp --> 'EQEQ'
    action 'RPAREN' (explicit left 9996):   reduce Cmp --> 'EQEQ'
    action 'LBRACKET' (explicit left 9996):   reduce Cmp --> 'EQEQ'
    action 'RBRACKET' (explicit left 9996):   reduce Cmp --> 'EQEQ'
    action 'LITBOOL' (explicit left 9996):   reduce Cmp --> 'EQEQ'
    action 'LITINT' (explicit left 9996):   reduce Cmp --> 'EQEQ'
    action 'QLID' (explicit left 9996):   reduce Cmp --> 'EQEQ'
    action 'QUID' (explicit left 9996):   reduce Cmp --> 'EQEQ'
    action 'DLID' (explicit left 9996):   reduce Cmp --> 'EQEQ'
    action 'DUID' (explicit left 9996):   reduce Cmp --> 'EQEQ'
    action 'LID' (explicit left 9996):   reduce Cmp --> 'EQEQ'
    action 'UID' (explicit left 9996):   reduce Cmp --> 'EQEQ'
    action 'error' (explicit left 9996):   reduce Cmp --> 'EQEQ'
    action '#' (explicit left 9996):   reduce Cmp --> 'EQEQ'
    action '$$' (explicit left 9996):   reduce Cmp --> 'EQEQ'

  immediate action:   reduce Cmp --> 'EQEQ'
 gotos:

state 45:
  items:
    Cmp -> 'NE' . 

  actions:
    action 'EOF' (explicit left 9996):   reduce Cmp --> 'NE'
    action 'EAX' (explicit left 9996):   reduce Cmp --> 'NE'
    action 'EBX' (explicit left 9996):   reduce Cmp --> 'NE'
    action 'ECX' (explicit left 9996):   reduce Cmp --> 'NE'
    action 'EDX' (explicit left 9996):   reduce Cmp --> 'NE'
    action 'ESI' (explicit left 9996):   reduce Cmp --> 'NE'
    action 'EDI' (explicit left 9996):   reduce Cmp --> 'NE'
    action 'EBP' (explicit left 9996):   reduce Cmp --> 'NE'
    action 'ESP' (explicit left 9996):   reduce Cmp --> 'NE'
    action 'MODIFIES' (explicit left 9996):   reduce Cmp --> 'NE'
    action 'INVARIANT' (explicit left 9996):   reduce Cmp --> 'NE'
    action 'ASSERT' (explicit left 9996):   reduce Cmp --> 'NE'
    action 'HAVOC' (explicit left 9996):   reduce Cmp --> 'NE'
    action 'GOTO' (explicit left 9996):   reduce Cmp --> 'NE'
    action 'CALL' (explicit left 9996):   reduce Cmp --> 'NE'
    action 'CCALL' (explicit left 9996):   reduce Cmp --> 'NE'
    action 'RET' (explicit left 9996):   reduce Cmp --> 'NE'
    action 'IRET' (explicit left 9996):   reduce Cmp --> 'NE'
    action 'GO' (explicit left 9996):   reduce Cmp --> 'NE'
    action 'FORALL' (explicit left 9996):   reduce Cmp --> 'NE'
    action 'EXISTS' (explicit left 9996):   reduce Cmp --> 'NE'
    action 'OLD' (explicit left 9996):   reduce Cmp --> 'NE'
    action 'COLONCOLON' (explicit left 9996):   reduce Cmp --> 'NE'
    action 'EQEQGT' (explicit left 9996):   reduce Cmp --> 'NE'
    action 'LTEQEQGT' (explicit left 9996):   reduce Cmp --> 'NE'
    action 'TYPE' (explicit left 9996):   reduce Cmp --> 'NE'
    action 'CONST' (explicit left 9996):   reduce Cmp --> 'NE'
    action 'FUNCTION' (explicit left 9996):   reduce Cmp --> 'NE'
    action 'RETURNS' (explicit left 9996):   reduce Cmp --> 'NE'
    action 'AXIOM' (explicit left 9996):   reduce Cmp --> 'NE'
    action 'PROCEDURE' (explicit left 9996):   reduce Cmp --> 'NE'
    action 'IMPLEMENTATION' (explicit left 9996):   reduce Cmp --> 'NE'
    action 'REQUIRES' (explicit left 9996):   reduce Cmp --> 'NE'
    action 'ENSURES' (explicit left 9996):   reduce Cmp --> 'NE'
    action 'LT' (explicit left 9996):   reduce Cmp --> 'NE'
    action 'GT' (explicit left 9996):   reduce Cmp --> 'NE'
    action 'EQ' (explicit left 9996):   reduce Cmp --> 'NE'
    action 'BANG' (explicit left 9996):   reduce Cmp --> 'NE'
    action 'COMMA' (explicit left 9996):   reduce Cmp --> 'NE'
    action 'LE' (explicit left 9996):   reduce Cmp --> 'NE'
    action 'GE' (explicit left 9996):   reduce Cmp --> 'NE'
    action 'EQEQ' (explicit left 9996):   reduce Cmp --> 'NE'
    action 'NE' (explicit left 9996):   reduce Cmp --> 'NE'
    action 'PLUS' (explicit left 9996):   reduce Cmp --> 'NE'
    action 'MINUS' (explicit left 9996):   reduce Cmp --> 'NE'
    action 'STAR' (explicit left 9996):   reduce Cmp --> 'NE'
    action 'SLASH' (explicit left 9996):   reduce Cmp --> 'NE'
    action 'PERCENT' (explicit left 9996):   reduce Cmp --> 'NE'
    action 'AMPAMP' (explicit left 9996):   reduce Cmp --> 'NE'
    action 'BARBAR' (explicit left 9996):   reduce Cmp --> 'NE'
    action 'COLONEQ' (explicit left 9996):   reduce Cmp --> 'NE'
    action 'INT' (explicit left 9996):   reduce Cmp --> 'NE'
    action 'BOOL' (explicit left 9996):   reduce Cmp --> 'NE'
    action 'IF' (explicit left 9996):   reduce Cmp --> 'NE'
    action 'RETURN' (explicit left 9996):   reduce Cmp --> 'NE'
    action 'VAR' (explicit left 9996):   reduce Cmp --> 'NE'
    action 'LBRACE' (explicit left 9996):   reduce Cmp --> 'NE'
    action 'RBRACE' (explicit left 9996):   reduce Cmp --> 'NE'
    action 'SEMI' (explicit left 9996):   reduce Cmp --> 'NE'
    action 'COLON' (explicit left 9996):   reduce Cmp --> 'NE'
    action 'LPAREN' (explicit left 9996):   reduce Cmp --> 'NE'
    action 'RPAREN' (explicit left 9996):   reduce Cmp --> 'NE'
    action 'LBRACKET' (explicit left 9996):   reduce Cmp --> 'NE'
    action 'RBRACKET' (explicit left 9996):   reduce Cmp --> 'NE'
    action 'LITBOOL' (explicit left 9996):   reduce Cmp --> 'NE'
    action 'LITINT' (explicit left 9996):   reduce Cmp --> 'NE'
    action 'QLID' (explicit left 9996):   reduce Cmp --> 'NE'
    action 'QUID' (explicit left 9996):   reduce Cmp --> 'NE'
    action 'DLID' (explicit left 9996):   reduce Cmp --> 'NE'
    action 'DUID' (explicit left 9996):   reduce Cmp --> 'NE'
    action 'LID' (explicit left 9996):   reduce Cmp --> 'NE'
    action 'UID' (explicit left 9996):   reduce Cmp --> 'NE'
    action 'error' (explicit left 9996):   reduce Cmp --> 'NE'
    action '#' (explicit left 9996):   reduce Cmp --> 'NE'
    action '$$' (explicit left 9996):   reduce Cmp --> 'NE'

  immediate action:   reduce Cmp --> 'NE'
 gotos:

state 46:
  items:
    Cmp -> 'LT' . 

  actions:
    action 'EOF' (explicit left 9996):   reduce Cmp --> 'LT'
    action 'EAX' (explicit left 9996):   reduce Cmp --> 'LT'
    action 'EBX' (explicit left 9996):   reduce Cmp --> 'LT'
    action 'ECX' (explicit left 9996):   reduce Cmp --> 'LT'
    action 'EDX' (explicit left 9996):   reduce Cmp --> 'LT'
    action 'ESI' (explicit left 9996):   reduce Cmp --> 'LT'
    action 'EDI' (explicit left 9996):   reduce Cmp --> 'LT'
    action 'EBP' (explicit left 9996):   reduce Cmp --> 'LT'
    action 'ESP' (explicit left 9996):   reduce Cmp --> 'LT'
    action 'MODIFIES' (explicit left 9996):   reduce Cmp --> 'LT'
    action 'INVARIANT' (explicit left 9996):   reduce Cmp --> 'LT'
    action 'ASSERT' (explicit left 9996):   reduce Cmp --> 'LT'
    action 'HAVOC' (explicit left 9996):   reduce Cmp --> 'LT'
    action 'GOTO' (explicit left 9996):   reduce Cmp --> 'LT'
    action 'CALL' (explicit left 9996):   reduce Cmp --> 'LT'
    action 'CCALL' (explicit left 9996):   reduce Cmp --> 'LT'
    action 'RET' (explicit left 9996):   reduce Cmp --> 'LT'
    action 'IRET' (explicit left 9996):   reduce Cmp --> 'LT'
    action 'GO' (explicit left 9996):   reduce Cmp --> 'LT'
    action 'FORALL' (explicit left 9996):   reduce Cmp --> 'LT'
    action 'EXISTS' (explicit left 9996):   reduce Cmp --> 'LT'
    action 'OLD' (explicit left 9996):   reduce Cmp --> 'LT'
    action 'COLONCOLON' (explicit left 9996):   reduce Cmp --> 'LT'
    action 'EQEQGT' (explicit left 9996):   reduce Cmp --> 'LT'
    action 'LTEQEQGT' (explicit left 9996):   reduce Cmp --> 'LT'
    action 'TYPE' (explicit left 9996):   reduce Cmp --> 'LT'
    action 'CONST' (explicit left 9996):   reduce Cmp --> 'LT'
    action 'FUNCTION' (explicit left 9996):   reduce Cmp --> 'LT'
    action 'RETURNS' (explicit left 9996):   reduce Cmp --> 'LT'
    action 'AXIOM' (explicit left 9996):   reduce Cmp --> 'LT'
    action 'PROCEDURE' (explicit left 9996):   reduce Cmp --> 'LT'
    action 'IMPLEMENTATION' (explicit left 9996):   reduce Cmp --> 'LT'
    action 'REQUIRES' (explicit left 9996):   reduce Cmp --> 'LT'
    action 'ENSURES' (explicit left 9996):   reduce Cmp --> 'LT'
    action 'LT' (explicit left 9996):   reduce Cmp --> 'LT'
    action 'GT' (explicit left 9996):   reduce Cmp --> 'LT'
    action 'EQ' (explicit left 9996):   reduce Cmp --> 'LT'
    action 'BANG' (explicit left 9996):   reduce Cmp --> 'LT'
    action 'COMMA' (explicit left 9996):   reduce Cmp --> 'LT'
    action 'LE' (explicit left 9996):   reduce Cmp --> 'LT'
    action 'GE' (explicit left 9996):   reduce Cmp --> 'LT'
    action 'EQEQ' (explicit left 9996):   reduce Cmp --> 'LT'
    action 'NE' (explicit left 9996):   reduce Cmp --> 'LT'
    action 'PLUS' (explicit left 9996):   reduce Cmp --> 'LT'
    action 'MINUS' (explicit left 9996):   reduce Cmp --> 'LT'
    action 'STAR' (explicit left 9996):   reduce Cmp --> 'LT'
    action 'SLASH' (explicit left 9996):   reduce Cmp --> 'LT'
    action 'PERCENT' (explicit left 9996):   reduce Cmp --> 'LT'
    action 'AMPAMP' (explicit left 9996):   reduce Cmp --> 'LT'
    action 'BARBAR' (explicit left 9996):   reduce Cmp --> 'LT'
    action 'COLONEQ' (explicit left 9996):   reduce Cmp --> 'LT'
    action 'INT' (explicit left 9996):   reduce Cmp --> 'LT'
    action 'BOOL' (explicit left 9996):   reduce Cmp --> 'LT'
    action 'IF' (explicit left 9996):   reduce Cmp --> 'LT'
    action 'RETURN' (explicit left 9996):   reduce Cmp --> 'LT'
    action 'VAR' (explicit left 9996):   reduce Cmp --> 'LT'
    action 'LBRACE' (explicit left 9996):   reduce Cmp --> 'LT'
    action 'RBRACE' (explicit left 9996):   reduce Cmp --> 'LT'
    action 'SEMI' (explicit left 9996):   reduce Cmp --> 'LT'
    action 'COLON' (explicit left 9996):   reduce Cmp --> 'LT'
    action 'LPAREN' (explicit left 9996):   reduce Cmp --> 'LT'
    action 'RPAREN' (explicit left 9996):   reduce Cmp --> 'LT'
    action 'LBRACKET' (explicit left 9996):   reduce Cmp --> 'LT'
    action 'RBRACKET' (explicit left 9996):   reduce Cmp --> 'LT'
    action 'LITBOOL' (explicit left 9996):   reduce Cmp --> 'LT'
    action 'LITINT' (explicit left 9996):   reduce Cmp --> 'LT'
    action 'QLID' (explicit left 9996):   reduce Cmp --> 'LT'
    action 'QUID' (explicit left 9996):   reduce Cmp --> 'LT'
    action 'DLID' (explicit left 9996):   reduce Cmp --> 'LT'
    action 'DUID' (explicit left 9996):   reduce Cmp --> 'LT'
    action 'LID' (explicit left 9996):   reduce Cmp --> 'LT'
    action 'UID' (explicit left 9996):   reduce Cmp --> 'LT'
    action 'error' (explicit left 9996):   reduce Cmp --> 'LT'
    action '#' (explicit left 9996):   reduce Cmp --> 'LT'
    action '$$' (explicit left 9996):   reduce Cmp --> 'LT'

  immediate action:   reduce Cmp --> 'LT'
 gotos:

state 47:
  items:
    Cmp -> 'GT' . 

  actions:
    action 'EOF' (explicit left 9996):   reduce Cmp --> 'GT'
    action 'EAX' (explicit left 9996):   reduce Cmp --> 'GT'
    action 'EBX' (explicit left 9996):   reduce Cmp --> 'GT'
    action 'ECX' (explicit left 9996):   reduce Cmp --> 'GT'
    action 'EDX' (explicit left 9996):   reduce Cmp --> 'GT'
    action 'ESI' (explicit left 9996):   reduce Cmp --> 'GT'
    action 'EDI' (explicit left 9996):   reduce Cmp --> 'GT'
    action 'EBP' (explicit left 9996):   reduce Cmp --> 'GT'
    action 'ESP' (explicit left 9996):   reduce Cmp --> 'GT'
    action 'MODIFIES' (explicit left 9996):   reduce Cmp --> 'GT'
    action 'INVARIANT' (explicit left 9996):   reduce Cmp --> 'GT'
    action 'ASSERT' (explicit left 9996):   reduce Cmp --> 'GT'
    action 'HAVOC' (explicit left 9996):   reduce Cmp --> 'GT'
    action 'GOTO' (explicit left 9996):   reduce Cmp --> 'GT'
    action 'CALL' (explicit left 9996):   reduce Cmp --> 'GT'
    action 'CCALL' (explicit left 9996):   reduce Cmp --> 'GT'
    action 'RET' (explicit left 9996):   reduce Cmp --> 'GT'
    action 'IRET' (explicit left 9996):   reduce Cmp --> 'GT'
    action 'GO' (explicit left 9996):   reduce Cmp --> 'GT'
    action 'FORALL' (explicit left 9996):   reduce Cmp --> 'GT'
    action 'EXISTS' (explicit left 9996):   reduce Cmp --> 'GT'
    action 'OLD' (explicit left 9996):   reduce Cmp --> 'GT'
    action 'COLONCOLON' (explicit left 9996):   reduce Cmp --> 'GT'
    action 'EQEQGT' (explicit left 9996):   reduce Cmp --> 'GT'
    action 'LTEQEQGT' (explicit left 9996):   reduce Cmp --> 'GT'
    action 'TYPE' (explicit left 9996):   reduce Cmp --> 'GT'
    action 'CONST' (explicit left 9996):   reduce Cmp --> 'GT'
    action 'FUNCTION' (explicit left 9996):   reduce Cmp --> 'GT'
    action 'RETURNS' (explicit left 9996):   reduce Cmp --> 'GT'
    action 'AXIOM' (explicit left 9996):   reduce Cmp --> 'GT'
    action 'PROCEDURE' (explicit left 9996):   reduce Cmp --> 'GT'
    action 'IMPLEMENTATION' (explicit left 9996):   reduce Cmp --> 'GT'
    action 'REQUIRES' (explicit left 9996):   reduce Cmp --> 'GT'
    action 'ENSURES' (explicit left 9996):   reduce Cmp --> 'GT'
    action 'LT' (explicit left 9996):   reduce Cmp --> 'GT'
    action 'GT' (explicit left 9996):   reduce Cmp --> 'GT'
    action 'EQ' (explicit left 9996):   reduce Cmp --> 'GT'
    action 'BANG' (explicit left 9996):   reduce Cmp --> 'GT'
    action 'COMMA' (explicit left 9996):   reduce Cmp --> 'GT'
    action 'LE' (explicit left 9996):   reduce Cmp --> 'GT'
    action 'GE' (explicit left 9996):   reduce Cmp --> 'GT'
    action 'EQEQ' (explicit left 9996):   reduce Cmp --> 'GT'
    action 'NE' (explicit left 9996):   reduce Cmp --> 'GT'
    action 'PLUS' (explicit left 9996):   reduce Cmp --> 'GT'
    action 'MINUS' (explicit left 9996):   reduce Cmp --> 'GT'
    action 'STAR' (explicit left 9996):   reduce Cmp --> 'GT'
    action 'SLASH' (explicit left 9996):   reduce Cmp --> 'GT'
    action 'PERCENT' (explicit left 9996):   reduce Cmp --> 'GT'
    action 'AMPAMP' (explicit left 9996):   reduce Cmp --> 'GT'
    action 'BARBAR' (explicit left 9996):   reduce Cmp --> 'GT'
    action 'COLONEQ' (explicit left 9996):   reduce Cmp --> 'GT'
    action 'INT' (explicit left 9996):   reduce Cmp --> 'GT'
    action 'BOOL' (explicit left 9996):   reduce Cmp --> 'GT'
    action 'IF' (explicit left 9996):   reduce Cmp --> 'GT'
    action 'RETURN' (explicit left 9996):   reduce Cmp --> 'GT'
    action 'VAR' (explicit left 9996):   reduce Cmp --> 'GT'
    action 'LBRACE' (explicit left 9996):   reduce Cmp --> 'GT'
    action 'RBRACE' (explicit left 9996):   reduce Cmp --> 'GT'
    action 'SEMI' (explicit left 9996):   reduce Cmp --> 'GT'
    action 'COLON' (explicit left 9996):   reduce Cmp --> 'GT'
    action 'LPAREN' (explicit left 9996):   reduce Cmp --> 'GT'
    action 'RPAREN' (explicit left 9996):   reduce Cmp --> 'GT'
    action 'LBRACKET' (explicit left 9996):   reduce Cmp --> 'GT'
    action 'RBRACKET' (explicit left 9996):   reduce Cmp --> 'GT'
    action 'LITBOOL' (explicit left 9996):   reduce Cmp --> 'GT'
    action 'LITINT' (explicit left 9996):   reduce Cmp --> 'GT'
    action 'QLID' (explicit left 9996):   reduce Cmp --> 'GT'
    action 'QUID' (explicit left 9996):   reduce Cmp --> 'GT'
    action 'DLID' (explicit left 9996):   reduce Cmp --> 'GT'
    action 'DUID' (explicit left 9996):   reduce Cmp --> 'GT'
    action 'LID' (explicit left 9996):   reduce Cmp --> 'GT'
    action 'UID' (explicit left 9996):   reduce Cmp --> 'GT'
    action 'error' (explicit left 9996):   reduce Cmp --> 'GT'
    action '#' (explicit left 9996):   reduce Cmp --> 'GT'
    action '$$' (explicit left 9996):   reduce Cmp --> 'GT'

  immediate action:   reduce Cmp --> 'GT'
 gotos:

state 48:
  items:
    Cmp -> 'LE' . 

  actions:
    action 'EOF' (explicit left 9996):   reduce Cmp --> 'LE'
    action 'EAX' (explicit left 9996):   reduce Cmp --> 'LE'
    action 'EBX' (explicit left 9996):   reduce Cmp --> 'LE'
    action 'ECX' (explicit left 9996):   reduce Cmp --> 'LE'
    action 'EDX' (explicit left 9996):   reduce Cmp --> 'LE'
    action 'ESI' (explicit left 9996):   reduce Cmp --> 'LE'
    action 'EDI' (explicit left 9996):   reduce Cmp --> 'LE'
    action 'EBP' (explicit left 9996):   reduce Cmp --> 'LE'
    action 'ESP' (explicit left 9996):   reduce Cmp --> 'LE'
    action 'MODIFIES' (explicit left 9996):   reduce Cmp --> 'LE'
    action 'INVARIANT' (explicit left 9996):   reduce Cmp --> 'LE'
    action 'ASSERT' (explicit left 9996):   reduce Cmp --> 'LE'
    action 'HAVOC' (explicit left 9996):   reduce Cmp --> 'LE'
    action 'GOTO' (explicit left 9996):   reduce Cmp --> 'LE'
    action 'CALL' (explicit left 9996):   reduce Cmp --> 'LE'
    action 'CCALL' (explicit left 9996):   reduce Cmp --> 'LE'
    action 'RET' (explicit left 9996):   reduce Cmp --> 'LE'
    action 'IRET' (explicit left 9996):   reduce Cmp --> 'LE'
    action 'GO' (explicit left 9996):   reduce Cmp --> 'LE'
    action 'FORALL' (explicit left 9996):   reduce Cmp --> 'LE'
    action 'EXISTS' (explicit left 9996):   reduce Cmp --> 'LE'
    action 'OLD' (explicit left 9996):   reduce Cmp --> 'LE'
    action 'COLONCOLON' (explicit left 9996):   reduce Cmp --> 'LE'
    action 'EQEQGT' (explicit left 9996):   reduce Cmp --> 'LE'
    action 'LTEQEQGT' (explicit left 9996):   reduce Cmp --> 'LE'
    action 'TYPE' (explicit left 9996):   reduce Cmp --> 'LE'
    action 'CONST' (explicit left 9996):   reduce Cmp --> 'LE'
    action 'FUNCTION' (explicit left 9996):   reduce Cmp --> 'LE'
    action 'RETURNS' (explicit left 9996):   reduce Cmp --> 'LE'
    action 'AXIOM' (explicit left 9996):   reduce Cmp --> 'LE'
    action 'PROCEDURE' (explicit left 9996):   reduce Cmp --> 'LE'
    action 'IMPLEMENTATION' (explicit left 9996):   reduce Cmp --> 'LE'
    action 'REQUIRES' (explicit left 9996):   reduce Cmp --> 'LE'
    action 'ENSURES' (explicit left 9996):   reduce Cmp --> 'LE'
    action 'LT' (explicit left 9996):   reduce Cmp --> 'LE'
    action 'GT' (explicit left 9996):   reduce Cmp --> 'LE'
    action 'EQ' (explicit left 9996):   reduce Cmp --> 'LE'
    action 'BANG' (explicit left 9996):   reduce Cmp --> 'LE'
    action 'COMMA' (explicit left 9996):   reduce Cmp --> 'LE'
    action 'LE' (explicit left 9996):   reduce Cmp --> 'LE'
    action 'GE' (explicit left 9996):   reduce Cmp --> 'LE'
    action 'EQEQ' (explicit left 9996):   reduce Cmp --> 'LE'
    action 'NE' (explicit left 9996):   reduce Cmp --> 'LE'
    action 'PLUS' (explicit left 9996):   reduce Cmp --> 'LE'
    action 'MINUS' (explicit left 9996):   reduce Cmp --> 'LE'
    action 'STAR' (explicit left 9996):   reduce Cmp --> 'LE'
    action 'SLASH' (explicit left 9996):   reduce Cmp --> 'LE'
    action 'PERCENT' (explicit left 9996):   reduce Cmp --> 'LE'
    action 'AMPAMP' (explicit left 9996):   reduce Cmp --> 'LE'
    action 'BARBAR' (explicit left 9996):   reduce Cmp --> 'LE'
    action 'COLONEQ' (explicit left 9996):   reduce Cmp --> 'LE'
    action 'INT' (explicit left 9996):   reduce Cmp --> 'LE'
    action 'BOOL' (explicit left 9996):   reduce Cmp --> 'LE'
    action 'IF' (explicit left 9996):   reduce Cmp --> 'LE'
    action 'RETURN' (explicit left 9996):   reduce Cmp --> 'LE'
    action 'VAR' (explicit left 9996):   reduce Cmp --> 'LE'
    action 'LBRACE' (explicit left 9996):   reduce Cmp --> 'LE'
    action 'RBRACE' (explicit left 9996):   reduce Cmp --> 'LE'
    action 'SEMI' (explicit left 9996):   reduce Cmp --> 'LE'
    action 'COLON' (explicit left 9996):   reduce Cmp --> 'LE'
    action 'LPAREN' (explicit left 9996):   reduce Cmp --> 'LE'
    action 'RPAREN' (explicit left 9996):   reduce Cmp --> 'LE'
    action 'LBRACKET' (explicit left 9996):   reduce Cmp --> 'LE'
    action 'RBRACKET' (explicit left 9996):   reduce Cmp --> 'LE'
    action 'LITBOOL' (explicit left 9996):   reduce Cmp --> 'LE'
    action 'LITINT' (explicit left 9996):   reduce Cmp --> 'LE'
    action 'QLID' (explicit left 9996):   reduce Cmp --> 'LE'
    action 'QUID' (explicit left 9996):   reduce Cmp --> 'LE'
    action 'DLID' (explicit left 9996):   reduce Cmp --> 'LE'
    action 'DUID' (explicit left 9996):   reduce Cmp --> 'LE'
    action 'LID' (explicit left 9996):   reduce Cmp --> 'LE'
    action 'UID' (explicit left 9996):   reduce Cmp --> 'LE'
    action 'error' (explicit left 9996):   reduce Cmp --> 'LE'
    action '#' (explicit left 9996):   reduce Cmp --> 'LE'
    action '$$' (explicit left 9996):   reduce Cmp --> 'LE'

  immediate action:   reduce Cmp --> 'LE'
 gotos:

state 49:
  items:
    Cmp -> 'GE' . 

  actions:
    action 'EOF' (explicit left 9996):   reduce Cmp --> 'GE'
    action 'EAX' (explicit left 9996):   reduce Cmp --> 'GE'
    action 'EBX' (explicit left 9996):   reduce Cmp --> 'GE'
    action 'ECX' (explicit left 9996):   reduce Cmp --> 'GE'
    action 'EDX' (explicit left 9996):   reduce Cmp --> 'GE'
    action 'ESI' (explicit left 9996):   reduce Cmp --> 'GE'
    action 'EDI' (explicit left 9996):   reduce Cmp --> 'GE'
    action 'EBP' (explicit left 9996):   reduce Cmp --> 'GE'
    action 'ESP' (explicit left 9996):   reduce Cmp --> 'GE'
    action 'MODIFIES' (explicit left 9996):   reduce Cmp --> 'GE'
    action 'INVARIANT' (explicit left 9996):   reduce Cmp --> 'GE'
    action 'ASSERT' (explicit left 9996):   reduce Cmp --> 'GE'
    action 'HAVOC' (explicit left 9996):   reduce Cmp --> 'GE'
    action 'GOTO' (explicit left 9996):   reduce Cmp --> 'GE'
    action 'CALL' (explicit left 9996):   reduce Cmp --> 'GE'
    action 'CCALL' (explicit left 9996):   reduce Cmp --> 'GE'
    action 'RET' (explicit left 9996):   reduce Cmp --> 'GE'
    action 'IRET' (explicit left 9996):   reduce Cmp --> 'GE'
    action 'GO' (explicit left 9996):   reduce Cmp --> 'GE'
    action 'FORALL' (explicit left 9996):   reduce Cmp --> 'GE'
    action 'EXISTS' (explicit left 9996):   reduce Cmp --> 'GE'
    action 'OLD' (explicit left 9996):   reduce Cmp --> 'GE'
    action 'COLONCOLON' (explicit left 9996):   reduce Cmp --> 'GE'
    action 'EQEQGT' (explicit left 9996):   reduce Cmp --> 'GE'
    action 'LTEQEQGT' (explicit left 9996):   reduce Cmp --> 'GE'
    action 'TYPE' (explicit left 9996):   reduce Cmp --> 'GE'
    action 'CONST' (explicit left 9996):   reduce Cmp --> 'GE'
    action 'FUNCTION' (explicit left 9996):   reduce Cmp --> 'GE'
    action 'RETURNS' (explicit left 9996):   reduce Cmp --> 'GE'
    action 'AXIOM' (explicit left 9996):   reduce Cmp --> 'GE'
    action 'PROCEDURE' (explicit left 9996):   reduce Cmp --> 'GE'
    action 'IMPLEMENTATION' (explicit left 9996):   reduce Cmp --> 'GE'
    action 'REQUIRES' (explicit left 9996):   reduce Cmp --> 'GE'
    action 'ENSURES' (explicit left 9996):   reduce Cmp --> 'GE'
    action 'LT' (explicit left 9996):   reduce Cmp --> 'GE'
    action 'GT' (explicit left 9996):   reduce Cmp --> 'GE'
    action 'EQ' (explicit left 9996):   reduce Cmp --> 'GE'
    action 'BANG' (explicit left 9996):   reduce Cmp --> 'GE'
    action 'COMMA' (explicit left 9996):   reduce Cmp --> 'GE'
    action 'LE' (explicit left 9996):   reduce Cmp --> 'GE'
    action 'GE' (explicit left 9996):   reduce Cmp --> 'GE'
    action 'EQEQ' (explicit left 9996):   reduce Cmp --> 'GE'
    action 'NE' (explicit left 9996):   reduce Cmp --> 'GE'
    action 'PLUS' (explicit left 9996):   reduce Cmp --> 'GE'
    action 'MINUS' (explicit left 9996):   reduce Cmp --> 'GE'
    action 'STAR' (explicit left 9996):   reduce Cmp --> 'GE'
    action 'SLASH' (explicit left 9996):   reduce Cmp --> 'GE'
    action 'PERCENT' (explicit left 9996):   reduce Cmp --> 'GE'
    action 'AMPAMP' (explicit left 9996):   reduce Cmp --> 'GE'
    action 'BARBAR' (explicit left 9996):   reduce Cmp --> 'GE'
    action 'COLONEQ' (explicit left 9996):   reduce Cmp --> 'GE'
    action 'INT' (explicit left 9996):   reduce Cmp --> 'GE'
    action 'BOOL' (explicit left 9996):   reduce Cmp --> 'GE'
    action 'IF' (explicit left 9996):   reduce Cmp --> 'GE'
    action 'RETURN' (explicit left 9996):   reduce Cmp --> 'GE'
    action 'VAR' (explicit left 9996):   reduce Cmp --> 'GE'
    action 'LBRACE' (explicit left 9996):   reduce Cmp --> 'GE'
    action 'RBRACE' (explicit left 9996):   reduce Cmp --> 'GE'
    action 'SEMI' (explicit left 9996):   reduce Cmp --> 'GE'
    action 'COLON' (explicit left 9996):   reduce Cmp --> 'GE'
    action 'LPAREN' (explicit left 9996):   reduce Cmp --> 'GE'
    action 'RPAREN' (explicit left 9996):   reduce Cmp --> 'GE'
    action 'LBRACKET' (explicit left 9996):   reduce Cmp --> 'GE'
    action 'RBRACKET' (explicit left 9996):   reduce Cmp --> 'GE'
    action 'LITBOOL' (explicit left 9996):   reduce Cmp --> 'GE'
    action 'LITINT' (explicit left 9996):   reduce Cmp --> 'GE'
    action 'QLID' (explicit left 9996):   reduce Cmp --> 'GE'
    action 'QUID' (explicit left 9996):   reduce Cmp --> 'GE'
    action 'DLID' (explicit left 9996):   reduce Cmp --> 'GE'
    action 'DUID' (explicit left 9996):   reduce Cmp --> 'GE'
    action 'LID' (explicit left 9996):   reduce Cmp --> 'GE'
    action 'UID' (explicit left 9996):   reduce Cmp --> 'GE'
    action 'error' (explicit left 9996):   reduce Cmp --> 'GE'
    action '#' (explicit left 9996):   reduce Cmp --> 'GE'
    action '$$' (explicit left 9996):   reduce Cmp --> 'GE'

  immediate action:   reduce Cmp --> 'GE'
 gotos:

state 50:
  items:
    Triggers -> 'LBRACE' . Exps 'RBRACE' Triggers

  actions:
    action 'EOF' (noprec):   reduce Exps --> 
    action 'EAX' (noprec):   shift 14
    action 'EBX' (noprec):   shift 15
    action 'ECX' (noprec):   shift 16
    action 'EDX' (noprec):   shift 17
    action 'ESI' (noprec):   shift 18
    action 'EDI' (noprec):   shift 19
    action 'EBP' (noprec):   shift 20
    action 'ESP' (noprec):   shift 21
    action 'MODIFIES' (noprec):   reduce Exps --> 
    action 'INVARIANT' (noprec):   reduce Exps --> 
    action 'ASSERT' (noprec):   reduce Exps --> 
    action 'HAVOC' (noprec):   reduce Exps --> 
    action 'GOTO' (noprec):   reduce Exps --> 
    action 'CALL' (noprec):   reduce Exps --> 
    action 'CCALL' (noprec):   reduce Exps --> 
    action 'RET' (noprec):   reduce Exps --> 
    action 'IRET' (noprec):   reduce Exps --> 
    action 'GO' (noprec):   reduce Exps --> 
    action 'FORALL' (noprec):   reduce Exps --> 
    action 'EXISTS' (noprec):   reduce Exps --> 
    action 'OLD' (noprec):   shift 125
    action 'COLONCOLON' (noprec):   reduce Exps --> 
    action 'EQEQGT' (noprec):   reduce Exps --> 
    action 'LTEQEQGT' (noprec):   reduce Exps --> 
    action 'TYPE' (noprec):   reduce Exps --> 
    action 'CONST' (noprec):   reduce Exps --> 
    action 'FUNCTION' (noprec):   reduce Exps --> 
    action 'RETURNS' (noprec):   reduce Exps --> 
    action 'AXIOM' (noprec):   reduce Exps --> 
    action 'PROCEDURE' (noprec):   reduce Exps --> 
    action 'IMPLEMENTATION' (noprec):   reduce Exps --> 
    action 'REQUIRES' (noprec):   reduce Exps --> 
    action 'ENSURES' (noprec):   reduce Exps --> 
    action 'LT' (noprec):   reduce Exps --> 
    action 'GT' (noprec):   reduce Exps --> 
    action 'EQ' (noprec):   reduce Exps --> 
    action 'BANG' (explicit right 9999):   shift 107
    action 'COMMA' (noprec):   reduce Exps --> 
    action 'LE' (noprec):   reduce Exps --> 
    action 'GE' (noprec):   reduce Exps --> 
    action 'EQEQ' (noprec):   reduce Exps --> 
    action 'NE' (noprec):   reduce Exps --> 
    action 'PLUS' (noprec):   reduce Exps --> 
    action 'MINUS' (noprec):   reduce Exps --> 
    action 'STAR' (noprec):   reduce Exps --> 
    action 'SLASH' (noprec):   reduce Exps --> 
    action 'PERCENT' (noprec):   reduce Exps --> 
    action 'AMPAMP' (noprec):   reduce Exps --> 
    action 'BARBAR' (noprec):   reduce Exps --> 
    action 'COLONEQ' (noprec):   reduce Exps --> 
    action 'INT' (noprec):   reduce Exps --> 
    action 'BOOL' (noprec):   reduce Exps --> 
    action 'IF' (noprec):   reduce Exps --> 
    action 'RETURN' (noprec):   reduce Exps --> 
    action 'VAR' (noprec):   reduce Exps --> 
    action 'LBRACE' (noprec):   reduce Exps --> 
    action 'RBRACE' (noprec):   reduce Exps --> 
    action 'SEMI' (noprec):   reduce Exps --> 
    action 'COLON' (noprec):   reduce Exps --> 
    action 'LPAREN' (explicit left 10000):   shift 54
    action 'RPAREN' (noprec):   reduce Exps --> 
    action 'LBRACKET' (noprec):   reduce Exps --> 
    action 'RBRACKET' (noprec):   reduce Exps --> 
    action 'LITBOOL' (noprec):   shift 124
    action 'LITINT' (noprec):   shift 123
    action 'QLID' (noprec):   shift 145
    action 'QUID' (noprec):   shift 144
    action 'DLID' (noprec):   shift 143
    action 'DUID' (noprec):   shift 142
    action 'LID' (noprec):   shift 4
    action 'UID' (noprec):   shift 5
    action 'error' (noprec):   reduce Exps --> 
    action '#' (noprec):   reduce Exps --> 
    action '$$' (noprec):   reduce Exps --> 

  immediate action: <none>
 gotos:
    goto ID: 141
    goto Reg: 132
    goto Exp: 78
    goto Exps: 51
    goto AnyId: 128

state 51:
  items:
    Triggers -> 'LBRACE' Exps . 'RBRACE' Triggers

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   shift 52
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 52:
  items:
    Triggers -> 'LBRACE' Exps 'RBRACE' . Triggers

  actions:
    action 'EOF' (noprec):   reduce Triggers --> 
    action 'EAX' (noprec):   reduce Triggers --> 
    action 'EBX' (noprec):   reduce Triggers --> 
    action 'ECX' (noprec):   reduce Triggers --> 
    action 'EDX' (noprec):   reduce Triggers --> 
    action 'ESI' (noprec):   reduce Triggers --> 
    action 'EDI' (noprec):   reduce Triggers --> 
    action 'EBP' (noprec):   reduce Triggers --> 
    action 'ESP' (noprec):   reduce Triggers --> 
    action 'MODIFIES' (noprec):   reduce Triggers --> 
    action 'INVARIANT' (noprec):   reduce Triggers --> 
    action 'ASSERT' (noprec):   reduce Triggers --> 
    action 'HAVOC' (noprec):   reduce Triggers --> 
    action 'GOTO' (noprec):   reduce Triggers --> 
    action 'CALL' (noprec):   reduce Triggers --> 
    action 'CCALL' (noprec):   reduce Triggers --> 
    action 'RET' (noprec):   reduce Triggers --> 
    action 'IRET' (noprec):   reduce Triggers --> 
    action 'GO' (noprec):   reduce Triggers --> 
    action 'FORALL' (noprec):   reduce Triggers --> 
    action 'EXISTS' (noprec):   reduce Triggers --> 
    action 'OLD' (noprec):   reduce Triggers --> 
    action 'COLONCOLON' (noprec):   reduce Triggers --> 
    action 'EQEQGT' (noprec):   reduce Triggers --> 
    action 'LTEQEQGT' (noprec):   reduce Triggers --> 
    action 'TYPE' (noprec):   reduce Triggers --> 
    action 'CONST' (noprec):   reduce Triggers --> 
    action 'FUNCTION' (noprec):   reduce Triggers --> 
    action 'RETURNS' (noprec):   reduce Triggers --> 
    action 'AXIOM' (noprec):   reduce Triggers --> 
    action 'PROCEDURE' (noprec):   reduce Triggers --> 
    action 'IMPLEMENTATION' (noprec):   reduce Triggers --> 
    action 'REQUIRES' (noprec):   reduce Triggers --> 
    action 'ENSURES' (noprec):   reduce Triggers --> 
    action 'LT' (noprec):   reduce Triggers --> 
    action 'GT' (noprec):   reduce Triggers --> 
    action 'EQ' (noprec):   reduce Triggers --> 
    action 'BANG' (noprec):   reduce Triggers --> 
    action 'COMMA' (noprec):   reduce Triggers --> 
    action 'LE' (noprec):   reduce Triggers --> 
    action 'GE' (noprec):   reduce Triggers --> 
    action 'EQEQ' (noprec):   reduce Triggers --> 
    action 'NE' (noprec):   reduce Triggers --> 
    action 'PLUS' (noprec):   reduce Triggers --> 
    action 'MINUS' (noprec):   reduce Triggers --> 
    action 'STAR' (noprec):   reduce Triggers --> 
    action 'SLASH' (noprec):   reduce Triggers --> 
    action 'PERCENT' (noprec):   reduce Triggers --> 
    action 'AMPAMP' (noprec):   reduce Triggers --> 
    action 'BARBAR' (noprec):   reduce Triggers --> 
    action 'COLONEQ' (noprec):   reduce Triggers --> 
    action 'INT' (noprec):   reduce Triggers --> 
    action 'BOOL' (noprec):   reduce Triggers --> 
    action 'IF' (noprec):   reduce Triggers --> 
    action 'RETURN' (noprec):   reduce Triggers --> 
    action 'VAR' (noprec):   reduce Triggers --> 
    action 'LBRACE' (noprec):   shift 50
    action 'RBRACE' (noprec):   reduce Triggers --> 
    action 'SEMI' (noprec):   reduce Triggers --> 
    action 'COLON' (noprec):   reduce Triggers --> 
    action 'LPAREN' (noprec):   reduce Triggers --> 
    action 'RPAREN' (noprec):   reduce Triggers --> 
    action 'LBRACKET' (noprec):   reduce Triggers --> 
    action 'RBRACKET' (noprec):   reduce Triggers --> 
    action 'LITBOOL' (noprec):   reduce Triggers --> 
    action 'LITINT' (noprec):   reduce Triggers --> 
    action 'QLID' (noprec):   reduce Triggers --> 
    action 'QUID' (noprec):   reduce Triggers --> 
    action 'DLID' (noprec):   reduce Triggers --> 
    action 'DUID' (noprec):   reduce Triggers --> 
    action 'LID' (noprec):   reduce Triggers --> 
    action 'UID' (noprec):   reduce Triggers --> 
    action 'error' (noprec):   reduce Triggers --> 
    action '#' (noprec):   reduce Triggers --> 
    action '$$' (noprec):   reduce Triggers --> 

  immediate action: <none>
 gotos:
    goto Triggers: 53

state 53:
  items:
    Triggers -> 'LBRACE' Exps 'RBRACE' Triggers . 

  actions:
    action 'EOF' (noprec):   reduce Triggers --> 'LBRACE' Exps 'RBRACE' Triggers
    action 'EAX' (noprec):   reduce Triggers --> 'LBRACE' Exps 'RBRACE' Triggers
    action 'EBX' (noprec):   reduce Triggers --> 'LBRACE' Exps 'RBRACE' Triggers
    action 'ECX' (noprec):   reduce Triggers --> 'LBRACE' Exps 'RBRACE' Triggers
    action 'EDX' (noprec):   reduce Triggers --> 'LBRACE' Exps 'RBRACE' Triggers
    action 'ESI' (noprec):   reduce Triggers --> 'LBRACE' Exps 'RBRACE' Triggers
    action 'EDI' (noprec):   reduce Triggers --> 'LBRACE' Exps 'RBRACE' Triggers
    action 'EBP' (noprec):   reduce Triggers --> 'LBRACE' Exps 'RBRACE' Triggers
    action 'ESP' (noprec):   reduce Triggers --> 'LBRACE' Exps 'RBRACE' Triggers
    action 'MODIFIES' (noprec):   reduce Triggers --> 'LBRACE' Exps 'RBRACE' Triggers
    action 'INVARIANT' (noprec):   reduce Triggers --> 'LBRACE' Exps 'RBRACE' Triggers
    action 'ASSERT' (noprec):   reduce Triggers --> 'LBRACE' Exps 'RBRACE' Triggers
    action 'HAVOC' (noprec):   reduce Triggers --> 'LBRACE' Exps 'RBRACE' Triggers
    action 'GOTO' (noprec):   reduce Triggers --> 'LBRACE' Exps 'RBRACE' Triggers
    action 'CALL' (noprec):   reduce Triggers --> 'LBRACE' Exps 'RBRACE' Triggers
    action 'CCALL' (noprec):   reduce Triggers --> 'LBRACE' Exps 'RBRACE' Triggers
    action 'RET' (noprec):   reduce Triggers --> 'LBRACE' Exps 'RBRACE' Triggers
    action 'IRET' (noprec):   reduce Triggers --> 'LBRACE' Exps 'RBRACE' Triggers
    action 'GO' (noprec):   reduce Triggers --> 'LBRACE' Exps 'RBRACE' Triggers
    action 'FORALL' (noprec):   reduce Triggers --> 'LBRACE' Exps 'RBRACE' Triggers
    action 'EXISTS' (noprec):   reduce Triggers --> 'LBRACE' Exps 'RBRACE' Triggers
    action 'OLD' (noprec):   reduce Triggers --> 'LBRACE' Exps 'RBRACE' Triggers
    action 'COLONCOLON' (noprec):   reduce Triggers --> 'LBRACE' Exps 'RBRACE' Triggers
    action 'EQEQGT' (noprec):   reduce Triggers --> 'LBRACE' Exps 'RBRACE' Triggers
    action 'LTEQEQGT' (noprec):   reduce Triggers --> 'LBRACE' Exps 'RBRACE' Triggers
    action 'TYPE' (noprec):   reduce Triggers --> 'LBRACE' Exps 'RBRACE' Triggers
    action 'CONST' (noprec):   reduce Triggers --> 'LBRACE' Exps 'RBRACE' Triggers
    action 'FUNCTION' (noprec):   reduce Triggers --> 'LBRACE' Exps 'RBRACE' Triggers
    action 'RETURNS' (noprec):   reduce Triggers --> 'LBRACE' Exps 'RBRACE' Triggers
    action 'AXIOM' (noprec):   reduce Triggers --> 'LBRACE' Exps 'RBRACE' Triggers
    action 'PROCEDURE' (noprec):   reduce Triggers --> 'LBRACE' Exps 'RBRACE' Triggers
    action 'IMPLEMENTATION' (noprec):   reduce Triggers --> 'LBRACE' Exps 'RBRACE' Triggers
    action 'REQUIRES' (noprec):   reduce Triggers --> 'LBRACE' Exps 'RBRACE' Triggers
    action 'ENSURES' (noprec):   reduce Triggers --> 'LBRACE' Exps 'RBRACE' Triggers
    action 'LT' (noprec):   reduce Triggers --> 'LBRACE' Exps 'RBRACE' Triggers
    action 'GT' (noprec):   reduce Triggers --> 'LBRACE' Exps 'RBRACE' Triggers
    action 'EQ' (noprec):   reduce Triggers --> 'LBRACE' Exps 'RBRACE' Triggers
    action 'BANG' (noprec):   reduce Triggers --> 'LBRACE' Exps 'RBRACE' Triggers
    action 'COMMA' (noprec):   reduce Triggers --> 'LBRACE' Exps 'RBRACE' Triggers
    action 'LE' (noprec):   reduce Triggers --> 'LBRACE' Exps 'RBRACE' Triggers
    action 'GE' (noprec):   reduce Triggers --> 'LBRACE' Exps 'RBRACE' Triggers
    action 'EQEQ' (noprec):   reduce Triggers --> 'LBRACE' Exps 'RBRACE' Triggers
    action 'NE' (noprec):   reduce Triggers --> 'LBRACE' Exps 'RBRACE' Triggers
    action 'PLUS' (noprec):   reduce Triggers --> 'LBRACE' Exps 'RBRACE' Triggers
    action 'MINUS' (noprec):   reduce Triggers --> 'LBRACE' Exps 'RBRACE' Triggers
    action 'STAR' (noprec):   reduce Triggers --> 'LBRACE' Exps 'RBRACE' Triggers
    action 'SLASH' (noprec):   reduce Triggers --> 'LBRACE' Exps 'RBRACE' Triggers
    action 'PERCENT' (noprec):   reduce Triggers --> 'LBRACE' Exps 'RBRACE' Triggers
    action 'AMPAMP' (noprec):   reduce Triggers --> 'LBRACE' Exps 'RBRACE' Triggers
    action 'BARBAR' (noprec):   reduce Triggers --> 'LBRACE' Exps 'RBRACE' Triggers
    action 'COLONEQ' (noprec):   reduce Triggers --> 'LBRACE' Exps 'RBRACE' Triggers
    action 'INT' (noprec):   reduce Triggers --> 'LBRACE' Exps 'RBRACE' Triggers
    action 'BOOL' (noprec):   reduce Triggers --> 'LBRACE' Exps 'RBRACE' Triggers
    action 'IF' (noprec):   reduce Triggers --> 'LBRACE' Exps 'RBRACE' Triggers
    action 'RETURN' (noprec):   reduce Triggers --> 'LBRACE' Exps 'RBRACE' Triggers
    action 'VAR' (noprec):   reduce Triggers --> 'LBRACE' Exps 'RBRACE' Triggers
    action 'LBRACE' (noprec):   reduce Triggers --> 'LBRACE' Exps 'RBRACE' Triggers
    action 'RBRACE' (noprec):   reduce Triggers --> 'LBRACE' Exps 'RBRACE' Triggers
    action 'SEMI' (noprec):   reduce Triggers --> 'LBRACE' Exps 'RBRACE' Triggers
    action 'COLON' (noprec):   reduce Triggers --> 'LBRACE' Exps 'RBRACE' Triggers
    action 'LPAREN' (noprec):   reduce Triggers --> 'LBRACE' Exps 'RBRACE' Triggers
    action 'RPAREN' (noprec):   reduce Triggers --> 'LBRACE' Exps 'RBRACE' Triggers
    action 'LBRACKET' (noprec):   reduce Triggers --> 'LBRACE' Exps 'RBRACE' Triggers
    action 'RBRACKET' (noprec):   reduce Triggers --> 'LBRACE' Exps 'RBRACE' Triggers
    action 'LITBOOL' (noprec):   reduce Triggers --> 'LBRACE' Exps 'RBRACE' Triggers
    action 'LITINT' (noprec):   reduce Triggers --> 'LBRACE' Exps 'RBRACE' Triggers
    action 'QLID' (noprec):   reduce Triggers --> 'LBRACE' Exps 'RBRACE' Triggers
    action 'QUID' (noprec):   reduce Triggers --> 'LBRACE' Exps 'RBRACE' Triggers
    action 'DLID' (noprec):   reduce Triggers --> 'LBRACE' Exps 'RBRACE' Triggers
    action 'DUID' (noprec):   reduce Triggers --> 'LBRACE' Exps 'RBRACE' Triggers
    action 'LID' (noprec):   reduce Triggers --> 'LBRACE' Exps 'RBRACE' Triggers
    action 'UID' (noprec):   reduce Triggers --> 'LBRACE' Exps 'RBRACE' Triggers
    action 'error' (noprec):   reduce Triggers --> 'LBRACE' Exps 'RBRACE' Triggers
    action '#' (noprec):   reduce Triggers --> 'LBRACE' Exps 'RBRACE' Triggers
    action '$$' (noprec):   reduce Triggers --> 'LBRACE' Exps 'RBRACE' Triggers

  immediate action:   reduce Triggers --> 'LBRACE' Exps 'RBRACE' Triggers
 gotos:

state 54:
  items:
    Exp -> 'LPAREN' . Exp 'RPAREN'
    Exp -> 'LPAREN' . 'MINUS' Exp 'RPAREN'
    Exp -> 'LPAREN' . 'FORALL' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    Exp -> 'LPAREN' . 'EXISTS' Formals 'COLONCOLON' Triggers Exp 'RPAREN'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   shift 14
    action 'EBX' (noprec):   shift 15
    action 'ECX' (noprec):   shift 16
    action 'EDX' (noprec):   shift 17
    action 'ESI' (noprec):   shift 18
    action 'EDI' (noprec):   shift 19
    action 'EBP' (noprec):   shift 20
    action 'ESP' (noprec):   shift 21
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   shift 108
    action 'EXISTS' (noprec):   shift 113
    action 'OLD' (noprec):   shift 125
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (explicit right 9999):   shift 107
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (explicit left 9997):   shift 105
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (explicit left 10000):   shift 54
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   shift 124
    action 'LITINT' (noprec):   shift 123
    action 'QLID' (noprec):   shift 145
    action 'QUID' (noprec):   shift 144
    action 'DLID' (noprec):   shift 143
    action 'DUID' (noprec):   shift 142
    action 'LID' (noprec):   shift 4
    action 'UID' (noprec):   shift 5
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto ID: 141
    goto Reg: 132
    goto Exp: 55
    goto AnyId: 128

state 55:
  items:
    Exp -> 'LPAREN' Exp . 'RPAREN'
    Exp -> Exp . 'LTEQEQGT' Exp
    Exp -> Exp . 'EQEQGT' Exp
    Exp -> Exp . 'AMPAMP' Exp
    Exp -> Exp . 'BARBAR' Exp
    Exp -> Exp . 'EQEQ' Exp
    Exp -> Exp . 'NE' Exp
    Exp -> Exp . 'LT' Exp
    Exp -> Exp . 'GT' Exp
    Exp -> Exp . 'LE' Exp
    Exp -> Exp . 'GE' Exp
    Exp -> Exp . 'PLUS' Exp
    Exp -> Exp . 'MINUS' Exp
    Exp -> Exp . 'STAR' Exp
    Exp -> Exp . 'SLASH' Exp
    Exp -> Exp . 'PERCENT' Exp
    Exp -> Exp . 'LBRACKET' Exps 'RBRACKET'
    Exp -> Exp . 'LBRACKET' Exps 'COLONEQ' Exp 'RBRACKET'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (explicit right 9994):   shift 91
    action 'LTEQEQGT' (explicit left 9993):   shift 90
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (explicit left 9996):   shift 96
    action 'GT' (explicit left 9996):   shift 97
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (explicit left 9996):   shift 98
    action 'GE' (explicit left 9996):   shift 99
    action 'EQEQ' (explicit left 9996):   shift 94
    action 'NE' (explicit left 9996):   shift 95
    action 'PLUS' (explicit left 9997):   shift 100
    action 'MINUS' (explicit left 9997):   shift 101
    action 'STAR' (explicit left 9998):   shift 102
    action 'SLASH' (explicit left 9998):   shift 103
    action 'PERCENT' (explicit left 9998):   shift 104
    action 'AMPAMP' (explicit left 9995):   shift 92
    action 'BARBAR' (explicit left 9995):   shift 93
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (explicit left 10000):   shift 56
    action 'LBRACKET' (explicit left 10000):   shift 118
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 56:
  items:
    Exp -> 'LPAREN' Exp 'RPAREN' . 

  actions:
    action 'EOF' (explicit left 10000):   reduce Exp --> 'LPAREN' Exp 'RPAREN'
    action 'EAX' (explicit left 10000):   reduce Exp --> 'LPAREN' Exp 'RPAREN'
    action 'EBX' (explicit left 10000):   reduce Exp --> 'LPAREN' Exp 'RPAREN'
    action 'ECX' (explicit left 10000):   reduce Exp --> 'LPAREN' Exp 'RPAREN'
    action 'EDX' (explicit left 10000):   reduce Exp --> 'LPAREN' Exp 'RPAREN'
    action 'ESI' (explicit left 10000):   reduce Exp --> 'LPAREN' Exp 'RPAREN'
    action 'EDI' (explicit left 10000):   reduce Exp --> 'LPAREN' Exp 'RPAREN'
    action 'EBP' (explicit left 10000):   reduce Exp --> 'LPAREN' Exp 'RPAREN'
    action 'ESP' (explicit left 10000):   reduce Exp --> 'LPAREN' Exp 'RPAREN'
    action 'MODIFIES' (explicit left 10000):   reduce Exp --> 'LPAREN' Exp 'RPAREN'
    action 'INVARIANT' (explicit left 10000):   reduce Exp --> 'LPAREN' Exp 'RPAREN'
    action 'ASSERT' (explicit left 10000):   reduce Exp --> 'LPAREN' Exp 'RPAREN'
    action 'HAVOC' (explicit left 10000):   reduce Exp --> 'LPAREN' Exp 'RPAREN'
    action 'GOTO' (explicit left 10000):   reduce Exp --> 'LPAREN' Exp 'RPAREN'
    action 'CALL' (explicit left 10000):   reduce Exp --> 'LPAREN' Exp 'RPAREN'
    action 'CCALL' (explicit left 10000):   reduce Exp --> 'LPAREN' Exp 'RPAREN'
    action 'RET' (explicit left 10000):   reduce Exp --> 'LPAREN' Exp 'RPAREN'
    action 'IRET' (explicit left 10000):   reduce Exp --> 'LPAREN' Exp 'RPAREN'
    action 'GO' (explicit left 10000):   reduce Exp --> 'LPAREN' Exp 'RPAREN'
    action 'FORALL' (explicit left 10000):   reduce Exp --> 'LPAREN' Exp 'RPAREN'
    action 'EXISTS' (explicit left 10000):   reduce Exp --> 'LPAREN' Exp 'RPAREN'
    action 'OLD' (explicit left 10000):   reduce Exp --> 'LPAREN' Exp 'RPAREN'
    action 'COLONCOLON' (explicit left 10000):   reduce Exp --> 'LPAREN' Exp 'RPAREN'
    action 'EQEQGT' (explicit left 10000):   reduce Exp --> 'LPAREN' Exp 'RPAREN'
    action 'LTEQEQGT' (explicit left 10000):   reduce Exp --> 'LPAREN' Exp 'RPAREN'
    action 'TYPE' (explicit left 10000):   reduce Exp --> 'LPAREN' Exp 'RPAREN'
    action 'CONST' (explicit left 10000):   reduce Exp --> 'LPAREN' Exp 'RPAREN'
    action 'FUNCTION' (explicit left 10000):   reduce Exp --> 'LPAREN' Exp 'RPAREN'
    action 'RETURNS' (explicit left 10000):   reduce Exp --> 'LPAREN' Exp 'RPAREN'
    action 'AXIOM' (explicit left 10000):   reduce Exp --> 'LPAREN' Exp 'RPAREN'
    action 'PROCEDURE' (explicit left 10000):   reduce Exp --> 'LPAREN' Exp 'RPAREN'
    action 'IMPLEMENTATION' (explicit left 10000):   reduce Exp --> 'LPAREN' Exp 'RPAREN'
    action 'REQUIRES' (explicit left 10000):   reduce Exp --> 'LPAREN' Exp 'RPAREN'
    action 'ENSURES' (explicit left 10000):   reduce Exp --> 'LPAREN' Exp 'RPAREN'
    action 'LT' (explicit left 10000):   reduce Exp --> 'LPAREN' Exp 'RPAREN'
    action 'GT' (explicit left 10000):   reduce Exp --> 'LPAREN' Exp 'RPAREN'
    action 'EQ' (explicit left 10000):   reduce Exp --> 'LPAREN' Exp 'RPAREN'
    action 'BANG' (explicit left 10000):   reduce Exp --> 'LPAREN' Exp 'RPAREN'
    action 'COMMA' (explicit left 10000):   reduce Exp --> 'LPAREN' Exp 'RPAREN'
    action 'LE' (explicit left 10000):   reduce Exp --> 'LPAREN' Exp 'RPAREN'
    action 'GE' (explicit left 10000):   reduce Exp --> 'LPAREN' Exp 'RPAREN'
    action 'EQEQ' (explicit left 10000):   reduce Exp --> 'LPAREN' Exp 'RPAREN'
    action 'NE' (explicit left 10000):   reduce Exp --> 'LPAREN' Exp 'RPAREN'
    action 'PLUS' (explicit left 10000):   reduce Exp --> 'LPAREN' Exp 'RPAREN'
    action 'MINUS' (explicit left 10000):   reduce Exp --> 'LPAREN' Exp 'RPAREN'
    action 'STAR' (explicit left 10000):   reduce Exp --> 'LPAREN' Exp 'RPAREN'
    action 'SLASH' (explicit left 10000):   reduce Exp --> 'LPAREN' Exp 'RPAREN'
    action 'PERCENT' (explicit left 10000):   reduce Exp --> 'LPAREN' Exp 'RPAREN'
    action 'AMPAMP' (explicit left 10000):   reduce Exp --> 'LPAREN' Exp 'RPAREN'
    action 'BARBAR' (explicit left 10000):   reduce Exp --> 'LPAREN' Exp 'RPAREN'
    action 'COLONEQ' (explicit left 10000):   reduce Exp --> 'LPAREN' Exp 'RPAREN'
    action 'INT' (explicit left 10000):   reduce Exp --> 'LPAREN' Exp 'RPAREN'
    action 'BOOL' (explicit left 10000):   reduce Exp --> 'LPAREN' Exp 'RPAREN'
    action 'IF' (explicit left 10000):   reduce Exp --> 'LPAREN' Exp 'RPAREN'
    action 'RETURN' (explicit left 10000):   reduce Exp --> 'LPAREN' Exp 'RPAREN'
    action 'VAR' (explicit left 10000):   reduce Exp --> 'LPAREN' Exp 'RPAREN'
    action 'LBRACE' (explicit left 10000):   reduce Exp --> 'LPAREN' Exp 'RPAREN'
    action 'RBRACE' (explicit left 10000):   reduce Exp --> 'LPAREN' Exp 'RPAREN'
    action 'SEMI' (explicit left 10000):   reduce Exp --> 'LPAREN' Exp 'RPAREN'
    action 'COLON' (explicit left 10000):   reduce Exp --> 'LPAREN' Exp 'RPAREN'
    action 'LPAREN' (explicit left 10000):   reduce Exp --> 'LPAREN' Exp 'RPAREN'
    action 'RPAREN' (explicit left 10000):   reduce Exp --> 'LPAREN' Exp 'RPAREN'
    action 'LBRACKET' (explicit left 10000):   reduce Exp --> 'LPAREN' Exp 'RPAREN'
    action 'RBRACKET' (explicit left 10000):   reduce Exp --> 'LPAREN' Exp 'RPAREN'
    action 'LITBOOL' (explicit left 10000):   reduce Exp --> 'LPAREN' Exp 'RPAREN'
    action 'LITINT' (explicit left 10000):   reduce Exp --> 'LPAREN' Exp 'RPAREN'
    action 'QLID' (explicit left 10000):   reduce Exp --> 'LPAREN' Exp 'RPAREN'
    action 'QUID' (explicit left 10000):   reduce Exp --> 'LPAREN' Exp 'RPAREN'
    action 'DLID' (explicit left 10000):   reduce Exp --> 'LPAREN' Exp 'RPAREN'
    action 'DUID' (explicit left 10000):   reduce Exp --> 'LPAREN' Exp 'RPAREN'
    action 'LID' (explicit left 10000):   reduce Exp --> 'LPAREN' Exp 'RPAREN'
    action 'UID' (explicit left 10000):   reduce Exp --> 'LPAREN' Exp 'RPAREN'
    action 'error' (explicit left 10000):   reduce Exp --> 'LPAREN' Exp 'RPAREN'
    action '#' (explicit left 10000):   reduce Exp --> 'LPAREN' Exp 'RPAREN'
    action '$$' (explicit left 10000):   reduce Exp --> 'LPAREN' Exp 'RPAREN'

  immediate action:   reduce Exp --> 'LPAREN' Exp 'RPAREN'
 gotos:

state 57:
  items:
    Exp -> Exp . 'LTEQEQGT' Exp
    Exp -> Exp 'LTEQEQGT' Exp . 
    Exp -> Exp . 'EQEQGT' Exp
    Exp -> Exp . 'AMPAMP' Exp
    Exp -> Exp . 'BARBAR' Exp
    Exp -> Exp . 'EQEQ' Exp
    Exp -> Exp . 'NE' Exp
    Exp -> Exp . 'LT' Exp
    Exp -> Exp . 'GT' Exp
    Exp -> Exp . 'LE' Exp
    Exp -> Exp . 'GE' Exp
    Exp -> Exp . 'PLUS' Exp
    Exp -> Exp . 'MINUS' Exp
    Exp -> Exp . 'STAR' Exp
    Exp -> Exp . 'SLASH' Exp
    Exp -> Exp . 'PERCENT' Exp
    Exp -> Exp . 'LBRACKET' Exps 'RBRACKET'
    Exp -> Exp . 'LBRACKET' Exps 'COLONEQ' Exp 'RBRACKET'

  actions:
    action 'EOF' (explicit left 9993):   reduce Exp --> Exp 'LTEQEQGT' Exp
    action 'EAX' (explicit left 9993):   reduce Exp --> Exp 'LTEQEQGT' Exp
    action 'EBX' (explicit left 9993):   reduce Exp --> Exp 'LTEQEQGT' Exp
    action 'ECX' (explicit left 9993):   reduce Exp --> Exp 'LTEQEQGT' Exp
    action 'EDX' (explicit left 9993):   reduce Exp --> Exp 'LTEQEQGT' Exp
    action 'ESI' (explicit left 9993):   reduce Exp --> Exp 'LTEQEQGT' Exp
    action 'EDI' (explicit left 9993):   reduce Exp --> Exp 'LTEQEQGT' Exp
    action 'EBP' (explicit left 9993):   reduce Exp --> Exp 'LTEQEQGT' Exp
    action 'ESP' (explicit left 9993):   reduce Exp --> Exp 'LTEQEQGT' Exp
    action 'MODIFIES' (explicit left 9993):   reduce Exp --> Exp 'LTEQEQGT' Exp
    action 'INVARIANT' (explicit left 9993):   reduce Exp --> Exp 'LTEQEQGT' Exp
    action 'ASSERT' (explicit left 9993):   reduce Exp --> Exp 'LTEQEQGT' Exp
    action 'HAVOC' (explicit left 9993):   reduce Exp --> Exp 'LTEQEQGT' Exp
    action 'GOTO' (explicit left 9993):   reduce Exp --> Exp 'LTEQEQGT' Exp
    action 'CALL' (explicit left 9993):   reduce Exp --> Exp 'LTEQEQGT' Exp
    action 'CCALL' (explicit left 9993):   reduce Exp --> Exp 'LTEQEQGT' Exp
    action 'RET' (explicit left 9993):   reduce Exp --> Exp 'LTEQEQGT' Exp
    action 'IRET' (explicit left 9993):   reduce Exp --> Exp 'LTEQEQGT' Exp
    action 'GO' (explicit left 9993):   reduce Exp --> Exp 'LTEQEQGT' Exp
    action 'FORALL' (explicit left 9993):   reduce Exp --> Exp 'LTEQEQGT' Exp
    action 'EXISTS' (explicit left 9993):   reduce Exp --> Exp 'LTEQEQGT' Exp
    action 'OLD' (explicit left 9993):   reduce Exp --> Exp 'LTEQEQGT' Exp
    action 'COLONCOLON' (explicit left 9993):   reduce Exp --> Exp 'LTEQEQGT' Exp
    action 'EQEQGT' (explicit right 9994):   shift 91
    action 'LTEQEQGT' (explicit left 9993):   reduce Exp --> Exp 'LTEQEQGT' Exp
    action 'TYPE' (explicit left 9993):   reduce Exp --> Exp 'LTEQEQGT' Exp
    action 'CONST' (explicit left 9993):   reduce Exp --> Exp 'LTEQEQGT' Exp
    action 'FUNCTION' (explicit left 9993):   reduce Exp --> Exp 'LTEQEQGT' Exp
    action 'RETURNS' (explicit left 9993):   reduce Exp --> Exp 'LTEQEQGT' Exp
    action 'AXIOM' (explicit left 9993):   reduce Exp --> Exp 'LTEQEQGT' Exp
    action 'PROCEDURE' (explicit left 9993):   reduce Exp --> Exp 'LTEQEQGT' Exp
    action 'IMPLEMENTATION' (explicit left 9993):   reduce Exp --> Exp 'LTEQEQGT' Exp
    action 'REQUIRES' (explicit left 9993):   reduce Exp --> Exp 'LTEQEQGT' Exp
    action 'ENSURES' (explicit left 9993):   reduce Exp --> Exp 'LTEQEQGT' Exp
    action 'LT' (explicit left 9996):   shift 96
    action 'GT' (explicit left 9996):   shift 97
    action 'EQ' (explicit left 9993):   reduce Exp --> Exp 'LTEQEQGT' Exp
    action 'BANG' (explicit left 9993):   reduce Exp --> Exp 'LTEQEQGT' Exp
    action 'COMMA' (explicit left 9993):   reduce Exp --> Exp 'LTEQEQGT' Exp
    action 'LE' (explicit left 9996):   shift 98
    action 'GE' (explicit left 9996):   shift 99
    action 'EQEQ' (explicit left 9996):   shift 94
    action 'NE' (explicit left 9996):   shift 95
    action 'PLUS' (explicit left 9997):   shift 100
    action 'MINUS' (explicit left 9997):   shift 101
    action 'STAR' (explicit left 9998):   shift 102
    action 'SLASH' (explicit left 9998):   shift 103
    action 'PERCENT' (explicit left 9998):   shift 104
    action 'AMPAMP' (explicit left 9995):   shift 92
    action 'BARBAR' (explicit left 9995):   shift 93
    action 'COLONEQ' (explicit left 9993):   reduce Exp --> Exp 'LTEQEQGT' Exp
    action 'INT' (explicit left 9993):   reduce Exp --> Exp 'LTEQEQGT' Exp
    action 'BOOL' (explicit left 9993):   reduce Exp --> Exp 'LTEQEQGT' Exp
    action 'IF' (explicit left 9993):   reduce Exp --> Exp 'LTEQEQGT' Exp
    action 'RETURN' (explicit left 9993):   reduce Exp --> Exp 'LTEQEQGT' Exp
    action 'VAR' (explicit left 9993):   reduce Exp --> Exp 'LTEQEQGT' Exp
    action 'LBRACE' (explicit left 9993):   reduce Exp --> Exp 'LTEQEQGT' Exp
    action 'RBRACE' (explicit left 9993):   reduce Exp --> Exp 'LTEQEQGT' Exp
    action 'SEMI' (explicit left 9993):   reduce Exp --> Exp 'LTEQEQGT' Exp
    action 'COLON' (explicit left 9993):   reduce Exp --> Exp 'LTEQEQGT' Exp
    action 'LPAREN' (explicit left 9993):   reduce Exp --> Exp 'LTEQEQGT' Exp
    action 'RPAREN' (explicit left 9993):   reduce Exp --> Exp 'LTEQEQGT' Exp
    action 'LBRACKET' (explicit left 10000):   shift 118
    action 'RBRACKET' (explicit left 9993):   reduce Exp --> Exp 'LTEQEQGT' Exp
    action 'LITBOOL' (explicit left 9993):   reduce Exp --> Exp 'LTEQEQGT' Exp
    action 'LITINT' (explicit left 9993):   reduce Exp --> Exp 'LTEQEQGT' Exp
    action 'QLID' (explicit left 9993):   reduce Exp --> Exp 'LTEQEQGT' Exp
    action 'QUID' (explicit left 9993):   reduce Exp --> Exp 'LTEQEQGT' Exp
    action 'DLID' (explicit left 9993):   reduce Exp --> Exp 'LTEQEQGT' Exp
    action 'DUID' (explicit left 9993):   reduce Exp --> Exp 'LTEQEQGT' Exp
    action 'LID' (explicit left 9993):   reduce Exp --> Exp 'LTEQEQGT' Exp
    action 'UID' (explicit left 9993):   reduce Exp --> Exp 'LTEQEQGT' Exp
    action 'error' (explicit left 9993):   reduce Exp --> Exp 'LTEQEQGT' Exp
    action '#' (explicit left 9993):   reduce Exp --> Exp 'LTEQEQGT' Exp
    action '$$' (explicit left 9993):   reduce Exp --> Exp 'LTEQEQGT' Exp

  immediate action: <none>
 gotos:

state 58:
  items:
    Exp -> Exp . 'LTEQEQGT' Exp
    Exp -> Exp . 'EQEQGT' Exp
    Exp -> Exp 'EQEQGT' Exp . 
    Exp -> Exp . 'AMPAMP' Exp
    Exp -> Exp . 'BARBAR' Exp
    Exp -> Exp . 'EQEQ' Exp
    Exp -> Exp . 'NE' Exp
    Exp -> Exp . 'LT' Exp
    Exp -> Exp . 'GT' Exp
    Exp -> Exp . 'LE' Exp
    Exp -> Exp . 'GE' Exp
    Exp -> Exp . 'PLUS' Exp
    Exp -> Exp . 'MINUS' Exp
    Exp -> Exp . 'STAR' Exp
    Exp -> Exp . 'SLASH' Exp
    Exp -> Exp . 'PERCENT' Exp
    Exp -> Exp . 'LBRACKET' Exps 'RBRACKET'
    Exp -> Exp . 'LBRACKET' Exps 'COLONEQ' Exp 'RBRACKET'

  actions:
    action 'EOF' (explicit right 9994):   reduce Exp --> Exp 'EQEQGT' Exp
    action 'EAX' (explicit right 9994):   reduce Exp --> Exp 'EQEQGT' Exp
    action 'EBX' (explicit right 9994):   reduce Exp --> Exp 'EQEQGT' Exp
    action 'ECX' (explicit right 9994):   reduce Exp --> Exp 'EQEQGT' Exp
    action 'EDX' (explicit right 9994):   reduce Exp --> Exp 'EQEQGT' Exp
    action 'ESI' (explicit right 9994):   reduce Exp --> Exp 'EQEQGT' Exp
    action 'EDI' (explicit right 9994):   reduce Exp --> Exp 'EQEQGT' Exp
    action 'EBP' (explicit right 9994):   reduce Exp --> Exp 'EQEQGT' Exp
    action 'ESP' (explicit right 9994):   reduce Exp --> Exp 'EQEQGT' Exp
    action 'MODIFIES' (explicit right 9994):   reduce Exp --> Exp 'EQEQGT' Exp
    action 'INVARIANT' (explicit right 9994):   reduce Exp --> Exp 'EQEQGT' Exp
    action 'ASSERT' (explicit right 9994):   reduce Exp --> Exp 'EQEQGT' Exp
    action 'HAVOC' (explicit right 9994):   reduce Exp --> Exp 'EQEQGT' Exp
    action 'GOTO' (explicit right 9994):   reduce Exp --> Exp 'EQEQGT' Exp
    action 'CALL' (explicit right 9994):   reduce Exp --> Exp 'EQEQGT' Exp
    action 'CCALL' (explicit right 9994):   reduce Exp --> Exp 'EQEQGT' Exp
    action 'RET' (explicit right 9994):   reduce Exp --> Exp 'EQEQGT' Exp
    action 'IRET' (explicit right 9994):   reduce Exp --> Exp 'EQEQGT' Exp
    action 'GO' (explicit right 9994):   reduce Exp --> Exp 'EQEQGT' Exp
    action 'FORALL' (explicit right 9994):   reduce Exp --> Exp 'EQEQGT' Exp
    action 'EXISTS' (explicit right 9994):   reduce Exp --> Exp 'EQEQGT' Exp
    action 'OLD' (explicit right 9994):   reduce Exp --> Exp 'EQEQGT' Exp
    action 'COLONCOLON' (explicit right 9994):   reduce Exp --> Exp 'EQEQGT' Exp
    action 'EQEQGT' (explicit right 9994):   shift 91
    action 'LTEQEQGT' (explicit right 9994):   reduce Exp --> Exp 'EQEQGT' Exp
    action 'TYPE' (explicit right 9994):   reduce Exp --> Exp 'EQEQGT' Exp
    action 'CONST' (explicit right 9994):   reduce Exp --> Exp 'EQEQGT' Exp
    action 'FUNCTION' (explicit right 9994):   reduce Exp --> Exp 'EQEQGT' Exp
    action 'RETURNS' (explicit right 9994):   reduce Exp --> Exp 'EQEQGT' Exp
    action 'AXIOM' (explicit right 9994):   reduce Exp --> Exp 'EQEQGT' Exp
    action 'PROCEDURE' (explicit right 9994):   reduce Exp --> Exp 'EQEQGT' Exp
    action 'IMPLEMENTATION' (explicit right 9994):   reduce Exp --> Exp 'EQEQGT' Exp
    action 'REQUIRES' (explicit right 9994):   reduce Exp --> Exp 'EQEQGT' Exp
    action 'ENSURES' (explicit right 9994):   reduce Exp --> Exp 'EQEQGT' Exp
    action 'LT' (explicit left 9996):   shift 96
    action 'GT' (explicit left 9996):   shift 97
    action 'EQ' (explicit right 9994):   reduce Exp --> Exp 'EQEQGT' Exp
    action 'BANG' (explicit right 9994):   reduce Exp --> Exp 'EQEQGT' Exp
    action 'COMMA' (explicit right 9994):   reduce Exp --> Exp 'EQEQGT' Exp
    action 'LE' (explicit left 9996):   shift 98
    action 'GE' (explicit left 9996):   shift 99
    action 'EQEQ' (explicit left 9996):   shift 94
    action 'NE' (explicit left 9996):   shift 95
    action 'PLUS' (explicit left 9997):   shift 100
    action 'MINUS' (explicit left 9997):   shift 101
    action 'STAR' (explicit left 9998):   shift 102
    action 'SLASH' (explicit left 9998):   shift 103
    action 'PERCENT' (explicit left 9998):   shift 104
    action 'AMPAMP' (explicit left 9995):   shift 92
    action 'BARBAR' (explicit left 9995):   shift 93
    action 'COLONEQ' (explicit right 9994):   reduce Exp --> Exp 'EQEQGT' Exp
    action 'INT' (explicit right 9994):   reduce Exp --> Exp 'EQEQGT' Exp
    action 'BOOL' (explicit right 9994):   reduce Exp --> Exp 'EQEQGT' Exp
    action 'IF' (explicit right 9994):   reduce Exp --> Exp 'EQEQGT' Exp
    action 'RETURN' (explicit right 9994):   reduce Exp --> Exp 'EQEQGT' Exp
    action 'VAR' (explicit right 9994):   reduce Exp --> Exp 'EQEQGT' Exp
    action 'LBRACE' (explicit right 9994):   reduce Exp --> Exp 'EQEQGT' Exp
    action 'RBRACE' (explicit right 9994):   reduce Exp --> Exp 'EQEQGT' Exp
    action 'SEMI' (explicit right 9994):   reduce Exp --> Exp 'EQEQGT' Exp
    action 'COLON' (explicit right 9994):   reduce Exp --> Exp 'EQEQGT' Exp
    action 'LPAREN' (explicit right 9994):   reduce Exp --> Exp 'EQEQGT' Exp
    action 'RPAREN' (explicit right 9994):   reduce Exp --> Exp 'EQEQGT' Exp
    action 'LBRACKET' (explicit left 10000):   shift 118
    action 'RBRACKET' (explicit right 9994):   reduce Exp --> Exp 'EQEQGT' Exp
    action 'LITBOOL' (explicit right 9994):   reduce Exp --> Exp 'EQEQGT' Exp
    action 'LITINT' (explicit right 9994):   reduce Exp --> Exp 'EQEQGT' Exp
    action 'QLID' (explicit right 9994):   reduce Exp --> Exp 'EQEQGT' Exp
    action 'QUID' (explicit right 9994):   reduce Exp --> Exp 'EQEQGT' Exp
    action 'DLID' (explicit right 9994):   reduce Exp --> Exp 'EQEQGT' Exp
    action 'DUID' (explicit right 9994):   reduce Exp --> Exp 'EQEQGT' Exp
    action 'LID' (explicit right 9994):   reduce Exp --> Exp 'EQEQGT' Exp
    action 'UID' (explicit right 9994):   reduce Exp --> Exp 'EQEQGT' Exp
    action 'error' (explicit right 9994):   reduce Exp --> Exp 'EQEQGT' Exp
    action '#' (explicit right 9994):   reduce Exp --> Exp 'EQEQGT' Exp
    action '$$' (explicit right 9994):   reduce Exp --> Exp 'EQEQGT' Exp

  immediate action: <none>
 gotos:

state 59:
  items:
    Exp -> Exp . 'LTEQEQGT' Exp
    Exp -> Exp . 'EQEQGT' Exp
    Exp -> Exp . 'AMPAMP' Exp
    Exp -> Exp 'AMPAMP' Exp . 
    Exp -> Exp . 'BARBAR' Exp
    Exp -> Exp . 'EQEQ' Exp
    Exp -> Exp . 'NE' Exp
    Exp -> Exp . 'LT' Exp
    Exp -> Exp . 'GT' Exp
    Exp -> Exp . 'LE' Exp
    Exp -> Exp . 'GE' Exp
    Exp -> Exp . 'PLUS' Exp
    Exp -> Exp . 'MINUS' Exp
    Exp -> Exp . 'STAR' Exp
    Exp -> Exp . 'SLASH' Exp
    Exp -> Exp . 'PERCENT' Exp
    Exp -> Exp . 'LBRACKET' Exps 'RBRACKET'
    Exp -> Exp . 'LBRACKET' Exps 'COLONEQ' Exp 'RBRACKET'

  actions:
    action 'EOF' (explicit left 9995):   reduce Exp --> Exp 'AMPAMP' Exp
    action 'EAX' (explicit left 9995):   reduce Exp --> Exp 'AMPAMP' Exp
    action 'EBX' (explicit left 9995):   reduce Exp --> Exp 'AMPAMP' Exp
    action 'ECX' (explicit left 9995):   reduce Exp --> Exp 'AMPAMP' Exp
    action 'EDX' (explicit left 9995):   reduce Exp --> Exp 'AMPAMP' Exp
    action 'ESI' (explicit left 9995):   reduce Exp --> Exp 'AMPAMP' Exp
    action 'EDI' (explicit left 9995):   reduce Exp --> Exp 'AMPAMP' Exp
    action 'EBP' (explicit left 9995):   reduce Exp --> Exp 'AMPAMP' Exp
    action 'ESP' (explicit left 9995):   reduce Exp --> Exp 'AMPAMP' Exp
    action 'MODIFIES' (explicit left 9995):   reduce Exp --> Exp 'AMPAMP' Exp
    action 'INVARIANT' (explicit left 9995):   reduce Exp --> Exp 'AMPAMP' Exp
    action 'ASSERT' (explicit left 9995):   reduce Exp --> Exp 'AMPAMP' Exp
    action 'HAVOC' (explicit left 9995):   reduce Exp --> Exp 'AMPAMP' Exp
    action 'GOTO' (explicit left 9995):   reduce Exp --> Exp 'AMPAMP' Exp
    action 'CALL' (explicit left 9995):   reduce Exp --> Exp 'AMPAMP' Exp
    action 'CCALL' (explicit left 9995):   reduce Exp --> Exp 'AMPAMP' Exp
    action 'RET' (explicit left 9995):   reduce Exp --> Exp 'AMPAMP' Exp
    action 'IRET' (explicit left 9995):   reduce Exp --> Exp 'AMPAMP' Exp
    action 'GO' (explicit left 9995):   reduce Exp --> Exp 'AMPAMP' Exp
    action 'FORALL' (explicit left 9995):   reduce Exp --> Exp 'AMPAMP' Exp
    action 'EXISTS' (explicit left 9995):   reduce Exp --> Exp 'AMPAMP' Exp
    action 'OLD' (explicit left 9995):   reduce Exp --> Exp 'AMPAMP' Exp
    action 'COLONCOLON' (explicit left 9995):   reduce Exp --> Exp 'AMPAMP' Exp
    action 'EQEQGT' (explicit left 9995):   reduce Exp --> Exp 'AMPAMP' Exp
    action 'LTEQEQGT' (explicit left 9995):   reduce Exp --> Exp 'AMPAMP' Exp
    action 'TYPE' (explicit left 9995):   reduce Exp --> Exp 'AMPAMP' Exp
    action 'CONST' (explicit left 9995):   reduce Exp --> Exp 'AMPAMP' Exp
    action 'FUNCTION' (explicit left 9995):   reduce Exp --> Exp 'AMPAMP' Exp
    action 'RETURNS' (explicit left 9995):   reduce Exp --> Exp 'AMPAMP' Exp
    action 'AXIOM' (explicit left 9995):   reduce Exp --> Exp 'AMPAMP' Exp
    action 'PROCEDURE' (explicit left 9995):   reduce Exp --> Exp 'AMPAMP' Exp
    action 'IMPLEMENTATION' (explicit left 9995):   reduce Exp --> Exp 'AMPAMP' Exp
    action 'REQUIRES' (explicit left 9995):   reduce Exp --> Exp 'AMPAMP' Exp
    action 'ENSURES' (explicit left 9995):   reduce Exp --> Exp 'AMPAMP' Exp
    action 'LT' (explicit left 9996):   shift 96
    action 'GT' (explicit left 9996):   shift 97
    action 'EQ' (explicit left 9995):   reduce Exp --> Exp 'AMPAMP' Exp
    action 'BANG' (explicit left 9995):   reduce Exp --> Exp 'AMPAMP' Exp
    action 'COMMA' (explicit left 9995):   reduce Exp --> Exp 'AMPAMP' Exp
    action 'LE' (explicit left 9996):   shift 98
    action 'GE' (explicit left 9996):   shift 99
    action 'EQEQ' (explicit left 9996):   shift 94
    action 'NE' (explicit left 9996):   shift 95
    action 'PLUS' (explicit left 9997):   shift 100
    action 'MINUS' (explicit left 9997):   shift 101
    action 'STAR' (explicit left 9998):   shift 102
    action 'SLASH' (explicit left 9998):   shift 103
    action 'PERCENT' (explicit left 9998):   shift 104
    action 'AMPAMP' (explicit left 9995):   reduce Exp --> Exp 'AMPAMP' Exp
    action 'BARBAR' (explicit left 9995):   reduce Exp --> Exp 'AMPAMP' Exp
    action 'COLONEQ' (explicit left 9995):   reduce Exp --> Exp 'AMPAMP' Exp
    action 'INT' (explicit left 9995):   reduce Exp --> Exp 'AMPAMP' Exp
    action 'BOOL' (explicit left 9995):   reduce Exp --> Exp 'AMPAMP' Exp
    action 'IF' (explicit left 9995):   reduce Exp --> Exp 'AMPAMP' Exp
    action 'RETURN' (explicit left 9995):   reduce Exp --> Exp 'AMPAMP' Exp
    action 'VAR' (explicit left 9995):   reduce Exp --> Exp 'AMPAMP' Exp
    action 'LBRACE' (explicit left 9995):   reduce Exp --> Exp 'AMPAMP' Exp
    action 'RBRACE' (explicit left 9995):   reduce Exp --> Exp 'AMPAMP' Exp
    action 'SEMI' (explicit left 9995):   reduce Exp --> Exp 'AMPAMP' Exp
    action 'COLON' (explicit left 9995):   reduce Exp --> Exp 'AMPAMP' Exp
    action 'LPAREN' (explicit left 9995):   reduce Exp --> Exp 'AMPAMP' Exp
    action 'RPAREN' (explicit left 9995):   reduce Exp --> Exp 'AMPAMP' Exp
    action 'LBRACKET' (explicit left 10000):   shift 118
    action 'RBRACKET' (explicit left 9995):   reduce Exp --> Exp 'AMPAMP' Exp
    action 'LITBOOL' (explicit left 9995):   reduce Exp --> Exp 'AMPAMP' Exp
    action 'LITINT' (explicit left 9995):   reduce Exp --> Exp 'AMPAMP' Exp
    action 'QLID' (explicit left 9995):   reduce Exp --> Exp 'AMPAMP' Exp
    action 'QUID' (explicit left 9995):   reduce Exp --> Exp 'AMPAMP' Exp
    action 'DLID' (explicit left 9995):   reduce Exp --> Exp 'AMPAMP' Exp
    action 'DUID' (explicit left 9995):   reduce Exp --> Exp 'AMPAMP' Exp
    action 'LID' (explicit left 9995):   reduce Exp --> Exp 'AMPAMP' Exp
    action 'UID' (explicit left 9995):   reduce Exp --> Exp 'AMPAMP' Exp
    action 'error' (explicit left 9995):   reduce Exp --> Exp 'AMPAMP' Exp
    action '#' (explicit left 9995):   reduce Exp --> Exp 'AMPAMP' Exp
    action '$$' (explicit left 9995):   reduce Exp --> Exp 'AMPAMP' Exp

  immediate action: <none>
 gotos:

state 60:
  items:
    Exp -> Exp . 'LTEQEQGT' Exp
    Exp -> Exp . 'EQEQGT' Exp
    Exp -> Exp . 'AMPAMP' Exp
    Exp -> Exp . 'BARBAR' Exp
    Exp -> Exp 'BARBAR' Exp . 
    Exp -> Exp . 'EQEQ' Exp
    Exp -> Exp . 'NE' Exp
    Exp -> Exp . 'LT' Exp
    Exp -> Exp . 'GT' Exp
    Exp -> Exp . 'LE' Exp
    Exp -> Exp . 'GE' Exp
    Exp -> Exp . 'PLUS' Exp
    Exp -> Exp . 'MINUS' Exp
    Exp -> Exp . 'STAR' Exp
    Exp -> Exp . 'SLASH' Exp
    Exp -> Exp . 'PERCENT' Exp
    Exp -> Exp . 'LBRACKET' Exps 'RBRACKET'
    Exp -> Exp . 'LBRACKET' Exps 'COLONEQ' Exp 'RBRACKET'

  actions:
    action 'EOF' (explicit left 9995):   reduce Exp --> Exp 'BARBAR' Exp
    action 'EAX' (explicit left 9995):   reduce Exp --> Exp 'BARBAR' Exp
    action 'EBX' (explicit left 9995):   reduce Exp --> Exp 'BARBAR' Exp
    action 'ECX' (explicit left 9995):   reduce Exp --> Exp 'BARBAR' Exp
    action 'EDX' (explicit left 9995):   reduce Exp --> Exp 'BARBAR' Exp
    action 'ESI' (explicit left 9995):   reduce Exp --> Exp 'BARBAR' Exp
    action 'EDI' (explicit left 9995):   reduce Exp --> Exp 'BARBAR' Exp
    action 'EBP' (explicit left 9995):   reduce Exp --> Exp 'BARBAR' Exp
    action 'ESP' (explicit left 9995):   reduce Exp --> Exp 'BARBAR' Exp
    action 'MODIFIES' (explicit left 9995):   reduce Exp --> Exp 'BARBAR' Exp
    action 'INVARIANT' (explicit left 9995):   reduce Exp --> Exp 'BARBAR' Exp
    action 'ASSERT' (explicit left 9995):   reduce Exp --> Exp 'BARBAR' Exp
    action 'HAVOC' (explicit left 9995):   reduce Exp --> Exp 'BARBAR' Exp
    action 'GOTO' (explicit left 9995):   reduce Exp --> Exp 'BARBAR' Exp
    action 'CALL' (explicit left 9995):   reduce Exp --> Exp 'BARBAR' Exp
    action 'CCALL' (explicit left 9995):   reduce Exp --> Exp 'BARBAR' Exp
    action 'RET' (explicit left 9995):   reduce Exp --> Exp 'BARBAR' Exp
    action 'IRET' (explicit left 9995):   reduce Exp --> Exp 'BARBAR' Exp
    action 'GO' (explicit left 9995):   reduce Exp --> Exp 'BARBAR' Exp
    action 'FORALL' (explicit left 9995):   reduce Exp --> Exp 'BARBAR' Exp
    action 'EXISTS' (explicit left 9995):   reduce Exp --> Exp 'BARBAR' Exp
    action 'OLD' (explicit left 9995):   reduce Exp --> Exp 'BARBAR' Exp
    action 'COLONCOLON' (explicit left 9995):   reduce Exp --> Exp 'BARBAR' Exp
    action 'EQEQGT' (explicit left 9995):   reduce Exp --> Exp 'BARBAR' Exp
    action 'LTEQEQGT' (explicit left 9995):   reduce Exp --> Exp 'BARBAR' Exp
    action 'TYPE' (explicit left 9995):   reduce Exp --> Exp 'BARBAR' Exp
    action 'CONST' (explicit left 9995):   reduce Exp --> Exp 'BARBAR' Exp
    action 'FUNCTION' (explicit left 9995):   reduce Exp --> Exp 'BARBAR' Exp
    action 'RETURNS' (explicit left 9995):   reduce Exp --> Exp 'BARBAR' Exp
    action 'AXIOM' (explicit left 9995):   reduce Exp --> Exp 'BARBAR' Exp
    action 'PROCEDURE' (explicit left 9995):   reduce Exp --> Exp 'BARBAR' Exp
    action 'IMPLEMENTATION' (explicit left 9995):   reduce Exp --> Exp 'BARBAR' Exp
    action 'REQUIRES' (explicit left 9995):   reduce Exp --> Exp 'BARBAR' Exp
    action 'ENSURES' (explicit left 9995):   reduce Exp --> Exp 'BARBAR' Exp
    action 'LT' (explicit left 9996):   shift 96
    action 'GT' (explicit left 9996):   shift 97
    action 'EQ' (explicit left 9995):   reduce Exp --> Exp 'BARBAR' Exp
    action 'BANG' (explicit left 9995):   reduce Exp --> Exp 'BARBAR' Exp
    action 'COMMA' (explicit left 9995):   reduce Exp --> Exp 'BARBAR' Exp
    action 'LE' (explicit left 9996):   shift 98
    action 'GE' (explicit left 9996):   shift 99
    action 'EQEQ' (explicit left 9996):   shift 94
    action 'NE' (explicit left 9996):   shift 95
    action 'PLUS' (explicit left 9997):   shift 100
    action 'MINUS' (explicit left 9997):   shift 101
    action 'STAR' (explicit left 9998):   shift 102
    action 'SLASH' (explicit left 9998):   shift 103
    action 'PERCENT' (explicit left 9998):   shift 104
    action 'AMPAMP' (explicit left 9995):   reduce Exp --> Exp 'BARBAR' Exp
    action 'BARBAR' (explicit left 9995):   reduce Exp --> Exp 'BARBAR' Exp
    action 'COLONEQ' (explicit left 9995):   reduce Exp --> Exp 'BARBAR' Exp
    action 'INT' (explicit left 9995):   reduce Exp --> Exp 'BARBAR' Exp
    action 'BOOL' (explicit left 9995):   reduce Exp --> Exp 'BARBAR' Exp
    action 'IF' (explicit left 9995):   reduce Exp --> Exp 'BARBAR' Exp
    action 'RETURN' (explicit left 9995):   reduce Exp --> Exp 'BARBAR' Exp
    action 'VAR' (explicit left 9995):   reduce Exp --> Exp 'BARBAR' Exp
    action 'LBRACE' (explicit left 9995):   reduce Exp --> Exp 'BARBAR' Exp
    action 'RBRACE' (explicit left 9995):   reduce Exp --> Exp 'BARBAR' Exp
    action 'SEMI' (explicit left 9995):   reduce Exp --> Exp 'BARBAR' Exp
    action 'COLON' (explicit left 9995):   reduce Exp --> Exp 'BARBAR' Exp
    action 'LPAREN' (explicit left 9995):   reduce Exp --> Exp 'BARBAR' Exp
    action 'RPAREN' (explicit left 9995):   reduce Exp --> Exp 'BARBAR' Exp
    action 'LBRACKET' (explicit left 10000):   shift 118
    action 'RBRACKET' (explicit left 9995):   reduce Exp --> Exp 'BARBAR' Exp
    action 'LITBOOL' (explicit left 9995):   reduce Exp --> Exp 'BARBAR' Exp
    action 'LITINT' (explicit left 9995):   reduce Exp --> Exp 'BARBAR' Exp
    action 'QLID' (explicit left 9995):   reduce Exp --> Exp 'BARBAR' Exp
    action 'QUID' (explicit left 9995):   reduce Exp --> Exp 'BARBAR' Exp
    action 'DLID' (explicit left 9995):   reduce Exp --> Exp 'BARBAR' Exp
    action 'DUID' (explicit left 9995):   reduce Exp --> Exp 'BARBAR' Exp
    action 'LID' (explicit left 9995):   reduce Exp --> Exp 'BARBAR' Exp
    action 'UID' (explicit left 9995):   reduce Exp --> Exp 'BARBAR' Exp
    action 'error' (explicit left 9995):   reduce Exp --> Exp 'BARBAR' Exp
    action '#' (explicit left 9995):   reduce Exp --> Exp 'BARBAR' Exp
    action '$$' (explicit left 9995):   reduce Exp --> Exp 'BARBAR' Exp

  immediate action: <none>
 gotos:

state 61:
  items:
    Exp -> Exp . 'LTEQEQGT' Exp
    Exp -> Exp . 'EQEQGT' Exp
    Exp -> Exp . 'AMPAMP' Exp
    Exp -> Exp . 'BARBAR' Exp
    Exp -> Exp . 'EQEQ' Exp
    Exp -> Exp 'EQEQ' Exp . 
    Exp -> Exp . 'NE' Exp
    Exp -> Exp . 'LT' Exp
    Exp -> Exp . 'GT' Exp
    Exp -> Exp . 'LE' Exp
    Exp -> Exp . 'GE' Exp
    Exp -> Exp . 'PLUS' Exp
    Exp -> Exp . 'MINUS' Exp
    Exp -> Exp . 'STAR' Exp
    Exp -> Exp . 'SLASH' Exp
    Exp -> Exp . 'PERCENT' Exp
    Exp -> Exp . 'LBRACKET' Exps 'RBRACKET'
    Exp -> Exp . 'LBRACKET' Exps 'COLONEQ' Exp 'RBRACKET'

  actions:
    action 'EOF' (explicit left 9996):   reduce Exp --> Exp 'EQEQ' Exp
    action 'EAX' (explicit left 9996):   reduce Exp --> Exp 'EQEQ' Exp
    action 'EBX' (explicit left 9996):   reduce Exp --> Exp 'EQEQ' Exp
    action 'ECX' (explicit left 9996):   reduce Exp --> Exp 'EQEQ' Exp
    action 'EDX' (explicit left 9996):   reduce Exp --> Exp 'EQEQ' Exp
    action 'ESI' (explicit left 9996):   reduce Exp --> Exp 'EQEQ' Exp
    action 'EDI' (explicit left 9996):   reduce Exp --> Exp 'EQEQ' Exp
    action 'EBP' (explicit left 9996):   reduce Exp --> Exp 'EQEQ' Exp
    action 'ESP' (explicit left 9996):   reduce Exp --> Exp 'EQEQ' Exp
    action 'MODIFIES' (explicit left 9996):   reduce Exp --> Exp 'EQEQ' Exp
    action 'INVARIANT' (explicit left 9996):   reduce Exp --> Exp 'EQEQ' Exp
    action 'ASSERT' (explicit left 9996):   reduce Exp --> Exp 'EQEQ' Exp
    action 'HAVOC' (explicit left 9996):   reduce Exp --> Exp 'EQEQ' Exp
    action 'GOTO' (explicit left 9996):   reduce Exp --> Exp 'EQEQ' Exp
    action 'CALL' (explicit left 9996):   reduce Exp --> Exp 'EQEQ' Exp
    action 'CCALL' (explicit left 9996):   reduce Exp --> Exp 'EQEQ' Exp
    action 'RET' (explicit left 9996):   reduce Exp --> Exp 'EQEQ' Exp
    action 'IRET' (explicit left 9996):   reduce Exp --> Exp 'EQEQ' Exp
    action 'GO' (explicit left 9996):   reduce Exp --> Exp 'EQEQ' Exp
    action 'FORALL' (explicit left 9996):   reduce Exp --> Exp 'EQEQ' Exp
    action 'EXISTS' (explicit left 9996):   reduce Exp --> Exp 'EQEQ' Exp
    action 'OLD' (explicit left 9996):   reduce Exp --> Exp 'EQEQ' Exp
    action 'COLONCOLON' (explicit left 9996):   reduce Exp --> Exp 'EQEQ' Exp
    action 'EQEQGT' (explicit left 9996):   reduce Exp --> Exp 'EQEQ' Exp
    action 'LTEQEQGT' (explicit left 9996):   reduce Exp --> Exp 'EQEQ' Exp
    action 'TYPE' (explicit left 9996):   reduce Exp --> Exp 'EQEQ' Exp
    action 'CONST' (explicit left 9996):   reduce Exp --> Exp 'EQEQ' Exp
    action 'FUNCTION' (explicit left 9996):   reduce Exp --> Exp 'EQEQ' Exp
    action 'RETURNS' (explicit left 9996):   reduce Exp --> Exp 'EQEQ' Exp
    action 'AXIOM' (explicit left 9996):   reduce Exp --> Exp 'EQEQ' Exp
    action 'PROCEDURE' (explicit left 9996):   reduce Exp --> Exp 'EQEQ' Exp
    action 'IMPLEMENTATION' (explicit left 9996):   reduce Exp --> Exp 'EQEQ' Exp
    action 'REQUIRES' (explicit left 9996):   reduce Exp --> Exp 'EQEQ' Exp
    action 'ENSURES' (explicit left 9996):   reduce Exp --> Exp 'EQEQ' Exp
    action 'LT' (explicit left 9996):   reduce Exp --> Exp 'EQEQ' Exp
    action 'GT' (explicit left 9996):   reduce Exp --> Exp 'EQEQ' Exp
    action 'EQ' (explicit left 9996):   reduce Exp --> Exp 'EQEQ' Exp
    action 'BANG' (explicit left 9996):   reduce Exp --> Exp 'EQEQ' Exp
    action 'COMMA' (explicit left 9996):   reduce Exp --> Exp 'EQEQ' Exp
    action 'LE' (explicit left 9996):   reduce Exp --> Exp 'EQEQ' Exp
    action 'GE' (explicit left 9996):   reduce Exp --> Exp 'EQEQ' Exp
    action 'EQEQ' (explicit left 9996):   reduce Exp --> Exp 'EQEQ' Exp
    action 'NE' (explicit left 9996):   reduce Exp --> Exp 'EQEQ' Exp
    action 'PLUS' (explicit left 9997):   shift 100
    action 'MINUS' (explicit left 9997):   shift 101
    action 'STAR' (explicit left 9998):   shift 102
    action 'SLASH' (explicit left 9998):   shift 103
    action 'PERCENT' (explicit left 9998):   shift 104
    action 'AMPAMP' (explicit left 9996):   reduce Exp --> Exp 'EQEQ' Exp
    action 'BARBAR' (explicit left 9996):   reduce Exp --> Exp 'EQEQ' Exp
    action 'COLONEQ' (explicit left 9996):   reduce Exp --> Exp 'EQEQ' Exp
    action 'INT' (explicit left 9996):   reduce Exp --> Exp 'EQEQ' Exp
    action 'BOOL' (explicit left 9996):   reduce Exp --> Exp 'EQEQ' Exp
    action 'IF' (explicit left 9996):   reduce Exp --> Exp 'EQEQ' Exp
    action 'RETURN' (explicit left 9996):   reduce Exp --> Exp 'EQEQ' Exp
    action 'VAR' (explicit left 9996):   reduce Exp --> Exp 'EQEQ' Exp
    action 'LBRACE' (explicit left 9996):   reduce Exp --> Exp 'EQEQ' Exp
    action 'RBRACE' (explicit left 9996):   reduce Exp --> Exp 'EQEQ' Exp
    action 'SEMI' (explicit left 9996):   reduce Exp --> Exp 'EQEQ' Exp
    action 'COLON' (explicit left 9996):   reduce Exp --> Exp 'EQEQ' Exp
    action 'LPAREN' (explicit left 9996):   reduce Exp --> Exp 'EQEQ' Exp
    action 'RPAREN' (explicit left 9996):   reduce Exp --> Exp 'EQEQ' Exp
    action 'LBRACKET' (explicit left 10000):   shift 118
    action 'RBRACKET' (explicit left 9996):   reduce Exp --> Exp 'EQEQ' Exp
    action 'LITBOOL' (explicit left 9996):   reduce Exp --> Exp 'EQEQ' Exp
    action 'LITINT' (explicit left 9996):   reduce Exp --> Exp 'EQEQ' Exp
    action 'QLID' (explicit left 9996):   reduce Exp --> Exp 'EQEQ' Exp
    action 'QUID' (explicit left 9996):   reduce Exp --> Exp 'EQEQ' Exp
    action 'DLID' (explicit left 9996):   reduce Exp --> Exp 'EQEQ' Exp
    action 'DUID' (explicit left 9996):   reduce Exp --> Exp 'EQEQ' Exp
    action 'LID' (explicit left 9996):   reduce Exp --> Exp 'EQEQ' Exp
    action 'UID' (explicit left 9996):   reduce Exp --> Exp 'EQEQ' Exp
    action 'error' (explicit left 9996):   reduce Exp --> Exp 'EQEQ' Exp
    action '#' (explicit left 9996):   reduce Exp --> Exp 'EQEQ' Exp
    action '$$' (explicit left 9996):   reduce Exp --> Exp 'EQEQ' Exp

  immediate action: <none>
 gotos:

state 62:
  items:
    Exp -> Exp . 'LTEQEQGT' Exp
    Exp -> Exp . 'EQEQGT' Exp
    Exp -> Exp . 'AMPAMP' Exp
    Exp -> Exp . 'BARBAR' Exp
    Exp -> Exp . 'EQEQ' Exp
    Exp -> Exp . 'NE' Exp
    Exp -> Exp 'NE' Exp . 
    Exp -> Exp . 'LT' Exp
    Exp -> Exp . 'GT' Exp
    Exp -> Exp . 'LE' Exp
    Exp -> Exp . 'GE' Exp
    Exp -> Exp . 'PLUS' Exp
    Exp -> Exp . 'MINUS' Exp
    Exp -> Exp . 'STAR' Exp
    Exp -> Exp . 'SLASH' Exp
    Exp -> Exp . 'PERCENT' Exp
    Exp -> Exp . 'LBRACKET' Exps 'RBRACKET'
    Exp -> Exp . 'LBRACKET' Exps 'COLONEQ' Exp 'RBRACKET'

  actions:
    action 'EOF' (explicit left 9996):   reduce Exp --> Exp 'NE' Exp
    action 'EAX' (explicit left 9996):   reduce Exp --> Exp 'NE' Exp
    action 'EBX' (explicit left 9996):   reduce Exp --> Exp 'NE' Exp
    action 'ECX' (explicit left 9996):   reduce Exp --> Exp 'NE' Exp
    action 'EDX' (explicit left 9996):   reduce Exp --> Exp 'NE' Exp
    action 'ESI' (explicit left 9996):   reduce Exp --> Exp 'NE' Exp
    action 'EDI' (explicit left 9996):   reduce Exp --> Exp 'NE' Exp
    action 'EBP' (explicit left 9996):   reduce Exp --> Exp 'NE' Exp
    action 'ESP' (explicit left 9996):   reduce Exp --> Exp 'NE' Exp
    action 'MODIFIES' (explicit left 9996):   reduce Exp --> Exp 'NE' Exp
    action 'INVARIANT' (explicit left 9996):   reduce Exp --> Exp 'NE' Exp
    action 'ASSERT' (explicit left 9996):   reduce Exp --> Exp 'NE' Exp
    action 'HAVOC' (explicit left 9996):   reduce Exp --> Exp 'NE' Exp
    action 'GOTO' (explicit left 9996):   reduce Exp --> Exp 'NE' Exp
    action 'CALL' (explicit left 9996):   reduce Exp --> Exp 'NE' Exp
    action 'CCALL' (explicit left 9996):   reduce Exp --> Exp 'NE' Exp
    action 'RET' (explicit left 9996):   reduce Exp --> Exp 'NE' Exp
    action 'IRET' (explicit left 9996):   reduce Exp --> Exp 'NE' Exp
    action 'GO' (explicit left 9996):   reduce Exp --> Exp 'NE' Exp
    action 'FORALL' (explicit left 9996):   reduce Exp --> Exp 'NE' Exp
    action 'EXISTS' (explicit left 9996):   reduce Exp --> Exp 'NE' Exp
    action 'OLD' (explicit left 9996):   reduce Exp --> Exp 'NE' Exp
    action 'COLONCOLON' (explicit left 9996):   reduce Exp --> Exp 'NE' Exp
    action 'EQEQGT' (explicit left 9996):   reduce Exp --> Exp 'NE' Exp
    action 'LTEQEQGT' (explicit left 9996):   reduce Exp --> Exp 'NE' Exp
    action 'TYPE' (explicit left 9996):   reduce Exp --> Exp 'NE' Exp
    action 'CONST' (explicit left 9996):   reduce Exp --> Exp 'NE' Exp
    action 'FUNCTION' (explicit left 9996):   reduce Exp --> Exp 'NE' Exp
    action 'RETURNS' (explicit left 9996):   reduce Exp --> Exp 'NE' Exp
    action 'AXIOM' (explicit left 9996):   reduce Exp --> Exp 'NE' Exp
    action 'PROCEDURE' (explicit left 9996):   reduce Exp --> Exp 'NE' Exp
    action 'IMPLEMENTATION' (explicit left 9996):   reduce Exp --> Exp 'NE' Exp
    action 'REQUIRES' (explicit left 9996):   reduce Exp --> Exp 'NE' Exp
    action 'ENSURES' (explicit left 9996):   reduce Exp --> Exp 'NE' Exp
    action 'LT' (explicit left 9996):   reduce Exp --> Exp 'NE' Exp
    action 'GT' (explicit left 9996):   reduce Exp --> Exp 'NE' Exp
    action 'EQ' (explicit left 9996):   reduce Exp --> Exp 'NE' Exp
    action 'BANG' (explicit left 9996):   reduce Exp --> Exp 'NE' Exp
    action 'COMMA' (explicit left 9996):   reduce Exp --> Exp 'NE' Exp
    action 'LE' (explicit left 9996):   reduce Exp --> Exp 'NE' Exp
    action 'GE' (explicit left 9996):   reduce Exp --> Exp 'NE' Exp
    action 'EQEQ' (explicit left 9996):   reduce Exp --> Exp 'NE' Exp
    action 'NE' (explicit left 9996):   reduce Exp --> Exp 'NE' Exp
    action 'PLUS' (explicit left 9997):   shift 100
    action 'MINUS' (explicit left 9997):   shift 101
    action 'STAR' (explicit left 9998):   shift 102
    action 'SLASH' (explicit left 9998):   shift 103
    action 'PERCENT' (explicit left 9998):   shift 104
    action 'AMPAMP' (explicit left 9996):   reduce Exp --> Exp 'NE' Exp
    action 'BARBAR' (explicit left 9996):   reduce Exp --> Exp 'NE' Exp
    action 'COLONEQ' (explicit left 9996):   reduce Exp --> Exp 'NE' Exp
    action 'INT' (explicit left 9996):   reduce Exp --> Exp 'NE' Exp
    action 'BOOL' (explicit left 9996):   reduce Exp --> Exp 'NE' Exp
    action 'IF' (explicit left 9996):   reduce Exp --> Exp 'NE' Exp
    action 'RETURN' (explicit left 9996):   reduce Exp --> Exp 'NE' Exp
    action 'VAR' (explicit left 9996):   reduce Exp --> Exp 'NE' Exp
    action 'LBRACE' (explicit left 9996):   reduce Exp --> Exp 'NE' Exp
    action 'RBRACE' (explicit left 9996):   reduce Exp --> Exp 'NE' Exp
    action 'SEMI' (explicit left 9996):   reduce Exp --> Exp 'NE' Exp
    action 'COLON' (explicit left 9996):   reduce Exp --> Exp 'NE' Exp
    action 'LPAREN' (explicit left 9996):   reduce Exp --> Exp 'NE' Exp
    action 'RPAREN' (explicit left 9996):   reduce Exp --> Exp 'NE' Exp
    action 'LBRACKET' (explicit left 10000):   shift 118
    action 'RBRACKET' (explicit left 9996):   reduce Exp --> Exp 'NE' Exp
    action 'LITBOOL' (explicit left 9996):   reduce Exp --> Exp 'NE' Exp
    action 'LITINT' (explicit left 9996):   reduce Exp --> Exp 'NE' Exp
    action 'QLID' (explicit left 9996):   reduce Exp --> Exp 'NE' Exp
    action 'QUID' (explicit left 9996):   reduce Exp --> Exp 'NE' Exp
    action 'DLID' (explicit left 9996):   reduce Exp --> Exp 'NE' Exp
    action 'DUID' (explicit left 9996):   reduce Exp --> Exp 'NE' Exp
    action 'LID' (explicit left 9996):   reduce Exp --> Exp 'NE' Exp
    action 'UID' (explicit left 9996):   reduce Exp --> Exp 'NE' Exp
    action 'error' (explicit left 9996):   reduce Exp --> Exp 'NE' Exp
    action '#' (explicit left 9996):   reduce Exp --> Exp 'NE' Exp
    action '$$' (explicit left 9996):   reduce Exp --> Exp 'NE' Exp

  immediate action: <none>
 gotos:

state 63:
  items:
    Exp -> Exp . 'LTEQEQGT' Exp
    Exp -> Exp . 'EQEQGT' Exp
    Exp -> Exp . 'AMPAMP' Exp
    Exp -> Exp . 'BARBAR' Exp
    Exp -> Exp . 'EQEQ' Exp
    Exp -> Exp . 'NE' Exp
    Exp -> Exp . 'LT' Exp
    Exp -> Exp 'LT' Exp . 
    Exp -> Exp . 'GT' Exp
    Exp -> Exp . 'LE' Exp
    Exp -> Exp . 'GE' Exp
    Exp -> Exp . 'PLUS' Exp
    Exp -> Exp . 'MINUS' Exp
    Exp -> Exp . 'STAR' Exp
    Exp -> Exp . 'SLASH' Exp
    Exp -> Exp . 'PERCENT' Exp
    Exp -> Exp . 'LBRACKET' Exps 'RBRACKET'
    Exp -> Exp . 'LBRACKET' Exps 'COLONEQ' Exp 'RBRACKET'

  actions:
    action 'EOF' (explicit left 9996):   reduce Exp --> Exp 'LT' Exp
    action 'EAX' (explicit left 9996):   reduce Exp --> Exp 'LT' Exp
    action 'EBX' (explicit left 9996):   reduce Exp --> Exp 'LT' Exp
    action 'ECX' (explicit left 9996):   reduce Exp --> Exp 'LT' Exp
    action 'EDX' (explicit left 9996):   reduce Exp --> Exp 'LT' Exp
    action 'ESI' (explicit left 9996):   reduce Exp --> Exp 'LT' Exp
    action 'EDI' (explicit left 9996):   reduce Exp --> Exp 'LT' Exp
    action 'EBP' (explicit left 9996):   reduce Exp --> Exp 'LT' Exp
    action 'ESP' (explicit left 9996):   reduce Exp --> Exp 'LT' Exp
    action 'MODIFIES' (explicit left 9996):   reduce Exp --> Exp 'LT' Exp
    action 'INVARIANT' (explicit left 9996):   reduce Exp --> Exp 'LT' Exp
    action 'ASSERT' (explicit left 9996):   reduce Exp --> Exp 'LT' Exp
    action 'HAVOC' (explicit left 9996):   reduce Exp --> Exp 'LT' Exp
    action 'GOTO' (explicit left 9996):   reduce Exp --> Exp 'LT' Exp
    action 'CALL' (explicit left 9996):   reduce Exp --> Exp 'LT' Exp
    action 'CCALL' (explicit left 9996):   reduce Exp --> Exp 'LT' Exp
    action 'RET' (explicit left 9996):   reduce Exp --> Exp 'LT' Exp
    action 'IRET' (explicit left 9996):   reduce Exp --> Exp 'LT' Exp
    action 'GO' (explicit left 9996):   reduce Exp --> Exp 'LT' Exp
    action 'FORALL' (explicit left 9996):   reduce Exp --> Exp 'LT' Exp
    action 'EXISTS' (explicit left 9996):   reduce Exp --> Exp 'LT' Exp
    action 'OLD' (explicit left 9996):   reduce Exp --> Exp 'LT' Exp
    action 'COLONCOLON' (explicit left 9996):   reduce Exp --> Exp 'LT' Exp
    action 'EQEQGT' (explicit left 9996):   reduce Exp --> Exp 'LT' Exp
    action 'LTEQEQGT' (explicit left 9996):   reduce Exp --> Exp 'LT' Exp
    action 'TYPE' (explicit left 9996):   reduce Exp --> Exp 'LT' Exp
    action 'CONST' (explicit left 9996):   reduce Exp --> Exp 'LT' Exp
    action 'FUNCTION' (explicit left 9996):   reduce Exp --> Exp 'LT' Exp
    action 'RETURNS' (explicit left 9996):   reduce Exp --> Exp 'LT' Exp
    action 'AXIOM' (explicit left 9996):   reduce Exp --> Exp 'LT' Exp
    action 'PROCEDURE' (explicit left 9996):   reduce Exp --> Exp 'LT' Exp
    action 'IMPLEMENTATION' (explicit left 9996):   reduce Exp --> Exp 'LT' Exp
    action 'REQUIRES' (explicit left 9996):   reduce Exp --> Exp 'LT' Exp
    action 'ENSURES' (explicit left 9996):   reduce Exp --> Exp 'LT' Exp
    action 'LT' (explicit left 9996):   reduce Exp --> Exp 'LT' Exp
    action 'GT' (explicit left 9996):   reduce Exp --> Exp 'LT' Exp
    action 'EQ' (explicit left 9996):   reduce Exp --> Exp 'LT' Exp
    action 'BANG' (explicit left 9996):   reduce Exp --> Exp 'LT' Exp
    action 'COMMA' (explicit left 9996):   reduce Exp --> Exp 'LT' Exp
    action 'LE' (explicit left 9996):   reduce Exp --> Exp 'LT' Exp
    action 'GE' (explicit left 9996):   reduce Exp --> Exp 'LT' Exp
    action 'EQEQ' (explicit left 9996):   reduce Exp --> Exp 'LT' Exp
    action 'NE' (explicit left 9996):   reduce Exp --> Exp 'LT' Exp
    action 'PLUS' (explicit left 9997):   shift 100
    action 'MINUS' (explicit left 9997):   shift 101
    action 'STAR' (explicit left 9998):   shift 102
    action 'SLASH' (explicit left 9998):   shift 103
    action 'PERCENT' (explicit left 9998):   shift 104
    action 'AMPAMP' (explicit left 9996):   reduce Exp --> Exp 'LT' Exp
    action 'BARBAR' (explicit left 9996):   reduce Exp --> Exp 'LT' Exp
    action 'COLONEQ' (explicit left 9996):   reduce Exp --> Exp 'LT' Exp
    action 'INT' (explicit left 9996):   reduce Exp --> Exp 'LT' Exp
    action 'BOOL' (explicit left 9996):   reduce Exp --> Exp 'LT' Exp
    action 'IF' (explicit left 9996):   reduce Exp --> Exp 'LT' Exp
    action 'RETURN' (explicit left 9996):   reduce Exp --> Exp 'LT' Exp
    action 'VAR' (explicit left 9996):   reduce Exp --> Exp 'LT' Exp
    action 'LBRACE' (explicit left 9996):   reduce Exp --> Exp 'LT' Exp
    action 'RBRACE' (explicit left 9996):   reduce Exp --> Exp 'LT' Exp
    action 'SEMI' (explicit left 9996):   reduce Exp --> Exp 'LT' Exp
    action 'COLON' (explicit left 9996):   reduce Exp --> Exp 'LT' Exp
    action 'LPAREN' (explicit left 9996):   reduce Exp --> Exp 'LT' Exp
    action 'RPAREN' (explicit left 9996):   reduce Exp --> Exp 'LT' Exp
    action 'LBRACKET' (explicit left 10000):   shift 118
    action 'RBRACKET' (explicit left 9996):   reduce Exp --> Exp 'LT' Exp
    action 'LITBOOL' (explicit left 9996):   reduce Exp --> Exp 'LT' Exp
    action 'LITINT' (explicit left 9996):   reduce Exp --> Exp 'LT' Exp
    action 'QLID' (explicit left 9996):   reduce Exp --> Exp 'LT' Exp
    action 'QUID' (explicit left 9996):   reduce Exp --> Exp 'LT' Exp
    action 'DLID' (explicit left 9996):   reduce Exp --> Exp 'LT' Exp
    action 'DUID' (explicit left 9996):   reduce Exp --> Exp 'LT' Exp
    action 'LID' (explicit left 9996):   reduce Exp --> Exp 'LT' Exp
    action 'UID' (explicit left 9996):   reduce Exp --> Exp 'LT' Exp
    action 'error' (explicit left 9996):   reduce Exp --> Exp 'LT' Exp
    action '#' (explicit left 9996):   reduce Exp --> Exp 'LT' Exp
    action '$$' (explicit left 9996):   reduce Exp --> Exp 'LT' Exp

  immediate action: <none>
 gotos:

state 64:
  items:
    Exp -> Exp . 'LTEQEQGT' Exp
    Exp -> Exp . 'EQEQGT' Exp
    Exp -> Exp . 'AMPAMP' Exp
    Exp -> Exp . 'BARBAR' Exp
    Exp -> Exp . 'EQEQ' Exp
    Exp -> Exp . 'NE' Exp
    Exp -> Exp . 'LT' Exp
    Exp -> Exp . 'GT' Exp
    Exp -> Exp 'GT' Exp . 
    Exp -> Exp . 'LE' Exp
    Exp -> Exp . 'GE' Exp
    Exp -> Exp . 'PLUS' Exp
    Exp -> Exp . 'MINUS' Exp
    Exp -> Exp . 'STAR' Exp
    Exp -> Exp . 'SLASH' Exp
    Exp -> Exp . 'PERCENT' Exp
    Exp -> Exp . 'LBRACKET' Exps 'RBRACKET'
    Exp -> Exp . 'LBRACKET' Exps 'COLONEQ' Exp 'RBRACKET'

  actions:
    action 'EOF' (explicit left 9996):   reduce Exp --> Exp 'GT' Exp
    action 'EAX' (explicit left 9996):   reduce Exp --> Exp 'GT' Exp
    action 'EBX' (explicit left 9996):   reduce Exp --> Exp 'GT' Exp
    action 'ECX' (explicit left 9996):   reduce Exp --> Exp 'GT' Exp
    action 'EDX' (explicit left 9996):   reduce Exp --> Exp 'GT' Exp
    action 'ESI' (explicit left 9996):   reduce Exp --> Exp 'GT' Exp
    action 'EDI' (explicit left 9996):   reduce Exp --> Exp 'GT' Exp
    action 'EBP' (explicit left 9996):   reduce Exp --> Exp 'GT' Exp
    action 'ESP' (explicit left 9996):   reduce Exp --> Exp 'GT' Exp
    action 'MODIFIES' (explicit left 9996):   reduce Exp --> Exp 'GT' Exp
    action 'INVARIANT' (explicit left 9996):   reduce Exp --> Exp 'GT' Exp
    action 'ASSERT' (explicit left 9996):   reduce Exp --> Exp 'GT' Exp
    action 'HAVOC' (explicit left 9996):   reduce Exp --> Exp 'GT' Exp
    action 'GOTO' (explicit left 9996):   reduce Exp --> Exp 'GT' Exp
    action 'CALL' (explicit left 9996):   reduce Exp --> Exp 'GT' Exp
    action 'CCALL' (explicit left 9996):   reduce Exp --> Exp 'GT' Exp
    action 'RET' (explicit left 9996):   reduce Exp --> Exp 'GT' Exp
    action 'IRET' (explicit left 9996):   reduce Exp --> Exp 'GT' Exp
    action 'GO' (explicit left 9996):   reduce Exp --> Exp 'GT' Exp
    action 'FORALL' (explicit left 9996):   reduce Exp --> Exp 'GT' Exp
    action 'EXISTS' (explicit left 9996):   reduce Exp --> Exp 'GT' Exp
    action 'OLD' (explicit left 9996):   reduce Exp --> Exp 'GT' Exp
    action 'COLONCOLON' (explicit left 9996):   reduce Exp --> Exp 'GT' Exp
    action 'EQEQGT' (explicit left 9996):   reduce Exp --> Exp 'GT' Exp
    action 'LTEQEQGT' (explicit left 9996):   reduce Exp --> Exp 'GT' Exp
    action 'TYPE' (explicit left 9996):   reduce Exp --> Exp 'GT' Exp
    action 'CONST' (explicit left 9996):   reduce Exp --> Exp 'GT' Exp
    action 'FUNCTION' (explicit left 9996):   reduce Exp --> Exp 'GT' Exp
    action 'RETURNS' (explicit left 9996):   reduce Exp --> Exp 'GT' Exp
    action 'AXIOM' (explicit left 9996):   reduce Exp --> Exp 'GT' Exp
    action 'PROCEDURE' (explicit left 9996):   reduce Exp --> Exp 'GT' Exp
    action 'IMPLEMENTATION' (explicit left 9996):   reduce Exp --> Exp 'GT' Exp
    action 'REQUIRES' (explicit left 9996):   reduce Exp --> Exp 'GT' Exp
    action 'ENSURES' (explicit left 9996):   reduce Exp --> Exp 'GT' Exp
    action 'LT' (explicit left 9996):   reduce Exp --> Exp 'GT' Exp
    action 'GT' (explicit left 9996):   reduce Exp --> Exp 'GT' Exp
    action 'EQ' (explicit left 9996):   reduce Exp --> Exp 'GT' Exp
    action 'BANG' (explicit left 9996):   reduce Exp --> Exp 'GT' Exp
    action 'COMMA' (explicit left 9996):   reduce Exp --> Exp 'GT' Exp
    action 'LE' (explicit left 9996):   reduce Exp --> Exp 'GT' Exp
    action 'GE' (explicit left 9996):   reduce Exp --> Exp 'GT' Exp
    action 'EQEQ' (explicit left 9996):   reduce Exp --> Exp 'GT' Exp
    action 'NE' (explicit left 9996):   reduce Exp --> Exp 'GT' Exp
    action 'PLUS' (explicit left 9997):   shift 100
    action 'MINUS' (explicit left 9997):   shift 101
    action 'STAR' (explicit left 9998):   shift 102
    action 'SLASH' (explicit left 9998):   shift 103
    action 'PERCENT' (explicit left 9998):   shift 104
    action 'AMPAMP' (explicit left 9996):   reduce Exp --> Exp 'GT' Exp
    action 'BARBAR' (explicit left 9996):   reduce Exp --> Exp 'GT' Exp
    action 'COLONEQ' (explicit left 9996):   reduce Exp --> Exp 'GT' Exp
    action 'INT' (explicit left 9996):   reduce Exp --> Exp 'GT' Exp
    action 'BOOL' (explicit left 9996):   reduce Exp --> Exp 'GT' Exp
    action 'IF' (explicit left 9996):   reduce Exp --> Exp 'GT' Exp
    action 'RETURN' (explicit left 9996):   reduce Exp --> Exp 'GT' Exp
    action 'VAR' (explicit left 9996):   reduce Exp --> Exp 'GT' Exp
    action 'LBRACE' (explicit left 9996):   reduce Exp --> Exp 'GT' Exp
    action 'RBRACE' (explicit left 9996):   reduce Exp --> Exp 'GT' Exp
    action 'SEMI' (explicit left 9996):   reduce Exp --> Exp 'GT' Exp
    action 'COLON' (explicit left 9996):   reduce Exp --> Exp 'GT' Exp
    action 'LPAREN' (explicit left 9996):   reduce Exp --> Exp 'GT' Exp
    action 'RPAREN' (explicit left 9996):   reduce Exp --> Exp 'GT' Exp
    action 'LBRACKET' (explicit left 10000):   shift 118
    action 'RBRACKET' (explicit left 9996):   reduce Exp --> Exp 'GT' Exp
    action 'LITBOOL' (explicit left 9996):   reduce Exp --> Exp 'GT' Exp
    action 'LITINT' (explicit left 9996):   reduce Exp --> Exp 'GT' Exp
    action 'QLID' (explicit left 9996):   reduce Exp --> Exp 'GT' Exp
    action 'QUID' (explicit left 9996):   reduce Exp --> Exp 'GT' Exp
    action 'DLID' (explicit left 9996):   reduce Exp --> Exp 'GT' Exp
    action 'DUID' (explicit left 9996):   reduce Exp --> Exp 'GT' Exp
    action 'LID' (explicit left 9996):   reduce Exp --> Exp 'GT' Exp
    action 'UID' (explicit left 9996):   reduce Exp --> Exp 'GT' Exp
    action 'error' (explicit left 9996):   reduce Exp --> Exp 'GT' Exp
    action '#' (explicit left 9996):   reduce Exp --> Exp 'GT' Exp
    action '$$' (explicit left 9996):   reduce Exp --> Exp 'GT' Exp

  immediate action: <none>
 gotos:

state 65:
  items:
    Exp -> Exp . 'LTEQEQGT' Exp
    Exp -> Exp . 'EQEQGT' Exp
    Exp -> Exp . 'AMPAMP' Exp
    Exp -> Exp . 'BARBAR' Exp
    Exp -> Exp . 'EQEQ' Exp
    Exp -> Exp . 'NE' Exp
    Exp -> Exp . 'LT' Exp
    Exp -> Exp . 'GT' Exp
    Exp -> Exp . 'LE' Exp
    Exp -> Exp 'LE' Exp . 
    Exp -> Exp . 'GE' Exp
    Exp -> Exp . 'PLUS' Exp
    Exp -> Exp . 'MINUS' Exp
    Exp -> Exp . 'STAR' Exp
    Exp -> Exp . 'SLASH' Exp
    Exp -> Exp . 'PERCENT' Exp
    Exp -> Exp . 'LBRACKET' Exps 'RBRACKET'
    Exp -> Exp . 'LBRACKET' Exps 'COLONEQ' Exp 'RBRACKET'

  actions:
    action 'EOF' (explicit left 9996):   reduce Exp --> Exp 'LE' Exp
    action 'EAX' (explicit left 9996):   reduce Exp --> Exp 'LE' Exp
    action 'EBX' (explicit left 9996):   reduce Exp --> Exp 'LE' Exp
    action 'ECX' (explicit left 9996):   reduce Exp --> Exp 'LE' Exp
    action 'EDX' (explicit left 9996):   reduce Exp --> Exp 'LE' Exp
    action 'ESI' (explicit left 9996):   reduce Exp --> Exp 'LE' Exp
    action 'EDI' (explicit left 9996):   reduce Exp --> Exp 'LE' Exp
    action 'EBP' (explicit left 9996):   reduce Exp --> Exp 'LE' Exp
    action 'ESP' (explicit left 9996):   reduce Exp --> Exp 'LE' Exp
    action 'MODIFIES' (explicit left 9996):   reduce Exp --> Exp 'LE' Exp
    action 'INVARIANT' (explicit left 9996):   reduce Exp --> Exp 'LE' Exp
    action 'ASSERT' (explicit left 9996):   reduce Exp --> Exp 'LE' Exp
    action 'HAVOC' (explicit left 9996):   reduce Exp --> Exp 'LE' Exp
    action 'GOTO' (explicit left 9996):   reduce Exp --> Exp 'LE' Exp
    action 'CALL' (explicit left 9996):   reduce Exp --> Exp 'LE' Exp
    action 'CCALL' (explicit left 9996):   reduce Exp --> Exp 'LE' Exp
    action 'RET' (explicit left 9996):   reduce Exp --> Exp 'LE' Exp
    action 'IRET' (explicit left 9996):   reduce Exp --> Exp 'LE' Exp
    action 'GO' (explicit left 9996):   reduce Exp --> Exp 'LE' Exp
    action 'FORALL' (explicit left 9996):   reduce Exp --> Exp 'LE' Exp
    action 'EXISTS' (explicit left 9996):   reduce Exp --> Exp 'LE' Exp
    action 'OLD' (explicit left 9996):   reduce Exp --> Exp 'LE' Exp
    action 'COLONCOLON' (explicit left 9996):   reduce Exp --> Exp 'LE' Exp
    action 'EQEQGT' (explicit left 9996):   reduce Exp --> Exp 'LE' Exp
    action 'LTEQEQGT' (explicit left 9996):   reduce Exp --> Exp 'LE' Exp
    action 'TYPE' (explicit left 9996):   reduce Exp --> Exp 'LE' Exp
    action 'CONST' (explicit left 9996):   reduce Exp --> Exp 'LE' Exp
    action 'FUNCTION' (explicit left 9996):   reduce Exp --> Exp 'LE' Exp
    action 'RETURNS' (explicit left 9996):   reduce Exp --> Exp 'LE' Exp
    action 'AXIOM' (explicit left 9996):   reduce Exp --> Exp 'LE' Exp
    action 'PROCEDURE' (explicit left 9996):   reduce Exp --> Exp 'LE' Exp
    action 'IMPLEMENTATION' (explicit left 9996):   reduce Exp --> Exp 'LE' Exp
    action 'REQUIRES' (explicit left 9996):   reduce Exp --> Exp 'LE' Exp
    action 'ENSURES' (explicit left 9996):   reduce Exp --> Exp 'LE' Exp
    action 'LT' (explicit left 9996):   reduce Exp --> Exp 'LE' Exp
    action 'GT' (explicit left 9996):   reduce Exp --> Exp 'LE' Exp
    action 'EQ' (explicit left 9996):   reduce Exp --> Exp 'LE' Exp
    action 'BANG' (explicit left 9996):   reduce Exp --> Exp 'LE' Exp
    action 'COMMA' (explicit left 9996):   reduce Exp --> Exp 'LE' Exp
    action 'LE' (explicit left 9996):   reduce Exp --> Exp 'LE' Exp
    action 'GE' (explicit left 9996):   reduce Exp --> Exp 'LE' Exp
    action 'EQEQ' (explicit left 9996):   reduce Exp --> Exp 'LE' Exp
    action 'NE' (explicit left 9996):   reduce Exp --> Exp 'LE' Exp
    action 'PLUS' (explicit left 9997):   shift 100
    action 'MINUS' (explicit left 9997):   shift 101
    action 'STAR' (explicit left 9998):   shift 102
    action 'SLASH' (explicit left 9998):   shift 103
    action 'PERCENT' (explicit left 9998):   shift 104
    action 'AMPAMP' (explicit left 9996):   reduce Exp --> Exp 'LE' Exp
    action 'BARBAR' (explicit left 9996):   reduce Exp --> Exp 'LE' Exp
    action 'COLONEQ' (explicit left 9996):   reduce Exp --> Exp 'LE' Exp
    action 'INT' (explicit left 9996):   reduce Exp --> Exp 'LE' Exp
    action 'BOOL' (explicit left 9996):   reduce Exp --> Exp 'LE' Exp
    action 'IF' (explicit left 9996):   reduce Exp --> Exp 'LE' Exp
    action 'RETURN' (explicit left 9996):   reduce Exp --> Exp 'LE' Exp
    action 'VAR' (explicit left 9996):   reduce Exp --> Exp 'LE' Exp
    action 'LBRACE' (explicit left 9996):   reduce Exp --> Exp 'LE' Exp
    action 'RBRACE' (explicit left 9996):   reduce Exp --> Exp 'LE' Exp
    action 'SEMI' (explicit left 9996):   reduce Exp --> Exp 'LE' Exp
    action 'COLON' (explicit left 9996):   reduce Exp --> Exp 'LE' Exp
    action 'LPAREN' (explicit left 9996):   reduce Exp --> Exp 'LE' Exp
    action 'RPAREN' (explicit left 9996):   reduce Exp --> Exp 'LE' Exp
    action 'LBRACKET' (explicit left 10000):   shift 118
    action 'RBRACKET' (explicit left 9996):   reduce Exp --> Exp 'LE' Exp
    action 'LITBOOL' (explicit left 9996):   reduce Exp --> Exp 'LE' Exp
    action 'LITINT' (explicit left 9996):   reduce Exp --> Exp 'LE' Exp
    action 'QLID' (explicit left 9996):   reduce Exp --> Exp 'LE' Exp
    action 'QUID' (explicit left 9996):   reduce Exp --> Exp 'LE' Exp
    action 'DLID' (explicit left 9996):   reduce Exp --> Exp 'LE' Exp
    action 'DUID' (explicit left 9996):   reduce Exp --> Exp 'LE' Exp
    action 'LID' (explicit left 9996):   reduce Exp --> Exp 'LE' Exp
    action 'UID' (explicit left 9996):   reduce Exp --> Exp 'LE' Exp
    action 'error' (explicit left 9996):   reduce Exp --> Exp 'LE' Exp
    action '#' (explicit left 9996):   reduce Exp --> Exp 'LE' Exp
    action '$$' (explicit left 9996):   reduce Exp --> Exp 'LE' Exp

  immediate action: <none>
 gotos:

state 66:
  items:
    Exp -> Exp . 'LTEQEQGT' Exp
    Exp -> Exp . 'EQEQGT' Exp
    Exp -> Exp . 'AMPAMP' Exp
    Exp -> Exp . 'BARBAR' Exp
    Exp -> Exp . 'EQEQ' Exp
    Exp -> Exp . 'NE' Exp
    Exp -> Exp . 'LT' Exp
    Exp -> Exp . 'GT' Exp
    Exp -> Exp . 'LE' Exp
    Exp -> Exp . 'GE' Exp
    Exp -> Exp 'GE' Exp . 
    Exp -> Exp . 'PLUS' Exp
    Exp -> Exp . 'MINUS' Exp
    Exp -> Exp . 'STAR' Exp
    Exp -> Exp . 'SLASH' Exp
    Exp -> Exp . 'PERCENT' Exp
    Exp -> Exp . 'LBRACKET' Exps 'RBRACKET'
    Exp -> Exp . 'LBRACKET' Exps 'COLONEQ' Exp 'RBRACKET'

  actions:
    action 'EOF' (explicit left 9996):   reduce Exp --> Exp 'GE' Exp
    action 'EAX' (explicit left 9996):   reduce Exp --> Exp 'GE' Exp
    action 'EBX' (explicit left 9996):   reduce Exp --> Exp 'GE' Exp
    action 'ECX' (explicit left 9996):   reduce Exp --> Exp 'GE' Exp
    action 'EDX' (explicit left 9996):   reduce Exp --> Exp 'GE' Exp
    action 'ESI' (explicit left 9996):   reduce Exp --> Exp 'GE' Exp
    action 'EDI' (explicit left 9996):   reduce Exp --> Exp 'GE' Exp
    action 'EBP' (explicit left 9996):   reduce Exp --> Exp 'GE' Exp
    action 'ESP' (explicit left 9996):   reduce Exp --> Exp 'GE' Exp
    action 'MODIFIES' (explicit left 9996):   reduce Exp --> Exp 'GE' Exp
    action 'INVARIANT' (explicit left 9996):   reduce Exp --> Exp 'GE' Exp
    action 'ASSERT' (explicit left 9996):   reduce Exp --> Exp 'GE' Exp
    action 'HAVOC' (explicit left 9996):   reduce Exp --> Exp 'GE' Exp
    action 'GOTO' (explicit left 9996):   reduce Exp --> Exp 'GE' Exp
    action 'CALL' (explicit left 9996):   reduce Exp --> Exp 'GE' Exp
    action 'CCALL' (explicit left 9996):   reduce Exp --> Exp 'GE' Exp
    action 'RET' (explicit left 9996):   reduce Exp --> Exp 'GE' Exp
    action 'IRET' (explicit left 9996):   reduce Exp --> Exp 'GE' Exp
    action 'GO' (explicit left 9996):   reduce Exp --> Exp 'GE' Exp
    action 'FORALL' (explicit left 9996):   reduce Exp --> Exp 'GE' Exp
    action 'EXISTS' (explicit left 9996):   reduce Exp --> Exp 'GE' Exp
    action 'OLD' (explicit left 9996):   reduce Exp --> Exp 'GE' Exp
    action 'COLONCOLON' (explicit left 9996):   reduce Exp --> Exp 'GE' Exp
    action 'EQEQGT' (explicit left 9996):   reduce Exp --> Exp 'GE' Exp
    action 'LTEQEQGT' (explicit left 9996):   reduce Exp --> Exp 'GE' Exp
    action 'TYPE' (explicit left 9996):   reduce Exp --> Exp 'GE' Exp
    action 'CONST' (explicit left 9996):   reduce Exp --> Exp 'GE' Exp
    action 'FUNCTION' (explicit left 9996):   reduce Exp --> Exp 'GE' Exp
    action 'RETURNS' (explicit left 9996):   reduce Exp --> Exp 'GE' Exp
    action 'AXIOM' (explicit left 9996):   reduce Exp --> Exp 'GE' Exp
    action 'PROCEDURE' (explicit left 9996):   reduce Exp --> Exp 'GE' Exp
    action 'IMPLEMENTATION' (explicit left 9996):   reduce Exp --> Exp 'GE' Exp
    action 'REQUIRES' (explicit left 9996):   reduce Exp --> Exp 'GE' Exp
    action 'ENSURES' (explicit left 9996):   reduce Exp --> Exp 'GE' Exp
    action 'LT' (explicit left 9996):   reduce Exp --> Exp 'GE' Exp
    action 'GT' (explicit left 9996):   reduce Exp --> Exp 'GE' Exp
    action 'EQ' (explicit left 9996):   reduce Exp --> Exp 'GE' Exp
    action 'BANG' (explicit left 9996):   reduce Exp --> Exp 'GE' Exp
    action 'COMMA' (explicit left 9996):   reduce Exp --> Exp 'GE' Exp
    action 'LE' (explicit left 9996):   reduce Exp --> Exp 'GE' Exp
    action 'GE' (explicit left 9996):   reduce Exp --> Exp 'GE' Exp
    action 'EQEQ' (explicit left 9996):   reduce Exp --> Exp 'GE' Exp
    action 'NE' (explicit left 9996):   reduce Exp --> Exp 'GE' Exp
    action 'PLUS' (explicit left 9997):   shift 100
    action 'MINUS' (explicit left 9997):   shift 101
    action 'STAR' (explicit left 9998):   shift 102
    action 'SLASH' (explicit left 9998):   shift 103
    action 'PERCENT' (explicit left 9998):   shift 104
    action 'AMPAMP' (explicit left 9996):   reduce Exp --> Exp 'GE' Exp
    action 'BARBAR' (explicit left 9996):   reduce Exp --> Exp 'GE' Exp
    action 'COLONEQ' (explicit left 9996):   reduce Exp --> Exp 'GE' Exp
    action 'INT' (explicit left 9996):   reduce Exp --> Exp 'GE' Exp
    action 'BOOL' (explicit left 9996):   reduce Exp --> Exp 'GE' Exp
    action 'IF' (explicit left 9996):   reduce Exp --> Exp 'GE' Exp
    action 'RETURN' (explicit left 9996):   reduce Exp --> Exp 'GE' Exp
    action 'VAR' (explicit left 9996):   reduce Exp --> Exp 'GE' Exp
    action 'LBRACE' (explicit left 9996):   reduce Exp --> Exp 'GE' Exp
    action 'RBRACE' (explicit left 9996):   reduce Exp --> Exp 'GE' Exp
    action 'SEMI' (explicit left 9996):   reduce Exp --> Exp 'GE' Exp
    action 'COLON' (explicit left 9996):   reduce Exp --> Exp 'GE' Exp
    action 'LPAREN' (explicit left 9996):   reduce Exp --> Exp 'GE' Exp
    action 'RPAREN' (explicit left 9996):   reduce Exp --> Exp 'GE' Exp
    action 'LBRACKET' (explicit left 10000):   shift 118
    action 'RBRACKET' (explicit left 9996):   reduce Exp --> Exp 'GE' Exp
    action 'LITBOOL' (explicit left 9996):   reduce Exp --> Exp 'GE' Exp
    action 'LITINT' (explicit left 9996):   reduce Exp --> Exp 'GE' Exp
    action 'QLID' (explicit left 9996):   reduce Exp --> Exp 'GE' Exp
    action 'QUID' (explicit left 9996):   reduce Exp --> Exp 'GE' Exp
    action 'DLID' (explicit left 9996):   reduce Exp --> Exp 'GE' Exp
    action 'DUID' (explicit left 9996):   reduce Exp --> Exp 'GE' Exp
    action 'LID' (explicit left 9996):   reduce Exp --> Exp 'GE' Exp
    action 'UID' (explicit left 9996):   reduce Exp --> Exp 'GE' Exp
    action 'error' (explicit left 9996):   reduce Exp --> Exp 'GE' Exp
    action '#' (explicit left 9996):   reduce Exp --> Exp 'GE' Exp
    action '$$' (explicit left 9996):   reduce Exp --> Exp 'GE' Exp

  immediate action: <none>
 gotos:

state 67:
  items:
    Exp -> Exp . 'LTEQEQGT' Exp
    Exp -> Exp . 'EQEQGT' Exp
    Exp -> Exp . 'AMPAMP' Exp
    Exp -> Exp . 'BARBAR' Exp
    Exp -> Exp . 'EQEQ' Exp
    Exp -> Exp . 'NE' Exp
    Exp -> Exp . 'LT' Exp
    Exp -> Exp . 'GT' Exp
    Exp -> Exp . 'LE' Exp
    Exp -> Exp . 'GE' Exp
    Exp -> Exp . 'PLUS' Exp
    Exp -> Exp 'PLUS' Exp . 
    Exp -> Exp . 'MINUS' Exp
    Exp -> Exp . 'STAR' Exp
    Exp -> Exp . 'SLASH' Exp
    Exp -> Exp . 'PERCENT' Exp
    Exp -> Exp . 'LBRACKET' Exps 'RBRACKET'
    Exp -> Exp . 'LBRACKET' Exps 'COLONEQ' Exp 'RBRACKET'

  actions:
    action 'EOF' (explicit left 9997):   reduce Exp --> Exp 'PLUS' Exp
    action 'EAX' (explicit left 9997):   reduce Exp --> Exp 'PLUS' Exp
    action 'EBX' (explicit left 9997):   reduce Exp --> Exp 'PLUS' Exp
    action 'ECX' (explicit left 9997):   reduce Exp --> Exp 'PLUS' Exp
    action 'EDX' (explicit left 9997):   reduce Exp --> Exp 'PLUS' Exp
    action 'ESI' (explicit left 9997):   reduce Exp --> Exp 'PLUS' Exp
    action 'EDI' (explicit left 9997):   reduce Exp --> Exp 'PLUS' Exp
    action 'EBP' (explicit left 9997):   reduce Exp --> Exp 'PLUS' Exp
    action 'ESP' (explicit left 9997):   reduce Exp --> Exp 'PLUS' Exp
    action 'MODIFIES' (explicit left 9997):   reduce Exp --> Exp 'PLUS' Exp
    action 'INVARIANT' (explicit left 9997):   reduce Exp --> Exp 'PLUS' Exp
    action 'ASSERT' (explicit left 9997):   reduce Exp --> Exp 'PLUS' Exp
    action 'HAVOC' (explicit left 9997):   reduce Exp --> Exp 'PLUS' Exp
    action 'GOTO' (explicit left 9997):   reduce Exp --> Exp 'PLUS' Exp
    action 'CALL' (explicit left 9997):   reduce Exp --> Exp 'PLUS' Exp
    action 'CCALL' (explicit left 9997):   reduce Exp --> Exp 'PLUS' Exp
    action 'RET' (explicit left 9997):   reduce Exp --> Exp 'PLUS' Exp
    action 'IRET' (explicit left 9997):   reduce Exp --> Exp 'PLUS' Exp
    action 'GO' (explicit left 9997):   reduce Exp --> Exp 'PLUS' Exp
    action 'FORALL' (explicit left 9997):   reduce Exp --> Exp 'PLUS' Exp
    action 'EXISTS' (explicit left 9997):   reduce Exp --> Exp 'PLUS' Exp
    action 'OLD' (explicit left 9997):   reduce Exp --> Exp 'PLUS' Exp
    action 'COLONCOLON' (explicit left 9997):   reduce Exp --> Exp 'PLUS' Exp
    action 'EQEQGT' (explicit left 9997):   reduce Exp --> Exp 'PLUS' Exp
    action 'LTEQEQGT' (explicit left 9997):   reduce Exp --> Exp 'PLUS' Exp
    action 'TYPE' (explicit left 9997):   reduce Exp --> Exp 'PLUS' Exp
    action 'CONST' (explicit left 9997):   reduce Exp --> Exp 'PLUS' Exp
    action 'FUNCTION' (explicit left 9997):   reduce Exp --> Exp 'PLUS' Exp
    action 'RETURNS' (explicit left 9997):   reduce Exp --> Exp 'PLUS' Exp
    action 'AXIOM' (explicit left 9997):   reduce Exp --> Exp 'PLUS' Exp
    action 'PROCEDURE' (explicit left 9997):   reduce Exp --> Exp 'PLUS' Exp
    action 'IMPLEMENTATION' (explicit left 9997):   reduce Exp --> Exp 'PLUS' Exp
    action 'REQUIRES' (explicit left 9997):   reduce Exp --> Exp 'PLUS' Exp
    action 'ENSURES' (explicit left 9997):   reduce Exp --> Exp 'PLUS' Exp
    action 'LT' (explicit left 9997):   reduce Exp --> Exp 'PLUS' Exp
    action 'GT' (explicit left 9997):   reduce Exp --> Exp 'PLUS' Exp
    action 'EQ' (explicit left 9997):   reduce Exp --> Exp 'PLUS' Exp
    action 'BANG' (explicit left 9997):   reduce Exp --> Exp 'PLUS' Exp
    action 'COMMA' (explicit left 9997):   reduce Exp --> Exp 'PLUS' Exp
    action 'LE' (explicit left 9997):   reduce Exp --> Exp 'PLUS' Exp
    action 'GE' (explicit left 9997):   reduce Exp --> Exp 'PLUS' Exp
    action 'EQEQ' (explicit left 9997):   reduce Exp --> Exp 'PLUS' Exp
    action 'NE' (explicit left 9997):   reduce Exp --> Exp 'PLUS' Exp
    action 'PLUS' (explicit left 9997):   reduce Exp --> Exp 'PLUS' Exp
    action 'MINUS' (explicit left 9997):   reduce Exp --> Exp 'PLUS' Exp
    action 'STAR' (explicit left 9998):   shift 102
    action 'SLASH' (explicit left 9998):   shift 103
    action 'PERCENT' (explicit left 9998):   shift 104
    action 'AMPAMP' (explicit left 9997):   reduce Exp --> Exp 'PLUS' Exp
    action 'BARBAR' (explicit left 9997):   reduce Exp --> Exp 'PLUS' Exp
    action 'COLONEQ' (explicit left 9997):   reduce Exp --> Exp 'PLUS' Exp
    action 'INT' (explicit left 9997):   reduce Exp --> Exp 'PLUS' Exp
    action 'BOOL' (explicit left 9997):   reduce Exp --> Exp 'PLUS' Exp
    action 'IF' (explicit left 9997):   reduce Exp --> Exp 'PLUS' Exp
    action 'RETURN' (explicit left 9997):   reduce Exp --> Exp 'PLUS' Exp
    action 'VAR' (explicit left 9997):   reduce Exp --> Exp 'PLUS' Exp
    action 'LBRACE' (explicit left 9997):   reduce Exp --> Exp 'PLUS' Exp
    action 'RBRACE' (explicit left 9997):   reduce Exp --> Exp 'PLUS' Exp
    action 'SEMI' (explicit left 9997):   reduce Exp --> Exp 'PLUS' Exp
    action 'COLON' (explicit left 9997):   reduce Exp --> Exp 'PLUS' Exp
    action 'LPAREN' (explicit left 9997):   reduce Exp --> Exp 'PLUS' Exp
    action 'RPAREN' (explicit left 9997):   reduce Exp --> Exp 'PLUS' Exp
    action 'LBRACKET' (explicit left 10000):   shift 118
    action 'RBRACKET' (explicit left 9997):   reduce Exp --> Exp 'PLUS' Exp
    action 'LITBOOL' (explicit left 9997):   reduce Exp --> Exp 'PLUS' Exp
    action 'LITINT' (explicit left 9997):   reduce Exp --> Exp 'PLUS' Exp
    action 'QLID' (explicit left 9997):   reduce Exp --> Exp 'PLUS' Exp
    action 'QUID' (explicit left 9997):   reduce Exp --> Exp 'PLUS' Exp
    action 'DLID' (explicit left 9997):   reduce Exp --> Exp 'PLUS' Exp
    action 'DUID' (explicit left 9997):   reduce Exp --> Exp 'PLUS' Exp
    action 'LID' (explicit left 9997):   reduce Exp --> Exp 'PLUS' Exp
    action 'UID' (explicit left 9997):   reduce Exp --> Exp 'PLUS' Exp
    action 'error' (explicit left 9997):   reduce Exp --> Exp 'PLUS' Exp
    action '#' (explicit left 9997):   reduce Exp --> Exp 'PLUS' Exp
    action '$$' (explicit left 9997):   reduce Exp --> Exp 'PLUS' Exp

  immediate action: <none>
 gotos:

state 68:
  items:
    Exp -> Exp . 'LTEQEQGT' Exp
    Exp -> Exp . 'EQEQGT' Exp
    Exp -> Exp . 'AMPAMP' Exp
    Exp -> Exp . 'BARBAR' Exp
    Exp -> Exp . 'EQEQ' Exp
    Exp -> Exp . 'NE' Exp
    Exp -> Exp . 'LT' Exp
    Exp -> Exp . 'GT' Exp
    Exp -> Exp . 'LE' Exp
    Exp -> Exp . 'GE' Exp
    Exp -> Exp . 'PLUS' Exp
    Exp -> Exp . 'MINUS' Exp
    Exp -> Exp 'MINUS' Exp . 
    Exp -> Exp . 'STAR' Exp
    Exp -> Exp . 'SLASH' Exp
    Exp -> Exp . 'PERCENT' Exp
    Exp -> Exp . 'LBRACKET' Exps 'RBRACKET'
    Exp -> Exp . 'LBRACKET' Exps 'COLONEQ' Exp 'RBRACKET'

  actions:
    action 'EOF' (explicit left 9997):   reduce Exp --> Exp 'MINUS' Exp
    action 'EAX' (explicit left 9997):   reduce Exp --> Exp 'MINUS' Exp
    action 'EBX' (explicit left 9997):   reduce Exp --> Exp 'MINUS' Exp
    action 'ECX' (explicit left 9997):   reduce Exp --> Exp 'MINUS' Exp
    action 'EDX' (explicit left 9997):   reduce Exp --> Exp 'MINUS' Exp
    action 'ESI' (explicit left 9997):   reduce Exp --> Exp 'MINUS' Exp
    action 'EDI' (explicit left 9997):   reduce Exp --> Exp 'MINUS' Exp
    action 'EBP' (explicit left 9997):   reduce Exp --> Exp 'MINUS' Exp
    action 'ESP' (explicit left 9997):   reduce Exp --> Exp 'MINUS' Exp
    action 'MODIFIES' (explicit left 9997):   reduce Exp --> Exp 'MINUS' Exp
    action 'INVARIANT' (explicit left 9997):   reduce Exp --> Exp 'MINUS' Exp
    action 'ASSERT' (explicit left 9997):   reduce Exp --> Exp 'MINUS' Exp
    action 'HAVOC' (explicit left 9997):   reduce Exp --> Exp 'MINUS' Exp
    action 'GOTO' (explicit left 9997):   reduce Exp --> Exp 'MINUS' Exp
    action 'CALL' (explicit left 9997):   reduce Exp --> Exp 'MINUS' Exp
    action 'CCALL' (explicit left 9997):   reduce Exp --> Exp 'MINUS' Exp
    action 'RET' (explicit left 9997):   reduce Exp --> Exp 'MINUS' Exp
    action 'IRET' (explicit left 9997):   reduce Exp --> Exp 'MINUS' Exp
    action 'GO' (explicit left 9997):   reduce Exp --> Exp 'MINUS' Exp
    action 'FORALL' (explicit left 9997):   reduce Exp --> Exp 'MINUS' Exp
    action 'EXISTS' (explicit left 9997):   reduce Exp --> Exp 'MINUS' Exp
    action 'OLD' (explicit left 9997):   reduce Exp --> Exp 'MINUS' Exp
    action 'COLONCOLON' (explicit left 9997):   reduce Exp --> Exp 'MINUS' Exp
    action 'EQEQGT' (explicit left 9997):   reduce Exp --> Exp 'MINUS' Exp
    action 'LTEQEQGT' (explicit left 9997):   reduce Exp --> Exp 'MINUS' Exp
    action 'TYPE' (explicit left 9997):   reduce Exp --> Exp 'MINUS' Exp
    action 'CONST' (explicit left 9997):   reduce Exp --> Exp 'MINUS' Exp
    action 'FUNCTION' (explicit left 9997):   reduce Exp --> Exp 'MINUS' Exp
    action 'RETURNS' (explicit left 9997):   reduce Exp --> Exp 'MINUS' Exp
    action 'AXIOM' (explicit left 9997):   reduce Exp --> Exp 'MINUS' Exp
    action 'PROCEDURE' (explicit left 9997):   reduce Exp --> Exp 'MINUS' Exp
    action 'IMPLEMENTATION' (explicit left 9997):   reduce Exp --> Exp 'MINUS' Exp
    action 'REQUIRES' (explicit left 9997):   reduce Exp --> Exp 'MINUS' Exp
    action 'ENSURES' (explicit left 9997):   reduce Exp --> Exp 'MINUS' Exp
    action 'LT' (explicit left 9997):   reduce Exp --> Exp 'MINUS' Exp
    action 'GT' (explicit left 9997):   reduce Exp --> Exp 'MINUS' Exp
    action 'EQ' (explicit left 9997):   reduce Exp --> Exp 'MINUS' Exp
    action 'BANG' (explicit left 9997):   reduce Exp --> Exp 'MINUS' Exp
    action 'COMMA' (explicit left 9997):   reduce Exp --> Exp 'MINUS' Exp
    action 'LE' (explicit left 9997):   reduce Exp --> Exp 'MINUS' Exp
    action 'GE' (explicit left 9997):   reduce Exp --> Exp 'MINUS' Exp
    action 'EQEQ' (explicit left 9997):   reduce Exp --> Exp 'MINUS' Exp
    action 'NE' (explicit left 9997):   reduce Exp --> Exp 'MINUS' Exp
    action 'PLUS' (explicit left 9997):   reduce Exp --> Exp 'MINUS' Exp
    action 'MINUS' (explicit left 9997):   reduce Exp --> Exp 'MINUS' Exp
    action 'STAR' (explicit left 9998):   shift 102
    action 'SLASH' (explicit left 9998):   shift 103
    action 'PERCENT' (explicit left 9998):   shift 104
    action 'AMPAMP' (explicit left 9997):   reduce Exp --> Exp 'MINUS' Exp
    action 'BARBAR' (explicit left 9997):   reduce Exp --> Exp 'MINUS' Exp
    action 'COLONEQ' (explicit left 9997):   reduce Exp --> Exp 'MINUS' Exp
    action 'INT' (explicit left 9997):   reduce Exp --> Exp 'MINUS' Exp
    action 'BOOL' (explicit left 9997):   reduce Exp --> Exp 'MINUS' Exp
    action 'IF' (explicit left 9997):   reduce Exp --> Exp 'MINUS' Exp
    action 'RETURN' (explicit left 9997):   reduce Exp --> Exp 'MINUS' Exp
    action 'VAR' (explicit left 9997):   reduce Exp --> Exp 'MINUS' Exp
    action 'LBRACE' (explicit left 9997):   reduce Exp --> Exp 'MINUS' Exp
    action 'RBRACE' (explicit left 9997):   reduce Exp --> Exp 'MINUS' Exp
    action 'SEMI' (explicit left 9997):   reduce Exp --> Exp 'MINUS' Exp
    action 'COLON' (explicit left 9997):   reduce Exp --> Exp 'MINUS' Exp
    action 'LPAREN' (explicit left 9997):   reduce Exp --> Exp 'MINUS' Exp
    action 'RPAREN' (explicit left 9997):   reduce Exp --> Exp 'MINUS' Exp
    action 'LBRACKET' (explicit left 10000):   shift 118
    action 'RBRACKET' (explicit left 9997):   reduce Exp --> Exp 'MINUS' Exp
    action 'LITBOOL' (explicit left 9997):   reduce Exp --> Exp 'MINUS' Exp
    action 'LITINT' (explicit left 9997):   reduce Exp --> Exp 'MINUS' Exp
    action 'QLID' (explicit left 9997):   reduce Exp --> Exp 'MINUS' Exp
    action 'QUID' (explicit left 9997):   reduce Exp --> Exp 'MINUS' Exp
    action 'DLID' (explicit left 9997):   reduce Exp --> Exp 'MINUS' Exp
    action 'DUID' (explicit left 9997):   reduce Exp --> Exp 'MINUS' Exp
    action 'LID' (explicit left 9997):   reduce Exp --> Exp 'MINUS' Exp
    action 'UID' (explicit left 9997):   reduce Exp --> Exp 'MINUS' Exp
    action 'error' (explicit left 9997):   reduce Exp --> Exp 'MINUS' Exp
    action '#' (explicit left 9997):   reduce Exp --> Exp 'MINUS' Exp
    action '$$' (explicit left 9997):   reduce Exp --> Exp 'MINUS' Exp

  immediate action: <none>
 gotos:

state 69:
  items:
    Exp -> Exp . 'LTEQEQGT' Exp
    Exp -> Exp . 'EQEQGT' Exp
    Exp -> Exp . 'AMPAMP' Exp
    Exp -> Exp . 'BARBAR' Exp
    Exp -> Exp . 'EQEQ' Exp
    Exp -> Exp . 'NE' Exp
    Exp -> Exp . 'LT' Exp
    Exp -> Exp . 'GT' Exp
    Exp -> Exp . 'LE' Exp
    Exp -> Exp . 'GE' Exp
    Exp -> Exp . 'PLUS' Exp
    Exp -> Exp . 'MINUS' Exp
    Exp -> Exp . 'STAR' Exp
    Exp -> Exp 'STAR' Exp . 
    Exp -> Exp . 'SLASH' Exp
    Exp -> Exp . 'PERCENT' Exp
    Exp -> Exp . 'LBRACKET' Exps 'RBRACKET'
    Exp -> Exp . 'LBRACKET' Exps 'COLONEQ' Exp 'RBRACKET'

  actions:
    action 'EOF' (explicit left 9998):   reduce Exp --> Exp 'STAR' Exp
    action 'EAX' (explicit left 9998):   reduce Exp --> Exp 'STAR' Exp
    action 'EBX' (explicit left 9998):   reduce Exp --> Exp 'STAR' Exp
    action 'ECX' (explicit left 9998):   reduce Exp --> Exp 'STAR' Exp
    action 'EDX' (explicit left 9998):   reduce Exp --> Exp 'STAR' Exp
    action 'ESI' (explicit left 9998):   reduce Exp --> Exp 'STAR' Exp
    action 'EDI' (explicit left 9998):   reduce Exp --> Exp 'STAR' Exp
    action 'EBP' (explicit left 9998):   reduce Exp --> Exp 'STAR' Exp
    action 'ESP' (explicit left 9998):   reduce Exp --> Exp 'STAR' Exp
    action 'MODIFIES' (explicit left 9998):   reduce Exp --> Exp 'STAR' Exp
    action 'INVARIANT' (explicit left 9998):   reduce Exp --> Exp 'STAR' Exp
    action 'ASSERT' (explicit left 9998):   reduce Exp --> Exp 'STAR' Exp
    action 'HAVOC' (explicit left 9998):   reduce Exp --> Exp 'STAR' Exp
    action 'GOTO' (explicit left 9998):   reduce Exp --> Exp 'STAR' Exp
    action 'CALL' (explicit left 9998):   reduce Exp --> Exp 'STAR' Exp
    action 'CCALL' (explicit left 9998):   reduce Exp --> Exp 'STAR' Exp
    action 'RET' (explicit left 9998):   reduce Exp --> Exp 'STAR' Exp
    action 'IRET' (explicit left 9998):   reduce Exp --> Exp 'STAR' Exp
    action 'GO' (explicit left 9998):   reduce Exp --> Exp 'STAR' Exp
    action 'FORALL' (explicit left 9998):   reduce Exp --> Exp 'STAR' Exp
    action 'EXISTS' (explicit left 9998):   reduce Exp --> Exp 'STAR' Exp
    action 'OLD' (explicit left 9998):   reduce Exp --> Exp 'STAR' Exp
    action 'COLONCOLON' (explicit left 9998):   reduce Exp --> Exp 'STAR' Exp
    action 'EQEQGT' (explicit left 9998):   reduce Exp --> Exp 'STAR' Exp
    action 'LTEQEQGT' (explicit left 9998):   reduce Exp --> Exp 'STAR' Exp
    action 'TYPE' (explicit left 9998):   reduce Exp --> Exp 'STAR' Exp
    action 'CONST' (explicit left 9998):   reduce Exp --> Exp 'STAR' Exp
    action 'FUNCTION' (explicit left 9998):   reduce Exp --> Exp 'STAR' Exp
    action 'RETURNS' (explicit left 9998):   reduce Exp --> Exp 'STAR' Exp
    action 'AXIOM' (explicit left 9998):   reduce Exp --> Exp 'STAR' Exp
    action 'PROCEDURE' (explicit left 9998):   reduce Exp --> Exp 'STAR' Exp
    action 'IMPLEMENTATION' (explicit left 9998):   reduce Exp --> Exp 'STAR' Exp
    action 'REQUIRES' (explicit left 9998):   reduce Exp --> Exp 'STAR' Exp
    action 'ENSURES' (explicit left 9998):   reduce Exp --> Exp 'STAR' Exp
    action 'LT' (explicit left 9998):   reduce Exp --> Exp 'STAR' Exp
    action 'GT' (explicit left 9998):   reduce Exp --> Exp 'STAR' Exp
    action 'EQ' (explicit left 9998):   reduce Exp --> Exp 'STAR' Exp
    action 'BANG' (explicit left 9998):   reduce Exp --> Exp 'STAR' Exp
    action 'COMMA' (explicit left 9998):   reduce Exp --> Exp 'STAR' Exp
    action 'LE' (explicit left 9998):   reduce Exp --> Exp 'STAR' Exp
    action 'GE' (explicit left 9998):   reduce Exp --> Exp 'STAR' Exp
    action 'EQEQ' (explicit left 9998):   reduce Exp --> Exp 'STAR' Exp
    action 'NE' (explicit left 9998):   reduce Exp --> Exp 'STAR' Exp
    action 'PLUS' (explicit left 9998):   reduce Exp --> Exp 'STAR' Exp
    action 'MINUS' (explicit left 9998):   reduce Exp --> Exp 'STAR' Exp
    action 'STAR' (explicit left 9998):   reduce Exp --> Exp 'STAR' Exp
    action 'SLASH' (explicit left 9998):   reduce Exp --> Exp 'STAR' Exp
    action 'PERCENT' (explicit left 9998):   reduce Exp --> Exp 'STAR' Exp
    action 'AMPAMP' (explicit left 9998):   reduce Exp --> Exp 'STAR' Exp
    action 'BARBAR' (explicit left 9998):   reduce Exp --> Exp 'STAR' Exp
    action 'COLONEQ' (explicit left 9998):   reduce Exp --> Exp 'STAR' Exp
    action 'INT' (explicit left 9998):   reduce Exp --> Exp 'STAR' Exp
    action 'BOOL' (explicit left 9998):   reduce Exp --> Exp 'STAR' Exp
    action 'IF' (explicit left 9998):   reduce Exp --> Exp 'STAR' Exp
    action 'RETURN' (explicit left 9998):   reduce Exp --> Exp 'STAR' Exp
    action 'VAR' (explicit left 9998):   reduce Exp --> Exp 'STAR' Exp
    action 'LBRACE' (explicit left 9998):   reduce Exp --> Exp 'STAR' Exp
    action 'RBRACE' (explicit left 9998):   reduce Exp --> Exp 'STAR' Exp
    action 'SEMI' (explicit left 9998):   reduce Exp --> Exp 'STAR' Exp
    action 'COLON' (explicit left 9998):   reduce Exp --> Exp 'STAR' Exp
    action 'LPAREN' (explicit left 9998):   reduce Exp --> Exp 'STAR' Exp
    action 'RPAREN' (explicit left 9998):   reduce Exp --> Exp 'STAR' Exp
    action 'LBRACKET' (explicit left 10000):   shift 118
    action 'RBRACKET' (explicit left 9998):   reduce Exp --> Exp 'STAR' Exp
    action 'LITBOOL' (explicit left 9998):   reduce Exp --> Exp 'STAR' Exp
    action 'LITINT' (explicit left 9998):   reduce Exp --> Exp 'STAR' Exp
    action 'QLID' (explicit left 9998):   reduce Exp --> Exp 'STAR' Exp
    action 'QUID' (explicit left 9998):   reduce Exp --> Exp 'STAR' Exp
    action 'DLID' (explicit left 9998):   reduce Exp --> Exp 'STAR' Exp
    action 'DUID' (explicit left 9998):   reduce Exp --> Exp 'STAR' Exp
    action 'LID' (explicit left 9998):   reduce Exp --> Exp 'STAR' Exp
    action 'UID' (explicit left 9998):   reduce Exp --> Exp 'STAR' Exp
    action 'error' (explicit left 9998):   reduce Exp --> Exp 'STAR' Exp
    action '#' (explicit left 9998):   reduce Exp --> Exp 'STAR' Exp
    action '$$' (explicit left 9998):   reduce Exp --> Exp 'STAR' Exp

  immediate action: <none>
 gotos:

state 70:
  items:
    Exp -> Exp . 'LTEQEQGT' Exp
    Exp -> Exp . 'EQEQGT' Exp
    Exp -> Exp . 'AMPAMP' Exp
    Exp -> Exp . 'BARBAR' Exp
    Exp -> Exp . 'EQEQ' Exp
    Exp -> Exp . 'NE' Exp
    Exp -> Exp . 'LT' Exp
    Exp -> Exp . 'GT' Exp
    Exp -> Exp . 'LE' Exp
    Exp -> Exp . 'GE' Exp
    Exp -> Exp . 'PLUS' Exp
    Exp -> Exp . 'MINUS' Exp
    Exp -> Exp . 'STAR' Exp
    Exp -> Exp . 'SLASH' Exp
    Exp -> Exp 'SLASH' Exp . 
    Exp -> Exp . 'PERCENT' Exp
    Exp -> Exp . 'LBRACKET' Exps 'RBRACKET'
    Exp -> Exp . 'LBRACKET' Exps 'COLONEQ' Exp 'RBRACKET'

  actions:
    action 'EOF' (explicit left 9998):   reduce Exp --> Exp 'SLASH' Exp
    action 'EAX' (explicit left 9998):   reduce Exp --> Exp 'SLASH' Exp
    action 'EBX' (explicit left 9998):   reduce Exp --> Exp 'SLASH' Exp
    action 'ECX' (explicit left 9998):   reduce Exp --> Exp 'SLASH' Exp
    action 'EDX' (explicit left 9998):   reduce Exp --> Exp 'SLASH' Exp
    action 'ESI' (explicit left 9998):   reduce Exp --> Exp 'SLASH' Exp
    action 'EDI' (explicit left 9998):   reduce Exp --> Exp 'SLASH' Exp
    action 'EBP' (explicit left 9998):   reduce Exp --> Exp 'SLASH' Exp
    action 'ESP' (explicit left 9998):   reduce Exp --> Exp 'SLASH' Exp
    action 'MODIFIES' (explicit left 9998):   reduce Exp --> Exp 'SLASH' Exp
    action 'INVARIANT' (explicit left 9998):   reduce Exp --> Exp 'SLASH' Exp
    action 'ASSERT' (explicit left 9998):   reduce Exp --> Exp 'SLASH' Exp
    action 'HAVOC' (explicit left 9998):   reduce Exp --> Exp 'SLASH' Exp
    action 'GOTO' (explicit left 9998):   reduce Exp --> Exp 'SLASH' Exp
    action 'CALL' (explicit left 9998):   reduce Exp --> Exp 'SLASH' Exp
    action 'CCALL' (explicit left 9998):   reduce Exp --> Exp 'SLASH' Exp
    action 'RET' (explicit left 9998):   reduce Exp --> Exp 'SLASH' Exp
    action 'IRET' (explicit left 9998):   reduce Exp --> Exp 'SLASH' Exp
    action 'GO' (explicit left 9998):   reduce Exp --> Exp 'SLASH' Exp
    action 'FORALL' (explicit left 9998):   reduce Exp --> Exp 'SLASH' Exp
    action 'EXISTS' (explicit left 9998):   reduce Exp --> Exp 'SLASH' Exp
    action 'OLD' (explicit left 9998):   reduce Exp --> Exp 'SLASH' Exp
    action 'COLONCOLON' (explicit left 9998):   reduce Exp --> Exp 'SLASH' Exp
    action 'EQEQGT' (explicit left 9998):   reduce Exp --> Exp 'SLASH' Exp
    action 'LTEQEQGT' (explicit left 9998):   reduce Exp --> Exp 'SLASH' Exp
    action 'TYPE' (explicit left 9998):   reduce Exp --> Exp 'SLASH' Exp
    action 'CONST' (explicit left 9998):   reduce Exp --> Exp 'SLASH' Exp
    action 'FUNCTION' (explicit left 9998):   reduce Exp --> Exp 'SLASH' Exp
    action 'RETURNS' (explicit left 9998):   reduce Exp --> Exp 'SLASH' Exp
    action 'AXIOM' (explicit left 9998):   reduce Exp --> Exp 'SLASH' Exp
    action 'PROCEDURE' (explicit left 9998):   reduce Exp --> Exp 'SLASH' Exp
    action 'IMPLEMENTATION' (explicit left 9998):   reduce Exp --> Exp 'SLASH' Exp
    action 'REQUIRES' (explicit left 9998):   reduce Exp --> Exp 'SLASH' Exp
    action 'ENSURES' (explicit left 9998):   reduce Exp --> Exp 'SLASH' Exp
    action 'LT' (explicit left 9998):   reduce Exp --> Exp 'SLASH' Exp
    action 'GT' (explicit left 9998):   reduce Exp --> Exp 'SLASH' Exp
    action 'EQ' (explicit left 9998):   reduce Exp --> Exp 'SLASH' Exp
    action 'BANG' (explicit left 9998):   reduce Exp --> Exp 'SLASH' Exp
    action 'COMMA' (explicit left 9998):   reduce Exp --> Exp 'SLASH' Exp
    action 'LE' (explicit left 9998):   reduce Exp --> Exp 'SLASH' Exp
    action 'GE' (explicit left 9998):   reduce Exp --> Exp 'SLASH' Exp
    action 'EQEQ' (explicit left 9998):   reduce Exp --> Exp 'SLASH' Exp
    action 'NE' (explicit left 9998):   reduce Exp --> Exp 'SLASH' Exp
    action 'PLUS' (explicit left 9998):   reduce Exp --> Exp 'SLASH' Exp
    action 'MINUS' (explicit left 9998):   reduce Exp --> Exp 'SLASH' Exp
    action 'STAR' (explicit left 9998):   reduce Exp --> Exp 'SLASH' Exp
    action 'SLASH' (explicit left 9998):   reduce Exp --> Exp 'SLASH' Exp
    action 'PERCENT' (explicit left 9998):   reduce Exp --> Exp 'SLASH' Exp
    action 'AMPAMP' (explicit left 9998):   reduce Exp --> Exp 'SLASH' Exp
    action 'BARBAR' (explicit left 9998):   reduce Exp --> Exp 'SLASH' Exp
    action 'COLONEQ' (explicit left 9998):   reduce Exp --> Exp 'SLASH' Exp
    action 'INT' (explicit left 9998):   reduce Exp --> Exp 'SLASH' Exp
    action 'BOOL' (explicit left 9998):   reduce Exp --> Exp 'SLASH' Exp
    action 'IF' (explicit left 9998):   reduce Exp --> Exp 'SLASH' Exp
    action 'RETURN' (explicit left 9998):   reduce Exp --> Exp 'SLASH' Exp
    action 'VAR' (explicit left 9998):   reduce Exp --> Exp 'SLASH' Exp
    action 'LBRACE' (explicit left 9998):   reduce Exp --> Exp 'SLASH' Exp
    action 'RBRACE' (explicit left 9998):   reduce Exp --> Exp 'SLASH' Exp
    action 'SEMI' (explicit left 9998):   reduce Exp --> Exp 'SLASH' Exp
    action 'COLON' (explicit left 9998):   reduce Exp --> Exp 'SLASH' Exp
    action 'LPAREN' (explicit left 9998):   reduce Exp --> Exp 'SLASH' Exp
    action 'RPAREN' (explicit left 9998):   reduce Exp --> Exp 'SLASH' Exp
    action 'LBRACKET' (explicit left 10000):   shift 118
    action 'RBRACKET' (explicit left 9998):   reduce Exp --> Exp 'SLASH' Exp
    action 'LITBOOL' (explicit left 9998):   reduce Exp --> Exp 'SLASH' Exp
    action 'LITINT' (explicit left 9998):   reduce Exp --> Exp 'SLASH' Exp
    action 'QLID' (explicit left 9998):   reduce Exp --> Exp 'SLASH' Exp
    action 'QUID' (explicit left 9998):   reduce Exp --> Exp 'SLASH' Exp
    action 'DLID' (explicit left 9998):   reduce Exp --> Exp 'SLASH' Exp
    action 'DUID' (explicit left 9998):   reduce Exp --> Exp 'SLASH' Exp
    action 'LID' (explicit left 9998):   reduce Exp --> Exp 'SLASH' Exp
    action 'UID' (explicit left 9998):   reduce Exp --> Exp 'SLASH' Exp
    action 'error' (explicit left 9998):   reduce Exp --> Exp 'SLASH' Exp
    action '#' (explicit left 9998):   reduce Exp --> Exp 'SLASH' Exp
    action '$$' (explicit left 9998):   reduce Exp --> Exp 'SLASH' Exp

  immediate action: <none>
 gotos:

state 71:
  items:
    Exp -> Exp . 'LTEQEQGT' Exp
    Exp -> Exp . 'EQEQGT' Exp
    Exp -> Exp . 'AMPAMP' Exp
    Exp -> Exp . 'BARBAR' Exp
    Exp -> Exp . 'EQEQ' Exp
    Exp -> Exp . 'NE' Exp
    Exp -> Exp . 'LT' Exp
    Exp -> Exp . 'GT' Exp
    Exp -> Exp . 'LE' Exp
    Exp -> Exp . 'GE' Exp
    Exp -> Exp . 'PLUS' Exp
    Exp -> Exp . 'MINUS' Exp
    Exp -> Exp . 'STAR' Exp
    Exp -> Exp . 'SLASH' Exp
    Exp -> Exp . 'PERCENT' Exp
    Exp -> Exp 'PERCENT' Exp . 
    Exp -> Exp . 'LBRACKET' Exps 'RBRACKET'
    Exp -> Exp . 'LBRACKET' Exps 'COLONEQ' Exp 'RBRACKET'

  actions:
    action 'EOF' (explicit left 9998):   reduce Exp --> Exp 'PERCENT' Exp
    action 'EAX' (explicit left 9998):   reduce Exp --> Exp 'PERCENT' Exp
    action 'EBX' (explicit left 9998):   reduce Exp --> Exp 'PERCENT' Exp
    action 'ECX' (explicit left 9998):   reduce Exp --> Exp 'PERCENT' Exp
    action 'EDX' (explicit left 9998):   reduce Exp --> Exp 'PERCENT' Exp
    action 'ESI' (explicit left 9998):   reduce Exp --> Exp 'PERCENT' Exp
    action 'EDI' (explicit left 9998):   reduce Exp --> Exp 'PERCENT' Exp
    action 'EBP' (explicit left 9998):   reduce Exp --> Exp 'PERCENT' Exp
    action 'ESP' (explicit left 9998):   reduce Exp --> Exp 'PERCENT' Exp
    action 'MODIFIES' (explicit left 9998):   reduce Exp --> Exp 'PERCENT' Exp
    action 'INVARIANT' (explicit left 9998):   reduce Exp --> Exp 'PERCENT' Exp
    action 'ASSERT' (explicit left 9998):   reduce Exp --> Exp 'PERCENT' Exp
    action 'HAVOC' (explicit left 9998):   reduce Exp --> Exp 'PERCENT' Exp
    action 'GOTO' (explicit left 9998):   reduce Exp --> Exp 'PERCENT' Exp
    action 'CALL' (explicit left 9998):   reduce Exp --> Exp 'PERCENT' Exp
    action 'CCALL' (explicit left 9998):   reduce Exp --> Exp 'PERCENT' Exp
    action 'RET' (explicit left 9998):   reduce Exp --> Exp 'PERCENT' Exp
    action 'IRET' (explicit left 9998):   reduce Exp --> Exp 'PERCENT' Exp
    action 'GO' (explicit left 9998):   reduce Exp --> Exp 'PERCENT' Exp
    action 'FORALL' (explicit left 9998):   reduce Exp --> Exp 'PERCENT' Exp
    action 'EXISTS' (explicit left 9998):   reduce Exp --> Exp 'PERCENT' Exp
    action 'OLD' (explicit left 9998):   reduce Exp --> Exp 'PERCENT' Exp
    action 'COLONCOLON' (explicit left 9998):   reduce Exp --> Exp 'PERCENT' Exp
    action 'EQEQGT' (explicit left 9998):   reduce Exp --> Exp 'PERCENT' Exp
    action 'LTEQEQGT' (explicit left 9998):   reduce Exp --> Exp 'PERCENT' Exp
    action 'TYPE' (explicit left 9998):   reduce Exp --> Exp 'PERCENT' Exp
    action 'CONST' (explicit left 9998):   reduce Exp --> Exp 'PERCENT' Exp
    action 'FUNCTION' (explicit left 9998):   reduce Exp --> Exp 'PERCENT' Exp
    action 'RETURNS' (explicit left 9998):   reduce Exp --> Exp 'PERCENT' Exp
    action 'AXIOM' (explicit left 9998):   reduce Exp --> Exp 'PERCENT' Exp
    action 'PROCEDURE' (explicit left 9998):   reduce Exp --> Exp 'PERCENT' Exp
    action 'IMPLEMENTATION' (explicit left 9998):   reduce Exp --> Exp 'PERCENT' Exp
    action 'REQUIRES' (explicit left 9998):   reduce Exp --> Exp 'PERCENT' Exp
    action 'ENSURES' (explicit left 9998):   reduce Exp --> Exp 'PERCENT' Exp
    action 'LT' (explicit left 9998):   reduce Exp --> Exp 'PERCENT' Exp
    action 'GT' (explicit left 9998):   reduce Exp --> Exp 'PERCENT' Exp
    action 'EQ' (explicit left 9998):   reduce Exp --> Exp 'PERCENT' Exp
    action 'BANG' (explicit left 9998):   reduce Exp --> Exp 'PERCENT' Exp
    action 'COMMA' (explicit left 9998):   reduce Exp --> Exp 'PERCENT' Exp
    action 'LE' (explicit left 9998):   reduce Exp --> Exp 'PERCENT' Exp
    action 'GE' (explicit left 9998):   reduce Exp --> Exp 'PERCENT' Exp
    action 'EQEQ' (explicit left 9998):   reduce Exp --> Exp 'PERCENT' Exp
    action 'NE' (explicit left 9998):   reduce Exp --> Exp 'PERCENT' Exp
    action 'PLUS' (explicit left 9998):   reduce Exp --> Exp 'PERCENT' Exp
    action 'MINUS' (explicit left 9998):   reduce Exp --> Exp 'PERCENT' Exp
    action 'STAR' (explicit left 9998):   reduce Exp --> Exp 'PERCENT' Exp
    action 'SLASH' (explicit left 9998):   reduce Exp --> Exp 'PERCENT' Exp
    action 'PERCENT' (explicit left 9998):   reduce Exp --> Exp 'PERCENT' Exp
    action 'AMPAMP' (explicit left 9998):   reduce Exp --> Exp 'PERCENT' Exp
    action 'BARBAR' (explicit left 9998):   reduce Exp --> Exp 'PERCENT' Exp
    action 'COLONEQ' (explicit left 9998):   reduce Exp --> Exp 'PERCENT' Exp
    action 'INT' (explicit left 9998):   reduce Exp --> Exp 'PERCENT' Exp
    action 'BOOL' (explicit left 9998):   reduce Exp --> Exp 'PERCENT' Exp
    action 'IF' (explicit left 9998):   reduce Exp --> Exp 'PERCENT' Exp
    action 'RETURN' (explicit left 9998):   reduce Exp --> Exp 'PERCENT' Exp
    action 'VAR' (explicit left 9998):   reduce Exp --> Exp 'PERCENT' Exp
    action 'LBRACE' (explicit left 9998):   reduce Exp --> Exp 'PERCENT' Exp
    action 'RBRACE' (explicit left 9998):   reduce Exp --> Exp 'PERCENT' Exp
    action 'SEMI' (explicit left 9998):   reduce Exp --> Exp 'PERCENT' Exp
    action 'COLON' (explicit left 9998):   reduce Exp --> Exp 'PERCENT' Exp
    action 'LPAREN' (explicit left 9998):   reduce Exp --> Exp 'PERCENT' Exp
    action 'RPAREN' (explicit left 9998):   reduce Exp --> Exp 'PERCENT' Exp
    action 'LBRACKET' (explicit left 10000):   shift 118
    action 'RBRACKET' (explicit left 9998):   reduce Exp --> Exp 'PERCENT' Exp
    action 'LITBOOL' (explicit left 9998):   reduce Exp --> Exp 'PERCENT' Exp
    action 'LITINT' (explicit left 9998):   reduce Exp --> Exp 'PERCENT' Exp
    action 'QLID' (explicit left 9998):   reduce Exp --> Exp 'PERCENT' Exp
    action 'QUID' (explicit left 9998):   reduce Exp --> Exp 'PERCENT' Exp
    action 'DLID' (explicit left 9998):   reduce Exp --> Exp 'PERCENT' Exp
    action 'DUID' (explicit left 9998):   reduce Exp --> Exp 'PERCENT' Exp
    action 'LID' (explicit left 9998):   reduce Exp --> Exp 'PERCENT' Exp
    action 'UID' (explicit left 9998):   reduce Exp --> Exp 'PERCENT' Exp
    action 'error' (explicit left 9998):   reduce Exp --> Exp 'PERCENT' Exp
    action '#' (explicit left 9998):   reduce Exp --> Exp 'PERCENT' Exp
    action '$$' (explicit left 9998):   reduce Exp --> Exp 'PERCENT' Exp

  immediate action: <none>
 gotos:

state 72:
  items:
    Exp -> Exp . 'LTEQEQGT' Exp
    Exp -> Exp . 'EQEQGT' Exp
    Exp -> Exp . 'AMPAMP' Exp
    Exp -> Exp . 'BARBAR' Exp
    Exp -> Exp . 'EQEQ' Exp
    Exp -> Exp . 'NE' Exp
    Exp -> Exp . 'LT' Exp
    Exp -> Exp . 'GT' Exp
    Exp -> Exp . 'LE' Exp
    Exp -> Exp . 'GE' Exp
    Exp -> Exp . 'PLUS' Exp
    Exp -> Exp . 'MINUS' Exp
    Exp -> Exp . 'STAR' Exp
    Exp -> Exp . 'SLASH' Exp
    Exp -> Exp . 'PERCENT' Exp
    Exp -> 'LPAREN' 'MINUS' Exp . 'RPAREN'
    Exp -> Exp . 'LBRACKET' Exps 'RBRACKET'
    Exp -> Exp . 'LBRACKET' Exps 'COLONEQ' Exp 'RBRACKET'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (explicit right 9994):   shift 91
    action 'LTEQEQGT' (explicit left 9993):   shift 90
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (explicit left 9996):   shift 96
    action 'GT' (explicit left 9996):   shift 97
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (explicit left 9996):   shift 98
    action 'GE' (explicit left 9996):   shift 99
    action 'EQEQ' (explicit left 9996):   shift 94
    action 'NE' (explicit left 9996):   shift 95
    action 'PLUS' (explicit left 9997):   shift 100
    action 'MINUS' (explicit left 9997):   shift 101
    action 'STAR' (explicit left 9998):   shift 102
    action 'SLASH' (explicit left 9998):   shift 103
    action 'PERCENT' (explicit left 9998):   shift 104
    action 'AMPAMP' (explicit left 9995):   shift 92
    action 'BARBAR' (explicit left 9995):   shift 93
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (explicit left 10000):   shift 106
    action 'LBRACKET' (explicit left 10000):   shift 118
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 73:
  items:
    Exp -> Exp . 'LTEQEQGT' Exp
    Exp -> Exp . 'EQEQGT' Exp
    Exp -> Exp . 'AMPAMP' Exp
    Exp -> Exp . 'BARBAR' Exp
    Exp -> Exp . 'EQEQ' Exp
    Exp -> Exp . 'NE' Exp
    Exp -> Exp . 'LT' Exp
    Exp -> Exp . 'GT' Exp
    Exp -> Exp . 'LE' Exp
    Exp -> Exp . 'GE' Exp
    Exp -> Exp . 'PLUS' Exp
    Exp -> Exp . 'MINUS' Exp
    Exp -> Exp . 'STAR' Exp
    Exp -> Exp . 'SLASH' Exp
    Exp -> Exp . 'PERCENT' Exp
    Exp -> 'BANG' Exp . 
    Exp -> Exp . 'LBRACKET' Exps 'RBRACKET'
    Exp -> Exp . 'LBRACKET' Exps 'COLONEQ' Exp 'RBRACKET'

  actions:
    action 'EOF' (explicit right 9999):   reduce Exp --> 'BANG' Exp
    action 'EAX' (explicit right 9999):   reduce Exp --> 'BANG' Exp
    action 'EBX' (explicit right 9999):   reduce Exp --> 'BANG' Exp
    action 'ECX' (explicit right 9999):   reduce Exp --> 'BANG' Exp
    action 'EDX' (explicit right 9999):   reduce Exp --> 'BANG' Exp
    action 'ESI' (explicit right 9999):   reduce Exp --> 'BANG' Exp
    action 'EDI' (explicit right 9999):   reduce Exp --> 'BANG' Exp
    action 'EBP' (explicit right 9999):   reduce Exp --> 'BANG' Exp
    action 'ESP' (explicit right 9999):   reduce Exp --> 'BANG' Exp
    action 'MODIFIES' (explicit right 9999):   reduce Exp --> 'BANG' Exp
    action 'INVARIANT' (explicit right 9999):   reduce Exp --> 'BANG' Exp
    action 'ASSERT' (explicit right 9999):   reduce Exp --> 'BANG' Exp
    action 'HAVOC' (explicit right 9999):   reduce Exp --> 'BANG' Exp
    action 'GOTO' (explicit right 9999):   reduce Exp --> 'BANG' Exp
    action 'CALL' (explicit right 9999):   reduce Exp --> 'BANG' Exp
    action 'CCALL' (explicit right 9999):   reduce Exp --> 'BANG' Exp
    action 'RET' (explicit right 9999):   reduce Exp --> 'BANG' Exp
    action 'IRET' (explicit right 9999):   reduce Exp --> 'BANG' Exp
    action 'GO' (explicit right 9999):   reduce Exp --> 'BANG' Exp
    action 'FORALL' (explicit right 9999):   reduce Exp --> 'BANG' Exp
    action 'EXISTS' (explicit right 9999):   reduce Exp --> 'BANG' Exp
    action 'OLD' (explicit right 9999):   reduce Exp --> 'BANG' Exp
    action 'COLONCOLON' (explicit right 9999):   reduce Exp --> 'BANG' Exp
    action 'EQEQGT' (explicit right 9999):   reduce Exp --> 'BANG' Exp
    action 'LTEQEQGT' (explicit right 9999):   reduce Exp --> 'BANG' Exp
    action 'TYPE' (explicit right 9999):   reduce Exp --> 'BANG' Exp
    action 'CONST' (explicit right 9999):   reduce Exp --> 'BANG' Exp
    action 'FUNCTION' (explicit right 9999):   reduce Exp --> 'BANG' Exp
    action 'RETURNS' (explicit right 9999):   reduce Exp --> 'BANG' Exp
    action 'AXIOM' (explicit right 9999):   reduce Exp --> 'BANG' Exp
    action 'PROCEDURE' (explicit right 9999):   reduce Exp --> 'BANG' Exp
    action 'IMPLEMENTATION' (explicit right 9999):   reduce Exp --> 'BANG' Exp
    action 'REQUIRES' (explicit right 9999):   reduce Exp --> 'BANG' Exp
    action 'ENSURES' (explicit right 9999):   reduce Exp --> 'BANG' Exp
    action 'LT' (explicit right 9999):   reduce Exp --> 'BANG' Exp
    action 'GT' (explicit right 9999):   reduce Exp --> 'BANG' Exp
    action 'EQ' (explicit right 9999):   reduce Exp --> 'BANG' Exp
    action 'BANG' (explicit right 9999):   reduce Exp --> 'BANG' Exp
    action 'COMMA' (explicit right 9999):   reduce Exp --> 'BANG' Exp
    action 'LE' (explicit right 9999):   reduce Exp --> 'BANG' Exp
    action 'GE' (explicit right 9999):   reduce Exp --> 'BANG' Exp
    action 'EQEQ' (explicit right 9999):   reduce Exp --> 'BANG' Exp
    action 'NE' (explicit right 9999):   reduce Exp --> 'BANG' Exp
    action 'PLUS' (explicit right 9999):   reduce Exp --> 'BANG' Exp
    action 'MINUS' (explicit right 9999):   reduce Exp --> 'BANG' Exp
    action 'STAR' (explicit right 9999):   reduce Exp --> 'BANG' Exp
    action 'SLASH' (explicit right 9999):   reduce Exp --> 'BANG' Exp
    action 'PERCENT' (explicit right 9999):   reduce Exp --> 'BANG' Exp
    action 'AMPAMP' (explicit right 9999):   reduce Exp --> 'BANG' Exp
    action 'BARBAR' (explicit right 9999):   reduce Exp --> 'BANG' Exp
    action 'COLONEQ' (explicit right 9999):   reduce Exp --> 'BANG' Exp
    action 'INT' (explicit right 9999):   reduce Exp --> 'BANG' Exp
    action 'BOOL' (explicit right 9999):   reduce Exp --> 'BANG' Exp
    action 'IF' (explicit right 9999):   reduce Exp --> 'BANG' Exp
    action 'RETURN' (explicit right 9999):   reduce Exp --> 'BANG' Exp
    action 'VAR' (explicit right 9999):   reduce Exp --> 'BANG' Exp
    action 'LBRACE' (explicit right 9999):   reduce Exp --> 'BANG' Exp
    action 'RBRACE' (explicit right 9999):   reduce Exp --> 'BANG' Exp
    action 'SEMI' (explicit right 9999):   reduce Exp --> 'BANG' Exp
    action 'COLON' (explicit right 9999):   reduce Exp --> 'BANG' Exp
    action 'LPAREN' (explicit right 9999):   reduce Exp --> 'BANG' Exp
    action 'RPAREN' (explicit right 9999):   reduce Exp --> 'BANG' Exp
    action 'LBRACKET' (explicit left 10000):   shift 118
    action 'RBRACKET' (explicit right 9999):   reduce Exp --> 'BANG' Exp
    action 'LITBOOL' (explicit right 9999):   reduce Exp --> 'BANG' Exp
    action 'LITINT' (explicit right 9999):   reduce Exp --> 'BANG' Exp
    action 'QLID' (explicit right 9999):   reduce Exp --> 'BANG' Exp
    action 'QUID' (explicit right 9999):   reduce Exp --> 'BANG' Exp
    action 'DLID' (explicit right 9999):   reduce Exp --> 'BANG' Exp
    action 'DUID' (explicit right 9999):   reduce Exp --> 'BANG' Exp
    action 'LID' (explicit right 9999):   reduce Exp --> 'BANG' Exp
    action 'UID' (explicit right 9999):   reduce Exp --> 'BANG' Exp
    action 'error' (explicit right 9999):   reduce Exp --> 'BANG' Exp
    action '#' (explicit right 9999):   reduce Exp --> 'BANG' Exp
    action '$$' (explicit right 9999):   reduce Exp --> 'BANG' Exp

  immediate action: <none>
 gotos:

state 74:
  items:
    Exp -> Exp . 'LTEQEQGT' Exp
    Exp -> Exp . 'EQEQGT' Exp
    Exp -> Exp . 'AMPAMP' Exp
    Exp -> Exp . 'BARBAR' Exp
    Exp -> Exp . 'EQEQ' Exp
    Exp -> Exp . 'NE' Exp
    Exp -> Exp . 'LT' Exp
    Exp -> Exp . 'GT' Exp
    Exp -> Exp . 'LE' Exp
    Exp -> Exp . 'GE' Exp
    Exp -> Exp . 'PLUS' Exp
    Exp -> Exp . 'MINUS' Exp
    Exp -> Exp . 'STAR' Exp
    Exp -> Exp . 'SLASH' Exp
    Exp -> Exp . 'PERCENT' Exp
    Exp -> 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers Exp . 'RPAREN'
    Exp -> Exp . 'LBRACKET' Exps 'RBRACKET'
    Exp -> Exp . 'LBRACKET' Exps 'COLONEQ' Exp 'RBRACKET'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (explicit right 9994):   shift 91
    action 'LTEQEQGT' (explicit left 9993):   shift 90
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (explicit left 9996):   shift 96
    action 'GT' (explicit left 9996):   shift 97
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (explicit left 9996):   shift 98
    action 'GE' (explicit left 9996):   shift 99
    action 'EQEQ' (explicit left 9996):   shift 94
    action 'NE' (explicit left 9996):   shift 95
    action 'PLUS' (explicit left 9997):   shift 100
    action 'MINUS' (explicit left 9997):   shift 101
    action 'STAR' (explicit left 9998):   shift 102
    action 'SLASH' (explicit left 9998):   shift 103
    action 'PERCENT' (explicit left 9998):   shift 104
    action 'AMPAMP' (explicit left 9995):   shift 92
    action 'BARBAR' (explicit left 9995):   shift 93
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (explicit left 10000):   shift 112
    action 'LBRACKET' (explicit left 10000):   shift 118
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 75:
  items:
    Exp -> Exp . 'LTEQEQGT' Exp
    Exp -> Exp . 'EQEQGT' Exp
    Exp -> Exp . 'AMPAMP' Exp
    Exp -> Exp . 'BARBAR' Exp
    Exp -> Exp . 'EQEQ' Exp
    Exp -> Exp . 'NE' Exp
    Exp -> Exp . 'LT' Exp
    Exp -> Exp . 'GT' Exp
    Exp -> Exp . 'LE' Exp
    Exp -> Exp . 'GE' Exp
    Exp -> Exp . 'PLUS' Exp
    Exp -> Exp . 'MINUS' Exp
    Exp -> Exp . 'STAR' Exp
    Exp -> Exp . 'SLASH' Exp
    Exp -> Exp . 'PERCENT' Exp
    Exp -> 'LPAREN' 'EXISTS' Formals 'COLONCOLON' Triggers Exp . 'RPAREN'
    Exp -> Exp . 'LBRACKET' Exps 'RBRACKET'
    Exp -> Exp . 'LBRACKET' Exps 'COLONEQ' Exp 'RBRACKET'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (explicit right 9994):   shift 91
    action 'LTEQEQGT' (explicit left 9993):   shift 90
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (explicit left 9996):   shift 96
    action 'GT' (explicit left 9996):   shift 97
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (explicit left 9996):   shift 98
    action 'GE' (explicit left 9996):   shift 99
    action 'EQEQ' (explicit left 9996):   shift 94
    action 'NE' (explicit left 9996):   shift 95
    action 'PLUS' (explicit left 9997):   shift 100
    action 'MINUS' (explicit left 9997):   shift 101
    action 'STAR' (explicit left 9998):   shift 102
    action 'SLASH' (explicit left 9998):   shift 103
    action 'PERCENT' (explicit left 9998):   shift 104
    action 'AMPAMP' (explicit left 9995):   shift 92
    action 'BARBAR' (explicit left 9995):   shift 93
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (explicit left 10000):   shift 117
    action 'LBRACKET' (explicit left 10000):   shift 118
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 76:
  items:
    Exp -> Exp . 'LTEQEQGT' Exp
    Exp -> Exp . 'EQEQGT' Exp
    Exp -> Exp . 'AMPAMP' Exp
    Exp -> Exp . 'BARBAR' Exp
    Exp -> Exp . 'EQEQ' Exp
    Exp -> Exp . 'NE' Exp
    Exp -> Exp . 'LT' Exp
    Exp -> Exp . 'GT' Exp
    Exp -> Exp . 'LE' Exp
    Exp -> Exp . 'GE' Exp
    Exp -> Exp . 'PLUS' Exp
    Exp -> Exp . 'MINUS' Exp
    Exp -> Exp . 'STAR' Exp
    Exp -> Exp . 'SLASH' Exp
    Exp -> Exp . 'PERCENT' Exp
    Exp -> Exp . 'LBRACKET' Exps 'RBRACKET'
    Exp -> Exp . 'LBRACKET' Exps 'COLONEQ' Exp 'RBRACKET'
    Exp -> Exp 'LBRACKET' Exps 'COLONEQ' Exp . 'RBRACKET'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (explicit right 9994):   shift 91
    action 'LTEQEQGT' (explicit left 9993):   shift 90
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (explicit left 9996):   shift 96
    action 'GT' (explicit left 9996):   shift 97
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (explicit left 9996):   shift 98
    action 'GE' (explicit left 9996):   shift 99
    action 'EQEQ' (explicit left 9996):   shift 94
    action 'NE' (explicit left 9996):   shift 95
    action 'PLUS' (explicit left 9997):   shift 100
    action 'MINUS' (explicit left 9997):   shift 101
    action 'STAR' (explicit left 9998):   shift 102
    action 'SLASH' (explicit left 9998):   shift 103
    action 'PERCENT' (explicit left 9998):   shift 104
    action 'AMPAMP' (explicit left 9995):   shift 92
    action 'BARBAR' (explicit left 9995):   shift 93
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (explicit left 10000):   shift 118
    action 'RBRACKET' (explicit left 10000):   shift 122
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 77:
  items:
    Exp -> Exp . 'LTEQEQGT' Exp
    Exp -> Exp . 'EQEQGT' Exp
    Exp -> Exp . 'AMPAMP' Exp
    Exp -> Exp . 'BARBAR' Exp
    Exp -> Exp . 'EQEQ' Exp
    Exp -> Exp . 'NE' Exp
    Exp -> Exp . 'LT' Exp
    Exp -> Exp . 'GT' Exp
    Exp -> Exp . 'LE' Exp
    Exp -> Exp . 'GE' Exp
    Exp -> Exp . 'PLUS' Exp
    Exp -> Exp . 'MINUS' Exp
    Exp -> Exp . 'STAR' Exp
    Exp -> Exp . 'SLASH' Exp
    Exp -> Exp . 'PERCENT' Exp
    Exp -> Exp . 'LBRACKET' Exps 'RBRACKET'
    Exp -> Exp . 'LBRACKET' Exps 'COLONEQ' Exp 'RBRACKET'
    Exp -> 'OLD' 'LPAREN' Exp . 'RPAREN'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (explicit right 9994):   shift 91
    action 'LTEQEQGT' (explicit left 9993):   shift 90
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (explicit left 9996):   shift 96
    action 'GT' (explicit left 9996):   shift 97
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (explicit left 9996):   shift 98
    action 'GE' (explicit left 9996):   shift 99
    action 'EQEQ' (explicit left 9996):   shift 94
    action 'NE' (explicit left 9996):   shift 95
    action 'PLUS' (explicit left 9997):   shift 100
    action 'MINUS' (explicit left 9997):   shift 101
    action 'STAR' (explicit left 9998):   shift 102
    action 'SLASH' (explicit left 9998):   shift 103
    action 'PERCENT' (explicit left 9998):   shift 104
    action 'AMPAMP' (explicit left 9995):   shift 92
    action 'BARBAR' (explicit left 9995):   shift 93
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (explicit left 10000):   shift 127
    action 'LBRACKET' (explicit left 10000):   shift 118
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 78:
  items:
    Exp -> Exp . 'LTEQEQGT' Exp
    Exp -> Exp . 'EQEQGT' Exp
    Exp -> Exp . 'AMPAMP' Exp
    Exp -> Exp . 'BARBAR' Exp
    Exp -> Exp . 'EQEQ' Exp
    Exp -> Exp . 'NE' Exp
    Exp -> Exp . 'LT' Exp
    Exp -> Exp . 'GT' Exp
    Exp -> Exp . 'LE' Exp
    Exp -> Exp . 'GE' Exp
    Exp -> Exp . 'PLUS' Exp
    Exp -> Exp . 'MINUS' Exp
    Exp -> Exp . 'STAR' Exp
    Exp -> Exp . 'SLASH' Exp
    Exp -> Exp . 'PERCENT' Exp
    Exp -> Exp . 'LBRACKET' Exps 'RBRACKET'
    Exp -> Exp . 'LBRACKET' Exps 'COLONEQ' Exp 'RBRACKET'
    Exps -> Exp . 
    Exps -> Exp . 'COMMA' Exps

  actions:
    action 'EOF' (noprec):   reduce Exps --> Exp
    action 'EAX' (noprec):   reduce Exps --> Exp
    action 'EBX' (noprec):   reduce Exps --> Exp
    action 'ECX' (noprec):   reduce Exps --> Exp
    action 'EDX' (noprec):   reduce Exps --> Exp
    action 'ESI' (noprec):   reduce Exps --> Exp
    action 'EDI' (noprec):   reduce Exps --> Exp
    action 'EBP' (noprec):   reduce Exps --> Exp
    action 'ESP' (noprec):   reduce Exps --> Exp
    action 'MODIFIES' (noprec):   reduce Exps --> Exp
    action 'INVARIANT' (noprec):   reduce Exps --> Exp
    action 'ASSERT' (noprec):   reduce Exps --> Exp
    action 'HAVOC' (noprec):   reduce Exps --> Exp
    action 'GOTO' (noprec):   reduce Exps --> Exp
    action 'CALL' (noprec):   reduce Exps --> Exp
    action 'CCALL' (noprec):   reduce Exps --> Exp
    action 'RET' (noprec):   reduce Exps --> Exp
    action 'IRET' (noprec):   reduce Exps --> Exp
    action 'GO' (noprec):   reduce Exps --> Exp
    action 'FORALL' (noprec):   reduce Exps --> Exp
    action 'EXISTS' (noprec):   reduce Exps --> Exp
    action 'OLD' (noprec):   reduce Exps --> Exp
    action 'COLONCOLON' (noprec):   reduce Exps --> Exp
    action 'EQEQGT' (explicit right 9994):   shift 91
    action 'LTEQEQGT' (explicit left 9993):   shift 90
    action 'TYPE' (noprec):   reduce Exps --> Exp
    action 'CONST' (noprec):   reduce Exps --> Exp
    action 'FUNCTION' (noprec):   reduce Exps --> Exp
    action 'RETURNS' (noprec):   reduce Exps --> Exp
    action 'AXIOM' (noprec):   reduce Exps --> Exp
    action 'PROCEDURE' (noprec):   reduce Exps --> Exp
    action 'IMPLEMENTATION' (noprec):   reduce Exps --> Exp
    action 'REQUIRES' (noprec):   reduce Exps --> Exp
    action 'ENSURES' (noprec):   reduce Exps --> Exp
    action 'LT' (explicit left 9996):   shift 96
    action 'GT' (explicit left 9996):   shift 97
    action 'EQ' (noprec):   reduce Exps --> Exp
    action 'BANG' (noprec):   reduce Exps --> Exp
    action 'COMMA' (noprec):   shift 133
    action 'LE' (explicit left 9996):   shift 98
    action 'GE' (explicit left 9996):   shift 99
    action 'EQEQ' (explicit left 9996):   shift 94
    action 'NE' (explicit left 9996):   shift 95
    action 'PLUS' (explicit left 9997):   shift 100
    action 'MINUS' (explicit left 9997):   shift 101
    action 'STAR' (explicit left 9998):   shift 102
    action 'SLASH' (explicit left 9998):   shift 103
    action 'PERCENT' (explicit left 9998):   shift 104
    action 'AMPAMP' (explicit left 9995):   shift 92
    action 'BARBAR' (explicit left 9995):   shift 93
    action 'COLONEQ' (noprec):   reduce Exps --> Exp
    action 'INT' (noprec):   reduce Exps --> Exp
    action 'BOOL' (noprec):   reduce Exps --> Exp
    action 'IF' (noprec):   reduce Exps --> Exp
    action 'RETURN' (noprec):   reduce Exps --> Exp
    action 'VAR' (noprec):   reduce Exps --> Exp
    action 'LBRACE' (noprec):   reduce Exps --> Exp
    action 'RBRACE' (noprec):   reduce Exps --> Exp
    action 'SEMI' (noprec):   reduce Exps --> Exp
    action 'COLON' (noprec):   reduce Exps --> Exp
    action 'LPAREN' (noprec):   reduce Exps --> Exp
    action 'RPAREN' (noprec):   reduce Exps --> Exp
    action 'LBRACKET' (explicit left 10000):   shift 118
    action 'RBRACKET' (noprec):   reduce Exps --> Exp
    action 'LITBOOL' (noprec):   reduce Exps --> Exp
    action 'LITINT' (noprec):   reduce Exps --> Exp
    action 'QLID' (noprec):   reduce Exps --> Exp
    action 'QUID' (noprec):   reduce Exps --> Exp
    action 'DLID' (noprec):   reduce Exps --> Exp
    action 'DUID' (noprec):   reduce Exps --> Exp
    action 'LID' (noprec):   reduce Exps --> Exp
    action 'UID' (noprec):   reduce Exps --> Exp
    action 'error' (noprec):   reduce Exps --> Exp
    action '#' (noprec):   reduce Exps --> Exp
    action '$$' (noprec):   reduce Exps --> Exp

  immediate action: <none>
 gotos:

state 79:
  items:
    Exp -> Exp . 'LTEQEQGT' Exp
    Exp -> Exp . 'EQEQGT' Exp
    Exp -> Exp . 'AMPAMP' Exp
    Exp -> Exp . 'BARBAR' Exp
    Exp -> Exp . 'EQEQ' Exp
    Exp -> Exp . 'NE' Exp
    Exp -> Exp . 'LT' Exp
    Exp -> Exp . 'GT' Exp
    Exp -> Exp . 'LE' Exp
    Exp -> Exp . 'GE' Exp
    Exp -> Exp . 'PLUS' Exp
    Exp -> Exp . 'MINUS' Exp
    Exp -> Exp . 'STAR' Exp
    Exp -> Exp . 'SLASH' Exp
    Exp -> Exp . 'PERCENT' Exp
    Exp -> Exp . 'LBRACKET' Exps 'RBRACKET'
    Exp -> Exp . 'LBRACKET' Exps 'COLONEQ' Exp 'RBRACKET'
    Stmt -> 'ASSERT' Exp . 'SEMI'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (explicit right 9994):   shift 91
    action 'LTEQEQGT' (explicit left 9993):   shift 90
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (explicit left 9996):   shift 96
    action 'GT' (explicit left 9996):   shift 97
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (explicit left 9996):   shift 98
    action 'GE' (explicit left 9996):   shift 99
    action 'EQEQ' (explicit left 9996):   shift 94
    action 'NE' (explicit left 9996):   shift 95
    action 'PLUS' (explicit left 9997):   shift 100
    action 'MINUS' (explicit left 9997):   shift 101
    action 'STAR' (explicit left 9998):   shift 102
    action 'SLASH' (explicit left 9998):   shift 103
    action 'PERCENT' (explicit left 9998):   shift 104
    action 'AMPAMP' (explicit left 9995):   shift 92
    action 'BARBAR' (explicit left 9995):   shift 93
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   shift 184
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (explicit left 10000):   shift 118
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 80:
  items:
    Exp -> Exp . 'LTEQEQGT' Exp
    Exp -> Exp . 'EQEQGT' Exp
    Exp -> Exp . 'AMPAMP' Exp
    Exp -> Exp . 'BARBAR' Exp
    Exp -> Exp . 'EQEQ' Exp
    Exp -> Exp . 'NE' Exp
    Exp -> Exp . 'LT' Exp
    Exp -> Exp . 'GT' Exp
    Exp -> Exp . 'LE' Exp
    Exp -> Exp . 'GE' Exp
    Exp -> Exp . 'PLUS' Exp
    Exp -> Exp . 'MINUS' Exp
    Exp -> Exp . 'STAR' Exp
    Exp -> Exp . 'SLASH' Exp
    Exp -> Exp . 'PERCENT' Exp
    Exp -> Exp . 'LBRACKET' Exps 'RBRACKET'
    Exp -> Exp . 'LBRACKET' Exps 'COLONEQ' Exp 'RBRACKET'
    Stmt -> 'DLID' 'COLONEQ' Exp . 'SEMI'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (explicit right 9994):   shift 91
    action 'LTEQEQGT' (explicit left 9993):   shift 90
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (explicit left 9996):   shift 96
    action 'GT' (explicit left 9996):   shift 97
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (explicit left 9996):   shift 98
    action 'GE' (explicit left 9996):   shift 99
    action 'EQEQ' (explicit left 9996):   shift 94
    action 'NE' (explicit left 9996):   shift 95
    action 'PLUS' (explicit left 9997):   shift 100
    action 'MINUS' (explicit left 9997):   shift 101
    action 'STAR' (explicit left 9998):   shift 102
    action 'SLASH' (explicit left 9998):   shift 103
    action 'PERCENT' (explicit left 9998):   shift 104
    action 'AMPAMP' (explicit left 9995):   shift 92
    action 'BARBAR' (explicit left 9995):   shift 93
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   shift 187
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (explicit left 10000):   shift 118
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 81:
  items:
    Exp -> Exp . 'LTEQEQGT' Exp
    Exp -> Exp . 'EQEQGT' Exp
    Exp -> Exp . 'AMPAMP' Exp
    Exp -> Exp . 'BARBAR' Exp
    Exp -> Exp . 'EQEQ' Exp
    Exp -> Exp . 'NE' Exp
    Exp -> Exp . 'LT' Exp
    Exp -> Exp . 'GT' Exp
    Exp -> Exp . 'LE' Exp
    Exp -> Exp . 'GE' Exp
    Exp -> Exp . 'PLUS' Exp
    Exp -> Exp . 'MINUS' Exp
    Exp -> Exp . 'STAR' Exp
    Exp -> Exp . 'SLASH' Exp
    Exp -> Exp . 'PERCENT' Exp
    Exp -> Exp . 'LBRACKET' Exps 'RBRACKET'
    Exp -> Exp . 'LBRACKET' Exps 'COLONEQ' Exp 'RBRACKET'
    Stmt -> 'DLID' 'LBRACKET' Exp . 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    Stmt -> 'DLID' 'LBRACKET' Exp . 'COMMA' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (explicit right 9994):   shift 91
    action 'LTEQEQGT' (explicit left 9993):   shift 90
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (explicit left 9996):   shift 96
    action 'GT' (explicit left 9996):   shift 97
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   shift 192
    action 'LE' (explicit left 9996):   shift 98
    action 'GE' (explicit left 9996):   shift 99
    action 'EQEQ' (explicit left 9996):   shift 94
    action 'NE' (explicit left 9996):   shift 95
    action 'PLUS' (explicit left 9997):   shift 100
    action 'MINUS' (explicit left 9997):   shift 101
    action 'STAR' (explicit left 9998):   shift 102
    action 'SLASH' (explicit left 9998):   shift 103
    action 'PERCENT' (explicit left 9998):   shift 104
    action 'AMPAMP' (explicit left 9995):   shift 92
    action 'BARBAR' (explicit left 9995):   shift 93
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (explicit left 10000):   shift 118
    action 'RBRACKET' (explicit left 10000):   shift 189
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 82:
  items:
    Exp -> Exp . 'LTEQEQGT' Exp
    Exp -> Exp . 'EQEQGT' Exp
    Exp -> Exp . 'AMPAMP' Exp
    Exp -> Exp . 'BARBAR' Exp
    Exp -> Exp . 'EQEQ' Exp
    Exp -> Exp . 'NE' Exp
    Exp -> Exp . 'LT' Exp
    Exp -> Exp . 'GT' Exp
    Exp -> Exp . 'LE' Exp
    Exp -> Exp . 'GE' Exp
    Exp -> Exp . 'PLUS' Exp
    Exp -> Exp . 'MINUS' Exp
    Exp -> Exp . 'STAR' Exp
    Exp -> Exp . 'SLASH' Exp
    Exp -> Exp . 'PERCENT' Exp
    Exp -> Exp . 'LBRACKET' Exps 'RBRACKET'
    Exp -> Exp . 'LBRACKET' Exps 'COLONEQ' Exp 'RBRACKET'
    Stmt -> 'DLID' 'LBRACKET' Exp 'RBRACKET' 'COLONEQ' Exp . 'SEMI'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (explicit right 9994):   shift 91
    action 'LTEQEQGT' (explicit left 9993):   shift 90
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (explicit left 9996):   shift 96
    action 'GT' (explicit left 9996):   shift 97
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (explicit left 9996):   shift 98
    action 'GE' (explicit left 9996):   shift 99
    action 'EQEQ' (explicit left 9996):   shift 94
    action 'NE' (explicit left 9996):   shift 95
    action 'PLUS' (explicit left 9997):   shift 100
    action 'MINUS' (explicit left 9997):   shift 101
    action 'STAR' (explicit left 9998):   shift 102
    action 'SLASH' (explicit left 9998):   shift 103
    action 'PERCENT' (explicit left 9998):   shift 104
    action 'AMPAMP' (explicit left 9995):   shift 92
    action 'BARBAR' (explicit left 9995):   shift 93
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   shift 191
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (explicit left 10000):   shift 118
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 83:
  items:
    Exp -> Exp . 'LTEQEQGT' Exp
    Exp -> Exp . 'EQEQGT' Exp
    Exp -> Exp . 'AMPAMP' Exp
    Exp -> Exp . 'BARBAR' Exp
    Exp -> Exp . 'EQEQ' Exp
    Exp -> Exp . 'NE' Exp
    Exp -> Exp . 'LT' Exp
    Exp -> Exp . 'GT' Exp
    Exp -> Exp . 'LE' Exp
    Exp -> Exp . 'GE' Exp
    Exp -> Exp . 'PLUS' Exp
    Exp -> Exp . 'MINUS' Exp
    Exp -> Exp . 'STAR' Exp
    Exp -> Exp . 'SLASH' Exp
    Exp -> Exp . 'PERCENT' Exp
    Exp -> Exp . 'LBRACKET' Exps 'RBRACKET'
    Exp -> Exp . 'LBRACKET' Exps 'COLONEQ' Exp 'RBRACKET'
    Stmt -> 'DLID' 'LBRACKET' Exp 'COMMA' Exp . 'RBRACKET' 'COLONEQ' Exp 'SEMI'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (explicit right 9994):   shift 91
    action 'LTEQEQGT' (explicit left 9993):   shift 90
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (explicit left 9996):   shift 96
    action 'GT' (explicit left 9996):   shift 97
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (explicit left 9996):   shift 98
    action 'GE' (explicit left 9996):   shift 99
    action 'EQEQ' (explicit left 9996):   shift 94
    action 'NE' (explicit left 9996):   shift 95
    action 'PLUS' (explicit left 9997):   shift 100
    action 'MINUS' (explicit left 9997):   shift 101
    action 'STAR' (explicit left 9998):   shift 102
    action 'SLASH' (explicit left 9998):   shift 103
    action 'PERCENT' (explicit left 9998):   shift 104
    action 'AMPAMP' (explicit left 9995):   shift 92
    action 'BARBAR' (explicit left 9995):   shift 93
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (explicit left 10000):   shift 118
    action 'RBRACKET' (explicit left 10000):   shift 193
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 84:
  items:
    Exp -> Exp . 'LTEQEQGT' Exp
    Exp -> Exp . 'EQEQGT' Exp
    Exp -> Exp . 'AMPAMP' Exp
    Exp -> Exp . 'BARBAR' Exp
    Exp -> Exp . 'EQEQ' Exp
    Exp -> Exp . 'NE' Exp
    Exp -> Exp . 'LT' Exp
    Exp -> Exp . 'GT' Exp
    Exp -> Exp . 'LE' Exp
    Exp -> Exp . 'GE' Exp
    Exp -> Exp . 'PLUS' Exp
    Exp -> Exp . 'MINUS' Exp
    Exp -> Exp . 'STAR' Exp
    Exp -> Exp . 'SLASH' Exp
    Exp -> Exp . 'PERCENT' Exp
    Exp -> Exp . 'LBRACKET' Exps 'RBRACKET'
    Exp -> Exp . 'LBRACKET' Exps 'COLONEQ' Exp 'RBRACKET'
    Stmt -> 'DLID' 'LBRACKET' Exp 'COMMA' Exp 'RBRACKET' 'COLONEQ' Exp . 'SEMI'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (explicit right 9994):   shift 91
    action 'LTEQEQGT' (explicit left 9993):   shift 90
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (explicit left 9996):   shift 96
    action 'GT' (explicit left 9996):   shift 97
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (explicit left 9996):   shift 98
    action 'GE' (explicit left 9996):   shift 99
    action 'EQEQ' (explicit left 9996):   shift 94
    action 'NE' (explicit left 9996):   shift 95
    action 'PLUS' (explicit left 9997):   shift 100
    action 'MINUS' (explicit left 9997):   shift 101
    action 'STAR' (explicit left 9998):   shift 102
    action 'SLASH' (explicit left 9998):   shift 103
    action 'PERCENT' (explicit left 9998):   shift 104
    action 'AMPAMP' (explicit left 9995):   shift 92
    action 'BARBAR' (explicit left 9995):   shift 93
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   shift 195
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (explicit left 10000):   shift 118
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 85:
  items:
    Exp -> Exp . 'LTEQEQGT' Exp
    Exp -> Exp . 'EQEQGT' Exp
    Exp -> Exp . 'AMPAMP' Exp
    Exp -> Exp . 'BARBAR' Exp
    Exp -> Exp . 'EQEQ' Exp
    Exp -> Exp . 'NE' Exp
    Exp -> Exp . 'LT' Exp
    Exp -> Exp . 'GT' Exp
    Exp -> Exp . 'LE' Exp
    Exp -> Exp . 'GE' Exp
    Exp -> Exp . 'PLUS' Exp
    Exp -> Exp . 'MINUS' Exp
    Exp -> Exp . 'STAR' Exp
    Exp -> Exp . 'SLASH' Exp
    Exp -> Exp . 'PERCENT' Exp
    Exp -> Exp . 'LBRACKET' Exps 'RBRACKET'
    Exp -> Exp . 'LBRACKET' Exps 'COLONEQ' Exp 'RBRACKET'
    Spec -> 'REQUIRES' Exp . 'SEMI'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (explicit right 9994):   shift 91
    action 'LTEQEQGT' (explicit left 9993):   shift 90
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (explicit left 9996):   shift 96
    action 'GT' (explicit left 9996):   shift 97
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (explicit left 9996):   shift 98
    action 'GE' (explicit left 9996):   shift 99
    action 'EQEQ' (explicit left 9996):   shift 94
    action 'NE' (explicit left 9996):   shift 95
    action 'PLUS' (explicit left 9997):   shift 100
    action 'MINUS' (explicit left 9997):   shift 101
    action 'STAR' (explicit left 9998):   shift 102
    action 'SLASH' (explicit left 9998):   shift 103
    action 'PERCENT' (explicit left 9998):   shift 104
    action 'AMPAMP' (explicit left 9995):   shift 92
    action 'BARBAR' (explicit left 9995):   shift 93
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   shift 288
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (explicit left 10000):   shift 118
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 86:
  items:
    Exp -> Exp . 'LTEQEQGT' Exp
    Exp -> Exp . 'EQEQGT' Exp
    Exp -> Exp . 'AMPAMP' Exp
    Exp -> Exp . 'BARBAR' Exp
    Exp -> Exp . 'EQEQ' Exp
    Exp -> Exp . 'NE' Exp
    Exp -> Exp . 'LT' Exp
    Exp -> Exp . 'GT' Exp
    Exp -> Exp . 'LE' Exp
    Exp -> Exp . 'GE' Exp
    Exp -> Exp . 'PLUS' Exp
    Exp -> Exp . 'MINUS' Exp
    Exp -> Exp . 'STAR' Exp
    Exp -> Exp . 'SLASH' Exp
    Exp -> Exp . 'PERCENT' Exp
    Exp -> Exp . 'LBRACKET' Exps 'RBRACKET'
    Exp -> Exp . 'LBRACKET' Exps 'COLONEQ' Exp 'RBRACKET'
    Spec -> 'ENSURES' Exp . 'SEMI'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (explicit right 9994):   shift 91
    action 'LTEQEQGT' (explicit left 9993):   shift 90
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (explicit left 9996):   shift 96
    action 'GT' (explicit left 9996):   shift 97
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (explicit left 9996):   shift 98
    action 'GE' (explicit left 9996):   shift 99
    action 'EQEQ' (explicit left 9996):   shift 94
    action 'NE' (explicit left 9996):   shift 95
    action 'PLUS' (explicit left 9997):   shift 100
    action 'MINUS' (explicit left 9997):   shift 101
    action 'STAR' (explicit left 9998):   shift 102
    action 'SLASH' (explicit left 9998):   shift 103
    action 'PERCENT' (explicit left 9998):   shift 104
    action 'AMPAMP' (explicit left 9995):   shift 92
    action 'BARBAR' (explicit left 9995):   shift 93
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   shift 290
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (explicit left 10000):   shift 118
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 87:
  items:
    Exp -> Exp . 'LTEQEQGT' Exp
    Exp -> Exp . 'EQEQGT' Exp
    Exp -> Exp . 'AMPAMP' Exp
    Exp -> Exp . 'BARBAR' Exp
    Exp -> Exp . 'EQEQ' Exp
    Exp -> Exp . 'NE' Exp
    Exp -> Exp . 'LT' Exp
    Exp -> Exp . 'GT' Exp
    Exp -> Exp . 'LE' Exp
    Exp -> Exp . 'GE' Exp
    Exp -> Exp . 'PLUS' Exp
    Exp -> Exp . 'MINUS' Exp
    Exp -> Exp . 'STAR' Exp
    Exp -> Exp . 'SLASH' Exp
    Exp -> Exp . 'PERCENT' Exp
    Exp -> Exp . 'LBRACKET' Exps 'RBRACKET'
    Exp -> Exp . 'LBRACKET' Exps 'COLONEQ' Exp 'RBRACKET'
    Decl -> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'LBRACE' Exp . 'RBRACE'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (explicit right 9994):   shift 91
    action 'LTEQEQGT' (explicit left 9993):   shift 90
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (explicit left 9996):   shift 96
    action 'GT' (explicit left 9996):   shift 97
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (explicit left 9996):   shift 98
    action 'GE' (explicit left 9996):   shift 99
    action 'EQEQ' (explicit left 9996):   shift 94
    action 'NE' (explicit left 9996):   shift 95
    action 'PLUS' (explicit left 9997):   shift 100
    action 'MINUS' (explicit left 9997):   shift 101
    action 'STAR' (explicit left 9998):   shift 102
    action 'SLASH' (explicit left 9998):   shift 103
    action 'PERCENT' (explicit left 9998):   shift 104
    action 'AMPAMP' (explicit left 9995):   shift 92
    action 'BARBAR' (explicit left 9995):   shift 93
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   shift 391
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (explicit left 10000):   shift 118
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 88:
  items:
    Exp -> Exp . 'LTEQEQGT' Exp
    Exp -> Exp . 'EQEQGT' Exp
    Exp -> Exp . 'AMPAMP' Exp
    Exp -> Exp . 'BARBAR' Exp
    Exp -> Exp . 'EQEQ' Exp
    Exp -> Exp . 'NE' Exp
    Exp -> Exp . 'LT' Exp
    Exp -> Exp . 'GT' Exp
    Exp -> Exp . 'LE' Exp
    Exp -> Exp . 'GE' Exp
    Exp -> Exp . 'PLUS' Exp
    Exp -> Exp . 'MINUS' Exp
    Exp -> Exp . 'STAR' Exp
    Exp -> Exp . 'SLASH' Exp
    Exp -> Exp . 'PERCENT' Exp
    Exp -> Exp . 'LBRACKET' Exps 'RBRACKET'
    Exp -> Exp . 'LBRACKET' Exps 'COLONEQ' Exp 'RBRACKET'
    Decl -> 'AXIOM' AnyId 'EQEQ' Exp . 'SEMI'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (explicit right 9994):   shift 91
    action 'LTEQEQGT' (explicit left 9993):   shift 90
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (explicit left 9996):   shift 96
    action 'GT' (explicit left 9996):   shift 97
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (explicit left 9996):   shift 98
    action 'GE' (explicit left 9996):   shift 99
    action 'EQEQ' (explicit left 9996):   shift 94
    action 'NE' (explicit left 9996):   shift 95
    action 'PLUS' (explicit left 9997):   shift 100
    action 'MINUS' (explicit left 9997):   shift 101
    action 'STAR' (explicit left 9998):   shift 102
    action 'SLASH' (explicit left 9998):   shift 103
    action 'PERCENT' (explicit left 9998):   shift 104
    action 'AMPAMP' (explicit left 9995):   shift 92
    action 'BARBAR' (explicit left 9995):   shift 93
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   shift 396
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (explicit left 10000):   shift 118
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 89:
  items:
    Exp -> Exp . 'LTEQEQGT' Exp
    Exp -> Exp . 'EQEQGT' Exp
    Exp -> Exp . 'AMPAMP' Exp
    Exp -> Exp . 'BARBAR' Exp
    Exp -> Exp . 'EQEQ' Exp
    Exp -> Exp . 'NE' Exp
    Exp -> Exp . 'LT' Exp
    Exp -> Exp . 'GT' Exp
    Exp -> Exp . 'LE' Exp
    Exp -> Exp . 'GE' Exp
    Exp -> Exp . 'PLUS' Exp
    Exp -> Exp . 'MINUS' Exp
    Exp -> Exp . 'STAR' Exp
    Exp -> Exp . 'SLASH' Exp
    Exp -> Exp . 'PERCENT' Exp
    Exp -> Exp . 'LBRACKET' Exps 'RBRACKET'
    Exp -> Exp . 'LBRACKET' Exps 'COLONEQ' Exp 'RBRACKET'
    Decl -> 'AXIOM' 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers AnyId AnyIdLists 'EQEQ' Exp . 'RPAREN' 'SEMI'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (explicit right 9994):   shift 91
    action 'LTEQEQGT' (explicit left 9993):   shift 90
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (explicit left 9996):   shift 96
    action 'GT' (explicit left 9996):   shift 97
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (explicit left 9996):   shift 98
    action 'GE' (explicit left 9996):   shift 99
    action 'EQEQ' (explicit left 9996):   shift 94
    action 'NE' (explicit left 9996):   shift 95
    action 'PLUS' (explicit left 9997):   shift 100
    action 'MINUS' (explicit left 9997):   shift 101
    action 'STAR' (explicit left 9998):   shift 102
    action 'SLASH' (explicit left 9998):   shift 103
    action 'PERCENT' (explicit left 9998):   shift 104
    action 'AMPAMP' (explicit left 9995):   shift 92
    action 'BARBAR' (explicit left 9995):   shift 93
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (explicit left 10000):   shift 405
    action 'LBRACKET' (explicit left 10000):   shift 118
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 90:
  items:
    Exp -> Exp 'LTEQEQGT' . Exp

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   shift 14
    action 'EBX' (noprec):   shift 15
    action 'ECX' (noprec):   shift 16
    action 'EDX' (noprec):   shift 17
    action 'ESI' (noprec):   shift 18
    action 'EDI' (noprec):   shift 19
    action 'EBP' (noprec):   shift 20
    action 'ESP' (noprec):   shift 21
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   shift 125
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (explicit right 9999):   shift 107
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (explicit left 10000):   shift 54
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   shift 124
    action 'LITINT' (noprec):   shift 123
    action 'QLID' (noprec):   shift 145
    action 'QUID' (noprec):   shift 144
    action 'DLID' (noprec):   shift 143
    action 'DUID' (noprec):   shift 142
    action 'LID' (noprec):   shift 4
    action 'UID' (noprec):   shift 5
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto ID: 141
    goto Reg: 132
    goto Exp: 57
    goto AnyId: 128

state 91:
  items:
    Exp -> Exp 'EQEQGT' . Exp

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   shift 14
    action 'EBX' (noprec):   shift 15
    action 'ECX' (noprec):   shift 16
    action 'EDX' (noprec):   shift 17
    action 'ESI' (noprec):   shift 18
    action 'EDI' (noprec):   shift 19
    action 'EBP' (noprec):   shift 20
    action 'ESP' (noprec):   shift 21
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   shift 125
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (explicit right 9999):   shift 107
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (explicit left 10000):   shift 54
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   shift 124
    action 'LITINT' (noprec):   shift 123
    action 'QLID' (noprec):   shift 145
    action 'QUID' (noprec):   shift 144
    action 'DLID' (noprec):   shift 143
    action 'DUID' (noprec):   shift 142
    action 'LID' (noprec):   shift 4
    action 'UID' (noprec):   shift 5
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto ID: 141
    goto Reg: 132
    goto Exp: 58
    goto AnyId: 128

state 92:
  items:
    Exp -> Exp 'AMPAMP' . Exp

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   shift 14
    action 'EBX' (noprec):   shift 15
    action 'ECX' (noprec):   shift 16
    action 'EDX' (noprec):   shift 17
    action 'ESI' (noprec):   shift 18
    action 'EDI' (noprec):   shift 19
    action 'EBP' (noprec):   shift 20
    action 'ESP' (noprec):   shift 21
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   shift 125
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (explicit right 9999):   shift 107
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (explicit left 10000):   shift 54
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   shift 124
    action 'LITINT' (noprec):   shift 123
    action 'QLID' (noprec):   shift 145
    action 'QUID' (noprec):   shift 144
    action 'DLID' (noprec):   shift 143
    action 'DUID' (noprec):   shift 142
    action 'LID' (noprec):   shift 4
    action 'UID' (noprec):   shift 5
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto ID: 141
    goto Reg: 132
    goto Exp: 59
    goto AnyId: 128

state 93:
  items:
    Exp -> Exp 'BARBAR' . Exp

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   shift 14
    action 'EBX' (noprec):   shift 15
    action 'ECX' (noprec):   shift 16
    action 'EDX' (noprec):   shift 17
    action 'ESI' (noprec):   shift 18
    action 'EDI' (noprec):   shift 19
    action 'EBP' (noprec):   shift 20
    action 'ESP' (noprec):   shift 21
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   shift 125
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (explicit right 9999):   shift 107
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (explicit left 10000):   shift 54
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   shift 124
    action 'LITINT' (noprec):   shift 123
    action 'QLID' (noprec):   shift 145
    action 'QUID' (noprec):   shift 144
    action 'DLID' (noprec):   shift 143
    action 'DUID' (noprec):   shift 142
    action 'LID' (noprec):   shift 4
    action 'UID' (noprec):   shift 5
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto ID: 141
    goto Reg: 132
    goto Exp: 60
    goto AnyId: 128

state 94:
  items:
    Exp -> Exp 'EQEQ' . Exp

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   shift 14
    action 'EBX' (noprec):   shift 15
    action 'ECX' (noprec):   shift 16
    action 'EDX' (noprec):   shift 17
    action 'ESI' (noprec):   shift 18
    action 'EDI' (noprec):   shift 19
    action 'EBP' (noprec):   shift 20
    action 'ESP' (noprec):   shift 21
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   shift 125
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (explicit right 9999):   shift 107
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (explicit left 10000):   shift 54
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   shift 124
    action 'LITINT' (noprec):   shift 123
    action 'QLID' (noprec):   shift 145
    action 'QUID' (noprec):   shift 144
    action 'DLID' (noprec):   shift 143
    action 'DUID' (noprec):   shift 142
    action 'LID' (noprec):   shift 4
    action 'UID' (noprec):   shift 5
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto ID: 141
    goto Reg: 132
    goto Exp: 61
    goto AnyId: 128

state 95:
  items:
    Exp -> Exp 'NE' . Exp

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   shift 14
    action 'EBX' (noprec):   shift 15
    action 'ECX' (noprec):   shift 16
    action 'EDX' (noprec):   shift 17
    action 'ESI' (noprec):   shift 18
    action 'EDI' (noprec):   shift 19
    action 'EBP' (noprec):   shift 20
    action 'ESP' (noprec):   shift 21
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   shift 125
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (explicit right 9999):   shift 107
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (explicit left 10000):   shift 54
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   shift 124
    action 'LITINT' (noprec):   shift 123
    action 'QLID' (noprec):   shift 145
    action 'QUID' (noprec):   shift 144
    action 'DLID' (noprec):   shift 143
    action 'DUID' (noprec):   shift 142
    action 'LID' (noprec):   shift 4
    action 'UID' (noprec):   shift 5
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto ID: 141
    goto Reg: 132
    goto Exp: 62
    goto AnyId: 128

state 96:
  items:
    Exp -> Exp 'LT' . Exp

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   shift 14
    action 'EBX' (noprec):   shift 15
    action 'ECX' (noprec):   shift 16
    action 'EDX' (noprec):   shift 17
    action 'ESI' (noprec):   shift 18
    action 'EDI' (noprec):   shift 19
    action 'EBP' (noprec):   shift 20
    action 'ESP' (noprec):   shift 21
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   shift 125
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (explicit right 9999):   shift 107
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (explicit left 10000):   shift 54
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   shift 124
    action 'LITINT' (noprec):   shift 123
    action 'QLID' (noprec):   shift 145
    action 'QUID' (noprec):   shift 144
    action 'DLID' (noprec):   shift 143
    action 'DUID' (noprec):   shift 142
    action 'LID' (noprec):   shift 4
    action 'UID' (noprec):   shift 5
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto ID: 141
    goto Reg: 132
    goto Exp: 63
    goto AnyId: 128

state 97:
  items:
    Exp -> Exp 'GT' . Exp

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   shift 14
    action 'EBX' (noprec):   shift 15
    action 'ECX' (noprec):   shift 16
    action 'EDX' (noprec):   shift 17
    action 'ESI' (noprec):   shift 18
    action 'EDI' (noprec):   shift 19
    action 'EBP' (noprec):   shift 20
    action 'ESP' (noprec):   shift 21
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   shift 125
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (explicit right 9999):   shift 107
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (explicit left 10000):   shift 54
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   shift 124
    action 'LITINT' (noprec):   shift 123
    action 'QLID' (noprec):   shift 145
    action 'QUID' (noprec):   shift 144
    action 'DLID' (noprec):   shift 143
    action 'DUID' (noprec):   shift 142
    action 'LID' (noprec):   shift 4
    action 'UID' (noprec):   shift 5
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto ID: 141
    goto Reg: 132
    goto Exp: 64
    goto AnyId: 128

state 98:
  items:
    Exp -> Exp 'LE' . Exp

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   shift 14
    action 'EBX' (noprec):   shift 15
    action 'ECX' (noprec):   shift 16
    action 'EDX' (noprec):   shift 17
    action 'ESI' (noprec):   shift 18
    action 'EDI' (noprec):   shift 19
    action 'EBP' (noprec):   shift 20
    action 'ESP' (noprec):   shift 21
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   shift 125
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (explicit right 9999):   shift 107
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (explicit left 10000):   shift 54
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   shift 124
    action 'LITINT' (noprec):   shift 123
    action 'QLID' (noprec):   shift 145
    action 'QUID' (noprec):   shift 144
    action 'DLID' (noprec):   shift 143
    action 'DUID' (noprec):   shift 142
    action 'LID' (noprec):   shift 4
    action 'UID' (noprec):   shift 5
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto ID: 141
    goto Reg: 132
    goto Exp: 65
    goto AnyId: 128

state 99:
  items:
    Exp -> Exp 'GE' . Exp

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   shift 14
    action 'EBX' (noprec):   shift 15
    action 'ECX' (noprec):   shift 16
    action 'EDX' (noprec):   shift 17
    action 'ESI' (noprec):   shift 18
    action 'EDI' (noprec):   shift 19
    action 'EBP' (noprec):   shift 20
    action 'ESP' (noprec):   shift 21
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   shift 125
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (explicit right 9999):   shift 107
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (explicit left 10000):   shift 54
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   shift 124
    action 'LITINT' (noprec):   shift 123
    action 'QLID' (noprec):   shift 145
    action 'QUID' (noprec):   shift 144
    action 'DLID' (noprec):   shift 143
    action 'DUID' (noprec):   shift 142
    action 'LID' (noprec):   shift 4
    action 'UID' (noprec):   shift 5
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto ID: 141
    goto Reg: 132
    goto Exp: 66
    goto AnyId: 128

state 100:
  items:
    Exp -> Exp 'PLUS' . Exp

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   shift 14
    action 'EBX' (noprec):   shift 15
    action 'ECX' (noprec):   shift 16
    action 'EDX' (noprec):   shift 17
    action 'ESI' (noprec):   shift 18
    action 'EDI' (noprec):   shift 19
    action 'EBP' (noprec):   shift 20
    action 'ESP' (noprec):   shift 21
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   shift 125
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (explicit right 9999):   shift 107
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (explicit left 10000):   shift 54
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   shift 124
    action 'LITINT' (noprec):   shift 123
    action 'QLID' (noprec):   shift 145
    action 'QUID' (noprec):   shift 144
    action 'DLID' (noprec):   shift 143
    action 'DUID' (noprec):   shift 142
    action 'LID' (noprec):   shift 4
    action 'UID' (noprec):   shift 5
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto ID: 141
    goto Reg: 132
    goto Exp: 67
    goto AnyId: 128

state 101:
  items:
    Exp -> Exp 'MINUS' . Exp

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   shift 14
    action 'EBX' (noprec):   shift 15
    action 'ECX' (noprec):   shift 16
    action 'EDX' (noprec):   shift 17
    action 'ESI' (noprec):   shift 18
    action 'EDI' (noprec):   shift 19
    action 'EBP' (noprec):   shift 20
    action 'ESP' (noprec):   shift 21
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   shift 125
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (explicit right 9999):   shift 107
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (explicit left 10000):   shift 54
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   shift 124
    action 'LITINT' (noprec):   shift 123
    action 'QLID' (noprec):   shift 145
    action 'QUID' (noprec):   shift 144
    action 'DLID' (noprec):   shift 143
    action 'DUID' (noprec):   shift 142
    action 'LID' (noprec):   shift 4
    action 'UID' (noprec):   shift 5
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto ID: 141
    goto Reg: 132
    goto Exp: 68
    goto AnyId: 128

state 102:
  items:
    Exp -> Exp 'STAR' . Exp

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   shift 14
    action 'EBX' (noprec):   shift 15
    action 'ECX' (noprec):   shift 16
    action 'EDX' (noprec):   shift 17
    action 'ESI' (noprec):   shift 18
    action 'EDI' (noprec):   shift 19
    action 'EBP' (noprec):   shift 20
    action 'ESP' (noprec):   shift 21
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   shift 125
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (explicit right 9999):   shift 107
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (explicit left 10000):   shift 54
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   shift 124
    action 'LITINT' (noprec):   shift 123
    action 'QLID' (noprec):   shift 145
    action 'QUID' (noprec):   shift 144
    action 'DLID' (noprec):   shift 143
    action 'DUID' (noprec):   shift 142
    action 'LID' (noprec):   shift 4
    action 'UID' (noprec):   shift 5
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto ID: 141
    goto Reg: 132
    goto Exp: 69
    goto AnyId: 128

state 103:
  items:
    Exp -> Exp 'SLASH' . Exp

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   shift 14
    action 'EBX' (noprec):   shift 15
    action 'ECX' (noprec):   shift 16
    action 'EDX' (noprec):   shift 17
    action 'ESI' (noprec):   shift 18
    action 'EDI' (noprec):   shift 19
    action 'EBP' (noprec):   shift 20
    action 'ESP' (noprec):   shift 21
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   shift 125
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (explicit right 9999):   shift 107
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (explicit left 10000):   shift 54
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   shift 124
    action 'LITINT' (noprec):   shift 123
    action 'QLID' (noprec):   shift 145
    action 'QUID' (noprec):   shift 144
    action 'DLID' (noprec):   shift 143
    action 'DUID' (noprec):   shift 142
    action 'LID' (noprec):   shift 4
    action 'UID' (noprec):   shift 5
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto ID: 141
    goto Reg: 132
    goto Exp: 70
    goto AnyId: 128

state 104:
  items:
    Exp -> Exp 'PERCENT' . Exp

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   shift 14
    action 'EBX' (noprec):   shift 15
    action 'ECX' (noprec):   shift 16
    action 'EDX' (noprec):   shift 17
    action 'ESI' (noprec):   shift 18
    action 'EDI' (noprec):   shift 19
    action 'EBP' (noprec):   shift 20
    action 'ESP' (noprec):   shift 21
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   shift 125
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (explicit right 9999):   shift 107
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (explicit left 10000):   shift 54
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   shift 124
    action 'LITINT' (noprec):   shift 123
    action 'QLID' (noprec):   shift 145
    action 'QUID' (noprec):   shift 144
    action 'DLID' (noprec):   shift 143
    action 'DUID' (noprec):   shift 142
    action 'LID' (noprec):   shift 4
    action 'UID' (noprec):   shift 5
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto ID: 141
    goto Reg: 132
    goto Exp: 71
    goto AnyId: 128

state 105:
  items:
    Exp -> 'LPAREN' 'MINUS' . Exp 'RPAREN'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   shift 14
    action 'EBX' (noprec):   shift 15
    action 'ECX' (noprec):   shift 16
    action 'EDX' (noprec):   shift 17
    action 'ESI' (noprec):   shift 18
    action 'EDI' (noprec):   shift 19
    action 'EBP' (noprec):   shift 20
    action 'ESP' (noprec):   shift 21
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   shift 125
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (explicit right 9999):   shift 107
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (explicit left 10000):   shift 54
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   shift 124
    action 'LITINT' (noprec):   shift 123
    action 'QLID' (noprec):   shift 145
    action 'QUID' (noprec):   shift 144
    action 'DLID' (noprec):   shift 143
    action 'DUID' (noprec):   shift 142
    action 'LID' (noprec):   shift 4
    action 'UID' (noprec):   shift 5
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto ID: 141
    goto Reg: 132
    goto Exp: 72
    goto AnyId: 128

state 106:
  items:
    Exp -> 'LPAREN' 'MINUS' Exp 'RPAREN' . 

  actions:
    action 'EOF' (explicit left 10000):   reduce Exp --> 'LPAREN' 'MINUS' Exp 'RPAREN'
    action 'EAX' (explicit left 10000):   reduce Exp --> 'LPAREN' 'MINUS' Exp 'RPAREN'
    action 'EBX' (explicit left 10000):   reduce Exp --> 'LPAREN' 'MINUS' Exp 'RPAREN'
    action 'ECX' (explicit left 10000):   reduce Exp --> 'LPAREN' 'MINUS' Exp 'RPAREN'
    action 'EDX' (explicit left 10000):   reduce Exp --> 'LPAREN' 'MINUS' Exp 'RPAREN'
    action 'ESI' (explicit left 10000):   reduce Exp --> 'LPAREN' 'MINUS' Exp 'RPAREN'
    action 'EDI' (explicit left 10000):   reduce Exp --> 'LPAREN' 'MINUS' Exp 'RPAREN'
    action 'EBP' (explicit left 10000):   reduce Exp --> 'LPAREN' 'MINUS' Exp 'RPAREN'
    action 'ESP' (explicit left 10000):   reduce Exp --> 'LPAREN' 'MINUS' Exp 'RPAREN'
    action 'MODIFIES' (explicit left 10000):   reduce Exp --> 'LPAREN' 'MINUS' Exp 'RPAREN'
    action 'INVARIANT' (explicit left 10000):   reduce Exp --> 'LPAREN' 'MINUS' Exp 'RPAREN'
    action 'ASSERT' (explicit left 10000):   reduce Exp --> 'LPAREN' 'MINUS' Exp 'RPAREN'
    action 'HAVOC' (explicit left 10000):   reduce Exp --> 'LPAREN' 'MINUS' Exp 'RPAREN'
    action 'GOTO' (explicit left 10000):   reduce Exp --> 'LPAREN' 'MINUS' Exp 'RPAREN'
    action 'CALL' (explicit left 10000):   reduce Exp --> 'LPAREN' 'MINUS' Exp 'RPAREN'
    action 'CCALL' (explicit left 10000):   reduce Exp --> 'LPAREN' 'MINUS' Exp 'RPAREN'
    action 'RET' (explicit left 10000):   reduce Exp --> 'LPAREN' 'MINUS' Exp 'RPAREN'
    action 'IRET' (explicit left 10000):   reduce Exp --> 'LPAREN' 'MINUS' Exp 'RPAREN'
    action 'GO' (explicit left 10000):   reduce Exp --> 'LPAREN' 'MINUS' Exp 'RPAREN'
    action 'FORALL' (explicit left 10000):   reduce Exp --> 'LPAREN' 'MINUS' Exp 'RPAREN'
    action 'EXISTS' (explicit left 10000):   reduce Exp --> 'LPAREN' 'MINUS' Exp 'RPAREN'
    action 'OLD' (explicit left 10000):   reduce Exp --> 'LPAREN' 'MINUS' Exp 'RPAREN'
    action 'COLONCOLON' (explicit left 10000):   reduce Exp --> 'LPAREN' 'MINUS' Exp 'RPAREN'
    action 'EQEQGT' (explicit left 10000):   reduce Exp --> 'LPAREN' 'MINUS' Exp 'RPAREN'
    action 'LTEQEQGT' (explicit left 10000):   reduce Exp --> 'LPAREN' 'MINUS' Exp 'RPAREN'
    action 'TYPE' (explicit left 10000):   reduce Exp --> 'LPAREN' 'MINUS' Exp 'RPAREN'
    action 'CONST' (explicit left 10000):   reduce Exp --> 'LPAREN' 'MINUS' Exp 'RPAREN'
    action 'FUNCTION' (explicit left 10000):   reduce Exp --> 'LPAREN' 'MINUS' Exp 'RPAREN'
    action 'RETURNS' (explicit left 10000):   reduce Exp --> 'LPAREN' 'MINUS' Exp 'RPAREN'
    action 'AXIOM' (explicit left 10000):   reduce Exp --> 'LPAREN' 'MINUS' Exp 'RPAREN'
    action 'PROCEDURE' (explicit left 10000):   reduce Exp --> 'LPAREN' 'MINUS' Exp 'RPAREN'
    action 'IMPLEMENTATION' (explicit left 10000):   reduce Exp --> 'LPAREN' 'MINUS' Exp 'RPAREN'
    action 'REQUIRES' (explicit left 10000):   reduce Exp --> 'LPAREN' 'MINUS' Exp 'RPAREN'
    action 'ENSURES' (explicit left 10000):   reduce Exp --> 'LPAREN' 'MINUS' Exp 'RPAREN'
    action 'LT' (explicit left 10000):   reduce Exp --> 'LPAREN' 'MINUS' Exp 'RPAREN'
    action 'GT' (explicit left 10000):   reduce Exp --> 'LPAREN' 'MINUS' Exp 'RPAREN'
    action 'EQ' (explicit left 10000):   reduce Exp --> 'LPAREN' 'MINUS' Exp 'RPAREN'
    action 'BANG' (explicit left 10000):   reduce Exp --> 'LPAREN' 'MINUS' Exp 'RPAREN'
    action 'COMMA' (explicit left 10000):   reduce Exp --> 'LPAREN' 'MINUS' Exp 'RPAREN'
    action 'LE' (explicit left 10000):   reduce Exp --> 'LPAREN' 'MINUS' Exp 'RPAREN'
    action 'GE' (explicit left 10000):   reduce Exp --> 'LPAREN' 'MINUS' Exp 'RPAREN'
    action 'EQEQ' (explicit left 10000):   reduce Exp --> 'LPAREN' 'MINUS' Exp 'RPAREN'
    action 'NE' (explicit left 10000):   reduce Exp --> 'LPAREN' 'MINUS' Exp 'RPAREN'
    action 'PLUS' (explicit left 10000):   reduce Exp --> 'LPAREN' 'MINUS' Exp 'RPAREN'
    action 'MINUS' (explicit left 10000):   reduce Exp --> 'LPAREN' 'MINUS' Exp 'RPAREN'
    action 'STAR' (explicit left 10000):   reduce Exp --> 'LPAREN' 'MINUS' Exp 'RPAREN'
    action 'SLASH' (explicit left 10000):   reduce Exp --> 'LPAREN' 'MINUS' Exp 'RPAREN'
    action 'PERCENT' (explicit left 10000):   reduce Exp --> 'LPAREN' 'MINUS' Exp 'RPAREN'
    action 'AMPAMP' (explicit left 10000):   reduce Exp --> 'LPAREN' 'MINUS' Exp 'RPAREN'
    action 'BARBAR' (explicit left 10000):   reduce Exp --> 'LPAREN' 'MINUS' Exp 'RPAREN'
    action 'COLONEQ' (explicit left 10000):   reduce Exp --> 'LPAREN' 'MINUS' Exp 'RPAREN'
    action 'INT' (explicit left 10000):   reduce Exp --> 'LPAREN' 'MINUS' Exp 'RPAREN'
    action 'BOOL' (explicit left 10000):   reduce Exp --> 'LPAREN' 'MINUS' Exp 'RPAREN'
    action 'IF' (explicit left 10000):   reduce Exp --> 'LPAREN' 'MINUS' Exp 'RPAREN'
    action 'RETURN' (explicit left 10000):   reduce Exp --> 'LPAREN' 'MINUS' Exp 'RPAREN'
    action 'VAR' (explicit left 10000):   reduce Exp --> 'LPAREN' 'MINUS' Exp 'RPAREN'
    action 'LBRACE' (explicit left 10000):   reduce Exp --> 'LPAREN' 'MINUS' Exp 'RPAREN'
    action 'RBRACE' (explicit left 10000):   reduce Exp --> 'LPAREN' 'MINUS' Exp 'RPAREN'
    action 'SEMI' (explicit left 10000):   reduce Exp --> 'LPAREN' 'MINUS' Exp 'RPAREN'
    action 'COLON' (explicit left 10000):   reduce Exp --> 'LPAREN' 'MINUS' Exp 'RPAREN'
    action 'LPAREN' (explicit left 10000):   reduce Exp --> 'LPAREN' 'MINUS' Exp 'RPAREN'
    action 'RPAREN' (explicit left 10000):   reduce Exp --> 'LPAREN' 'MINUS' Exp 'RPAREN'
    action 'LBRACKET' (explicit left 10000):   reduce Exp --> 'LPAREN' 'MINUS' Exp 'RPAREN'
    action 'RBRACKET' (explicit left 10000):   reduce Exp --> 'LPAREN' 'MINUS' Exp 'RPAREN'
    action 'LITBOOL' (explicit left 10000):   reduce Exp --> 'LPAREN' 'MINUS' Exp 'RPAREN'
    action 'LITINT' (explicit left 10000):   reduce Exp --> 'LPAREN' 'MINUS' Exp 'RPAREN'
    action 'QLID' (explicit left 10000):   reduce Exp --> 'LPAREN' 'MINUS' Exp 'RPAREN'
    action 'QUID' (explicit left 10000):   reduce Exp --> 'LPAREN' 'MINUS' Exp 'RPAREN'
    action 'DLID' (explicit left 10000):   reduce Exp --> 'LPAREN' 'MINUS' Exp 'RPAREN'
    action 'DUID' (explicit left 10000):   reduce Exp --> 'LPAREN' 'MINUS' Exp 'RPAREN'
    action 'LID' (explicit left 10000):   reduce Exp --> 'LPAREN' 'MINUS' Exp 'RPAREN'
    action 'UID' (explicit left 10000):   reduce Exp --> 'LPAREN' 'MINUS' Exp 'RPAREN'
    action 'error' (explicit left 10000):   reduce Exp --> 'LPAREN' 'MINUS' Exp 'RPAREN'
    action '#' (explicit left 10000):   reduce Exp --> 'LPAREN' 'MINUS' Exp 'RPAREN'
    action '$$' (explicit left 10000):   reduce Exp --> 'LPAREN' 'MINUS' Exp 'RPAREN'

  immediate action:   reduce Exp --> 'LPAREN' 'MINUS' Exp 'RPAREN'
 gotos:

state 107:
  items:
    Exp -> 'BANG' . Exp

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   shift 14
    action 'EBX' (noprec):   shift 15
    action 'ECX' (noprec):   shift 16
    action 'EDX' (noprec):   shift 17
    action 'ESI' (noprec):   shift 18
    action 'EDI' (noprec):   shift 19
    action 'EBP' (noprec):   shift 20
    action 'ESP' (noprec):   shift 21
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   shift 125
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (explicit right 9999):   shift 107
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (explicit left 10000):   shift 54
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   shift 124
    action 'LITINT' (noprec):   shift 123
    action 'QLID' (noprec):   shift 145
    action 'QUID' (noprec):   shift 144
    action 'DLID' (noprec):   shift 143
    action 'DUID' (noprec):   shift 142
    action 'LID' (noprec):   shift 4
    action 'UID' (noprec):   shift 5
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto ID: 141
    goto Reg: 132
    goto Exp: 73
    goto AnyId: 128

state 108:
  items:
    Exp -> 'LPAREN' 'FORALL' . Formals 'COLONCOLON' Triggers Exp 'RPAREN'

  actions:
    action 'EOF' (noprec):   reduce Formals --> 
    action 'EAX' (noprec):   reduce Formals --> 
    action 'EBX' (noprec):   reduce Formals --> 
    action 'ECX' (noprec):   reduce Formals --> 
    action 'EDX' (noprec):   reduce Formals --> 
    action 'ESI' (noprec):   reduce Formals --> 
    action 'EDI' (noprec):   reduce Formals --> 
    action 'EBP' (noprec):   reduce Formals --> 
    action 'ESP' (noprec):   reduce Formals --> 
    action 'MODIFIES' (noprec):   reduce Formals --> 
    action 'INVARIANT' (noprec):   reduce Formals --> 
    action 'ASSERT' (noprec):   reduce Formals --> 
    action 'HAVOC' (noprec):   reduce Formals --> 
    action 'GOTO' (noprec):   reduce Formals --> 
    action 'CALL' (noprec):   reduce Formals --> 
    action 'CCALL' (noprec):   reduce Formals --> 
    action 'RET' (noprec):   reduce Formals --> 
    action 'IRET' (noprec):   reduce Formals --> 
    action 'GO' (noprec):   reduce Formals --> 
    action 'FORALL' (noprec):   reduce Formals --> 
    action 'EXISTS' (noprec):   reduce Formals --> 
    action 'OLD' (noprec):   reduce Formals --> 
    action 'COLONCOLON' (noprec):   reduce Formals --> 
    action 'EQEQGT' (noprec):   reduce Formals --> 
    action 'LTEQEQGT' (noprec):   reduce Formals --> 
    action 'TYPE' (noprec):   reduce Formals --> 
    action 'CONST' (noprec):   reduce Formals --> 
    action 'FUNCTION' (noprec):   reduce Formals --> 
    action 'RETURNS' (noprec):   reduce Formals --> 
    action 'AXIOM' (noprec):   reduce Formals --> 
    action 'PROCEDURE' (noprec):   reduce Formals --> 
    action 'IMPLEMENTATION' (noprec):   reduce Formals --> 
    action 'REQUIRES' (noprec):   reduce Formals --> 
    action 'ENSURES' (noprec):   reduce Formals --> 
    action 'LT' (noprec):   reduce Formals --> 
    action 'GT' (noprec):   reduce Formals --> 
    action 'EQ' (noprec):   reduce Formals --> 
    action 'BANG' (noprec):   reduce Formals --> 
    action 'COMMA' (noprec):   reduce Formals --> 
    action 'LE' (noprec):   reduce Formals --> 
    action 'GE' (noprec):   reduce Formals --> 
    action 'EQEQ' (noprec):   reduce Formals --> 
    action 'NE' (noprec):   reduce Formals --> 
    action 'PLUS' (noprec):   reduce Formals --> 
    action 'MINUS' (noprec):   reduce Formals --> 
    action 'STAR' (noprec):   reduce Formals --> 
    action 'SLASH' (noprec):   reduce Formals --> 
    action 'PERCENT' (noprec):   reduce Formals --> 
    action 'AMPAMP' (noprec):   reduce Formals --> 
    action 'BARBAR' (noprec):   reduce Formals --> 
    action 'COLONEQ' (noprec):   reduce Formals --> 
    action 'INT' (noprec):   reduce Formals --> 
    action 'BOOL' (noprec):   reduce Formals --> 
    action 'IF' (noprec):   reduce Formals --> 
    action 'RETURN' (noprec):   reduce Formals --> 
    action 'VAR' (noprec):   reduce Formals --> 
    action 'LBRACE' (noprec):   reduce Formals --> 
    action 'RBRACE' (noprec):   reduce Formals --> 
    action 'SEMI' (noprec):   reduce Formals --> 
    action 'COLON' (noprec):   reduce Formals --> 
    action 'LPAREN' (noprec):   reduce Formals --> 
    action 'RPAREN' (noprec):   reduce Formals --> 
    action 'LBRACKET' (noprec):   reduce Formals --> 
    action 'RBRACKET' (noprec):   reduce Formals --> 
    action 'LITBOOL' (noprec):   reduce Formals --> 
    action 'LITINT' (noprec):   reduce Formals --> 
    action 'QLID' (noprec):   shift 145
    action 'QUID' (noprec):   shift 144
    action 'DLID' (noprec):   shift 143
    action 'DUID' (noprec):   shift 142
    action 'LID' (noprec):   shift 4
    action 'UID' (noprec):   shift 5
    action 'error' (noprec):   reduce Formals --> 
    action '#' (noprec):   reduce Formals --> 
    action '$$' (noprec):   reduce Formals --> 

  immediate action: <none>
 gotos:
    goto ID: 141
    goto AnyId: 275
    goto Formal: 278
    goto Formals: 109

state 109:
  items:
    Exp -> 'LPAREN' 'FORALL' Formals . 'COLONCOLON' Triggers Exp 'RPAREN'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   shift 110
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 110:
  items:
    Exp -> 'LPAREN' 'FORALL' Formals 'COLONCOLON' . Triggers Exp 'RPAREN'

  actions:
    action 'EOF' (noprec):   reduce Triggers --> 
    action 'EAX' (noprec):   reduce Triggers --> 
    action 'EBX' (noprec):   reduce Triggers --> 
    action 'ECX' (noprec):   reduce Triggers --> 
    action 'EDX' (noprec):   reduce Triggers --> 
    action 'ESI' (noprec):   reduce Triggers --> 
    action 'EDI' (noprec):   reduce Triggers --> 
    action 'EBP' (noprec):   reduce Triggers --> 
    action 'ESP' (noprec):   reduce Triggers --> 
    action 'MODIFIES' (noprec):   reduce Triggers --> 
    action 'INVARIANT' (noprec):   reduce Triggers --> 
    action 'ASSERT' (noprec):   reduce Triggers --> 
    action 'HAVOC' (noprec):   reduce Triggers --> 
    action 'GOTO' (noprec):   reduce Triggers --> 
    action 'CALL' (noprec):   reduce Triggers --> 
    action 'CCALL' (noprec):   reduce Triggers --> 
    action 'RET' (noprec):   reduce Triggers --> 
    action 'IRET' (noprec):   reduce Triggers --> 
    action 'GO' (noprec):   reduce Triggers --> 
    action 'FORALL' (noprec):   reduce Triggers --> 
    action 'EXISTS' (noprec):   reduce Triggers --> 
    action 'OLD' (noprec):   reduce Triggers --> 
    action 'COLONCOLON' (noprec):   reduce Triggers --> 
    action 'EQEQGT' (noprec):   reduce Triggers --> 
    action 'LTEQEQGT' (noprec):   reduce Triggers --> 
    action 'TYPE' (noprec):   reduce Triggers --> 
    action 'CONST' (noprec):   reduce Triggers --> 
    action 'FUNCTION' (noprec):   reduce Triggers --> 
    action 'RETURNS' (noprec):   reduce Triggers --> 
    action 'AXIOM' (noprec):   reduce Triggers --> 
    action 'PROCEDURE' (noprec):   reduce Triggers --> 
    action 'IMPLEMENTATION' (noprec):   reduce Triggers --> 
    action 'REQUIRES' (noprec):   reduce Triggers --> 
    action 'ENSURES' (noprec):   reduce Triggers --> 
    action 'LT' (noprec):   reduce Triggers --> 
    action 'GT' (noprec):   reduce Triggers --> 
    action 'EQ' (noprec):   reduce Triggers --> 
    action 'BANG' (noprec):   reduce Triggers --> 
    action 'COMMA' (noprec):   reduce Triggers --> 
    action 'LE' (noprec):   reduce Triggers --> 
    action 'GE' (noprec):   reduce Triggers --> 
    action 'EQEQ' (noprec):   reduce Triggers --> 
    action 'NE' (noprec):   reduce Triggers --> 
    action 'PLUS' (noprec):   reduce Triggers --> 
    action 'MINUS' (noprec):   reduce Triggers --> 
    action 'STAR' (noprec):   reduce Triggers --> 
    action 'SLASH' (noprec):   reduce Triggers --> 
    action 'PERCENT' (noprec):   reduce Triggers --> 
    action 'AMPAMP' (noprec):   reduce Triggers --> 
    action 'BARBAR' (noprec):   reduce Triggers --> 
    action 'COLONEQ' (noprec):   reduce Triggers --> 
    action 'INT' (noprec):   reduce Triggers --> 
    action 'BOOL' (noprec):   reduce Triggers --> 
    action 'IF' (noprec):   reduce Triggers --> 
    action 'RETURN' (noprec):   reduce Triggers --> 
    action 'VAR' (noprec):   reduce Triggers --> 
    action 'LBRACE' (noprec):   shift 50
    action 'RBRACE' (noprec):   reduce Triggers --> 
    action 'SEMI' (noprec):   reduce Triggers --> 
    action 'COLON' (noprec):   reduce Triggers --> 
    action 'LPAREN' (noprec):   reduce Triggers --> 
    action 'RPAREN' (noprec):   reduce Triggers --> 
    action 'LBRACKET' (noprec):   reduce Triggers --> 
    action 'RBRACKET' (noprec):   reduce Triggers --> 
    action 'LITBOOL' (noprec):   reduce Triggers --> 
    action 'LITINT' (noprec):   reduce Triggers --> 
    action 'QLID' (noprec):   reduce Triggers --> 
    action 'QUID' (noprec):   reduce Triggers --> 
    action 'DLID' (noprec):   reduce Triggers --> 
    action 'DUID' (noprec):   reduce Triggers --> 
    action 'LID' (noprec):   reduce Triggers --> 
    action 'UID' (noprec):   reduce Triggers --> 
    action 'error' (noprec):   reduce Triggers --> 
    action '#' (noprec):   reduce Triggers --> 
    action '$$' (noprec):   reduce Triggers --> 

  immediate action: <none>
 gotos:
    goto Triggers: 111

state 111:
  items:
    Exp -> 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers . Exp 'RPAREN'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   shift 14
    action 'EBX' (noprec):   shift 15
    action 'ECX' (noprec):   shift 16
    action 'EDX' (noprec):   shift 17
    action 'ESI' (noprec):   shift 18
    action 'EDI' (noprec):   shift 19
    action 'EBP' (noprec):   shift 20
    action 'ESP' (noprec):   shift 21
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   shift 125
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (explicit right 9999):   shift 107
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (explicit left 10000):   shift 54
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   shift 124
    action 'LITINT' (noprec):   shift 123
    action 'QLID' (noprec):   shift 145
    action 'QUID' (noprec):   shift 144
    action 'DLID' (noprec):   shift 143
    action 'DUID' (noprec):   shift 142
    action 'LID' (noprec):   shift 4
    action 'UID' (noprec):   shift 5
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto ID: 141
    goto Reg: 132
    goto Exp: 74
    goto AnyId: 128

state 112:
  items:
    Exp -> 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers Exp 'RPAREN' . 

  actions:
    action 'EOF' (explicit left 10000):   reduce Exp --> 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'EAX' (explicit left 10000):   reduce Exp --> 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'EBX' (explicit left 10000):   reduce Exp --> 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'ECX' (explicit left 10000):   reduce Exp --> 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'EDX' (explicit left 10000):   reduce Exp --> 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'ESI' (explicit left 10000):   reduce Exp --> 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'EDI' (explicit left 10000):   reduce Exp --> 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'EBP' (explicit left 10000):   reduce Exp --> 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'ESP' (explicit left 10000):   reduce Exp --> 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'MODIFIES' (explicit left 10000):   reduce Exp --> 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'INVARIANT' (explicit left 10000):   reduce Exp --> 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'ASSERT' (explicit left 10000):   reduce Exp --> 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'HAVOC' (explicit left 10000):   reduce Exp --> 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'GOTO' (explicit left 10000):   reduce Exp --> 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'CALL' (explicit left 10000):   reduce Exp --> 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'CCALL' (explicit left 10000):   reduce Exp --> 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'RET' (explicit left 10000):   reduce Exp --> 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'IRET' (explicit left 10000):   reduce Exp --> 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'GO' (explicit left 10000):   reduce Exp --> 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'FORALL' (explicit left 10000):   reduce Exp --> 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'EXISTS' (explicit left 10000):   reduce Exp --> 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'OLD' (explicit left 10000):   reduce Exp --> 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'COLONCOLON' (explicit left 10000):   reduce Exp --> 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'EQEQGT' (explicit left 10000):   reduce Exp --> 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'LTEQEQGT' (explicit left 10000):   reduce Exp --> 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'TYPE' (explicit left 10000):   reduce Exp --> 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'CONST' (explicit left 10000):   reduce Exp --> 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'FUNCTION' (explicit left 10000):   reduce Exp --> 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'RETURNS' (explicit left 10000):   reduce Exp --> 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'AXIOM' (explicit left 10000):   reduce Exp --> 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'PROCEDURE' (explicit left 10000):   reduce Exp --> 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'IMPLEMENTATION' (explicit left 10000):   reduce Exp --> 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'REQUIRES' (explicit left 10000):   reduce Exp --> 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'ENSURES' (explicit left 10000):   reduce Exp --> 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'LT' (explicit left 10000):   reduce Exp --> 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'GT' (explicit left 10000):   reduce Exp --> 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'EQ' (explicit left 10000):   reduce Exp --> 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'BANG' (explicit left 10000):   reduce Exp --> 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'COMMA' (explicit left 10000):   reduce Exp --> 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'LE' (explicit left 10000):   reduce Exp --> 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'GE' (explicit left 10000):   reduce Exp --> 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'EQEQ' (explicit left 10000):   reduce Exp --> 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'NE' (explicit left 10000):   reduce Exp --> 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'PLUS' (explicit left 10000):   reduce Exp --> 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'MINUS' (explicit left 10000):   reduce Exp --> 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'STAR' (explicit left 10000):   reduce Exp --> 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'SLASH' (explicit left 10000):   reduce Exp --> 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'PERCENT' (explicit left 10000):   reduce Exp --> 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'AMPAMP' (explicit left 10000):   reduce Exp --> 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'BARBAR' (explicit left 10000):   reduce Exp --> 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'COLONEQ' (explicit left 10000):   reduce Exp --> 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'INT' (explicit left 10000):   reduce Exp --> 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'BOOL' (explicit left 10000):   reduce Exp --> 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'IF' (explicit left 10000):   reduce Exp --> 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'RETURN' (explicit left 10000):   reduce Exp --> 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'VAR' (explicit left 10000):   reduce Exp --> 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'LBRACE' (explicit left 10000):   reduce Exp --> 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'RBRACE' (explicit left 10000):   reduce Exp --> 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'SEMI' (explicit left 10000):   reduce Exp --> 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'COLON' (explicit left 10000):   reduce Exp --> 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'LPAREN' (explicit left 10000):   reduce Exp --> 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'RPAREN' (explicit left 10000):   reduce Exp --> 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'LBRACKET' (explicit left 10000):   reduce Exp --> 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'RBRACKET' (explicit left 10000):   reduce Exp --> 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'LITBOOL' (explicit left 10000):   reduce Exp --> 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'LITINT' (explicit left 10000):   reduce Exp --> 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'QLID' (explicit left 10000):   reduce Exp --> 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'QUID' (explicit left 10000):   reduce Exp --> 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'DLID' (explicit left 10000):   reduce Exp --> 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'DUID' (explicit left 10000):   reduce Exp --> 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'LID' (explicit left 10000):   reduce Exp --> 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'UID' (explicit left 10000):   reduce Exp --> 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'error' (explicit left 10000):   reduce Exp --> 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action '#' (explicit left 10000):   reduce Exp --> 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action '$$' (explicit left 10000):   reduce Exp --> 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers Exp 'RPAREN'

  immediate action:   reduce Exp --> 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
 gotos:

state 113:
  items:
    Exp -> 'LPAREN' 'EXISTS' . Formals 'COLONCOLON' Triggers Exp 'RPAREN'

  actions:
    action 'EOF' (noprec):   reduce Formals --> 
    action 'EAX' (noprec):   reduce Formals --> 
    action 'EBX' (noprec):   reduce Formals --> 
    action 'ECX' (noprec):   reduce Formals --> 
    action 'EDX' (noprec):   reduce Formals --> 
    action 'ESI' (noprec):   reduce Formals --> 
    action 'EDI' (noprec):   reduce Formals --> 
    action 'EBP' (noprec):   reduce Formals --> 
    action 'ESP' (noprec):   reduce Formals --> 
    action 'MODIFIES' (noprec):   reduce Formals --> 
    action 'INVARIANT' (noprec):   reduce Formals --> 
    action 'ASSERT' (noprec):   reduce Formals --> 
    action 'HAVOC' (noprec):   reduce Formals --> 
    action 'GOTO' (noprec):   reduce Formals --> 
    action 'CALL' (noprec):   reduce Formals --> 
    action 'CCALL' (noprec):   reduce Formals --> 
    action 'RET' (noprec):   reduce Formals --> 
    action 'IRET' (noprec):   reduce Formals --> 
    action 'GO' (noprec):   reduce Formals --> 
    action 'FORALL' (noprec):   reduce Formals --> 
    action 'EXISTS' (noprec):   reduce Formals --> 
    action 'OLD' (noprec):   reduce Formals --> 
    action 'COLONCOLON' (noprec):   reduce Formals --> 
    action 'EQEQGT' (noprec):   reduce Formals --> 
    action 'LTEQEQGT' (noprec):   reduce Formals --> 
    action 'TYPE' (noprec):   reduce Formals --> 
    action 'CONST' (noprec):   reduce Formals --> 
    action 'FUNCTION' (noprec):   reduce Formals --> 
    action 'RETURNS' (noprec):   reduce Formals --> 
    action 'AXIOM' (noprec):   reduce Formals --> 
    action 'PROCEDURE' (noprec):   reduce Formals --> 
    action 'IMPLEMENTATION' (noprec):   reduce Formals --> 
    action 'REQUIRES' (noprec):   reduce Formals --> 
    action 'ENSURES' (noprec):   reduce Formals --> 
    action 'LT' (noprec):   reduce Formals --> 
    action 'GT' (noprec):   reduce Formals --> 
    action 'EQ' (noprec):   reduce Formals --> 
    action 'BANG' (noprec):   reduce Formals --> 
    action 'COMMA' (noprec):   reduce Formals --> 
    action 'LE' (noprec):   reduce Formals --> 
    action 'GE' (noprec):   reduce Formals --> 
    action 'EQEQ' (noprec):   reduce Formals --> 
    action 'NE' (noprec):   reduce Formals --> 
    action 'PLUS' (noprec):   reduce Formals --> 
    action 'MINUS' (noprec):   reduce Formals --> 
    action 'STAR' (noprec):   reduce Formals --> 
    action 'SLASH' (noprec):   reduce Formals --> 
    action 'PERCENT' (noprec):   reduce Formals --> 
    action 'AMPAMP' (noprec):   reduce Formals --> 
    action 'BARBAR' (noprec):   reduce Formals --> 
    action 'COLONEQ' (noprec):   reduce Formals --> 
    action 'INT' (noprec):   reduce Formals --> 
    action 'BOOL' (noprec):   reduce Formals --> 
    action 'IF' (noprec):   reduce Formals --> 
    action 'RETURN' (noprec):   reduce Formals --> 
    action 'VAR' (noprec):   reduce Formals --> 
    action 'LBRACE' (noprec):   reduce Formals --> 
    action 'RBRACE' (noprec):   reduce Formals --> 
    action 'SEMI' (noprec):   reduce Formals --> 
    action 'COLON' (noprec):   reduce Formals --> 
    action 'LPAREN' (noprec):   reduce Formals --> 
    action 'RPAREN' (noprec):   reduce Formals --> 
    action 'LBRACKET' (noprec):   reduce Formals --> 
    action 'RBRACKET' (noprec):   reduce Formals --> 
    action 'LITBOOL' (noprec):   reduce Formals --> 
    action 'LITINT' (noprec):   reduce Formals --> 
    action 'QLID' (noprec):   shift 145
    action 'QUID' (noprec):   shift 144
    action 'DLID' (noprec):   shift 143
    action 'DUID' (noprec):   shift 142
    action 'LID' (noprec):   shift 4
    action 'UID' (noprec):   shift 5
    action 'error' (noprec):   reduce Formals --> 
    action '#' (noprec):   reduce Formals --> 
    action '$$' (noprec):   reduce Formals --> 

  immediate action: <none>
 gotos:
    goto ID: 141
    goto AnyId: 275
    goto Formal: 278
    goto Formals: 114

state 114:
  items:
    Exp -> 'LPAREN' 'EXISTS' Formals . 'COLONCOLON' Triggers Exp 'RPAREN'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   shift 115
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 115:
  items:
    Exp -> 'LPAREN' 'EXISTS' Formals 'COLONCOLON' . Triggers Exp 'RPAREN'

  actions:
    action 'EOF' (noprec):   reduce Triggers --> 
    action 'EAX' (noprec):   reduce Triggers --> 
    action 'EBX' (noprec):   reduce Triggers --> 
    action 'ECX' (noprec):   reduce Triggers --> 
    action 'EDX' (noprec):   reduce Triggers --> 
    action 'ESI' (noprec):   reduce Triggers --> 
    action 'EDI' (noprec):   reduce Triggers --> 
    action 'EBP' (noprec):   reduce Triggers --> 
    action 'ESP' (noprec):   reduce Triggers --> 
    action 'MODIFIES' (noprec):   reduce Triggers --> 
    action 'INVARIANT' (noprec):   reduce Triggers --> 
    action 'ASSERT' (noprec):   reduce Triggers --> 
    action 'HAVOC' (noprec):   reduce Triggers --> 
    action 'GOTO' (noprec):   reduce Triggers --> 
    action 'CALL' (noprec):   reduce Triggers --> 
    action 'CCALL' (noprec):   reduce Triggers --> 
    action 'RET' (noprec):   reduce Triggers --> 
    action 'IRET' (noprec):   reduce Triggers --> 
    action 'GO' (noprec):   reduce Triggers --> 
    action 'FORALL' (noprec):   reduce Triggers --> 
    action 'EXISTS' (noprec):   reduce Triggers --> 
    action 'OLD' (noprec):   reduce Triggers --> 
    action 'COLONCOLON' (noprec):   reduce Triggers --> 
    action 'EQEQGT' (noprec):   reduce Triggers --> 
    action 'LTEQEQGT' (noprec):   reduce Triggers --> 
    action 'TYPE' (noprec):   reduce Triggers --> 
    action 'CONST' (noprec):   reduce Triggers --> 
    action 'FUNCTION' (noprec):   reduce Triggers --> 
    action 'RETURNS' (noprec):   reduce Triggers --> 
    action 'AXIOM' (noprec):   reduce Triggers --> 
    action 'PROCEDURE' (noprec):   reduce Triggers --> 
    action 'IMPLEMENTATION' (noprec):   reduce Triggers --> 
    action 'REQUIRES' (noprec):   reduce Triggers --> 
    action 'ENSURES' (noprec):   reduce Triggers --> 
    action 'LT' (noprec):   reduce Triggers --> 
    action 'GT' (noprec):   reduce Triggers --> 
    action 'EQ' (noprec):   reduce Triggers --> 
    action 'BANG' (noprec):   reduce Triggers --> 
    action 'COMMA' (noprec):   reduce Triggers --> 
    action 'LE' (noprec):   reduce Triggers --> 
    action 'GE' (noprec):   reduce Triggers --> 
    action 'EQEQ' (noprec):   reduce Triggers --> 
    action 'NE' (noprec):   reduce Triggers --> 
    action 'PLUS' (noprec):   reduce Triggers --> 
    action 'MINUS' (noprec):   reduce Triggers --> 
    action 'STAR' (noprec):   reduce Triggers --> 
    action 'SLASH' (noprec):   reduce Triggers --> 
    action 'PERCENT' (noprec):   reduce Triggers --> 
    action 'AMPAMP' (noprec):   reduce Triggers --> 
    action 'BARBAR' (noprec):   reduce Triggers --> 
    action 'COLONEQ' (noprec):   reduce Triggers --> 
    action 'INT' (noprec):   reduce Triggers --> 
    action 'BOOL' (noprec):   reduce Triggers --> 
    action 'IF' (noprec):   reduce Triggers --> 
    action 'RETURN' (noprec):   reduce Triggers --> 
    action 'VAR' (noprec):   reduce Triggers --> 
    action 'LBRACE' (noprec):   shift 50
    action 'RBRACE' (noprec):   reduce Triggers --> 
    action 'SEMI' (noprec):   reduce Triggers --> 
    action 'COLON' (noprec):   reduce Triggers --> 
    action 'LPAREN' (noprec):   reduce Triggers --> 
    action 'RPAREN' (noprec):   reduce Triggers --> 
    action 'LBRACKET' (noprec):   reduce Triggers --> 
    action 'RBRACKET' (noprec):   reduce Triggers --> 
    action 'LITBOOL' (noprec):   reduce Triggers --> 
    action 'LITINT' (noprec):   reduce Triggers --> 
    action 'QLID' (noprec):   reduce Triggers --> 
    action 'QUID' (noprec):   reduce Triggers --> 
    action 'DLID' (noprec):   reduce Triggers --> 
    action 'DUID' (noprec):   reduce Triggers --> 
    action 'LID' (noprec):   reduce Triggers --> 
    action 'UID' (noprec):   reduce Triggers --> 
    action 'error' (noprec):   reduce Triggers --> 
    action '#' (noprec):   reduce Triggers --> 
    action '$$' (noprec):   reduce Triggers --> 

  immediate action: <none>
 gotos:
    goto Triggers: 116

state 116:
  items:
    Exp -> 'LPAREN' 'EXISTS' Formals 'COLONCOLON' Triggers . Exp 'RPAREN'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   shift 14
    action 'EBX' (noprec):   shift 15
    action 'ECX' (noprec):   shift 16
    action 'EDX' (noprec):   shift 17
    action 'ESI' (noprec):   shift 18
    action 'EDI' (noprec):   shift 19
    action 'EBP' (noprec):   shift 20
    action 'ESP' (noprec):   shift 21
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   shift 125
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (explicit right 9999):   shift 107
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (explicit left 10000):   shift 54
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   shift 124
    action 'LITINT' (noprec):   shift 123
    action 'QLID' (noprec):   shift 145
    action 'QUID' (noprec):   shift 144
    action 'DLID' (noprec):   shift 143
    action 'DUID' (noprec):   shift 142
    action 'LID' (noprec):   shift 4
    action 'UID' (noprec):   shift 5
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto ID: 141
    goto Reg: 132
    goto Exp: 75
    goto AnyId: 128

state 117:
  items:
    Exp -> 'LPAREN' 'EXISTS' Formals 'COLONCOLON' Triggers Exp 'RPAREN' . 

  actions:
    action 'EOF' (explicit left 10000):   reduce Exp --> 'LPAREN' 'EXISTS' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'EAX' (explicit left 10000):   reduce Exp --> 'LPAREN' 'EXISTS' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'EBX' (explicit left 10000):   reduce Exp --> 'LPAREN' 'EXISTS' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'ECX' (explicit left 10000):   reduce Exp --> 'LPAREN' 'EXISTS' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'EDX' (explicit left 10000):   reduce Exp --> 'LPAREN' 'EXISTS' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'ESI' (explicit left 10000):   reduce Exp --> 'LPAREN' 'EXISTS' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'EDI' (explicit left 10000):   reduce Exp --> 'LPAREN' 'EXISTS' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'EBP' (explicit left 10000):   reduce Exp --> 'LPAREN' 'EXISTS' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'ESP' (explicit left 10000):   reduce Exp --> 'LPAREN' 'EXISTS' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'MODIFIES' (explicit left 10000):   reduce Exp --> 'LPAREN' 'EXISTS' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'INVARIANT' (explicit left 10000):   reduce Exp --> 'LPAREN' 'EXISTS' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'ASSERT' (explicit left 10000):   reduce Exp --> 'LPAREN' 'EXISTS' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'HAVOC' (explicit left 10000):   reduce Exp --> 'LPAREN' 'EXISTS' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'GOTO' (explicit left 10000):   reduce Exp --> 'LPAREN' 'EXISTS' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'CALL' (explicit left 10000):   reduce Exp --> 'LPAREN' 'EXISTS' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'CCALL' (explicit left 10000):   reduce Exp --> 'LPAREN' 'EXISTS' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'RET' (explicit left 10000):   reduce Exp --> 'LPAREN' 'EXISTS' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'IRET' (explicit left 10000):   reduce Exp --> 'LPAREN' 'EXISTS' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'GO' (explicit left 10000):   reduce Exp --> 'LPAREN' 'EXISTS' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'FORALL' (explicit left 10000):   reduce Exp --> 'LPAREN' 'EXISTS' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'EXISTS' (explicit left 10000):   reduce Exp --> 'LPAREN' 'EXISTS' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'OLD' (explicit left 10000):   reduce Exp --> 'LPAREN' 'EXISTS' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'COLONCOLON' (explicit left 10000):   reduce Exp --> 'LPAREN' 'EXISTS' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'EQEQGT' (explicit left 10000):   reduce Exp --> 'LPAREN' 'EXISTS' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'LTEQEQGT' (explicit left 10000):   reduce Exp --> 'LPAREN' 'EXISTS' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'TYPE' (explicit left 10000):   reduce Exp --> 'LPAREN' 'EXISTS' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'CONST' (explicit left 10000):   reduce Exp --> 'LPAREN' 'EXISTS' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'FUNCTION' (explicit left 10000):   reduce Exp --> 'LPAREN' 'EXISTS' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'RETURNS' (explicit left 10000):   reduce Exp --> 'LPAREN' 'EXISTS' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'AXIOM' (explicit left 10000):   reduce Exp --> 'LPAREN' 'EXISTS' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'PROCEDURE' (explicit left 10000):   reduce Exp --> 'LPAREN' 'EXISTS' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'IMPLEMENTATION' (explicit left 10000):   reduce Exp --> 'LPAREN' 'EXISTS' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'REQUIRES' (explicit left 10000):   reduce Exp --> 'LPAREN' 'EXISTS' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'ENSURES' (explicit left 10000):   reduce Exp --> 'LPAREN' 'EXISTS' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'LT' (explicit left 10000):   reduce Exp --> 'LPAREN' 'EXISTS' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'GT' (explicit left 10000):   reduce Exp --> 'LPAREN' 'EXISTS' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'EQ' (explicit left 10000):   reduce Exp --> 'LPAREN' 'EXISTS' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'BANG' (explicit left 10000):   reduce Exp --> 'LPAREN' 'EXISTS' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'COMMA' (explicit left 10000):   reduce Exp --> 'LPAREN' 'EXISTS' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'LE' (explicit left 10000):   reduce Exp --> 'LPAREN' 'EXISTS' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'GE' (explicit left 10000):   reduce Exp --> 'LPAREN' 'EXISTS' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'EQEQ' (explicit left 10000):   reduce Exp --> 'LPAREN' 'EXISTS' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'NE' (explicit left 10000):   reduce Exp --> 'LPAREN' 'EXISTS' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'PLUS' (explicit left 10000):   reduce Exp --> 'LPAREN' 'EXISTS' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'MINUS' (explicit left 10000):   reduce Exp --> 'LPAREN' 'EXISTS' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'STAR' (explicit left 10000):   reduce Exp --> 'LPAREN' 'EXISTS' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'SLASH' (explicit left 10000):   reduce Exp --> 'LPAREN' 'EXISTS' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'PERCENT' (explicit left 10000):   reduce Exp --> 'LPAREN' 'EXISTS' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'AMPAMP' (explicit left 10000):   reduce Exp --> 'LPAREN' 'EXISTS' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'BARBAR' (explicit left 10000):   reduce Exp --> 'LPAREN' 'EXISTS' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'COLONEQ' (explicit left 10000):   reduce Exp --> 'LPAREN' 'EXISTS' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'INT' (explicit left 10000):   reduce Exp --> 'LPAREN' 'EXISTS' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'BOOL' (explicit left 10000):   reduce Exp --> 'LPAREN' 'EXISTS' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'IF' (explicit left 10000):   reduce Exp --> 'LPAREN' 'EXISTS' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'RETURN' (explicit left 10000):   reduce Exp --> 'LPAREN' 'EXISTS' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'VAR' (explicit left 10000):   reduce Exp --> 'LPAREN' 'EXISTS' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'LBRACE' (explicit left 10000):   reduce Exp --> 'LPAREN' 'EXISTS' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'RBRACE' (explicit left 10000):   reduce Exp --> 'LPAREN' 'EXISTS' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'SEMI' (explicit left 10000):   reduce Exp --> 'LPAREN' 'EXISTS' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'COLON' (explicit left 10000):   reduce Exp --> 'LPAREN' 'EXISTS' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'LPAREN' (explicit left 10000):   reduce Exp --> 'LPAREN' 'EXISTS' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'RPAREN' (explicit left 10000):   reduce Exp --> 'LPAREN' 'EXISTS' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'LBRACKET' (explicit left 10000):   reduce Exp --> 'LPAREN' 'EXISTS' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'RBRACKET' (explicit left 10000):   reduce Exp --> 'LPAREN' 'EXISTS' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'LITBOOL' (explicit left 10000):   reduce Exp --> 'LPAREN' 'EXISTS' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'LITINT' (explicit left 10000):   reduce Exp --> 'LPAREN' 'EXISTS' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'QLID' (explicit left 10000):   reduce Exp --> 'LPAREN' 'EXISTS' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'QUID' (explicit left 10000):   reduce Exp --> 'LPAREN' 'EXISTS' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'DLID' (explicit left 10000):   reduce Exp --> 'LPAREN' 'EXISTS' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'DUID' (explicit left 10000):   reduce Exp --> 'LPAREN' 'EXISTS' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'LID' (explicit left 10000):   reduce Exp --> 'LPAREN' 'EXISTS' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'UID' (explicit left 10000):   reduce Exp --> 'LPAREN' 'EXISTS' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action 'error' (explicit left 10000):   reduce Exp --> 'LPAREN' 'EXISTS' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action '#' (explicit left 10000):   reduce Exp --> 'LPAREN' 'EXISTS' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
    action '$$' (explicit left 10000):   reduce Exp --> 'LPAREN' 'EXISTS' Formals 'COLONCOLON' Triggers Exp 'RPAREN'

  immediate action:   reduce Exp --> 'LPAREN' 'EXISTS' Formals 'COLONCOLON' Triggers Exp 'RPAREN'
 gotos:

state 118:
  items:
    Exp -> Exp 'LBRACKET' . Exps 'RBRACKET'
    Exp -> Exp 'LBRACKET' . Exps 'COLONEQ' Exp 'RBRACKET'

  actions:
    action 'EOF' (noprec):   reduce Exps --> 
    action 'EAX' (noprec):   shift 14
    action 'EBX' (noprec):   shift 15
    action 'ECX' (noprec):   shift 16
    action 'EDX' (noprec):   shift 17
    action 'ESI' (noprec):   shift 18
    action 'EDI' (noprec):   shift 19
    action 'EBP' (noprec):   shift 20
    action 'ESP' (noprec):   shift 21
    action 'MODIFIES' (noprec):   reduce Exps --> 
    action 'INVARIANT' (noprec):   reduce Exps --> 
    action 'ASSERT' (noprec):   reduce Exps --> 
    action 'HAVOC' (noprec):   reduce Exps --> 
    action 'GOTO' (noprec):   reduce Exps --> 
    action 'CALL' (noprec):   reduce Exps --> 
    action 'CCALL' (noprec):   reduce Exps --> 
    action 'RET' (noprec):   reduce Exps --> 
    action 'IRET' (noprec):   reduce Exps --> 
    action 'GO' (noprec):   reduce Exps --> 
    action 'FORALL' (noprec):   reduce Exps --> 
    action 'EXISTS' (noprec):   reduce Exps --> 
    action 'OLD' (noprec):   shift 125
    action 'COLONCOLON' (noprec):   reduce Exps --> 
    action 'EQEQGT' (noprec):   reduce Exps --> 
    action 'LTEQEQGT' (noprec):   reduce Exps --> 
    action 'TYPE' (noprec):   reduce Exps --> 
    action 'CONST' (noprec):   reduce Exps --> 
    action 'FUNCTION' (noprec):   reduce Exps --> 
    action 'RETURNS' (noprec):   reduce Exps --> 
    action 'AXIOM' (noprec):   reduce Exps --> 
    action 'PROCEDURE' (noprec):   reduce Exps --> 
    action 'IMPLEMENTATION' (noprec):   reduce Exps --> 
    action 'REQUIRES' (noprec):   reduce Exps --> 
    action 'ENSURES' (noprec):   reduce Exps --> 
    action 'LT' (noprec):   reduce Exps --> 
    action 'GT' (noprec):   reduce Exps --> 
    action 'EQ' (noprec):   reduce Exps --> 
    action 'BANG' (explicit right 9999):   shift 107
    action 'COMMA' (noprec):   reduce Exps --> 
    action 'LE' (noprec):   reduce Exps --> 
    action 'GE' (noprec):   reduce Exps --> 
    action 'EQEQ' (noprec):   reduce Exps --> 
    action 'NE' (noprec):   reduce Exps --> 
    action 'PLUS' (noprec):   reduce Exps --> 
    action 'MINUS' (noprec):   reduce Exps --> 
    action 'STAR' (noprec):   reduce Exps --> 
    action 'SLASH' (noprec):   reduce Exps --> 
    action 'PERCENT' (noprec):   reduce Exps --> 
    action 'AMPAMP' (noprec):   reduce Exps --> 
    action 'BARBAR' (noprec):   reduce Exps --> 
    action 'COLONEQ' (noprec):   reduce Exps --> 
    action 'INT' (noprec):   reduce Exps --> 
    action 'BOOL' (noprec):   reduce Exps --> 
    action 'IF' (noprec):   reduce Exps --> 
    action 'RETURN' (noprec):   reduce Exps --> 
    action 'VAR' (noprec):   reduce Exps --> 
    action 'LBRACE' (noprec):   reduce Exps --> 
    action 'RBRACE' (noprec):   reduce Exps --> 
    action 'SEMI' (noprec):   reduce Exps --> 
    action 'COLON' (noprec):   reduce Exps --> 
    action 'LPAREN' (explicit left 10000):   shift 54
    action 'RPAREN' (noprec):   reduce Exps --> 
    action 'LBRACKET' (noprec):   reduce Exps --> 
    action 'RBRACKET' (noprec):   reduce Exps --> 
    action 'LITBOOL' (noprec):   shift 124
    action 'LITINT' (noprec):   shift 123
    action 'QLID' (noprec):   shift 145
    action 'QUID' (noprec):   shift 144
    action 'DLID' (noprec):   shift 143
    action 'DUID' (noprec):   shift 142
    action 'LID' (noprec):   shift 4
    action 'UID' (noprec):   shift 5
    action 'error' (noprec):   reduce Exps --> 
    action '#' (noprec):   reduce Exps --> 
    action '$$' (noprec):   reduce Exps --> 

  immediate action: <none>
 gotos:
    goto ID: 141
    goto Reg: 132
    goto Exp: 78
    goto Exps: 119
    goto AnyId: 128

state 119:
  items:
    Exp -> Exp 'LBRACKET' Exps . 'RBRACKET'
    Exp -> Exp 'LBRACKET' Exps . 'COLONEQ' Exp 'RBRACKET'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   shift 121
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (explicit left 10000):   shift 120
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 120:
  items:
    Exp -> Exp 'LBRACKET' Exps 'RBRACKET' . 

  actions:
    action 'EOF' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'RBRACKET'
    action 'EAX' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'RBRACKET'
    action 'EBX' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'RBRACKET'
    action 'ECX' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'RBRACKET'
    action 'EDX' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'RBRACKET'
    action 'ESI' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'RBRACKET'
    action 'EDI' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'RBRACKET'
    action 'EBP' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'RBRACKET'
    action 'ESP' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'RBRACKET'
    action 'MODIFIES' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'RBRACKET'
    action 'INVARIANT' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'RBRACKET'
    action 'ASSERT' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'RBRACKET'
    action 'HAVOC' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'RBRACKET'
    action 'GOTO' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'RBRACKET'
    action 'CALL' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'RBRACKET'
    action 'CCALL' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'RBRACKET'
    action 'RET' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'RBRACKET'
    action 'IRET' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'RBRACKET'
    action 'GO' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'RBRACKET'
    action 'FORALL' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'RBRACKET'
    action 'EXISTS' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'RBRACKET'
    action 'OLD' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'RBRACKET'
    action 'COLONCOLON' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'RBRACKET'
    action 'EQEQGT' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'RBRACKET'
    action 'LTEQEQGT' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'RBRACKET'
    action 'TYPE' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'RBRACKET'
    action 'CONST' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'RBRACKET'
    action 'FUNCTION' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'RBRACKET'
    action 'RETURNS' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'RBRACKET'
    action 'AXIOM' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'RBRACKET'
    action 'PROCEDURE' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'RBRACKET'
    action 'IMPLEMENTATION' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'RBRACKET'
    action 'REQUIRES' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'RBRACKET'
    action 'ENSURES' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'RBRACKET'
    action 'LT' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'RBRACKET'
    action 'GT' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'RBRACKET'
    action 'EQ' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'RBRACKET'
    action 'BANG' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'RBRACKET'
    action 'COMMA' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'RBRACKET'
    action 'LE' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'RBRACKET'
    action 'GE' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'RBRACKET'
    action 'EQEQ' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'RBRACKET'
    action 'NE' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'RBRACKET'
    action 'PLUS' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'RBRACKET'
    action 'MINUS' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'RBRACKET'
    action 'STAR' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'RBRACKET'
    action 'SLASH' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'RBRACKET'
    action 'PERCENT' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'RBRACKET'
    action 'AMPAMP' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'RBRACKET'
    action 'BARBAR' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'RBRACKET'
    action 'COLONEQ' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'RBRACKET'
    action 'INT' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'RBRACKET'
    action 'BOOL' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'RBRACKET'
    action 'IF' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'RBRACKET'
    action 'RETURN' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'RBRACKET'
    action 'VAR' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'RBRACKET'
    action 'LBRACE' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'RBRACKET'
    action 'RBRACE' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'RBRACKET'
    action 'SEMI' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'RBRACKET'
    action 'COLON' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'RBRACKET'
    action 'LPAREN' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'RBRACKET'
    action 'RPAREN' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'RBRACKET'
    action 'LBRACKET' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'RBRACKET'
    action 'RBRACKET' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'RBRACKET'
    action 'LITBOOL' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'RBRACKET'
    action 'LITINT' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'RBRACKET'
    action 'QLID' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'RBRACKET'
    action 'QUID' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'RBRACKET'
    action 'DLID' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'RBRACKET'
    action 'DUID' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'RBRACKET'
    action 'LID' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'RBRACKET'
    action 'UID' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'RBRACKET'
    action 'error' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'RBRACKET'
    action '#' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'RBRACKET'
    action '$$' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'RBRACKET'

  immediate action:   reduce Exp --> Exp 'LBRACKET' Exps 'RBRACKET'
 gotos:

state 121:
  items:
    Exp -> Exp 'LBRACKET' Exps 'COLONEQ' . Exp 'RBRACKET'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   shift 14
    action 'EBX' (noprec):   shift 15
    action 'ECX' (noprec):   shift 16
    action 'EDX' (noprec):   shift 17
    action 'ESI' (noprec):   shift 18
    action 'EDI' (noprec):   shift 19
    action 'EBP' (noprec):   shift 20
    action 'ESP' (noprec):   shift 21
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   shift 125
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (explicit right 9999):   shift 107
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (explicit left 10000):   shift 54
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   shift 124
    action 'LITINT' (noprec):   shift 123
    action 'QLID' (noprec):   shift 145
    action 'QUID' (noprec):   shift 144
    action 'DLID' (noprec):   shift 143
    action 'DUID' (noprec):   shift 142
    action 'LID' (noprec):   shift 4
    action 'UID' (noprec):   shift 5
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto ID: 141
    goto Reg: 132
    goto Exp: 76
    goto AnyId: 128

state 122:
  items:
    Exp -> Exp 'LBRACKET' Exps 'COLONEQ' Exp 'RBRACKET' . 

  actions:
    action 'EOF' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'COLONEQ' Exp 'RBRACKET'
    action 'EAX' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'COLONEQ' Exp 'RBRACKET'
    action 'EBX' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'COLONEQ' Exp 'RBRACKET'
    action 'ECX' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'COLONEQ' Exp 'RBRACKET'
    action 'EDX' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'COLONEQ' Exp 'RBRACKET'
    action 'ESI' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'COLONEQ' Exp 'RBRACKET'
    action 'EDI' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'COLONEQ' Exp 'RBRACKET'
    action 'EBP' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'COLONEQ' Exp 'RBRACKET'
    action 'ESP' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'COLONEQ' Exp 'RBRACKET'
    action 'MODIFIES' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'COLONEQ' Exp 'RBRACKET'
    action 'INVARIANT' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'COLONEQ' Exp 'RBRACKET'
    action 'ASSERT' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'COLONEQ' Exp 'RBRACKET'
    action 'HAVOC' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'COLONEQ' Exp 'RBRACKET'
    action 'GOTO' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'COLONEQ' Exp 'RBRACKET'
    action 'CALL' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'COLONEQ' Exp 'RBRACKET'
    action 'CCALL' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'COLONEQ' Exp 'RBRACKET'
    action 'RET' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'COLONEQ' Exp 'RBRACKET'
    action 'IRET' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'COLONEQ' Exp 'RBRACKET'
    action 'GO' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'COLONEQ' Exp 'RBRACKET'
    action 'FORALL' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'COLONEQ' Exp 'RBRACKET'
    action 'EXISTS' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'COLONEQ' Exp 'RBRACKET'
    action 'OLD' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'COLONEQ' Exp 'RBRACKET'
    action 'COLONCOLON' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'COLONEQ' Exp 'RBRACKET'
    action 'EQEQGT' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'COLONEQ' Exp 'RBRACKET'
    action 'LTEQEQGT' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'COLONEQ' Exp 'RBRACKET'
    action 'TYPE' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'COLONEQ' Exp 'RBRACKET'
    action 'CONST' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'COLONEQ' Exp 'RBRACKET'
    action 'FUNCTION' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'COLONEQ' Exp 'RBRACKET'
    action 'RETURNS' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'COLONEQ' Exp 'RBRACKET'
    action 'AXIOM' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'COLONEQ' Exp 'RBRACKET'
    action 'PROCEDURE' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'COLONEQ' Exp 'RBRACKET'
    action 'IMPLEMENTATION' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'COLONEQ' Exp 'RBRACKET'
    action 'REQUIRES' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'COLONEQ' Exp 'RBRACKET'
    action 'ENSURES' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'COLONEQ' Exp 'RBRACKET'
    action 'LT' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'COLONEQ' Exp 'RBRACKET'
    action 'GT' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'COLONEQ' Exp 'RBRACKET'
    action 'EQ' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'COLONEQ' Exp 'RBRACKET'
    action 'BANG' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'COLONEQ' Exp 'RBRACKET'
    action 'COMMA' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'COLONEQ' Exp 'RBRACKET'
    action 'LE' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'COLONEQ' Exp 'RBRACKET'
    action 'GE' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'COLONEQ' Exp 'RBRACKET'
    action 'EQEQ' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'COLONEQ' Exp 'RBRACKET'
    action 'NE' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'COLONEQ' Exp 'RBRACKET'
    action 'PLUS' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'COLONEQ' Exp 'RBRACKET'
    action 'MINUS' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'COLONEQ' Exp 'RBRACKET'
    action 'STAR' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'COLONEQ' Exp 'RBRACKET'
    action 'SLASH' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'COLONEQ' Exp 'RBRACKET'
    action 'PERCENT' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'COLONEQ' Exp 'RBRACKET'
    action 'AMPAMP' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'COLONEQ' Exp 'RBRACKET'
    action 'BARBAR' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'COLONEQ' Exp 'RBRACKET'
    action 'COLONEQ' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'COLONEQ' Exp 'RBRACKET'
    action 'INT' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'COLONEQ' Exp 'RBRACKET'
    action 'BOOL' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'COLONEQ' Exp 'RBRACKET'
    action 'IF' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'COLONEQ' Exp 'RBRACKET'
    action 'RETURN' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'COLONEQ' Exp 'RBRACKET'
    action 'VAR' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'COLONEQ' Exp 'RBRACKET'
    action 'LBRACE' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'COLONEQ' Exp 'RBRACKET'
    action 'RBRACE' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'COLONEQ' Exp 'RBRACKET'
    action 'SEMI' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'COLONEQ' Exp 'RBRACKET'
    action 'COLON' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'COLONEQ' Exp 'RBRACKET'
    action 'LPAREN' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'COLONEQ' Exp 'RBRACKET'
    action 'RPAREN' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'COLONEQ' Exp 'RBRACKET'
    action 'LBRACKET' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'COLONEQ' Exp 'RBRACKET'
    action 'RBRACKET' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'COLONEQ' Exp 'RBRACKET'
    action 'LITBOOL' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'COLONEQ' Exp 'RBRACKET'
    action 'LITINT' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'COLONEQ' Exp 'RBRACKET'
    action 'QLID' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'COLONEQ' Exp 'RBRACKET'
    action 'QUID' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'COLONEQ' Exp 'RBRACKET'
    action 'DLID' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'COLONEQ' Exp 'RBRACKET'
    action 'DUID' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'COLONEQ' Exp 'RBRACKET'
    action 'LID' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'COLONEQ' Exp 'RBRACKET'
    action 'UID' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'COLONEQ' Exp 'RBRACKET'
    action 'error' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'COLONEQ' Exp 'RBRACKET'
    action '#' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'COLONEQ' Exp 'RBRACKET'
    action '$$' (explicit left 10000):   reduce Exp --> Exp 'LBRACKET' Exps 'COLONEQ' Exp 'RBRACKET'

  immediate action:   reduce Exp --> Exp 'LBRACKET' Exps 'COLONEQ' Exp 'RBRACKET'
 gotos:

state 123:
  items:
    Exp -> 'LITINT' . 

  actions:
    action 'EOF' (noprec):   reduce Exp --> 'LITINT'
    action 'EAX' (noprec):   reduce Exp --> 'LITINT'
    action 'EBX' (noprec):   reduce Exp --> 'LITINT'
    action 'ECX' (noprec):   reduce Exp --> 'LITINT'
    action 'EDX' (noprec):   reduce Exp --> 'LITINT'
    action 'ESI' (noprec):   reduce Exp --> 'LITINT'
    action 'EDI' (noprec):   reduce Exp --> 'LITINT'
    action 'EBP' (noprec):   reduce Exp --> 'LITINT'
    action 'ESP' (noprec):   reduce Exp --> 'LITINT'
    action 'MODIFIES' (noprec):   reduce Exp --> 'LITINT'
    action 'INVARIANT' (noprec):   reduce Exp --> 'LITINT'
    action 'ASSERT' (noprec):   reduce Exp --> 'LITINT'
    action 'HAVOC' (noprec):   reduce Exp --> 'LITINT'
    action 'GOTO' (noprec):   reduce Exp --> 'LITINT'
    action 'CALL' (noprec):   reduce Exp --> 'LITINT'
    action 'CCALL' (noprec):   reduce Exp --> 'LITINT'
    action 'RET' (noprec):   reduce Exp --> 'LITINT'
    action 'IRET' (noprec):   reduce Exp --> 'LITINT'
    action 'GO' (noprec):   reduce Exp --> 'LITINT'
    action 'FORALL' (noprec):   reduce Exp --> 'LITINT'
    action 'EXISTS' (noprec):   reduce Exp --> 'LITINT'
    action 'OLD' (noprec):   reduce Exp --> 'LITINT'
    action 'COLONCOLON' (noprec):   reduce Exp --> 'LITINT'
    action 'EQEQGT' (noprec):   reduce Exp --> 'LITINT'
    action 'LTEQEQGT' (noprec):   reduce Exp --> 'LITINT'
    action 'TYPE' (noprec):   reduce Exp --> 'LITINT'
    action 'CONST' (noprec):   reduce Exp --> 'LITINT'
    action 'FUNCTION' (noprec):   reduce Exp --> 'LITINT'
    action 'RETURNS' (noprec):   reduce Exp --> 'LITINT'
    action 'AXIOM' (noprec):   reduce Exp --> 'LITINT'
    action 'PROCEDURE' (noprec):   reduce Exp --> 'LITINT'
    action 'IMPLEMENTATION' (noprec):   reduce Exp --> 'LITINT'
    action 'REQUIRES' (noprec):   reduce Exp --> 'LITINT'
    action 'ENSURES' (noprec):   reduce Exp --> 'LITINT'
    action 'LT' (noprec):   reduce Exp --> 'LITINT'
    action 'GT' (noprec):   reduce Exp --> 'LITINT'
    action 'EQ' (noprec):   reduce Exp --> 'LITINT'
    action 'BANG' (noprec):   reduce Exp --> 'LITINT'
    action 'COMMA' (noprec):   reduce Exp --> 'LITINT'
    action 'LE' (noprec):   reduce Exp --> 'LITINT'
    action 'GE' (noprec):   reduce Exp --> 'LITINT'
    action 'EQEQ' (noprec):   reduce Exp --> 'LITINT'
    action 'NE' (noprec):   reduce Exp --> 'LITINT'
    action 'PLUS' (noprec):   reduce Exp --> 'LITINT'
    action 'MINUS' (noprec):   reduce Exp --> 'LITINT'
    action 'STAR' (noprec):   reduce Exp --> 'LITINT'
    action 'SLASH' (noprec):   reduce Exp --> 'LITINT'
    action 'PERCENT' (noprec):   reduce Exp --> 'LITINT'
    action 'AMPAMP' (noprec):   reduce Exp --> 'LITINT'
    action 'BARBAR' (noprec):   reduce Exp --> 'LITINT'
    action 'COLONEQ' (noprec):   reduce Exp --> 'LITINT'
    action 'INT' (noprec):   reduce Exp --> 'LITINT'
    action 'BOOL' (noprec):   reduce Exp --> 'LITINT'
    action 'IF' (noprec):   reduce Exp --> 'LITINT'
    action 'RETURN' (noprec):   reduce Exp --> 'LITINT'
    action 'VAR' (noprec):   reduce Exp --> 'LITINT'
    action 'LBRACE' (noprec):   reduce Exp --> 'LITINT'
    action 'RBRACE' (noprec):   reduce Exp --> 'LITINT'
    action 'SEMI' (noprec):   reduce Exp --> 'LITINT'
    action 'COLON' (noprec):   reduce Exp --> 'LITINT'
    action 'LPAREN' (noprec):   reduce Exp --> 'LITINT'
    action 'RPAREN' (noprec):   reduce Exp --> 'LITINT'
    action 'LBRACKET' (noprec):   reduce Exp --> 'LITINT'
    action 'RBRACKET' (noprec):   reduce Exp --> 'LITINT'
    action 'LITBOOL' (noprec):   reduce Exp --> 'LITINT'
    action 'LITINT' (noprec):   reduce Exp --> 'LITINT'
    action 'QLID' (noprec):   reduce Exp --> 'LITINT'
    action 'QUID' (noprec):   reduce Exp --> 'LITINT'
    action 'DLID' (noprec):   reduce Exp --> 'LITINT'
    action 'DUID' (noprec):   reduce Exp --> 'LITINT'
    action 'LID' (noprec):   reduce Exp --> 'LITINT'
    action 'UID' (noprec):   reduce Exp --> 'LITINT'
    action 'error' (noprec):   reduce Exp --> 'LITINT'
    action '#' (noprec):   reduce Exp --> 'LITINT'
    action '$$' (noprec):   reduce Exp --> 'LITINT'

  immediate action:   reduce Exp --> 'LITINT'
 gotos:

state 124:
  items:
    Exp -> 'LITBOOL' . 

  actions:
    action 'EOF' (noprec):   reduce Exp --> 'LITBOOL'
    action 'EAX' (noprec):   reduce Exp --> 'LITBOOL'
    action 'EBX' (noprec):   reduce Exp --> 'LITBOOL'
    action 'ECX' (noprec):   reduce Exp --> 'LITBOOL'
    action 'EDX' (noprec):   reduce Exp --> 'LITBOOL'
    action 'ESI' (noprec):   reduce Exp --> 'LITBOOL'
    action 'EDI' (noprec):   reduce Exp --> 'LITBOOL'
    action 'EBP' (noprec):   reduce Exp --> 'LITBOOL'
    action 'ESP' (noprec):   reduce Exp --> 'LITBOOL'
    action 'MODIFIES' (noprec):   reduce Exp --> 'LITBOOL'
    action 'INVARIANT' (noprec):   reduce Exp --> 'LITBOOL'
    action 'ASSERT' (noprec):   reduce Exp --> 'LITBOOL'
    action 'HAVOC' (noprec):   reduce Exp --> 'LITBOOL'
    action 'GOTO' (noprec):   reduce Exp --> 'LITBOOL'
    action 'CALL' (noprec):   reduce Exp --> 'LITBOOL'
    action 'CCALL' (noprec):   reduce Exp --> 'LITBOOL'
    action 'RET' (noprec):   reduce Exp --> 'LITBOOL'
    action 'IRET' (noprec):   reduce Exp --> 'LITBOOL'
    action 'GO' (noprec):   reduce Exp --> 'LITBOOL'
    action 'FORALL' (noprec):   reduce Exp --> 'LITBOOL'
    action 'EXISTS' (noprec):   reduce Exp --> 'LITBOOL'
    action 'OLD' (noprec):   reduce Exp --> 'LITBOOL'
    action 'COLONCOLON' (noprec):   reduce Exp --> 'LITBOOL'
    action 'EQEQGT' (noprec):   reduce Exp --> 'LITBOOL'
    action 'LTEQEQGT' (noprec):   reduce Exp --> 'LITBOOL'
    action 'TYPE' (noprec):   reduce Exp --> 'LITBOOL'
    action 'CONST' (noprec):   reduce Exp --> 'LITBOOL'
    action 'FUNCTION' (noprec):   reduce Exp --> 'LITBOOL'
    action 'RETURNS' (noprec):   reduce Exp --> 'LITBOOL'
    action 'AXIOM' (noprec):   reduce Exp --> 'LITBOOL'
    action 'PROCEDURE' (noprec):   reduce Exp --> 'LITBOOL'
    action 'IMPLEMENTATION' (noprec):   reduce Exp --> 'LITBOOL'
    action 'REQUIRES' (noprec):   reduce Exp --> 'LITBOOL'
    action 'ENSURES' (noprec):   reduce Exp --> 'LITBOOL'
    action 'LT' (noprec):   reduce Exp --> 'LITBOOL'
    action 'GT' (noprec):   reduce Exp --> 'LITBOOL'
    action 'EQ' (noprec):   reduce Exp --> 'LITBOOL'
    action 'BANG' (noprec):   reduce Exp --> 'LITBOOL'
    action 'COMMA' (noprec):   reduce Exp --> 'LITBOOL'
    action 'LE' (noprec):   reduce Exp --> 'LITBOOL'
    action 'GE' (noprec):   reduce Exp --> 'LITBOOL'
    action 'EQEQ' (noprec):   reduce Exp --> 'LITBOOL'
    action 'NE' (noprec):   reduce Exp --> 'LITBOOL'
    action 'PLUS' (noprec):   reduce Exp --> 'LITBOOL'
    action 'MINUS' (noprec):   reduce Exp --> 'LITBOOL'
    action 'STAR' (noprec):   reduce Exp --> 'LITBOOL'
    action 'SLASH' (noprec):   reduce Exp --> 'LITBOOL'
    action 'PERCENT' (noprec):   reduce Exp --> 'LITBOOL'
    action 'AMPAMP' (noprec):   reduce Exp --> 'LITBOOL'
    action 'BARBAR' (noprec):   reduce Exp --> 'LITBOOL'
    action 'COLONEQ' (noprec):   reduce Exp --> 'LITBOOL'
    action 'INT' (noprec):   reduce Exp --> 'LITBOOL'
    action 'BOOL' (noprec):   reduce Exp --> 'LITBOOL'
    action 'IF' (noprec):   reduce Exp --> 'LITBOOL'
    action 'RETURN' (noprec):   reduce Exp --> 'LITBOOL'
    action 'VAR' (noprec):   reduce Exp --> 'LITBOOL'
    action 'LBRACE' (noprec):   reduce Exp --> 'LITBOOL'
    action 'RBRACE' (noprec):   reduce Exp --> 'LITBOOL'
    action 'SEMI' (noprec):   reduce Exp --> 'LITBOOL'
    action 'COLON' (noprec):   reduce Exp --> 'LITBOOL'
    action 'LPAREN' (noprec):   reduce Exp --> 'LITBOOL'
    action 'RPAREN' (noprec):   reduce Exp --> 'LITBOOL'
    action 'LBRACKET' (noprec):   reduce Exp --> 'LITBOOL'
    action 'RBRACKET' (noprec):   reduce Exp --> 'LITBOOL'
    action 'LITBOOL' (noprec):   reduce Exp --> 'LITBOOL'
    action 'LITINT' (noprec):   reduce Exp --> 'LITBOOL'
    action 'QLID' (noprec):   reduce Exp --> 'LITBOOL'
    action 'QUID' (noprec):   reduce Exp --> 'LITBOOL'
    action 'DLID' (noprec):   reduce Exp --> 'LITBOOL'
    action 'DUID' (noprec):   reduce Exp --> 'LITBOOL'
    action 'LID' (noprec):   reduce Exp --> 'LITBOOL'
    action 'UID' (noprec):   reduce Exp --> 'LITBOOL'
    action 'error' (noprec):   reduce Exp --> 'LITBOOL'
    action '#' (noprec):   reduce Exp --> 'LITBOOL'
    action '$$' (noprec):   reduce Exp --> 'LITBOOL'

  immediate action:   reduce Exp --> 'LITBOOL'
 gotos:

state 125:
  items:
    Exp -> 'OLD' . 'LPAREN' Exp 'RPAREN'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (explicit left 10000):   shift 126
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 126:
  items:
    Exp -> 'OLD' 'LPAREN' . Exp 'RPAREN'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   shift 14
    action 'EBX' (noprec):   shift 15
    action 'ECX' (noprec):   shift 16
    action 'EDX' (noprec):   shift 17
    action 'ESI' (noprec):   shift 18
    action 'EDI' (noprec):   shift 19
    action 'EBP' (noprec):   shift 20
    action 'ESP' (noprec):   shift 21
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   shift 125
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (explicit right 9999):   shift 107
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (explicit left 10000):   shift 54
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   shift 124
    action 'LITINT' (noprec):   shift 123
    action 'QLID' (noprec):   shift 145
    action 'QUID' (noprec):   shift 144
    action 'DLID' (noprec):   shift 143
    action 'DUID' (noprec):   shift 142
    action 'LID' (noprec):   shift 4
    action 'UID' (noprec):   shift 5
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto ID: 141
    goto Reg: 132
    goto Exp: 77
    goto AnyId: 128

state 127:
  items:
    Exp -> 'OLD' 'LPAREN' Exp 'RPAREN' . 

  actions:
    action 'EOF' (explicit left 10000):   reduce Exp --> 'OLD' 'LPAREN' Exp 'RPAREN'
    action 'EAX' (explicit left 10000):   reduce Exp --> 'OLD' 'LPAREN' Exp 'RPAREN'
    action 'EBX' (explicit left 10000):   reduce Exp --> 'OLD' 'LPAREN' Exp 'RPAREN'
    action 'ECX' (explicit left 10000):   reduce Exp --> 'OLD' 'LPAREN' Exp 'RPAREN'
    action 'EDX' (explicit left 10000):   reduce Exp --> 'OLD' 'LPAREN' Exp 'RPAREN'
    action 'ESI' (explicit left 10000):   reduce Exp --> 'OLD' 'LPAREN' Exp 'RPAREN'
    action 'EDI' (explicit left 10000):   reduce Exp --> 'OLD' 'LPAREN' Exp 'RPAREN'
    action 'EBP' (explicit left 10000):   reduce Exp --> 'OLD' 'LPAREN' Exp 'RPAREN'
    action 'ESP' (explicit left 10000):   reduce Exp --> 'OLD' 'LPAREN' Exp 'RPAREN'
    action 'MODIFIES' (explicit left 10000):   reduce Exp --> 'OLD' 'LPAREN' Exp 'RPAREN'
    action 'INVARIANT' (explicit left 10000):   reduce Exp --> 'OLD' 'LPAREN' Exp 'RPAREN'
    action 'ASSERT' (explicit left 10000):   reduce Exp --> 'OLD' 'LPAREN' Exp 'RPAREN'
    action 'HAVOC' (explicit left 10000):   reduce Exp --> 'OLD' 'LPAREN' Exp 'RPAREN'
    action 'GOTO' (explicit left 10000):   reduce Exp --> 'OLD' 'LPAREN' Exp 'RPAREN'
    action 'CALL' (explicit left 10000):   reduce Exp --> 'OLD' 'LPAREN' Exp 'RPAREN'
    action 'CCALL' (explicit left 10000):   reduce Exp --> 'OLD' 'LPAREN' Exp 'RPAREN'
    action 'RET' (explicit left 10000):   reduce Exp --> 'OLD' 'LPAREN' Exp 'RPAREN'
    action 'IRET' (explicit left 10000):   reduce Exp --> 'OLD' 'LPAREN' Exp 'RPAREN'
    action 'GO' (explicit left 10000):   reduce Exp --> 'OLD' 'LPAREN' Exp 'RPAREN'
    action 'FORALL' (explicit left 10000):   reduce Exp --> 'OLD' 'LPAREN' Exp 'RPAREN'
    action 'EXISTS' (explicit left 10000):   reduce Exp --> 'OLD' 'LPAREN' Exp 'RPAREN'
    action 'OLD' (explicit left 10000):   reduce Exp --> 'OLD' 'LPAREN' Exp 'RPAREN'
    action 'COLONCOLON' (explicit left 10000):   reduce Exp --> 'OLD' 'LPAREN' Exp 'RPAREN'
    action 'EQEQGT' (explicit left 10000):   reduce Exp --> 'OLD' 'LPAREN' Exp 'RPAREN'
    action 'LTEQEQGT' (explicit left 10000):   reduce Exp --> 'OLD' 'LPAREN' Exp 'RPAREN'
    action 'TYPE' (explicit left 10000):   reduce Exp --> 'OLD' 'LPAREN' Exp 'RPAREN'
    action 'CONST' (explicit left 10000):   reduce Exp --> 'OLD' 'LPAREN' Exp 'RPAREN'
    action 'FUNCTION' (explicit left 10000):   reduce Exp --> 'OLD' 'LPAREN' Exp 'RPAREN'
    action 'RETURNS' (explicit left 10000):   reduce Exp --> 'OLD' 'LPAREN' Exp 'RPAREN'
    action 'AXIOM' (explicit left 10000):   reduce Exp --> 'OLD' 'LPAREN' Exp 'RPAREN'
    action 'PROCEDURE' (explicit left 10000):   reduce Exp --> 'OLD' 'LPAREN' Exp 'RPAREN'
    action 'IMPLEMENTATION' (explicit left 10000):   reduce Exp --> 'OLD' 'LPAREN' Exp 'RPAREN'
    action 'REQUIRES' (explicit left 10000):   reduce Exp --> 'OLD' 'LPAREN' Exp 'RPAREN'
    action 'ENSURES' (explicit left 10000):   reduce Exp --> 'OLD' 'LPAREN' Exp 'RPAREN'
    action 'LT' (explicit left 10000):   reduce Exp --> 'OLD' 'LPAREN' Exp 'RPAREN'
    action 'GT' (explicit left 10000):   reduce Exp --> 'OLD' 'LPAREN' Exp 'RPAREN'
    action 'EQ' (explicit left 10000):   reduce Exp --> 'OLD' 'LPAREN' Exp 'RPAREN'
    action 'BANG' (explicit left 10000):   reduce Exp --> 'OLD' 'LPAREN' Exp 'RPAREN'
    action 'COMMA' (explicit left 10000):   reduce Exp --> 'OLD' 'LPAREN' Exp 'RPAREN'
    action 'LE' (explicit left 10000):   reduce Exp --> 'OLD' 'LPAREN' Exp 'RPAREN'
    action 'GE' (explicit left 10000):   reduce Exp --> 'OLD' 'LPAREN' Exp 'RPAREN'
    action 'EQEQ' (explicit left 10000):   reduce Exp --> 'OLD' 'LPAREN' Exp 'RPAREN'
    action 'NE' (explicit left 10000):   reduce Exp --> 'OLD' 'LPAREN' Exp 'RPAREN'
    action 'PLUS' (explicit left 10000):   reduce Exp --> 'OLD' 'LPAREN' Exp 'RPAREN'
    action 'MINUS' (explicit left 10000):   reduce Exp --> 'OLD' 'LPAREN' Exp 'RPAREN'
    action 'STAR' (explicit left 10000):   reduce Exp --> 'OLD' 'LPAREN' Exp 'RPAREN'
    action 'SLASH' (explicit left 10000):   reduce Exp --> 'OLD' 'LPAREN' Exp 'RPAREN'
    action 'PERCENT' (explicit left 10000):   reduce Exp --> 'OLD' 'LPAREN' Exp 'RPAREN'
    action 'AMPAMP' (explicit left 10000):   reduce Exp --> 'OLD' 'LPAREN' Exp 'RPAREN'
    action 'BARBAR' (explicit left 10000):   reduce Exp --> 'OLD' 'LPAREN' Exp 'RPAREN'
    action 'COLONEQ' (explicit left 10000):   reduce Exp --> 'OLD' 'LPAREN' Exp 'RPAREN'
    action 'INT' (explicit left 10000):   reduce Exp --> 'OLD' 'LPAREN' Exp 'RPAREN'
    action 'BOOL' (explicit left 10000):   reduce Exp --> 'OLD' 'LPAREN' Exp 'RPAREN'
    action 'IF' (explicit left 10000):   reduce Exp --> 'OLD' 'LPAREN' Exp 'RPAREN'
    action 'RETURN' (explicit left 10000):   reduce Exp --> 'OLD' 'LPAREN' Exp 'RPAREN'
    action 'VAR' (explicit left 10000):   reduce Exp --> 'OLD' 'LPAREN' Exp 'RPAREN'
    action 'LBRACE' (explicit left 10000):   reduce Exp --> 'OLD' 'LPAREN' Exp 'RPAREN'
    action 'RBRACE' (explicit left 10000):   reduce Exp --> 'OLD' 'LPAREN' Exp 'RPAREN'
    action 'SEMI' (explicit left 10000):   reduce Exp --> 'OLD' 'LPAREN' Exp 'RPAREN'
    action 'COLON' (explicit left 10000):   reduce Exp --> 'OLD' 'LPAREN' Exp 'RPAREN'
    action 'LPAREN' (explicit left 10000):   reduce Exp --> 'OLD' 'LPAREN' Exp 'RPAREN'
    action 'RPAREN' (explicit left 10000):   reduce Exp --> 'OLD' 'LPAREN' Exp 'RPAREN'
    action 'LBRACKET' (explicit left 10000):   reduce Exp --> 'OLD' 'LPAREN' Exp 'RPAREN'
    action 'RBRACKET' (explicit left 10000):   reduce Exp --> 'OLD' 'LPAREN' Exp 'RPAREN'
    action 'LITBOOL' (explicit left 10000):   reduce Exp --> 'OLD' 'LPAREN' Exp 'RPAREN'
    action 'LITINT' (explicit left 10000):   reduce Exp --> 'OLD' 'LPAREN' Exp 'RPAREN'
    action 'QLID' (explicit left 10000):   reduce Exp --> 'OLD' 'LPAREN' Exp 'RPAREN'
    action 'QUID' (explicit left 10000):   reduce Exp --> 'OLD' 'LPAREN' Exp 'RPAREN'
    action 'DLID' (explicit left 10000):   reduce Exp --> 'OLD' 'LPAREN' Exp 'RPAREN'
    action 'DUID' (explicit left 10000):   reduce Exp --> 'OLD' 'LPAREN' Exp 'RPAREN'
    action 'LID' (explicit left 10000):   reduce Exp --> 'OLD' 'LPAREN' Exp 'RPAREN'
    action 'UID' (explicit left 10000):   reduce Exp --> 'OLD' 'LPAREN' Exp 'RPAREN'
    action 'error' (explicit left 10000):   reduce Exp --> 'OLD' 'LPAREN' Exp 'RPAREN'
    action '#' (explicit left 10000):   reduce Exp --> 'OLD' 'LPAREN' Exp 'RPAREN'
    action '$$' (explicit left 10000):   reduce Exp --> 'OLD' 'LPAREN' Exp 'RPAREN'

  immediate action:   reduce Exp --> 'OLD' 'LPAREN' Exp 'RPAREN'
 gotos:

state 128:
  items:
    Exp -> AnyId . 'LPAREN' Exps 'RPAREN'
    Exp -> AnyId . 

  actions:
    action 'EOF' (noprec):   reduce Exp --> AnyId
    action 'EAX' (noprec):   reduce Exp --> AnyId
    action 'EBX' (noprec):   reduce Exp --> AnyId
    action 'ECX' (noprec):   reduce Exp --> AnyId
    action 'EDX' (noprec):   reduce Exp --> AnyId
    action 'ESI' (noprec):   reduce Exp --> AnyId
    action 'EDI' (noprec):   reduce Exp --> AnyId
    action 'EBP' (noprec):   reduce Exp --> AnyId
    action 'ESP' (noprec):   reduce Exp --> AnyId
    action 'MODIFIES' (noprec):   reduce Exp --> AnyId
    action 'INVARIANT' (noprec):   reduce Exp --> AnyId
    action 'ASSERT' (noprec):   reduce Exp --> AnyId
    action 'HAVOC' (noprec):   reduce Exp --> AnyId
    action 'GOTO' (noprec):   reduce Exp --> AnyId
    action 'CALL' (noprec):   reduce Exp --> AnyId
    action 'CCALL' (noprec):   reduce Exp --> AnyId
    action 'RET' (noprec):   reduce Exp --> AnyId
    action 'IRET' (noprec):   reduce Exp --> AnyId
    action 'GO' (noprec):   reduce Exp --> AnyId
    action 'FORALL' (noprec):   reduce Exp --> AnyId
    action 'EXISTS' (noprec):   reduce Exp --> AnyId
    action 'OLD' (noprec):   reduce Exp --> AnyId
    action 'COLONCOLON' (noprec):   reduce Exp --> AnyId
    action 'EQEQGT' (noprec):   reduce Exp --> AnyId
    action 'LTEQEQGT' (noprec):   reduce Exp --> AnyId
    action 'TYPE' (noprec):   reduce Exp --> AnyId
    action 'CONST' (noprec):   reduce Exp --> AnyId
    action 'FUNCTION' (noprec):   reduce Exp --> AnyId
    action 'RETURNS' (noprec):   reduce Exp --> AnyId
    action 'AXIOM' (noprec):   reduce Exp --> AnyId
    action 'PROCEDURE' (noprec):   reduce Exp --> AnyId
    action 'IMPLEMENTATION' (noprec):   reduce Exp --> AnyId
    action 'REQUIRES' (noprec):   reduce Exp --> AnyId
    action 'ENSURES' (noprec):   reduce Exp --> AnyId
    action 'LT' (noprec):   reduce Exp --> AnyId
    action 'GT' (noprec):   reduce Exp --> AnyId
    action 'EQ' (noprec):   reduce Exp --> AnyId
    action 'BANG' (noprec):   reduce Exp --> AnyId
    action 'COMMA' (noprec):   reduce Exp --> AnyId
    action 'LE' (noprec):   reduce Exp --> AnyId
    action 'GE' (noprec):   reduce Exp --> AnyId
    action 'EQEQ' (noprec):   reduce Exp --> AnyId
    action 'NE' (noprec):   reduce Exp --> AnyId
    action 'PLUS' (noprec):   reduce Exp --> AnyId
    action 'MINUS' (noprec):   reduce Exp --> AnyId
    action 'STAR' (noprec):   reduce Exp --> AnyId
    action 'SLASH' (noprec):   reduce Exp --> AnyId
    action 'PERCENT' (noprec):   reduce Exp --> AnyId
    action 'AMPAMP' (noprec):   reduce Exp --> AnyId
    action 'BARBAR' (noprec):   reduce Exp --> AnyId
    action 'COLONEQ' (noprec):   reduce Exp --> AnyId
    action 'INT' (noprec):   reduce Exp --> AnyId
    action 'BOOL' (noprec):   reduce Exp --> AnyId
    action 'IF' (noprec):   reduce Exp --> AnyId
    action 'RETURN' (noprec):   reduce Exp --> AnyId
    action 'VAR' (noprec):   reduce Exp --> AnyId
    action 'LBRACE' (noprec):   reduce Exp --> AnyId
    action 'RBRACE' (noprec):   reduce Exp --> AnyId
    action 'SEMI' (noprec):   reduce Exp --> AnyId
    action 'COLON' (noprec):   reduce Exp --> AnyId
    action 'LPAREN' (explicit left 10000):   shift 129
    action 'RPAREN' (noprec):   reduce Exp --> AnyId
    action 'LBRACKET' (noprec):   reduce Exp --> AnyId
    action 'RBRACKET' (noprec):   reduce Exp --> AnyId
    action 'LITBOOL' (noprec):   reduce Exp --> AnyId
    action 'LITINT' (noprec):   reduce Exp --> AnyId
    action 'QLID' (noprec):   reduce Exp --> AnyId
    action 'QUID' (noprec):   reduce Exp --> AnyId
    action 'DLID' (noprec):   reduce Exp --> AnyId
    action 'DUID' (noprec):   reduce Exp --> AnyId
    action 'LID' (noprec):   reduce Exp --> AnyId
    action 'UID' (noprec):   reduce Exp --> AnyId
    action 'error' (noprec):   reduce Exp --> AnyId
    action '#' (noprec):   reduce Exp --> AnyId
    action '$$' (noprec):   reduce Exp --> AnyId

  immediate action: <none>
 gotos:

state 129:
  items:
    Exp -> AnyId 'LPAREN' . Exps 'RPAREN'

  actions:
    action 'EOF' (noprec):   reduce Exps --> 
    action 'EAX' (noprec):   shift 14
    action 'EBX' (noprec):   shift 15
    action 'ECX' (noprec):   shift 16
    action 'EDX' (noprec):   shift 17
    action 'ESI' (noprec):   shift 18
    action 'EDI' (noprec):   shift 19
    action 'EBP' (noprec):   shift 20
    action 'ESP' (noprec):   shift 21
    action 'MODIFIES' (noprec):   reduce Exps --> 
    action 'INVARIANT' (noprec):   reduce Exps --> 
    action 'ASSERT' (noprec):   reduce Exps --> 
    action 'HAVOC' (noprec):   reduce Exps --> 
    action 'GOTO' (noprec):   reduce Exps --> 
    action 'CALL' (noprec):   reduce Exps --> 
    action 'CCALL' (noprec):   reduce Exps --> 
    action 'RET' (noprec):   reduce Exps --> 
    action 'IRET' (noprec):   reduce Exps --> 
    action 'GO' (noprec):   reduce Exps --> 
    action 'FORALL' (noprec):   reduce Exps --> 
    action 'EXISTS' (noprec):   reduce Exps --> 
    action 'OLD' (noprec):   shift 125
    action 'COLONCOLON' (noprec):   reduce Exps --> 
    action 'EQEQGT' (noprec):   reduce Exps --> 
    action 'LTEQEQGT' (noprec):   reduce Exps --> 
    action 'TYPE' (noprec):   reduce Exps --> 
    action 'CONST' (noprec):   reduce Exps --> 
    action 'FUNCTION' (noprec):   reduce Exps --> 
    action 'RETURNS' (noprec):   reduce Exps --> 
    action 'AXIOM' (noprec):   reduce Exps --> 
    action 'PROCEDURE' (noprec):   reduce Exps --> 
    action 'IMPLEMENTATION' (noprec):   reduce Exps --> 
    action 'REQUIRES' (noprec):   reduce Exps --> 
    action 'ENSURES' (noprec):   reduce Exps --> 
    action 'LT' (noprec):   reduce Exps --> 
    action 'GT' (noprec):   reduce Exps --> 
    action 'EQ' (noprec):   reduce Exps --> 
    action 'BANG' (explicit right 9999):   shift 107
    action 'COMMA' (noprec):   reduce Exps --> 
    action 'LE' (noprec):   reduce Exps --> 
    action 'GE' (noprec):   reduce Exps --> 
    action 'EQEQ' (noprec):   reduce Exps --> 
    action 'NE' (noprec):   reduce Exps --> 
    action 'PLUS' (noprec):   reduce Exps --> 
    action 'MINUS' (noprec):   reduce Exps --> 
    action 'STAR' (noprec):   reduce Exps --> 
    action 'SLASH' (noprec):   reduce Exps --> 
    action 'PERCENT' (noprec):   reduce Exps --> 
    action 'AMPAMP' (noprec):   reduce Exps --> 
    action 'BARBAR' (noprec):   reduce Exps --> 
    action 'COLONEQ' (noprec):   reduce Exps --> 
    action 'INT' (noprec):   reduce Exps --> 
    action 'BOOL' (noprec):   reduce Exps --> 
    action 'IF' (noprec):   reduce Exps --> 
    action 'RETURN' (noprec):   reduce Exps --> 
    action 'VAR' (noprec):   reduce Exps --> 
    action 'LBRACE' (noprec):   reduce Exps --> 
    action 'RBRACE' (noprec):   reduce Exps --> 
    action 'SEMI' (noprec):   reduce Exps --> 
    action 'COLON' (noprec):   reduce Exps --> 
    action 'LPAREN' (explicit left 10000):   shift 54
    action 'RPAREN' (noprec):   reduce Exps --> 
    action 'LBRACKET' (noprec):   reduce Exps --> 
    action 'RBRACKET' (noprec):   reduce Exps --> 
    action 'LITBOOL' (noprec):   shift 124
    action 'LITINT' (noprec):   shift 123
    action 'QLID' (noprec):   shift 145
    action 'QUID' (noprec):   shift 144
    action 'DLID' (noprec):   shift 143
    action 'DUID' (noprec):   shift 142
    action 'LID' (noprec):   shift 4
    action 'UID' (noprec):   shift 5
    action 'error' (noprec):   reduce Exps --> 
    action '#' (noprec):   reduce Exps --> 
    action '$$' (noprec):   reduce Exps --> 

  immediate action: <none>
 gotos:
    goto ID: 141
    goto Reg: 132
    goto Exp: 78
    goto Exps: 130
    goto AnyId: 128

state 130:
  items:
    Exp -> AnyId 'LPAREN' Exps . 'RPAREN'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (explicit left 10000):   shift 131
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 131:
  items:
    Exp -> AnyId 'LPAREN' Exps 'RPAREN' . 

  actions:
    action 'EOF' (explicit left 10000):   reduce Exp --> AnyId 'LPAREN' Exps 'RPAREN'
    action 'EAX' (explicit left 10000):   reduce Exp --> AnyId 'LPAREN' Exps 'RPAREN'
    action 'EBX' (explicit left 10000):   reduce Exp --> AnyId 'LPAREN' Exps 'RPAREN'
    action 'ECX' (explicit left 10000):   reduce Exp --> AnyId 'LPAREN' Exps 'RPAREN'
    action 'EDX' (explicit left 10000):   reduce Exp --> AnyId 'LPAREN' Exps 'RPAREN'
    action 'ESI' (explicit left 10000):   reduce Exp --> AnyId 'LPAREN' Exps 'RPAREN'
    action 'EDI' (explicit left 10000):   reduce Exp --> AnyId 'LPAREN' Exps 'RPAREN'
    action 'EBP' (explicit left 10000):   reduce Exp --> AnyId 'LPAREN' Exps 'RPAREN'
    action 'ESP' (explicit left 10000):   reduce Exp --> AnyId 'LPAREN' Exps 'RPAREN'
    action 'MODIFIES' (explicit left 10000):   reduce Exp --> AnyId 'LPAREN' Exps 'RPAREN'
    action 'INVARIANT' (explicit left 10000):   reduce Exp --> AnyId 'LPAREN' Exps 'RPAREN'
    action 'ASSERT' (explicit left 10000):   reduce Exp --> AnyId 'LPAREN' Exps 'RPAREN'
    action 'HAVOC' (explicit left 10000):   reduce Exp --> AnyId 'LPAREN' Exps 'RPAREN'
    action 'GOTO' (explicit left 10000):   reduce Exp --> AnyId 'LPAREN' Exps 'RPAREN'
    action 'CALL' (explicit left 10000):   reduce Exp --> AnyId 'LPAREN' Exps 'RPAREN'
    action 'CCALL' (explicit left 10000):   reduce Exp --> AnyId 'LPAREN' Exps 'RPAREN'
    action 'RET' (explicit left 10000):   reduce Exp --> AnyId 'LPAREN' Exps 'RPAREN'
    action 'IRET' (explicit left 10000):   reduce Exp --> AnyId 'LPAREN' Exps 'RPAREN'
    action 'GO' (explicit left 10000):   reduce Exp --> AnyId 'LPAREN' Exps 'RPAREN'
    action 'FORALL' (explicit left 10000):   reduce Exp --> AnyId 'LPAREN' Exps 'RPAREN'
    action 'EXISTS' (explicit left 10000):   reduce Exp --> AnyId 'LPAREN' Exps 'RPAREN'
    action 'OLD' (explicit left 10000):   reduce Exp --> AnyId 'LPAREN' Exps 'RPAREN'
    action 'COLONCOLON' (explicit left 10000):   reduce Exp --> AnyId 'LPAREN' Exps 'RPAREN'
    action 'EQEQGT' (explicit left 10000):   reduce Exp --> AnyId 'LPAREN' Exps 'RPAREN'
    action 'LTEQEQGT' (explicit left 10000):   reduce Exp --> AnyId 'LPAREN' Exps 'RPAREN'
    action 'TYPE' (explicit left 10000):   reduce Exp --> AnyId 'LPAREN' Exps 'RPAREN'
    action 'CONST' (explicit left 10000):   reduce Exp --> AnyId 'LPAREN' Exps 'RPAREN'
    action 'FUNCTION' (explicit left 10000):   reduce Exp --> AnyId 'LPAREN' Exps 'RPAREN'
    action 'RETURNS' (explicit left 10000):   reduce Exp --> AnyId 'LPAREN' Exps 'RPAREN'
    action 'AXIOM' (explicit left 10000):   reduce Exp --> AnyId 'LPAREN' Exps 'RPAREN'
    action 'PROCEDURE' (explicit left 10000):   reduce Exp --> AnyId 'LPAREN' Exps 'RPAREN'
    action 'IMPLEMENTATION' (explicit left 10000):   reduce Exp --> AnyId 'LPAREN' Exps 'RPAREN'
    action 'REQUIRES' (explicit left 10000):   reduce Exp --> AnyId 'LPAREN' Exps 'RPAREN'
    action 'ENSURES' (explicit left 10000):   reduce Exp --> AnyId 'LPAREN' Exps 'RPAREN'
    action 'LT' (explicit left 10000):   reduce Exp --> AnyId 'LPAREN' Exps 'RPAREN'
    action 'GT' (explicit left 10000):   reduce Exp --> AnyId 'LPAREN' Exps 'RPAREN'
    action 'EQ' (explicit left 10000):   reduce Exp --> AnyId 'LPAREN' Exps 'RPAREN'
    action 'BANG' (explicit left 10000):   reduce Exp --> AnyId 'LPAREN' Exps 'RPAREN'
    action 'COMMA' (explicit left 10000):   reduce Exp --> AnyId 'LPAREN' Exps 'RPAREN'
    action 'LE' (explicit left 10000):   reduce Exp --> AnyId 'LPAREN' Exps 'RPAREN'
    action 'GE' (explicit left 10000):   reduce Exp --> AnyId 'LPAREN' Exps 'RPAREN'
    action 'EQEQ' (explicit left 10000):   reduce Exp --> AnyId 'LPAREN' Exps 'RPAREN'
    action 'NE' (explicit left 10000):   reduce Exp --> AnyId 'LPAREN' Exps 'RPAREN'
    action 'PLUS' (explicit left 10000):   reduce Exp --> AnyId 'LPAREN' Exps 'RPAREN'
    action 'MINUS' (explicit left 10000):   reduce Exp --> AnyId 'LPAREN' Exps 'RPAREN'
    action 'STAR' (explicit left 10000):   reduce Exp --> AnyId 'LPAREN' Exps 'RPAREN'
    action 'SLASH' (explicit left 10000):   reduce Exp --> AnyId 'LPAREN' Exps 'RPAREN'
    action 'PERCENT' (explicit left 10000):   reduce Exp --> AnyId 'LPAREN' Exps 'RPAREN'
    action 'AMPAMP' (explicit left 10000):   reduce Exp --> AnyId 'LPAREN' Exps 'RPAREN'
    action 'BARBAR' (explicit left 10000):   reduce Exp --> AnyId 'LPAREN' Exps 'RPAREN'
    action 'COLONEQ' (explicit left 10000):   reduce Exp --> AnyId 'LPAREN' Exps 'RPAREN'
    action 'INT' (explicit left 10000):   reduce Exp --> AnyId 'LPAREN' Exps 'RPAREN'
    action 'BOOL' (explicit left 10000):   reduce Exp --> AnyId 'LPAREN' Exps 'RPAREN'
    action 'IF' (explicit left 10000):   reduce Exp --> AnyId 'LPAREN' Exps 'RPAREN'
    action 'RETURN' (explicit left 10000):   reduce Exp --> AnyId 'LPAREN' Exps 'RPAREN'
    action 'VAR' (explicit left 10000):   reduce Exp --> AnyId 'LPAREN' Exps 'RPAREN'
    action 'LBRACE' (explicit left 10000):   reduce Exp --> AnyId 'LPAREN' Exps 'RPAREN'
    action 'RBRACE' (explicit left 10000):   reduce Exp --> AnyId 'LPAREN' Exps 'RPAREN'
    action 'SEMI' (explicit left 10000):   reduce Exp --> AnyId 'LPAREN' Exps 'RPAREN'
    action 'COLON' (explicit left 10000):   reduce Exp --> AnyId 'LPAREN' Exps 'RPAREN'
    action 'LPAREN' (explicit left 10000):   reduce Exp --> AnyId 'LPAREN' Exps 'RPAREN'
    action 'RPAREN' (explicit left 10000):   reduce Exp --> AnyId 'LPAREN' Exps 'RPAREN'
    action 'LBRACKET' (explicit left 10000):   reduce Exp --> AnyId 'LPAREN' Exps 'RPAREN'
    action 'RBRACKET' (explicit left 10000):   reduce Exp --> AnyId 'LPAREN' Exps 'RPAREN'
    action 'LITBOOL' (explicit left 10000):   reduce Exp --> AnyId 'LPAREN' Exps 'RPAREN'
    action 'LITINT' (explicit left 10000):   reduce Exp --> AnyId 'LPAREN' Exps 'RPAREN'
    action 'QLID' (explicit left 10000):   reduce Exp --> AnyId 'LPAREN' Exps 'RPAREN'
    action 'QUID' (explicit left 10000):   reduce Exp --> AnyId 'LPAREN' Exps 'RPAREN'
    action 'DLID' (explicit left 10000):   reduce Exp --> AnyId 'LPAREN' Exps 'RPAREN'
    action 'DUID' (explicit left 10000):   reduce Exp --> AnyId 'LPAREN' Exps 'RPAREN'
    action 'LID' (explicit left 10000):   reduce Exp --> AnyId 'LPAREN' Exps 'RPAREN'
    action 'UID' (explicit left 10000):   reduce Exp --> AnyId 'LPAREN' Exps 'RPAREN'
    action 'error' (explicit left 10000):   reduce Exp --> AnyId 'LPAREN' Exps 'RPAREN'
    action '#' (explicit left 10000):   reduce Exp --> AnyId 'LPAREN' Exps 'RPAREN'
    action '$$' (explicit left 10000):   reduce Exp --> AnyId 'LPAREN' Exps 'RPAREN'

  immediate action:   reduce Exp --> AnyId 'LPAREN' Exps 'RPAREN'
 gotos:

state 132:
  items:
    Exp -> Reg . 

  actions:
    action 'EOF' (noprec):   reduce Exp --> Reg
    action 'EAX' (noprec):   reduce Exp --> Reg
    action 'EBX' (noprec):   reduce Exp --> Reg
    action 'ECX' (noprec):   reduce Exp --> Reg
    action 'EDX' (noprec):   reduce Exp --> Reg
    action 'ESI' (noprec):   reduce Exp --> Reg
    action 'EDI' (noprec):   reduce Exp --> Reg
    action 'EBP' (noprec):   reduce Exp --> Reg
    action 'ESP' (noprec):   reduce Exp --> Reg
    action 'MODIFIES' (noprec):   reduce Exp --> Reg
    action 'INVARIANT' (noprec):   reduce Exp --> Reg
    action 'ASSERT' (noprec):   reduce Exp --> Reg
    action 'HAVOC' (noprec):   reduce Exp --> Reg
    action 'GOTO' (noprec):   reduce Exp --> Reg
    action 'CALL' (noprec):   reduce Exp --> Reg
    action 'CCALL' (noprec):   reduce Exp --> Reg
    action 'RET' (noprec):   reduce Exp --> Reg
    action 'IRET' (noprec):   reduce Exp --> Reg
    action 'GO' (noprec):   reduce Exp --> Reg
    action 'FORALL' (noprec):   reduce Exp --> Reg
    action 'EXISTS' (noprec):   reduce Exp --> Reg
    action 'OLD' (noprec):   reduce Exp --> Reg
    action 'COLONCOLON' (noprec):   reduce Exp --> Reg
    action 'EQEQGT' (noprec):   reduce Exp --> Reg
    action 'LTEQEQGT' (noprec):   reduce Exp --> Reg
    action 'TYPE' (noprec):   reduce Exp --> Reg
    action 'CONST' (noprec):   reduce Exp --> Reg
    action 'FUNCTION' (noprec):   reduce Exp --> Reg
    action 'RETURNS' (noprec):   reduce Exp --> Reg
    action 'AXIOM' (noprec):   reduce Exp --> Reg
    action 'PROCEDURE' (noprec):   reduce Exp --> Reg
    action 'IMPLEMENTATION' (noprec):   reduce Exp --> Reg
    action 'REQUIRES' (noprec):   reduce Exp --> Reg
    action 'ENSURES' (noprec):   reduce Exp --> Reg
    action 'LT' (noprec):   reduce Exp --> Reg
    action 'GT' (noprec):   reduce Exp --> Reg
    action 'EQ' (noprec):   reduce Exp --> Reg
    action 'BANG' (noprec):   reduce Exp --> Reg
    action 'COMMA' (noprec):   reduce Exp --> Reg
    action 'LE' (noprec):   reduce Exp --> Reg
    action 'GE' (noprec):   reduce Exp --> Reg
    action 'EQEQ' (noprec):   reduce Exp --> Reg
    action 'NE' (noprec):   reduce Exp --> Reg
    action 'PLUS' (noprec):   reduce Exp --> Reg
    action 'MINUS' (noprec):   reduce Exp --> Reg
    action 'STAR' (noprec):   reduce Exp --> Reg
    action 'SLASH' (noprec):   reduce Exp --> Reg
    action 'PERCENT' (noprec):   reduce Exp --> Reg
    action 'AMPAMP' (noprec):   reduce Exp --> Reg
    action 'BARBAR' (noprec):   reduce Exp --> Reg
    action 'COLONEQ' (noprec):   reduce Exp --> Reg
    action 'INT' (noprec):   reduce Exp --> Reg
    action 'BOOL' (noprec):   reduce Exp --> Reg
    action 'IF' (noprec):   reduce Exp --> Reg
    action 'RETURN' (noprec):   reduce Exp --> Reg
    action 'VAR' (noprec):   reduce Exp --> Reg
    action 'LBRACE' (noprec):   reduce Exp --> Reg
    action 'RBRACE' (noprec):   reduce Exp --> Reg
    action 'SEMI' (noprec):   reduce Exp --> Reg
    action 'COLON' (noprec):   reduce Exp --> Reg
    action 'LPAREN' (noprec):   reduce Exp --> Reg
    action 'RPAREN' (noprec):   reduce Exp --> Reg
    action 'LBRACKET' (noprec):   reduce Exp --> Reg
    action 'RBRACKET' (noprec):   reduce Exp --> Reg
    action 'LITBOOL' (noprec):   reduce Exp --> Reg
    action 'LITINT' (noprec):   reduce Exp --> Reg
    action 'QLID' (noprec):   reduce Exp --> Reg
    action 'QUID' (noprec):   reduce Exp --> Reg
    action 'DLID' (noprec):   reduce Exp --> Reg
    action 'DUID' (noprec):   reduce Exp --> Reg
    action 'LID' (noprec):   reduce Exp --> Reg
    action 'UID' (noprec):   reduce Exp --> Reg
    action 'error' (noprec):   reduce Exp --> Reg
    action '#' (noprec):   reduce Exp --> Reg
    action '$$' (noprec):   reduce Exp --> Reg

  immediate action:   reduce Exp --> Reg
 gotos:

state 133:
  items:
    Exps -> Exp 'COMMA' . Exps

  actions:
    action 'EOF' (noprec):   reduce Exps --> 
    action 'EAX' (noprec):   shift 14
    action 'EBX' (noprec):   shift 15
    action 'ECX' (noprec):   shift 16
    action 'EDX' (noprec):   shift 17
    action 'ESI' (noprec):   shift 18
    action 'EDI' (noprec):   shift 19
    action 'EBP' (noprec):   shift 20
    action 'ESP' (noprec):   shift 21
    action 'MODIFIES' (noprec):   reduce Exps --> 
    action 'INVARIANT' (noprec):   reduce Exps --> 
    action 'ASSERT' (noprec):   reduce Exps --> 
    action 'HAVOC' (noprec):   reduce Exps --> 
    action 'GOTO' (noprec):   reduce Exps --> 
    action 'CALL' (noprec):   reduce Exps --> 
    action 'CCALL' (noprec):   reduce Exps --> 
    action 'RET' (noprec):   reduce Exps --> 
    action 'IRET' (noprec):   reduce Exps --> 
    action 'GO' (noprec):   reduce Exps --> 
    action 'FORALL' (noprec):   reduce Exps --> 
    action 'EXISTS' (noprec):   reduce Exps --> 
    action 'OLD' (noprec):   shift 125
    action 'COLONCOLON' (noprec):   reduce Exps --> 
    action 'EQEQGT' (noprec):   reduce Exps --> 
    action 'LTEQEQGT' (noprec):   reduce Exps --> 
    action 'TYPE' (noprec):   reduce Exps --> 
    action 'CONST' (noprec):   reduce Exps --> 
    action 'FUNCTION' (noprec):   reduce Exps --> 
    action 'RETURNS' (noprec):   reduce Exps --> 
    action 'AXIOM' (noprec):   reduce Exps --> 
    action 'PROCEDURE' (noprec):   reduce Exps --> 
    action 'IMPLEMENTATION' (noprec):   reduce Exps --> 
    action 'REQUIRES' (noprec):   reduce Exps --> 
    action 'ENSURES' (noprec):   reduce Exps --> 
    action 'LT' (noprec):   reduce Exps --> 
    action 'GT' (noprec):   reduce Exps --> 
    action 'EQ' (noprec):   reduce Exps --> 
    action 'BANG' (explicit right 9999):   shift 107
    action 'COMMA' (noprec):   reduce Exps --> 
    action 'LE' (noprec):   reduce Exps --> 
    action 'GE' (noprec):   reduce Exps --> 
    action 'EQEQ' (noprec):   reduce Exps --> 
    action 'NE' (noprec):   reduce Exps --> 
    action 'PLUS' (noprec):   reduce Exps --> 
    action 'MINUS' (noprec):   reduce Exps --> 
    action 'STAR' (noprec):   reduce Exps --> 
    action 'SLASH' (noprec):   reduce Exps --> 
    action 'PERCENT' (noprec):   reduce Exps --> 
    action 'AMPAMP' (noprec):   reduce Exps --> 
    action 'BARBAR' (noprec):   reduce Exps --> 
    action 'COLONEQ' (noprec):   reduce Exps --> 
    action 'INT' (noprec):   reduce Exps --> 
    action 'BOOL' (noprec):   reduce Exps --> 
    action 'IF' (noprec):   reduce Exps --> 
    action 'RETURN' (noprec):   reduce Exps --> 
    action 'VAR' (noprec):   reduce Exps --> 
    action 'LBRACE' (noprec):   reduce Exps --> 
    action 'RBRACE' (noprec):   reduce Exps --> 
    action 'SEMI' (noprec):   reduce Exps --> 
    action 'COLON' (noprec):   reduce Exps --> 
    action 'LPAREN' (explicit left 10000):   shift 54
    action 'RPAREN' (noprec):   reduce Exps --> 
    action 'LBRACKET' (noprec):   reduce Exps --> 
    action 'RBRACKET' (noprec):   reduce Exps --> 
    action 'LITBOOL' (noprec):   shift 124
    action 'LITINT' (noprec):   shift 123
    action 'QLID' (noprec):   shift 145
    action 'QUID' (noprec):   shift 144
    action 'DLID' (noprec):   shift 143
    action 'DUID' (noprec):   shift 142
    action 'LID' (noprec):   shift 4
    action 'UID' (noprec):   shift 5
    action 'error' (noprec):   reduce Exps --> 
    action '#' (noprec):   reduce Exps --> 
    action '$$' (noprec):   reduce Exps --> 

  immediate action: <none>
 gotos:
    goto ID: 141
    goto Reg: 132
    goto Exp: 78
    goto Exps: 134
    goto AnyId: 128

state 134:
  items:
    Exps -> Exp 'COMMA' Exps . 

  actions:
    action 'EOF' (noprec):   reduce Exps --> Exp 'COMMA' Exps
    action 'EAX' (noprec):   reduce Exps --> Exp 'COMMA' Exps
    action 'EBX' (noprec):   reduce Exps --> Exp 'COMMA' Exps
    action 'ECX' (noprec):   reduce Exps --> Exp 'COMMA' Exps
    action 'EDX' (noprec):   reduce Exps --> Exp 'COMMA' Exps
    action 'ESI' (noprec):   reduce Exps --> Exp 'COMMA' Exps
    action 'EDI' (noprec):   reduce Exps --> Exp 'COMMA' Exps
    action 'EBP' (noprec):   reduce Exps --> Exp 'COMMA' Exps
    action 'ESP' (noprec):   reduce Exps --> Exp 'COMMA' Exps
    action 'MODIFIES' (noprec):   reduce Exps --> Exp 'COMMA' Exps
    action 'INVARIANT' (noprec):   reduce Exps --> Exp 'COMMA' Exps
    action 'ASSERT' (noprec):   reduce Exps --> Exp 'COMMA' Exps
    action 'HAVOC' (noprec):   reduce Exps --> Exp 'COMMA' Exps
    action 'GOTO' (noprec):   reduce Exps --> Exp 'COMMA' Exps
    action 'CALL' (noprec):   reduce Exps --> Exp 'COMMA' Exps
    action 'CCALL' (noprec):   reduce Exps --> Exp 'COMMA' Exps
    action 'RET' (noprec):   reduce Exps --> Exp 'COMMA' Exps
    action 'IRET' (noprec):   reduce Exps --> Exp 'COMMA' Exps
    action 'GO' (noprec):   reduce Exps --> Exp 'COMMA' Exps
    action 'FORALL' (noprec):   reduce Exps --> Exp 'COMMA' Exps
    action 'EXISTS' (noprec):   reduce Exps --> Exp 'COMMA' Exps
    action 'OLD' (noprec):   reduce Exps --> Exp 'COMMA' Exps
    action 'COLONCOLON' (noprec):   reduce Exps --> Exp 'COMMA' Exps
    action 'EQEQGT' (noprec):   reduce Exps --> Exp 'COMMA' Exps
    action 'LTEQEQGT' (noprec):   reduce Exps --> Exp 'COMMA' Exps
    action 'TYPE' (noprec):   reduce Exps --> Exp 'COMMA' Exps
    action 'CONST' (noprec):   reduce Exps --> Exp 'COMMA' Exps
    action 'FUNCTION' (noprec):   reduce Exps --> Exp 'COMMA' Exps
    action 'RETURNS' (noprec):   reduce Exps --> Exp 'COMMA' Exps
    action 'AXIOM' (noprec):   reduce Exps --> Exp 'COMMA' Exps
    action 'PROCEDURE' (noprec):   reduce Exps --> Exp 'COMMA' Exps
    action 'IMPLEMENTATION' (noprec):   reduce Exps --> Exp 'COMMA' Exps
    action 'REQUIRES' (noprec):   reduce Exps --> Exp 'COMMA' Exps
    action 'ENSURES' (noprec):   reduce Exps --> Exp 'COMMA' Exps
    action 'LT' (noprec):   reduce Exps --> Exp 'COMMA' Exps
    action 'GT' (noprec):   reduce Exps --> Exp 'COMMA' Exps
    action 'EQ' (noprec):   reduce Exps --> Exp 'COMMA' Exps
    action 'BANG' (noprec):   reduce Exps --> Exp 'COMMA' Exps
    action 'COMMA' (noprec):   reduce Exps --> Exp 'COMMA' Exps
    action 'LE' (noprec):   reduce Exps --> Exp 'COMMA' Exps
    action 'GE' (noprec):   reduce Exps --> Exp 'COMMA' Exps
    action 'EQEQ' (noprec):   reduce Exps --> Exp 'COMMA' Exps
    action 'NE' (noprec):   reduce Exps --> Exp 'COMMA' Exps
    action 'PLUS' (noprec):   reduce Exps --> Exp 'COMMA' Exps
    action 'MINUS' (noprec):   reduce Exps --> Exp 'COMMA' Exps
    action 'STAR' (noprec):   reduce Exps --> Exp 'COMMA' Exps
    action 'SLASH' (noprec):   reduce Exps --> Exp 'COMMA' Exps
    action 'PERCENT' (noprec):   reduce Exps --> Exp 'COMMA' Exps
    action 'AMPAMP' (noprec):   reduce Exps --> Exp 'COMMA' Exps
    action 'BARBAR' (noprec):   reduce Exps --> Exp 'COMMA' Exps
    action 'COLONEQ' (noprec):   reduce Exps --> Exp 'COMMA' Exps
    action 'INT' (noprec):   reduce Exps --> Exp 'COMMA' Exps
    action 'BOOL' (noprec):   reduce Exps --> Exp 'COMMA' Exps
    action 'IF' (noprec):   reduce Exps --> Exp 'COMMA' Exps
    action 'RETURN' (noprec):   reduce Exps --> Exp 'COMMA' Exps
    action 'VAR' (noprec):   reduce Exps --> Exp 'COMMA' Exps
    action 'LBRACE' (noprec):   reduce Exps --> Exp 'COMMA' Exps
    action 'RBRACE' (noprec):   reduce Exps --> Exp 'COMMA' Exps
    action 'SEMI' (noprec):   reduce Exps --> Exp 'COMMA' Exps
    action 'COLON' (noprec):   reduce Exps --> Exp 'COMMA' Exps
    action 'LPAREN' (noprec):   reduce Exps --> Exp 'COMMA' Exps
    action 'RPAREN' (noprec):   reduce Exps --> Exp 'COMMA' Exps
    action 'LBRACKET' (noprec):   reduce Exps --> Exp 'COMMA' Exps
    action 'RBRACKET' (noprec):   reduce Exps --> Exp 'COMMA' Exps
    action 'LITBOOL' (noprec):   reduce Exps --> Exp 'COMMA' Exps
    action 'LITINT' (noprec):   reduce Exps --> Exp 'COMMA' Exps
    action 'QLID' (noprec):   reduce Exps --> Exp 'COMMA' Exps
    action 'QUID' (noprec):   reduce Exps --> Exp 'COMMA' Exps
    action 'DLID' (noprec):   reduce Exps --> Exp 'COMMA' Exps
    action 'DUID' (noprec):   reduce Exps --> Exp 'COMMA' Exps
    action 'LID' (noprec):   reduce Exps --> Exp 'COMMA' Exps
    action 'UID' (noprec):   reduce Exps --> Exp 'COMMA' Exps
    action 'error' (noprec):   reduce Exps --> Exp 'COMMA' Exps
    action '#' (noprec):   reduce Exps --> Exp 'COMMA' Exps
    action '$$' (noprec):   reduce Exps --> Exp 'COMMA' Exps

  immediate action:   reduce Exps --> Exp 'COMMA' Exps
 gotos:

state 135:
  items:
    DLids -> 'DLID' . 
    DLids -> 'DLID' . 'COMMA' DLids

  actions:
    action 'EOF' (noprec):   reduce DLids --> 'DLID'
    action 'EAX' (noprec):   reduce DLids --> 'DLID'
    action 'EBX' (noprec):   reduce DLids --> 'DLID'
    action 'ECX' (noprec):   reduce DLids --> 'DLID'
    action 'EDX' (noprec):   reduce DLids --> 'DLID'
    action 'ESI' (noprec):   reduce DLids --> 'DLID'
    action 'EDI' (noprec):   reduce DLids --> 'DLID'
    action 'EBP' (noprec):   reduce DLids --> 'DLID'
    action 'ESP' (noprec):   reduce DLids --> 'DLID'
    action 'MODIFIES' (noprec):   reduce DLids --> 'DLID'
    action 'INVARIANT' (noprec):   reduce DLids --> 'DLID'
    action 'ASSERT' (noprec):   reduce DLids --> 'DLID'
    action 'HAVOC' (noprec):   reduce DLids --> 'DLID'
    action 'GOTO' (noprec):   reduce DLids --> 'DLID'
    action 'CALL' (noprec):   reduce DLids --> 'DLID'
    action 'CCALL' (noprec):   reduce DLids --> 'DLID'
    action 'RET' (noprec):   reduce DLids --> 'DLID'
    action 'IRET' (noprec):   reduce DLids --> 'DLID'
    action 'GO' (noprec):   reduce DLids --> 'DLID'
    action 'FORALL' (noprec):   reduce DLids --> 'DLID'
    action 'EXISTS' (noprec):   reduce DLids --> 'DLID'
    action 'OLD' (noprec):   reduce DLids --> 'DLID'
    action 'COLONCOLON' (noprec):   reduce DLids --> 'DLID'
    action 'EQEQGT' (noprec):   reduce DLids --> 'DLID'
    action 'LTEQEQGT' (noprec):   reduce DLids --> 'DLID'
    action 'TYPE' (noprec):   reduce DLids --> 'DLID'
    action 'CONST' (noprec):   reduce DLids --> 'DLID'
    action 'FUNCTION' (noprec):   reduce DLids --> 'DLID'
    action 'RETURNS' (noprec):   reduce DLids --> 'DLID'
    action 'AXIOM' (noprec):   reduce DLids --> 'DLID'
    action 'PROCEDURE' (noprec):   reduce DLids --> 'DLID'
    action 'IMPLEMENTATION' (noprec):   reduce DLids --> 'DLID'
    action 'REQUIRES' (noprec):   reduce DLids --> 'DLID'
    action 'ENSURES' (noprec):   reduce DLids --> 'DLID'
    action 'LT' (noprec):   reduce DLids --> 'DLID'
    action 'GT' (noprec):   reduce DLids --> 'DLID'
    action 'EQ' (noprec):   reduce DLids --> 'DLID'
    action 'BANG' (noprec):   reduce DLids --> 'DLID'
    action 'COMMA' (noprec):   shift 136
    action 'LE' (noprec):   reduce DLids --> 'DLID'
    action 'GE' (noprec):   reduce DLids --> 'DLID'
    action 'EQEQ' (noprec):   reduce DLids --> 'DLID'
    action 'NE' (noprec):   reduce DLids --> 'DLID'
    action 'PLUS' (noprec):   reduce DLids --> 'DLID'
    action 'MINUS' (noprec):   reduce DLids --> 'DLID'
    action 'STAR' (noprec):   reduce DLids --> 'DLID'
    action 'SLASH' (noprec):   reduce DLids --> 'DLID'
    action 'PERCENT' (noprec):   reduce DLids --> 'DLID'
    action 'AMPAMP' (noprec):   reduce DLids --> 'DLID'
    action 'BARBAR' (noprec):   reduce DLids --> 'DLID'
    action 'COLONEQ' (noprec):   reduce DLids --> 'DLID'
    action 'INT' (noprec):   reduce DLids --> 'DLID'
    action 'BOOL' (noprec):   reduce DLids --> 'DLID'
    action 'IF' (noprec):   reduce DLids --> 'DLID'
    action 'RETURN' (noprec):   reduce DLids --> 'DLID'
    action 'VAR' (noprec):   reduce DLids --> 'DLID'
    action 'LBRACE' (noprec):   reduce DLids --> 'DLID'
    action 'RBRACE' (noprec):   reduce DLids --> 'DLID'
    action 'SEMI' (noprec):   reduce DLids --> 'DLID'
    action 'COLON' (noprec):   reduce DLids --> 'DLID'
    action 'LPAREN' (noprec):   reduce DLids --> 'DLID'
    action 'RPAREN' (noprec):   reduce DLids --> 'DLID'
    action 'LBRACKET' (noprec):   reduce DLids --> 'DLID'
    action 'RBRACKET' (noprec):   reduce DLids --> 'DLID'
    action 'LITBOOL' (noprec):   reduce DLids --> 'DLID'
    action 'LITINT' (noprec):   reduce DLids --> 'DLID'
    action 'QLID' (noprec):   reduce DLids --> 'DLID'
    action 'QUID' (noprec):   reduce DLids --> 'DLID'
    action 'DLID' (noprec):   reduce DLids --> 'DLID'
    action 'DUID' (noprec):   reduce DLids --> 'DLID'
    action 'LID' (noprec):   reduce DLids --> 'DLID'
    action 'UID' (noprec):   reduce DLids --> 'DLID'
    action 'error' (noprec):   reduce DLids --> 'DLID'
    action '#' (noprec):   reduce DLids --> 'DLID'
    action '$$' (noprec):   reduce DLids --> 'DLID'

  immediate action: <none>
 gotos:

state 136:
  items:
    DLids -> 'DLID' 'COMMA' . DLids

  actions:
    action 'EOF' (noprec):   reduce DLids --> 
    action 'EAX' (noprec):   reduce DLids --> 
    action 'EBX' (noprec):   reduce DLids --> 
    action 'ECX' (noprec):   reduce DLids --> 
    action 'EDX' (noprec):   reduce DLids --> 
    action 'ESI' (noprec):   reduce DLids --> 
    action 'EDI' (noprec):   reduce DLids --> 
    action 'EBP' (noprec):   reduce DLids --> 
    action 'ESP' (noprec):   reduce DLids --> 
    action 'MODIFIES' (noprec):   reduce DLids --> 
    action 'INVARIANT' (noprec):   reduce DLids --> 
    action 'ASSERT' (noprec):   reduce DLids --> 
    action 'HAVOC' (noprec):   reduce DLids --> 
    action 'GOTO' (noprec):   reduce DLids --> 
    action 'CALL' (noprec):   reduce DLids --> 
    action 'CCALL' (noprec):   reduce DLids --> 
    action 'RET' (noprec):   reduce DLids --> 
    action 'IRET' (noprec):   reduce DLids --> 
    action 'GO' (noprec):   reduce DLids --> 
    action 'FORALL' (noprec):   reduce DLids --> 
    action 'EXISTS' (noprec):   reduce DLids --> 
    action 'OLD' (noprec):   reduce DLids --> 
    action 'COLONCOLON' (noprec):   reduce DLids --> 
    action 'EQEQGT' (noprec):   reduce DLids --> 
    action 'LTEQEQGT' (noprec):   reduce DLids --> 
    action 'TYPE' (noprec):   reduce DLids --> 
    action 'CONST' (noprec):   reduce DLids --> 
    action 'FUNCTION' (noprec):   reduce DLids --> 
    action 'RETURNS' (noprec):   reduce DLids --> 
    action 'AXIOM' (noprec):   reduce DLids --> 
    action 'PROCEDURE' (noprec):   reduce DLids --> 
    action 'IMPLEMENTATION' (noprec):   reduce DLids --> 
    action 'REQUIRES' (noprec):   reduce DLids --> 
    action 'ENSURES' (noprec):   reduce DLids --> 
    action 'LT' (noprec):   reduce DLids --> 
    action 'GT' (noprec):   reduce DLids --> 
    action 'EQ' (noprec):   reduce DLids --> 
    action 'BANG' (noprec):   reduce DLids --> 
    action 'COMMA' (noprec):   reduce DLids --> 
    action 'LE' (noprec):   reduce DLids --> 
    action 'GE' (noprec):   reduce DLids --> 
    action 'EQEQ' (noprec):   reduce DLids --> 
    action 'NE' (noprec):   reduce DLids --> 
    action 'PLUS' (noprec):   reduce DLids --> 
    action 'MINUS' (noprec):   reduce DLids --> 
    action 'STAR' (noprec):   reduce DLids --> 
    action 'SLASH' (noprec):   reduce DLids --> 
    action 'PERCENT' (noprec):   reduce DLids --> 
    action 'AMPAMP' (noprec):   reduce DLids --> 
    action 'BARBAR' (noprec):   reduce DLids --> 
    action 'COLONEQ' (noprec):   reduce DLids --> 
    action 'INT' (noprec):   reduce DLids --> 
    action 'BOOL' (noprec):   reduce DLids --> 
    action 'IF' (noprec):   reduce DLids --> 
    action 'RETURN' (noprec):   reduce DLids --> 
    action 'VAR' (noprec):   reduce DLids --> 
    action 'LBRACE' (noprec):   reduce DLids --> 
    action 'RBRACE' (noprec):   reduce DLids --> 
    action 'SEMI' (noprec):   reduce DLids --> 
    action 'COLON' (noprec):   reduce DLids --> 
    action 'LPAREN' (noprec):   reduce DLids --> 
    action 'RPAREN' (noprec):   reduce DLids --> 
    action 'LBRACKET' (noprec):   reduce DLids --> 
    action 'RBRACKET' (noprec):   reduce DLids --> 
    action 'LITBOOL' (noprec):   reduce DLids --> 
    action 'LITINT' (noprec):   reduce DLids --> 
    action 'QLID' (noprec):   reduce DLids --> 
    action 'QUID' (noprec):   reduce DLids --> 
    action 'DLID' (noprec):   shift 135
    action 'DUID' (noprec):   reduce DLids --> 
    action 'LID' (noprec):   reduce DLids --> 
    action 'UID' (noprec):   reduce DLids --> 
    action 'error' (noprec):   reduce DLids --> 
    action '#' (noprec):   reduce DLids --> 
    action '$$' (noprec):   reduce DLids --> 

  immediate action: <none>
 gotos:
    goto DLids: 137

state 137:
  items:
    DLids -> 'DLID' 'COMMA' DLids . 

  actions:
    action 'EOF' (noprec):   reduce DLids --> 'DLID' 'COMMA' DLids
    action 'EAX' (noprec):   reduce DLids --> 'DLID' 'COMMA' DLids
    action 'EBX' (noprec):   reduce DLids --> 'DLID' 'COMMA' DLids
    action 'ECX' (noprec):   reduce DLids --> 'DLID' 'COMMA' DLids
    action 'EDX' (noprec):   reduce DLids --> 'DLID' 'COMMA' DLids
    action 'ESI' (noprec):   reduce DLids --> 'DLID' 'COMMA' DLids
    action 'EDI' (noprec):   reduce DLids --> 'DLID' 'COMMA' DLids
    action 'EBP' (noprec):   reduce DLids --> 'DLID' 'COMMA' DLids
    action 'ESP' (noprec):   reduce DLids --> 'DLID' 'COMMA' DLids
    action 'MODIFIES' (noprec):   reduce DLids --> 'DLID' 'COMMA' DLids
    action 'INVARIANT' (noprec):   reduce DLids --> 'DLID' 'COMMA' DLids
    action 'ASSERT' (noprec):   reduce DLids --> 'DLID' 'COMMA' DLids
    action 'HAVOC' (noprec):   reduce DLids --> 'DLID' 'COMMA' DLids
    action 'GOTO' (noprec):   reduce DLids --> 'DLID' 'COMMA' DLids
    action 'CALL' (noprec):   reduce DLids --> 'DLID' 'COMMA' DLids
    action 'CCALL' (noprec):   reduce DLids --> 'DLID' 'COMMA' DLids
    action 'RET' (noprec):   reduce DLids --> 'DLID' 'COMMA' DLids
    action 'IRET' (noprec):   reduce DLids --> 'DLID' 'COMMA' DLids
    action 'GO' (noprec):   reduce DLids --> 'DLID' 'COMMA' DLids
    action 'FORALL' (noprec):   reduce DLids --> 'DLID' 'COMMA' DLids
    action 'EXISTS' (noprec):   reduce DLids --> 'DLID' 'COMMA' DLids
    action 'OLD' (noprec):   reduce DLids --> 'DLID' 'COMMA' DLids
    action 'COLONCOLON' (noprec):   reduce DLids --> 'DLID' 'COMMA' DLids
    action 'EQEQGT' (noprec):   reduce DLids --> 'DLID' 'COMMA' DLids
    action 'LTEQEQGT' (noprec):   reduce DLids --> 'DLID' 'COMMA' DLids
    action 'TYPE' (noprec):   reduce DLids --> 'DLID' 'COMMA' DLids
    action 'CONST' (noprec):   reduce DLids --> 'DLID' 'COMMA' DLids
    action 'FUNCTION' (noprec):   reduce DLids --> 'DLID' 'COMMA' DLids
    action 'RETURNS' (noprec):   reduce DLids --> 'DLID' 'COMMA' DLids
    action 'AXIOM' (noprec):   reduce DLids --> 'DLID' 'COMMA' DLids
    action 'PROCEDURE' (noprec):   reduce DLids --> 'DLID' 'COMMA' DLids
    action 'IMPLEMENTATION' (noprec):   reduce DLids --> 'DLID' 'COMMA' DLids
    action 'REQUIRES' (noprec):   reduce DLids --> 'DLID' 'COMMA' DLids
    action 'ENSURES' (noprec):   reduce DLids --> 'DLID' 'COMMA' DLids
    action 'LT' (noprec):   reduce DLids --> 'DLID' 'COMMA' DLids
    action 'GT' (noprec):   reduce DLids --> 'DLID' 'COMMA' DLids
    action 'EQ' (noprec):   reduce DLids --> 'DLID' 'COMMA' DLids
    action 'BANG' (noprec):   reduce DLids --> 'DLID' 'COMMA' DLids
    action 'COMMA' (noprec):   reduce DLids --> 'DLID' 'COMMA' DLids
    action 'LE' (noprec):   reduce DLids --> 'DLID' 'COMMA' DLids
    action 'GE' (noprec):   reduce DLids --> 'DLID' 'COMMA' DLids
    action 'EQEQ' (noprec):   reduce DLids --> 'DLID' 'COMMA' DLids
    action 'NE' (noprec):   reduce DLids --> 'DLID' 'COMMA' DLids
    action 'PLUS' (noprec):   reduce DLids --> 'DLID' 'COMMA' DLids
    action 'MINUS' (noprec):   reduce DLids --> 'DLID' 'COMMA' DLids
    action 'STAR' (noprec):   reduce DLids --> 'DLID' 'COMMA' DLids
    action 'SLASH' (noprec):   reduce DLids --> 'DLID' 'COMMA' DLids
    action 'PERCENT' (noprec):   reduce DLids --> 'DLID' 'COMMA' DLids
    action 'AMPAMP' (noprec):   reduce DLids --> 'DLID' 'COMMA' DLids
    action 'BARBAR' (noprec):   reduce DLids --> 'DLID' 'COMMA' DLids
    action 'COLONEQ' (noprec):   reduce DLids --> 'DLID' 'COMMA' DLids
    action 'INT' (noprec):   reduce DLids --> 'DLID' 'COMMA' DLids
    action 'BOOL' (noprec):   reduce DLids --> 'DLID' 'COMMA' DLids
    action 'IF' (noprec):   reduce DLids --> 'DLID' 'COMMA' DLids
    action 'RETURN' (noprec):   reduce DLids --> 'DLID' 'COMMA' DLids
    action 'VAR' (noprec):   reduce DLids --> 'DLID' 'COMMA' DLids
    action 'LBRACE' (noprec):   reduce DLids --> 'DLID' 'COMMA' DLids
    action 'RBRACE' (noprec):   reduce DLids --> 'DLID' 'COMMA' DLids
    action 'SEMI' (noprec):   reduce DLids --> 'DLID' 'COMMA' DLids
    action 'COLON' (noprec):   reduce DLids --> 'DLID' 'COMMA' DLids
    action 'LPAREN' (noprec):   reduce DLids --> 'DLID' 'COMMA' DLids
    action 'RPAREN' (noprec):   reduce DLids --> 'DLID' 'COMMA' DLids
    action 'LBRACKET' (noprec):   reduce DLids --> 'DLID' 'COMMA' DLids
    action 'RBRACKET' (noprec):   reduce DLids --> 'DLID' 'COMMA' DLids
    action 'LITBOOL' (noprec):   reduce DLids --> 'DLID' 'COMMA' DLids
    action 'LITINT' (noprec):   reduce DLids --> 'DLID' 'COMMA' DLids
    action 'QLID' (noprec):   reduce DLids --> 'DLID' 'COMMA' DLids
    action 'QUID' (noprec):   reduce DLids --> 'DLID' 'COMMA' DLids
    action 'DLID' (noprec):   reduce DLids --> 'DLID' 'COMMA' DLids
    action 'DUID' (noprec):   reduce DLids --> 'DLID' 'COMMA' DLids
    action 'LID' (noprec):   reduce DLids --> 'DLID' 'COMMA' DLids
    action 'UID' (noprec):   reduce DLids --> 'DLID' 'COMMA' DLids
    action 'error' (noprec):   reduce DLids --> 'DLID' 'COMMA' DLids
    action '#' (noprec):   reduce DLids --> 'DLID' 'COMMA' DLids
    action '$$' (noprec):   reduce DLids --> 'DLID' 'COMMA' DLids

  immediate action:   reduce DLids --> 'DLID' 'COMMA' DLids
 gotos:

state 138:
  items:
    SrcOperands -> SrcOperand . 
    SrcOperands -> SrcOperand . 'COMMA' SrcOperands

  actions:
    action 'EOF' (noprec):   reduce SrcOperands --> SrcOperand
    action 'EAX' (noprec):   reduce SrcOperands --> SrcOperand
    action 'EBX' (noprec):   reduce SrcOperands --> SrcOperand
    action 'ECX' (noprec):   reduce SrcOperands --> SrcOperand
    action 'EDX' (noprec):   reduce SrcOperands --> SrcOperand
    action 'ESI' (noprec):   reduce SrcOperands --> SrcOperand
    action 'EDI' (noprec):   reduce SrcOperands --> SrcOperand
    action 'EBP' (noprec):   reduce SrcOperands --> SrcOperand
    action 'ESP' (noprec):   reduce SrcOperands --> SrcOperand
    action 'MODIFIES' (noprec):   reduce SrcOperands --> SrcOperand
    action 'INVARIANT' (noprec):   reduce SrcOperands --> SrcOperand
    action 'ASSERT' (noprec):   reduce SrcOperands --> SrcOperand
    action 'HAVOC' (noprec):   reduce SrcOperands --> SrcOperand
    action 'GOTO' (noprec):   reduce SrcOperands --> SrcOperand
    action 'CALL' (noprec):   reduce SrcOperands --> SrcOperand
    action 'CCALL' (noprec):   reduce SrcOperands --> SrcOperand
    action 'RET' (noprec):   reduce SrcOperands --> SrcOperand
    action 'IRET' (noprec):   reduce SrcOperands --> SrcOperand
    action 'GO' (noprec):   reduce SrcOperands --> SrcOperand
    action 'FORALL' (noprec):   reduce SrcOperands --> SrcOperand
    action 'EXISTS' (noprec):   reduce SrcOperands --> SrcOperand
    action 'OLD' (noprec):   reduce SrcOperands --> SrcOperand
    action 'COLONCOLON' (noprec):   reduce SrcOperands --> SrcOperand
    action 'EQEQGT' (noprec):   reduce SrcOperands --> SrcOperand
    action 'LTEQEQGT' (noprec):   reduce SrcOperands --> SrcOperand
    action 'TYPE' (noprec):   reduce SrcOperands --> SrcOperand
    action 'CONST' (noprec):   reduce SrcOperands --> SrcOperand
    action 'FUNCTION' (noprec):   reduce SrcOperands --> SrcOperand
    action 'RETURNS' (noprec):   reduce SrcOperands --> SrcOperand
    action 'AXIOM' (noprec):   reduce SrcOperands --> SrcOperand
    action 'PROCEDURE' (noprec):   reduce SrcOperands --> SrcOperand
    action 'IMPLEMENTATION' (noprec):   reduce SrcOperands --> SrcOperand
    action 'REQUIRES' (noprec):   reduce SrcOperands --> SrcOperand
    action 'ENSURES' (noprec):   reduce SrcOperands --> SrcOperand
    action 'LT' (noprec):   reduce SrcOperands --> SrcOperand
    action 'GT' (noprec):   reduce SrcOperands --> SrcOperand
    action 'EQ' (noprec):   reduce SrcOperands --> SrcOperand
    action 'BANG' (noprec):   reduce SrcOperands --> SrcOperand
    action 'COMMA' (noprec):   shift 139
    action 'LE' (noprec):   reduce SrcOperands --> SrcOperand
    action 'GE' (noprec):   reduce SrcOperands --> SrcOperand
    action 'EQEQ' (noprec):   reduce SrcOperands --> SrcOperand
    action 'NE' (noprec):   reduce SrcOperands --> SrcOperand
    action 'PLUS' (noprec):   reduce SrcOperands --> SrcOperand
    action 'MINUS' (noprec):   reduce SrcOperands --> SrcOperand
    action 'STAR' (noprec):   reduce SrcOperands --> SrcOperand
    action 'SLASH' (noprec):   reduce SrcOperands --> SrcOperand
    action 'PERCENT' (noprec):   reduce SrcOperands --> SrcOperand
    action 'AMPAMP' (noprec):   reduce SrcOperands --> SrcOperand
    action 'BARBAR' (noprec):   reduce SrcOperands --> SrcOperand
    action 'COLONEQ' (noprec):   reduce SrcOperands --> SrcOperand
    action 'INT' (noprec):   reduce SrcOperands --> SrcOperand
    action 'BOOL' (noprec):   reduce SrcOperands --> SrcOperand
    action 'IF' (noprec):   reduce SrcOperands --> SrcOperand
    action 'RETURN' (noprec):   reduce SrcOperands --> SrcOperand
    action 'VAR' (noprec):   reduce SrcOperands --> SrcOperand
    action 'LBRACE' (noprec):   reduce SrcOperands --> SrcOperand
    action 'RBRACE' (noprec):   reduce SrcOperands --> SrcOperand
    action 'SEMI' (noprec):   reduce SrcOperands --> SrcOperand
    action 'COLON' (noprec):   reduce SrcOperands --> SrcOperand
    action 'LPAREN' (noprec):   reduce SrcOperands --> SrcOperand
    action 'RPAREN' (noprec):   reduce SrcOperands --> SrcOperand
    action 'LBRACKET' (noprec):   reduce SrcOperands --> SrcOperand
    action 'RBRACKET' (noprec):   reduce SrcOperands --> SrcOperand
    action 'LITBOOL' (noprec):   reduce SrcOperands --> SrcOperand
    action 'LITINT' (noprec):   reduce SrcOperands --> SrcOperand
    action 'QLID' (noprec):   reduce SrcOperands --> SrcOperand
    action 'QUID' (noprec):   reduce SrcOperands --> SrcOperand
    action 'DLID' (noprec):   reduce SrcOperands --> SrcOperand
    action 'DUID' (noprec):   reduce SrcOperands --> SrcOperand
    action 'LID' (noprec):   reduce SrcOperands --> SrcOperand
    action 'UID' (noprec):   reduce SrcOperands --> SrcOperand
    action 'error' (noprec):   reduce SrcOperands --> SrcOperand
    action '#' (noprec):   reduce SrcOperands --> SrcOperand
    action '$$' (noprec):   reduce SrcOperands --> SrcOperand

  immediate action: <none>
 gotos:

state 139:
  items:
    SrcOperands -> SrcOperand 'COMMA' . SrcOperands

  actions:
    action 'EOF' (noprec):   reduce SrcOperands --> 
    action 'EAX' (noprec):   shift 14
    action 'EBX' (noprec):   shift 15
    action 'ECX' (noprec):   shift 16
    action 'EDX' (noprec):   shift 17
    action 'ESI' (noprec):   shift 18
    action 'EDI' (noprec):   shift 19
    action 'EBP' (noprec):   shift 20
    action 'ESP' (noprec):   shift 21
    action 'MODIFIES' (noprec):   reduce SrcOperands --> 
    action 'INVARIANT' (noprec):   reduce SrcOperands --> 
    action 'ASSERT' (noprec):   reduce SrcOperands --> 
    action 'HAVOC' (noprec):   reduce SrcOperands --> 
    action 'GOTO' (noprec):   reduce SrcOperands --> 
    action 'CALL' (noprec):   reduce SrcOperands --> 
    action 'CCALL' (noprec):   reduce SrcOperands --> 
    action 'RET' (noprec):   reduce SrcOperands --> 
    action 'IRET' (noprec):   reduce SrcOperands --> 
    action 'GO' (noprec):   reduce SrcOperands --> 
    action 'FORALL' (noprec):   reduce SrcOperands --> 
    action 'EXISTS' (noprec):   reduce SrcOperands --> 
    action 'OLD' (noprec):   reduce SrcOperands --> 
    action 'COLONCOLON' (noprec):   reduce SrcOperands --> 
    action 'EQEQGT' (noprec):   reduce SrcOperands --> 
    action 'LTEQEQGT' (noprec):   reduce SrcOperands --> 
    action 'TYPE' (noprec):   reduce SrcOperands --> 
    action 'CONST' (noprec):   reduce SrcOperands --> 
    action 'FUNCTION' (noprec):   reduce SrcOperands --> 
    action 'RETURNS' (noprec):   reduce SrcOperands --> 
    action 'AXIOM' (noprec):   reduce SrcOperands --> 
    action 'PROCEDURE' (noprec):   reduce SrcOperands --> 
    action 'IMPLEMENTATION' (noprec):   reduce SrcOperands --> 
    action 'REQUIRES' (noprec):   reduce SrcOperands --> 
    action 'ENSURES' (noprec):   reduce SrcOperands --> 
    action 'LT' (noprec):   reduce SrcOperands --> 
    action 'GT' (noprec):   reduce SrcOperands --> 
    action 'EQ' (noprec):   reduce SrcOperands --> 
    action 'BANG' (noprec):   reduce SrcOperands --> 
    action 'COMMA' (noprec):   reduce SrcOperands --> 
    action 'LE' (noprec):   reduce SrcOperands --> 
    action 'GE' (noprec):   reduce SrcOperands --> 
    action 'EQEQ' (noprec):   reduce SrcOperands --> 
    action 'NE' (noprec):   reduce SrcOperands --> 
    action 'PLUS' (noprec):   reduce SrcOperands --> 
    action 'MINUS' (noprec):   reduce SrcOperands --> 
    action 'STAR' (noprec):   reduce SrcOperands --> 
    action 'SLASH' (noprec):   reduce SrcOperands --> 
    action 'PERCENT' (noprec):   reduce SrcOperands --> 
    action 'AMPAMP' (noprec):   reduce SrcOperands --> 
    action 'BARBAR' (noprec):   reduce SrcOperands --> 
    action 'COLONEQ' (noprec):   reduce SrcOperands --> 
    action 'INT' (noprec):   reduce SrcOperands --> 
    action 'BOOL' (noprec):   reduce SrcOperands --> 
    action 'IF' (noprec):   reduce SrcOperands --> 
    action 'RETURN' (noprec):   reduce SrcOperands --> 
    action 'VAR' (noprec):   reduce SrcOperands --> 
    action 'LBRACE' (noprec):   reduce SrcOperands --> 
    action 'RBRACE' (noprec):   reduce SrcOperands --> 
    action 'SEMI' (noprec):   reduce SrcOperands --> 
    action 'COLON' (noprec):   reduce SrcOperands --> 
    action 'LPAREN' (explicit left 10000):   shift 41
    action 'RPAREN' (noprec):   reduce SrcOperands --> 
    action 'LBRACKET' (noprec):   reduce SrcOperands --> 
    action 'RBRACKET' (noprec):   reduce SrcOperands --> 
    action 'LITBOOL' (noprec):   reduce SrcOperands --> 
    action 'LITINT' (noprec):   shift 22
    action 'QLID' (noprec):   shift 32
    action 'QUID' (noprec):   shift 23
    action 'DLID' (noprec):   reduce SrcOperands --> 
    action 'DUID' (noprec):   reduce SrcOperands --> 
    action 'LID' (noprec):   shift 28
    action 'UID' (noprec):   shift 26
    action 'error' (noprec):   reduce SrcOperands --> 
    action '#' (noprec):   reduce SrcOperands --> 
    action '$$' (noprec):   reduce SrcOperands --> 

  immediate action: <none>
 gotos:
    goto Reg: 25
    goto Const: 33
    goto Operand: 31
    goto SrcOperand: 138
    goto SrcOperands: 140

state 140:
  items:
    SrcOperands -> SrcOperand 'COMMA' SrcOperands . 

  actions:
    action 'EOF' (noprec):   reduce SrcOperands --> SrcOperand 'COMMA' SrcOperands
    action 'EAX' (noprec):   reduce SrcOperands --> SrcOperand 'COMMA' SrcOperands
    action 'EBX' (noprec):   reduce SrcOperands --> SrcOperand 'COMMA' SrcOperands
    action 'ECX' (noprec):   reduce SrcOperands --> SrcOperand 'COMMA' SrcOperands
    action 'EDX' (noprec):   reduce SrcOperands --> SrcOperand 'COMMA' SrcOperands
    action 'ESI' (noprec):   reduce SrcOperands --> SrcOperand 'COMMA' SrcOperands
    action 'EDI' (noprec):   reduce SrcOperands --> SrcOperand 'COMMA' SrcOperands
    action 'EBP' (noprec):   reduce SrcOperands --> SrcOperand 'COMMA' SrcOperands
    action 'ESP' (noprec):   reduce SrcOperands --> SrcOperand 'COMMA' SrcOperands
    action 'MODIFIES' (noprec):   reduce SrcOperands --> SrcOperand 'COMMA' SrcOperands
    action 'INVARIANT' (noprec):   reduce SrcOperands --> SrcOperand 'COMMA' SrcOperands
    action 'ASSERT' (noprec):   reduce SrcOperands --> SrcOperand 'COMMA' SrcOperands
    action 'HAVOC' (noprec):   reduce SrcOperands --> SrcOperand 'COMMA' SrcOperands
    action 'GOTO' (noprec):   reduce SrcOperands --> SrcOperand 'COMMA' SrcOperands
    action 'CALL' (noprec):   reduce SrcOperands --> SrcOperand 'COMMA' SrcOperands
    action 'CCALL' (noprec):   reduce SrcOperands --> SrcOperand 'COMMA' SrcOperands
    action 'RET' (noprec):   reduce SrcOperands --> SrcOperand 'COMMA' SrcOperands
    action 'IRET' (noprec):   reduce SrcOperands --> SrcOperand 'COMMA' SrcOperands
    action 'GO' (noprec):   reduce SrcOperands --> SrcOperand 'COMMA' SrcOperands
    action 'FORALL' (noprec):   reduce SrcOperands --> SrcOperand 'COMMA' SrcOperands
    action 'EXISTS' (noprec):   reduce SrcOperands --> SrcOperand 'COMMA' SrcOperands
    action 'OLD' (noprec):   reduce SrcOperands --> SrcOperand 'COMMA' SrcOperands
    action 'COLONCOLON' (noprec):   reduce SrcOperands --> SrcOperand 'COMMA' SrcOperands
    action 'EQEQGT' (noprec):   reduce SrcOperands --> SrcOperand 'COMMA' SrcOperands
    action 'LTEQEQGT' (noprec):   reduce SrcOperands --> SrcOperand 'COMMA' SrcOperands
    action 'TYPE' (noprec):   reduce SrcOperands --> SrcOperand 'COMMA' SrcOperands
    action 'CONST' (noprec):   reduce SrcOperands --> SrcOperand 'COMMA' SrcOperands
    action 'FUNCTION' (noprec):   reduce SrcOperands --> SrcOperand 'COMMA' SrcOperands
    action 'RETURNS' (noprec):   reduce SrcOperands --> SrcOperand 'COMMA' SrcOperands
    action 'AXIOM' (noprec):   reduce SrcOperands --> SrcOperand 'COMMA' SrcOperands
    action 'PROCEDURE' (noprec):   reduce SrcOperands --> SrcOperand 'COMMA' SrcOperands
    action 'IMPLEMENTATION' (noprec):   reduce SrcOperands --> SrcOperand 'COMMA' SrcOperands
    action 'REQUIRES' (noprec):   reduce SrcOperands --> SrcOperand 'COMMA' SrcOperands
    action 'ENSURES' (noprec):   reduce SrcOperands --> SrcOperand 'COMMA' SrcOperands
    action 'LT' (noprec):   reduce SrcOperands --> SrcOperand 'COMMA' SrcOperands
    action 'GT' (noprec):   reduce SrcOperands --> SrcOperand 'COMMA' SrcOperands
    action 'EQ' (noprec):   reduce SrcOperands --> SrcOperand 'COMMA' SrcOperands
    action 'BANG' (noprec):   reduce SrcOperands --> SrcOperand 'COMMA' SrcOperands
    action 'COMMA' (noprec):   reduce SrcOperands --> SrcOperand 'COMMA' SrcOperands
    action 'LE' (noprec):   reduce SrcOperands --> SrcOperand 'COMMA' SrcOperands
    action 'GE' (noprec):   reduce SrcOperands --> SrcOperand 'COMMA' SrcOperands
    action 'EQEQ' (noprec):   reduce SrcOperands --> SrcOperand 'COMMA' SrcOperands
    action 'NE' (noprec):   reduce SrcOperands --> SrcOperand 'COMMA' SrcOperands
    action 'PLUS' (noprec):   reduce SrcOperands --> SrcOperand 'COMMA' SrcOperands
    action 'MINUS' (noprec):   reduce SrcOperands --> SrcOperand 'COMMA' SrcOperands
    action 'STAR' (noprec):   reduce SrcOperands --> SrcOperand 'COMMA' SrcOperands
    action 'SLASH' (noprec):   reduce SrcOperands --> SrcOperand 'COMMA' SrcOperands
    action 'PERCENT' (noprec):   reduce SrcOperands --> SrcOperand 'COMMA' SrcOperands
    action 'AMPAMP' (noprec):   reduce SrcOperands --> SrcOperand 'COMMA' SrcOperands
    action 'BARBAR' (noprec):   reduce SrcOperands --> SrcOperand 'COMMA' SrcOperands
    action 'COLONEQ' (noprec):   reduce SrcOperands --> SrcOperand 'COMMA' SrcOperands
    action 'INT' (noprec):   reduce SrcOperands --> SrcOperand 'COMMA' SrcOperands
    action 'BOOL' (noprec):   reduce SrcOperands --> SrcOperand 'COMMA' SrcOperands
    action 'IF' (noprec):   reduce SrcOperands --> SrcOperand 'COMMA' SrcOperands
    action 'RETURN' (noprec):   reduce SrcOperands --> SrcOperand 'COMMA' SrcOperands
    action 'VAR' (noprec):   reduce SrcOperands --> SrcOperand 'COMMA' SrcOperands
    action 'LBRACE' (noprec):   reduce SrcOperands --> SrcOperand 'COMMA' SrcOperands
    action 'RBRACE' (noprec):   reduce SrcOperands --> SrcOperand 'COMMA' SrcOperands
    action 'SEMI' (noprec):   reduce SrcOperands --> SrcOperand 'COMMA' SrcOperands
    action 'COLON' (noprec):   reduce SrcOperands --> SrcOperand 'COMMA' SrcOperands
    action 'LPAREN' (noprec):   reduce SrcOperands --> SrcOperand 'COMMA' SrcOperands
    action 'RPAREN' (noprec):   reduce SrcOperands --> SrcOperand 'COMMA' SrcOperands
    action 'LBRACKET' (noprec):   reduce SrcOperands --> SrcOperand 'COMMA' SrcOperands
    action 'RBRACKET' (noprec):   reduce SrcOperands --> SrcOperand 'COMMA' SrcOperands
    action 'LITBOOL' (noprec):   reduce SrcOperands --> SrcOperand 'COMMA' SrcOperands
    action 'LITINT' (noprec):   reduce SrcOperands --> SrcOperand 'COMMA' SrcOperands
    action 'QLID' (noprec):   reduce SrcOperands --> SrcOperand 'COMMA' SrcOperands
    action 'QUID' (noprec):   reduce SrcOperands --> SrcOperand 'COMMA' SrcOperands
    action 'DLID' (noprec):   reduce SrcOperands --> SrcOperand 'COMMA' SrcOperands
    action 'DUID' (noprec):   reduce SrcOperands --> SrcOperand 'COMMA' SrcOperands
    action 'LID' (noprec):   reduce SrcOperands --> SrcOperand 'COMMA' SrcOperands
    action 'UID' (noprec):   reduce SrcOperands --> SrcOperand 'COMMA' SrcOperands
    action 'error' (noprec):   reduce SrcOperands --> SrcOperand 'COMMA' SrcOperands
    action '#' (noprec):   reduce SrcOperands --> SrcOperand 'COMMA' SrcOperands
    action '$$' (noprec):   reduce SrcOperands --> SrcOperand 'COMMA' SrcOperands

  immediate action:   reduce SrcOperands --> SrcOperand 'COMMA' SrcOperands
 gotos:

state 141:
  items:
    AnyId -> ID . 

  actions:
    action 'EOF' (noprec):   reduce AnyId --> ID
    action 'EAX' (noprec):   reduce AnyId --> ID
    action 'EBX' (noprec):   reduce AnyId --> ID
    action 'ECX' (noprec):   reduce AnyId --> ID
    action 'EDX' (noprec):   reduce AnyId --> ID
    action 'ESI' (noprec):   reduce AnyId --> ID
    action 'EDI' (noprec):   reduce AnyId --> ID
    action 'EBP' (noprec):   reduce AnyId --> ID
    action 'ESP' (noprec):   reduce AnyId --> ID
    action 'MODIFIES' (noprec):   reduce AnyId --> ID
    action 'INVARIANT' (noprec):   reduce AnyId --> ID
    action 'ASSERT' (noprec):   reduce AnyId --> ID
    action 'HAVOC' (noprec):   reduce AnyId --> ID
    action 'GOTO' (noprec):   reduce AnyId --> ID
    action 'CALL' (noprec):   reduce AnyId --> ID
    action 'CCALL' (noprec):   reduce AnyId --> ID
    action 'RET' (noprec):   reduce AnyId --> ID
    action 'IRET' (noprec):   reduce AnyId --> ID
    action 'GO' (noprec):   reduce AnyId --> ID
    action 'FORALL' (noprec):   reduce AnyId --> ID
    action 'EXISTS' (noprec):   reduce AnyId --> ID
    action 'OLD' (noprec):   reduce AnyId --> ID
    action 'COLONCOLON' (noprec):   reduce AnyId --> ID
    action 'EQEQGT' (noprec):   reduce AnyId --> ID
    action 'LTEQEQGT' (noprec):   reduce AnyId --> ID
    action 'TYPE' (noprec):   reduce AnyId --> ID
    action 'CONST' (noprec):   reduce AnyId --> ID
    action 'FUNCTION' (noprec):   reduce AnyId --> ID
    action 'RETURNS' (noprec):   reduce AnyId --> ID
    action 'AXIOM' (noprec):   reduce AnyId --> ID
    action 'PROCEDURE' (noprec):   reduce AnyId --> ID
    action 'IMPLEMENTATION' (noprec):   reduce AnyId --> ID
    action 'REQUIRES' (noprec):   reduce AnyId --> ID
    action 'ENSURES' (noprec):   reduce AnyId --> ID
    action 'LT' (noprec):   reduce AnyId --> ID
    action 'GT' (noprec):   reduce AnyId --> ID
    action 'EQ' (noprec):   reduce AnyId --> ID
    action 'BANG' (noprec):   reduce AnyId --> ID
    action 'COMMA' (noprec):   reduce AnyId --> ID
    action 'LE' (noprec):   reduce AnyId --> ID
    action 'GE' (noprec):   reduce AnyId --> ID
    action 'EQEQ' (noprec):   reduce AnyId --> ID
    action 'NE' (noprec):   reduce AnyId --> ID
    action 'PLUS' (noprec):   reduce AnyId --> ID
    action 'MINUS' (noprec):   reduce AnyId --> ID
    action 'STAR' (noprec):   reduce AnyId --> ID
    action 'SLASH' (noprec):   reduce AnyId --> ID
    action 'PERCENT' (noprec):   reduce AnyId --> ID
    action 'AMPAMP' (noprec):   reduce AnyId --> ID
    action 'BARBAR' (noprec):   reduce AnyId --> ID
    action 'COLONEQ' (noprec):   reduce AnyId --> ID
    action 'INT' (noprec):   reduce AnyId --> ID
    action 'BOOL' (noprec):   reduce AnyId --> ID
    action 'IF' (noprec):   reduce AnyId --> ID
    action 'RETURN' (noprec):   reduce AnyId --> ID
    action 'VAR' (noprec):   reduce AnyId --> ID
    action 'LBRACE' (noprec):   reduce AnyId --> ID
    action 'RBRACE' (noprec):   reduce AnyId --> ID
    action 'SEMI' (noprec):   reduce AnyId --> ID
    action 'COLON' (noprec):   reduce AnyId --> ID
    action 'LPAREN' (noprec):   reduce AnyId --> ID
    action 'RPAREN' (noprec):   reduce AnyId --> ID
    action 'LBRACKET' (noprec):   reduce AnyId --> ID
    action 'RBRACKET' (noprec):   reduce AnyId --> ID
    action 'LITBOOL' (noprec):   reduce AnyId --> ID
    action 'LITINT' (noprec):   reduce AnyId --> ID
    action 'QLID' (noprec):   reduce AnyId --> ID
    action 'QUID' (noprec):   reduce AnyId --> ID
    action 'DLID' (noprec):   reduce AnyId --> ID
    action 'DUID' (noprec):   reduce AnyId --> ID
    action 'LID' (noprec):   reduce AnyId --> ID
    action 'UID' (noprec):   reduce AnyId --> ID
    action 'error' (noprec):   reduce AnyId --> ID
    action '#' (noprec):   reduce AnyId --> ID
    action '$$' (noprec):   reduce AnyId --> ID

  immediate action:   reduce AnyId --> ID
 gotos:

state 142:
  items:
    AnyId -> 'DUID' . 

  actions:
    action 'EOF' (noprec):   reduce AnyId --> 'DUID'
    action 'EAX' (noprec):   reduce AnyId --> 'DUID'
    action 'EBX' (noprec):   reduce AnyId --> 'DUID'
    action 'ECX' (noprec):   reduce AnyId --> 'DUID'
    action 'EDX' (noprec):   reduce AnyId --> 'DUID'
    action 'ESI' (noprec):   reduce AnyId --> 'DUID'
    action 'EDI' (noprec):   reduce AnyId --> 'DUID'
    action 'EBP' (noprec):   reduce AnyId --> 'DUID'
    action 'ESP' (noprec):   reduce AnyId --> 'DUID'
    action 'MODIFIES' (noprec):   reduce AnyId --> 'DUID'
    action 'INVARIANT' (noprec):   reduce AnyId --> 'DUID'
    action 'ASSERT' (noprec):   reduce AnyId --> 'DUID'
    action 'HAVOC' (noprec):   reduce AnyId --> 'DUID'
    action 'GOTO' (noprec):   reduce AnyId --> 'DUID'
    action 'CALL' (noprec):   reduce AnyId --> 'DUID'
    action 'CCALL' (noprec):   reduce AnyId --> 'DUID'
    action 'RET' (noprec):   reduce AnyId --> 'DUID'
    action 'IRET' (noprec):   reduce AnyId --> 'DUID'
    action 'GO' (noprec):   reduce AnyId --> 'DUID'
    action 'FORALL' (noprec):   reduce AnyId --> 'DUID'
    action 'EXISTS' (noprec):   reduce AnyId --> 'DUID'
    action 'OLD' (noprec):   reduce AnyId --> 'DUID'
    action 'COLONCOLON' (noprec):   reduce AnyId --> 'DUID'
    action 'EQEQGT' (noprec):   reduce AnyId --> 'DUID'
    action 'LTEQEQGT' (noprec):   reduce AnyId --> 'DUID'
    action 'TYPE' (noprec):   reduce AnyId --> 'DUID'
    action 'CONST' (noprec):   reduce AnyId --> 'DUID'
    action 'FUNCTION' (noprec):   reduce AnyId --> 'DUID'
    action 'RETURNS' (noprec):   reduce AnyId --> 'DUID'
    action 'AXIOM' (noprec):   reduce AnyId --> 'DUID'
    action 'PROCEDURE' (noprec):   reduce AnyId --> 'DUID'
    action 'IMPLEMENTATION' (noprec):   reduce AnyId --> 'DUID'
    action 'REQUIRES' (noprec):   reduce AnyId --> 'DUID'
    action 'ENSURES' (noprec):   reduce AnyId --> 'DUID'
    action 'LT' (noprec):   reduce AnyId --> 'DUID'
    action 'GT' (noprec):   reduce AnyId --> 'DUID'
    action 'EQ' (noprec):   reduce AnyId --> 'DUID'
    action 'BANG' (noprec):   reduce AnyId --> 'DUID'
    action 'COMMA' (noprec):   reduce AnyId --> 'DUID'
    action 'LE' (noprec):   reduce AnyId --> 'DUID'
    action 'GE' (noprec):   reduce AnyId --> 'DUID'
    action 'EQEQ' (noprec):   reduce AnyId --> 'DUID'
    action 'NE' (noprec):   reduce AnyId --> 'DUID'
    action 'PLUS' (noprec):   reduce AnyId --> 'DUID'
    action 'MINUS' (noprec):   reduce AnyId --> 'DUID'
    action 'STAR' (noprec):   reduce AnyId --> 'DUID'
    action 'SLASH' (noprec):   reduce AnyId --> 'DUID'
    action 'PERCENT' (noprec):   reduce AnyId --> 'DUID'
    action 'AMPAMP' (noprec):   reduce AnyId --> 'DUID'
    action 'BARBAR' (noprec):   reduce AnyId --> 'DUID'
    action 'COLONEQ' (noprec):   reduce AnyId --> 'DUID'
    action 'INT' (noprec):   reduce AnyId --> 'DUID'
    action 'BOOL' (noprec):   reduce AnyId --> 'DUID'
    action 'IF' (noprec):   reduce AnyId --> 'DUID'
    action 'RETURN' (noprec):   reduce AnyId --> 'DUID'
    action 'VAR' (noprec):   reduce AnyId --> 'DUID'
    action 'LBRACE' (noprec):   reduce AnyId --> 'DUID'
    action 'RBRACE' (noprec):   reduce AnyId --> 'DUID'
    action 'SEMI' (noprec):   reduce AnyId --> 'DUID'
    action 'COLON' (noprec):   reduce AnyId --> 'DUID'
    action 'LPAREN' (noprec):   reduce AnyId --> 'DUID'
    action 'RPAREN' (noprec):   reduce AnyId --> 'DUID'
    action 'LBRACKET' (noprec):   reduce AnyId --> 'DUID'
    action 'RBRACKET' (noprec):   reduce AnyId --> 'DUID'
    action 'LITBOOL' (noprec):   reduce AnyId --> 'DUID'
    action 'LITINT' (noprec):   reduce AnyId --> 'DUID'
    action 'QLID' (noprec):   reduce AnyId --> 'DUID'
    action 'QUID' (noprec):   reduce AnyId --> 'DUID'
    action 'DLID' (noprec):   reduce AnyId --> 'DUID'
    action 'DUID' (noprec):   reduce AnyId --> 'DUID'
    action 'LID' (noprec):   reduce AnyId --> 'DUID'
    action 'UID' (noprec):   reduce AnyId --> 'DUID'
    action 'error' (noprec):   reduce AnyId --> 'DUID'
    action '#' (noprec):   reduce AnyId --> 'DUID'
    action '$$' (noprec):   reduce AnyId --> 'DUID'

  immediate action:   reduce AnyId --> 'DUID'
 gotos:

state 143:
  items:
    AnyId -> 'DLID' . 

  actions:
    action 'EOF' (noprec):   reduce AnyId --> 'DLID'
    action 'EAX' (noprec):   reduce AnyId --> 'DLID'
    action 'EBX' (noprec):   reduce AnyId --> 'DLID'
    action 'ECX' (noprec):   reduce AnyId --> 'DLID'
    action 'EDX' (noprec):   reduce AnyId --> 'DLID'
    action 'ESI' (noprec):   reduce AnyId --> 'DLID'
    action 'EDI' (noprec):   reduce AnyId --> 'DLID'
    action 'EBP' (noprec):   reduce AnyId --> 'DLID'
    action 'ESP' (noprec):   reduce AnyId --> 'DLID'
    action 'MODIFIES' (noprec):   reduce AnyId --> 'DLID'
    action 'INVARIANT' (noprec):   reduce AnyId --> 'DLID'
    action 'ASSERT' (noprec):   reduce AnyId --> 'DLID'
    action 'HAVOC' (noprec):   reduce AnyId --> 'DLID'
    action 'GOTO' (noprec):   reduce AnyId --> 'DLID'
    action 'CALL' (noprec):   reduce AnyId --> 'DLID'
    action 'CCALL' (noprec):   reduce AnyId --> 'DLID'
    action 'RET' (noprec):   reduce AnyId --> 'DLID'
    action 'IRET' (noprec):   reduce AnyId --> 'DLID'
    action 'GO' (noprec):   reduce AnyId --> 'DLID'
    action 'FORALL' (noprec):   reduce AnyId --> 'DLID'
    action 'EXISTS' (noprec):   reduce AnyId --> 'DLID'
    action 'OLD' (noprec):   reduce AnyId --> 'DLID'
    action 'COLONCOLON' (noprec):   reduce AnyId --> 'DLID'
    action 'EQEQGT' (noprec):   reduce AnyId --> 'DLID'
    action 'LTEQEQGT' (noprec):   reduce AnyId --> 'DLID'
    action 'TYPE' (noprec):   reduce AnyId --> 'DLID'
    action 'CONST' (noprec):   reduce AnyId --> 'DLID'
    action 'FUNCTION' (noprec):   reduce AnyId --> 'DLID'
    action 'RETURNS' (noprec):   reduce AnyId --> 'DLID'
    action 'AXIOM' (noprec):   reduce AnyId --> 'DLID'
    action 'PROCEDURE' (noprec):   reduce AnyId --> 'DLID'
    action 'IMPLEMENTATION' (noprec):   reduce AnyId --> 'DLID'
    action 'REQUIRES' (noprec):   reduce AnyId --> 'DLID'
    action 'ENSURES' (noprec):   reduce AnyId --> 'DLID'
    action 'LT' (noprec):   reduce AnyId --> 'DLID'
    action 'GT' (noprec):   reduce AnyId --> 'DLID'
    action 'EQ' (noprec):   reduce AnyId --> 'DLID'
    action 'BANG' (noprec):   reduce AnyId --> 'DLID'
    action 'COMMA' (noprec):   reduce AnyId --> 'DLID'
    action 'LE' (noprec):   reduce AnyId --> 'DLID'
    action 'GE' (noprec):   reduce AnyId --> 'DLID'
    action 'EQEQ' (noprec):   reduce AnyId --> 'DLID'
    action 'NE' (noprec):   reduce AnyId --> 'DLID'
    action 'PLUS' (noprec):   reduce AnyId --> 'DLID'
    action 'MINUS' (noprec):   reduce AnyId --> 'DLID'
    action 'STAR' (noprec):   reduce AnyId --> 'DLID'
    action 'SLASH' (noprec):   reduce AnyId --> 'DLID'
    action 'PERCENT' (noprec):   reduce AnyId --> 'DLID'
    action 'AMPAMP' (noprec):   reduce AnyId --> 'DLID'
    action 'BARBAR' (noprec):   reduce AnyId --> 'DLID'
    action 'COLONEQ' (noprec):   reduce AnyId --> 'DLID'
    action 'INT' (noprec):   reduce AnyId --> 'DLID'
    action 'BOOL' (noprec):   reduce AnyId --> 'DLID'
    action 'IF' (noprec):   reduce AnyId --> 'DLID'
    action 'RETURN' (noprec):   reduce AnyId --> 'DLID'
    action 'VAR' (noprec):   reduce AnyId --> 'DLID'
    action 'LBRACE' (noprec):   reduce AnyId --> 'DLID'
    action 'RBRACE' (noprec):   reduce AnyId --> 'DLID'
    action 'SEMI' (noprec):   reduce AnyId --> 'DLID'
    action 'COLON' (noprec):   reduce AnyId --> 'DLID'
    action 'LPAREN' (noprec):   reduce AnyId --> 'DLID'
    action 'RPAREN' (noprec):   reduce AnyId --> 'DLID'
    action 'LBRACKET' (noprec):   reduce AnyId --> 'DLID'
    action 'RBRACKET' (noprec):   reduce AnyId --> 'DLID'
    action 'LITBOOL' (noprec):   reduce AnyId --> 'DLID'
    action 'LITINT' (noprec):   reduce AnyId --> 'DLID'
    action 'QLID' (noprec):   reduce AnyId --> 'DLID'
    action 'QUID' (noprec):   reduce AnyId --> 'DLID'
    action 'DLID' (noprec):   reduce AnyId --> 'DLID'
    action 'DUID' (noprec):   reduce AnyId --> 'DLID'
    action 'LID' (noprec):   reduce AnyId --> 'DLID'
    action 'UID' (noprec):   reduce AnyId --> 'DLID'
    action 'error' (noprec):   reduce AnyId --> 'DLID'
    action '#' (noprec):   reduce AnyId --> 'DLID'
    action '$$' (noprec):   reduce AnyId --> 'DLID'

  immediate action:   reduce AnyId --> 'DLID'
 gotos:

state 144:
  items:
    AnyId -> 'QUID' . 

  actions:
    action 'EOF' (noprec):   reduce AnyId --> 'QUID'
    action 'EAX' (noprec):   reduce AnyId --> 'QUID'
    action 'EBX' (noprec):   reduce AnyId --> 'QUID'
    action 'ECX' (noprec):   reduce AnyId --> 'QUID'
    action 'EDX' (noprec):   reduce AnyId --> 'QUID'
    action 'ESI' (noprec):   reduce AnyId --> 'QUID'
    action 'EDI' (noprec):   reduce AnyId --> 'QUID'
    action 'EBP' (noprec):   reduce AnyId --> 'QUID'
    action 'ESP' (noprec):   reduce AnyId --> 'QUID'
    action 'MODIFIES' (noprec):   reduce AnyId --> 'QUID'
    action 'INVARIANT' (noprec):   reduce AnyId --> 'QUID'
    action 'ASSERT' (noprec):   reduce AnyId --> 'QUID'
    action 'HAVOC' (noprec):   reduce AnyId --> 'QUID'
    action 'GOTO' (noprec):   reduce AnyId --> 'QUID'
    action 'CALL' (noprec):   reduce AnyId --> 'QUID'
    action 'CCALL' (noprec):   reduce AnyId --> 'QUID'
    action 'RET' (noprec):   reduce AnyId --> 'QUID'
    action 'IRET' (noprec):   reduce AnyId --> 'QUID'
    action 'GO' (noprec):   reduce AnyId --> 'QUID'
    action 'FORALL' (noprec):   reduce AnyId --> 'QUID'
    action 'EXISTS' (noprec):   reduce AnyId --> 'QUID'
    action 'OLD' (noprec):   reduce AnyId --> 'QUID'
    action 'COLONCOLON' (noprec):   reduce AnyId --> 'QUID'
    action 'EQEQGT' (noprec):   reduce AnyId --> 'QUID'
    action 'LTEQEQGT' (noprec):   reduce AnyId --> 'QUID'
    action 'TYPE' (noprec):   reduce AnyId --> 'QUID'
    action 'CONST' (noprec):   reduce AnyId --> 'QUID'
    action 'FUNCTION' (noprec):   reduce AnyId --> 'QUID'
    action 'RETURNS' (noprec):   reduce AnyId --> 'QUID'
    action 'AXIOM' (noprec):   reduce AnyId --> 'QUID'
    action 'PROCEDURE' (noprec):   reduce AnyId --> 'QUID'
    action 'IMPLEMENTATION' (noprec):   reduce AnyId --> 'QUID'
    action 'REQUIRES' (noprec):   reduce AnyId --> 'QUID'
    action 'ENSURES' (noprec):   reduce AnyId --> 'QUID'
    action 'LT' (noprec):   reduce AnyId --> 'QUID'
    action 'GT' (noprec):   reduce AnyId --> 'QUID'
    action 'EQ' (noprec):   reduce AnyId --> 'QUID'
    action 'BANG' (noprec):   reduce AnyId --> 'QUID'
    action 'COMMA' (noprec):   reduce AnyId --> 'QUID'
    action 'LE' (noprec):   reduce AnyId --> 'QUID'
    action 'GE' (noprec):   reduce AnyId --> 'QUID'
    action 'EQEQ' (noprec):   reduce AnyId --> 'QUID'
    action 'NE' (noprec):   reduce AnyId --> 'QUID'
    action 'PLUS' (noprec):   reduce AnyId --> 'QUID'
    action 'MINUS' (noprec):   reduce AnyId --> 'QUID'
    action 'STAR' (noprec):   reduce AnyId --> 'QUID'
    action 'SLASH' (noprec):   reduce AnyId --> 'QUID'
    action 'PERCENT' (noprec):   reduce AnyId --> 'QUID'
    action 'AMPAMP' (noprec):   reduce AnyId --> 'QUID'
    action 'BARBAR' (noprec):   reduce AnyId --> 'QUID'
    action 'COLONEQ' (noprec):   reduce AnyId --> 'QUID'
    action 'INT' (noprec):   reduce AnyId --> 'QUID'
    action 'BOOL' (noprec):   reduce AnyId --> 'QUID'
    action 'IF' (noprec):   reduce AnyId --> 'QUID'
    action 'RETURN' (noprec):   reduce AnyId --> 'QUID'
    action 'VAR' (noprec):   reduce AnyId --> 'QUID'
    action 'LBRACE' (noprec):   reduce AnyId --> 'QUID'
    action 'RBRACE' (noprec):   reduce AnyId --> 'QUID'
    action 'SEMI' (noprec):   reduce AnyId --> 'QUID'
    action 'COLON' (noprec):   reduce AnyId --> 'QUID'
    action 'LPAREN' (noprec):   reduce AnyId --> 'QUID'
    action 'RPAREN' (noprec):   reduce AnyId --> 'QUID'
    action 'LBRACKET' (noprec):   reduce AnyId --> 'QUID'
    action 'RBRACKET' (noprec):   reduce AnyId --> 'QUID'
    action 'LITBOOL' (noprec):   reduce AnyId --> 'QUID'
    action 'LITINT' (noprec):   reduce AnyId --> 'QUID'
    action 'QLID' (noprec):   reduce AnyId --> 'QUID'
    action 'QUID' (noprec):   reduce AnyId --> 'QUID'
    action 'DLID' (noprec):   reduce AnyId --> 'QUID'
    action 'DUID' (noprec):   reduce AnyId --> 'QUID'
    action 'LID' (noprec):   reduce AnyId --> 'QUID'
    action 'UID' (noprec):   reduce AnyId --> 'QUID'
    action 'error' (noprec):   reduce AnyId --> 'QUID'
    action '#' (noprec):   reduce AnyId --> 'QUID'
    action '$$' (noprec):   reduce AnyId --> 'QUID'

  immediate action:   reduce AnyId --> 'QUID'
 gotos:

state 145:
  items:
    AnyId -> 'QLID' . 

  actions:
    action 'EOF' (noprec):   reduce AnyId --> 'QLID'
    action 'EAX' (noprec):   reduce AnyId --> 'QLID'
    action 'EBX' (noprec):   reduce AnyId --> 'QLID'
    action 'ECX' (noprec):   reduce AnyId --> 'QLID'
    action 'EDX' (noprec):   reduce AnyId --> 'QLID'
    action 'ESI' (noprec):   reduce AnyId --> 'QLID'
    action 'EDI' (noprec):   reduce AnyId --> 'QLID'
    action 'EBP' (noprec):   reduce AnyId --> 'QLID'
    action 'ESP' (noprec):   reduce AnyId --> 'QLID'
    action 'MODIFIES' (noprec):   reduce AnyId --> 'QLID'
    action 'INVARIANT' (noprec):   reduce AnyId --> 'QLID'
    action 'ASSERT' (noprec):   reduce AnyId --> 'QLID'
    action 'HAVOC' (noprec):   reduce AnyId --> 'QLID'
    action 'GOTO' (noprec):   reduce AnyId --> 'QLID'
    action 'CALL' (noprec):   reduce AnyId --> 'QLID'
    action 'CCALL' (noprec):   reduce AnyId --> 'QLID'
    action 'RET' (noprec):   reduce AnyId --> 'QLID'
    action 'IRET' (noprec):   reduce AnyId --> 'QLID'
    action 'GO' (noprec):   reduce AnyId --> 'QLID'
    action 'FORALL' (noprec):   reduce AnyId --> 'QLID'
    action 'EXISTS' (noprec):   reduce AnyId --> 'QLID'
    action 'OLD' (noprec):   reduce AnyId --> 'QLID'
    action 'COLONCOLON' (noprec):   reduce AnyId --> 'QLID'
    action 'EQEQGT' (noprec):   reduce AnyId --> 'QLID'
    action 'LTEQEQGT' (noprec):   reduce AnyId --> 'QLID'
    action 'TYPE' (noprec):   reduce AnyId --> 'QLID'
    action 'CONST' (noprec):   reduce AnyId --> 'QLID'
    action 'FUNCTION' (noprec):   reduce AnyId --> 'QLID'
    action 'RETURNS' (noprec):   reduce AnyId --> 'QLID'
    action 'AXIOM' (noprec):   reduce AnyId --> 'QLID'
    action 'PROCEDURE' (noprec):   reduce AnyId --> 'QLID'
    action 'IMPLEMENTATION' (noprec):   reduce AnyId --> 'QLID'
    action 'REQUIRES' (noprec):   reduce AnyId --> 'QLID'
    action 'ENSURES' (noprec):   reduce AnyId --> 'QLID'
    action 'LT' (noprec):   reduce AnyId --> 'QLID'
    action 'GT' (noprec):   reduce AnyId --> 'QLID'
    action 'EQ' (noprec):   reduce AnyId --> 'QLID'
    action 'BANG' (noprec):   reduce AnyId --> 'QLID'
    action 'COMMA' (noprec):   reduce AnyId --> 'QLID'
    action 'LE' (noprec):   reduce AnyId --> 'QLID'
    action 'GE' (noprec):   reduce AnyId --> 'QLID'
    action 'EQEQ' (noprec):   reduce AnyId --> 'QLID'
    action 'NE' (noprec):   reduce AnyId --> 'QLID'
    action 'PLUS' (noprec):   reduce AnyId --> 'QLID'
    action 'MINUS' (noprec):   reduce AnyId --> 'QLID'
    action 'STAR' (noprec):   reduce AnyId --> 'QLID'
    action 'SLASH' (noprec):   reduce AnyId --> 'QLID'
    action 'PERCENT' (noprec):   reduce AnyId --> 'QLID'
    action 'AMPAMP' (noprec):   reduce AnyId --> 'QLID'
    action 'BARBAR' (noprec):   reduce AnyId --> 'QLID'
    action 'COLONEQ' (noprec):   reduce AnyId --> 'QLID'
    action 'INT' (noprec):   reduce AnyId --> 'QLID'
    action 'BOOL' (noprec):   reduce AnyId --> 'QLID'
    action 'IF' (noprec):   reduce AnyId --> 'QLID'
    action 'RETURN' (noprec):   reduce AnyId --> 'QLID'
    action 'VAR' (noprec):   reduce AnyId --> 'QLID'
    action 'LBRACE' (noprec):   reduce AnyId --> 'QLID'
    action 'RBRACE' (noprec):   reduce AnyId --> 'QLID'
    action 'SEMI' (noprec):   reduce AnyId --> 'QLID'
    action 'COLON' (noprec):   reduce AnyId --> 'QLID'
    action 'LPAREN' (noprec):   reduce AnyId --> 'QLID'
    action 'RPAREN' (noprec):   reduce AnyId --> 'QLID'
    action 'LBRACKET' (noprec):   reduce AnyId --> 'QLID'
    action 'RBRACKET' (noprec):   reduce AnyId --> 'QLID'
    action 'LITBOOL' (noprec):   reduce AnyId --> 'QLID'
    action 'LITINT' (noprec):   reduce AnyId --> 'QLID'
    action 'QLID' (noprec):   reduce AnyId --> 'QLID'
    action 'QUID' (noprec):   reduce AnyId --> 'QLID'
    action 'DLID' (noprec):   reduce AnyId --> 'QLID'
    action 'DUID' (noprec):   reduce AnyId --> 'QLID'
    action 'LID' (noprec):   reduce AnyId --> 'QLID'
    action 'UID' (noprec):   reduce AnyId --> 'QLID'
    action 'error' (noprec):   reduce AnyId --> 'QLID'
    action '#' (noprec):   reduce AnyId --> 'QLID'
    action '$$' (noprec):   reduce AnyId --> 'QLID'

  immediate action:   reduce AnyId --> 'QLID'
 gotos:

state 146:
  items:
    AnyVar -> AnyId . 

  actions:
    action 'EOF' (noprec):   reduce AnyVar --> AnyId
    action 'EAX' (noprec):   reduce AnyVar --> AnyId
    action 'EBX' (noprec):   reduce AnyVar --> AnyId
    action 'ECX' (noprec):   reduce AnyVar --> AnyId
    action 'EDX' (noprec):   reduce AnyVar --> AnyId
    action 'ESI' (noprec):   reduce AnyVar --> AnyId
    action 'EDI' (noprec):   reduce AnyVar --> AnyId
    action 'EBP' (noprec):   reduce AnyVar --> AnyId
    action 'ESP' (noprec):   reduce AnyVar --> AnyId
    action 'MODIFIES' (noprec):   reduce AnyVar --> AnyId
    action 'INVARIANT' (noprec):   reduce AnyVar --> AnyId
    action 'ASSERT' (noprec):   reduce AnyVar --> AnyId
    action 'HAVOC' (noprec):   reduce AnyVar --> AnyId
    action 'GOTO' (noprec):   reduce AnyVar --> AnyId
    action 'CALL' (noprec):   reduce AnyVar --> AnyId
    action 'CCALL' (noprec):   reduce AnyVar --> AnyId
    action 'RET' (noprec):   reduce AnyVar --> AnyId
    action 'IRET' (noprec):   reduce AnyVar --> AnyId
    action 'GO' (noprec):   reduce AnyVar --> AnyId
    action 'FORALL' (noprec):   reduce AnyVar --> AnyId
    action 'EXISTS' (noprec):   reduce AnyVar --> AnyId
    action 'OLD' (noprec):   reduce AnyVar --> AnyId
    action 'COLONCOLON' (noprec):   reduce AnyVar --> AnyId
    action 'EQEQGT' (noprec):   reduce AnyVar --> AnyId
    action 'LTEQEQGT' (noprec):   reduce AnyVar --> AnyId
    action 'TYPE' (noprec):   reduce AnyVar --> AnyId
    action 'CONST' (noprec):   reduce AnyVar --> AnyId
    action 'FUNCTION' (noprec):   reduce AnyVar --> AnyId
    action 'RETURNS' (noprec):   reduce AnyVar --> AnyId
    action 'AXIOM' (noprec):   reduce AnyVar --> AnyId
    action 'PROCEDURE' (noprec):   reduce AnyVar --> AnyId
    action 'IMPLEMENTATION' (noprec):   reduce AnyVar --> AnyId
    action 'REQUIRES' (noprec):   reduce AnyVar --> AnyId
    action 'ENSURES' (noprec):   reduce AnyVar --> AnyId
    action 'LT' (noprec):   reduce AnyVar --> AnyId
    action 'GT' (noprec):   reduce AnyVar --> AnyId
    action 'EQ' (noprec):   reduce AnyVar --> AnyId
    action 'BANG' (noprec):   reduce AnyVar --> AnyId
    action 'COMMA' (noprec):   reduce AnyVar --> AnyId
    action 'LE' (noprec):   reduce AnyVar --> AnyId
    action 'GE' (noprec):   reduce AnyVar --> AnyId
    action 'EQEQ' (noprec):   reduce AnyVar --> AnyId
    action 'NE' (noprec):   reduce AnyVar --> AnyId
    action 'PLUS' (noprec):   reduce AnyVar --> AnyId
    action 'MINUS' (noprec):   reduce AnyVar --> AnyId
    action 'STAR' (noprec):   reduce AnyVar --> AnyId
    action 'SLASH' (noprec):   reduce AnyVar --> AnyId
    action 'PERCENT' (noprec):   reduce AnyVar --> AnyId
    action 'AMPAMP' (noprec):   reduce AnyVar --> AnyId
    action 'BARBAR' (noprec):   reduce AnyVar --> AnyId
    action 'COLONEQ' (noprec):   reduce AnyVar --> AnyId
    action 'INT' (noprec):   reduce AnyVar --> AnyId
    action 'BOOL' (noprec):   reduce AnyVar --> AnyId
    action 'IF' (noprec):   reduce AnyVar --> AnyId
    action 'RETURN' (noprec):   reduce AnyVar --> AnyId
    action 'VAR' (noprec):   reduce AnyVar --> AnyId
    action 'LBRACE' (noprec):   reduce AnyVar --> AnyId
    action 'RBRACE' (noprec):   reduce AnyVar --> AnyId
    action 'SEMI' (noprec):   reduce AnyVar --> AnyId
    action 'COLON' (noprec):   reduce AnyVar --> AnyId
    action 'LPAREN' (noprec):   reduce AnyVar --> AnyId
    action 'RPAREN' (noprec):   reduce AnyVar --> AnyId
    action 'LBRACKET' (noprec):   reduce AnyVar --> AnyId
    action 'RBRACKET' (noprec):   reduce AnyVar --> AnyId
    action 'LITBOOL' (noprec):   reduce AnyVar --> AnyId
    action 'LITINT' (noprec):   reduce AnyVar --> AnyId
    action 'QLID' (noprec):   reduce AnyVar --> AnyId
    action 'QUID' (noprec):   reduce AnyVar --> AnyId
    action 'DLID' (noprec):   reduce AnyVar --> AnyId
    action 'DUID' (noprec):   reduce AnyVar --> AnyId
    action 'LID' (noprec):   reduce AnyVar --> AnyId
    action 'UID' (noprec):   reduce AnyVar --> AnyId
    action 'error' (noprec):   reduce AnyVar --> AnyId
    action '#' (noprec):   reduce AnyVar --> AnyId
    action '$$' (noprec):   reduce AnyVar --> AnyId

  immediate action:   reduce AnyVar --> AnyId
 gotos:

state 147:
  items:
    AnyVar -> Reg . 

  actions:
    action 'EOF' (noprec):   reduce AnyVar --> Reg
    action 'EAX' (noprec):   reduce AnyVar --> Reg
    action 'EBX' (noprec):   reduce AnyVar --> Reg
    action 'ECX' (noprec):   reduce AnyVar --> Reg
    action 'EDX' (noprec):   reduce AnyVar --> Reg
    action 'ESI' (noprec):   reduce AnyVar --> Reg
    action 'EDI' (noprec):   reduce AnyVar --> Reg
    action 'EBP' (noprec):   reduce AnyVar --> Reg
    action 'ESP' (noprec):   reduce AnyVar --> Reg
    action 'MODIFIES' (noprec):   reduce AnyVar --> Reg
    action 'INVARIANT' (noprec):   reduce AnyVar --> Reg
    action 'ASSERT' (noprec):   reduce AnyVar --> Reg
    action 'HAVOC' (noprec):   reduce AnyVar --> Reg
    action 'GOTO' (noprec):   reduce AnyVar --> Reg
    action 'CALL' (noprec):   reduce AnyVar --> Reg
    action 'CCALL' (noprec):   reduce AnyVar --> Reg
    action 'RET' (noprec):   reduce AnyVar --> Reg
    action 'IRET' (noprec):   reduce AnyVar --> Reg
    action 'GO' (noprec):   reduce AnyVar --> Reg
    action 'FORALL' (noprec):   reduce AnyVar --> Reg
    action 'EXISTS' (noprec):   reduce AnyVar --> Reg
    action 'OLD' (noprec):   reduce AnyVar --> Reg
    action 'COLONCOLON' (noprec):   reduce AnyVar --> Reg
    action 'EQEQGT' (noprec):   reduce AnyVar --> Reg
    action 'LTEQEQGT' (noprec):   reduce AnyVar --> Reg
    action 'TYPE' (noprec):   reduce AnyVar --> Reg
    action 'CONST' (noprec):   reduce AnyVar --> Reg
    action 'FUNCTION' (noprec):   reduce AnyVar --> Reg
    action 'RETURNS' (noprec):   reduce AnyVar --> Reg
    action 'AXIOM' (noprec):   reduce AnyVar --> Reg
    action 'PROCEDURE' (noprec):   reduce AnyVar --> Reg
    action 'IMPLEMENTATION' (noprec):   reduce AnyVar --> Reg
    action 'REQUIRES' (noprec):   reduce AnyVar --> Reg
    action 'ENSURES' (noprec):   reduce AnyVar --> Reg
    action 'LT' (noprec):   reduce AnyVar --> Reg
    action 'GT' (noprec):   reduce AnyVar --> Reg
    action 'EQ' (noprec):   reduce AnyVar --> Reg
    action 'BANG' (noprec):   reduce AnyVar --> Reg
    action 'COMMA' (noprec):   reduce AnyVar --> Reg
    action 'LE' (noprec):   reduce AnyVar --> Reg
    action 'GE' (noprec):   reduce AnyVar --> Reg
    action 'EQEQ' (noprec):   reduce AnyVar --> Reg
    action 'NE' (noprec):   reduce AnyVar --> Reg
    action 'PLUS' (noprec):   reduce AnyVar --> Reg
    action 'MINUS' (noprec):   reduce AnyVar --> Reg
    action 'STAR' (noprec):   reduce AnyVar --> Reg
    action 'SLASH' (noprec):   reduce AnyVar --> Reg
    action 'PERCENT' (noprec):   reduce AnyVar --> Reg
    action 'AMPAMP' (noprec):   reduce AnyVar --> Reg
    action 'BARBAR' (noprec):   reduce AnyVar --> Reg
    action 'COLONEQ' (noprec):   reduce AnyVar --> Reg
    action 'INT' (noprec):   reduce AnyVar --> Reg
    action 'BOOL' (noprec):   reduce AnyVar --> Reg
    action 'IF' (noprec):   reduce AnyVar --> Reg
    action 'RETURN' (noprec):   reduce AnyVar --> Reg
    action 'VAR' (noprec):   reduce AnyVar --> Reg
    action 'LBRACE' (noprec):   reduce AnyVar --> Reg
    action 'RBRACE' (noprec):   reduce AnyVar --> Reg
    action 'SEMI' (noprec):   reduce AnyVar --> Reg
    action 'COLON' (noprec):   reduce AnyVar --> Reg
    action 'LPAREN' (noprec):   reduce AnyVar --> Reg
    action 'RPAREN' (noprec):   reduce AnyVar --> Reg
    action 'LBRACKET' (noprec):   reduce AnyVar --> Reg
    action 'RBRACKET' (noprec):   reduce AnyVar --> Reg
    action 'LITBOOL' (noprec):   reduce AnyVar --> Reg
    action 'LITINT' (noprec):   reduce AnyVar --> Reg
    action 'QLID' (noprec):   reduce AnyVar --> Reg
    action 'QUID' (noprec):   reduce AnyVar --> Reg
    action 'DLID' (noprec):   reduce AnyVar --> Reg
    action 'DUID' (noprec):   reduce AnyVar --> Reg
    action 'LID' (noprec):   reduce AnyVar --> Reg
    action 'UID' (noprec):   reduce AnyVar --> Reg
    action 'error' (noprec):   reduce AnyVar --> Reg
    action '#' (noprec):   reduce AnyVar --> Reg
    action '$$' (noprec):   reduce AnyVar --> Reg

  immediate action:   reduce AnyVar --> Reg
 gotos:

state 148:
  items:
    AnyVars -> AnyVar . 
    AnyVars -> AnyVar . 'COMMA' AnyVars

  actions:
    action 'EOF' (noprec):   reduce AnyVars --> AnyVar
    action 'EAX' (noprec):   reduce AnyVars --> AnyVar
    action 'EBX' (noprec):   reduce AnyVars --> AnyVar
    action 'ECX' (noprec):   reduce AnyVars --> AnyVar
    action 'EDX' (noprec):   reduce AnyVars --> AnyVar
    action 'ESI' (noprec):   reduce AnyVars --> AnyVar
    action 'EDI' (noprec):   reduce AnyVars --> AnyVar
    action 'EBP' (noprec):   reduce AnyVars --> AnyVar
    action 'ESP' (noprec):   reduce AnyVars --> AnyVar
    action 'MODIFIES' (noprec):   reduce AnyVars --> AnyVar
    action 'INVARIANT' (noprec):   reduce AnyVars --> AnyVar
    action 'ASSERT' (noprec):   reduce AnyVars --> AnyVar
    action 'HAVOC' (noprec):   reduce AnyVars --> AnyVar
    action 'GOTO' (noprec):   reduce AnyVars --> AnyVar
    action 'CALL' (noprec):   reduce AnyVars --> AnyVar
    action 'CCALL' (noprec):   reduce AnyVars --> AnyVar
    action 'RET' (noprec):   reduce AnyVars --> AnyVar
    action 'IRET' (noprec):   reduce AnyVars --> AnyVar
    action 'GO' (noprec):   reduce AnyVars --> AnyVar
    action 'FORALL' (noprec):   reduce AnyVars --> AnyVar
    action 'EXISTS' (noprec):   reduce AnyVars --> AnyVar
    action 'OLD' (noprec):   reduce AnyVars --> AnyVar
    action 'COLONCOLON' (noprec):   reduce AnyVars --> AnyVar
    action 'EQEQGT' (noprec):   reduce AnyVars --> AnyVar
    action 'LTEQEQGT' (noprec):   reduce AnyVars --> AnyVar
    action 'TYPE' (noprec):   reduce AnyVars --> AnyVar
    action 'CONST' (noprec):   reduce AnyVars --> AnyVar
    action 'FUNCTION' (noprec):   reduce AnyVars --> AnyVar
    action 'RETURNS' (noprec):   reduce AnyVars --> AnyVar
    action 'AXIOM' (noprec):   reduce AnyVars --> AnyVar
    action 'PROCEDURE' (noprec):   reduce AnyVars --> AnyVar
    action 'IMPLEMENTATION' (noprec):   reduce AnyVars --> AnyVar
    action 'REQUIRES' (noprec):   reduce AnyVars --> AnyVar
    action 'ENSURES' (noprec):   reduce AnyVars --> AnyVar
    action 'LT' (noprec):   reduce AnyVars --> AnyVar
    action 'GT' (noprec):   reduce AnyVars --> AnyVar
    action 'EQ' (noprec):   reduce AnyVars --> AnyVar
    action 'BANG' (noprec):   reduce AnyVars --> AnyVar
    action 'COMMA' (noprec):   shift 149
    action 'LE' (noprec):   reduce AnyVars --> AnyVar
    action 'GE' (noprec):   reduce AnyVars --> AnyVar
    action 'EQEQ' (noprec):   reduce AnyVars --> AnyVar
    action 'NE' (noprec):   reduce AnyVars --> AnyVar
    action 'PLUS' (noprec):   reduce AnyVars --> AnyVar
    action 'MINUS' (noprec):   reduce AnyVars --> AnyVar
    action 'STAR' (noprec):   reduce AnyVars --> AnyVar
    action 'SLASH' (noprec):   reduce AnyVars --> AnyVar
    action 'PERCENT' (noprec):   reduce AnyVars --> AnyVar
    action 'AMPAMP' (noprec):   reduce AnyVars --> AnyVar
    action 'BARBAR' (noprec):   reduce AnyVars --> AnyVar
    action 'COLONEQ' (noprec):   reduce AnyVars --> AnyVar
    action 'INT' (noprec):   reduce AnyVars --> AnyVar
    action 'BOOL' (noprec):   reduce AnyVars --> AnyVar
    action 'IF' (noprec):   reduce AnyVars --> AnyVar
    action 'RETURN' (noprec):   reduce AnyVars --> AnyVar
    action 'VAR' (noprec):   reduce AnyVars --> AnyVar
    action 'LBRACE' (noprec):   reduce AnyVars --> AnyVar
    action 'RBRACE' (noprec):   reduce AnyVars --> AnyVar
    action 'SEMI' (noprec):   reduce AnyVars --> AnyVar
    action 'COLON' (noprec):   reduce AnyVars --> AnyVar
    action 'LPAREN' (noprec):   reduce AnyVars --> AnyVar
    action 'RPAREN' (noprec):   reduce AnyVars --> AnyVar
    action 'LBRACKET' (noprec):   reduce AnyVars --> AnyVar
    action 'RBRACKET' (noprec):   reduce AnyVars --> AnyVar
    action 'LITBOOL' (noprec):   reduce AnyVars --> AnyVar
    action 'LITINT' (noprec):   reduce AnyVars --> AnyVar
    action 'QLID' (noprec):   reduce AnyVars --> AnyVar
    action 'QUID' (noprec):   reduce AnyVars --> AnyVar
    action 'DLID' (noprec):   reduce AnyVars --> AnyVar
    action 'DUID' (noprec):   reduce AnyVars --> AnyVar
    action 'LID' (noprec):   reduce AnyVars --> AnyVar
    action 'UID' (noprec):   reduce AnyVars --> AnyVar
    action 'error' (noprec):   reduce AnyVars --> AnyVar
    action '#' (noprec):   reduce AnyVars --> AnyVar
    action '$$' (noprec):   reduce AnyVars --> AnyVar

  immediate action: <none>
 gotos:

state 149:
  items:
    AnyVars -> AnyVar 'COMMA' . AnyVars

  actions:
    action 'EOF' (noprec):   reduce AnyVars --> 
    action 'EAX' (noprec):   shift 14
    action 'EBX' (noprec):   shift 15
    action 'ECX' (noprec):   shift 16
    action 'EDX' (noprec):   shift 17
    action 'ESI' (noprec):   shift 18
    action 'EDI' (noprec):   shift 19
    action 'EBP' (noprec):   shift 20
    action 'ESP' (noprec):   shift 21
    action 'MODIFIES' (noprec):   reduce AnyVars --> 
    action 'INVARIANT' (noprec):   reduce AnyVars --> 
    action 'ASSERT' (noprec):   reduce AnyVars --> 
    action 'HAVOC' (noprec):   reduce AnyVars --> 
    action 'GOTO' (noprec):   reduce AnyVars --> 
    action 'CALL' (noprec):   reduce AnyVars --> 
    action 'CCALL' (noprec):   reduce AnyVars --> 
    action 'RET' (noprec):   reduce AnyVars --> 
    action 'IRET' (noprec):   reduce AnyVars --> 
    action 'GO' (noprec):   reduce AnyVars --> 
    action 'FORALL' (noprec):   reduce AnyVars --> 
    action 'EXISTS' (noprec):   reduce AnyVars --> 
    action 'OLD' (noprec):   reduce AnyVars --> 
    action 'COLONCOLON' (noprec):   reduce AnyVars --> 
    action 'EQEQGT' (noprec):   reduce AnyVars --> 
    action 'LTEQEQGT' (noprec):   reduce AnyVars --> 
    action 'TYPE' (noprec):   reduce AnyVars --> 
    action 'CONST' (noprec):   reduce AnyVars --> 
    action 'FUNCTION' (noprec):   reduce AnyVars --> 
    action 'RETURNS' (noprec):   reduce AnyVars --> 
    action 'AXIOM' (noprec):   reduce AnyVars --> 
    action 'PROCEDURE' (noprec):   reduce AnyVars --> 
    action 'IMPLEMENTATION' (noprec):   reduce AnyVars --> 
    action 'REQUIRES' (noprec):   reduce AnyVars --> 
    action 'ENSURES' (noprec):   reduce AnyVars --> 
    action 'LT' (noprec):   reduce AnyVars --> 
    action 'GT' (noprec):   reduce AnyVars --> 
    action 'EQ' (noprec):   reduce AnyVars --> 
    action 'BANG' (noprec):   reduce AnyVars --> 
    action 'COMMA' (noprec):   reduce AnyVars --> 
    action 'LE' (noprec):   reduce AnyVars --> 
    action 'GE' (noprec):   reduce AnyVars --> 
    action 'EQEQ' (noprec):   reduce AnyVars --> 
    action 'NE' (noprec):   reduce AnyVars --> 
    action 'PLUS' (noprec):   reduce AnyVars --> 
    action 'MINUS' (noprec):   reduce AnyVars --> 
    action 'STAR' (noprec):   reduce AnyVars --> 
    action 'SLASH' (noprec):   reduce AnyVars --> 
    action 'PERCENT' (noprec):   reduce AnyVars --> 
    action 'AMPAMP' (noprec):   reduce AnyVars --> 
    action 'BARBAR' (noprec):   reduce AnyVars --> 
    action 'COLONEQ' (noprec):   reduce AnyVars --> 
    action 'INT' (noprec):   reduce AnyVars --> 
    action 'BOOL' (noprec):   reduce AnyVars --> 
    action 'IF' (noprec):   reduce AnyVars --> 
    action 'RETURN' (noprec):   reduce AnyVars --> 
    action 'VAR' (noprec):   reduce AnyVars --> 
    action 'LBRACE' (noprec):   reduce AnyVars --> 
    action 'RBRACE' (noprec):   reduce AnyVars --> 
    action 'SEMI' (noprec):   reduce AnyVars --> 
    action 'COLON' (noprec):   reduce AnyVars --> 
    action 'LPAREN' (noprec):   reduce AnyVars --> 
    action 'RPAREN' (noprec):   reduce AnyVars --> 
    action 'LBRACKET' (noprec):   reduce AnyVars --> 
    action 'RBRACKET' (noprec):   reduce AnyVars --> 
    action 'LITBOOL' (noprec):   reduce AnyVars --> 
    action 'LITINT' (noprec):   reduce AnyVars --> 
    action 'QLID' (noprec):   shift 145
    action 'QUID' (noprec):   shift 144
    action 'DLID' (noprec):   shift 143
    action 'DUID' (noprec):   shift 142
    action 'LID' (noprec):   shift 4
    action 'UID' (noprec):   shift 5
    action 'error' (noprec):   reduce AnyVars --> 
    action '#' (noprec):   reduce AnyVars --> 
    action '$$' (noprec):   reduce AnyVars --> 

  immediate action: <none>
 gotos:
    goto ID: 141
    goto Reg: 147
    goto AnyId: 146
    goto AnyVar: 148
    goto AnyVars: 150

state 150:
  items:
    AnyVars -> AnyVar 'COMMA' AnyVars . 

  actions:
    action 'EOF' (noprec):   reduce AnyVars --> AnyVar 'COMMA' AnyVars
    action 'EAX' (noprec):   reduce AnyVars --> AnyVar 'COMMA' AnyVars
    action 'EBX' (noprec):   reduce AnyVars --> AnyVar 'COMMA' AnyVars
    action 'ECX' (noprec):   reduce AnyVars --> AnyVar 'COMMA' AnyVars
    action 'EDX' (noprec):   reduce AnyVars --> AnyVar 'COMMA' AnyVars
    action 'ESI' (noprec):   reduce AnyVars --> AnyVar 'COMMA' AnyVars
    action 'EDI' (noprec):   reduce AnyVars --> AnyVar 'COMMA' AnyVars
    action 'EBP' (noprec):   reduce AnyVars --> AnyVar 'COMMA' AnyVars
    action 'ESP' (noprec):   reduce AnyVars --> AnyVar 'COMMA' AnyVars
    action 'MODIFIES' (noprec):   reduce AnyVars --> AnyVar 'COMMA' AnyVars
    action 'INVARIANT' (noprec):   reduce AnyVars --> AnyVar 'COMMA' AnyVars
    action 'ASSERT' (noprec):   reduce AnyVars --> AnyVar 'COMMA' AnyVars
    action 'HAVOC' (noprec):   reduce AnyVars --> AnyVar 'COMMA' AnyVars
    action 'GOTO' (noprec):   reduce AnyVars --> AnyVar 'COMMA' AnyVars
    action 'CALL' (noprec):   reduce AnyVars --> AnyVar 'COMMA' AnyVars
    action 'CCALL' (noprec):   reduce AnyVars --> AnyVar 'COMMA' AnyVars
    action 'RET' (noprec):   reduce AnyVars --> AnyVar 'COMMA' AnyVars
    action 'IRET' (noprec):   reduce AnyVars --> AnyVar 'COMMA' AnyVars
    action 'GO' (noprec):   reduce AnyVars --> AnyVar 'COMMA' AnyVars
    action 'FORALL' (noprec):   reduce AnyVars --> AnyVar 'COMMA' AnyVars
    action 'EXISTS' (noprec):   reduce AnyVars --> AnyVar 'COMMA' AnyVars
    action 'OLD' (noprec):   reduce AnyVars --> AnyVar 'COMMA' AnyVars
    action 'COLONCOLON' (noprec):   reduce AnyVars --> AnyVar 'COMMA' AnyVars
    action 'EQEQGT' (noprec):   reduce AnyVars --> AnyVar 'COMMA' AnyVars
    action 'LTEQEQGT' (noprec):   reduce AnyVars --> AnyVar 'COMMA' AnyVars
    action 'TYPE' (noprec):   reduce AnyVars --> AnyVar 'COMMA' AnyVars
    action 'CONST' (noprec):   reduce AnyVars --> AnyVar 'COMMA' AnyVars
    action 'FUNCTION' (noprec):   reduce AnyVars --> AnyVar 'COMMA' AnyVars
    action 'RETURNS' (noprec):   reduce AnyVars --> AnyVar 'COMMA' AnyVars
    action 'AXIOM' (noprec):   reduce AnyVars --> AnyVar 'COMMA' AnyVars
    action 'PROCEDURE' (noprec):   reduce AnyVars --> AnyVar 'COMMA' AnyVars
    action 'IMPLEMENTATION' (noprec):   reduce AnyVars --> AnyVar 'COMMA' AnyVars
    action 'REQUIRES' (noprec):   reduce AnyVars --> AnyVar 'COMMA' AnyVars
    action 'ENSURES' (noprec):   reduce AnyVars --> AnyVar 'COMMA' AnyVars
    action 'LT' (noprec):   reduce AnyVars --> AnyVar 'COMMA' AnyVars
    action 'GT' (noprec):   reduce AnyVars --> AnyVar 'COMMA' AnyVars
    action 'EQ' (noprec):   reduce AnyVars --> AnyVar 'COMMA' AnyVars
    action 'BANG' (noprec):   reduce AnyVars --> AnyVar 'COMMA' AnyVars
    action 'COMMA' (noprec):   reduce AnyVars --> AnyVar 'COMMA' AnyVars
    action 'LE' (noprec):   reduce AnyVars --> AnyVar 'COMMA' AnyVars
    action 'GE' (noprec):   reduce AnyVars --> AnyVar 'COMMA' AnyVars
    action 'EQEQ' (noprec):   reduce AnyVars --> AnyVar 'COMMA' AnyVars
    action 'NE' (noprec):   reduce AnyVars --> AnyVar 'COMMA' AnyVars
    action 'PLUS' (noprec):   reduce AnyVars --> AnyVar 'COMMA' AnyVars
    action 'MINUS' (noprec):   reduce AnyVars --> AnyVar 'COMMA' AnyVars
    action 'STAR' (noprec):   reduce AnyVars --> AnyVar 'COMMA' AnyVars
    action 'SLASH' (noprec):   reduce AnyVars --> AnyVar 'COMMA' AnyVars
    action 'PERCENT' (noprec):   reduce AnyVars --> AnyVar 'COMMA' AnyVars
    action 'AMPAMP' (noprec):   reduce AnyVars --> AnyVar 'COMMA' AnyVars
    action 'BARBAR' (noprec):   reduce AnyVars --> AnyVar 'COMMA' AnyVars
    action 'COLONEQ' (noprec):   reduce AnyVars --> AnyVar 'COMMA' AnyVars
    action 'INT' (noprec):   reduce AnyVars --> AnyVar 'COMMA' AnyVars
    action 'BOOL' (noprec):   reduce AnyVars --> AnyVar 'COMMA' AnyVars
    action 'IF' (noprec):   reduce AnyVars --> AnyVar 'COMMA' AnyVars
    action 'RETURN' (noprec):   reduce AnyVars --> AnyVar 'COMMA' AnyVars
    action 'VAR' (noprec):   reduce AnyVars --> AnyVar 'COMMA' AnyVars
    action 'LBRACE' (noprec):   reduce AnyVars --> AnyVar 'COMMA' AnyVars
    action 'RBRACE' (noprec):   reduce AnyVars --> AnyVar 'COMMA' AnyVars
    action 'SEMI' (noprec):   reduce AnyVars --> AnyVar 'COMMA' AnyVars
    action 'COLON' (noprec):   reduce AnyVars --> AnyVar 'COMMA' AnyVars
    action 'LPAREN' (noprec):   reduce AnyVars --> AnyVar 'COMMA' AnyVars
    action 'RPAREN' (noprec):   reduce AnyVars --> AnyVar 'COMMA' AnyVars
    action 'LBRACKET' (noprec):   reduce AnyVars --> AnyVar 'COMMA' AnyVars
    action 'RBRACKET' (noprec):   reduce AnyVars --> AnyVar 'COMMA' AnyVars
    action 'LITBOOL' (noprec):   reduce AnyVars --> AnyVar 'COMMA' AnyVars
    action 'LITINT' (noprec):   reduce AnyVars --> AnyVar 'COMMA' AnyVars
    action 'QLID' (noprec):   reduce AnyVars --> AnyVar 'COMMA' AnyVars
    action 'QUID' (noprec):   reduce AnyVars --> AnyVar 'COMMA' AnyVars
    action 'DLID' (noprec):   reduce AnyVars --> AnyVar 'COMMA' AnyVars
    action 'DUID' (noprec):   reduce AnyVars --> AnyVar 'COMMA' AnyVars
    action 'LID' (noprec):   reduce AnyVars --> AnyVar 'COMMA' AnyVars
    action 'UID' (noprec):   reduce AnyVars --> AnyVar 'COMMA' AnyVars
    action 'error' (noprec):   reduce AnyVars --> AnyVar 'COMMA' AnyVars
    action '#' (noprec):   reduce AnyVars --> AnyVar 'COMMA' AnyVars
    action '$$' (noprec):   reduce AnyVars --> AnyVar 'COMMA' AnyVars

  immediate action:   reduce AnyVars --> AnyVar 'COMMA' AnyVars
 gotos:

state 151:
  items:
    DLidsEqOpt -> DLids . 'COLONEQ'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   shift 152
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 152:
  items:
    DLidsEqOpt -> DLids 'COLONEQ' . 

  actions:
    action 'EOF' (noprec):   reduce DLidsEqOpt --> DLids 'COLONEQ'
    action 'EAX' (noprec):   reduce DLidsEqOpt --> DLids 'COLONEQ'
    action 'EBX' (noprec):   reduce DLidsEqOpt --> DLids 'COLONEQ'
    action 'ECX' (noprec):   reduce DLidsEqOpt --> DLids 'COLONEQ'
    action 'EDX' (noprec):   reduce DLidsEqOpt --> DLids 'COLONEQ'
    action 'ESI' (noprec):   reduce DLidsEqOpt --> DLids 'COLONEQ'
    action 'EDI' (noprec):   reduce DLidsEqOpt --> DLids 'COLONEQ'
    action 'EBP' (noprec):   reduce DLidsEqOpt --> DLids 'COLONEQ'
    action 'ESP' (noprec):   reduce DLidsEqOpt --> DLids 'COLONEQ'
    action 'MODIFIES' (noprec):   reduce DLidsEqOpt --> DLids 'COLONEQ'
    action 'INVARIANT' (noprec):   reduce DLidsEqOpt --> DLids 'COLONEQ'
    action 'ASSERT' (noprec):   reduce DLidsEqOpt --> DLids 'COLONEQ'
    action 'HAVOC' (noprec):   reduce DLidsEqOpt --> DLids 'COLONEQ'
    action 'GOTO' (noprec):   reduce DLidsEqOpt --> DLids 'COLONEQ'
    action 'CALL' (noprec):   reduce DLidsEqOpt --> DLids 'COLONEQ'
    action 'CCALL' (noprec):   reduce DLidsEqOpt --> DLids 'COLONEQ'
    action 'RET' (noprec):   reduce DLidsEqOpt --> DLids 'COLONEQ'
    action 'IRET' (noprec):   reduce DLidsEqOpt --> DLids 'COLONEQ'
    action 'GO' (noprec):   reduce DLidsEqOpt --> DLids 'COLONEQ'
    action 'FORALL' (noprec):   reduce DLidsEqOpt --> DLids 'COLONEQ'
    action 'EXISTS' (noprec):   reduce DLidsEqOpt --> DLids 'COLONEQ'
    action 'OLD' (noprec):   reduce DLidsEqOpt --> DLids 'COLONEQ'
    action 'COLONCOLON' (noprec):   reduce DLidsEqOpt --> DLids 'COLONEQ'
    action 'EQEQGT' (noprec):   reduce DLidsEqOpt --> DLids 'COLONEQ'
    action 'LTEQEQGT' (noprec):   reduce DLidsEqOpt --> DLids 'COLONEQ'
    action 'TYPE' (noprec):   reduce DLidsEqOpt --> DLids 'COLONEQ'
    action 'CONST' (noprec):   reduce DLidsEqOpt --> DLids 'COLONEQ'
    action 'FUNCTION' (noprec):   reduce DLidsEqOpt --> DLids 'COLONEQ'
    action 'RETURNS' (noprec):   reduce DLidsEqOpt --> DLids 'COLONEQ'
    action 'AXIOM' (noprec):   reduce DLidsEqOpt --> DLids 'COLONEQ'
    action 'PROCEDURE' (noprec):   reduce DLidsEqOpt --> DLids 'COLONEQ'
    action 'IMPLEMENTATION' (noprec):   reduce DLidsEqOpt --> DLids 'COLONEQ'
    action 'REQUIRES' (noprec):   reduce DLidsEqOpt --> DLids 'COLONEQ'
    action 'ENSURES' (noprec):   reduce DLidsEqOpt --> DLids 'COLONEQ'
    action 'LT' (noprec):   reduce DLidsEqOpt --> DLids 'COLONEQ'
    action 'GT' (noprec):   reduce DLidsEqOpt --> DLids 'COLONEQ'
    action 'EQ' (noprec):   reduce DLidsEqOpt --> DLids 'COLONEQ'
    action 'BANG' (noprec):   reduce DLidsEqOpt --> DLids 'COLONEQ'
    action 'COMMA' (noprec):   reduce DLidsEqOpt --> DLids 'COLONEQ'
    action 'LE' (noprec):   reduce DLidsEqOpt --> DLids 'COLONEQ'
    action 'GE' (noprec):   reduce DLidsEqOpt --> DLids 'COLONEQ'
    action 'EQEQ' (noprec):   reduce DLidsEqOpt --> DLids 'COLONEQ'
    action 'NE' (noprec):   reduce DLidsEqOpt --> DLids 'COLONEQ'
    action 'PLUS' (noprec):   reduce DLidsEqOpt --> DLids 'COLONEQ'
    action 'MINUS' (noprec):   reduce DLidsEqOpt --> DLids 'COLONEQ'
    action 'STAR' (noprec):   reduce DLidsEqOpt --> DLids 'COLONEQ'
    action 'SLASH' (noprec):   reduce DLidsEqOpt --> DLids 'COLONEQ'
    action 'PERCENT' (noprec):   reduce DLidsEqOpt --> DLids 'COLONEQ'
    action 'AMPAMP' (noprec):   reduce DLidsEqOpt --> DLids 'COLONEQ'
    action 'BARBAR' (noprec):   reduce DLidsEqOpt --> DLids 'COLONEQ'
    action 'COLONEQ' (noprec):   reduce DLidsEqOpt --> DLids 'COLONEQ'
    action 'INT' (noprec):   reduce DLidsEqOpt --> DLids 'COLONEQ'
    action 'BOOL' (noprec):   reduce DLidsEqOpt --> DLids 'COLONEQ'
    action 'IF' (noprec):   reduce DLidsEqOpt --> DLids 'COLONEQ'
    action 'RETURN' (noprec):   reduce DLidsEqOpt --> DLids 'COLONEQ'
    action 'VAR' (noprec):   reduce DLidsEqOpt --> DLids 'COLONEQ'
    action 'LBRACE' (noprec):   reduce DLidsEqOpt --> DLids 'COLONEQ'
    action 'RBRACE' (noprec):   reduce DLidsEqOpt --> DLids 'COLONEQ'
    action 'SEMI' (noprec):   reduce DLidsEqOpt --> DLids 'COLONEQ'
    action 'COLON' (noprec):   reduce DLidsEqOpt --> DLids 'COLONEQ'
    action 'LPAREN' (noprec):   reduce DLidsEqOpt --> DLids 'COLONEQ'
    action 'RPAREN' (noprec):   reduce DLidsEqOpt --> DLids 'COLONEQ'
    action 'LBRACKET' (noprec):   reduce DLidsEqOpt --> DLids 'COLONEQ'
    action 'RBRACKET' (noprec):   reduce DLidsEqOpt --> DLids 'COLONEQ'
    action 'LITBOOL' (noprec):   reduce DLidsEqOpt --> DLids 'COLONEQ'
    action 'LITINT' (noprec):   reduce DLidsEqOpt --> DLids 'COLONEQ'
    action 'QLID' (noprec):   reduce DLidsEqOpt --> DLids 'COLONEQ'
    action 'QUID' (noprec):   reduce DLidsEqOpt --> DLids 'COLONEQ'
    action 'DLID' (noprec):   reduce DLidsEqOpt --> DLids 'COLONEQ'
    action 'DUID' (noprec):   reduce DLidsEqOpt --> DLids 'COLONEQ'
    action 'LID' (noprec):   reduce DLidsEqOpt --> DLids 'COLONEQ'
    action 'UID' (noprec):   reduce DLidsEqOpt --> DLids 'COLONEQ'
    action 'error' (noprec):   reduce DLidsEqOpt --> DLids 'COLONEQ'
    action '#' (noprec):   reduce DLidsEqOpt --> DLids 'COLONEQ'
    action '$$' (noprec):   reduce DLidsEqOpt --> DLids 'COLONEQ'

  immediate action:   reduce DLidsEqOpt --> DLids 'COLONEQ'
 gotos:

state 153:
  items:
    HavocEip -> 'HAVOC' . 'DUID' 'SEMI'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   shift 154
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 154:
  items:
    HavocEip -> 'HAVOC' 'DUID' . 'SEMI'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   shift 155
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 155:
  items:
    HavocEip -> 'HAVOC' 'DUID' 'SEMI' . 

  actions:
    action 'EOF' (noprec):   reduce HavocEip --> 'HAVOC' 'DUID' 'SEMI'
    action 'EAX' (noprec):   reduce HavocEip --> 'HAVOC' 'DUID' 'SEMI'
    action 'EBX' (noprec):   reduce HavocEip --> 'HAVOC' 'DUID' 'SEMI'
    action 'ECX' (noprec):   reduce HavocEip --> 'HAVOC' 'DUID' 'SEMI'
    action 'EDX' (noprec):   reduce HavocEip --> 'HAVOC' 'DUID' 'SEMI'
    action 'ESI' (noprec):   reduce HavocEip --> 'HAVOC' 'DUID' 'SEMI'
    action 'EDI' (noprec):   reduce HavocEip --> 'HAVOC' 'DUID' 'SEMI'
    action 'EBP' (noprec):   reduce HavocEip --> 'HAVOC' 'DUID' 'SEMI'
    action 'ESP' (noprec):   reduce HavocEip --> 'HAVOC' 'DUID' 'SEMI'
    action 'MODIFIES' (noprec):   reduce HavocEip --> 'HAVOC' 'DUID' 'SEMI'
    action 'INVARIANT' (noprec):   reduce HavocEip --> 'HAVOC' 'DUID' 'SEMI'
    action 'ASSERT' (noprec):   reduce HavocEip --> 'HAVOC' 'DUID' 'SEMI'
    action 'HAVOC' (noprec):   reduce HavocEip --> 'HAVOC' 'DUID' 'SEMI'
    action 'GOTO' (noprec):   reduce HavocEip --> 'HAVOC' 'DUID' 'SEMI'
    action 'CALL' (noprec):   reduce HavocEip --> 'HAVOC' 'DUID' 'SEMI'
    action 'CCALL' (noprec):   reduce HavocEip --> 'HAVOC' 'DUID' 'SEMI'
    action 'RET' (noprec):   reduce HavocEip --> 'HAVOC' 'DUID' 'SEMI'
    action 'IRET' (noprec):   reduce HavocEip --> 'HAVOC' 'DUID' 'SEMI'
    action 'GO' (noprec):   reduce HavocEip --> 'HAVOC' 'DUID' 'SEMI'
    action 'FORALL' (noprec):   reduce HavocEip --> 'HAVOC' 'DUID' 'SEMI'
    action 'EXISTS' (noprec):   reduce HavocEip --> 'HAVOC' 'DUID' 'SEMI'
    action 'OLD' (noprec):   reduce HavocEip --> 'HAVOC' 'DUID' 'SEMI'
    action 'COLONCOLON' (noprec):   reduce HavocEip --> 'HAVOC' 'DUID' 'SEMI'
    action 'EQEQGT' (noprec):   reduce HavocEip --> 'HAVOC' 'DUID' 'SEMI'
    action 'LTEQEQGT' (noprec):   reduce HavocEip --> 'HAVOC' 'DUID' 'SEMI'
    action 'TYPE' (noprec):   reduce HavocEip --> 'HAVOC' 'DUID' 'SEMI'
    action 'CONST' (noprec):   reduce HavocEip --> 'HAVOC' 'DUID' 'SEMI'
    action 'FUNCTION' (noprec):   reduce HavocEip --> 'HAVOC' 'DUID' 'SEMI'
    action 'RETURNS' (noprec):   reduce HavocEip --> 'HAVOC' 'DUID' 'SEMI'
    action 'AXIOM' (noprec):   reduce HavocEip --> 'HAVOC' 'DUID' 'SEMI'
    action 'PROCEDURE' (noprec):   reduce HavocEip --> 'HAVOC' 'DUID' 'SEMI'
    action 'IMPLEMENTATION' (noprec):   reduce HavocEip --> 'HAVOC' 'DUID' 'SEMI'
    action 'REQUIRES' (noprec):   reduce HavocEip --> 'HAVOC' 'DUID' 'SEMI'
    action 'ENSURES' (noprec):   reduce HavocEip --> 'HAVOC' 'DUID' 'SEMI'
    action 'LT' (noprec):   reduce HavocEip --> 'HAVOC' 'DUID' 'SEMI'
    action 'GT' (noprec):   reduce HavocEip --> 'HAVOC' 'DUID' 'SEMI'
    action 'EQ' (noprec):   reduce HavocEip --> 'HAVOC' 'DUID' 'SEMI'
    action 'BANG' (noprec):   reduce HavocEip --> 'HAVOC' 'DUID' 'SEMI'
    action 'COMMA' (noprec):   reduce HavocEip --> 'HAVOC' 'DUID' 'SEMI'
    action 'LE' (noprec):   reduce HavocEip --> 'HAVOC' 'DUID' 'SEMI'
    action 'GE' (noprec):   reduce HavocEip --> 'HAVOC' 'DUID' 'SEMI'
    action 'EQEQ' (noprec):   reduce HavocEip --> 'HAVOC' 'DUID' 'SEMI'
    action 'NE' (noprec):   reduce HavocEip --> 'HAVOC' 'DUID' 'SEMI'
    action 'PLUS' (noprec):   reduce HavocEip --> 'HAVOC' 'DUID' 'SEMI'
    action 'MINUS' (noprec):   reduce HavocEip --> 'HAVOC' 'DUID' 'SEMI'
    action 'STAR' (noprec):   reduce HavocEip --> 'HAVOC' 'DUID' 'SEMI'
    action 'SLASH' (noprec):   reduce HavocEip --> 'HAVOC' 'DUID' 'SEMI'
    action 'PERCENT' (noprec):   reduce HavocEip --> 'HAVOC' 'DUID' 'SEMI'
    action 'AMPAMP' (noprec):   reduce HavocEip --> 'HAVOC' 'DUID' 'SEMI'
    action 'BARBAR' (noprec):   reduce HavocEip --> 'HAVOC' 'DUID' 'SEMI'
    action 'COLONEQ' (noprec):   reduce HavocEip --> 'HAVOC' 'DUID' 'SEMI'
    action 'INT' (noprec):   reduce HavocEip --> 'HAVOC' 'DUID' 'SEMI'
    action 'BOOL' (noprec):   reduce HavocEip --> 'HAVOC' 'DUID' 'SEMI'
    action 'IF' (noprec):   reduce HavocEip --> 'HAVOC' 'DUID' 'SEMI'
    action 'RETURN' (noprec):   reduce HavocEip --> 'HAVOC' 'DUID' 'SEMI'
    action 'VAR' (noprec):   reduce HavocEip --> 'HAVOC' 'DUID' 'SEMI'
    action 'LBRACE' (noprec):   reduce HavocEip --> 'HAVOC' 'DUID' 'SEMI'
    action 'RBRACE' (noprec):   reduce HavocEip --> 'HAVOC' 'DUID' 'SEMI'
    action 'SEMI' (noprec):   reduce HavocEip --> 'HAVOC' 'DUID' 'SEMI'
    action 'COLON' (noprec):   reduce HavocEip --> 'HAVOC' 'DUID' 'SEMI'
    action 'LPAREN' (noprec):   reduce HavocEip --> 'HAVOC' 'DUID' 'SEMI'
    action 'RPAREN' (noprec):   reduce HavocEip --> 'HAVOC' 'DUID' 'SEMI'
    action 'LBRACKET' (noprec):   reduce HavocEip --> 'HAVOC' 'DUID' 'SEMI'
    action 'RBRACKET' (noprec):   reduce HavocEip --> 'HAVOC' 'DUID' 'SEMI'
    action 'LITBOOL' (noprec):   reduce HavocEip --> 'HAVOC' 'DUID' 'SEMI'
    action 'LITINT' (noprec):   reduce HavocEip --> 'HAVOC' 'DUID' 'SEMI'
    action 'QLID' (noprec):   reduce HavocEip --> 'HAVOC' 'DUID' 'SEMI'
    action 'QUID' (noprec):   reduce HavocEip --> 'HAVOC' 'DUID' 'SEMI'
    action 'DLID' (noprec):   reduce HavocEip --> 'HAVOC' 'DUID' 'SEMI'
    action 'DUID' (noprec):   reduce HavocEip --> 'HAVOC' 'DUID' 'SEMI'
    action 'LID' (noprec):   reduce HavocEip --> 'HAVOC' 'DUID' 'SEMI'
    action 'UID' (noprec):   reduce HavocEip --> 'HAVOC' 'DUID' 'SEMI'
    action 'error' (noprec):   reduce HavocEip --> 'HAVOC' 'DUID' 'SEMI'
    action '#' (noprec):   reduce HavocEip --> 'HAVOC' 'DUID' 'SEMI'
    action '$$' (noprec):   reduce HavocEip --> 'HAVOC' 'DUID' 'SEMI'

  immediate action:   reduce HavocEip --> 'HAVOC' 'DUID' 'SEMI'
 gotos:

state 156:
  items:
    HavocEip -> 'CALL' . 'GO' 'LPAREN' 'RPAREN' 'SEMI'
    Stmt -> 'CALL' . 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    Stmt -> 'CALL' . DLids 'COLONEQ' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    Stmt -> 'CALL' . 'CCALL' 'LPAREN' 'RPAREN' 'SEMI' 'CALL' DLidsEqOpt 'UID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    Stmt -> 'CALL' . 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    Stmt -> 'CALL' . DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    Stmt -> 'CALL' . DestOperand 'COMMA' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'

  actions:
    action 'EOF' (noprec):   reduce DLids --> 
    action 'EAX' (noprec):   shift 14
    action 'EBX' (noprec):   shift 15
    action 'ECX' (noprec):   shift 16
    action 'EDX' (noprec):   shift 17
    action 'ESI' (noprec):   shift 18
    action 'EDI' (noprec):   shift 19
    action 'EBP' (noprec):   shift 20
    action 'ESP' (noprec):   shift 21
    action 'MODIFIES' (noprec):   reduce DLids --> 
    action 'INVARIANT' (noprec):   reduce DLids --> 
    action 'ASSERT' (noprec):   reduce DLids --> 
    action 'HAVOC' (noprec):   reduce DLids --> 
    action 'GOTO' (noprec):   reduce DLids --> 
    action 'CALL' (noprec):   reduce DLids --> 
    action 'CCALL' (noprec):   shift 207
    action 'RET' (noprec):   reduce DLids --> 
    action 'IRET' (noprec):   reduce DLids --> 
    action 'GO' (noprec):   shift 158
    action 'FORALL' (noprec):   reduce DLids --> 
    action 'EXISTS' (noprec):   reduce DLids --> 
    action 'OLD' (noprec):   reduce DLids --> 
    action 'COLONCOLON' (noprec):   reduce DLids --> 
    action 'EQEQGT' (noprec):   reduce DLids --> 
    action 'LTEQEQGT' (noprec):   reduce DLids --> 
    action 'TYPE' (noprec):   reduce DLids --> 
    action 'CONST' (noprec):   reduce DLids --> 
    action 'FUNCTION' (noprec):   reduce DLids --> 
    action 'RETURNS' (noprec):   reduce DLids --> 
    action 'AXIOM' (noprec):   reduce DLids --> 
    action 'PROCEDURE' (noprec):   reduce DLids --> 
    action 'IMPLEMENTATION' (noprec):   reduce DLids --> 
    action 'REQUIRES' (noprec):   reduce DLids --> 
    action 'ENSURES' (noprec):   reduce DLids --> 
    action 'LT' (noprec):   reduce DLids --> 
    action 'GT' (noprec):   reduce DLids --> 
    action 'EQ' (noprec):   reduce DLids --> 
    action 'BANG' (noprec):   reduce DLids --> 
    action 'COMMA' (noprec):   reduce DLids --> 
    action 'LE' (noprec):   reduce DLids --> 
    action 'GE' (noprec):   reduce DLids --> 
    action 'EQEQ' (noprec):   reduce DLids --> 
    action 'NE' (noprec):   reduce DLids --> 
    action 'PLUS' (noprec):   reduce DLids --> 
    action 'MINUS' (noprec):   reduce DLids --> 
    action 'STAR' (noprec):   reduce DLids --> 
    action 'SLASH' (noprec):   reduce DLids --> 
    action 'PERCENT' (noprec):   reduce DLids --> 
    action 'AMPAMP' (noprec):   reduce DLids --> 
    action 'BARBAR' (noprec):   reduce DLids --> 
    action 'COLONEQ' (noprec):   reduce DLids --> 
    action 'INT' (noprec):   reduce DLids --> 
    action 'BOOL' (noprec):   reduce DLids --> 
    action 'IF' (noprec):   reduce DLids --> 
    action 'RETURN' (noprec):   reduce DLids --> 
    action 'VAR' (noprec):   reduce DLids --> 
    action 'LBRACE' (noprec):   reduce DLids --> 
    action 'RBRACE' (noprec):   reduce DLids --> 
    action 'SEMI' (noprec):   reduce DLids --> 
    action 'COLON' (noprec):   reduce DLids --> 
    action 'LPAREN' (noprec):   reduce DLids --> 
    action 'RPAREN' (noprec):   reduce DLids --> 
    action 'LBRACKET' (noprec):   reduce DLids --> 
    action 'RBRACKET' (noprec):   reduce DLids --> 
    action 'LITBOOL' (noprec):   reduce DLids --> 
    action 'LITINT' (noprec):   reduce DLids --> 
    action 'QLID' (noprec):   reduce DLids --> 
    action 'QUID' (noprec):   reduce DLids --> 
    action 'DLID' (noprec):   shift 135
    action 'DUID' (noprec):   reduce DLids --> 
    action 'LID' (noprec):   shift 29
    action 'UID' (noprec):   shift 27
    action 'error' (noprec):   reduce DLids --> 
    action '#' (noprec):   reduce DLids --> 
    action '$$' (noprec):   reduce DLids --> 

  immediate action: <none>
 gotos:
    goto Reg: 24
    goto Operand: 30
    goto DestOperand: 222
    goto DLids: 200

state 157:
  items:
    HavocEip -> 'CALL' . 'GO' 'LPAREN' 'RPAREN' 'SEMI'
    Stmt -> 'CALL' . 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    Stmt -> 'CALL' . DLids 'COLONEQ' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    Stmt -> 'CALL' . 'CCALL' 'LPAREN' 'RPAREN' 'SEMI' 'CALL' DLidsEqOpt 'UID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    Stmt -> 'CALL' . 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    Stmt -> 'CALL' . DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    Stmt -> 'CALL' . DestOperand 'COMMA' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    Return -> 'CALL' . 'RET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    Return -> 'CALL' . 'IRET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'

  actions:
    action 'EOF' (noprec):   reduce DLids --> 
    action 'EAX' (noprec):   shift 14
    action 'EBX' (noprec):   shift 15
    action 'ECX' (noprec):   shift 16
    action 'EDX' (noprec):   shift 17
    action 'ESI' (noprec):   shift 18
    action 'EDI' (noprec):   shift 19
    action 'EBP' (noprec):   shift 20
    action 'ESP' (noprec):   shift 21
    action 'MODIFIES' (noprec):   reduce DLids --> 
    action 'INVARIANT' (noprec):   reduce DLids --> 
    action 'ASSERT' (noprec):   reduce DLids --> 
    action 'HAVOC' (noprec):   reduce DLids --> 
    action 'GOTO' (noprec):   reduce DLids --> 
    action 'CALL' (noprec):   reduce DLids --> 
    action 'CCALL' (noprec):   shift 207
    action 'RET' (noprec):   shift 237
    action 'IRET' (noprec):   shift 247
    action 'GO' (noprec):   shift 158
    action 'FORALL' (noprec):   reduce DLids --> 
    action 'EXISTS' (noprec):   reduce DLids --> 
    action 'OLD' (noprec):   reduce DLids --> 
    action 'COLONCOLON' (noprec):   reduce DLids --> 
    action 'EQEQGT' (noprec):   reduce DLids --> 
    action 'LTEQEQGT' (noprec):   reduce DLids --> 
    action 'TYPE' (noprec):   reduce DLids --> 
    action 'CONST' (noprec):   reduce DLids --> 
    action 'FUNCTION' (noprec):   reduce DLids --> 
    action 'RETURNS' (noprec):   reduce DLids --> 
    action 'AXIOM' (noprec):   reduce DLids --> 
    action 'PROCEDURE' (noprec):   reduce DLids --> 
    action 'IMPLEMENTATION' (noprec):   reduce DLids --> 
    action 'REQUIRES' (noprec):   reduce DLids --> 
    action 'ENSURES' (noprec):   reduce DLids --> 
    action 'LT' (noprec):   reduce DLids --> 
    action 'GT' (noprec):   reduce DLids --> 
    action 'EQ' (noprec):   reduce DLids --> 
    action 'BANG' (noprec):   reduce DLids --> 
    action 'COMMA' (noprec):   reduce DLids --> 
    action 'LE' (noprec):   reduce DLids --> 
    action 'GE' (noprec):   reduce DLids --> 
    action 'EQEQ' (noprec):   reduce DLids --> 
    action 'NE' (noprec):   reduce DLids --> 
    action 'PLUS' (noprec):   reduce DLids --> 
    action 'MINUS' (noprec):   reduce DLids --> 
    action 'STAR' (noprec):   reduce DLids --> 
    action 'SLASH' (noprec):   reduce DLids --> 
    action 'PERCENT' (noprec):   reduce DLids --> 
    action 'AMPAMP' (noprec):   reduce DLids --> 
    action 'BARBAR' (noprec):   reduce DLids --> 
    action 'COLONEQ' (noprec):   reduce DLids --> 
    action 'INT' (noprec):   reduce DLids --> 
    action 'BOOL' (noprec):   reduce DLids --> 
    action 'IF' (noprec):   reduce DLids --> 
    action 'RETURN' (noprec):   reduce DLids --> 
    action 'VAR' (noprec):   reduce DLids --> 
    action 'LBRACE' (noprec):   reduce DLids --> 
    action 'RBRACE' (noprec):   reduce DLids --> 
    action 'SEMI' (noprec):   reduce DLids --> 
    action 'COLON' (noprec):   reduce DLids --> 
    action 'LPAREN' (noprec):   reduce DLids --> 
    action 'RPAREN' (noprec):   reduce DLids --> 
    action 'LBRACKET' (noprec):   reduce DLids --> 
    action 'RBRACKET' (noprec):   reduce DLids --> 
    action 'LITBOOL' (noprec):   reduce DLids --> 
    action 'LITINT' (noprec):   reduce DLids --> 
    action 'QLID' (noprec):   reduce DLids --> 
    action 'QUID' (noprec):   reduce DLids --> 
    action 'DLID' (noprec):   shift 135
    action 'DUID' (noprec):   reduce DLids --> 
    action 'LID' (noprec):   shift 29
    action 'UID' (noprec):   shift 27
    action 'error' (noprec):   reduce DLids --> 
    action '#' (noprec):   reduce DLids --> 
    action '$$' (noprec):   reduce DLids --> 

  immediate action: <none>
 gotos:
    goto Reg: 24
    goto Operand: 30
    goto DestOperand: 222
    goto DLids: 200

state 158:
  items:
    HavocEip -> 'CALL' 'GO' . 'LPAREN' 'RPAREN' 'SEMI'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (explicit left 10000):   shift 159
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 159:
  items:
    HavocEip -> 'CALL' 'GO' 'LPAREN' . 'RPAREN' 'SEMI'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (explicit left 10000):   shift 160
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 160:
  items:
    HavocEip -> 'CALL' 'GO' 'LPAREN' 'RPAREN' . 'SEMI'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   shift 161
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 161:
  items:
    HavocEip -> 'CALL' 'GO' 'LPAREN' 'RPAREN' 'SEMI' . 

  actions:
    action 'EOF' (noprec):   reduce HavocEip --> 'CALL' 'GO' 'LPAREN' 'RPAREN' 'SEMI'
    action 'EAX' (noprec):   reduce HavocEip --> 'CALL' 'GO' 'LPAREN' 'RPAREN' 'SEMI'
    action 'EBX' (noprec):   reduce HavocEip --> 'CALL' 'GO' 'LPAREN' 'RPAREN' 'SEMI'
    action 'ECX' (noprec):   reduce HavocEip --> 'CALL' 'GO' 'LPAREN' 'RPAREN' 'SEMI'
    action 'EDX' (noprec):   reduce HavocEip --> 'CALL' 'GO' 'LPAREN' 'RPAREN' 'SEMI'
    action 'ESI' (noprec):   reduce HavocEip --> 'CALL' 'GO' 'LPAREN' 'RPAREN' 'SEMI'
    action 'EDI' (noprec):   reduce HavocEip --> 'CALL' 'GO' 'LPAREN' 'RPAREN' 'SEMI'
    action 'EBP' (noprec):   reduce HavocEip --> 'CALL' 'GO' 'LPAREN' 'RPAREN' 'SEMI'
    action 'ESP' (noprec):   reduce HavocEip --> 'CALL' 'GO' 'LPAREN' 'RPAREN' 'SEMI'
    action 'MODIFIES' (noprec):   reduce HavocEip --> 'CALL' 'GO' 'LPAREN' 'RPAREN' 'SEMI'
    action 'INVARIANT' (noprec):   reduce HavocEip --> 'CALL' 'GO' 'LPAREN' 'RPAREN' 'SEMI'
    action 'ASSERT' (noprec):   reduce HavocEip --> 'CALL' 'GO' 'LPAREN' 'RPAREN' 'SEMI'
    action 'HAVOC' (noprec):   reduce HavocEip --> 'CALL' 'GO' 'LPAREN' 'RPAREN' 'SEMI'
    action 'GOTO' (noprec):   reduce HavocEip --> 'CALL' 'GO' 'LPAREN' 'RPAREN' 'SEMI'
    action 'CALL' (noprec):   reduce HavocEip --> 'CALL' 'GO' 'LPAREN' 'RPAREN' 'SEMI'
    action 'CCALL' (noprec):   reduce HavocEip --> 'CALL' 'GO' 'LPAREN' 'RPAREN' 'SEMI'
    action 'RET' (noprec):   reduce HavocEip --> 'CALL' 'GO' 'LPAREN' 'RPAREN' 'SEMI'
    action 'IRET' (noprec):   reduce HavocEip --> 'CALL' 'GO' 'LPAREN' 'RPAREN' 'SEMI'
    action 'GO' (noprec):   reduce HavocEip --> 'CALL' 'GO' 'LPAREN' 'RPAREN' 'SEMI'
    action 'FORALL' (noprec):   reduce HavocEip --> 'CALL' 'GO' 'LPAREN' 'RPAREN' 'SEMI'
    action 'EXISTS' (noprec):   reduce HavocEip --> 'CALL' 'GO' 'LPAREN' 'RPAREN' 'SEMI'
    action 'OLD' (noprec):   reduce HavocEip --> 'CALL' 'GO' 'LPAREN' 'RPAREN' 'SEMI'
    action 'COLONCOLON' (noprec):   reduce HavocEip --> 'CALL' 'GO' 'LPAREN' 'RPAREN' 'SEMI'
    action 'EQEQGT' (noprec):   reduce HavocEip --> 'CALL' 'GO' 'LPAREN' 'RPAREN' 'SEMI'
    action 'LTEQEQGT' (noprec):   reduce HavocEip --> 'CALL' 'GO' 'LPAREN' 'RPAREN' 'SEMI'
    action 'TYPE' (noprec):   reduce HavocEip --> 'CALL' 'GO' 'LPAREN' 'RPAREN' 'SEMI'
    action 'CONST' (noprec):   reduce HavocEip --> 'CALL' 'GO' 'LPAREN' 'RPAREN' 'SEMI'
    action 'FUNCTION' (noprec):   reduce HavocEip --> 'CALL' 'GO' 'LPAREN' 'RPAREN' 'SEMI'
    action 'RETURNS' (noprec):   reduce HavocEip --> 'CALL' 'GO' 'LPAREN' 'RPAREN' 'SEMI'
    action 'AXIOM' (noprec):   reduce HavocEip --> 'CALL' 'GO' 'LPAREN' 'RPAREN' 'SEMI'
    action 'PROCEDURE' (noprec):   reduce HavocEip --> 'CALL' 'GO' 'LPAREN' 'RPAREN' 'SEMI'
    action 'IMPLEMENTATION' (noprec):   reduce HavocEip --> 'CALL' 'GO' 'LPAREN' 'RPAREN' 'SEMI'
    action 'REQUIRES' (noprec):   reduce HavocEip --> 'CALL' 'GO' 'LPAREN' 'RPAREN' 'SEMI'
    action 'ENSURES' (noprec):   reduce HavocEip --> 'CALL' 'GO' 'LPAREN' 'RPAREN' 'SEMI'
    action 'LT' (noprec):   reduce HavocEip --> 'CALL' 'GO' 'LPAREN' 'RPAREN' 'SEMI'
    action 'GT' (noprec):   reduce HavocEip --> 'CALL' 'GO' 'LPAREN' 'RPAREN' 'SEMI'
    action 'EQ' (noprec):   reduce HavocEip --> 'CALL' 'GO' 'LPAREN' 'RPAREN' 'SEMI'
    action 'BANG' (noprec):   reduce HavocEip --> 'CALL' 'GO' 'LPAREN' 'RPAREN' 'SEMI'
    action 'COMMA' (noprec):   reduce HavocEip --> 'CALL' 'GO' 'LPAREN' 'RPAREN' 'SEMI'
    action 'LE' (noprec):   reduce HavocEip --> 'CALL' 'GO' 'LPAREN' 'RPAREN' 'SEMI'
    action 'GE' (noprec):   reduce HavocEip --> 'CALL' 'GO' 'LPAREN' 'RPAREN' 'SEMI'
    action 'EQEQ' (noprec):   reduce HavocEip --> 'CALL' 'GO' 'LPAREN' 'RPAREN' 'SEMI'
    action 'NE' (noprec):   reduce HavocEip --> 'CALL' 'GO' 'LPAREN' 'RPAREN' 'SEMI'
    action 'PLUS' (noprec):   reduce HavocEip --> 'CALL' 'GO' 'LPAREN' 'RPAREN' 'SEMI'
    action 'MINUS' (noprec):   reduce HavocEip --> 'CALL' 'GO' 'LPAREN' 'RPAREN' 'SEMI'
    action 'STAR' (noprec):   reduce HavocEip --> 'CALL' 'GO' 'LPAREN' 'RPAREN' 'SEMI'
    action 'SLASH' (noprec):   reduce HavocEip --> 'CALL' 'GO' 'LPAREN' 'RPAREN' 'SEMI'
    action 'PERCENT' (noprec):   reduce HavocEip --> 'CALL' 'GO' 'LPAREN' 'RPAREN' 'SEMI'
    action 'AMPAMP' (noprec):   reduce HavocEip --> 'CALL' 'GO' 'LPAREN' 'RPAREN' 'SEMI'
    action 'BARBAR' (noprec):   reduce HavocEip --> 'CALL' 'GO' 'LPAREN' 'RPAREN' 'SEMI'
    action 'COLONEQ' (noprec):   reduce HavocEip --> 'CALL' 'GO' 'LPAREN' 'RPAREN' 'SEMI'
    action 'INT' (noprec):   reduce HavocEip --> 'CALL' 'GO' 'LPAREN' 'RPAREN' 'SEMI'
    action 'BOOL' (noprec):   reduce HavocEip --> 'CALL' 'GO' 'LPAREN' 'RPAREN' 'SEMI'
    action 'IF' (noprec):   reduce HavocEip --> 'CALL' 'GO' 'LPAREN' 'RPAREN' 'SEMI'
    action 'RETURN' (noprec):   reduce HavocEip --> 'CALL' 'GO' 'LPAREN' 'RPAREN' 'SEMI'
    action 'VAR' (noprec):   reduce HavocEip --> 'CALL' 'GO' 'LPAREN' 'RPAREN' 'SEMI'
    action 'LBRACE' (noprec):   reduce HavocEip --> 'CALL' 'GO' 'LPAREN' 'RPAREN' 'SEMI'
    action 'RBRACE' (noprec):   reduce HavocEip --> 'CALL' 'GO' 'LPAREN' 'RPAREN' 'SEMI'
    action 'SEMI' (noprec):   reduce HavocEip --> 'CALL' 'GO' 'LPAREN' 'RPAREN' 'SEMI'
    action 'COLON' (noprec):   reduce HavocEip --> 'CALL' 'GO' 'LPAREN' 'RPAREN' 'SEMI'
    action 'LPAREN' (noprec):   reduce HavocEip --> 'CALL' 'GO' 'LPAREN' 'RPAREN' 'SEMI'
    action 'RPAREN' (noprec):   reduce HavocEip --> 'CALL' 'GO' 'LPAREN' 'RPAREN' 'SEMI'
    action 'LBRACKET' (noprec):   reduce HavocEip --> 'CALL' 'GO' 'LPAREN' 'RPAREN' 'SEMI'
    action 'RBRACKET' (noprec):   reduce HavocEip --> 'CALL' 'GO' 'LPAREN' 'RPAREN' 'SEMI'
    action 'LITBOOL' (noprec):   reduce HavocEip --> 'CALL' 'GO' 'LPAREN' 'RPAREN' 'SEMI'
    action 'LITINT' (noprec):   reduce HavocEip --> 'CALL' 'GO' 'LPAREN' 'RPAREN' 'SEMI'
    action 'QLID' (noprec):   reduce HavocEip --> 'CALL' 'GO' 'LPAREN' 'RPAREN' 'SEMI'
    action 'QUID' (noprec):   reduce HavocEip --> 'CALL' 'GO' 'LPAREN' 'RPAREN' 'SEMI'
    action 'DLID' (noprec):   reduce HavocEip --> 'CALL' 'GO' 'LPAREN' 'RPAREN' 'SEMI'
    action 'DUID' (noprec):   reduce HavocEip --> 'CALL' 'GO' 'LPAREN' 'RPAREN' 'SEMI'
    action 'LID' (noprec):   reduce HavocEip --> 'CALL' 'GO' 'LPAREN' 'RPAREN' 'SEMI'
    action 'UID' (noprec):   reduce HavocEip --> 'CALL' 'GO' 'LPAREN' 'RPAREN' 'SEMI'
    action 'error' (noprec):   reduce HavocEip --> 'CALL' 'GO' 'LPAREN' 'RPAREN' 'SEMI'
    action '#' (noprec):   reduce HavocEip --> 'CALL' 'GO' 'LPAREN' 'RPAREN' 'SEMI'
    action '$$' (noprec):   reduce HavocEip --> 'CALL' 'GO' 'LPAREN' 'RPAREN' 'SEMI'

  immediate action:   reduce HavocEip --> 'CALL' 'GO' 'LPAREN' 'RPAREN' 'SEMI'
 gotos:

state 162:
  items:
    Stmt -> ID . 'COLON'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   shift 163
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 163:
  items:
    Stmt -> ID 'COLON' . 

  actions:
    action 'EOF' (noprec):   reduce Stmt --> ID 'COLON'
    action 'EAX' (noprec):   reduce Stmt --> ID 'COLON'
    action 'EBX' (noprec):   reduce Stmt --> ID 'COLON'
    action 'ECX' (noprec):   reduce Stmt --> ID 'COLON'
    action 'EDX' (noprec):   reduce Stmt --> ID 'COLON'
    action 'ESI' (noprec):   reduce Stmt --> ID 'COLON'
    action 'EDI' (noprec):   reduce Stmt --> ID 'COLON'
    action 'EBP' (noprec):   reduce Stmt --> ID 'COLON'
    action 'ESP' (noprec):   reduce Stmt --> ID 'COLON'
    action 'MODIFIES' (noprec):   reduce Stmt --> ID 'COLON'
    action 'INVARIANT' (noprec):   reduce Stmt --> ID 'COLON'
    action 'ASSERT' (noprec):   reduce Stmt --> ID 'COLON'
    action 'HAVOC' (noprec):   reduce Stmt --> ID 'COLON'
    action 'GOTO' (noprec):   reduce Stmt --> ID 'COLON'
    action 'CALL' (noprec):   reduce Stmt --> ID 'COLON'
    action 'CCALL' (noprec):   reduce Stmt --> ID 'COLON'
    action 'RET' (noprec):   reduce Stmt --> ID 'COLON'
    action 'IRET' (noprec):   reduce Stmt --> ID 'COLON'
    action 'GO' (noprec):   reduce Stmt --> ID 'COLON'
    action 'FORALL' (noprec):   reduce Stmt --> ID 'COLON'
    action 'EXISTS' (noprec):   reduce Stmt --> ID 'COLON'
    action 'OLD' (noprec):   reduce Stmt --> ID 'COLON'
    action 'COLONCOLON' (noprec):   reduce Stmt --> ID 'COLON'
    action 'EQEQGT' (noprec):   reduce Stmt --> ID 'COLON'
    action 'LTEQEQGT' (noprec):   reduce Stmt --> ID 'COLON'
    action 'TYPE' (noprec):   reduce Stmt --> ID 'COLON'
    action 'CONST' (noprec):   reduce Stmt --> ID 'COLON'
    action 'FUNCTION' (noprec):   reduce Stmt --> ID 'COLON'
    action 'RETURNS' (noprec):   reduce Stmt --> ID 'COLON'
    action 'AXIOM' (noprec):   reduce Stmt --> ID 'COLON'
    action 'PROCEDURE' (noprec):   reduce Stmt --> ID 'COLON'
    action 'IMPLEMENTATION' (noprec):   reduce Stmt --> ID 'COLON'
    action 'REQUIRES' (noprec):   reduce Stmt --> ID 'COLON'
    action 'ENSURES' (noprec):   reduce Stmt --> ID 'COLON'
    action 'LT' (noprec):   reduce Stmt --> ID 'COLON'
    action 'GT' (noprec):   reduce Stmt --> ID 'COLON'
    action 'EQ' (noprec):   reduce Stmt --> ID 'COLON'
    action 'BANG' (noprec):   reduce Stmt --> ID 'COLON'
    action 'COMMA' (noprec):   reduce Stmt --> ID 'COLON'
    action 'LE' (noprec):   reduce Stmt --> ID 'COLON'
    action 'GE' (noprec):   reduce Stmt --> ID 'COLON'
    action 'EQEQ' (noprec):   reduce Stmt --> ID 'COLON'
    action 'NE' (noprec):   reduce Stmt --> ID 'COLON'
    action 'PLUS' (noprec):   reduce Stmt --> ID 'COLON'
    action 'MINUS' (noprec):   reduce Stmt --> ID 'COLON'
    action 'STAR' (noprec):   reduce Stmt --> ID 'COLON'
    action 'SLASH' (noprec):   reduce Stmt --> ID 'COLON'
    action 'PERCENT' (noprec):   reduce Stmt --> ID 'COLON'
    action 'AMPAMP' (noprec):   reduce Stmt --> ID 'COLON'
    action 'BARBAR' (noprec):   reduce Stmt --> ID 'COLON'
    action 'COLONEQ' (noprec):   reduce Stmt --> ID 'COLON'
    action 'INT' (noprec):   reduce Stmt --> ID 'COLON'
    action 'BOOL' (noprec):   reduce Stmt --> ID 'COLON'
    action 'IF' (noprec):   reduce Stmt --> ID 'COLON'
    action 'RETURN' (noprec):   reduce Stmt --> ID 'COLON'
    action 'VAR' (noprec):   reduce Stmt --> ID 'COLON'
    action 'LBRACE' (noprec):   reduce Stmt --> ID 'COLON'
    action 'RBRACE' (noprec):   reduce Stmt --> ID 'COLON'
    action 'SEMI' (noprec):   reduce Stmt --> ID 'COLON'
    action 'COLON' (noprec):   reduce Stmt --> ID 'COLON'
    action 'LPAREN' (noprec):   reduce Stmt --> ID 'COLON'
    action 'RPAREN' (noprec):   reduce Stmt --> ID 'COLON'
    action 'LBRACKET' (noprec):   reduce Stmt --> ID 'COLON'
    action 'RBRACKET' (noprec):   reduce Stmt --> ID 'COLON'
    action 'LITBOOL' (noprec):   reduce Stmt --> ID 'COLON'
    action 'LITINT' (noprec):   reduce Stmt --> ID 'COLON'
    action 'QLID' (noprec):   reduce Stmt --> ID 'COLON'
    action 'QUID' (noprec):   reduce Stmt --> ID 'COLON'
    action 'DLID' (noprec):   reduce Stmt --> ID 'COLON'
    action 'DUID' (noprec):   reduce Stmt --> ID 'COLON'
    action 'LID' (noprec):   reduce Stmt --> ID 'COLON'
    action 'UID' (noprec):   reduce Stmt --> ID 'COLON'
    action 'error' (noprec):   reduce Stmt --> ID 'COLON'
    action '#' (noprec):   reduce Stmt --> ID 'COLON'
    action '$$' (noprec):   reduce Stmt --> ID 'COLON'

  immediate action:   reduce Stmt --> ID 'COLON'
 gotos:

state 164:
  items:
    Stmt -> HavocEip . 'GOTO' ID 'SEMI'
    Stmt -> HavocEip . 'IF' 'LPAREN' SrcOperand Cmp SrcOperand 'RPAREN' 'LBRACE' 'GOTO' ID 'SEMI' 'RBRACE'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   shift 166
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   shift 172
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 165:
  items:
    Stmt -> HavocEip . 'GOTO' ID 'SEMI'
    Stmt -> HavocEip . 'IF' 'LPAREN' SrcOperand Cmp SrcOperand 'RPAREN' 'LBRACE' 'GOTO' ID 'SEMI' 'RBRACE'
    ProcBlock -> HavocEip . 'GOTO' ID 'SEMI'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   shift 167
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   shift 172
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 166:
  items:
    Stmt -> HavocEip 'GOTO' . ID 'SEMI'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   shift 4
    action 'UID' (noprec):   shift 5
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto ID: 168

state 167:
  items:
    Stmt -> HavocEip 'GOTO' . ID 'SEMI'
    ProcBlock -> HavocEip 'GOTO' . ID 'SEMI'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   shift 4
    action 'UID' (noprec):   shift 5
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto ID: 169

state 168:
  items:
    Stmt -> HavocEip 'GOTO' ID . 'SEMI'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   shift 170
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 169:
  items:
    Stmt -> HavocEip 'GOTO' ID . 'SEMI'
    ProcBlock -> HavocEip 'GOTO' ID . 'SEMI'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   shift 171
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 170:
  items:
    Stmt -> HavocEip 'GOTO' ID 'SEMI' . 

  actions:
    action 'EOF' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'EAX' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'EBX' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'ECX' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'EDX' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'ESI' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'EDI' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'EBP' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'ESP' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'MODIFIES' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'INVARIANT' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'ASSERT' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'HAVOC' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'GOTO' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'CALL' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'CCALL' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'RET' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'IRET' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'GO' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'FORALL' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'EXISTS' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'OLD' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'COLONCOLON' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'EQEQGT' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'LTEQEQGT' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'TYPE' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'CONST' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'FUNCTION' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'RETURNS' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'AXIOM' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'PROCEDURE' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'IMPLEMENTATION' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'REQUIRES' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'ENSURES' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'LT' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'GT' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'EQ' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'BANG' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'COMMA' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'LE' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'GE' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'EQEQ' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'NE' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'PLUS' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'MINUS' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'STAR' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'SLASH' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'PERCENT' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'AMPAMP' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'BARBAR' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'COLONEQ' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'INT' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'BOOL' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'IF' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'RETURN' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'VAR' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'LBRACE' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'RBRACE' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'SEMI' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'COLON' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'LPAREN' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'RPAREN' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'LBRACKET' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'RBRACKET' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'LITBOOL' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'LITINT' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'QLID' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'QUID' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'DLID' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'DUID' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'LID' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'UID' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'error' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action '#' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action '$$' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'

  immediate action:   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
 gotos:

state 171:
  items:
    Stmt -> HavocEip 'GOTO' ID 'SEMI' . 
    ProcBlock -> HavocEip 'GOTO' ID 'SEMI' . 

  actions:
    action 'EOF' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'EAX' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'EBX' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'ECX' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'EDX' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'ESI' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'EDI' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'EBP' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'ESP' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'MODIFIES' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'INVARIANT' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'ASSERT' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'HAVOC' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'GOTO' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'CALL' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'CCALL' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'RET' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'IRET' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'GO' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'FORALL' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'EXISTS' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'OLD' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'COLONCOLON' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'EQEQGT' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'LTEQEQGT' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'TYPE' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'CONST' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'FUNCTION' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'RETURNS' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'AXIOM' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'PROCEDURE' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'IMPLEMENTATION' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'REQUIRES' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'ENSURES' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'LT' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'GT' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'EQ' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'BANG' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'COMMA' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'LE' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'GE' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'EQEQ' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'NE' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'PLUS' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'MINUS' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'STAR' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'SLASH' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'PERCENT' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'AMPAMP' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'BARBAR' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'COLONEQ' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'INT' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'BOOL' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'IF' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'RETURN' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'VAR' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'LBRACE' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'RBRACE' (noprec):   reduce ProcBlock --> HavocEip 'GOTO' ID 'SEMI'
    action 'SEMI' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'COLON' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'LPAREN' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'RPAREN' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'LBRACKET' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'RBRACKET' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'LITBOOL' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'LITINT' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'QLID' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'QUID' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'DLID' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'DUID' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'LID' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'UID' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action 'error' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action '#' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'
    action '$$' (noprec):   reduce Stmt --> HavocEip 'GOTO' ID 'SEMI'

  immediate action: <none>
 gotos:

state 172:
  items:
    Stmt -> HavocEip 'IF' . 'LPAREN' SrcOperand Cmp SrcOperand 'RPAREN' 'LBRACE' 'GOTO' ID 'SEMI' 'RBRACE'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (explicit left 10000):   shift 173
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 173:
  items:
    Stmt -> HavocEip 'IF' 'LPAREN' . SrcOperand Cmp SrcOperand 'RPAREN' 'LBRACE' 'GOTO' ID 'SEMI' 'RBRACE'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   shift 14
    action 'EBX' (noprec):   shift 15
    action 'ECX' (noprec):   shift 16
    action 'EDX' (noprec):   shift 17
    action 'ESI' (noprec):   shift 18
    action 'EDI' (noprec):   shift 19
    action 'EBP' (noprec):   shift 20
    action 'ESP' (noprec):   shift 21
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (explicit left 10000):   shift 41
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   shift 22
    action 'QLID' (noprec):   shift 32
    action 'QUID' (noprec):   shift 23
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   shift 28
    action 'UID' (noprec):   shift 26
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto Reg: 25
    goto Const: 33
    goto Operand: 31
    goto SrcOperand: 174

state 174:
  items:
    Stmt -> HavocEip 'IF' 'LPAREN' SrcOperand . Cmp SrcOperand 'RPAREN' 'LBRACE' 'GOTO' ID 'SEMI' 'RBRACE'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (explicit left 9996):   shift 46
    action 'GT' (explicit left 9996):   shift 47
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (explicit left 9996):   shift 48
    action 'GE' (explicit left 9996):   shift 49
    action 'EQEQ' (explicit left 9996):   shift 44
    action 'NE' (explicit left 9996):   shift 45
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto Cmp: 175

state 175:
  items:
    Stmt -> HavocEip 'IF' 'LPAREN' SrcOperand Cmp . SrcOperand 'RPAREN' 'LBRACE' 'GOTO' ID 'SEMI' 'RBRACE'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   shift 14
    action 'EBX' (noprec):   shift 15
    action 'ECX' (noprec):   shift 16
    action 'EDX' (noprec):   shift 17
    action 'ESI' (noprec):   shift 18
    action 'EDI' (noprec):   shift 19
    action 'EBP' (noprec):   shift 20
    action 'ESP' (noprec):   shift 21
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (explicit left 10000):   shift 41
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   shift 22
    action 'QLID' (noprec):   shift 32
    action 'QUID' (noprec):   shift 23
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   shift 28
    action 'UID' (noprec):   shift 26
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto Reg: 25
    goto Const: 33
    goto Operand: 31
    goto SrcOperand: 176

state 176:
  items:
    Stmt -> HavocEip 'IF' 'LPAREN' SrcOperand Cmp SrcOperand . 'RPAREN' 'LBRACE' 'GOTO' ID 'SEMI' 'RBRACE'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (explicit left 10000):   shift 177
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 177:
  items:
    Stmt -> HavocEip 'IF' 'LPAREN' SrcOperand Cmp SrcOperand 'RPAREN' . 'LBRACE' 'GOTO' ID 'SEMI' 'RBRACE'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   shift 178
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 178:
  items:
    Stmt -> HavocEip 'IF' 'LPAREN' SrcOperand Cmp SrcOperand 'RPAREN' 'LBRACE' . 'GOTO' ID 'SEMI' 'RBRACE'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   shift 179
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 179:
  items:
    Stmt -> HavocEip 'IF' 'LPAREN' SrcOperand Cmp SrcOperand 'RPAREN' 'LBRACE' 'GOTO' . ID 'SEMI' 'RBRACE'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   shift 4
    action 'UID' (noprec):   shift 5
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto ID: 180

state 180:
  items:
    Stmt -> HavocEip 'IF' 'LPAREN' SrcOperand Cmp SrcOperand 'RPAREN' 'LBRACE' 'GOTO' ID . 'SEMI' 'RBRACE'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   shift 181
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 181:
  items:
    Stmt -> HavocEip 'IF' 'LPAREN' SrcOperand Cmp SrcOperand 'RPAREN' 'LBRACE' 'GOTO' ID 'SEMI' . 'RBRACE'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   shift 182
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 182:
  items:
    Stmt -> HavocEip 'IF' 'LPAREN' SrcOperand Cmp SrcOperand 'RPAREN' 'LBRACE' 'GOTO' ID 'SEMI' 'RBRACE' . 

  actions:
    action 'EOF' (noprec):   reduce Stmt --> HavocEip 'IF' 'LPAREN' SrcOperand Cmp SrcOperand 'RPAREN' 'LBRACE' 'GOTO' ID 'SEMI' 'RBRACE'
    action 'EAX' (noprec):   reduce Stmt --> HavocEip 'IF' 'LPAREN' SrcOperand Cmp SrcOperand 'RPAREN' 'LBRACE' 'GOTO' ID 'SEMI' 'RBRACE'
    action 'EBX' (noprec):   reduce Stmt --> HavocEip 'IF' 'LPAREN' SrcOperand Cmp SrcOperand 'RPAREN' 'LBRACE' 'GOTO' ID 'SEMI' 'RBRACE'
    action 'ECX' (noprec):   reduce Stmt --> HavocEip 'IF' 'LPAREN' SrcOperand Cmp SrcOperand 'RPAREN' 'LBRACE' 'GOTO' ID 'SEMI' 'RBRACE'
    action 'EDX' (noprec):   reduce Stmt --> HavocEip 'IF' 'LPAREN' SrcOperand Cmp SrcOperand 'RPAREN' 'LBRACE' 'GOTO' ID 'SEMI' 'RBRACE'
    action 'ESI' (noprec):   reduce Stmt --> HavocEip 'IF' 'LPAREN' SrcOperand Cmp SrcOperand 'RPAREN' 'LBRACE' 'GOTO' ID 'SEMI' 'RBRACE'
    action 'EDI' (noprec):   reduce Stmt --> HavocEip 'IF' 'LPAREN' SrcOperand Cmp SrcOperand 'RPAREN' 'LBRACE' 'GOTO' ID 'SEMI' 'RBRACE'
    action 'EBP' (noprec):   reduce Stmt --> HavocEip 'IF' 'LPAREN' SrcOperand Cmp SrcOperand 'RPAREN' 'LBRACE' 'GOTO' ID 'SEMI' 'RBRACE'
    action 'ESP' (noprec):   reduce Stmt --> HavocEip 'IF' 'LPAREN' SrcOperand Cmp SrcOperand 'RPAREN' 'LBRACE' 'GOTO' ID 'SEMI' 'RBRACE'
    action 'MODIFIES' (noprec):   reduce Stmt --> HavocEip 'IF' 'LPAREN' SrcOperand Cmp SrcOperand 'RPAREN' 'LBRACE' 'GOTO' ID 'SEMI' 'RBRACE'
    action 'INVARIANT' (noprec):   reduce Stmt --> HavocEip 'IF' 'LPAREN' SrcOperand Cmp SrcOperand 'RPAREN' 'LBRACE' 'GOTO' ID 'SEMI' 'RBRACE'
    action 'ASSERT' (noprec):   reduce Stmt --> HavocEip 'IF' 'LPAREN' SrcOperand Cmp SrcOperand 'RPAREN' 'LBRACE' 'GOTO' ID 'SEMI' 'RBRACE'
    action 'HAVOC' (noprec):   reduce Stmt --> HavocEip 'IF' 'LPAREN' SrcOperand Cmp SrcOperand 'RPAREN' 'LBRACE' 'GOTO' ID 'SEMI' 'RBRACE'
    action 'GOTO' (noprec):   reduce Stmt --> HavocEip 'IF' 'LPAREN' SrcOperand Cmp SrcOperand 'RPAREN' 'LBRACE' 'GOTO' ID 'SEMI' 'RBRACE'
    action 'CALL' (noprec):   reduce Stmt --> HavocEip 'IF' 'LPAREN' SrcOperand Cmp SrcOperand 'RPAREN' 'LBRACE' 'GOTO' ID 'SEMI' 'RBRACE'
    action 'CCALL' (noprec):   reduce Stmt --> HavocEip 'IF' 'LPAREN' SrcOperand Cmp SrcOperand 'RPAREN' 'LBRACE' 'GOTO' ID 'SEMI' 'RBRACE'
    action 'RET' (noprec):   reduce Stmt --> HavocEip 'IF' 'LPAREN' SrcOperand Cmp SrcOperand 'RPAREN' 'LBRACE' 'GOTO' ID 'SEMI' 'RBRACE'
    action 'IRET' (noprec):   reduce Stmt --> HavocEip 'IF' 'LPAREN' SrcOperand Cmp SrcOperand 'RPAREN' 'LBRACE' 'GOTO' ID 'SEMI' 'RBRACE'
    action 'GO' (noprec):   reduce Stmt --> HavocEip 'IF' 'LPAREN' SrcOperand Cmp SrcOperand 'RPAREN' 'LBRACE' 'GOTO' ID 'SEMI' 'RBRACE'
    action 'FORALL' (noprec):   reduce Stmt --> HavocEip 'IF' 'LPAREN' SrcOperand Cmp SrcOperand 'RPAREN' 'LBRACE' 'GOTO' ID 'SEMI' 'RBRACE'
    action 'EXISTS' (noprec):   reduce Stmt --> HavocEip 'IF' 'LPAREN' SrcOperand Cmp SrcOperand 'RPAREN' 'LBRACE' 'GOTO' ID 'SEMI' 'RBRACE'
    action 'OLD' (noprec):   reduce Stmt --> HavocEip 'IF' 'LPAREN' SrcOperand Cmp SrcOperand 'RPAREN' 'LBRACE' 'GOTO' ID 'SEMI' 'RBRACE'
    action 'COLONCOLON' (noprec):   reduce Stmt --> HavocEip 'IF' 'LPAREN' SrcOperand Cmp SrcOperand 'RPAREN' 'LBRACE' 'GOTO' ID 'SEMI' 'RBRACE'
    action 'EQEQGT' (noprec):   reduce Stmt --> HavocEip 'IF' 'LPAREN' SrcOperand Cmp SrcOperand 'RPAREN' 'LBRACE' 'GOTO' ID 'SEMI' 'RBRACE'
    action 'LTEQEQGT' (noprec):   reduce Stmt --> HavocEip 'IF' 'LPAREN' SrcOperand Cmp SrcOperand 'RPAREN' 'LBRACE' 'GOTO' ID 'SEMI' 'RBRACE'
    action 'TYPE' (noprec):   reduce Stmt --> HavocEip 'IF' 'LPAREN' SrcOperand Cmp SrcOperand 'RPAREN' 'LBRACE' 'GOTO' ID 'SEMI' 'RBRACE'
    action 'CONST' (noprec):   reduce Stmt --> HavocEip 'IF' 'LPAREN' SrcOperand Cmp SrcOperand 'RPAREN' 'LBRACE' 'GOTO' ID 'SEMI' 'RBRACE'
    action 'FUNCTION' (noprec):   reduce Stmt --> HavocEip 'IF' 'LPAREN' SrcOperand Cmp SrcOperand 'RPAREN' 'LBRACE' 'GOTO' ID 'SEMI' 'RBRACE'
    action 'RETURNS' (noprec):   reduce Stmt --> HavocEip 'IF' 'LPAREN' SrcOperand Cmp SrcOperand 'RPAREN' 'LBRACE' 'GOTO' ID 'SEMI' 'RBRACE'
    action 'AXIOM' (noprec):   reduce Stmt --> HavocEip 'IF' 'LPAREN' SrcOperand Cmp SrcOperand 'RPAREN' 'LBRACE' 'GOTO' ID 'SEMI' 'RBRACE'
    action 'PROCEDURE' (noprec):   reduce Stmt --> HavocEip 'IF' 'LPAREN' SrcOperand Cmp SrcOperand 'RPAREN' 'LBRACE' 'GOTO' ID 'SEMI' 'RBRACE'
    action 'IMPLEMENTATION' (noprec):   reduce Stmt --> HavocEip 'IF' 'LPAREN' SrcOperand Cmp SrcOperand 'RPAREN' 'LBRACE' 'GOTO' ID 'SEMI' 'RBRACE'
    action 'REQUIRES' (noprec):   reduce Stmt --> HavocEip 'IF' 'LPAREN' SrcOperand Cmp SrcOperand 'RPAREN' 'LBRACE' 'GOTO' ID 'SEMI' 'RBRACE'
    action 'ENSURES' (noprec):   reduce Stmt --> HavocEip 'IF' 'LPAREN' SrcOperand Cmp SrcOperand 'RPAREN' 'LBRACE' 'GOTO' ID 'SEMI' 'RBRACE'
    action 'LT' (noprec):   reduce Stmt --> HavocEip 'IF' 'LPAREN' SrcOperand Cmp SrcOperand 'RPAREN' 'LBRACE' 'GOTO' ID 'SEMI' 'RBRACE'
    action 'GT' (noprec):   reduce Stmt --> HavocEip 'IF' 'LPAREN' SrcOperand Cmp SrcOperand 'RPAREN' 'LBRACE' 'GOTO' ID 'SEMI' 'RBRACE'
    action 'EQ' (noprec):   reduce Stmt --> HavocEip 'IF' 'LPAREN' SrcOperand Cmp SrcOperand 'RPAREN' 'LBRACE' 'GOTO' ID 'SEMI' 'RBRACE'
    action 'BANG' (noprec):   reduce Stmt --> HavocEip 'IF' 'LPAREN' SrcOperand Cmp SrcOperand 'RPAREN' 'LBRACE' 'GOTO' ID 'SEMI' 'RBRACE'
    action 'COMMA' (noprec):   reduce Stmt --> HavocEip 'IF' 'LPAREN' SrcOperand Cmp SrcOperand 'RPAREN' 'LBRACE' 'GOTO' ID 'SEMI' 'RBRACE'
    action 'LE' (noprec):   reduce Stmt --> HavocEip 'IF' 'LPAREN' SrcOperand Cmp SrcOperand 'RPAREN' 'LBRACE' 'GOTO' ID 'SEMI' 'RBRACE'
    action 'GE' (noprec):   reduce Stmt --> HavocEip 'IF' 'LPAREN' SrcOperand Cmp SrcOperand 'RPAREN' 'LBRACE' 'GOTO' ID 'SEMI' 'RBRACE'
    action 'EQEQ' (noprec):   reduce Stmt --> HavocEip 'IF' 'LPAREN' SrcOperand Cmp SrcOperand 'RPAREN' 'LBRACE' 'GOTO' ID 'SEMI' 'RBRACE'
    action 'NE' (noprec):   reduce Stmt --> HavocEip 'IF' 'LPAREN' SrcOperand Cmp SrcOperand 'RPAREN' 'LBRACE' 'GOTO' ID 'SEMI' 'RBRACE'
    action 'PLUS' (noprec):   reduce Stmt --> HavocEip 'IF' 'LPAREN' SrcOperand Cmp SrcOperand 'RPAREN' 'LBRACE' 'GOTO' ID 'SEMI' 'RBRACE'
    action 'MINUS' (noprec):   reduce Stmt --> HavocEip 'IF' 'LPAREN' SrcOperand Cmp SrcOperand 'RPAREN' 'LBRACE' 'GOTO' ID 'SEMI' 'RBRACE'
    action 'STAR' (noprec):   reduce Stmt --> HavocEip 'IF' 'LPAREN' SrcOperand Cmp SrcOperand 'RPAREN' 'LBRACE' 'GOTO' ID 'SEMI' 'RBRACE'
    action 'SLASH' (noprec):   reduce Stmt --> HavocEip 'IF' 'LPAREN' SrcOperand Cmp SrcOperand 'RPAREN' 'LBRACE' 'GOTO' ID 'SEMI' 'RBRACE'
    action 'PERCENT' (noprec):   reduce Stmt --> HavocEip 'IF' 'LPAREN' SrcOperand Cmp SrcOperand 'RPAREN' 'LBRACE' 'GOTO' ID 'SEMI' 'RBRACE'
    action 'AMPAMP' (noprec):   reduce Stmt --> HavocEip 'IF' 'LPAREN' SrcOperand Cmp SrcOperand 'RPAREN' 'LBRACE' 'GOTO' ID 'SEMI' 'RBRACE'
    action 'BARBAR' (noprec):   reduce Stmt --> HavocEip 'IF' 'LPAREN' SrcOperand Cmp SrcOperand 'RPAREN' 'LBRACE' 'GOTO' ID 'SEMI' 'RBRACE'
    action 'COLONEQ' (noprec):   reduce Stmt --> HavocEip 'IF' 'LPAREN' SrcOperand Cmp SrcOperand 'RPAREN' 'LBRACE' 'GOTO' ID 'SEMI' 'RBRACE'
    action 'INT' (noprec):   reduce Stmt --> HavocEip 'IF' 'LPAREN' SrcOperand Cmp SrcOperand 'RPAREN' 'LBRACE' 'GOTO' ID 'SEMI' 'RBRACE'
    action 'BOOL' (noprec):   reduce Stmt --> HavocEip 'IF' 'LPAREN' SrcOperand Cmp SrcOperand 'RPAREN' 'LBRACE' 'GOTO' ID 'SEMI' 'RBRACE'
    action 'IF' (noprec):   reduce Stmt --> HavocEip 'IF' 'LPAREN' SrcOperand Cmp SrcOperand 'RPAREN' 'LBRACE' 'GOTO' ID 'SEMI' 'RBRACE'
    action 'RETURN' (noprec):   reduce Stmt --> HavocEip 'IF' 'LPAREN' SrcOperand Cmp SrcOperand 'RPAREN' 'LBRACE' 'GOTO' ID 'SEMI' 'RBRACE'
    action 'VAR' (noprec):   reduce Stmt --> HavocEip 'IF' 'LPAREN' SrcOperand Cmp SrcOperand 'RPAREN' 'LBRACE' 'GOTO' ID 'SEMI' 'RBRACE'
    action 'LBRACE' (noprec):   reduce Stmt --> HavocEip 'IF' 'LPAREN' SrcOperand Cmp SrcOperand 'RPAREN' 'LBRACE' 'GOTO' ID 'SEMI' 'RBRACE'
    action 'RBRACE' (noprec):   reduce Stmt --> HavocEip 'IF' 'LPAREN' SrcOperand Cmp SrcOperand 'RPAREN' 'LBRACE' 'GOTO' ID 'SEMI' 'RBRACE'
    action 'SEMI' (noprec):   reduce Stmt --> HavocEip 'IF' 'LPAREN' SrcOperand Cmp SrcOperand 'RPAREN' 'LBRACE' 'GOTO' ID 'SEMI' 'RBRACE'
    action 'COLON' (noprec):   reduce Stmt --> HavocEip 'IF' 'LPAREN' SrcOperand Cmp SrcOperand 'RPAREN' 'LBRACE' 'GOTO' ID 'SEMI' 'RBRACE'
    action 'LPAREN' (noprec):   reduce Stmt --> HavocEip 'IF' 'LPAREN' SrcOperand Cmp SrcOperand 'RPAREN' 'LBRACE' 'GOTO' ID 'SEMI' 'RBRACE'
    action 'RPAREN' (noprec):   reduce Stmt --> HavocEip 'IF' 'LPAREN' SrcOperand Cmp SrcOperand 'RPAREN' 'LBRACE' 'GOTO' ID 'SEMI' 'RBRACE'
    action 'LBRACKET' (noprec):   reduce Stmt --> HavocEip 'IF' 'LPAREN' SrcOperand Cmp SrcOperand 'RPAREN' 'LBRACE' 'GOTO' ID 'SEMI' 'RBRACE'
    action 'RBRACKET' (noprec):   reduce Stmt --> HavocEip 'IF' 'LPAREN' SrcOperand Cmp SrcOperand 'RPAREN' 'LBRACE' 'GOTO' ID 'SEMI' 'RBRACE'
    action 'LITBOOL' (noprec):   reduce Stmt --> HavocEip 'IF' 'LPAREN' SrcOperand Cmp SrcOperand 'RPAREN' 'LBRACE' 'GOTO' ID 'SEMI' 'RBRACE'
    action 'LITINT' (noprec):   reduce Stmt --> HavocEip 'IF' 'LPAREN' SrcOperand Cmp SrcOperand 'RPAREN' 'LBRACE' 'GOTO' ID 'SEMI' 'RBRACE'
    action 'QLID' (noprec):   reduce Stmt --> HavocEip 'IF' 'LPAREN' SrcOperand Cmp SrcOperand 'RPAREN' 'LBRACE' 'GOTO' ID 'SEMI' 'RBRACE'
    action 'QUID' (noprec):   reduce Stmt --> HavocEip 'IF' 'LPAREN' SrcOperand Cmp SrcOperand 'RPAREN' 'LBRACE' 'GOTO' ID 'SEMI' 'RBRACE'
    action 'DLID' (noprec):   reduce Stmt --> HavocEip 'IF' 'LPAREN' SrcOperand Cmp SrcOperand 'RPAREN' 'LBRACE' 'GOTO' ID 'SEMI' 'RBRACE'
    action 'DUID' (noprec):   reduce Stmt --> HavocEip 'IF' 'LPAREN' SrcOperand Cmp SrcOperand 'RPAREN' 'LBRACE' 'GOTO' ID 'SEMI' 'RBRACE'
    action 'LID' (noprec):   reduce Stmt --> HavocEip 'IF' 'LPAREN' SrcOperand Cmp SrcOperand 'RPAREN' 'LBRACE' 'GOTO' ID 'SEMI' 'RBRACE'
    action 'UID' (noprec):   reduce Stmt --> HavocEip 'IF' 'LPAREN' SrcOperand Cmp SrcOperand 'RPAREN' 'LBRACE' 'GOTO' ID 'SEMI' 'RBRACE'
    action 'error' (noprec):   reduce Stmt --> HavocEip 'IF' 'LPAREN' SrcOperand Cmp SrcOperand 'RPAREN' 'LBRACE' 'GOTO' ID 'SEMI' 'RBRACE'
    action '#' (noprec):   reduce Stmt --> HavocEip 'IF' 'LPAREN' SrcOperand Cmp SrcOperand 'RPAREN' 'LBRACE' 'GOTO' ID 'SEMI' 'RBRACE'
    action '$$' (noprec):   reduce Stmt --> HavocEip 'IF' 'LPAREN' SrcOperand Cmp SrcOperand 'RPAREN' 'LBRACE' 'GOTO' ID 'SEMI' 'RBRACE'

  immediate action:   reduce Stmt --> HavocEip 'IF' 'LPAREN' SrcOperand Cmp SrcOperand 'RPAREN' 'LBRACE' 'GOTO' ID 'SEMI' 'RBRACE'
 gotos:

state 183:
  items:
    Stmt -> 'ASSERT' . Exp 'SEMI'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   shift 14
    action 'EBX' (noprec):   shift 15
    action 'ECX' (noprec):   shift 16
    action 'EDX' (noprec):   shift 17
    action 'ESI' (noprec):   shift 18
    action 'EDI' (noprec):   shift 19
    action 'EBP' (noprec):   shift 20
    action 'ESP' (noprec):   shift 21
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   shift 125
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (explicit right 9999):   shift 107
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (explicit left 10000):   shift 54
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   shift 124
    action 'LITINT' (noprec):   shift 123
    action 'QLID' (noprec):   shift 145
    action 'QUID' (noprec):   shift 144
    action 'DLID' (noprec):   shift 143
    action 'DUID' (noprec):   shift 142
    action 'LID' (noprec):   shift 4
    action 'UID' (noprec):   shift 5
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto ID: 141
    goto Reg: 132
    goto Exp: 79
    goto AnyId: 128

state 184:
  items:
    Stmt -> 'ASSERT' Exp 'SEMI' . 

  actions:
    action 'EOF' (noprec):   reduce Stmt --> 'ASSERT' Exp 'SEMI'
    action 'EAX' (noprec):   reduce Stmt --> 'ASSERT' Exp 'SEMI'
    action 'EBX' (noprec):   reduce Stmt --> 'ASSERT' Exp 'SEMI'
    action 'ECX' (noprec):   reduce Stmt --> 'ASSERT' Exp 'SEMI'
    action 'EDX' (noprec):   reduce Stmt --> 'ASSERT' Exp 'SEMI'
    action 'ESI' (noprec):   reduce Stmt --> 'ASSERT' Exp 'SEMI'
    action 'EDI' (noprec):   reduce Stmt --> 'ASSERT' Exp 'SEMI'
    action 'EBP' (noprec):   reduce Stmt --> 'ASSERT' Exp 'SEMI'
    action 'ESP' (noprec):   reduce Stmt --> 'ASSERT' Exp 'SEMI'
    action 'MODIFIES' (noprec):   reduce Stmt --> 'ASSERT' Exp 'SEMI'
    action 'INVARIANT' (noprec):   reduce Stmt --> 'ASSERT' Exp 'SEMI'
    action 'ASSERT' (noprec):   reduce Stmt --> 'ASSERT' Exp 'SEMI'
    action 'HAVOC' (noprec):   reduce Stmt --> 'ASSERT' Exp 'SEMI'
    action 'GOTO' (noprec):   reduce Stmt --> 'ASSERT' Exp 'SEMI'
    action 'CALL' (noprec):   reduce Stmt --> 'ASSERT' Exp 'SEMI'
    action 'CCALL' (noprec):   reduce Stmt --> 'ASSERT' Exp 'SEMI'
    action 'RET' (noprec):   reduce Stmt --> 'ASSERT' Exp 'SEMI'
    action 'IRET' (noprec):   reduce Stmt --> 'ASSERT' Exp 'SEMI'
    action 'GO' (noprec):   reduce Stmt --> 'ASSERT' Exp 'SEMI'
    action 'FORALL' (noprec):   reduce Stmt --> 'ASSERT' Exp 'SEMI'
    action 'EXISTS' (noprec):   reduce Stmt --> 'ASSERT' Exp 'SEMI'
    action 'OLD' (noprec):   reduce Stmt --> 'ASSERT' Exp 'SEMI'
    action 'COLONCOLON' (noprec):   reduce Stmt --> 'ASSERT' Exp 'SEMI'
    action 'EQEQGT' (noprec):   reduce Stmt --> 'ASSERT' Exp 'SEMI'
    action 'LTEQEQGT' (noprec):   reduce Stmt --> 'ASSERT' Exp 'SEMI'
    action 'TYPE' (noprec):   reduce Stmt --> 'ASSERT' Exp 'SEMI'
    action 'CONST' (noprec):   reduce Stmt --> 'ASSERT' Exp 'SEMI'
    action 'FUNCTION' (noprec):   reduce Stmt --> 'ASSERT' Exp 'SEMI'
    action 'RETURNS' (noprec):   reduce Stmt --> 'ASSERT' Exp 'SEMI'
    action 'AXIOM' (noprec):   reduce Stmt --> 'ASSERT' Exp 'SEMI'
    action 'PROCEDURE' (noprec):   reduce Stmt --> 'ASSERT' Exp 'SEMI'
    action 'IMPLEMENTATION' (noprec):   reduce Stmt --> 'ASSERT' Exp 'SEMI'
    action 'REQUIRES' (noprec):   reduce Stmt --> 'ASSERT' Exp 'SEMI'
    action 'ENSURES' (noprec):   reduce Stmt --> 'ASSERT' Exp 'SEMI'
    action 'LT' (noprec):   reduce Stmt --> 'ASSERT' Exp 'SEMI'
    action 'GT' (noprec):   reduce Stmt --> 'ASSERT' Exp 'SEMI'
    action 'EQ' (noprec):   reduce Stmt --> 'ASSERT' Exp 'SEMI'
    action 'BANG' (noprec):   reduce Stmt --> 'ASSERT' Exp 'SEMI'
    action 'COMMA' (noprec):   reduce Stmt --> 'ASSERT' Exp 'SEMI'
    action 'LE' (noprec):   reduce Stmt --> 'ASSERT' Exp 'SEMI'
    action 'GE' (noprec):   reduce Stmt --> 'ASSERT' Exp 'SEMI'
    action 'EQEQ' (noprec):   reduce Stmt --> 'ASSERT' Exp 'SEMI'
    action 'NE' (noprec):   reduce Stmt --> 'ASSERT' Exp 'SEMI'
    action 'PLUS' (noprec):   reduce Stmt --> 'ASSERT' Exp 'SEMI'
    action 'MINUS' (noprec):   reduce Stmt --> 'ASSERT' Exp 'SEMI'
    action 'STAR' (noprec):   reduce Stmt --> 'ASSERT' Exp 'SEMI'
    action 'SLASH' (noprec):   reduce Stmt --> 'ASSERT' Exp 'SEMI'
    action 'PERCENT' (noprec):   reduce Stmt --> 'ASSERT' Exp 'SEMI'
    action 'AMPAMP' (noprec):   reduce Stmt --> 'ASSERT' Exp 'SEMI'
    action 'BARBAR' (noprec):   reduce Stmt --> 'ASSERT' Exp 'SEMI'
    action 'COLONEQ' (noprec):   reduce Stmt --> 'ASSERT' Exp 'SEMI'
    action 'INT' (noprec):   reduce Stmt --> 'ASSERT' Exp 'SEMI'
    action 'BOOL' (noprec):   reduce Stmt --> 'ASSERT' Exp 'SEMI'
    action 'IF' (noprec):   reduce Stmt --> 'ASSERT' Exp 'SEMI'
    action 'RETURN' (noprec):   reduce Stmt --> 'ASSERT' Exp 'SEMI'
    action 'VAR' (noprec):   reduce Stmt --> 'ASSERT' Exp 'SEMI'
    action 'LBRACE' (noprec):   reduce Stmt --> 'ASSERT' Exp 'SEMI'
    action 'RBRACE' (noprec):   reduce Stmt --> 'ASSERT' Exp 'SEMI'
    action 'SEMI' (noprec):   reduce Stmt --> 'ASSERT' Exp 'SEMI'
    action 'COLON' (noprec):   reduce Stmt --> 'ASSERT' Exp 'SEMI'
    action 'LPAREN' (noprec):   reduce Stmt --> 'ASSERT' Exp 'SEMI'
    action 'RPAREN' (noprec):   reduce Stmt --> 'ASSERT' Exp 'SEMI'
    action 'LBRACKET' (noprec):   reduce Stmt --> 'ASSERT' Exp 'SEMI'
    action 'RBRACKET' (noprec):   reduce Stmt --> 'ASSERT' Exp 'SEMI'
    action 'LITBOOL' (noprec):   reduce Stmt --> 'ASSERT' Exp 'SEMI'
    action 'LITINT' (noprec):   reduce Stmt --> 'ASSERT' Exp 'SEMI'
    action 'QLID' (noprec):   reduce Stmt --> 'ASSERT' Exp 'SEMI'
    action 'QUID' (noprec):   reduce Stmt --> 'ASSERT' Exp 'SEMI'
    action 'DLID' (noprec):   reduce Stmt --> 'ASSERT' Exp 'SEMI'
    action 'DUID' (noprec):   reduce Stmt --> 'ASSERT' Exp 'SEMI'
    action 'LID' (noprec):   reduce Stmt --> 'ASSERT' Exp 'SEMI'
    action 'UID' (noprec):   reduce Stmt --> 'ASSERT' Exp 'SEMI'
    action 'error' (noprec):   reduce Stmt --> 'ASSERT' Exp 'SEMI'
    action '#' (noprec):   reduce Stmt --> 'ASSERT' Exp 'SEMI'
    action '$$' (noprec):   reduce Stmt --> 'ASSERT' Exp 'SEMI'

  immediate action:   reduce Stmt --> 'ASSERT' Exp 'SEMI'
 gotos:

state 185:
  items:
    Stmt -> 'DLID' . 'COLONEQ' Exp 'SEMI'
    Stmt -> 'DLID' . 'LBRACKET' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    Stmt -> 'DLID' . 'LBRACKET' Exp 'COMMA' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   shift 186
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (explicit left 10000):   shift 188
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 186:
  items:
    Stmt -> 'DLID' 'COLONEQ' . Exp 'SEMI'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   shift 14
    action 'EBX' (noprec):   shift 15
    action 'ECX' (noprec):   shift 16
    action 'EDX' (noprec):   shift 17
    action 'ESI' (noprec):   shift 18
    action 'EDI' (noprec):   shift 19
    action 'EBP' (noprec):   shift 20
    action 'ESP' (noprec):   shift 21
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   shift 125
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (explicit right 9999):   shift 107
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (explicit left 10000):   shift 54
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   shift 124
    action 'LITINT' (noprec):   shift 123
    action 'QLID' (noprec):   shift 145
    action 'QUID' (noprec):   shift 144
    action 'DLID' (noprec):   shift 143
    action 'DUID' (noprec):   shift 142
    action 'LID' (noprec):   shift 4
    action 'UID' (noprec):   shift 5
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto ID: 141
    goto Reg: 132
    goto Exp: 80
    goto AnyId: 128

state 187:
  items:
    Stmt -> 'DLID' 'COLONEQ' Exp 'SEMI' . 

  actions:
    action 'EOF' (noprec):   reduce Stmt --> 'DLID' 'COLONEQ' Exp 'SEMI'
    action 'EAX' (noprec):   reduce Stmt --> 'DLID' 'COLONEQ' Exp 'SEMI'
    action 'EBX' (noprec):   reduce Stmt --> 'DLID' 'COLONEQ' Exp 'SEMI'
    action 'ECX' (noprec):   reduce Stmt --> 'DLID' 'COLONEQ' Exp 'SEMI'
    action 'EDX' (noprec):   reduce Stmt --> 'DLID' 'COLONEQ' Exp 'SEMI'
    action 'ESI' (noprec):   reduce Stmt --> 'DLID' 'COLONEQ' Exp 'SEMI'
    action 'EDI' (noprec):   reduce Stmt --> 'DLID' 'COLONEQ' Exp 'SEMI'
    action 'EBP' (noprec):   reduce Stmt --> 'DLID' 'COLONEQ' Exp 'SEMI'
    action 'ESP' (noprec):   reduce Stmt --> 'DLID' 'COLONEQ' Exp 'SEMI'
    action 'MODIFIES' (noprec):   reduce Stmt --> 'DLID' 'COLONEQ' Exp 'SEMI'
    action 'INVARIANT' (noprec):   reduce Stmt --> 'DLID' 'COLONEQ' Exp 'SEMI'
    action 'ASSERT' (noprec):   reduce Stmt --> 'DLID' 'COLONEQ' Exp 'SEMI'
    action 'HAVOC' (noprec):   reduce Stmt --> 'DLID' 'COLONEQ' Exp 'SEMI'
    action 'GOTO' (noprec):   reduce Stmt --> 'DLID' 'COLONEQ' Exp 'SEMI'
    action 'CALL' (noprec):   reduce Stmt --> 'DLID' 'COLONEQ' Exp 'SEMI'
    action 'CCALL' (noprec):   reduce Stmt --> 'DLID' 'COLONEQ' Exp 'SEMI'
    action 'RET' (noprec):   reduce Stmt --> 'DLID' 'COLONEQ' Exp 'SEMI'
    action 'IRET' (noprec):   reduce Stmt --> 'DLID' 'COLONEQ' Exp 'SEMI'
    action 'GO' (noprec):   reduce Stmt --> 'DLID' 'COLONEQ' Exp 'SEMI'
    action 'FORALL' (noprec):   reduce Stmt --> 'DLID' 'COLONEQ' Exp 'SEMI'
    action 'EXISTS' (noprec):   reduce Stmt --> 'DLID' 'COLONEQ' Exp 'SEMI'
    action 'OLD' (noprec):   reduce Stmt --> 'DLID' 'COLONEQ' Exp 'SEMI'
    action 'COLONCOLON' (noprec):   reduce Stmt --> 'DLID' 'COLONEQ' Exp 'SEMI'
    action 'EQEQGT' (noprec):   reduce Stmt --> 'DLID' 'COLONEQ' Exp 'SEMI'
    action 'LTEQEQGT' (noprec):   reduce Stmt --> 'DLID' 'COLONEQ' Exp 'SEMI'
    action 'TYPE' (noprec):   reduce Stmt --> 'DLID' 'COLONEQ' Exp 'SEMI'
    action 'CONST' (noprec):   reduce Stmt --> 'DLID' 'COLONEQ' Exp 'SEMI'
    action 'FUNCTION' (noprec):   reduce Stmt --> 'DLID' 'COLONEQ' Exp 'SEMI'
    action 'RETURNS' (noprec):   reduce Stmt --> 'DLID' 'COLONEQ' Exp 'SEMI'
    action 'AXIOM' (noprec):   reduce Stmt --> 'DLID' 'COLONEQ' Exp 'SEMI'
    action 'PROCEDURE' (noprec):   reduce Stmt --> 'DLID' 'COLONEQ' Exp 'SEMI'
    action 'IMPLEMENTATION' (noprec):   reduce Stmt --> 'DLID' 'COLONEQ' Exp 'SEMI'
    action 'REQUIRES' (noprec):   reduce Stmt --> 'DLID' 'COLONEQ' Exp 'SEMI'
    action 'ENSURES' (noprec):   reduce Stmt --> 'DLID' 'COLONEQ' Exp 'SEMI'
    action 'LT' (noprec):   reduce Stmt --> 'DLID' 'COLONEQ' Exp 'SEMI'
    action 'GT' (noprec):   reduce Stmt --> 'DLID' 'COLONEQ' Exp 'SEMI'
    action 'EQ' (noprec):   reduce Stmt --> 'DLID' 'COLONEQ' Exp 'SEMI'
    action 'BANG' (noprec):   reduce Stmt --> 'DLID' 'COLONEQ' Exp 'SEMI'
    action 'COMMA' (noprec):   reduce Stmt --> 'DLID' 'COLONEQ' Exp 'SEMI'
    action 'LE' (noprec):   reduce Stmt --> 'DLID' 'COLONEQ' Exp 'SEMI'
    action 'GE' (noprec):   reduce Stmt --> 'DLID' 'COLONEQ' Exp 'SEMI'
    action 'EQEQ' (noprec):   reduce Stmt --> 'DLID' 'COLONEQ' Exp 'SEMI'
    action 'NE' (noprec):   reduce Stmt --> 'DLID' 'COLONEQ' Exp 'SEMI'
    action 'PLUS' (noprec):   reduce Stmt --> 'DLID' 'COLONEQ' Exp 'SEMI'
    action 'MINUS' (noprec):   reduce Stmt --> 'DLID' 'COLONEQ' Exp 'SEMI'
    action 'STAR' (noprec):   reduce Stmt --> 'DLID' 'COLONEQ' Exp 'SEMI'
    action 'SLASH' (noprec):   reduce Stmt --> 'DLID' 'COLONEQ' Exp 'SEMI'
    action 'PERCENT' (noprec):   reduce Stmt --> 'DLID' 'COLONEQ' Exp 'SEMI'
    action 'AMPAMP' (noprec):   reduce Stmt --> 'DLID' 'COLONEQ' Exp 'SEMI'
    action 'BARBAR' (noprec):   reduce Stmt --> 'DLID' 'COLONEQ' Exp 'SEMI'
    action 'COLONEQ' (noprec):   reduce Stmt --> 'DLID' 'COLONEQ' Exp 'SEMI'
    action 'INT' (noprec):   reduce Stmt --> 'DLID' 'COLONEQ' Exp 'SEMI'
    action 'BOOL' (noprec):   reduce Stmt --> 'DLID' 'COLONEQ' Exp 'SEMI'
    action 'IF' (noprec):   reduce Stmt --> 'DLID' 'COLONEQ' Exp 'SEMI'
    action 'RETURN' (noprec):   reduce Stmt --> 'DLID' 'COLONEQ' Exp 'SEMI'
    action 'VAR' (noprec):   reduce Stmt --> 'DLID' 'COLONEQ' Exp 'SEMI'
    action 'LBRACE' (noprec):   reduce Stmt --> 'DLID' 'COLONEQ' Exp 'SEMI'
    action 'RBRACE' (noprec):   reduce Stmt --> 'DLID' 'COLONEQ' Exp 'SEMI'
    action 'SEMI' (noprec):   reduce Stmt --> 'DLID' 'COLONEQ' Exp 'SEMI'
    action 'COLON' (noprec):   reduce Stmt --> 'DLID' 'COLONEQ' Exp 'SEMI'
    action 'LPAREN' (noprec):   reduce Stmt --> 'DLID' 'COLONEQ' Exp 'SEMI'
    action 'RPAREN' (noprec):   reduce Stmt --> 'DLID' 'COLONEQ' Exp 'SEMI'
    action 'LBRACKET' (noprec):   reduce Stmt --> 'DLID' 'COLONEQ' Exp 'SEMI'
    action 'RBRACKET' (noprec):   reduce Stmt --> 'DLID' 'COLONEQ' Exp 'SEMI'
    action 'LITBOOL' (noprec):   reduce Stmt --> 'DLID' 'COLONEQ' Exp 'SEMI'
    action 'LITINT' (noprec):   reduce Stmt --> 'DLID' 'COLONEQ' Exp 'SEMI'
    action 'QLID' (noprec):   reduce Stmt --> 'DLID' 'COLONEQ' Exp 'SEMI'
    action 'QUID' (noprec):   reduce Stmt --> 'DLID' 'COLONEQ' Exp 'SEMI'
    action 'DLID' (noprec):   reduce Stmt --> 'DLID' 'COLONEQ' Exp 'SEMI'
    action 'DUID' (noprec):   reduce Stmt --> 'DLID' 'COLONEQ' Exp 'SEMI'
    action 'LID' (noprec):   reduce Stmt --> 'DLID' 'COLONEQ' Exp 'SEMI'
    action 'UID' (noprec):   reduce Stmt --> 'DLID' 'COLONEQ' Exp 'SEMI'
    action 'error' (noprec):   reduce Stmt --> 'DLID' 'COLONEQ' Exp 'SEMI'
    action '#' (noprec):   reduce Stmt --> 'DLID' 'COLONEQ' Exp 'SEMI'
    action '$$' (noprec):   reduce Stmt --> 'DLID' 'COLONEQ' Exp 'SEMI'

  immediate action:   reduce Stmt --> 'DLID' 'COLONEQ' Exp 'SEMI'
 gotos:

state 188:
  items:
    Stmt -> 'DLID' 'LBRACKET' . Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    Stmt -> 'DLID' 'LBRACKET' . Exp 'COMMA' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   shift 14
    action 'EBX' (noprec):   shift 15
    action 'ECX' (noprec):   shift 16
    action 'EDX' (noprec):   shift 17
    action 'ESI' (noprec):   shift 18
    action 'EDI' (noprec):   shift 19
    action 'EBP' (noprec):   shift 20
    action 'ESP' (noprec):   shift 21
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   shift 125
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (explicit right 9999):   shift 107
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (explicit left 10000):   shift 54
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   shift 124
    action 'LITINT' (noprec):   shift 123
    action 'QLID' (noprec):   shift 145
    action 'QUID' (noprec):   shift 144
    action 'DLID' (noprec):   shift 143
    action 'DUID' (noprec):   shift 142
    action 'LID' (noprec):   shift 4
    action 'UID' (noprec):   shift 5
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto ID: 141
    goto Reg: 132
    goto Exp: 81
    goto AnyId: 128

state 189:
  items:
    Stmt -> 'DLID' 'LBRACKET' Exp 'RBRACKET' . 'COLONEQ' Exp 'SEMI'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   shift 190
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 190:
  items:
    Stmt -> 'DLID' 'LBRACKET' Exp 'RBRACKET' 'COLONEQ' . Exp 'SEMI'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   shift 14
    action 'EBX' (noprec):   shift 15
    action 'ECX' (noprec):   shift 16
    action 'EDX' (noprec):   shift 17
    action 'ESI' (noprec):   shift 18
    action 'EDI' (noprec):   shift 19
    action 'EBP' (noprec):   shift 20
    action 'ESP' (noprec):   shift 21
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   shift 125
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (explicit right 9999):   shift 107
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (explicit left 10000):   shift 54
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   shift 124
    action 'LITINT' (noprec):   shift 123
    action 'QLID' (noprec):   shift 145
    action 'QUID' (noprec):   shift 144
    action 'DLID' (noprec):   shift 143
    action 'DUID' (noprec):   shift 142
    action 'LID' (noprec):   shift 4
    action 'UID' (noprec):   shift 5
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto ID: 141
    goto Reg: 132
    goto Exp: 82
    goto AnyId: 128

state 191:
  items:
    Stmt -> 'DLID' 'LBRACKET' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI' . 

  actions:
    action 'EOF' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'EAX' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'EBX' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'ECX' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'EDX' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'ESI' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'EDI' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'EBP' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'ESP' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'MODIFIES' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'INVARIANT' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'ASSERT' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'HAVOC' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'GOTO' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'CALL' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'CCALL' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'RET' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'IRET' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'GO' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'FORALL' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'EXISTS' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'OLD' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'COLONCOLON' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'EQEQGT' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'LTEQEQGT' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'TYPE' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'CONST' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'FUNCTION' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'RETURNS' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'AXIOM' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'PROCEDURE' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'IMPLEMENTATION' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'REQUIRES' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'ENSURES' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'LT' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'GT' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'EQ' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'BANG' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'COMMA' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'LE' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'GE' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'EQEQ' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'NE' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'PLUS' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'MINUS' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'STAR' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'SLASH' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'PERCENT' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'AMPAMP' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'BARBAR' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'COLONEQ' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'INT' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'BOOL' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'IF' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'RETURN' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'VAR' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'LBRACE' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'RBRACE' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'SEMI' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'COLON' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'LPAREN' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'RPAREN' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'LBRACKET' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'RBRACKET' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'LITBOOL' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'LITINT' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'QLID' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'QUID' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'DLID' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'DUID' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'LID' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'UID' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'error' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action '#' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action '$$' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'

  immediate action:   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
 gotos:

state 192:
  items:
    Stmt -> 'DLID' 'LBRACKET' Exp 'COMMA' . Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   shift 14
    action 'EBX' (noprec):   shift 15
    action 'ECX' (noprec):   shift 16
    action 'EDX' (noprec):   shift 17
    action 'ESI' (noprec):   shift 18
    action 'EDI' (noprec):   shift 19
    action 'EBP' (noprec):   shift 20
    action 'ESP' (noprec):   shift 21
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   shift 125
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (explicit right 9999):   shift 107
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (explicit left 10000):   shift 54
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   shift 124
    action 'LITINT' (noprec):   shift 123
    action 'QLID' (noprec):   shift 145
    action 'QUID' (noprec):   shift 144
    action 'DLID' (noprec):   shift 143
    action 'DUID' (noprec):   shift 142
    action 'LID' (noprec):   shift 4
    action 'UID' (noprec):   shift 5
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto ID: 141
    goto Reg: 132
    goto Exp: 83
    goto AnyId: 128

state 193:
  items:
    Stmt -> 'DLID' 'LBRACKET' Exp 'COMMA' Exp 'RBRACKET' . 'COLONEQ' Exp 'SEMI'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   shift 194
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 194:
  items:
    Stmt -> 'DLID' 'LBRACKET' Exp 'COMMA' Exp 'RBRACKET' 'COLONEQ' . Exp 'SEMI'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   shift 14
    action 'EBX' (noprec):   shift 15
    action 'ECX' (noprec):   shift 16
    action 'EDX' (noprec):   shift 17
    action 'ESI' (noprec):   shift 18
    action 'EDI' (noprec):   shift 19
    action 'EBP' (noprec):   shift 20
    action 'ESP' (noprec):   shift 21
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   shift 125
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (explicit right 9999):   shift 107
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (explicit left 10000):   shift 54
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   shift 124
    action 'LITINT' (noprec):   shift 123
    action 'QLID' (noprec):   shift 145
    action 'QUID' (noprec):   shift 144
    action 'DLID' (noprec):   shift 143
    action 'DUID' (noprec):   shift 142
    action 'LID' (noprec):   shift 4
    action 'UID' (noprec):   shift 5
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto ID: 141
    goto Reg: 132
    goto Exp: 84
    goto AnyId: 128

state 195:
  items:
    Stmt -> 'DLID' 'LBRACKET' Exp 'COMMA' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI' . 

  actions:
    action 'EOF' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'COMMA' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'EAX' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'COMMA' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'EBX' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'COMMA' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'ECX' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'COMMA' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'EDX' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'COMMA' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'ESI' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'COMMA' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'EDI' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'COMMA' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'EBP' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'COMMA' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'ESP' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'COMMA' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'MODIFIES' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'COMMA' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'INVARIANT' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'COMMA' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'ASSERT' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'COMMA' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'HAVOC' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'COMMA' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'GOTO' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'COMMA' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'CALL' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'COMMA' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'CCALL' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'COMMA' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'RET' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'COMMA' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'IRET' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'COMMA' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'GO' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'COMMA' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'FORALL' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'COMMA' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'EXISTS' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'COMMA' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'OLD' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'COMMA' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'COLONCOLON' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'COMMA' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'EQEQGT' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'COMMA' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'LTEQEQGT' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'COMMA' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'TYPE' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'COMMA' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'CONST' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'COMMA' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'FUNCTION' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'COMMA' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'RETURNS' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'COMMA' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'AXIOM' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'COMMA' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'PROCEDURE' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'COMMA' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'IMPLEMENTATION' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'COMMA' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'REQUIRES' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'COMMA' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'ENSURES' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'COMMA' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'LT' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'COMMA' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'GT' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'COMMA' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'EQ' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'COMMA' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'BANG' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'COMMA' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'COMMA' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'COMMA' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'LE' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'COMMA' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'GE' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'COMMA' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'EQEQ' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'COMMA' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'NE' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'COMMA' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'PLUS' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'COMMA' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'MINUS' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'COMMA' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'STAR' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'COMMA' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'SLASH' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'COMMA' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'PERCENT' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'COMMA' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'AMPAMP' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'COMMA' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'BARBAR' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'COMMA' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'COLONEQ' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'COMMA' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'INT' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'COMMA' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'BOOL' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'COMMA' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'IF' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'COMMA' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'RETURN' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'COMMA' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'VAR' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'COMMA' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'LBRACE' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'COMMA' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'RBRACE' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'COMMA' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'SEMI' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'COMMA' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'COLON' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'COMMA' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'LPAREN' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'COMMA' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'RPAREN' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'COMMA' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'LBRACKET' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'COMMA' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'RBRACKET' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'COMMA' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'LITBOOL' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'COMMA' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'LITINT' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'COMMA' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'QLID' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'COMMA' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'QUID' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'COMMA' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'DLID' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'COMMA' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'DUID' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'COMMA' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'LID' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'COMMA' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'UID' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'COMMA' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action 'error' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'COMMA' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action '#' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'COMMA' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
    action '$$' (noprec):   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'COMMA' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'

  immediate action:   reduce Stmt --> 'DLID' 'LBRACKET' Exp 'COMMA' Exp 'RBRACKET' 'COLONEQ' Exp 'SEMI'
 gotos:

state 196:
  items:
    Stmt -> 'CALL' 'LID' 'LPAREN' . Exps 'RPAREN' 'SEMI'

  actions:
    action 'EOF' (noprec):   reduce Exps --> 
    action 'EAX' (noprec):   shift 14
    action 'EBX' (noprec):   shift 15
    action 'ECX' (noprec):   shift 16
    action 'EDX' (noprec):   shift 17
    action 'ESI' (noprec):   shift 18
    action 'EDI' (noprec):   shift 19
    action 'EBP' (noprec):   shift 20
    action 'ESP' (noprec):   shift 21
    action 'MODIFIES' (noprec):   reduce Exps --> 
    action 'INVARIANT' (noprec):   reduce Exps --> 
    action 'ASSERT' (noprec):   reduce Exps --> 
    action 'HAVOC' (noprec):   reduce Exps --> 
    action 'GOTO' (noprec):   reduce Exps --> 
    action 'CALL' (noprec):   reduce Exps --> 
    action 'CCALL' (noprec):   reduce Exps --> 
    action 'RET' (noprec):   reduce Exps --> 
    action 'IRET' (noprec):   reduce Exps --> 
    action 'GO' (noprec):   reduce Exps --> 
    action 'FORALL' (noprec):   reduce Exps --> 
    action 'EXISTS' (noprec):   reduce Exps --> 
    action 'OLD' (noprec):   shift 125
    action 'COLONCOLON' (noprec):   reduce Exps --> 
    action 'EQEQGT' (noprec):   reduce Exps --> 
    action 'LTEQEQGT' (noprec):   reduce Exps --> 
    action 'TYPE' (noprec):   reduce Exps --> 
    action 'CONST' (noprec):   reduce Exps --> 
    action 'FUNCTION' (noprec):   reduce Exps --> 
    action 'RETURNS' (noprec):   reduce Exps --> 
    action 'AXIOM' (noprec):   reduce Exps --> 
    action 'PROCEDURE' (noprec):   reduce Exps --> 
    action 'IMPLEMENTATION' (noprec):   reduce Exps --> 
    action 'REQUIRES' (noprec):   reduce Exps --> 
    action 'ENSURES' (noprec):   reduce Exps --> 
    action 'LT' (noprec):   reduce Exps --> 
    action 'GT' (noprec):   reduce Exps --> 
    action 'EQ' (noprec):   reduce Exps --> 
    action 'BANG' (explicit right 9999):   shift 107
    action 'COMMA' (noprec):   reduce Exps --> 
    action 'LE' (noprec):   reduce Exps --> 
    action 'GE' (noprec):   reduce Exps --> 
    action 'EQEQ' (noprec):   reduce Exps --> 
    action 'NE' (noprec):   reduce Exps --> 
    action 'PLUS' (noprec):   reduce Exps --> 
    action 'MINUS' (noprec):   reduce Exps --> 
    action 'STAR' (noprec):   reduce Exps --> 
    action 'SLASH' (noprec):   reduce Exps --> 
    action 'PERCENT' (noprec):   reduce Exps --> 
    action 'AMPAMP' (noprec):   reduce Exps --> 
    action 'BARBAR' (noprec):   reduce Exps --> 
    action 'COLONEQ' (noprec):   reduce Exps --> 
    action 'INT' (noprec):   reduce Exps --> 
    action 'BOOL' (noprec):   reduce Exps --> 
    action 'IF' (noprec):   reduce Exps --> 
    action 'RETURN' (noprec):   reduce Exps --> 
    action 'VAR' (noprec):   reduce Exps --> 
    action 'LBRACE' (noprec):   reduce Exps --> 
    action 'RBRACE' (noprec):   reduce Exps --> 
    action 'SEMI' (noprec):   reduce Exps --> 
    action 'COLON' (noprec):   reduce Exps --> 
    action 'LPAREN' (explicit left 10000):   shift 54
    action 'RPAREN' (noprec):   reduce Exps --> 
    action 'LBRACKET' (noprec):   reduce Exps --> 
    action 'RBRACKET' (noprec):   reduce Exps --> 
    action 'LITBOOL' (noprec):   shift 124
    action 'LITINT' (noprec):   shift 123
    action 'QLID' (noprec):   shift 145
    action 'QUID' (noprec):   shift 144
    action 'DLID' (noprec):   shift 143
    action 'DUID' (noprec):   shift 142
    action 'LID' (noprec):   shift 4
    action 'UID' (noprec):   shift 5
    action 'error' (noprec):   reduce Exps --> 
    action '#' (noprec):   reduce Exps --> 
    action '$$' (noprec):   reduce Exps --> 

  immediate action: <none>
 gotos:
    goto ID: 141
    goto Reg: 132
    goto Exp: 78
    goto Exps: 197
    goto AnyId: 128

state 197:
  items:
    Stmt -> 'CALL' 'LID' 'LPAREN' Exps . 'RPAREN' 'SEMI'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (explicit left 10000):   shift 198
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 198:
  items:
    Stmt -> 'CALL' 'LID' 'LPAREN' Exps 'RPAREN' . 'SEMI'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   shift 199
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 199:
  items:
    Stmt -> 'CALL' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI' . 

  actions:
    action 'EOF' (noprec):   reduce Stmt --> 'CALL' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'EAX' (noprec):   reduce Stmt --> 'CALL' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'EBX' (noprec):   reduce Stmt --> 'CALL' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'ECX' (noprec):   reduce Stmt --> 'CALL' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'EDX' (noprec):   reduce Stmt --> 'CALL' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'ESI' (noprec):   reduce Stmt --> 'CALL' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'EDI' (noprec):   reduce Stmt --> 'CALL' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'EBP' (noprec):   reduce Stmt --> 'CALL' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'ESP' (noprec):   reduce Stmt --> 'CALL' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'MODIFIES' (noprec):   reduce Stmt --> 'CALL' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'INVARIANT' (noprec):   reduce Stmt --> 'CALL' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'ASSERT' (noprec):   reduce Stmt --> 'CALL' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'HAVOC' (noprec):   reduce Stmt --> 'CALL' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'GOTO' (noprec):   reduce Stmt --> 'CALL' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'CALL' (noprec):   reduce Stmt --> 'CALL' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'CCALL' (noprec):   reduce Stmt --> 'CALL' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'RET' (noprec):   reduce Stmt --> 'CALL' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'IRET' (noprec):   reduce Stmt --> 'CALL' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'GO' (noprec):   reduce Stmt --> 'CALL' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'FORALL' (noprec):   reduce Stmt --> 'CALL' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'EXISTS' (noprec):   reduce Stmt --> 'CALL' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'OLD' (noprec):   reduce Stmt --> 'CALL' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'COLONCOLON' (noprec):   reduce Stmt --> 'CALL' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'EQEQGT' (noprec):   reduce Stmt --> 'CALL' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'LTEQEQGT' (noprec):   reduce Stmt --> 'CALL' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'TYPE' (noprec):   reduce Stmt --> 'CALL' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'CONST' (noprec):   reduce Stmt --> 'CALL' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'FUNCTION' (noprec):   reduce Stmt --> 'CALL' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'RETURNS' (noprec):   reduce Stmt --> 'CALL' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'AXIOM' (noprec):   reduce Stmt --> 'CALL' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'PROCEDURE' (noprec):   reduce Stmt --> 'CALL' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'IMPLEMENTATION' (noprec):   reduce Stmt --> 'CALL' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'REQUIRES' (noprec):   reduce Stmt --> 'CALL' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'ENSURES' (noprec):   reduce Stmt --> 'CALL' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'LT' (noprec):   reduce Stmt --> 'CALL' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'GT' (noprec):   reduce Stmt --> 'CALL' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'EQ' (noprec):   reduce Stmt --> 'CALL' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'BANG' (noprec):   reduce Stmt --> 'CALL' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'COMMA' (noprec):   reduce Stmt --> 'CALL' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'LE' (noprec):   reduce Stmt --> 'CALL' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'GE' (noprec):   reduce Stmt --> 'CALL' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'EQEQ' (noprec):   reduce Stmt --> 'CALL' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'NE' (noprec):   reduce Stmt --> 'CALL' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'PLUS' (noprec):   reduce Stmt --> 'CALL' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'MINUS' (noprec):   reduce Stmt --> 'CALL' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'STAR' (noprec):   reduce Stmt --> 'CALL' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'SLASH' (noprec):   reduce Stmt --> 'CALL' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'PERCENT' (noprec):   reduce Stmt --> 'CALL' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'AMPAMP' (noprec):   reduce Stmt --> 'CALL' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'BARBAR' (noprec):   reduce Stmt --> 'CALL' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'COLONEQ' (noprec):   reduce Stmt --> 'CALL' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'INT' (noprec):   reduce Stmt --> 'CALL' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'BOOL' (noprec):   reduce Stmt --> 'CALL' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'IF' (noprec):   reduce Stmt --> 'CALL' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'RETURN' (noprec):   reduce Stmt --> 'CALL' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'VAR' (noprec):   reduce Stmt --> 'CALL' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'LBRACE' (noprec):   reduce Stmt --> 'CALL' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'RBRACE' (noprec):   reduce Stmt --> 'CALL' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'SEMI' (noprec):   reduce Stmt --> 'CALL' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'COLON' (noprec):   reduce Stmt --> 'CALL' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'LPAREN' (noprec):   reduce Stmt --> 'CALL' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'RPAREN' (noprec):   reduce Stmt --> 'CALL' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'LBRACKET' (noprec):   reduce Stmt --> 'CALL' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'RBRACKET' (noprec):   reduce Stmt --> 'CALL' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'LITBOOL' (noprec):   reduce Stmt --> 'CALL' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'LITINT' (noprec):   reduce Stmt --> 'CALL' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'QLID' (noprec):   reduce Stmt --> 'CALL' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'QUID' (noprec):   reduce Stmt --> 'CALL' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'DLID' (noprec):   reduce Stmt --> 'CALL' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'DUID' (noprec):   reduce Stmt --> 'CALL' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'LID' (noprec):   reduce Stmt --> 'CALL' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'UID' (noprec):   reduce Stmt --> 'CALL' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'error' (noprec):   reduce Stmt --> 'CALL' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action '#' (noprec):   reduce Stmt --> 'CALL' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action '$$' (noprec):   reduce Stmt --> 'CALL' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'

  immediate action:   reduce Stmt --> 'CALL' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
 gotos:

state 200:
  items:
    Stmt -> 'CALL' DLids . 'COLONEQ' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   shift 201
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 201:
  items:
    Stmt -> 'CALL' DLids 'COLONEQ' . 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   shift 202
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 202:
  items:
    Stmt -> 'CALL' DLids 'COLONEQ' 'LID' . 'LPAREN' Exps 'RPAREN' 'SEMI'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (explicit left 10000):   shift 203
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 203:
  items:
    Stmt -> 'CALL' DLids 'COLONEQ' 'LID' 'LPAREN' . Exps 'RPAREN' 'SEMI'

  actions:
    action 'EOF' (noprec):   reduce Exps --> 
    action 'EAX' (noprec):   shift 14
    action 'EBX' (noprec):   shift 15
    action 'ECX' (noprec):   shift 16
    action 'EDX' (noprec):   shift 17
    action 'ESI' (noprec):   shift 18
    action 'EDI' (noprec):   shift 19
    action 'EBP' (noprec):   shift 20
    action 'ESP' (noprec):   shift 21
    action 'MODIFIES' (noprec):   reduce Exps --> 
    action 'INVARIANT' (noprec):   reduce Exps --> 
    action 'ASSERT' (noprec):   reduce Exps --> 
    action 'HAVOC' (noprec):   reduce Exps --> 
    action 'GOTO' (noprec):   reduce Exps --> 
    action 'CALL' (noprec):   reduce Exps --> 
    action 'CCALL' (noprec):   reduce Exps --> 
    action 'RET' (noprec):   reduce Exps --> 
    action 'IRET' (noprec):   reduce Exps --> 
    action 'GO' (noprec):   reduce Exps --> 
    action 'FORALL' (noprec):   reduce Exps --> 
    action 'EXISTS' (noprec):   reduce Exps --> 
    action 'OLD' (noprec):   shift 125
    action 'COLONCOLON' (noprec):   reduce Exps --> 
    action 'EQEQGT' (noprec):   reduce Exps --> 
    action 'LTEQEQGT' (noprec):   reduce Exps --> 
    action 'TYPE' (noprec):   reduce Exps --> 
    action 'CONST' (noprec):   reduce Exps --> 
    action 'FUNCTION' (noprec):   reduce Exps --> 
    action 'RETURNS' (noprec):   reduce Exps --> 
    action 'AXIOM' (noprec):   reduce Exps --> 
    action 'PROCEDURE' (noprec):   reduce Exps --> 
    action 'IMPLEMENTATION' (noprec):   reduce Exps --> 
    action 'REQUIRES' (noprec):   reduce Exps --> 
    action 'ENSURES' (noprec):   reduce Exps --> 
    action 'LT' (noprec):   reduce Exps --> 
    action 'GT' (noprec):   reduce Exps --> 
    action 'EQ' (noprec):   reduce Exps --> 
    action 'BANG' (explicit right 9999):   shift 107
    action 'COMMA' (noprec):   reduce Exps --> 
    action 'LE' (noprec):   reduce Exps --> 
    action 'GE' (noprec):   reduce Exps --> 
    action 'EQEQ' (noprec):   reduce Exps --> 
    action 'NE' (noprec):   reduce Exps --> 
    action 'PLUS' (noprec):   reduce Exps --> 
    action 'MINUS' (noprec):   reduce Exps --> 
    action 'STAR' (noprec):   reduce Exps --> 
    action 'SLASH' (noprec):   reduce Exps --> 
    action 'PERCENT' (noprec):   reduce Exps --> 
    action 'AMPAMP' (noprec):   reduce Exps --> 
    action 'BARBAR' (noprec):   reduce Exps --> 
    action 'COLONEQ' (noprec):   reduce Exps --> 
    action 'INT' (noprec):   reduce Exps --> 
    action 'BOOL' (noprec):   reduce Exps --> 
    action 'IF' (noprec):   reduce Exps --> 
    action 'RETURN' (noprec):   reduce Exps --> 
    action 'VAR' (noprec):   reduce Exps --> 
    action 'LBRACE' (noprec):   reduce Exps --> 
    action 'RBRACE' (noprec):   reduce Exps --> 
    action 'SEMI' (noprec):   reduce Exps --> 
    action 'COLON' (noprec):   reduce Exps --> 
    action 'LPAREN' (explicit left 10000):   shift 54
    action 'RPAREN' (noprec):   reduce Exps --> 
    action 'LBRACKET' (noprec):   reduce Exps --> 
    action 'RBRACKET' (noprec):   reduce Exps --> 
    action 'LITBOOL' (noprec):   shift 124
    action 'LITINT' (noprec):   shift 123
    action 'QLID' (noprec):   shift 145
    action 'QUID' (noprec):   shift 144
    action 'DLID' (noprec):   shift 143
    action 'DUID' (noprec):   shift 142
    action 'LID' (noprec):   shift 4
    action 'UID' (noprec):   shift 5
    action 'error' (noprec):   reduce Exps --> 
    action '#' (noprec):   reduce Exps --> 
    action '$$' (noprec):   reduce Exps --> 

  immediate action: <none>
 gotos:
    goto ID: 141
    goto Reg: 132
    goto Exp: 78
    goto Exps: 204
    goto AnyId: 128

state 204:
  items:
    Stmt -> 'CALL' DLids 'COLONEQ' 'LID' 'LPAREN' Exps . 'RPAREN' 'SEMI'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (explicit left 10000):   shift 205
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 205:
  items:
    Stmt -> 'CALL' DLids 'COLONEQ' 'LID' 'LPAREN' Exps 'RPAREN' . 'SEMI'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   shift 206
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 206:
  items:
    Stmt -> 'CALL' DLids 'COLONEQ' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI' . 

  actions:
    action 'EOF' (noprec):   reduce Stmt --> 'CALL' DLids 'COLONEQ' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'EAX' (noprec):   reduce Stmt --> 'CALL' DLids 'COLONEQ' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'EBX' (noprec):   reduce Stmt --> 'CALL' DLids 'COLONEQ' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'ECX' (noprec):   reduce Stmt --> 'CALL' DLids 'COLONEQ' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'EDX' (noprec):   reduce Stmt --> 'CALL' DLids 'COLONEQ' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'ESI' (noprec):   reduce Stmt --> 'CALL' DLids 'COLONEQ' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'EDI' (noprec):   reduce Stmt --> 'CALL' DLids 'COLONEQ' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'EBP' (noprec):   reduce Stmt --> 'CALL' DLids 'COLONEQ' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'ESP' (noprec):   reduce Stmt --> 'CALL' DLids 'COLONEQ' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'MODIFIES' (noprec):   reduce Stmt --> 'CALL' DLids 'COLONEQ' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'INVARIANT' (noprec):   reduce Stmt --> 'CALL' DLids 'COLONEQ' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'ASSERT' (noprec):   reduce Stmt --> 'CALL' DLids 'COLONEQ' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'HAVOC' (noprec):   reduce Stmt --> 'CALL' DLids 'COLONEQ' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'GOTO' (noprec):   reduce Stmt --> 'CALL' DLids 'COLONEQ' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'CALL' (noprec):   reduce Stmt --> 'CALL' DLids 'COLONEQ' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'CCALL' (noprec):   reduce Stmt --> 'CALL' DLids 'COLONEQ' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'RET' (noprec):   reduce Stmt --> 'CALL' DLids 'COLONEQ' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'IRET' (noprec):   reduce Stmt --> 'CALL' DLids 'COLONEQ' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'GO' (noprec):   reduce Stmt --> 'CALL' DLids 'COLONEQ' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'FORALL' (noprec):   reduce Stmt --> 'CALL' DLids 'COLONEQ' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'EXISTS' (noprec):   reduce Stmt --> 'CALL' DLids 'COLONEQ' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'OLD' (noprec):   reduce Stmt --> 'CALL' DLids 'COLONEQ' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'COLONCOLON' (noprec):   reduce Stmt --> 'CALL' DLids 'COLONEQ' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'EQEQGT' (noprec):   reduce Stmt --> 'CALL' DLids 'COLONEQ' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'LTEQEQGT' (noprec):   reduce Stmt --> 'CALL' DLids 'COLONEQ' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'TYPE' (noprec):   reduce Stmt --> 'CALL' DLids 'COLONEQ' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'CONST' (noprec):   reduce Stmt --> 'CALL' DLids 'COLONEQ' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'FUNCTION' (noprec):   reduce Stmt --> 'CALL' DLids 'COLONEQ' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'RETURNS' (noprec):   reduce Stmt --> 'CALL' DLids 'COLONEQ' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'AXIOM' (noprec):   reduce Stmt --> 'CALL' DLids 'COLONEQ' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'PROCEDURE' (noprec):   reduce Stmt --> 'CALL' DLids 'COLONEQ' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'IMPLEMENTATION' (noprec):   reduce Stmt --> 'CALL' DLids 'COLONEQ' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'REQUIRES' (noprec):   reduce Stmt --> 'CALL' DLids 'COLONEQ' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'ENSURES' (noprec):   reduce Stmt --> 'CALL' DLids 'COLONEQ' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'LT' (noprec):   reduce Stmt --> 'CALL' DLids 'COLONEQ' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'GT' (noprec):   reduce Stmt --> 'CALL' DLids 'COLONEQ' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'EQ' (noprec):   reduce Stmt --> 'CALL' DLids 'COLONEQ' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'BANG' (noprec):   reduce Stmt --> 'CALL' DLids 'COLONEQ' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'COMMA' (noprec):   reduce Stmt --> 'CALL' DLids 'COLONEQ' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'LE' (noprec):   reduce Stmt --> 'CALL' DLids 'COLONEQ' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'GE' (noprec):   reduce Stmt --> 'CALL' DLids 'COLONEQ' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'EQEQ' (noprec):   reduce Stmt --> 'CALL' DLids 'COLONEQ' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'NE' (noprec):   reduce Stmt --> 'CALL' DLids 'COLONEQ' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'PLUS' (noprec):   reduce Stmt --> 'CALL' DLids 'COLONEQ' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'MINUS' (noprec):   reduce Stmt --> 'CALL' DLids 'COLONEQ' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'STAR' (noprec):   reduce Stmt --> 'CALL' DLids 'COLONEQ' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'SLASH' (noprec):   reduce Stmt --> 'CALL' DLids 'COLONEQ' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'PERCENT' (noprec):   reduce Stmt --> 'CALL' DLids 'COLONEQ' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'AMPAMP' (noprec):   reduce Stmt --> 'CALL' DLids 'COLONEQ' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'BARBAR' (noprec):   reduce Stmt --> 'CALL' DLids 'COLONEQ' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'COLONEQ' (noprec):   reduce Stmt --> 'CALL' DLids 'COLONEQ' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'INT' (noprec):   reduce Stmt --> 'CALL' DLids 'COLONEQ' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'BOOL' (noprec):   reduce Stmt --> 'CALL' DLids 'COLONEQ' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'IF' (noprec):   reduce Stmt --> 'CALL' DLids 'COLONEQ' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'RETURN' (noprec):   reduce Stmt --> 'CALL' DLids 'COLONEQ' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'VAR' (noprec):   reduce Stmt --> 'CALL' DLids 'COLONEQ' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'LBRACE' (noprec):   reduce Stmt --> 'CALL' DLids 'COLONEQ' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'RBRACE' (noprec):   reduce Stmt --> 'CALL' DLids 'COLONEQ' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'SEMI' (noprec):   reduce Stmt --> 'CALL' DLids 'COLONEQ' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'COLON' (noprec):   reduce Stmt --> 'CALL' DLids 'COLONEQ' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'LPAREN' (noprec):   reduce Stmt --> 'CALL' DLids 'COLONEQ' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'RPAREN' (noprec):   reduce Stmt --> 'CALL' DLids 'COLONEQ' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'LBRACKET' (noprec):   reduce Stmt --> 'CALL' DLids 'COLONEQ' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'RBRACKET' (noprec):   reduce Stmt --> 'CALL' DLids 'COLONEQ' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'LITBOOL' (noprec):   reduce Stmt --> 'CALL' DLids 'COLONEQ' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'LITINT' (noprec):   reduce Stmt --> 'CALL' DLids 'COLONEQ' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'QLID' (noprec):   reduce Stmt --> 'CALL' DLids 'COLONEQ' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'QUID' (noprec):   reduce Stmt --> 'CALL' DLids 'COLONEQ' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'DLID' (noprec):   reduce Stmt --> 'CALL' DLids 'COLONEQ' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'DUID' (noprec):   reduce Stmt --> 'CALL' DLids 'COLONEQ' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'LID' (noprec):   reduce Stmt --> 'CALL' DLids 'COLONEQ' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'UID' (noprec):   reduce Stmt --> 'CALL' DLids 'COLONEQ' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'error' (noprec):   reduce Stmt --> 'CALL' DLids 'COLONEQ' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action '#' (noprec):   reduce Stmt --> 'CALL' DLids 'COLONEQ' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action '$$' (noprec):   reduce Stmt --> 'CALL' DLids 'COLONEQ' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'

  immediate action:   reduce Stmt --> 'CALL' DLids 'COLONEQ' 'LID' 'LPAREN' Exps 'RPAREN' 'SEMI'
 gotos:

state 207:
  items:
    Stmt -> 'CALL' 'CCALL' . 'LPAREN' 'RPAREN' 'SEMI' 'CALL' DLidsEqOpt 'UID' 'LPAREN' Exps 'RPAREN' 'SEMI'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (explicit left 10000):   shift 208
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 208:
  items:
    Stmt -> 'CALL' 'CCALL' 'LPAREN' . 'RPAREN' 'SEMI' 'CALL' DLidsEqOpt 'UID' 'LPAREN' Exps 'RPAREN' 'SEMI'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (explicit left 10000):   shift 209
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 209:
  items:
    Stmt -> 'CALL' 'CCALL' 'LPAREN' 'RPAREN' . 'SEMI' 'CALL' DLidsEqOpt 'UID' 'LPAREN' Exps 'RPAREN' 'SEMI'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   shift 210
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 210:
  items:
    Stmt -> 'CALL' 'CCALL' 'LPAREN' 'RPAREN' 'SEMI' . 'CALL' DLidsEqOpt 'UID' 'LPAREN' Exps 'RPAREN' 'SEMI'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   shift 211
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 211:
  items:
    Stmt -> 'CALL' 'CCALL' 'LPAREN' 'RPAREN' 'SEMI' 'CALL' . DLidsEqOpt 'UID' 'LPAREN' Exps 'RPAREN' 'SEMI'

  actions:
    action 'EOF' (noprec):   reduce DLids --> 
    action 'EAX' (noprec):   reduce DLids --> 
    action 'EBX' (noprec):   reduce DLids --> 
    action 'ECX' (noprec):   reduce DLids --> 
    action 'EDX' (noprec):   reduce DLids --> 
    action 'ESI' (noprec):   reduce DLids --> 
    action 'EDI' (noprec):   reduce DLids --> 
    action 'EBP' (noprec):   reduce DLids --> 
    action 'ESP' (noprec):   reduce DLids --> 
    action 'MODIFIES' (noprec):   reduce DLids --> 
    action 'INVARIANT' (noprec):   reduce DLids --> 
    action 'ASSERT' (noprec):   reduce DLids --> 
    action 'HAVOC' (noprec):   reduce DLids --> 
    action 'GOTO' (noprec):   reduce DLids --> 
    action 'CALL' (noprec):   reduce DLids --> 
    action 'CCALL' (noprec):   reduce DLids --> 
    action 'RET' (noprec):   reduce DLids --> 
    action 'IRET' (noprec):   reduce DLids --> 
    action 'GO' (noprec):   reduce DLids --> 
    action 'FORALL' (noprec):   reduce DLids --> 
    action 'EXISTS' (noprec):   reduce DLids --> 
    action 'OLD' (noprec):   reduce DLids --> 
    action 'COLONCOLON' (noprec):   reduce DLids --> 
    action 'EQEQGT' (noprec):   reduce DLids --> 
    action 'LTEQEQGT' (noprec):   reduce DLids --> 
    action 'TYPE' (noprec):   reduce DLids --> 
    action 'CONST' (noprec):   reduce DLids --> 
    action 'FUNCTION' (noprec):   reduce DLids --> 
    action 'RETURNS' (noprec):   reduce DLids --> 
    action 'AXIOM' (noprec):   reduce DLids --> 
    action 'PROCEDURE' (noprec):   reduce DLids --> 
    action 'IMPLEMENTATION' (noprec):   reduce DLids --> 
    action 'REQUIRES' (noprec):   reduce DLids --> 
    action 'ENSURES' (noprec):   reduce DLids --> 
    action 'LT' (noprec):   reduce DLids --> 
    action 'GT' (noprec):   reduce DLids --> 
    action 'EQ' (noprec):   reduce DLids --> 
    action 'BANG' (noprec):   reduce DLids --> 
    action 'COMMA' (noprec):   reduce DLids --> 
    action 'LE' (noprec):   reduce DLids --> 
    action 'GE' (noprec):   reduce DLids --> 
    action 'EQEQ' (noprec):   reduce DLids --> 
    action 'NE' (noprec):   reduce DLids --> 
    action 'PLUS' (noprec):   reduce DLids --> 
    action 'MINUS' (noprec):   reduce DLids --> 
    action 'STAR' (noprec):   reduce DLids --> 
    action 'SLASH' (noprec):   reduce DLids --> 
    action 'PERCENT' (noprec):   reduce DLids --> 
    action 'AMPAMP' (noprec):   reduce DLids --> 
    action 'BARBAR' (noprec):   reduce DLids --> 
    action 'COLONEQ' (noprec):   reduce DLids --> 
    action 'INT' (noprec):   reduce DLids --> 
    action 'BOOL' (noprec):   reduce DLids --> 
    action 'IF' (noprec):   reduce DLids --> 
    action 'RETURN' (noprec):   reduce DLids --> 
    action 'VAR' (noprec):   reduce DLids --> 
    action 'LBRACE' (noprec):   reduce DLids --> 
    action 'RBRACE' (noprec):   reduce DLids --> 
    action 'SEMI' (noprec):   reduce DLids --> 
    action 'COLON' (noprec):   reduce DLids --> 
    action 'LPAREN' (noprec):   reduce DLids --> 
    action 'RPAREN' (noprec):   reduce DLids --> 
    action 'LBRACKET' (noprec):   reduce DLids --> 
    action 'RBRACKET' (noprec):   reduce DLids --> 
    action 'LITBOOL' (noprec):   reduce DLids --> 
    action 'LITINT' (noprec):   reduce DLids --> 
    action 'QLID' (noprec):   reduce DLids --> 
    action 'QUID' (noprec):   reduce DLids --> 
    action 'DLID' (noprec):   shift 135
    action 'DUID' (noprec):   reduce DLids --> 
    action 'LID' (noprec):   reduce DLids --> 
    action 'UID' (noprec):   reduce DLidsEqOpt --> 
    action 'error' (noprec):   reduce DLids --> 
    action '#' (noprec):   reduce DLids --> 
    action '$$' (noprec):   reduce DLids --> 

  immediate action: <none>
 gotos:
    goto DLids: 151
    goto DLidsEqOpt: 212

state 212:
  items:
    Stmt -> 'CALL' 'CCALL' 'LPAREN' 'RPAREN' 'SEMI' 'CALL' DLidsEqOpt . 'UID' 'LPAREN' Exps 'RPAREN' 'SEMI'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   shift 213
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 213:
  items:
    Stmt -> 'CALL' 'CCALL' 'LPAREN' 'RPAREN' 'SEMI' 'CALL' DLidsEqOpt 'UID' . 'LPAREN' Exps 'RPAREN' 'SEMI'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (explicit left 10000):   shift 214
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 214:
  items:
    Stmt -> 'CALL' 'CCALL' 'LPAREN' 'RPAREN' 'SEMI' 'CALL' DLidsEqOpt 'UID' 'LPAREN' . Exps 'RPAREN' 'SEMI'

  actions:
    action 'EOF' (noprec):   reduce Exps --> 
    action 'EAX' (noprec):   shift 14
    action 'EBX' (noprec):   shift 15
    action 'ECX' (noprec):   shift 16
    action 'EDX' (noprec):   shift 17
    action 'ESI' (noprec):   shift 18
    action 'EDI' (noprec):   shift 19
    action 'EBP' (noprec):   shift 20
    action 'ESP' (noprec):   shift 21
    action 'MODIFIES' (noprec):   reduce Exps --> 
    action 'INVARIANT' (noprec):   reduce Exps --> 
    action 'ASSERT' (noprec):   reduce Exps --> 
    action 'HAVOC' (noprec):   reduce Exps --> 
    action 'GOTO' (noprec):   reduce Exps --> 
    action 'CALL' (noprec):   reduce Exps --> 
    action 'CCALL' (noprec):   reduce Exps --> 
    action 'RET' (noprec):   reduce Exps --> 
    action 'IRET' (noprec):   reduce Exps --> 
    action 'GO' (noprec):   reduce Exps --> 
    action 'FORALL' (noprec):   reduce Exps --> 
    action 'EXISTS' (noprec):   reduce Exps --> 
    action 'OLD' (noprec):   shift 125
    action 'COLONCOLON' (noprec):   reduce Exps --> 
    action 'EQEQGT' (noprec):   reduce Exps --> 
    action 'LTEQEQGT' (noprec):   reduce Exps --> 
    action 'TYPE' (noprec):   reduce Exps --> 
    action 'CONST' (noprec):   reduce Exps --> 
    action 'FUNCTION' (noprec):   reduce Exps --> 
    action 'RETURNS' (noprec):   reduce Exps --> 
    action 'AXIOM' (noprec):   reduce Exps --> 
    action 'PROCEDURE' (noprec):   reduce Exps --> 
    action 'IMPLEMENTATION' (noprec):   reduce Exps --> 
    action 'REQUIRES' (noprec):   reduce Exps --> 
    action 'ENSURES' (noprec):   reduce Exps --> 
    action 'LT' (noprec):   reduce Exps --> 
    action 'GT' (noprec):   reduce Exps --> 
    action 'EQ' (noprec):   reduce Exps --> 
    action 'BANG' (explicit right 9999):   shift 107
    action 'COMMA' (noprec):   reduce Exps --> 
    action 'LE' (noprec):   reduce Exps --> 
    action 'GE' (noprec):   reduce Exps --> 
    action 'EQEQ' (noprec):   reduce Exps --> 
    action 'NE' (noprec):   reduce Exps --> 
    action 'PLUS' (noprec):   reduce Exps --> 
    action 'MINUS' (noprec):   reduce Exps --> 
    action 'STAR' (noprec):   reduce Exps --> 
    action 'SLASH' (noprec):   reduce Exps --> 
    action 'PERCENT' (noprec):   reduce Exps --> 
    action 'AMPAMP' (noprec):   reduce Exps --> 
    action 'BARBAR' (noprec):   reduce Exps --> 
    action 'COLONEQ' (noprec):   reduce Exps --> 
    action 'INT' (noprec):   reduce Exps --> 
    action 'BOOL' (noprec):   reduce Exps --> 
    action 'IF' (noprec):   reduce Exps --> 
    action 'RETURN' (noprec):   reduce Exps --> 
    action 'VAR' (noprec):   reduce Exps --> 
    action 'LBRACE' (noprec):   reduce Exps --> 
    action 'RBRACE' (noprec):   reduce Exps --> 
    action 'SEMI' (noprec):   reduce Exps --> 
    action 'COLON' (noprec):   reduce Exps --> 
    action 'LPAREN' (explicit left 10000):   shift 54
    action 'RPAREN' (noprec):   reduce Exps --> 
    action 'LBRACKET' (noprec):   reduce Exps --> 
    action 'RBRACKET' (noprec):   reduce Exps --> 
    action 'LITBOOL' (noprec):   shift 124
    action 'LITINT' (noprec):   shift 123
    action 'QLID' (noprec):   shift 145
    action 'QUID' (noprec):   shift 144
    action 'DLID' (noprec):   shift 143
    action 'DUID' (noprec):   shift 142
    action 'LID' (noprec):   shift 4
    action 'UID' (noprec):   shift 5
    action 'error' (noprec):   reduce Exps --> 
    action '#' (noprec):   reduce Exps --> 
    action '$$' (noprec):   reduce Exps --> 

  immediate action: <none>
 gotos:
    goto ID: 141
    goto Reg: 132
    goto Exp: 78
    goto Exps: 215
    goto AnyId: 128

state 215:
  items:
    Stmt -> 'CALL' 'CCALL' 'LPAREN' 'RPAREN' 'SEMI' 'CALL' DLidsEqOpt 'UID' 'LPAREN' Exps . 'RPAREN' 'SEMI'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (explicit left 10000):   shift 216
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 216:
  items:
    Stmt -> 'CALL' 'CCALL' 'LPAREN' 'RPAREN' 'SEMI' 'CALL' DLidsEqOpt 'UID' 'LPAREN' Exps 'RPAREN' . 'SEMI'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   shift 217
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 217:
  items:
    Stmt -> 'CALL' 'CCALL' 'LPAREN' 'RPAREN' 'SEMI' 'CALL' DLidsEqOpt 'UID' 'LPAREN' Exps 'RPAREN' 'SEMI' . 

  actions:
    action 'EOF' (noprec):   reduce Stmt --> 'CALL' 'CCALL' 'LPAREN' 'RPAREN' 'SEMI' 'CALL' DLidsEqOpt 'UID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'EAX' (noprec):   reduce Stmt --> 'CALL' 'CCALL' 'LPAREN' 'RPAREN' 'SEMI' 'CALL' DLidsEqOpt 'UID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'EBX' (noprec):   reduce Stmt --> 'CALL' 'CCALL' 'LPAREN' 'RPAREN' 'SEMI' 'CALL' DLidsEqOpt 'UID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'ECX' (noprec):   reduce Stmt --> 'CALL' 'CCALL' 'LPAREN' 'RPAREN' 'SEMI' 'CALL' DLidsEqOpt 'UID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'EDX' (noprec):   reduce Stmt --> 'CALL' 'CCALL' 'LPAREN' 'RPAREN' 'SEMI' 'CALL' DLidsEqOpt 'UID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'ESI' (noprec):   reduce Stmt --> 'CALL' 'CCALL' 'LPAREN' 'RPAREN' 'SEMI' 'CALL' DLidsEqOpt 'UID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'EDI' (noprec):   reduce Stmt --> 'CALL' 'CCALL' 'LPAREN' 'RPAREN' 'SEMI' 'CALL' DLidsEqOpt 'UID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'EBP' (noprec):   reduce Stmt --> 'CALL' 'CCALL' 'LPAREN' 'RPAREN' 'SEMI' 'CALL' DLidsEqOpt 'UID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'ESP' (noprec):   reduce Stmt --> 'CALL' 'CCALL' 'LPAREN' 'RPAREN' 'SEMI' 'CALL' DLidsEqOpt 'UID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'MODIFIES' (noprec):   reduce Stmt --> 'CALL' 'CCALL' 'LPAREN' 'RPAREN' 'SEMI' 'CALL' DLidsEqOpt 'UID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'INVARIANT' (noprec):   reduce Stmt --> 'CALL' 'CCALL' 'LPAREN' 'RPAREN' 'SEMI' 'CALL' DLidsEqOpt 'UID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'ASSERT' (noprec):   reduce Stmt --> 'CALL' 'CCALL' 'LPAREN' 'RPAREN' 'SEMI' 'CALL' DLidsEqOpt 'UID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'HAVOC' (noprec):   reduce Stmt --> 'CALL' 'CCALL' 'LPAREN' 'RPAREN' 'SEMI' 'CALL' DLidsEqOpt 'UID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'GOTO' (noprec):   reduce Stmt --> 'CALL' 'CCALL' 'LPAREN' 'RPAREN' 'SEMI' 'CALL' DLidsEqOpt 'UID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'CALL' (noprec):   reduce Stmt --> 'CALL' 'CCALL' 'LPAREN' 'RPAREN' 'SEMI' 'CALL' DLidsEqOpt 'UID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'CCALL' (noprec):   reduce Stmt --> 'CALL' 'CCALL' 'LPAREN' 'RPAREN' 'SEMI' 'CALL' DLidsEqOpt 'UID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'RET' (noprec):   reduce Stmt --> 'CALL' 'CCALL' 'LPAREN' 'RPAREN' 'SEMI' 'CALL' DLidsEqOpt 'UID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'IRET' (noprec):   reduce Stmt --> 'CALL' 'CCALL' 'LPAREN' 'RPAREN' 'SEMI' 'CALL' DLidsEqOpt 'UID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'GO' (noprec):   reduce Stmt --> 'CALL' 'CCALL' 'LPAREN' 'RPAREN' 'SEMI' 'CALL' DLidsEqOpt 'UID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'FORALL' (noprec):   reduce Stmt --> 'CALL' 'CCALL' 'LPAREN' 'RPAREN' 'SEMI' 'CALL' DLidsEqOpt 'UID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'EXISTS' (noprec):   reduce Stmt --> 'CALL' 'CCALL' 'LPAREN' 'RPAREN' 'SEMI' 'CALL' DLidsEqOpt 'UID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'OLD' (noprec):   reduce Stmt --> 'CALL' 'CCALL' 'LPAREN' 'RPAREN' 'SEMI' 'CALL' DLidsEqOpt 'UID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'COLONCOLON' (noprec):   reduce Stmt --> 'CALL' 'CCALL' 'LPAREN' 'RPAREN' 'SEMI' 'CALL' DLidsEqOpt 'UID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'EQEQGT' (noprec):   reduce Stmt --> 'CALL' 'CCALL' 'LPAREN' 'RPAREN' 'SEMI' 'CALL' DLidsEqOpt 'UID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'LTEQEQGT' (noprec):   reduce Stmt --> 'CALL' 'CCALL' 'LPAREN' 'RPAREN' 'SEMI' 'CALL' DLidsEqOpt 'UID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'TYPE' (noprec):   reduce Stmt --> 'CALL' 'CCALL' 'LPAREN' 'RPAREN' 'SEMI' 'CALL' DLidsEqOpt 'UID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'CONST' (noprec):   reduce Stmt --> 'CALL' 'CCALL' 'LPAREN' 'RPAREN' 'SEMI' 'CALL' DLidsEqOpt 'UID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'FUNCTION' (noprec):   reduce Stmt --> 'CALL' 'CCALL' 'LPAREN' 'RPAREN' 'SEMI' 'CALL' DLidsEqOpt 'UID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'RETURNS' (noprec):   reduce Stmt --> 'CALL' 'CCALL' 'LPAREN' 'RPAREN' 'SEMI' 'CALL' DLidsEqOpt 'UID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'AXIOM' (noprec):   reduce Stmt --> 'CALL' 'CCALL' 'LPAREN' 'RPAREN' 'SEMI' 'CALL' DLidsEqOpt 'UID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'PROCEDURE' (noprec):   reduce Stmt --> 'CALL' 'CCALL' 'LPAREN' 'RPAREN' 'SEMI' 'CALL' DLidsEqOpt 'UID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'IMPLEMENTATION' (noprec):   reduce Stmt --> 'CALL' 'CCALL' 'LPAREN' 'RPAREN' 'SEMI' 'CALL' DLidsEqOpt 'UID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'REQUIRES' (noprec):   reduce Stmt --> 'CALL' 'CCALL' 'LPAREN' 'RPAREN' 'SEMI' 'CALL' DLidsEqOpt 'UID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'ENSURES' (noprec):   reduce Stmt --> 'CALL' 'CCALL' 'LPAREN' 'RPAREN' 'SEMI' 'CALL' DLidsEqOpt 'UID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'LT' (noprec):   reduce Stmt --> 'CALL' 'CCALL' 'LPAREN' 'RPAREN' 'SEMI' 'CALL' DLidsEqOpt 'UID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'GT' (noprec):   reduce Stmt --> 'CALL' 'CCALL' 'LPAREN' 'RPAREN' 'SEMI' 'CALL' DLidsEqOpt 'UID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'EQ' (noprec):   reduce Stmt --> 'CALL' 'CCALL' 'LPAREN' 'RPAREN' 'SEMI' 'CALL' DLidsEqOpt 'UID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'BANG' (noprec):   reduce Stmt --> 'CALL' 'CCALL' 'LPAREN' 'RPAREN' 'SEMI' 'CALL' DLidsEqOpt 'UID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'COMMA' (noprec):   reduce Stmt --> 'CALL' 'CCALL' 'LPAREN' 'RPAREN' 'SEMI' 'CALL' DLidsEqOpt 'UID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'LE' (noprec):   reduce Stmt --> 'CALL' 'CCALL' 'LPAREN' 'RPAREN' 'SEMI' 'CALL' DLidsEqOpt 'UID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'GE' (noprec):   reduce Stmt --> 'CALL' 'CCALL' 'LPAREN' 'RPAREN' 'SEMI' 'CALL' DLidsEqOpt 'UID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'EQEQ' (noprec):   reduce Stmt --> 'CALL' 'CCALL' 'LPAREN' 'RPAREN' 'SEMI' 'CALL' DLidsEqOpt 'UID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'NE' (noprec):   reduce Stmt --> 'CALL' 'CCALL' 'LPAREN' 'RPAREN' 'SEMI' 'CALL' DLidsEqOpt 'UID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'PLUS' (noprec):   reduce Stmt --> 'CALL' 'CCALL' 'LPAREN' 'RPAREN' 'SEMI' 'CALL' DLidsEqOpt 'UID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'MINUS' (noprec):   reduce Stmt --> 'CALL' 'CCALL' 'LPAREN' 'RPAREN' 'SEMI' 'CALL' DLidsEqOpt 'UID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'STAR' (noprec):   reduce Stmt --> 'CALL' 'CCALL' 'LPAREN' 'RPAREN' 'SEMI' 'CALL' DLidsEqOpt 'UID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'SLASH' (noprec):   reduce Stmt --> 'CALL' 'CCALL' 'LPAREN' 'RPAREN' 'SEMI' 'CALL' DLidsEqOpt 'UID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'PERCENT' (noprec):   reduce Stmt --> 'CALL' 'CCALL' 'LPAREN' 'RPAREN' 'SEMI' 'CALL' DLidsEqOpt 'UID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'AMPAMP' (noprec):   reduce Stmt --> 'CALL' 'CCALL' 'LPAREN' 'RPAREN' 'SEMI' 'CALL' DLidsEqOpt 'UID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'BARBAR' (noprec):   reduce Stmt --> 'CALL' 'CCALL' 'LPAREN' 'RPAREN' 'SEMI' 'CALL' DLidsEqOpt 'UID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'COLONEQ' (noprec):   reduce Stmt --> 'CALL' 'CCALL' 'LPAREN' 'RPAREN' 'SEMI' 'CALL' DLidsEqOpt 'UID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'INT' (noprec):   reduce Stmt --> 'CALL' 'CCALL' 'LPAREN' 'RPAREN' 'SEMI' 'CALL' DLidsEqOpt 'UID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'BOOL' (noprec):   reduce Stmt --> 'CALL' 'CCALL' 'LPAREN' 'RPAREN' 'SEMI' 'CALL' DLidsEqOpt 'UID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'IF' (noprec):   reduce Stmt --> 'CALL' 'CCALL' 'LPAREN' 'RPAREN' 'SEMI' 'CALL' DLidsEqOpt 'UID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'RETURN' (noprec):   reduce Stmt --> 'CALL' 'CCALL' 'LPAREN' 'RPAREN' 'SEMI' 'CALL' DLidsEqOpt 'UID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'VAR' (noprec):   reduce Stmt --> 'CALL' 'CCALL' 'LPAREN' 'RPAREN' 'SEMI' 'CALL' DLidsEqOpt 'UID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'LBRACE' (noprec):   reduce Stmt --> 'CALL' 'CCALL' 'LPAREN' 'RPAREN' 'SEMI' 'CALL' DLidsEqOpt 'UID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'RBRACE' (noprec):   reduce Stmt --> 'CALL' 'CCALL' 'LPAREN' 'RPAREN' 'SEMI' 'CALL' DLidsEqOpt 'UID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'SEMI' (noprec):   reduce Stmt --> 'CALL' 'CCALL' 'LPAREN' 'RPAREN' 'SEMI' 'CALL' DLidsEqOpt 'UID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'COLON' (noprec):   reduce Stmt --> 'CALL' 'CCALL' 'LPAREN' 'RPAREN' 'SEMI' 'CALL' DLidsEqOpt 'UID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'LPAREN' (noprec):   reduce Stmt --> 'CALL' 'CCALL' 'LPAREN' 'RPAREN' 'SEMI' 'CALL' DLidsEqOpt 'UID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'RPAREN' (noprec):   reduce Stmt --> 'CALL' 'CCALL' 'LPAREN' 'RPAREN' 'SEMI' 'CALL' DLidsEqOpt 'UID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'LBRACKET' (noprec):   reduce Stmt --> 'CALL' 'CCALL' 'LPAREN' 'RPAREN' 'SEMI' 'CALL' DLidsEqOpt 'UID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'RBRACKET' (noprec):   reduce Stmt --> 'CALL' 'CCALL' 'LPAREN' 'RPAREN' 'SEMI' 'CALL' DLidsEqOpt 'UID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'LITBOOL' (noprec):   reduce Stmt --> 'CALL' 'CCALL' 'LPAREN' 'RPAREN' 'SEMI' 'CALL' DLidsEqOpt 'UID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'LITINT' (noprec):   reduce Stmt --> 'CALL' 'CCALL' 'LPAREN' 'RPAREN' 'SEMI' 'CALL' DLidsEqOpt 'UID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'QLID' (noprec):   reduce Stmt --> 'CALL' 'CCALL' 'LPAREN' 'RPAREN' 'SEMI' 'CALL' DLidsEqOpt 'UID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'QUID' (noprec):   reduce Stmt --> 'CALL' 'CCALL' 'LPAREN' 'RPAREN' 'SEMI' 'CALL' DLidsEqOpt 'UID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'DLID' (noprec):   reduce Stmt --> 'CALL' 'CCALL' 'LPAREN' 'RPAREN' 'SEMI' 'CALL' DLidsEqOpt 'UID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'DUID' (noprec):   reduce Stmt --> 'CALL' 'CCALL' 'LPAREN' 'RPAREN' 'SEMI' 'CALL' DLidsEqOpt 'UID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'LID' (noprec):   reduce Stmt --> 'CALL' 'CCALL' 'LPAREN' 'RPAREN' 'SEMI' 'CALL' DLidsEqOpt 'UID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'UID' (noprec):   reduce Stmt --> 'CALL' 'CCALL' 'LPAREN' 'RPAREN' 'SEMI' 'CALL' DLidsEqOpt 'UID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action 'error' (noprec):   reduce Stmt --> 'CALL' 'CCALL' 'LPAREN' 'RPAREN' 'SEMI' 'CALL' DLidsEqOpt 'UID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action '#' (noprec):   reduce Stmt --> 'CALL' 'CCALL' 'LPAREN' 'RPAREN' 'SEMI' 'CALL' DLidsEqOpt 'UID' 'LPAREN' Exps 'RPAREN' 'SEMI'
    action '$$' (noprec):   reduce Stmt --> 'CALL' 'CCALL' 'LPAREN' 'RPAREN' 'SEMI' 'CALL' DLidsEqOpt 'UID' 'LPAREN' Exps 'RPAREN' 'SEMI'

  immediate action:   reduce Stmt --> 'CALL' 'CCALL' 'LPAREN' 'RPAREN' 'SEMI' 'CALL' DLidsEqOpt 'UID' 'LPAREN' Exps 'RPAREN' 'SEMI'
 gotos:

state 218:
  items:
    Stmt -> 'CALL' 'UID' 'LPAREN' . SrcOperands 'RPAREN' 'SEMI'

  actions:
    action 'EOF' (noprec):   reduce SrcOperands --> 
    action 'EAX' (noprec):   shift 14
    action 'EBX' (noprec):   shift 15
    action 'ECX' (noprec):   shift 16
    action 'EDX' (noprec):   shift 17
    action 'ESI' (noprec):   shift 18
    action 'EDI' (noprec):   shift 19
    action 'EBP' (noprec):   shift 20
    action 'ESP' (noprec):   shift 21
    action 'MODIFIES' (noprec):   reduce SrcOperands --> 
    action 'INVARIANT' (noprec):   reduce SrcOperands --> 
    action 'ASSERT' (noprec):   reduce SrcOperands --> 
    action 'HAVOC' (noprec):   reduce SrcOperands --> 
    action 'GOTO' (noprec):   reduce SrcOperands --> 
    action 'CALL' (noprec):   reduce SrcOperands --> 
    action 'CCALL' (noprec):   reduce SrcOperands --> 
    action 'RET' (noprec):   reduce SrcOperands --> 
    action 'IRET' (noprec):   reduce SrcOperands --> 
    action 'GO' (noprec):   reduce SrcOperands --> 
    action 'FORALL' (noprec):   reduce SrcOperands --> 
    action 'EXISTS' (noprec):   reduce SrcOperands --> 
    action 'OLD' (noprec):   reduce SrcOperands --> 
    action 'COLONCOLON' (noprec):   reduce SrcOperands --> 
    action 'EQEQGT' (noprec):   reduce SrcOperands --> 
    action 'LTEQEQGT' (noprec):   reduce SrcOperands --> 
    action 'TYPE' (noprec):   reduce SrcOperands --> 
    action 'CONST' (noprec):   reduce SrcOperands --> 
    action 'FUNCTION' (noprec):   reduce SrcOperands --> 
    action 'RETURNS' (noprec):   reduce SrcOperands --> 
    action 'AXIOM' (noprec):   reduce SrcOperands --> 
    action 'PROCEDURE' (noprec):   reduce SrcOperands --> 
    action 'IMPLEMENTATION' (noprec):   reduce SrcOperands --> 
    action 'REQUIRES' (noprec):   reduce SrcOperands --> 
    action 'ENSURES' (noprec):   reduce SrcOperands --> 
    action 'LT' (noprec):   reduce SrcOperands --> 
    action 'GT' (noprec):   reduce SrcOperands --> 
    action 'EQ' (noprec):   reduce SrcOperands --> 
    action 'BANG' (noprec):   reduce SrcOperands --> 
    action 'COMMA' (noprec):   reduce SrcOperands --> 
    action 'LE' (noprec):   reduce SrcOperands --> 
    action 'GE' (noprec):   reduce SrcOperands --> 
    action 'EQEQ' (noprec):   reduce SrcOperands --> 
    action 'NE' (noprec):   reduce SrcOperands --> 
    action 'PLUS' (noprec):   reduce SrcOperands --> 
    action 'MINUS' (noprec):   reduce SrcOperands --> 
    action 'STAR' (noprec):   reduce SrcOperands --> 
    action 'SLASH' (noprec):   reduce SrcOperands --> 
    action 'PERCENT' (noprec):   reduce SrcOperands --> 
    action 'AMPAMP' (noprec):   reduce SrcOperands --> 
    action 'BARBAR' (noprec):   reduce SrcOperands --> 
    action 'COLONEQ' (noprec):   reduce SrcOperands --> 
    action 'INT' (noprec):   reduce SrcOperands --> 
    action 'BOOL' (noprec):   reduce SrcOperands --> 
    action 'IF' (noprec):   reduce SrcOperands --> 
    action 'RETURN' (noprec):   reduce SrcOperands --> 
    action 'VAR' (noprec):   reduce SrcOperands --> 
    action 'LBRACE' (noprec):   reduce SrcOperands --> 
    action 'RBRACE' (noprec):   reduce SrcOperands --> 
    action 'SEMI' (noprec):   reduce SrcOperands --> 
    action 'COLON' (noprec):   reduce SrcOperands --> 
    action 'LPAREN' (explicit left 10000):   shift 41
    action 'RPAREN' (noprec):   reduce SrcOperands --> 
    action 'LBRACKET' (noprec):   reduce SrcOperands --> 
    action 'RBRACKET' (noprec):   reduce SrcOperands --> 
    action 'LITBOOL' (noprec):   reduce SrcOperands --> 
    action 'LITINT' (noprec):   shift 22
    action 'QLID' (noprec):   shift 32
    action 'QUID' (noprec):   shift 23
    action 'DLID' (noprec):   reduce SrcOperands --> 
    action 'DUID' (noprec):   reduce SrcOperands --> 
    action 'LID' (noprec):   shift 28
    action 'UID' (noprec):   shift 26
    action 'error' (noprec):   reduce SrcOperands --> 
    action '#' (noprec):   reduce SrcOperands --> 
    action '$$' (noprec):   reduce SrcOperands --> 

  immediate action: <none>
 gotos:
    goto Reg: 25
    goto Const: 33
    goto Operand: 31
    goto SrcOperand: 138
    goto SrcOperands: 219

state 219:
  items:
    Stmt -> 'CALL' 'UID' 'LPAREN' SrcOperands . 'RPAREN' 'SEMI'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (explicit left 10000):   shift 220
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 220:
  items:
    Stmt -> 'CALL' 'UID' 'LPAREN' SrcOperands 'RPAREN' . 'SEMI'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   shift 221
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 221:
  items:
    Stmt -> 'CALL' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI' . 

  actions:
    action 'EOF' (noprec):   reduce Stmt --> 'CALL' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'EAX' (noprec):   reduce Stmt --> 'CALL' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'EBX' (noprec):   reduce Stmt --> 'CALL' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'ECX' (noprec):   reduce Stmt --> 'CALL' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'EDX' (noprec):   reduce Stmt --> 'CALL' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'ESI' (noprec):   reduce Stmt --> 'CALL' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'EDI' (noprec):   reduce Stmt --> 'CALL' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'EBP' (noprec):   reduce Stmt --> 'CALL' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'ESP' (noprec):   reduce Stmt --> 'CALL' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'MODIFIES' (noprec):   reduce Stmt --> 'CALL' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'INVARIANT' (noprec):   reduce Stmt --> 'CALL' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'ASSERT' (noprec):   reduce Stmt --> 'CALL' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'HAVOC' (noprec):   reduce Stmt --> 'CALL' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'GOTO' (noprec):   reduce Stmt --> 'CALL' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'CALL' (noprec):   reduce Stmt --> 'CALL' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'CCALL' (noprec):   reduce Stmt --> 'CALL' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'RET' (noprec):   reduce Stmt --> 'CALL' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'IRET' (noprec):   reduce Stmt --> 'CALL' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'GO' (noprec):   reduce Stmt --> 'CALL' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'FORALL' (noprec):   reduce Stmt --> 'CALL' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'EXISTS' (noprec):   reduce Stmt --> 'CALL' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'OLD' (noprec):   reduce Stmt --> 'CALL' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'COLONCOLON' (noprec):   reduce Stmt --> 'CALL' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'EQEQGT' (noprec):   reduce Stmt --> 'CALL' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'LTEQEQGT' (noprec):   reduce Stmt --> 'CALL' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'TYPE' (noprec):   reduce Stmt --> 'CALL' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'CONST' (noprec):   reduce Stmt --> 'CALL' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'FUNCTION' (noprec):   reduce Stmt --> 'CALL' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'RETURNS' (noprec):   reduce Stmt --> 'CALL' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'AXIOM' (noprec):   reduce Stmt --> 'CALL' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'PROCEDURE' (noprec):   reduce Stmt --> 'CALL' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'IMPLEMENTATION' (noprec):   reduce Stmt --> 'CALL' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'REQUIRES' (noprec):   reduce Stmt --> 'CALL' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'ENSURES' (noprec):   reduce Stmt --> 'CALL' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'LT' (noprec):   reduce Stmt --> 'CALL' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'GT' (noprec):   reduce Stmt --> 'CALL' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'EQ' (noprec):   reduce Stmt --> 'CALL' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'BANG' (noprec):   reduce Stmt --> 'CALL' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'COMMA' (noprec):   reduce Stmt --> 'CALL' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'LE' (noprec):   reduce Stmt --> 'CALL' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'GE' (noprec):   reduce Stmt --> 'CALL' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'EQEQ' (noprec):   reduce Stmt --> 'CALL' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'NE' (noprec):   reduce Stmt --> 'CALL' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'PLUS' (noprec):   reduce Stmt --> 'CALL' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'MINUS' (noprec):   reduce Stmt --> 'CALL' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'STAR' (noprec):   reduce Stmt --> 'CALL' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'SLASH' (noprec):   reduce Stmt --> 'CALL' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'PERCENT' (noprec):   reduce Stmt --> 'CALL' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'AMPAMP' (noprec):   reduce Stmt --> 'CALL' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'BARBAR' (noprec):   reduce Stmt --> 'CALL' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'COLONEQ' (noprec):   reduce Stmt --> 'CALL' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'INT' (noprec):   reduce Stmt --> 'CALL' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'BOOL' (noprec):   reduce Stmt --> 'CALL' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'IF' (noprec):   reduce Stmt --> 'CALL' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'RETURN' (noprec):   reduce Stmt --> 'CALL' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'VAR' (noprec):   reduce Stmt --> 'CALL' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'LBRACE' (noprec):   reduce Stmt --> 'CALL' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'RBRACE' (noprec):   reduce Stmt --> 'CALL' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'SEMI' (noprec):   reduce Stmt --> 'CALL' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'COLON' (noprec):   reduce Stmt --> 'CALL' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'LPAREN' (noprec):   reduce Stmt --> 'CALL' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'RPAREN' (noprec):   reduce Stmt --> 'CALL' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'LBRACKET' (noprec):   reduce Stmt --> 'CALL' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'RBRACKET' (noprec):   reduce Stmt --> 'CALL' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'LITBOOL' (noprec):   reduce Stmt --> 'CALL' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'LITINT' (noprec):   reduce Stmt --> 'CALL' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'QLID' (noprec):   reduce Stmt --> 'CALL' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'QUID' (noprec):   reduce Stmt --> 'CALL' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'DLID' (noprec):   reduce Stmt --> 'CALL' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'DUID' (noprec):   reduce Stmt --> 'CALL' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'LID' (noprec):   reduce Stmt --> 'CALL' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'UID' (noprec):   reduce Stmt --> 'CALL' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'error' (noprec):   reduce Stmt --> 'CALL' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action '#' (noprec):   reduce Stmt --> 'CALL' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action '$$' (noprec):   reduce Stmt --> 'CALL' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'

  immediate action:   reduce Stmt --> 'CALL' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
 gotos:

state 222:
  items:
    Stmt -> 'CALL' DestOperand . 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    Stmt -> 'CALL' DestOperand . 'COMMA' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   shift 229
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   shift 223
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 223:
  items:
    Stmt -> 'CALL' DestOperand 'COLONEQ' . 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   shift 224
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 224:
  items:
    Stmt -> 'CALL' DestOperand 'COLONEQ' 'UID' . 'LPAREN' SrcOperands 'RPAREN' 'SEMI'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (explicit left 10000):   shift 225
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 225:
  items:
    Stmt -> 'CALL' DestOperand 'COLONEQ' 'UID' 'LPAREN' . SrcOperands 'RPAREN' 'SEMI'

  actions:
    action 'EOF' (noprec):   reduce SrcOperands --> 
    action 'EAX' (noprec):   shift 14
    action 'EBX' (noprec):   shift 15
    action 'ECX' (noprec):   shift 16
    action 'EDX' (noprec):   shift 17
    action 'ESI' (noprec):   shift 18
    action 'EDI' (noprec):   shift 19
    action 'EBP' (noprec):   shift 20
    action 'ESP' (noprec):   shift 21
    action 'MODIFIES' (noprec):   reduce SrcOperands --> 
    action 'INVARIANT' (noprec):   reduce SrcOperands --> 
    action 'ASSERT' (noprec):   reduce SrcOperands --> 
    action 'HAVOC' (noprec):   reduce SrcOperands --> 
    action 'GOTO' (noprec):   reduce SrcOperands --> 
    action 'CALL' (noprec):   reduce SrcOperands --> 
    action 'CCALL' (noprec):   reduce SrcOperands --> 
    action 'RET' (noprec):   reduce SrcOperands --> 
    action 'IRET' (noprec):   reduce SrcOperands --> 
    action 'GO' (noprec):   reduce SrcOperands --> 
    action 'FORALL' (noprec):   reduce SrcOperands --> 
    action 'EXISTS' (noprec):   reduce SrcOperands --> 
    action 'OLD' (noprec):   reduce SrcOperands --> 
    action 'COLONCOLON' (noprec):   reduce SrcOperands --> 
    action 'EQEQGT' (noprec):   reduce SrcOperands --> 
    action 'LTEQEQGT' (noprec):   reduce SrcOperands --> 
    action 'TYPE' (noprec):   reduce SrcOperands --> 
    action 'CONST' (noprec):   reduce SrcOperands --> 
    action 'FUNCTION' (noprec):   reduce SrcOperands --> 
    action 'RETURNS' (noprec):   reduce SrcOperands --> 
    action 'AXIOM' (noprec):   reduce SrcOperands --> 
    action 'PROCEDURE' (noprec):   reduce SrcOperands --> 
    action 'IMPLEMENTATION' (noprec):   reduce SrcOperands --> 
    action 'REQUIRES' (noprec):   reduce SrcOperands --> 
    action 'ENSURES' (noprec):   reduce SrcOperands --> 
    action 'LT' (noprec):   reduce SrcOperands --> 
    action 'GT' (noprec):   reduce SrcOperands --> 
    action 'EQ' (noprec):   reduce SrcOperands --> 
    action 'BANG' (noprec):   reduce SrcOperands --> 
    action 'COMMA' (noprec):   reduce SrcOperands --> 
    action 'LE' (noprec):   reduce SrcOperands --> 
    action 'GE' (noprec):   reduce SrcOperands --> 
    action 'EQEQ' (noprec):   reduce SrcOperands --> 
    action 'NE' (noprec):   reduce SrcOperands --> 
    action 'PLUS' (noprec):   reduce SrcOperands --> 
    action 'MINUS' (noprec):   reduce SrcOperands --> 
    action 'STAR' (noprec):   reduce SrcOperands --> 
    action 'SLASH' (noprec):   reduce SrcOperands --> 
    action 'PERCENT' (noprec):   reduce SrcOperands --> 
    action 'AMPAMP' (noprec):   reduce SrcOperands --> 
    action 'BARBAR' (noprec):   reduce SrcOperands --> 
    action 'COLONEQ' (noprec):   reduce SrcOperands --> 
    action 'INT' (noprec):   reduce SrcOperands --> 
    action 'BOOL' (noprec):   reduce SrcOperands --> 
    action 'IF' (noprec):   reduce SrcOperands --> 
    action 'RETURN' (noprec):   reduce SrcOperands --> 
    action 'VAR' (noprec):   reduce SrcOperands --> 
    action 'LBRACE' (noprec):   reduce SrcOperands --> 
    action 'RBRACE' (noprec):   reduce SrcOperands --> 
    action 'SEMI' (noprec):   reduce SrcOperands --> 
    action 'COLON' (noprec):   reduce SrcOperands --> 
    action 'LPAREN' (explicit left 10000):   shift 41
    action 'RPAREN' (noprec):   reduce SrcOperands --> 
    action 'LBRACKET' (noprec):   reduce SrcOperands --> 
    action 'RBRACKET' (noprec):   reduce SrcOperands --> 
    action 'LITBOOL' (noprec):   reduce SrcOperands --> 
    action 'LITINT' (noprec):   shift 22
    action 'QLID' (noprec):   shift 32
    action 'QUID' (noprec):   shift 23
    action 'DLID' (noprec):   reduce SrcOperands --> 
    action 'DUID' (noprec):   reduce SrcOperands --> 
    action 'LID' (noprec):   shift 28
    action 'UID' (noprec):   shift 26
    action 'error' (noprec):   reduce SrcOperands --> 
    action '#' (noprec):   reduce SrcOperands --> 
    action '$$' (noprec):   reduce SrcOperands --> 

  immediate action: <none>
 gotos:
    goto Reg: 25
    goto Const: 33
    goto Operand: 31
    goto SrcOperand: 138
    goto SrcOperands: 226

state 226:
  items:
    Stmt -> 'CALL' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands . 'RPAREN' 'SEMI'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (explicit left 10000):   shift 227
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 227:
  items:
    Stmt -> 'CALL' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' . 'SEMI'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   shift 228
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 228:
  items:
    Stmt -> 'CALL' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI' . 

  actions:
    action 'EOF' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'EAX' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'EBX' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'ECX' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'EDX' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'ESI' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'EDI' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'EBP' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'ESP' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'MODIFIES' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'INVARIANT' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'ASSERT' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'HAVOC' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'GOTO' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'CALL' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'CCALL' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'RET' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'IRET' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'GO' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'FORALL' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'EXISTS' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'OLD' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'COLONCOLON' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'EQEQGT' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'LTEQEQGT' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'TYPE' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'CONST' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'FUNCTION' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'RETURNS' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'AXIOM' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'PROCEDURE' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'IMPLEMENTATION' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'REQUIRES' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'ENSURES' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'LT' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'GT' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'EQ' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'BANG' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'COMMA' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'LE' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'GE' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'EQEQ' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'NE' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'PLUS' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'MINUS' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'STAR' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'SLASH' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'PERCENT' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'AMPAMP' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'BARBAR' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'COLONEQ' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'INT' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'BOOL' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'IF' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'RETURN' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'VAR' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'LBRACE' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'RBRACE' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'SEMI' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'COLON' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'LPAREN' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'RPAREN' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'LBRACKET' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'RBRACKET' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'LITBOOL' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'LITINT' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'QLID' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'QUID' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'DLID' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'DUID' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'LID' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'UID' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'error' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action '#' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action '$$' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'

  immediate action:   reduce Stmt --> 'CALL' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
 gotos:

state 229:
  items:
    Stmt -> 'CALL' DestOperand 'COMMA' . DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   shift 14
    action 'EBX' (noprec):   shift 15
    action 'ECX' (noprec):   shift 16
    action 'EDX' (noprec):   shift 17
    action 'ESI' (noprec):   shift 18
    action 'EDI' (noprec):   shift 19
    action 'EBP' (noprec):   shift 20
    action 'ESP' (noprec):   shift 21
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   shift 28
    action 'UID' (noprec):   shift 26
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto Reg: 24
    goto Operand: 30
    goto DestOperand: 230

state 230:
  items:
    Stmt -> 'CALL' DestOperand 'COMMA' DestOperand . 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   shift 231
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 231:
  items:
    Stmt -> 'CALL' DestOperand 'COMMA' DestOperand 'COLONEQ' . 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   shift 232
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 232:
  items:
    Stmt -> 'CALL' DestOperand 'COMMA' DestOperand 'COLONEQ' 'UID' . 'LPAREN' SrcOperands 'RPAREN' 'SEMI'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (explicit left 10000):   shift 233
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 233:
  items:
    Stmt -> 'CALL' DestOperand 'COMMA' DestOperand 'COLONEQ' 'UID' 'LPAREN' . SrcOperands 'RPAREN' 'SEMI'

  actions:
    action 'EOF' (noprec):   reduce SrcOperands --> 
    action 'EAX' (noprec):   shift 14
    action 'EBX' (noprec):   shift 15
    action 'ECX' (noprec):   shift 16
    action 'EDX' (noprec):   shift 17
    action 'ESI' (noprec):   shift 18
    action 'EDI' (noprec):   shift 19
    action 'EBP' (noprec):   shift 20
    action 'ESP' (noprec):   shift 21
    action 'MODIFIES' (noprec):   reduce SrcOperands --> 
    action 'INVARIANT' (noprec):   reduce SrcOperands --> 
    action 'ASSERT' (noprec):   reduce SrcOperands --> 
    action 'HAVOC' (noprec):   reduce SrcOperands --> 
    action 'GOTO' (noprec):   reduce SrcOperands --> 
    action 'CALL' (noprec):   reduce SrcOperands --> 
    action 'CCALL' (noprec):   reduce SrcOperands --> 
    action 'RET' (noprec):   reduce SrcOperands --> 
    action 'IRET' (noprec):   reduce SrcOperands --> 
    action 'GO' (noprec):   reduce SrcOperands --> 
    action 'FORALL' (noprec):   reduce SrcOperands --> 
    action 'EXISTS' (noprec):   reduce SrcOperands --> 
    action 'OLD' (noprec):   reduce SrcOperands --> 
    action 'COLONCOLON' (noprec):   reduce SrcOperands --> 
    action 'EQEQGT' (noprec):   reduce SrcOperands --> 
    action 'LTEQEQGT' (noprec):   reduce SrcOperands --> 
    action 'TYPE' (noprec):   reduce SrcOperands --> 
    action 'CONST' (noprec):   reduce SrcOperands --> 
    action 'FUNCTION' (noprec):   reduce SrcOperands --> 
    action 'RETURNS' (noprec):   reduce SrcOperands --> 
    action 'AXIOM' (noprec):   reduce SrcOperands --> 
    action 'PROCEDURE' (noprec):   reduce SrcOperands --> 
    action 'IMPLEMENTATION' (noprec):   reduce SrcOperands --> 
    action 'REQUIRES' (noprec):   reduce SrcOperands --> 
    action 'ENSURES' (noprec):   reduce SrcOperands --> 
    action 'LT' (noprec):   reduce SrcOperands --> 
    action 'GT' (noprec):   reduce SrcOperands --> 
    action 'EQ' (noprec):   reduce SrcOperands --> 
    action 'BANG' (noprec):   reduce SrcOperands --> 
    action 'COMMA' (noprec):   reduce SrcOperands --> 
    action 'LE' (noprec):   reduce SrcOperands --> 
    action 'GE' (noprec):   reduce SrcOperands --> 
    action 'EQEQ' (noprec):   reduce SrcOperands --> 
    action 'NE' (noprec):   reduce SrcOperands --> 
    action 'PLUS' (noprec):   reduce SrcOperands --> 
    action 'MINUS' (noprec):   reduce SrcOperands --> 
    action 'STAR' (noprec):   reduce SrcOperands --> 
    action 'SLASH' (noprec):   reduce SrcOperands --> 
    action 'PERCENT' (noprec):   reduce SrcOperands --> 
    action 'AMPAMP' (noprec):   reduce SrcOperands --> 
    action 'BARBAR' (noprec):   reduce SrcOperands --> 
    action 'COLONEQ' (noprec):   reduce SrcOperands --> 
    action 'INT' (noprec):   reduce SrcOperands --> 
    action 'BOOL' (noprec):   reduce SrcOperands --> 
    action 'IF' (noprec):   reduce SrcOperands --> 
    action 'RETURN' (noprec):   reduce SrcOperands --> 
    action 'VAR' (noprec):   reduce SrcOperands --> 
    action 'LBRACE' (noprec):   reduce SrcOperands --> 
    action 'RBRACE' (noprec):   reduce SrcOperands --> 
    action 'SEMI' (noprec):   reduce SrcOperands --> 
    action 'COLON' (noprec):   reduce SrcOperands --> 
    action 'LPAREN' (explicit left 10000):   shift 41
    action 'RPAREN' (noprec):   reduce SrcOperands --> 
    action 'LBRACKET' (noprec):   reduce SrcOperands --> 
    action 'RBRACKET' (noprec):   reduce SrcOperands --> 
    action 'LITBOOL' (noprec):   reduce SrcOperands --> 
    action 'LITINT' (noprec):   shift 22
    action 'QLID' (noprec):   shift 32
    action 'QUID' (noprec):   shift 23
    action 'DLID' (noprec):   reduce SrcOperands --> 
    action 'DUID' (noprec):   reduce SrcOperands --> 
    action 'LID' (noprec):   shift 28
    action 'UID' (noprec):   shift 26
    action 'error' (noprec):   reduce SrcOperands --> 
    action '#' (noprec):   reduce SrcOperands --> 
    action '$$' (noprec):   reduce SrcOperands --> 

  immediate action: <none>
 gotos:
    goto Reg: 25
    goto Const: 33
    goto Operand: 31
    goto SrcOperand: 138
    goto SrcOperands: 234

state 234:
  items:
    Stmt -> 'CALL' DestOperand 'COMMA' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands . 'RPAREN' 'SEMI'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (explicit left 10000):   shift 235
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 235:
  items:
    Stmt -> 'CALL' DestOperand 'COMMA' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' . 'SEMI'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   shift 236
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 236:
  items:
    Stmt -> 'CALL' DestOperand 'COMMA' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI' . 

  actions:
    action 'EOF' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COMMA' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'EAX' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COMMA' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'EBX' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COMMA' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'ECX' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COMMA' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'EDX' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COMMA' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'ESI' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COMMA' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'EDI' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COMMA' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'EBP' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COMMA' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'ESP' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COMMA' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'MODIFIES' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COMMA' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'INVARIANT' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COMMA' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'ASSERT' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COMMA' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'HAVOC' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COMMA' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'GOTO' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COMMA' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'CALL' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COMMA' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'CCALL' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COMMA' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'RET' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COMMA' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'IRET' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COMMA' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'GO' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COMMA' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'FORALL' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COMMA' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'EXISTS' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COMMA' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'OLD' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COMMA' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'COLONCOLON' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COMMA' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'EQEQGT' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COMMA' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'LTEQEQGT' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COMMA' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'TYPE' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COMMA' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'CONST' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COMMA' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'FUNCTION' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COMMA' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'RETURNS' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COMMA' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'AXIOM' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COMMA' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'PROCEDURE' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COMMA' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'IMPLEMENTATION' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COMMA' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'REQUIRES' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COMMA' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'ENSURES' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COMMA' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'LT' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COMMA' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'GT' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COMMA' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'EQ' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COMMA' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'BANG' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COMMA' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'COMMA' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COMMA' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'LE' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COMMA' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'GE' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COMMA' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'EQEQ' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COMMA' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'NE' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COMMA' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'PLUS' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COMMA' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'MINUS' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COMMA' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'STAR' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COMMA' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'SLASH' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COMMA' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'PERCENT' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COMMA' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'AMPAMP' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COMMA' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'BARBAR' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COMMA' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'COLONEQ' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COMMA' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'INT' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COMMA' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'BOOL' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COMMA' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'IF' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COMMA' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'RETURN' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COMMA' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'VAR' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COMMA' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'LBRACE' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COMMA' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'RBRACE' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COMMA' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'SEMI' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COMMA' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'COLON' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COMMA' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'LPAREN' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COMMA' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'RPAREN' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COMMA' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'LBRACKET' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COMMA' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'RBRACKET' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COMMA' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'LITBOOL' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COMMA' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'LITINT' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COMMA' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'QLID' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COMMA' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'QUID' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COMMA' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'DLID' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COMMA' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'DUID' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COMMA' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'LID' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COMMA' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'UID' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COMMA' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action 'error' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COMMA' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action '#' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COMMA' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
    action '$$' (noprec):   reduce Stmt --> 'CALL' DestOperand 'COMMA' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'

  immediate action:   reduce Stmt --> 'CALL' DestOperand 'COMMA' DestOperand 'COLONEQ' 'UID' 'LPAREN' SrcOperands 'RPAREN' 'SEMI'
 gotos:

state 237:
  items:
    Return -> 'CALL' 'RET' . 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (explicit left 10000):   shift 238
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 238:
  items:
    Return -> 'CALL' 'RET' 'LPAREN' . 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   shift 239
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 239:
  items:
    Return -> 'CALL' 'RET' 'LPAREN' 'OLD' . 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (explicit left 10000):   shift 240
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 240:
  items:
    Return -> 'CALL' 'RET' 'LPAREN' 'OLD' 'LPAREN' . 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   shift 241
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 241:
  items:
    Return -> 'CALL' 'RET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' . 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (explicit left 10000):   shift 242
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 242:
  items:
    Return -> 'CALL' 'RET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' . 'RPAREN' 'SEMI' 'RETURN' 'SEMI'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (explicit left 10000):   shift 243
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 243:
  items:
    Return -> 'CALL' 'RET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' . 'SEMI' 'RETURN' 'SEMI'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   shift 244
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 244:
  items:
    Return -> 'CALL' 'RET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' . 'RETURN' 'SEMI'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   shift 245
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 245:
  items:
    Return -> 'CALL' 'RET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' . 'SEMI'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   shift 246
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 246:
  items:
    Return -> 'CALL' 'RET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI' . 

  actions:
    action 'EOF' (noprec):   reduce Return --> 'CALL' 'RET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'EAX' (noprec):   reduce Return --> 'CALL' 'RET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'EBX' (noprec):   reduce Return --> 'CALL' 'RET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'ECX' (noprec):   reduce Return --> 'CALL' 'RET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'EDX' (noprec):   reduce Return --> 'CALL' 'RET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'ESI' (noprec):   reduce Return --> 'CALL' 'RET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'EDI' (noprec):   reduce Return --> 'CALL' 'RET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'EBP' (noprec):   reduce Return --> 'CALL' 'RET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'ESP' (noprec):   reduce Return --> 'CALL' 'RET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'MODIFIES' (noprec):   reduce Return --> 'CALL' 'RET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'INVARIANT' (noprec):   reduce Return --> 'CALL' 'RET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'ASSERT' (noprec):   reduce Return --> 'CALL' 'RET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'HAVOC' (noprec):   reduce Return --> 'CALL' 'RET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'GOTO' (noprec):   reduce Return --> 'CALL' 'RET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'CALL' (noprec):   reduce Return --> 'CALL' 'RET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'CCALL' (noprec):   reduce Return --> 'CALL' 'RET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'RET' (noprec):   reduce Return --> 'CALL' 'RET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'IRET' (noprec):   reduce Return --> 'CALL' 'RET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'GO' (noprec):   reduce Return --> 'CALL' 'RET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'FORALL' (noprec):   reduce Return --> 'CALL' 'RET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'EXISTS' (noprec):   reduce Return --> 'CALL' 'RET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'OLD' (noprec):   reduce Return --> 'CALL' 'RET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'COLONCOLON' (noprec):   reduce Return --> 'CALL' 'RET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'EQEQGT' (noprec):   reduce Return --> 'CALL' 'RET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'LTEQEQGT' (noprec):   reduce Return --> 'CALL' 'RET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'TYPE' (noprec):   reduce Return --> 'CALL' 'RET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'CONST' (noprec):   reduce Return --> 'CALL' 'RET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'FUNCTION' (noprec):   reduce Return --> 'CALL' 'RET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'RETURNS' (noprec):   reduce Return --> 'CALL' 'RET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'AXIOM' (noprec):   reduce Return --> 'CALL' 'RET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'PROCEDURE' (noprec):   reduce Return --> 'CALL' 'RET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'IMPLEMENTATION' (noprec):   reduce Return --> 'CALL' 'RET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'REQUIRES' (noprec):   reduce Return --> 'CALL' 'RET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'ENSURES' (noprec):   reduce Return --> 'CALL' 'RET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'LT' (noprec):   reduce Return --> 'CALL' 'RET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'GT' (noprec):   reduce Return --> 'CALL' 'RET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'EQ' (noprec):   reduce Return --> 'CALL' 'RET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'BANG' (noprec):   reduce Return --> 'CALL' 'RET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'COMMA' (noprec):   reduce Return --> 'CALL' 'RET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'LE' (noprec):   reduce Return --> 'CALL' 'RET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'GE' (noprec):   reduce Return --> 'CALL' 'RET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'EQEQ' (noprec):   reduce Return --> 'CALL' 'RET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'NE' (noprec):   reduce Return --> 'CALL' 'RET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'PLUS' (noprec):   reduce Return --> 'CALL' 'RET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'MINUS' (noprec):   reduce Return --> 'CALL' 'RET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'STAR' (noprec):   reduce Return --> 'CALL' 'RET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'SLASH' (noprec):   reduce Return --> 'CALL' 'RET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'PERCENT' (noprec):   reduce Return --> 'CALL' 'RET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'AMPAMP' (noprec):   reduce Return --> 'CALL' 'RET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'BARBAR' (noprec):   reduce Return --> 'CALL' 'RET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'COLONEQ' (noprec):   reduce Return --> 'CALL' 'RET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'INT' (noprec):   reduce Return --> 'CALL' 'RET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'BOOL' (noprec):   reduce Return --> 'CALL' 'RET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'IF' (noprec):   reduce Return --> 'CALL' 'RET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'RETURN' (noprec):   reduce Return --> 'CALL' 'RET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'VAR' (noprec):   reduce Return --> 'CALL' 'RET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'LBRACE' (noprec):   reduce Return --> 'CALL' 'RET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'RBRACE' (noprec):   reduce Return --> 'CALL' 'RET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'SEMI' (noprec):   reduce Return --> 'CALL' 'RET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'COLON' (noprec):   reduce Return --> 'CALL' 'RET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'LPAREN' (noprec):   reduce Return --> 'CALL' 'RET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'RPAREN' (noprec):   reduce Return --> 'CALL' 'RET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'LBRACKET' (noprec):   reduce Return --> 'CALL' 'RET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'RBRACKET' (noprec):   reduce Return --> 'CALL' 'RET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'LITBOOL' (noprec):   reduce Return --> 'CALL' 'RET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'LITINT' (noprec):   reduce Return --> 'CALL' 'RET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'QLID' (noprec):   reduce Return --> 'CALL' 'RET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'QUID' (noprec):   reduce Return --> 'CALL' 'RET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'DLID' (noprec):   reduce Return --> 'CALL' 'RET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'DUID' (noprec):   reduce Return --> 'CALL' 'RET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'LID' (noprec):   reduce Return --> 'CALL' 'RET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'UID' (noprec):   reduce Return --> 'CALL' 'RET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'error' (noprec):   reduce Return --> 'CALL' 'RET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action '#' (noprec):   reduce Return --> 'CALL' 'RET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action '$$' (noprec):   reduce Return --> 'CALL' 'RET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'

  immediate action:   reduce Return --> 'CALL' 'RET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
 gotos:

state 247:
  items:
    Return -> 'CALL' 'IRET' . 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (explicit left 10000):   shift 248
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 248:
  items:
    Return -> 'CALL' 'IRET' 'LPAREN' . 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   shift 249
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 249:
  items:
    Return -> 'CALL' 'IRET' 'LPAREN' 'OLD' . 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (explicit left 10000):   shift 250
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 250:
  items:
    Return -> 'CALL' 'IRET' 'LPAREN' 'OLD' 'LPAREN' . 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   shift 251
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 251:
  items:
    Return -> 'CALL' 'IRET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' . 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (explicit left 10000):   shift 252
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 252:
  items:
    Return -> 'CALL' 'IRET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' . 'RPAREN' 'SEMI' 'RETURN' 'SEMI'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (explicit left 10000):   shift 253
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 253:
  items:
    Return -> 'CALL' 'IRET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' . 'SEMI' 'RETURN' 'SEMI'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   shift 254
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 254:
  items:
    Return -> 'CALL' 'IRET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' . 'RETURN' 'SEMI'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   shift 255
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 255:
  items:
    Return -> 'CALL' 'IRET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' . 'SEMI'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   shift 256
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 256:
  items:
    Return -> 'CALL' 'IRET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI' . 

  actions:
    action 'EOF' (noprec):   reduce Return --> 'CALL' 'IRET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'EAX' (noprec):   reduce Return --> 'CALL' 'IRET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'EBX' (noprec):   reduce Return --> 'CALL' 'IRET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'ECX' (noprec):   reduce Return --> 'CALL' 'IRET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'EDX' (noprec):   reduce Return --> 'CALL' 'IRET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'ESI' (noprec):   reduce Return --> 'CALL' 'IRET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'EDI' (noprec):   reduce Return --> 'CALL' 'IRET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'EBP' (noprec):   reduce Return --> 'CALL' 'IRET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'ESP' (noprec):   reduce Return --> 'CALL' 'IRET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'MODIFIES' (noprec):   reduce Return --> 'CALL' 'IRET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'INVARIANT' (noprec):   reduce Return --> 'CALL' 'IRET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'ASSERT' (noprec):   reduce Return --> 'CALL' 'IRET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'HAVOC' (noprec):   reduce Return --> 'CALL' 'IRET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'GOTO' (noprec):   reduce Return --> 'CALL' 'IRET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'CALL' (noprec):   reduce Return --> 'CALL' 'IRET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'CCALL' (noprec):   reduce Return --> 'CALL' 'IRET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'RET' (noprec):   reduce Return --> 'CALL' 'IRET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'IRET' (noprec):   reduce Return --> 'CALL' 'IRET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'GO' (noprec):   reduce Return --> 'CALL' 'IRET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'FORALL' (noprec):   reduce Return --> 'CALL' 'IRET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'EXISTS' (noprec):   reduce Return --> 'CALL' 'IRET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'OLD' (noprec):   reduce Return --> 'CALL' 'IRET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'COLONCOLON' (noprec):   reduce Return --> 'CALL' 'IRET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'EQEQGT' (noprec):   reduce Return --> 'CALL' 'IRET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'LTEQEQGT' (noprec):   reduce Return --> 'CALL' 'IRET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'TYPE' (noprec):   reduce Return --> 'CALL' 'IRET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'CONST' (noprec):   reduce Return --> 'CALL' 'IRET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'FUNCTION' (noprec):   reduce Return --> 'CALL' 'IRET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'RETURNS' (noprec):   reduce Return --> 'CALL' 'IRET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'AXIOM' (noprec):   reduce Return --> 'CALL' 'IRET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'PROCEDURE' (noprec):   reduce Return --> 'CALL' 'IRET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'IMPLEMENTATION' (noprec):   reduce Return --> 'CALL' 'IRET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'REQUIRES' (noprec):   reduce Return --> 'CALL' 'IRET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'ENSURES' (noprec):   reduce Return --> 'CALL' 'IRET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'LT' (noprec):   reduce Return --> 'CALL' 'IRET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'GT' (noprec):   reduce Return --> 'CALL' 'IRET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'EQ' (noprec):   reduce Return --> 'CALL' 'IRET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'BANG' (noprec):   reduce Return --> 'CALL' 'IRET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'COMMA' (noprec):   reduce Return --> 'CALL' 'IRET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'LE' (noprec):   reduce Return --> 'CALL' 'IRET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'GE' (noprec):   reduce Return --> 'CALL' 'IRET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'EQEQ' (noprec):   reduce Return --> 'CALL' 'IRET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'NE' (noprec):   reduce Return --> 'CALL' 'IRET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'PLUS' (noprec):   reduce Return --> 'CALL' 'IRET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'MINUS' (noprec):   reduce Return --> 'CALL' 'IRET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'STAR' (noprec):   reduce Return --> 'CALL' 'IRET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'SLASH' (noprec):   reduce Return --> 'CALL' 'IRET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'PERCENT' (noprec):   reduce Return --> 'CALL' 'IRET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'AMPAMP' (noprec):   reduce Return --> 'CALL' 'IRET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'BARBAR' (noprec):   reduce Return --> 'CALL' 'IRET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'COLONEQ' (noprec):   reduce Return --> 'CALL' 'IRET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'INT' (noprec):   reduce Return --> 'CALL' 'IRET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'BOOL' (noprec):   reduce Return --> 'CALL' 'IRET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'IF' (noprec):   reduce Return --> 'CALL' 'IRET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'RETURN' (noprec):   reduce Return --> 'CALL' 'IRET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'VAR' (noprec):   reduce Return --> 'CALL' 'IRET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'LBRACE' (noprec):   reduce Return --> 'CALL' 'IRET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'RBRACE' (noprec):   reduce Return --> 'CALL' 'IRET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'SEMI' (noprec):   reduce Return --> 'CALL' 'IRET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'COLON' (noprec):   reduce Return --> 'CALL' 'IRET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'LPAREN' (noprec):   reduce Return --> 'CALL' 'IRET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'RPAREN' (noprec):   reduce Return --> 'CALL' 'IRET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'LBRACKET' (noprec):   reduce Return --> 'CALL' 'IRET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'RBRACKET' (noprec):   reduce Return --> 'CALL' 'IRET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'LITBOOL' (noprec):   reduce Return --> 'CALL' 'IRET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'LITINT' (noprec):   reduce Return --> 'CALL' 'IRET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'QLID' (noprec):   reduce Return --> 'CALL' 'IRET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'QUID' (noprec):   reduce Return --> 'CALL' 'IRET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'DLID' (noprec):   reduce Return --> 'CALL' 'IRET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'DUID' (noprec):   reduce Return --> 'CALL' 'IRET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'LID' (noprec):   reduce Return --> 'CALL' 'IRET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'UID' (noprec):   reduce Return --> 'CALL' 'IRET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action 'error' (noprec):   reduce Return --> 'CALL' 'IRET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action '#' (noprec):   reduce Return --> 'CALL' 'IRET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
    action '$$' (noprec):   reduce Return --> 'CALL' 'IRET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'

  immediate action:   reduce Return --> 'CALL' 'IRET' 'LPAREN' 'OLD' 'LPAREN' 'DUID' 'RPAREN' 'RPAREN' 'SEMI' 'RETURN' 'SEMI'
 gotos:

state 257:
  items:
    ProcStmt -> Stmt . 

  actions:
    action 'EOF' (noprec):   reduce ProcStmt --> Stmt
    action 'EAX' (noprec):   reduce ProcStmt --> Stmt
    action 'EBX' (noprec):   reduce ProcStmt --> Stmt
    action 'ECX' (noprec):   reduce ProcStmt --> Stmt
    action 'EDX' (noprec):   reduce ProcStmt --> Stmt
    action 'ESI' (noprec):   reduce ProcStmt --> Stmt
    action 'EDI' (noprec):   reduce ProcStmt --> Stmt
    action 'EBP' (noprec):   reduce ProcStmt --> Stmt
    action 'ESP' (noprec):   reduce ProcStmt --> Stmt
    action 'MODIFIES' (noprec):   reduce ProcStmt --> Stmt
    action 'INVARIANT' (noprec):   reduce ProcStmt --> Stmt
    action 'ASSERT' (noprec):   reduce ProcStmt --> Stmt
    action 'HAVOC' (noprec):   reduce ProcStmt --> Stmt
    action 'GOTO' (noprec):   reduce ProcStmt --> Stmt
    action 'CALL' (noprec):   reduce ProcStmt --> Stmt
    action 'CCALL' (noprec):   reduce ProcStmt --> Stmt
    action 'RET' (noprec):   reduce ProcStmt --> Stmt
    action 'IRET' (noprec):   reduce ProcStmt --> Stmt
    action 'GO' (noprec):   reduce ProcStmt --> Stmt
    action 'FORALL' (noprec):   reduce ProcStmt --> Stmt
    action 'EXISTS' (noprec):   reduce ProcStmt --> Stmt
    action 'OLD' (noprec):   reduce ProcStmt --> Stmt
    action 'COLONCOLON' (noprec):   reduce ProcStmt --> Stmt
    action 'EQEQGT' (noprec):   reduce ProcStmt --> Stmt
    action 'LTEQEQGT' (noprec):   reduce ProcStmt --> Stmt
    action 'TYPE' (noprec):   reduce ProcStmt --> Stmt
    action 'CONST' (noprec):   reduce ProcStmt --> Stmt
    action 'FUNCTION' (noprec):   reduce ProcStmt --> Stmt
    action 'RETURNS' (noprec):   reduce ProcStmt --> Stmt
    action 'AXIOM' (noprec):   reduce ProcStmt --> Stmt
    action 'PROCEDURE' (noprec):   reduce ProcStmt --> Stmt
    action 'IMPLEMENTATION' (noprec):   reduce ProcStmt --> Stmt
    action 'REQUIRES' (noprec):   reduce ProcStmt --> Stmt
    action 'ENSURES' (noprec):   reduce ProcStmt --> Stmt
    action 'LT' (noprec):   reduce ProcStmt --> Stmt
    action 'GT' (noprec):   reduce ProcStmt --> Stmt
    action 'EQ' (noprec):   reduce ProcStmt --> Stmt
    action 'BANG' (noprec):   reduce ProcStmt --> Stmt
    action 'COMMA' (noprec):   reduce ProcStmt --> Stmt
    action 'LE' (noprec):   reduce ProcStmt --> Stmt
    action 'GE' (noprec):   reduce ProcStmt --> Stmt
    action 'EQEQ' (noprec):   reduce ProcStmt --> Stmt
    action 'NE' (noprec):   reduce ProcStmt --> Stmt
    action 'PLUS' (noprec):   reduce ProcStmt --> Stmt
    action 'MINUS' (noprec):   reduce ProcStmt --> Stmt
    action 'STAR' (noprec):   reduce ProcStmt --> Stmt
    action 'SLASH' (noprec):   reduce ProcStmt --> Stmt
    action 'PERCENT' (noprec):   reduce ProcStmt --> Stmt
    action 'AMPAMP' (noprec):   reduce ProcStmt --> Stmt
    action 'BARBAR' (noprec):   reduce ProcStmt --> Stmt
    action 'COLONEQ' (noprec):   reduce ProcStmt --> Stmt
    action 'INT' (noprec):   reduce ProcStmt --> Stmt
    action 'BOOL' (noprec):   reduce ProcStmt --> Stmt
    action 'IF' (noprec):   reduce ProcStmt --> Stmt
    action 'RETURN' (noprec):   reduce ProcStmt --> Stmt
    action 'VAR' (noprec):   reduce ProcStmt --> Stmt
    action 'LBRACE' (noprec):   reduce ProcStmt --> Stmt
    action 'RBRACE' (noprec):   reduce ProcStmt --> Stmt
    action 'SEMI' (noprec):   reduce ProcStmt --> Stmt
    action 'COLON' (noprec):   reduce ProcStmt --> Stmt
    action 'LPAREN' (noprec):   reduce ProcStmt --> Stmt
    action 'RPAREN' (noprec):   reduce ProcStmt --> Stmt
    action 'LBRACKET' (noprec):   reduce ProcStmt --> Stmt
    action 'RBRACKET' (noprec):   reduce ProcStmt --> Stmt
    action 'LITBOOL' (noprec):   reduce ProcStmt --> Stmt
    action 'LITINT' (noprec):   reduce ProcStmt --> Stmt
    action 'QLID' (noprec):   reduce ProcStmt --> Stmt
    action 'QUID' (noprec):   reduce ProcStmt --> Stmt
    action 'DLID' (noprec):   reduce ProcStmt --> Stmt
    action 'DUID' (noprec):   reduce ProcStmt --> Stmt
    action 'LID' (noprec):   reduce ProcStmt --> Stmt
    action 'UID' (noprec):   reduce ProcStmt --> Stmt
    action 'error' (noprec):   reduce ProcStmt --> Stmt
    action '#' (noprec):   reduce ProcStmt --> Stmt
    action '$$' (noprec):   reduce ProcStmt --> Stmt

  immediate action:   reduce ProcStmt --> Stmt
 gotos:

state 258:
  items:
    ProcStmt -> Return . 
    ProcBlock -> Return . 

  actions:
    action 'EOF' (noprec):   reduce ProcStmt --> Return
    action 'EAX' (noprec):   reduce ProcStmt --> Return
    action 'EBX' (noprec):   reduce ProcStmt --> Return
    action 'ECX' (noprec):   reduce ProcStmt --> Return
    action 'EDX' (noprec):   reduce ProcStmt --> Return
    action 'ESI' (noprec):   reduce ProcStmt --> Return
    action 'EDI' (noprec):   reduce ProcStmt --> Return
    action 'EBP' (noprec):   reduce ProcStmt --> Return
    action 'ESP' (noprec):   reduce ProcStmt --> Return
    action 'MODIFIES' (noprec):   reduce ProcStmt --> Return
    action 'INVARIANT' (noprec):   reduce ProcStmt --> Return
    action 'ASSERT' (noprec):   reduce ProcStmt --> Return
    action 'HAVOC' (noprec):   reduce ProcStmt --> Return
    action 'GOTO' (noprec):   reduce ProcStmt --> Return
    action 'CALL' (noprec):   reduce ProcStmt --> Return
    action 'CCALL' (noprec):   reduce ProcStmt --> Return
    action 'RET' (noprec):   reduce ProcStmt --> Return
    action 'IRET' (noprec):   reduce ProcStmt --> Return
    action 'GO' (noprec):   reduce ProcStmt --> Return
    action 'FORALL' (noprec):   reduce ProcStmt --> Return
    action 'EXISTS' (noprec):   reduce ProcStmt --> Return
    action 'OLD' (noprec):   reduce ProcStmt --> Return
    action 'COLONCOLON' (noprec):   reduce ProcStmt --> Return
    action 'EQEQGT' (noprec):   reduce ProcStmt --> Return
    action 'LTEQEQGT' (noprec):   reduce ProcStmt --> Return
    action 'TYPE' (noprec):   reduce ProcStmt --> Return
    action 'CONST' (noprec):   reduce ProcStmt --> Return
    action 'FUNCTION' (noprec):   reduce ProcStmt --> Return
    action 'RETURNS' (noprec):   reduce ProcStmt --> Return
    action 'AXIOM' (noprec):   reduce ProcStmt --> Return
    action 'PROCEDURE' (noprec):   reduce ProcStmt --> Return
    action 'IMPLEMENTATION' (noprec):   reduce ProcStmt --> Return
    action 'REQUIRES' (noprec):   reduce ProcStmt --> Return
    action 'ENSURES' (noprec):   reduce ProcStmt --> Return
    action 'LT' (noprec):   reduce ProcStmt --> Return
    action 'GT' (noprec):   reduce ProcStmt --> Return
    action 'EQ' (noprec):   reduce ProcStmt --> Return
    action 'BANG' (noprec):   reduce ProcStmt --> Return
    action 'COMMA' (noprec):   reduce ProcStmt --> Return
    action 'LE' (noprec):   reduce ProcStmt --> Return
    action 'GE' (noprec):   reduce ProcStmt --> Return
    action 'EQEQ' (noprec):   reduce ProcStmt --> Return
    action 'NE' (noprec):   reduce ProcStmt --> Return
    action 'PLUS' (noprec):   reduce ProcStmt --> Return
    action 'MINUS' (noprec):   reduce ProcStmt --> Return
    action 'STAR' (noprec):   reduce ProcStmt --> Return
    action 'SLASH' (noprec):   reduce ProcStmt --> Return
    action 'PERCENT' (noprec):   reduce ProcStmt --> Return
    action 'AMPAMP' (noprec):   reduce ProcStmt --> Return
    action 'BARBAR' (noprec):   reduce ProcStmt --> Return
    action 'COLONEQ' (noprec):   reduce ProcStmt --> Return
    action 'INT' (noprec):   reduce ProcStmt --> Return
    action 'BOOL' (noprec):   reduce ProcStmt --> Return
    action 'IF' (noprec):   reduce ProcStmt --> Return
    action 'RETURN' (noprec):   reduce ProcStmt --> Return
    action 'VAR' (noprec):   reduce ProcStmt --> Return
    action 'LBRACE' (noprec):   reduce ProcStmt --> Return
    action 'RBRACE' (noprec):   reduce ProcBlock --> Return
    action 'SEMI' (noprec):   reduce ProcStmt --> Return
    action 'COLON' (noprec):   reduce ProcStmt --> Return
    action 'LPAREN' (noprec):   reduce ProcStmt --> Return
    action 'RPAREN' (noprec):   reduce ProcStmt --> Return
    action 'LBRACKET' (noprec):   reduce ProcStmt --> Return
    action 'RBRACKET' (noprec):   reduce ProcStmt --> Return
    action 'LITBOOL' (noprec):   reduce ProcStmt --> Return
    action 'LITINT' (noprec):   reduce ProcStmt --> Return
    action 'QLID' (noprec):   reduce ProcStmt --> Return
    action 'QUID' (noprec):   reduce ProcStmt --> Return
    action 'DLID' (noprec):   reduce ProcStmt --> Return
    action 'DUID' (noprec):   reduce ProcStmt --> Return
    action 'LID' (noprec):   reduce ProcStmt --> Return
    action 'UID' (noprec):   reduce ProcStmt --> Return
    action 'error' (noprec):   reduce ProcStmt --> Return
    action '#' (noprec):   reduce ProcStmt --> Return
    action '$$' (noprec):   reduce ProcStmt --> Return

  immediate action: <none>
 gotos:

state 259:
  items:
    InlineStmt -> Stmt . 

  actions:
    action 'EOF' (noprec):   reduce InlineStmt --> Stmt
    action 'EAX' (noprec):   reduce InlineStmt --> Stmt
    action 'EBX' (noprec):   reduce InlineStmt --> Stmt
    action 'ECX' (noprec):   reduce InlineStmt --> Stmt
    action 'EDX' (noprec):   reduce InlineStmt --> Stmt
    action 'ESI' (noprec):   reduce InlineStmt --> Stmt
    action 'EDI' (noprec):   reduce InlineStmt --> Stmt
    action 'EBP' (noprec):   reduce InlineStmt --> Stmt
    action 'ESP' (noprec):   reduce InlineStmt --> Stmt
    action 'MODIFIES' (noprec):   reduce InlineStmt --> Stmt
    action 'INVARIANT' (noprec):   reduce InlineStmt --> Stmt
    action 'ASSERT' (noprec):   reduce InlineStmt --> Stmt
    action 'HAVOC' (noprec):   reduce InlineStmt --> Stmt
    action 'GOTO' (noprec):   reduce InlineStmt --> Stmt
    action 'CALL' (noprec):   reduce InlineStmt --> Stmt
    action 'CCALL' (noprec):   reduce InlineStmt --> Stmt
    action 'RET' (noprec):   reduce InlineStmt --> Stmt
    action 'IRET' (noprec):   reduce InlineStmt --> Stmt
    action 'GO' (noprec):   reduce InlineStmt --> Stmt
    action 'FORALL' (noprec):   reduce InlineStmt --> Stmt
    action 'EXISTS' (noprec):   reduce InlineStmt --> Stmt
    action 'OLD' (noprec):   reduce InlineStmt --> Stmt
    action 'COLONCOLON' (noprec):   reduce InlineStmt --> Stmt
    action 'EQEQGT' (noprec):   reduce InlineStmt --> Stmt
    action 'LTEQEQGT' (noprec):   reduce InlineStmt --> Stmt
    action 'TYPE' (noprec):   reduce InlineStmt --> Stmt
    action 'CONST' (noprec):   reduce InlineStmt --> Stmt
    action 'FUNCTION' (noprec):   reduce InlineStmt --> Stmt
    action 'RETURNS' (noprec):   reduce InlineStmt --> Stmt
    action 'AXIOM' (noprec):   reduce InlineStmt --> Stmt
    action 'PROCEDURE' (noprec):   reduce InlineStmt --> Stmt
    action 'IMPLEMENTATION' (noprec):   reduce InlineStmt --> Stmt
    action 'REQUIRES' (noprec):   reduce InlineStmt --> Stmt
    action 'ENSURES' (noprec):   reduce InlineStmt --> Stmt
    action 'LT' (noprec):   reduce InlineStmt --> Stmt
    action 'GT' (noprec):   reduce InlineStmt --> Stmt
    action 'EQ' (noprec):   reduce InlineStmt --> Stmt
    action 'BANG' (noprec):   reduce InlineStmt --> Stmt
    action 'COMMA' (noprec):   reduce InlineStmt --> Stmt
    action 'LE' (noprec):   reduce InlineStmt --> Stmt
    action 'GE' (noprec):   reduce InlineStmt --> Stmt
    action 'EQEQ' (noprec):   reduce InlineStmt --> Stmt
    action 'NE' (noprec):   reduce InlineStmt --> Stmt
    action 'PLUS' (noprec):   reduce InlineStmt --> Stmt
    action 'MINUS' (noprec):   reduce InlineStmt --> Stmt
    action 'STAR' (noprec):   reduce InlineStmt --> Stmt
    action 'SLASH' (noprec):   reduce InlineStmt --> Stmt
    action 'PERCENT' (noprec):   reduce InlineStmt --> Stmt
    action 'AMPAMP' (noprec):   reduce InlineStmt --> Stmt
    action 'BARBAR' (noprec):   reduce InlineStmt --> Stmt
    action 'COLONEQ' (noprec):   reduce InlineStmt --> Stmt
    action 'INT' (noprec):   reduce InlineStmt --> Stmt
    action 'BOOL' (noprec):   reduce InlineStmt --> Stmt
    action 'IF' (noprec):   reduce InlineStmt --> Stmt
    action 'RETURN' (noprec):   reduce InlineStmt --> Stmt
    action 'VAR' (noprec):   reduce InlineStmt --> Stmt
    action 'LBRACE' (noprec):   reduce InlineStmt --> Stmt
    action 'RBRACE' (noprec):   reduce InlineStmt --> Stmt
    action 'SEMI' (noprec):   reduce InlineStmt --> Stmt
    action 'COLON' (noprec):   reduce InlineStmt --> Stmt
    action 'LPAREN' (noprec):   reduce InlineStmt --> Stmt
    action 'RPAREN' (noprec):   reduce InlineStmt --> Stmt
    action 'LBRACKET' (noprec):   reduce InlineStmt --> Stmt
    action 'RBRACKET' (noprec):   reduce InlineStmt --> Stmt
    action 'LITBOOL' (noprec):   reduce InlineStmt --> Stmt
    action 'LITINT' (noprec):   reduce InlineStmt --> Stmt
    action 'QLID' (noprec):   reduce InlineStmt --> Stmt
    action 'QUID' (noprec):   reduce InlineStmt --> Stmt
    action 'DLID' (noprec):   reduce InlineStmt --> Stmt
    action 'DUID' (noprec):   reduce InlineStmt --> Stmt
    action 'LID' (noprec):   reduce InlineStmt --> Stmt
    action 'UID' (noprec):   reduce InlineStmt --> Stmt
    action 'error' (noprec):   reduce InlineStmt --> Stmt
    action '#' (noprec):   reduce InlineStmt --> Stmt
    action '$$' (noprec):   reduce InlineStmt --> Stmt

  immediate action:   reduce InlineStmt --> Stmt
 gotos:

state 260:
  items:
    ProcBlock -> ProcStmt . ProcBlock

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   shift 183
    action 'HAVOC' (noprec):   shift 153
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   shift 157
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   shift 185
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   shift 4
    action 'UID' (noprec):   shift 5
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto ID: 162
    goto HavocEip: 165
    goto Stmt: 257
    goto Return: 258
    goto ProcStmt: 260
    goto ProcBlock: 261

state 261:
  items:
    ProcBlock -> ProcStmt ProcBlock . 

  actions:
    action 'EOF' (noprec):   reduce ProcBlock --> ProcStmt ProcBlock
    action 'EAX' (noprec):   reduce ProcBlock --> ProcStmt ProcBlock
    action 'EBX' (noprec):   reduce ProcBlock --> ProcStmt ProcBlock
    action 'ECX' (noprec):   reduce ProcBlock --> ProcStmt ProcBlock
    action 'EDX' (noprec):   reduce ProcBlock --> ProcStmt ProcBlock
    action 'ESI' (noprec):   reduce ProcBlock --> ProcStmt ProcBlock
    action 'EDI' (noprec):   reduce ProcBlock --> ProcStmt ProcBlock
    action 'EBP' (noprec):   reduce ProcBlock --> ProcStmt ProcBlock
    action 'ESP' (noprec):   reduce ProcBlock --> ProcStmt ProcBlock
    action 'MODIFIES' (noprec):   reduce ProcBlock --> ProcStmt ProcBlock
    action 'INVARIANT' (noprec):   reduce ProcBlock --> ProcStmt ProcBlock
    action 'ASSERT' (noprec):   reduce ProcBlock --> ProcStmt ProcBlock
    action 'HAVOC' (noprec):   reduce ProcBlock --> ProcStmt ProcBlock
    action 'GOTO' (noprec):   reduce ProcBlock --> ProcStmt ProcBlock
    action 'CALL' (noprec):   reduce ProcBlock --> ProcStmt ProcBlock
    action 'CCALL' (noprec):   reduce ProcBlock --> ProcStmt ProcBlock
    action 'RET' (noprec):   reduce ProcBlock --> ProcStmt ProcBlock
    action 'IRET' (noprec):   reduce ProcBlock --> ProcStmt ProcBlock
    action 'GO' (noprec):   reduce ProcBlock --> ProcStmt ProcBlock
    action 'FORALL' (noprec):   reduce ProcBlock --> ProcStmt ProcBlock
    action 'EXISTS' (noprec):   reduce ProcBlock --> ProcStmt ProcBlock
    action 'OLD' (noprec):   reduce ProcBlock --> ProcStmt ProcBlock
    action 'COLONCOLON' (noprec):   reduce ProcBlock --> ProcStmt ProcBlock
    action 'EQEQGT' (noprec):   reduce ProcBlock --> ProcStmt ProcBlock
    action 'LTEQEQGT' (noprec):   reduce ProcBlock --> ProcStmt ProcBlock
    action 'TYPE' (noprec):   reduce ProcBlock --> ProcStmt ProcBlock
    action 'CONST' (noprec):   reduce ProcBlock --> ProcStmt ProcBlock
    action 'FUNCTION' (noprec):   reduce ProcBlock --> ProcStmt ProcBlock
    action 'RETURNS' (noprec):   reduce ProcBlock --> ProcStmt ProcBlock
    action 'AXIOM' (noprec):   reduce ProcBlock --> ProcStmt ProcBlock
    action 'PROCEDURE' (noprec):   reduce ProcBlock --> ProcStmt ProcBlock
    action 'IMPLEMENTATION' (noprec):   reduce ProcBlock --> ProcStmt ProcBlock
    action 'REQUIRES' (noprec):   reduce ProcBlock --> ProcStmt ProcBlock
    action 'ENSURES' (noprec):   reduce ProcBlock --> ProcStmt ProcBlock
    action 'LT' (noprec):   reduce ProcBlock --> ProcStmt ProcBlock
    action 'GT' (noprec):   reduce ProcBlock --> ProcStmt ProcBlock
    action 'EQ' (noprec):   reduce ProcBlock --> ProcStmt ProcBlock
    action 'BANG' (noprec):   reduce ProcBlock --> ProcStmt ProcBlock
    action 'COMMA' (noprec):   reduce ProcBlock --> ProcStmt ProcBlock
    action 'LE' (noprec):   reduce ProcBlock --> ProcStmt ProcBlock
    action 'GE' (noprec):   reduce ProcBlock --> ProcStmt ProcBlock
    action 'EQEQ' (noprec):   reduce ProcBlock --> ProcStmt ProcBlock
    action 'NE' (noprec):   reduce ProcBlock --> ProcStmt ProcBlock
    action 'PLUS' (noprec):   reduce ProcBlock --> ProcStmt ProcBlock
    action 'MINUS' (noprec):   reduce ProcBlock --> ProcStmt ProcBlock
    action 'STAR' (noprec):   reduce ProcBlock --> ProcStmt ProcBlock
    action 'SLASH' (noprec):   reduce ProcBlock --> ProcStmt ProcBlock
    action 'PERCENT' (noprec):   reduce ProcBlock --> ProcStmt ProcBlock
    action 'AMPAMP' (noprec):   reduce ProcBlock --> ProcStmt ProcBlock
    action 'BARBAR' (noprec):   reduce ProcBlock --> ProcStmt ProcBlock
    action 'COLONEQ' (noprec):   reduce ProcBlock --> ProcStmt ProcBlock
    action 'INT' (noprec):   reduce ProcBlock --> ProcStmt ProcBlock
    action 'BOOL' (noprec):   reduce ProcBlock --> ProcStmt ProcBlock
    action 'IF' (noprec):   reduce ProcBlock --> ProcStmt ProcBlock
    action 'RETURN' (noprec):   reduce ProcBlock --> ProcStmt ProcBlock
    action 'VAR' (noprec):   reduce ProcBlock --> ProcStmt ProcBlock
    action 'LBRACE' (noprec):   reduce ProcBlock --> ProcStmt ProcBlock
    action 'RBRACE' (noprec):   reduce ProcBlock --> ProcStmt ProcBlock
    action 'SEMI' (noprec):   reduce ProcBlock --> ProcStmt ProcBlock
    action 'COLON' (noprec):   reduce ProcBlock --> ProcStmt ProcBlock
    action 'LPAREN' (noprec):   reduce ProcBlock --> ProcStmt ProcBlock
    action 'RPAREN' (noprec):   reduce ProcBlock --> ProcStmt ProcBlock
    action 'LBRACKET' (noprec):   reduce ProcBlock --> ProcStmt ProcBlock
    action 'RBRACKET' (noprec):   reduce ProcBlock --> ProcStmt ProcBlock
    action 'LITBOOL' (noprec):   reduce ProcBlock --> ProcStmt ProcBlock
    action 'LITINT' (noprec):   reduce ProcBlock --> ProcStmt ProcBlock
    action 'QLID' (noprec):   reduce ProcBlock --> ProcStmt ProcBlock
    action 'QUID' (noprec):   reduce ProcBlock --> ProcStmt ProcBlock
    action 'DLID' (noprec):   reduce ProcBlock --> ProcStmt ProcBlock
    action 'DUID' (noprec):   reduce ProcBlock --> ProcStmt ProcBlock
    action 'LID' (noprec):   reduce ProcBlock --> ProcStmt ProcBlock
    action 'UID' (noprec):   reduce ProcBlock --> ProcStmt ProcBlock
    action 'error' (noprec):   reduce ProcBlock --> ProcStmt ProcBlock
    action '#' (noprec):   reduce ProcBlock --> ProcStmt ProcBlock
    action '$$' (noprec):   reduce ProcBlock --> ProcStmt ProcBlock

  immediate action:   reduce ProcBlock --> ProcStmt ProcBlock
 gotos:

state 262:
  items:
    ProcDecls -> 'VAR' . 'LID' 'COLON' 'INT' 'SEMI' ProcDecls
    ProcDecls -> 'VAR' . 'DLID' 'COLON' Type 'SEMI' ProcDecls

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   shift 268
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   shift 263
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 263:
  items:
    ProcDecls -> 'VAR' 'LID' . 'COLON' 'INT' 'SEMI' ProcDecls

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   shift 264
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 264:
  items:
    ProcDecls -> 'VAR' 'LID' 'COLON' . 'INT' 'SEMI' ProcDecls

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   shift 265
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 265:
  items:
    ProcDecls -> 'VAR' 'LID' 'COLON' 'INT' . 'SEMI' ProcDecls

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   shift 266
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 266:
  items:
    ProcDecls -> 'VAR' 'LID' 'COLON' 'INT' 'SEMI' . ProcDecls

  actions:
    action 'EOF' (noprec):   reduce ProcDecls --> 
    action 'EAX' (noprec):   reduce ProcDecls --> 
    action 'EBX' (noprec):   reduce ProcDecls --> 
    action 'ECX' (noprec):   reduce ProcDecls --> 
    action 'EDX' (noprec):   reduce ProcDecls --> 
    action 'ESI' (noprec):   reduce ProcDecls --> 
    action 'EDI' (noprec):   reduce ProcDecls --> 
    action 'EBP' (noprec):   reduce ProcDecls --> 
    action 'ESP' (noprec):   reduce ProcDecls --> 
    action 'MODIFIES' (noprec):   reduce ProcDecls --> 
    action 'INVARIANT' (noprec):   reduce ProcDecls --> 
    action 'ASSERT' (noprec):   reduce ProcDecls --> 
    action 'HAVOC' (noprec):   reduce ProcDecls --> 
    action 'GOTO' (noprec):   reduce ProcDecls --> 
    action 'CALL' (noprec):   reduce ProcDecls --> 
    action 'CCALL' (noprec):   reduce ProcDecls --> 
    action 'RET' (noprec):   reduce ProcDecls --> 
    action 'IRET' (noprec):   reduce ProcDecls --> 
    action 'GO' (noprec):   reduce ProcDecls --> 
    action 'FORALL' (noprec):   reduce ProcDecls --> 
    action 'EXISTS' (noprec):   reduce ProcDecls --> 
    action 'OLD' (noprec):   reduce ProcDecls --> 
    action 'COLONCOLON' (noprec):   reduce ProcDecls --> 
    action 'EQEQGT' (noprec):   reduce ProcDecls --> 
    action 'LTEQEQGT' (noprec):   reduce ProcDecls --> 
    action 'TYPE' (noprec):   reduce ProcDecls --> 
    action 'CONST' (noprec):   reduce ProcDecls --> 
    action 'FUNCTION' (noprec):   reduce ProcDecls --> 
    action 'RETURNS' (noprec):   reduce ProcDecls --> 
    action 'AXIOM' (noprec):   reduce ProcDecls --> 
    action 'PROCEDURE' (noprec):   reduce ProcDecls --> 
    action 'IMPLEMENTATION' (noprec):   reduce ProcDecls --> 
    action 'REQUIRES' (noprec):   reduce ProcDecls --> 
    action 'ENSURES' (noprec):   reduce ProcDecls --> 
    action 'LT' (noprec):   reduce ProcDecls --> 
    action 'GT' (noprec):   reduce ProcDecls --> 
    action 'EQ' (noprec):   reduce ProcDecls --> 
    action 'BANG' (noprec):   reduce ProcDecls --> 
    action 'COMMA' (noprec):   reduce ProcDecls --> 
    action 'LE' (noprec):   reduce ProcDecls --> 
    action 'GE' (noprec):   reduce ProcDecls --> 
    action 'EQEQ' (noprec):   reduce ProcDecls --> 
    action 'NE' (noprec):   reduce ProcDecls --> 
    action 'PLUS' (noprec):   reduce ProcDecls --> 
    action 'MINUS' (noprec):   reduce ProcDecls --> 
    action 'STAR' (noprec):   reduce ProcDecls --> 
    action 'SLASH' (noprec):   reduce ProcDecls --> 
    action 'PERCENT' (noprec):   reduce ProcDecls --> 
    action 'AMPAMP' (noprec):   reduce ProcDecls --> 
    action 'BARBAR' (noprec):   reduce ProcDecls --> 
    action 'COLONEQ' (noprec):   reduce ProcDecls --> 
    action 'INT' (noprec):   reduce ProcDecls --> 
    action 'BOOL' (noprec):   reduce ProcDecls --> 
    action 'IF' (noprec):   reduce ProcDecls --> 
    action 'RETURN' (noprec):   reduce ProcDecls --> 
    action 'VAR' (noprec):   shift 262
    action 'LBRACE' (noprec):   reduce ProcDecls --> 
    action 'RBRACE' (noprec):   reduce ProcDecls --> 
    action 'SEMI' (noprec):   reduce ProcDecls --> 
    action 'COLON' (noprec):   reduce ProcDecls --> 
    action 'LPAREN' (noprec):   reduce ProcDecls --> 
    action 'RPAREN' (noprec):   reduce ProcDecls --> 
    action 'LBRACKET' (noprec):   reduce ProcDecls --> 
    action 'RBRACKET' (noprec):   reduce ProcDecls --> 
    action 'LITBOOL' (noprec):   reduce ProcDecls --> 
    action 'LITINT' (noprec):   reduce ProcDecls --> 
    action 'QLID' (noprec):   reduce ProcDecls --> 
    action 'QUID' (noprec):   reduce ProcDecls --> 
    action 'DLID' (noprec):   reduce ProcDecls --> 
    action 'DUID' (noprec):   reduce ProcDecls --> 
    action 'LID' (noprec):   reduce ProcDecls --> 
    action 'UID' (noprec):   reduce ProcDecls --> 
    action 'error' (noprec):   reduce ProcDecls --> 
    action '#' (noprec):   reduce ProcDecls --> 
    action '$$' (noprec):   reduce ProcDecls --> 

  immediate action: <none>
 gotos:
    goto ProcDecls: 267

state 267:
  items:
    ProcDecls -> 'VAR' 'LID' 'COLON' 'INT' 'SEMI' ProcDecls . 

  actions:
    action 'EOF' (noprec):   reduce ProcDecls --> 'VAR' 'LID' 'COLON' 'INT' 'SEMI' ProcDecls
    action 'EAX' (noprec):   reduce ProcDecls --> 'VAR' 'LID' 'COLON' 'INT' 'SEMI' ProcDecls
    action 'EBX' (noprec):   reduce ProcDecls --> 'VAR' 'LID' 'COLON' 'INT' 'SEMI' ProcDecls
    action 'ECX' (noprec):   reduce ProcDecls --> 'VAR' 'LID' 'COLON' 'INT' 'SEMI' ProcDecls
    action 'EDX' (noprec):   reduce ProcDecls --> 'VAR' 'LID' 'COLON' 'INT' 'SEMI' ProcDecls
    action 'ESI' (noprec):   reduce ProcDecls --> 'VAR' 'LID' 'COLON' 'INT' 'SEMI' ProcDecls
    action 'EDI' (noprec):   reduce ProcDecls --> 'VAR' 'LID' 'COLON' 'INT' 'SEMI' ProcDecls
    action 'EBP' (noprec):   reduce ProcDecls --> 'VAR' 'LID' 'COLON' 'INT' 'SEMI' ProcDecls
    action 'ESP' (noprec):   reduce ProcDecls --> 'VAR' 'LID' 'COLON' 'INT' 'SEMI' ProcDecls
    action 'MODIFIES' (noprec):   reduce ProcDecls --> 'VAR' 'LID' 'COLON' 'INT' 'SEMI' ProcDecls
    action 'INVARIANT' (noprec):   reduce ProcDecls --> 'VAR' 'LID' 'COLON' 'INT' 'SEMI' ProcDecls
    action 'ASSERT' (noprec):   reduce ProcDecls --> 'VAR' 'LID' 'COLON' 'INT' 'SEMI' ProcDecls
    action 'HAVOC' (noprec):   reduce ProcDecls --> 'VAR' 'LID' 'COLON' 'INT' 'SEMI' ProcDecls
    action 'GOTO' (noprec):   reduce ProcDecls --> 'VAR' 'LID' 'COLON' 'INT' 'SEMI' ProcDecls
    action 'CALL' (noprec):   reduce ProcDecls --> 'VAR' 'LID' 'COLON' 'INT' 'SEMI' ProcDecls
    action 'CCALL' (noprec):   reduce ProcDecls --> 'VAR' 'LID' 'COLON' 'INT' 'SEMI' ProcDecls
    action 'RET' (noprec):   reduce ProcDecls --> 'VAR' 'LID' 'COLON' 'INT' 'SEMI' ProcDecls
    action 'IRET' (noprec):   reduce ProcDecls --> 'VAR' 'LID' 'COLON' 'INT' 'SEMI' ProcDecls
    action 'GO' (noprec):   reduce ProcDecls --> 'VAR' 'LID' 'COLON' 'INT' 'SEMI' ProcDecls
    action 'FORALL' (noprec):   reduce ProcDecls --> 'VAR' 'LID' 'COLON' 'INT' 'SEMI' ProcDecls
    action 'EXISTS' (noprec):   reduce ProcDecls --> 'VAR' 'LID' 'COLON' 'INT' 'SEMI' ProcDecls
    action 'OLD' (noprec):   reduce ProcDecls --> 'VAR' 'LID' 'COLON' 'INT' 'SEMI' ProcDecls
    action 'COLONCOLON' (noprec):   reduce ProcDecls --> 'VAR' 'LID' 'COLON' 'INT' 'SEMI' ProcDecls
    action 'EQEQGT' (noprec):   reduce ProcDecls --> 'VAR' 'LID' 'COLON' 'INT' 'SEMI' ProcDecls
    action 'LTEQEQGT' (noprec):   reduce ProcDecls --> 'VAR' 'LID' 'COLON' 'INT' 'SEMI' ProcDecls
    action 'TYPE' (noprec):   reduce ProcDecls --> 'VAR' 'LID' 'COLON' 'INT' 'SEMI' ProcDecls
    action 'CONST' (noprec):   reduce ProcDecls --> 'VAR' 'LID' 'COLON' 'INT' 'SEMI' ProcDecls
    action 'FUNCTION' (noprec):   reduce ProcDecls --> 'VAR' 'LID' 'COLON' 'INT' 'SEMI' ProcDecls
    action 'RETURNS' (noprec):   reduce ProcDecls --> 'VAR' 'LID' 'COLON' 'INT' 'SEMI' ProcDecls
    action 'AXIOM' (noprec):   reduce ProcDecls --> 'VAR' 'LID' 'COLON' 'INT' 'SEMI' ProcDecls
    action 'PROCEDURE' (noprec):   reduce ProcDecls --> 'VAR' 'LID' 'COLON' 'INT' 'SEMI' ProcDecls
    action 'IMPLEMENTATION' (noprec):   reduce ProcDecls --> 'VAR' 'LID' 'COLON' 'INT' 'SEMI' ProcDecls
    action 'REQUIRES' (noprec):   reduce ProcDecls --> 'VAR' 'LID' 'COLON' 'INT' 'SEMI' ProcDecls
    action 'ENSURES' (noprec):   reduce ProcDecls --> 'VAR' 'LID' 'COLON' 'INT' 'SEMI' ProcDecls
    action 'LT' (noprec):   reduce ProcDecls --> 'VAR' 'LID' 'COLON' 'INT' 'SEMI' ProcDecls
    action 'GT' (noprec):   reduce ProcDecls --> 'VAR' 'LID' 'COLON' 'INT' 'SEMI' ProcDecls
    action 'EQ' (noprec):   reduce ProcDecls --> 'VAR' 'LID' 'COLON' 'INT' 'SEMI' ProcDecls
    action 'BANG' (noprec):   reduce ProcDecls --> 'VAR' 'LID' 'COLON' 'INT' 'SEMI' ProcDecls
    action 'COMMA' (noprec):   reduce ProcDecls --> 'VAR' 'LID' 'COLON' 'INT' 'SEMI' ProcDecls
    action 'LE' (noprec):   reduce ProcDecls --> 'VAR' 'LID' 'COLON' 'INT' 'SEMI' ProcDecls
    action 'GE' (noprec):   reduce ProcDecls --> 'VAR' 'LID' 'COLON' 'INT' 'SEMI' ProcDecls
    action 'EQEQ' (noprec):   reduce ProcDecls --> 'VAR' 'LID' 'COLON' 'INT' 'SEMI' ProcDecls
    action 'NE' (noprec):   reduce ProcDecls --> 'VAR' 'LID' 'COLON' 'INT' 'SEMI' ProcDecls
    action 'PLUS' (noprec):   reduce ProcDecls --> 'VAR' 'LID' 'COLON' 'INT' 'SEMI' ProcDecls
    action 'MINUS' (noprec):   reduce ProcDecls --> 'VAR' 'LID' 'COLON' 'INT' 'SEMI' ProcDecls
    action 'STAR' (noprec):   reduce ProcDecls --> 'VAR' 'LID' 'COLON' 'INT' 'SEMI' ProcDecls
    action 'SLASH' (noprec):   reduce ProcDecls --> 'VAR' 'LID' 'COLON' 'INT' 'SEMI' ProcDecls
    action 'PERCENT' (noprec):   reduce ProcDecls --> 'VAR' 'LID' 'COLON' 'INT' 'SEMI' ProcDecls
    action 'AMPAMP' (noprec):   reduce ProcDecls --> 'VAR' 'LID' 'COLON' 'INT' 'SEMI' ProcDecls
    action 'BARBAR' (noprec):   reduce ProcDecls --> 'VAR' 'LID' 'COLON' 'INT' 'SEMI' ProcDecls
    action 'COLONEQ' (noprec):   reduce ProcDecls --> 'VAR' 'LID' 'COLON' 'INT' 'SEMI' ProcDecls
    action 'INT' (noprec):   reduce ProcDecls --> 'VAR' 'LID' 'COLON' 'INT' 'SEMI' ProcDecls
    action 'BOOL' (noprec):   reduce ProcDecls --> 'VAR' 'LID' 'COLON' 'INT' 'SEMI' ProcDecls
    action 'IF' (noprec):   reduce ProcDecls --> 'VAR' 'LID' 'COLON' 'INT' 'SEMI' ProcDecls
    action 'RETURN' (noprec):   reduce ProcDecls --> 'VAR' 'LID' 'COLON' 'INT' 'SEMI' ProcDecls
    action 'VAR' (noprec):   reduce ProcDecls --> 'VAR' 'LID' 'COLON' 'INT' 'SEMI' ProcDecls
    action 'LBRACE' (noprec):   reduce ProcDecls --> 'VAR' 'LID' 'COLON' 'INT' 'SEMI' ProcDecls
    action 'RBRACE' (noprec):   reduce ProcDecls --> 'VAR' 'LID' 'COLON' 'INT' 'SEMI' ProcDecls
    action 'SEMI' (noprec):   reduce ProcDecls --> 'VAR' 'LID' 'COLON' 'INT' 'SEMI' ProcDecls
    action 'COLON' (noprec):   reduce ProcDecls --> 'VAR' 'LID' 'COLON' 'INT' 'SEMI' ProcDecls
    action 'LPAREN' (noprec):   reduce ProcDecls --> 'VAR' 'LID' 'COLON' 'INT' 'SEMI' ProcDecls
    action 'RPAREN' (noprec):   reduce ProcDecls --> 'VAR' 'LID' 'COLON' 'INT' 'SEMI' ProcDecls
    action 'LBRACKET' (noprec):   reduce ProcDecls --> 'VAR' 'LID' 'COLON' 'INT' 'SEMI' ProcDecls
    action 'RBRACKET' (noprec):   reduce ProcDecls --> 'VAR' 'LID' 'COLON' 'INT' 'SEMI' ProcDecls
    action 'LITBOOL' (noprec):   reduce ProcDecls --> 'VAR' 'LID' 'COLON' 'INT' 'SEMI' ProcDecls
    action 'LITINT' (noprec):   reduce ProcDecls --> 'VAR' 'LID' 'COLON' 'INT' 'SEMI' ProcDecls
    action 'QLID' (noprec):   reduce ProcDecls --> 'VAR' 'LID' 'COLON' 'INT' 'SEMI' ProcDecls
    action 'QUID' (noprec):   reduce ProcDecls --> 'VAR' 'LID' 'COLON' 'INT' 'SEMI' ProcDecls
    action 'DLID' (noprec):   reduce ProcDecls --> 'VAR' 'LID' 'COLON' 'INT' 'SEMI' ProcDecls
    action 'DUID' (noprec):   reduce ProcDecls --> 'VAR' 'LID' 'COLON' 'INT' 'SEMI' ProcDecls
    action 'LID' (noprec):   reduce ProcDecls --> 'VAR' 'LID' 'COLON' 'INT' 'SEMI' ProcDecls
    action 'UID' (noprec):   reduce ProcDecls --> 'VAR' 'LID' 'COLON' 'INT' 'SEMI' ProcDecls
    action 'error' (noprec):   reduce ProcDecls --> 'VAR' 'LID' 'COLON' 'INT' 'SEMI' ProcDecls
    action '#' (noprec):   reduce ProcDecls --> 'VAR' 'LID' 'COLON' 'INT' 'SEMI' ProcDecls
    action '$$' (noprec):   reduce ProcDecls --> 'VAR' 'LID' 'COLON' 'INT' 'SEMI' ProcDecls

  immediate action:   reduce ProcDecls --> 'VAR' 'LID' 'COLON' 'INT' 'SEMI' ProcDecls
 gotos:

state 268:
  items:
    ProcDecls -> 'VAR' 'DLID' . 'COLON' Type 'SEMI' ProcDecls

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   shift 269
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 269:
  items:
    ProcDecls -> 'VAR' 'DLID' 'COLON' . Type 'SEMI' ProcDecls

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   shift 6
    action 'BOOL' (noprec):   shift 7
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (explicit left 10000):   shift 8
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   shift 145
    action 'QUID' (noprec):   shift 144
    action 'DLID' (noprec):   shift 143
    action 'DUID' (noprec):   shift 142
    action 'LID' (noprec):   shift 4
    action 'UID' (noprec):   shift 5
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto ID: 141
    goto Type: 270
    goto AnyId: 12

state 270:
  items:
    ProcDecls -> 'VAR' 'DLID' 'COLON' Type . 'SEMI' ProcDecls

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   shift 271
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 271:
  items:
    ProcDecls -> 'VAR' 'DLID' 'COLON' Type 'SEMI' . ProcDecls

  actions:
    action 'EOF' (noprec):   reduce ProcDecls --> 
    action 'EAX' (noprec):   reduce ProcDecls --> 
    action 'EBX' (noprec):   reduce ProcDecls --> 
    action 'ECX' (noprec):   reduce ProcDecls --> 
    action 'EDX' (noprec):   reduce ProcDecls --> 
    action 'ESI' (noprec):   reduce ProcDecls --> 
    action 'EDI' (noprec):   reduce ProcDecls --> 
    action 'EBP' (noprec):   reduce ProcDecls --> 
    action 'ESP' (noprec):   reduce ProcDecls --> 
    action 'MODIFIES' (noprec):   reduce ProcDecls --> 
    action 'INVARIANT' (noprec):   reduce ProcDecls --> 
    action 'ASSERT' (noprec):   reduce ProcDecls --> 
    action 'HAVOC' (noprec):   reduce ProcDecls --> 
    action 'GOTO' (noprec):   reduce ProcDecls --> 
    action 'CALL' (noprec):   reduce ProcDecls --> 
    action 'CCALL' (noprec):   reduce ProcDecls --> 
    action 'RET' (noprec):   reduce ProcDecls --> 
    action 'IRET' (noprec):   reduce ProcDecls --> 
    action 'GO' (noprec):   reduce ProcDecls --> 
    action 'FORALL' (noprec):   reduce ProcDecls --> 
    action 'EXISTS' (noprec):   reduce ProcDecls --> 
    action 'OLD' (noprec):   reduce ProcDecls --> 
    action 'COLONCOLON' (noprec):   reduce ProcDecls --> 
    action 'EQEQGT' (noprec):   reduce ProcDecls --> 
    action 'LTEQEQGT' (noprec):   reduce ProcDecls --> 
    action 'TYPE' (noprec):   reduce ProcDecls --> 
    action 'CONST' (noprec):   reduce ProcDecls --> 
    action 'FUNCTION' (noprec):   reduce ProcDecls --> 
    action 'RETURNS' (noprec):   reduce ProcDecls --> 
    action 'AXIOM' (noprec):   reduce ProcDecls --> 
    action 'PROCEDURE' (noprec):   reduce ProcDecls --> 
    action 'IMPLEMENTATION' (noprec):   reduce ProcDecls --> 
    action 'REQUIRES' (noprec):   reduce ProcDecls --> 
    action 'ENSURES' (noprec):   reduce ProcDecls --> 
    action 'LT' (noprec):   reduce ProcDecls --> 
    action 'GT' (noprec):   reduce ProcDecls --> 
    action 'EQ' (noprec):   reduce ProcDecls --> 
    action 'BANG' (noprec):   reduce ProcDecls --> 
    action 'COMMA' (noprec):   reduce ProcDecls --> 
    action 'LE' (noprec):   reduce ProcDecls --> 
    action 'GE' (noprec):   reduce ProcDecls --> 
    action 'EQEQ' (noprec):   reduce ProcDecls --> 
    action 'NE' (noprec):   reduce ProcDecls --> 
    action 'PLUS' (noprec):   reduce ProcDecls --> 
    action 'MINUS' (noprec):   reduce ProcDecls --> 
    action 'STAR' (noprec):   reduce ProcDecls --> 
    action 'SLASH' (noprec):   reduce ProcDecls --> 
    action 'PERCENT' (noprec):   reduce ProcDecls --> 
    action 'AMPAMP' (noprec):   reduce ProcDecls --> 
    action 'BARBAR' (noprec):   reduce ProcDecls --> 
    action 'COLONEQ' (noprec):   reduce ProcDecls --> 
    action 'INT' (noprec):   reduce ProcDecls --> 
    action 'BOOL' (noprec):   reduce ProcDecls --> 
    action 'IF' (noprec):   reduce ProcDecls --> 
    action 'RETURN' (noprec):   reduce ProcDecls --> 
    action 'VAR' (noprec):   shift 262
    action 'LBRACE' (noprec):   reduce ProcDecls --> 
    action 'RBRACE' (noprec):   reduce ProcDecls --> 
    action 'SEMI' (noprec):   reduce ProcDecls --> 
    action 'COLON' (noprec):   reduce ProcDecls --> 
    action 'LPAREN' (noprec):   reduce ProcDecls --> 
    action 'RPAREN' (noprec):   reduce ProcDecls --> 
    action 'LBRACKET' (noprec):   reduce ProcDecls --> 
    action 'RBRACKET' (noprec):   reduce ProcDecls --> 
    action 'LITBOOL' (noprec):   reduce ProcDecls --> 
    action 'LITINT' (noprec):   reduce ProcDecls --> 
    action 'QLID' (noprec):   reduce ProcDecls --> 
    action 'QUID' (noprec):   reduce ProcDecls --> 
    action 'DLID' (noprec):   reduce ProcDecls --> 
    action 'DUID' (noprec):   reduce ProcDecls --> 
    action 'LID' (noprec):   reduce ProcDecls --> 
    action 'UID' (noprec):   reduce ProcDecls --> 
    action 'error' (noprec):   reduce ProcDecls --> 
    action '#' (noprec):   reduce ProcDecls --> 
    action '$$' (noprec):   reduce ProcDecls --> 

  immediate action: <none>
 gotos:
    goto ProcDecls: 272

state 272:
  items:
    ProcDecls -> 'VAR' 'DLID' 'COLON' Type 'SEMI' ProcDecls . 

  actions:
    action 'EOF' (noprec):   reduce ProcDecls --> 'VAR' 'DLID' 'COLON' Type 'SEMI' ProcDecls
    action 'EAX' (noprec):   reduce ProcDecls --> 'VAR' 'DLID' 'COLON' Type 'SEMI' ProcDecls
    action 'EBX' (noprec):   reduce ProcDecls --> 'VAR' 'DLID' 'COLON' Type 'SEMI' ProcDecls
    action 'ECX' (noprec):   reduce ProcDecls --> 'VAR' 'DLID' 'COLON' Type 'SEMI' ProcDecls
    action 'EDX' (noprec):   reduce ProcDecls --> 'VAR' 'DLID' 'COLON' Type 'SEMI' ProcDecls
    action 'ESI' (noprec):   reduce ProcDecls --> 'VAR' 'DLID' 'COLON' Type 'SEMI' ProcDecls
    action 'EDI' (noprec):   reduce ProcDecls --> 'VAR' 'DLID' 'COLON' Type 'SEMI' ProcDecls
    action 'EBP' (noprec):   reduce ProcDecls --> 'VAR' 'DLID' 'COLON' Type 'SEMI' ProcDecls
    action 'ESP' (noprec):   reduce ProcDecls --> 'VAR' 'DLID' 'COLON' Type 'SEMI' ProcDecls
    action 'MODIFIES' (noprec):   reduce ProcDecls --> 'VAR' 'DLID' 'COLON' Type 'SEMI' ProcDecls
    action 'INVARIANT' (noprec):   reduce ProcDecls --> 'VAR' 'DLID' 'COLON' Type 'SEMI' ProcDecls
    action 'ASSERT' (noprec):   reduce ProcDecls --> 'VAR' 'DLID' 'COLON' Type 'SEMI' ProcDecls
    action 'HAVOC' (noprec):   reduce ProcDecls --> 'VAR' 'DLID' 'COLON' Type 'SEMI' ProcDecls
    action 'GOTO' (noprec):   reduce ProcDecls --> 'VAR' 'DLID' 'COLON' Type 'SEMI' ProcDecls
    action 'CALL' (noprec):   reduce ProcDecls --> 'VAR' 'DLID' 'COLON' Type 'SEMI' ProcDecls
    action 'CCALL' (noprec):   reduce ProcDecls --> 'VAR' 'DLID' 'COLON' Type 'SEMI' ProcDecls
    action 'RET' (noprec):   reduce ProcDecls --> 'VAR' 'DLID' 'COLON' Type 'SEMI' ProcDecls
    action 'IRET' (noprec):   reduce ProcDecls --> 'VAR' 'DLID' 'COLON' Type 'SEMI' ProcDecls
    action 'GO' (noprec):   reduce ProcDecls --> 'VAR' 'DLID' 'COLON' Type 'SEMI' ProcDecls
    action 'FORALL' (noprec):   reduce ProcDecls --> 'VAR' 'DLID' 'COLON' Type 'SEMI' ProcDecls
    action 'EXISTS' (noprec):   reduce ProcDecls --> 'VAR' 'DLID' 'COLON' Type 'SEMI' ProcDecls
    action 'OLD' (noprec):   reduce ProcDecls --> 'VAR' 'DLID' 'COLON' Type 'SEMI' ProcDecls
    action 'COLONCOLON' (noprec):   reduce ProcDecls --> 'VAR' 'DLID' 'COLON' Type 'SEMI' ProcDecls
    action 'EQEQGT' (noprec):   reduce ProcDecls --> 'VAR' 'DLID' 'COLON' Type 'SEMI' ProcDecls
    action 'LTEQEQGT' (noprec):   reduce ProcDecls --> 'VAR' 'DLID' 'COLON' Type 'SEMI' ProcDecls
    action 'TYPE' (noprec):   reduce ProcDecls --> 'VAR' 'DLID' 'COLON' Type 'SEMI' ProcDecls
    action 'CONST' (noprec):   reduce ProcDecls --> 'VAR' 'DLID' 'COLON' Type 'SEMI' ProcDecls
    action 'FUNCTION' (noprec):   reduce ProcDecls --> 'VAR' 'DLID' 'COLON' Type 'SEMI' ProcDecls
    action 'RETURNS' (noprec):   reduce ProcDecls --> 'VAR' 'DLID' 'COLON' Type 'SEMI' ProcDecls
    action 'AXIOM' (noprec):   reduce ProcDecls --> 'VAR' 'DLID' 'COLON' Type 'SEMI' ProcDecls
    action 'PROCEDURE' (noprec):   reduce ProcDecls --> 'VAR' 'DLID' 'COLON' Type 'SEMI' ProcDecls
    action 'IMPLEMENTATION' (noprec):   reduce ProcDecls --> 'VAR' 'DLID' 'COLON' Type 'SEMI' ProcDecls
    action 'REQUIRES' (noprec):   reduce ProcDecls --> 'VAR' 'DLID' 'COLON' Type 'SEMI' ProcDecls
    action 'ENSURES' (noprec):   reduce ProcDecls --> 'VAR' 'DLID' 'COLON' Type 'SEMI' ProcDecls
    action 'LT' (noprec):   reduce ProcDecls --> 'VAR' 'DLID' 'COLON' Type 'SEMI' ProcDecls
    action 'GT' (noprec):   reduce ProcDecls --> 'VAR' 'DLID' 'COLON' Type 'SEMI' ProcDecls
    action 'EQ' (noprec):   reduce ProcDecls --> 'VAR' 'DLID' 'COLON' Type 'SEMI' ProcDecls
    action 'BANG' (noprec):   reduce ProcDecls --> 'VAR' 'DLID' 'COLON' Type 'SEMI' ProcDecls
    action 'COMMA' (noprec):   reduce ProcDecls --> 'VAR' 'DLID' 'COLON' Type 'SEMI' ProcDecls
    action 'LE' (noprec):   reduce ProcDecls --> 'VAR' 'DLID' 'COLON' Type 'SEMI' ProcDecls
    action 'GE' (noprec):   reduce ProcDecls --> 'VAR' 'DLID' 'COLON' Type 'SEMI' ProcDecls
    action 'EQEQ' (noprec):   reduce ProcDecls --> 'VAR' 'DLID' 'COLON' Type 'SEMI' ProcDecls
    action 'NE' (noprec):   reduce ProcDecls --> 'VAR' 'DLID' 'COLON' Type 'SEMI' ProcDecls
    action 'PLUS' (noprec):   reduce ProcDecls --> 'VAR' 'DLID' 'COLON' Type 'SEMI' ProcDecls
    action 'MINUS' (noprec):   reduce ProcDecls --> 'VAR' 'DLID' 'COLON' Type 'SEMI' ProcDecls
    action 'STAR' (noprec):   reduce ProcDecls --> 'VAR' 'DLID' 'COLON' Type 'SEMI' ProcDecls
    action 'SLASH' (noprec):   reduce ProcDecls --> 'VAR' 'DLID' 'COLON' Type 'SEMI' ProcDecls
    action 'PERCENT' (noprec):   reduce ProcDecls --> 'VAR' 'DLID' 'COLON' Type 'SEMI' ProcDecls
    action 'AMPAMP' (noprec):   reduce ProcDecls --> 'VAR' 'DLID' 'COLON' Type 'SEMI' ProcDecls
    action 'BARBAR' (noprec):   reduce ProcDecls --> 'VAR' 'DLID' 'COLON' Type 'SEMI' ProcDecls
    action 'COLONEQ' (noprec):   reduce ProcDecls --> 'VAR' 'DLID' 'COLON' Type 'SEMI' ProcDecls
    action 'INT' (noprec):   reduce ProcDecls --> 'VAR' 'DLID' 'COLON' Type 'SEMI' ProcDecls
    action 'BOOL' (noprec):   reduce ProcDecls --> 'VAR' 'DLID' 'COLON' Type 'SEMI' ProcDecls
    action 'IF' (noprec):   reduce ProcDecls --> 'VAR' 'DLID' 'COLON' Type 'SEMI' ProcDecls
    action 'RETURN' (noprec):   reduce ProcDecls --> 'VAR' 'DLID' 'COLON' Type 'SEMI' ProcDecls
    action 'VAR' (noprec):   reduce ProcDecls --> 'VAR' 'DLID' 'COLON' Type 'SEMI' ProcDecls
    action 'LBRACE' (noprec):   reduce ProcDecls --> 'VAR' 'DLID' 'COLON' Type 'SEMI' ProcDecls
    action 'RBRACE' (noprec):   reduce ProcDecls --> 'VAR' 'DLID' 'COLON' Type 'SEMI' ProcDecls
    action 'SEMI' (noprec):   reduce ProcDecls --> 'VAR' 'DLID' 'COLON' Type 'SEMI' ProcDecls
    action 'COLON' (noprec):   reduce ProcDecls --> 'VAR' 'DLID' 'COLON' Type 'SEMI' ProcDecls
    action 'LPAREN' (noprec):   reduce ProcDecls --> 'VAR' 'DLID' 'COLON' Type 'SEMI' ProcDecls
    action 'RPAREN' (noprec):   reduce ProcDecls --> 'VAR' 'DLID' 'COLON' Type 'SEMI' ProcDecls
    action 'LBRACKET' (noprec):   reduce ProcDecls --> 'VAR' 'DLID' 'COLON' Type 'SEMI' ProcDecls
    action 'RBRACKET' (noprec):   reduce ProcDecls --> 'VAR' 'DLID' 'COLON' Type 'SEMI' ProcDecls
    action 'LITBOOL' (noprec):   reduce ProcDecls --> 'VAR' 'DLID' 'COLON' Type 'SEMI' ProcDecls
    action 'LITINT' (noprec):   reduce ProcDecls --> 'VAR' 'DLID' 'COLON' Type 'SEMI' ProcDecls
    action 'QLID' (noprec):   reduce ProcDecls --> 'VAR' 'DLID' 'COLON' Type 'SEMI' ProcDecls
    action 'QUID' (noprec):   reduce ProcDecls --> 'VAR' 'DLID' 'COLON' Type 'SEMI' ProcDecls
    action 'DLID' (noprec):   reduce ProcDecls --> 'VAR' 'DLID' 'COLON' Type 'SEMI' ProcDecls
    action 'DUID' (noprec):   reduce ProcDecls --> 'VAR' 'DLID' 'COLON' Type 'SEMI' ProcDecls
    action 'LID' (noprec):   reduce ProcDecls --> 'VAR' 'DLID' 'COLON' Type 'SEMI' ProcDecls
    action 'UID' (noprec):   reduce ProcDecls --> 'VAR' 'DLID' 'COLON' Type 'SEMI' ProcDecls
    action 'error' (noprec):   reduce ProcDecls --> 'VAR' 'DLID' 'COLON' Type 'SEMI' ProcDecls
    action '#' (noprec):   reduce ProcDecls --> 'VAR' 'DLID' 'COLON' Type 'SEMI' ProcDecls
    action '$$' (noprec):   reduce ProcDecls --> 'VAR' 'DLID' 'COLON' Type 'SEMI' ProcDecls

  immediate action:   reduce ProcDecls --> 'VAR' 'DLID' 'COLON' Type 'SEMI' ProcDecls
 gotos:

state 273:
  items:
    InlineBlock -> InlineStmt . InlineBlock

  actions:
    action 'EOF' (noprec):   reduce InlineBlock --> 
    action 'EAX' (noprec):   reduce InlineBlock --> 
    action 'EBX' (noprec):   reduce InlineBlock --> 
    action 'ECX' (noprec):   reduce InlineBlock --> 
    action 'EDX' (noprec):   reduce InlineBlock --> 
    action 'ESI' (noprec):   reduce InlineBlock --> 
    action 'EDI' (noprec):   reduce InlineBlock --> 
    action 'EBP' (noprec):   reduce InlineBlock --> 
    action 'ESP' (noprec):   reduce InlineBlock --> 
    action 'MODIFIES' (noprec):   reduce InlineBlock --> 
    action 'INVARIANT' (noprec):   reduce InlineBlock --> 
    action 'ASSERT' (noprec):   shift 183
    action 'HAVOC' (noprec):   shift 153
    action 'GOTO' (noprec):   reduce InlineBlock --> 
    action 'CALL' (noprec):   shift 156
    action 'CCALL' (noprec):   reduce InlineBlock --> 
    action 'RET' (noprec):   reduce InlineBlock --> 
    action 'IRET' (noprec):   reduce InlineBlock --> 
    action 'GO' (noprec):   reduce InlineBlock --> 
    action 'FORALL' (noprec):   reduce InlineBlock --> 
    action 'EXISTS' (noprec):   reduce InlineBlock --> 
    action 'OLD' (noprec):   reduce InlineBlock --> 
    action 'COLONCOLON' (noprec):   reduce InlineBlock --> 
    action 'EQEQGT' (noprec):   reduce InlineBlock --> 
    action 'LTEQEQGT' (noprec):   reduce InlineBlock --> 
    action 'TYPE' (noprec):   reduce InlineBlock --> 
    action 'CONST' (noprec):   reduce InlineBlock --> 
    action 'FUNCTION' (noprec):   reduce InlineBlock --> 
    action 'RETURNS' (noprec):   reduce InlineBlock --> 
    action 'AXIOM' (noprec):   reduce InlineBlock --> 
    action 'PROCEDURE' (noprec):   reduce InlineBlock --> 
    action 'IMPLEMENTATION' (noprec):   reduce InlineBlock --> 
    action 'REQUIRES' (noprec):   reduce InlineBlock --> 
    action 'ENSURES' (noprec):   reduce InlineBlock --> 
    action 'LT' (noprec):   reduce InlineBlock --> 
    action 'GT' (noprec):   reduce InlineBlock --> 
    action 'EQ' (noprec):   reduce InlineBlock --> 
    action 'BANG' (noprec):   reduce InlineBlock --> 
    action 'COMMA' (noprec):   reduce InlineBlock --> 
    action 'LE' (noprec):   reduce InlineBlock --> 
    action 'GE' (noprec):   reduce InlineBlock --> 
    action 'EQEQ' (noprec):   reduce InlineBlock --> 
    action 'NE' (noprec):   reduce InlineBlock --> 
    action 'PLUS' (noprec):   reduce InlineBlock --> 
    action 'MINUS' (noprec):   reduce InlineBlock --> 
    action 'STAR' (noprec):   reduce InlineBlock --> 
    action 'SLASH' (noprec):   reduce InlineBlock --> 
    action 'PERCENT' (noprec):   reduce InlineBlock --> 
    action 'AMPAMP' (noprec):   reduce InlineBlock --> 
    action 'BARBAR' (noprec):   reduce InlineBlock --> 
    action 'COLONEQ' (noprec):   reduce InlineBlock --> 
    action 'INT' (noprec):   reduce InlineBlock --> 
    action 'BOOL' (noprec):   reduce InlineBlock --> 
    action 'IF' (noprec):   reduce InlineBlock --> 
    action 'RETURN' (noprec):   reduce InlineBlock --> 
    action 'VAR' (noprec):   reduce InlineBlock --> 
    action 'LBRACE' (noprec):   reduce InlineBlock --> 
    action 'RBRACE' (noprec):   reduce InlineBlock --> 
    action 'SEMI' (noprec):   reduce InlineBlock --> 
    action 'COLON' (noprec):   reduce InlineBlock --> 
    action 'LPAREN' (noprec):   reduce InlineBlock --> 
    action 'RPAREN' (noprec):   reduce InlineBlock --> 
    action 'LBRACKET' (noprec):   reduce InlineBlock --> 
    action 'RBRACKET' (noprec):   reduce InlineBlock --> 
    action 'LITBOOL' (noprec):   reduce InlineBlock --> 
    action 'LITINT' (noprec):   reduce InlineBlock --> 
    action 'QLID' (noprec):   reduce InlineBlock --> 
    action 'QUID' (noprec):   reduce InlineBlock --> 
    action 'DLID' (noprec):   shift 185
    action 'DUID' (noprec):   reduce InlineBlock --> 
    action 'LID' (noprec):   shift 4
    action 'UID' (noprec):   shift 5
    action 'error' (noprec):   reduce InlineBlock --> 
    action '#' (noprec):   reduce InlineBlock --> 
    action '$$' (noprec):   reduce InlineBlock --> 

  immediate action: <none>
 gotos:
    goto ID: 162
    goto HavocEip: 164
    goto Stmt: 259
    goto InlineStmt: 273
    goto InlineBlock: 274

state 274:
  items:
    InlineBlock -> InlineStmt InlineBlock . 

  actions:
    action 'EOF' (noprec):   reduce InlineBlock --> InlineStmt InlineBlock
    action 'EAX' (noprec):   reduce InlineBlock --> InlineStmt InlineBlock
    action 'EBX' (noprec):   reduce InlineBlock --> InlineStmt InlineBlock
    action 'ECX' (noprec):   reduce InlineBlock --> InlineStmt InlineBlock
    action 'EDX' (noprec):   reduce InlineBlock --> InlineStmt InlineBlock
    action 'ESI' (noprec):   reduce InlineBlock --> InlineStmt InlineBlock
    action 'EDI' (noprec):   reduce InlineBlock --> InlineStmt InlineBlock
    action 'EBP' (noprec):   reduce InlineBlock --> InlineStmt InlineBlock
    action 'ESP' (noprec):   reduce InlineBlock --> InlineStmt InlineBlock
    action 'MODIFIES' (noprec):   reduce InlineBlock --> InlineStmt InlineBlock
    action 'INVARIANT' (noprec):   reduce InlineBlock --> InlineStmt InlineBlock
    action 'ASSERT' (noprec):   reduce InlineBlock --> InlineStmt InlineBlock
    action 'HAVOC' (noprec):   reduce InlineBlock --> InlineStmt InlineBlock
    action 'GOTO' (noprec):   reduce InlineBlock --> InlineStmt InlineBlock
    action 'CALL' (noprec):   reduce InlineBlock --> InlineStmt InlineBlock
    action 'CCALL' (noprec):   reduce InlineBlock --> InlineStmt InlineBlock
    action 'RET' (noprec):   reduce InlineBlock --> InlineStmt InlineBlock
    action 'IRET' (noprec):   reduce InlineBlock --> InlineStmt InlineBlock
    action 'GO' (noprec):   reduce InlineBlock --> InlineStmt InlineBlock
    action 'FORALL' (noprec):   reduce InlineBlock --> InlineStmt InlineBlock
    action 'EXISTS' (noprec):   reduce InlineBlock --> InlineStmt InlineBlock
    action 'OLD' (noprec):   reduce InlineBlock --> InlineStmt InlineBlock
    action 'COLONCOLON' (noprec):   reduce InlineBlock --> InlineStmt InlineBlock
    action 'EQEQGT' (noprec):   reduce InlineBlock --> InlineStmt InlineBlock
    action 'LTEQEQGT' (noprec):   reduce InlineBlock --> InlineStmt InlineBlock
    action 'TYPE' (noprec):   reduce InlineBlock --> InlineStmt InlineBlock
    action 'CONST' (noprec):   reduce InlineBlock --> InlineStmt InlineBlock
    action 'FUNCTION' (noprec):   reduce InlineBlock --> InlineStmt InlineBlock
    action 'RETURNS' (noprec):   reduce InlineBlock --> InlineStmt InlineBlock
    action 'AXIOM' (noprec):   reduce InlineBlock --> InlineStmt InlineBlock
    action 'PROCEDURE' (noprec):   reduce InlineBlock --> InlineStmt InlineBlock
    action 'IMPLEMENTATION' (noprec):   reduce InlineBlock --> InlineStmt InlineBlock
    action 'REQUIRES' (noprec):   reduce InlineBlock --> InlineStmt InlineBlock
    action 'ENSURES' (noprec):   reduce InlineBlock --> InlineStmt InlineBlock
    action 'LT' (noprec):   reduce InlineBlock --> InlineStmt InlineBlock
    action 'GT' (noprec):   reduce InlineBlock --> InlineStmt InlineBlock
    action 'EQ' (noprec):   reduce InlineBlock --> InlineStmt InlineBlock
    action 'BANG' (noprec):   reduce InlineBlock --> InlineStmt InlineBlock
    action 'COMMA' (noprec):   reduce InlineBlock --> InlineStmt InlineBlock
    action 'LE' (noprec):   reduce InlineBlock --> InlineStmt InlineBlock
    action 'GE' (noprec):   reduce InlineBlock --> InlineStmt InlineBlock
    action 'EQEQ' (noprec):   reduce InlineBlock --> InlineStmt InlineBlock
    action 'NE' (noprec):   reduce InlineBlock --> InlineStmt InlineBlock
    action 'PLUS' (noprec):   reduce InlineBlock --> InlineStmt InlineBlock
    action 'MINUS' (noprec):   reduce InlineBlock --> InlineStmt InlineBlock
    action 'STAR' (noprec):   reduce InlineBlock --> InlineStmt InlineBlock
    action 'SLASH' (noprec):   reduce InlineBlock --> InlineStmt InlineBlock
    action 'PERCENT' (noprec):   reduce InlineBlock --> InlineStmt InlineBlock
    action 'AMPAMP' (noprec):   reduce InlineBlock --> InlineStmt InlineBlock
    action 'BARBAR' (noprec):   reduce InlineBlock --> InlineStmt InlineBlock
    action 'COLONEQ' (noprec):   reduce InlineBlock --> InlineStmt InlineBlock
    action 'INT' (noprec):   reduce InlineBlock --> InlineStmt InlineBlock
    action 'BOOL' (noprec):   reduce InlineBlock --> InlineStmt InlineBlock
    action 'IF' (noprec):   reduce InlineBlock --> InlineStmt InlineBlock
    action 'RETURN' (noprec):   reduce InlineBlock --> InlineStmt InlineBlock
    action 'VAR' (noprec):   reduce InlineBlock --> InlineStmt InlineBlock
    action 'LBRACE' (noprec):   reduce InlineBlock --> InlineStmt InlineBlock
    action 'RBRACE' (noprec):   reduce InlineBlock --> InlineStmt InlineBlock
    action 'SEMI' (noprec):   reduce InlineBlock --> InlineStmt InlineBlock
    action 'COLON' (noprec):   reduce InlineBlock --> InlineStmt InlineBlock
    action 'LPAREN' (noprec):   reduce InlineBlock --> InlineStmt InlineBlock
    action 'RPAREN' (noprec):   reduce InlineBlock --> InlineStmt InlineBlock
    action 'LBRACKET' (noprec):   reduce InlineBlock --> InlineStmt InlineBlock
    action 'RBRACKET' (noprec):   reduce InlineBlock --> InlineStmt InlineBlock
    action 'LITBOOL' (noprec):   reduce InlineBlock --> InlineStmt InlineBlock
    action 'LITINT' (noprec):   reduce InlineBlock --> InlineStmt InlineBlock
    action 'QLID' (noprec):   reduce InlineBlock --> InlineStmt InlineBlock
    action 'QUID' (noprec):   reduce InlineBlock --> InlineStmt InlineBlock
    action 'DLID' (noprec):   reduce InlineBlock --> InlineStmt InlineBlock
    action 'DUID' (noprec):   reduce InlineBlock --> InlineStmt InlineBlock
    action 'LID' (noprec):   reduce InlineBlock --> InlineStmt InlineBlock
    action 'UID' (noprec):   reduce InlineBlock --> InlineStmt InlineBlock
    action 'error' (noprec):   reduce InlineBlock --> InlineStmt InlineBlock
    action '#' (noprec):   reduce InlineBlock --> InlineStmt InlineBlock
    action '$$' (noprec):   reduce InlineBlock --> InlineStmt InlineBlock

  immediate action:   reduce InlineBlock --> InlineStmt InlineBlock
 gotos:

state 275:
  items:
    Formal -> AnyId . 'COLON' Type

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   shift 276
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 276:
  items:
    Formal -> AnyId 'COLON' . Type

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   shift 6
    action 'BOOL' (noprec):   shift 7
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (explicit left 10000):   shift 8
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   shift 145
    action 'QUID' (noprec):   shift 144
    action 'DLID' (noprec):   shift 143
    action 'DUID' (noprec):   shift 142
    action 'LID' (noprec):   shift 4
    action 'UID' (noprec):   shift 5
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto ID: 141
    goto Type: 277
    goto AnyId: 12

state 277:
  items:
    Formal -> AnyId 'COLON' Type . 

  actions:
    action 'EOF' (noprec):   reduce Formal --> AnyId 'COLON' Type
    action 'EAX' (noprec):   reduce Formal --> AnyId 'COLON' Type
    action 'EBX' (noprec):   reduce Formal --> AnyId 'COLON' Type
    action 'ECX' (noprec):   reduce Formal --> AnyId 'COLON' Type
    action 'EDX' (noprec):   reduce Formal --> AnyId 'COLON' Type
    action 'ESI' (noprec):   reduce Formal --> AnyId 'COLON' Type
    action 'EDI' (noprec):   reduce Formal --> AnyId 'COLON' Type
    action 'EBP' (noprec):   reduce Formal --> AnyId 'COLON' Type
    action 'ESP' (noprec):   reduce Formal --> AnyId 'COLON' Type
    action 'MODIFIES' (noprec):   reduce Formal --> AnyId 'COLON' Type
    action 'INVARIANT' (noprec):   reduce Formal --> AnyId 'COLON' Type
    action 'ASSERT' (noprec):   reduce Formal --> AnyId 'COLON' Type
    action 'HAVOC' (noprec):   reduce Formal --> AnyId 'COLON' Type
    action 'GOTO' (noprec):   reduce Formal --> AnyId 'COLON' Type
    action 'CALL' (noprec):   reduce Formal --> AnyId 'COLON' Type
    action 'CCALL' (noprec):   reduce Formal --> AnyId 'COLON' Type
    action 'RET' (noprec):   reduce Formal --> AnyId 'COLON' Type
    action 'IRET' (noprec):   reduce Formal --> AnyId 'COLON' Type
    action 'GO' (noprec):   reduce Formal --> AnyId 'COLON' Type
    action 'FORALL' (noprec):   reduce Formal --> AnyId 'COLON' Type
    action 'EXISTS' (noprec):   reduce Formal --> AnyId 'COLON' Type
    action 'OLD' (noprec):   reduce Formal --> AnyId 'COLON' Type
    action 'COLONCOLON' (noprec):   reduce Formal --> AnyId 'COLON' Type
    action 'EQEQGT' (noprec):   reduce Formal --> AnyId 'COLON' Type
    action 'LTEQEQGT' (noprec):   reduce Formal --> AnyId 'COLON' Type
    action 'TYPE' (noprec):   reduce Formal --> AnyId 'COLON' Type
    action 'CONST' (noprec):   reduce Formal --> AnyId 'COLON' Type
    action 'FUNCTION' (noprec):   reduce Formal --> AnyId 'COLON' Type
    action 'RETURNS' (noprec):   reduce Formal --> AnyId 'COLON' Type
    action 'AXIOM' (noprec):   reduce Formal --> AnyId 'COLON' Type
    action 'PROCEDURE' (noprec):   reduce Formal --> AnyId 'COLON' Type
    action 'IMPLEMENTATION' (noprec):   reduce Formal --> AnyId 'COLON' Type
    action 'REQUIRES' (noprec):   reduce Formal --> AnyId 'COLON' Type
    action 'ENSURES' (noprec):   reduce Formal --> AnyId 'COLON' Type
    action 'LT' (noprec):   reduce Formal --> AnyId 'COLON' Type
    action 'GT' (noprec):   reduce Formal --> AnyId 'COLON' Type
    action 'EQ' (noprec):   reduce Formal --> AnyId 'COLON' Type
    action 'BANG' (noprec):   reduce Formal --> AnyId 'COLON' Type
    action 'COMMA' (noprec):   reduce Formal --> AnyId 'COLON' Type
    action 'LE' (noprec):   reduce Formal --> AnyId 'COLON' Type
    action 'GE' (noprec):   reduce Formal --> AnyId 'COLON' Type
    action 'EQEQ' (noprec):   reduce Formal --> AnyId 'COLON' Type
    action 'NE' (noprec):   reduce Formal --> AnyId 'COLON' Type
    action 'PLUS' (noprec):   reduce Formal --> AnyId 'COLON' Type
    action 'MINUS' (noprec):   reduce Formal --> AnyId 'COLON' Type
    action 'STAR' (noprec):   reduce Formal --> AnyId 'COLON' Type
    action 'SLASH' (noprec):   reduce Formal --> AnyId 'COLON' Type
    action 'PERCENT' (noprec):   reduce Formal --> AnyId 'COLON' Type
    action 'AMPAMP' (noprec):   reduce Formal --> AnyId 'COLON' Type
    action 'BARBAR' (noprec):   reduce Formal --> AnyId 'COLON' Type
    action 'COLONEQ' (noprec):   reduce Formal --> AnyId 'COLON' Type
    action 'INT' (noprec):   reduce Formal --> AnyId 'COLON' Type
    action 'BOOL' (noprec):   reduce Formal --> AnyId 'COLON' Type
    action 'IF' (noprec):   reduce Formal --> AnyId 'COLON' Type
    action 'RETURN' (noprec):   reduce Formal --> AnyId 'COLON' Type
    action 'VAR' (noprec):   reduce Formal --> AnyId 'COLON' Type
    action 'LBRACE' (noprec):   reduce Formal --> AnyId 'COLON' Type
    action 'RBRACE' (noprec):   reduce Formal --> AnyId 'COLON' Type
    action 'SEMI' (noprec):   reduce Formal --> AnyId 'COLON' Type
    action 'COLON' (noprec):   reduce Formal --> AnyId 'COLON' Type
    action 'LPAREN' (noprec):   reduce Formal --> AnyId 'COLON' Type
    action 'RPAREN' (noprec):   reduce Formal --> AnyId 'COLON' Type
    action 'LBRACKET' (noprec):   reduce Formal --> AnyId 'COLON' Type
    action 'RBRACKET' (noprec):   reduce Formal --> AnyId 'COLON' Type
    action 'LITBOOL' (noprec):   reduce Formal --> AnyId 'COLON' Type
    action 'LITINT' (noprec):   reduce Formal --> AnyId 'COLON' Type
    action 'QLID' (noprec):   reduce Formal --> AnyId 'COLON' Type
    action 'QUID' (noprec):   reduce Formal --> AnyId 'COLON' Type
    action 'DLID' (noprec):   reduce Formal --> AnyId 'COLON' Type
    action 'DUID' (noprec):   reduce Formal --> AnyId 'COLON' Type
    action 'LID' (noprec):   reduce Formal --> AnyId 'COLON' Type
    action 'UID' (noprec):   reduce Formal --> AnyId 'COLON' Type
    action 'error' (noprec):   reduce Formal --> AnyId 'COLON' Type
    action '#' (noprec):   reduce Formal --> AnyId 'COLON' Type
    action '$$' (noprec):   reduce Formal --> AnyId 'COLON' Type

  immediate action:   reduce Formal --> AnyId 'COLON' Type
 gotos:

state 278:
  items:
    Formals -> Formal . 
    Formals -> Formal . 'COMMA' Formals

  actions:
    action 'EOF' (noprec):   reduce Formals --> Formal
    action 'EAX' (noprec):   reduce Formals --> Formal
    action 'EBX' (noprec):   reduce Formals --> Formal
    action 'ECX' (noprec):   reduce Formals --> Formal
    action 'EDX' (noprec):   reduce Formals --> Formal
    action 'ESI' (noprec):   reduce Formals --> Formal
    action 'EDI' (noprec):   reduce Formals --> Formal
    action 'EBP' (noprec):   reduce Formals --> Formal
    action 'ESP' (noprec):   reduce Formals --> Formal
    action 'MODIFIES' (noprec):   reduce Formals --> Formal
    action 'INVARIANT' (noprec):   reduce Formals --> Formal
    action 'ASSERT' (noprec):   reduce Formals --> Formal
    action 'HAVOC' (noprec):   reduce Formals --> Formal
    action 'GOTO' (noprec):   reduce Formals --> Formal
    action 'CALL' (noprec):   reduce Formals --> Formal
    action 'CCALL' (noprec):   reduce Formals --> Formal
    action 'RET' (noprec):   reduce Formals --> Formal
    action 'IRET' (noprec):   reduce Formals --> Formal
    action 'GO' (noprec):   reduce Formals --> Formal
    action 'FORALL' (noprec):   reduce Formals --> Formal
    action 'EXISTS' (noprec):   reduce Formals --> Formal
    action 'OLD' (noprec):   reduce Formals --> Formal
    action 'COLONCOLON' (noprec):   reduce Formals --> Formal
    action 'EQEQGT' (noprec):   reduce Formals --> Formal
    action 'LTEQEQGT' (noprec):   reduce Formals --> Formal
    action 'TYPE' (noprec):   reduce Formals --> Formal
    action 'CONST' (noprec):   reduce Formals --> Formal
    action 'FUNCTION' (noprec):   reduce Formals --> Formal
    action 'RETURNS' (noprec):   reduce Formals --> Formal
    action 'AXIOM' (noprec):   reduce Formals --> Formal
    action 'PROCEDURE' (noprec):   reduce Formals --> Formal
    action 'IMPLEMENTATION' (noprec):   reduce Formals --> Formal
    action 'REQUIRES' (noprec):   reduce Formals --> Formal
    action 'ENSURES' (noprec):   reduce Formals --> Formal
    action 'LT' (noprec):   reduce Formals --> Formal
    action 'GT' (noprec):   reduce Formals --> Formal
    action 'EQ' (noprec):   reduce Formals --> Formal
    action 'BANG' (noprec):   reduce Formals --> Formal
    action 'COMMA' (noprec):   shift 279
    action 'LE' (noprec):   reduce Formals --> Formal
    action 'GE' (noprec):   reduce Formals --> Formal
    action 'EQEQ' (noprec):   reduce Formals --> Formal
    action 'NE' (noprec):   reduce Formals --> Formal
    action 'PLUS' (noprec):   reduce Formals --> Formal
    action 'MINUS' (noprec):   reduce Formals --> Formal
    action 'STAR' (noprec):   reduce Formals --> Formal
    action 'SLASH' (noprec):   reduce Formals --> Formal
    action 'PERCENT' (noprec):   reduce Formals --> Formal
    action 'AMPAMP' (noprec):   reduce Formals --> Formal
    action 'BARBAR' (noprec):   reduce Formals --> Formal
    action 'COLONEQ' (noprec):   reduce Formals --> Formal
    action 'INT' (noprec):   reduce Formals --> Formal
    action 'BOOL' (noprec):   reduce Formals --> Formal
    action 'IF' (noprec):   reduce Formals --> Formal
    action 'RETURN' (noprec):   reduce Formals --> Formal
    action 'VAR' (noprec):   reduce Formals --> Formal
    action 'LBRACE' (noprec):   reduce Formals --> Formal
    action 'RBRACE' (noprec):   reduce Formals --> Formal
    action 'SEMI' (noprec):   reduce Formals --> Formal
    action 'COLON' (noprec):   reduce Formals --> Formal
    action 'LPAREN' (noprec):   reduce Formals --> Formal
    action 'RPAREN' (noprec):   reduce Formals --> Formal
    action 'LBRACKET' (noprec):   reduce Formals --> Formal
    action 'RBRACKET' (noprec):   reduce Formals --> Formal
    action 'LITBOOL' (noprec):   reduce Formals --> Formal
    action 'LITINT' (noprec):   reduce Formals --> Formal
    action 'QLID' (noprec):   reduce Formals --> Formal
    action 'QUID' (noprec):   reduce Formals --> Formal
    action 'DLID' (noprec):   reduce Formals --> Formal
    action 'DUID' (noprec):   reduce Formals --> Formal
    action 'LID' (noprec):   reduce Formals --> Formal
    action 'UID' (noprec):   reduce Formals --> Formal
    action 'error' (noprec):   reduce Formals --> Formal
    action '#' (noprec):   reduce Formals --> Formal
    action '$$' (noprec):   reduce Formals --> Formal

  immediate action: <none>
 gotos:

state 279:
  items:
    Formals -> Formal 'COMMA' . Formals

  actions:
    action 'EOF' (noprec):   reduce Formals --> 
    action 'EAX' (noprec):   reduce Formals --> 
    action 'EBX' (noprec):   reduce Formals --> 
    action 'ECX' (noprec):   reduce Formals --> 
    action 'EDX' (noprec):   reduce Formals --> 
    action 'ESI' (noprec):   reduce Formals --> 
    action 'EDI' (noprec):   reduce Formals --> 
    action 'EBP' (noprec):   reduce Formals --> 
    action 'ESP' (noprec):   reduce Formals --> 
    action 'MODIFIES' (noprec):   reduce Formals --> 
    action 'INVARIANT' (noprec):   reduce Formals --> 
    action 'ASSERT' (noprec):   reduce Formals --> 
    action 'HAVOC' (noprec):   reduce Formals --> 
    action 'GOTO' (noprec):   reduce Formals --> 
    action 'CALL' (noprec):   reduce Formals --> 
    action 'CCALL' (noprec):   reduce Formals --> 
    action 'RET' (noprec):   reduce Formals --> 
    action 'IRET' (noprec):   reduce Formals --> 
    action 'GO' (noprec):   reduce Formals --> 
    action 'FORALL' (noprec):   reduce Formals --> 
    action 'EXISTS' (noprec):   reduce Formals --> 
    action 'OLD' (noprec):   reduce Formals --> 
    action 'COLONCOLON' (noprec):   reduce Formals --> 
    action 'EQEQGT' (noprec):   reduce Formals --> 
    action 'LTEQEQGT' (noprec):   reduce Formals --> 
    action 'TYPE' (noprec):   reduce Formals --> 
    action 'CONST' (noprec):   reduce Formals --> 
    action 'FUNCTION' (noprec):   reduce Formals --> 
    action 'RETURNS' (noprec):   reduce Formals --> 
    action 'AXIOM' (noprec):   reduce Formals --> 
    action 'PROCEDURE' (noprec):   reduce Formals --> 
    action 'IMPLEMENTATION' (noprec):   reduce Formals --> 
    action 'REQUIRES' (noprec):   reduce Formals --> 
    action 'ENSURES' (noprec):   reduce Formals --> 
    action 'LT' (noprec):   reduce Formals --> 
    action 'GT' (noprec):   reduce Formals --> 
    action 'EQ' (noprec):   reduce Formals --> 
    action 'BANG' (noprec):   reduce Formals --> 
    action 'COMMA' (noprec):   reduce Formals --> 
    action 'LE' (noprec):   reduce Formals --> 
    action 'GE' (noprec):   reduce Formals --> 
    action 'EQEQ' (noprec):   reduce Formals --> 
    action 'NE' (noprec):   reduce Formals --> 
    action 'PLUS' (noprec):   reduce Formals --> 
    action 'MINUS' (noprec):   reduce Formals --> 
    action 'STAR' (noprec):   reduce Formals --> 
    action 'SLASH' (noprec):   reduce Formals --> 
    action 'PERCENT' (noprec):   reduce Formals --> 
    action 'AMPAMP' (noprec):   reduce Formals --> 
    action 'BARBAR' (noprec):   reduce Formals --> 
    action 'COLONEQ' (noprec):   reduce Formals --> 
    action 'INT' (noprec):   reduce Formals --> 
    action 'BOOL' (noprec):   reduce Formals --> 
    action 'IF' (noprec):   reduce Formals --> 
    action 'RETURN' (noprec):   reduce Formals --> 
    action 'VAR' (noprec):   reduce Formals --> 
    action 'LBRACE' (noprec):   reduce Formals --> 
    action 'RBRACE' (noprec):   reduce Formals --> 
    action 'SEMI' (noprec):   reduce Formals --> 
    action 'COLON' (noprec):   reduce Formals --> 
    action 'LPAREN' (noprec):   reduce Formals --> 
    action 'RPAREN' (noprec):   reduce Formals --> 
    action 'LBRACKET' (noprec):   reduce Formals --> 
    action 'RBRACKET' (noprec):   reduce Formals --> 
    action 'LITBOOL' (noprec):   reduce Formals --> 
    action 'LITINT' (noprec):   reduce Formals --> 
    action 'QLID' (noprec):   shift 145
    action 'QUID' (noprec):   shift 144
    action 'DLID' (noprec):   shift 143
    action 'DUID' (noprec):   shift 142
    action 'LID' (noprec):   shift 4
    action 'UID' (noprec):   shift 5
    action 'error' (noprec):   reduce Formals --> 
    action '#' (noprec):   reduce Formals --> 
    action '$$' (noprec):   reduce Formals --> 

  immediate action: <none>
 gotos:
    goto ID: 141
    goto AnyId: 275
    goto Formal: 278
    goto Formals: 280

state 280:
  items:
    Formals -> Formal 'COMMA' Formals . 

  actions:
    action 'EOF' (noprec):   reduce Formals --> Formal 'COMMA' Formals
    action 'EAX' (noprec):   reduce Formals --> Formal 'COMMA' Formals
    action 'EBX' (noprec):   reduce Formals --> Formal 'COMMA' Formals
    action 'ECX' (noprec):   reduce Formals --> Formal 'COMMA' Formals
    action 'EDX' (noprec):   reduce Formals --> Formal 'COMMA' Formals
    action 'ESI' (noprec):   reduce Formals --> Formal 'COMMA' Formals
    action 'EDI' (noprec):   reduce Formals --> Formal 'COMMA' Formals
    action 'EBP' (noprec):   reduce Formals --> Formal 'COMMA' Formals
    action 'ESP' (noprec):   reduce Formals --> Formal 'COMMA' Formals
    action 'MODIFIES' (noprec):   reduce Formals --> Formal 'COMMA' Formals
    action 'INVARIANT' (noprec):   reduce Formals --> Formal 'COMMA' Formals
    action 'ASSERT' (noprec):   reduce Formals --> Formal 'COMMA' Formals
    action 'HAVOC' (noprec):   reduce Formals --> Formal 'COMMA' Formals
    action 'GOTO' (noprec):   reduce Formals --> Formal 'COMMA' Formals
    action 'CALL' (noprec):   reduce Formals --> Formal 'COMMA' Formals
    action 'CCALL' (noprec):   reduce Formals --> Formal 'COMMA' Formals
    action 'RET' (noprec):   reduce Formals --> Formal 'COMMA' Formals
    action 'IRET' (noprec):   reduce Formals --> Formal 'COMMA' Formals
    action 'GO' (noprec):   reduce Formals --> Formal 'COMMA' Formals
    action 'FORALL' (noprec):   reduce Formals --> Formal 'COMMA' Formals
    action 'EXISTS' (noprec):   reduce Formals --> Formal 'COMMA' Formals
    action 'OLD' (noprec):   reduce Formals --> Formal 'COMMA' Formals
    action 'COLONCOLON' (noprec):   reduce Formals --> Formal 'COMMA' Formals
    action 'EQEQGT' (noprec):   reduce Formals --> Formal 'COMMA' Formals
    action 'LTEQEQGT' (noprec):   reduce Formals --> Formal 'COMMA' Formals
    action 'TYPE' (noprec):   reduce Formals --> Formal 'COMMA' Formals
    action 'CONST' (noprec):   reduce Formals --> Formal 'COMMA' Formals
    action 'FUNCTION' (noprec):   reduce Formals --> Formal 'COMMA' Formals
    action 'RETURNS' (noprec):   reduce Formals --> Formal 'COMMA' Formals
    action 'AXIOM' (noprec):   reduce Formals --> Formal 'COMMA' Formals
    action 'PROCEDURE' (noprec):   reduce Formals --> Formal 'COMMA' Formals
    action 'IMPLEMENTATION' (noprec):   reduce Formals --> Formal 'COMMA' Formals
    action 'REQUIRES' (noprec):   reduce Formals --> Formal 'COMMA' Formals
    action 'ENSURES' (noprec):   reduce Formals --> Formal 'COMMA' Formals
    action 'LT' (noprec):   reduce Formals --> Formal 'COMMA' Formals
    action 'GT' (noprec):   reduce Formals --> Formal 'COMMA' Formals
    action 'EQ' (noprec):   reduce Formals --> Formal 'COMMA' Formals
    action 'BANG' (noprec):   reduce Formals --> Formal 'COMMA' Formals
    action 'COMMA' (noprec):   reduce Formals --> Formal 'COMMA' Formals
    action 'LE' (noprec):   reduce Formals --> Formal 'COMMA' Formals
    action 'GE' (noprec):   reduce Formals --> Formal 'COMMA' Formals
    action 'EQEQ' (noprec):   reduce Formals --> Formal 'COMMA' Formals
    action 'NE' (noprec):   reduce Formals --> Formal 'COMMA' Formals
    action 'PLUS' (noprec):   reduce Formals --> Formal 'COMMA' Formals
    action 'MINUS' (noprec):   reduce Formals --> Formal 'COMMA' Formals
    action 'STAR' (noprec):   reduce Formals --> Formal 'COMMA' Formals
    action 'SLASH' (noprec):   reduce Formals --> Formal 'COMMA' Formals
    action 'PERCENT' (noprec):   reduce Formals --> Formal 'COMMA' Formals
    action 'AMPAMP' (noprec):   reduce Formals --> Formal 'COMMA' Formals
    action 'BARBAR' (noprec):   reduce Formals --> Formal 'COMMA' Formals
    action 'COLONEQ' (noprec):   reduce Formals --> Formal 'COMMA' Formals
    action 'INT' (noprec):   reduce Formals --> Formal 'COMMA' Formals
    action 'BOOL' (noprec):   reduce Formals --> Formal 'COMMA' Formals
    action 'IF' (noprec):   reduce Formals --> Formal 'COMMA' Formals
    action 'RETURN' (noprec):   reduce Formals --> Formal 'COMMA' Formals
    action 'VAR' (noprec):   reduce Formals --> Formal 'COMMA' Formals
    action 'LBRACE' (noprec):   reduce Formals --> Formal 'COMMA' Formals
    action 'RBRACE' (noprec):   reduce Formals --> Formal 'COMMA' Formals
    action 'SEMI' (noprec):   reduce Formals --> Formal 'COMMA' Formals
    action 'COLON' (noprec):   reduce Formals --> Formal 'COMMA' Formals
    action 'LPAREN' (noprec):   reduce Formals --> Formal 'COMMA' Formals
    action 'RPAREN' (noprec):   reduce Formals --> Formal 'COMMA' Formals
    action 'LBRACKET' (noprec):   reduce Formals --> Formal 'COMMA' Formals
    action 'RBRACKET' (noprec):   reduce Formals --> Formal 'COMMA' Formals
    action 'LITBOOL' (noprec):   reduce Formals --> Formal 'COMMA' Formals
    action 'LITINT' (noprec):   reduce Formals --> Formal 'COMMA' Formals
    action 'QLID' (noprec):   reduce Formals --> Formal 'COMMA' Formals
    action 'QUID' (noprec):   reduce Formals --> Formal 'COMMA' Formals
    action 'DLID' (noprec):   reduce Formals --> Formal 'COMMA' Formals
    action 'DUID' (noprec):   reduce Formals --> Formal 'COMMA' Formals
    action 'LID' (noprec):   reduce Formals --> Formal 'COMMA' Formals
    action 'UID' (noprec):   reduce Formals --> Formal 'COMMA' Formals
    action 'error' (noprec):   reduce Formals --> Formal 'COMMA' Formals
    action '#' (noprec):   reduce Formals --> Formal 'COMMA' Formals
    action '$$' (noprec):   reduce Formals --> Formal 'COMMA' Formals

  immediate action:   reduce Formals --> Formal 'COMMA' Formals
 gotos:

state 281:
  items:
    ProcFormal -> 'DLID' . 'COLON' Type

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   shift 282
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 282:
  items:
    ProcFormal -> 'DLID' 'COLON' . Type

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   shift 6
    action 'BOOL' (noprec):   shift 7
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (explicit left 10000):   shift 8
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   shift 145
    action 'QUID' (noprec):   shift 144
    action 'DLID' (noprec):   shift 143
    action 'DUID' (noprec):   shift 142
    action 'LID' (noprec):   shift 4
    action 'UID' (noprec):   shift 5
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto ID: 141
    goto Type: 283
    goto AnyId: 12

state 283:
  items:
    ProcFormal -> 'DLID' 'COLON' Type . 

  actions:
    action 'EOF' (noprec):   reduce ProcFormal --> 'DLID' 'COLON' Type
    action 'EAX' (noprec):   reduce ProcFormal --> 'DLID' 'COLON' Type
    action 'EBX' (noprec):   reduce ProcFormal --> 'DLID' 'COLON' Type
    action 'ECX' (noprec):   reduce ProcFormal --> 'DLID' 'COLON' Type
    action 'EDX' (noprec):   reduce ProcFormal --> 'DLID' 'COLON' Type
    action 'ESI' (noprec):   reduce ProcFormal --> 'DLID' 'COLON' Type
    action 'EDI' (noprec):   reduce ProcFormal --> 'DLID' 'COLON' Type
    action 'EBP' (noprec):   reduce ProcFormal --> 'DLID' 'COLON' Type
    action 'ESP' (noprec):   reduce ProcFormal --> 'DLID' 'COLON' Type
    action 'MODIFIES' (noprec):   reduce ProcFormal --> 'DLID' 'COLON' Type
    action 'INVARIANT' (noprec):   reduce ProcFormal --> 'DLID' 'COLON' Type
    action 'ASSERT' (noprec):   reduce ProcFormal --> 'DLID' 'COLON' Type
    action 'HAVOC' (noprec):   reduce ProcFormal --> 'DLID' 'COLON' Type
    action 'GOTO' (noprec):   reduce ProcFormal --> 'DLID' 'COLON' Type
    action 'CALL' (noprec):   reduce ProcFormal --> 'DLID' 'COLON' Type
    action 'CCALL' (noprec):   reduce ProcFormal --> 'DLID' 'COLON' Type
    action 'RET' (noprec):   reduce ProcFormal --> 'DLID' 'COLON' Type
    action 'IRET' (noprec):   reduce ProcFormal --> 'DLID' 'COLON' Type
    action 'GO' (noprec):   reduce ProcFormal --> 'DLID' 'COLON' Type
    action 'FORALL' (noprec):   reduce ProcFormal --> 'DLID' 'COLON' Type
    action 'EXISTS' (noprec):   reduce ProcFormal --> 'DLID' 'COLON' Type
    action 'OLD' (noprec):   reduce ProcFormal --> 'DLID' 'COLON' Type
    action 'COLONCOLON' (noprec):   reduce ProcFormal --> 'DLID' 'COLON' Type
    action 'EQEQGT' (noprec):   reduce ProcFormal --> 'DLID' 'COLON' Type
    action 'LTEQEQGT' (noprec):   reduce ProcFormal --> 'DLID' 'COLON' Type
    action 'TYPE' (noprec):   reduce ProcFormal --> 'DLID' 'COLON' Type
    action 'CONST' (noprec):   reduce ProcFormal --> 'DLID' 'COLON' Type
    action 'FUNCTION' (noprec):   reduce ProcFormal --> 'DLID' 'COLON' Type
    action 'RETURNS' (noprec):   reduce ProcFormal --> 'DLID' 'COLON' Type
    action 'AXIOM' (noprec):   reduce ProcFormal --> 'DLID' 'COLON' Type
    action 'PROCEDURE' (noprec):   reduce ProcFormal --> 'DLID' 'COLON' Type
    action 'IMPLEMENTATION' (noprec):   reduce ProcFormal --> 'DLID' 'COLON' Type
    action 'REQUIRES' (noprec):   reduce ProcFormal --> 'DLID' 'COLON' Type
    action 'ENSURES' (noprec):   reduce ProcFormal --> 'DLID' 'COLON' Type
    action 'LT' (noprec):   reduce ProcFormal --> 'DLID' 'COLON' Type
    action 'GT' (noprec):   reduce ProcFormal --> 'DLID' 'COLON' Type
    action 'EQ' (noprec):   reduce ProcFormal --> 'DLID' 'COLON' Type
    action 'BANG' (noprec):   reduce ProcFormal --> 'DLID' 'COLON' Type
    action 'COMMA' (noprec):   reduce ProcFormal --> 'DLID' 'COLON' Type
    action 'LE' (noprec):   reduce ProcFormal --> 'DLID' 'COLON' Type
    action 'GE' (noprec):   reduce ProcFormal --> 'DLID' 'COLON' Type
    action 'EQEQ' (noprec):   reduce ProcFormal --> 'DLID' 'COLON' Type
    action 'NE' (noprec):   reduce ProcFormal --> 'DLID' 'COLON' Type
    action 'PLUS' (noprec):   reduce ProcFormal --> 'DLID' 'COLON' Type
    action 'MINUS' (noprec):   reduce ProcFormal --> 'DLID' 'COLON' Type
    action 'STAR' (noprec):   reduce ProcFormal --> 'DLID' 'COLON' Type
    action 'SLASH' (noprec):   reduce ProcFormal --> 'DLID' 'COLON' Type
    action 'PERCENT' (noprec):   reduce ProcFormal --> 'DLID' 'COLON' Type
    action 'AMPAMP' (noprec):   reduce ProcFormal --> 'DLID' 'COLON' Type
    action 'BARBAR' (noprec):   reduce ProcFormal --> 'DLID' 'COLON' Type
    action 'COLONEQ' (noprec):   reduce ProcFormal --> 'DLID' 'COLON' Type
    action 'INT' (noprec):   reduce ProcFormal --> 'DLID' 'COLON' Type
    action 'BOOL' (noprec):   reduce ProcFormal --> 'DLID' 'COLON' Type
    action 'IF' (noprec):   reduce ProcFormal --> 'DLID' 'COLON' Type
    action 'RETURN' (noprec):   reduce ProcFormal --> 'DLID' 'COLON' Type
    action 'VAR' (noprec):   reduce ProcFormal --> 'DLID' 'COLON' Type
    action 'LBRACE' (noprec):   reduce ProcFormal --> 'DLID' 'COLON' Type
    action 'RBRACE' (noprec):   reduce ProcFormal --> 'DLID' 'COLON' Type
    action 'SEMI' (noprec):   reduce ProcFormal --> 'DLID' 'COLON' Type
    action 'COLON' (noprec):   reduce ProcFormal --> 'DLID' 'COLON' Type
    action 'LPAREN' (noprec):   reduce ProcFormal --> 'DLID' 'COLON' Type
    action 'RPAREN' (noprec):   reduce ProcFormal --> 'DLID' 'COLON' Type
    action 'LBRACKET' (noprec):   reduce ProcFormal --> 'DLID' 'COLON' Type
    action 'RBRACKET' (noprec):   reduce ProcFormal --> 'DLID' 'COLON' Type
    action 'LITBOOL' (noprec):   reduce ProcFormal --> 'DLID' 'COLON' Type
    action 'LITINT' (noprec):   reduce ProcFormal --> 'DLID' 'COLON' Type
    action 'QLID' (noprec):   reduce ProcFormal --> 'DLID' 'COLON' Type
    action 'QUID' (noprec):   reduce ProcFormal --> 'DLID' 'COLON' Type
    action 'DLID' (noprec):   reduce ProcFormal --> 'DLID' 'COLON' Type
    action 'DUID' (noprec):   reduce ProcFormal --> 'DLID' 'COLON' Type
    action 'LID' (noprec):   reduce ProcFormal --> 'DLID' 'COLON' Type
    action 'UID' (noprec):   reduce ProcFormal --> 'DLID' 'COLON' Type
    action 'error' (noprec):   reduce ProcFormal --> 'DLID' 'COLON' Type
    action '#' (noprec):   reduce ProcFormal --> 'DLID' 'COLON' Type
    action '$$' (noprec):   reduce ProcFormal --> 'DLID' 'COLON' Type

  immediate action:   reduce ProcFormal --> 'DLID' 'COLON' Type
 gotos:

state 284:
  items:
    ProcFormals -> ProcFormal . 
    ProcFormals -> ProcFormal . 'COMMA' ProcFormals

  actions:
    action 'EOF' (noprec):   reduce ProcFormals --> ProcFormal
    action 'EAX' (noprec):   reduce ProcFormals --> ProcFormal
    action 'EBX' (noprec):   reduce ProcFormals --> ProcFormal
    action 'ECX' (noprec):   reduce ProcFormals --> ProcFormal
    action 'EDX' (noprec):   reduce ProcFormals --> ProcFormal
    action 'ESI' (noprec):   reduce ProcFormals --> ProcFormal
    action 'EDI' (noprec):   reduce ProcFormals --> ProcFormal
    action 'EBP' (noprec):   reduce ProcFormals --> ProcFormal
    action 'ESP' (noprec):   reduce ProcFormals --> ProcFormal
    action 'MODIFIES' (noprec):   reduce ProcFormals --> ProcFormal
    action 'INVARIANT' (noprec):   reduce ProcFormals --> ProcFormal
    action 'ASSERT' (noprec):   reduce ProcFormals --> ProcFormal
    action 'HAVOC' (noprec):   reduce ProcFormals --> ProcFormal
    action 'GOTO' (noprec):   reduce ProcFormals --> ProcFormal
    action 'CALL' (noprec):   reduce ProcFormals --> ProcFormal
    action 'CCALL' (noprec):   reduce ProcFormals --> ProcFormal
    action 'RET' (noprec):   reduce ProcFormals --> ProcFormal
    action 'IRET' (noprec):   reduce ProcFormals --> ProcFormal
    action 'GO' (noprec):   reduce ProcFormals --> ProcFormal
    action 'FORALL' (noprec):   reduce ProcFormals --> ProcFormal
    action 'EXISTS' (noprec):   reduce ProcFormals --> ProcFormal
    action 'OLD' (noprec):   reduce ProcFormals --> ProcFormal
    action 'COLONCOLON' (noprec):   reduce ProcFormals --> ProcFormal
    action 'EQEQGT' (noprec):   reduce ProcFormals --> ProcFormal
    action 'LTEQEQGT' (noprec):   reduce ProcFormals --> ProcFormal
    action 'TYPE' (noprec):   reduce ProcFormals --> ProcFormal
    action 'CONST' (noprec):   reduce ProcFormals --> ProcFormal
    action 'FUNCTION' (noprec):   reduce ProcFormals --> ProcFormal
    action 'RETURNS' (noprec):   reduce ProcFormals --> ProcFormal
    action 'AXIOM' (noprec):   reduce ProcFormals --> ProcFormal
    action 'PROCEDURE' (noprec):   reduce ProcFormals --> ProcFormal
    action 'IMPLEMENTATION' (noprec):   reduce ProcFormals --> ProcFormal
    action 'REQUIRES' (noprec):   reduce ProcFormals --> ProcFormal
    action 'ENSURES' (noprec):   reduce ProcFormals --> ProcFormal
    action 'LT' (noprec):   reduce ProcFormals --> ProcFormal
    action 'GT' (noprec):   reduce ProcFormals --> ProcFormal
    action 'EQ' (noprec):   reduce ProcFormals --> ProcFormal
    action 'BANG' (noprec):   reduce ProcFormals --> ProcFormal
    action 'COMMA' (noprec):   shift 285
    action 'LE' (noprec):   reduce ProcFormals --> ProcFormal
    action 'GE' (noprec):   reduce ProcFormals --> ProcFormal
    action 'EQEQ' (noprec):   reduce ProcFormals --> ProcFormal
    action 'NE' (noprec):   reduce ProcFormals --> ProcFormal
    action 'PLUS' (noprec):   reduce ProcFormals --> ProcFormal
    action 'MINUS' (noprec):   reduce ProcFormals --> ProcFormal
    action 'STAR' (noprec):   reduce ProcFormals --> ProcFormal
    action 'SLASH' (noprec):   reduce ProcFormals --> ProcFormal
    action 'PERCENT' (noprec):   reduce ProcFormals --> ProcFormal
    action 'AMPAMP' (noprec):   reduce ProcFormals --> ProcFormal
    action 'BARBAR' (noprec):   reduce ProcFormals --> ProcFormal
    action 'COLONEQ' (noprec):   reduce ProcFormals --> ProcFormal
    action 'INT' (noprec):   reduce ProcFormals --> ProcFormal
    action 'BOOL' (noprec):   reduce ProcFormals --> ProcFormal
    action 'IF' (noprec):   reduce ProcFormals --> ProcFormal
    action 'RETURN' (noprec):   reduce ProcFormals --> ProcFormal
    action 'VAR' (noprec):   reduce ProcFormals --> ProcFormal
    action 'LBRACE' (noprec):   reduce ProcFormals --> ProcFormal
    action 'RBRACE' (noprec):   reduce ProcFormals --> ProcFormal
    action 'SEMI' (noprec):   reduce ProcFormals --> ProcFormal
    action 'COLON' (noprec):   reduce ProcFormals --> ProcFormal
    action 'LPAREN' (noprec):   reduce ProcFormals --> ProcFormal
    action 'RPAREN' (noprec):   reduce ProcFormals --> ProcFormal
    action 'LBRACKET' (noprec):   reduce ProcFormals --> ProcFormal
    action 'RBRACKET' (noprec):   reduce ProcFormals --> ProcFormal
    action 'LITBOOL' (noprec):   reduce ProcFormals --> ProcFormal
    action 'LITINT' (noprec):   reduce ProcFormals --> ProcFormal
    action 'QLID' (noprec):   reduce ProcFormals --> ProcFormal
    action 'QUID' (noprec):   reduce ProcFormals --> ProcFormal
    action 'DLID' (noprec):   reduce ProcFormals --> ProcFormal
    action 'DUID' (noprec):   reduce ProcFormals --> ProcFormal
    action 'LID' (noprec):   reduce ProcFormals --> ProcFormal
    action 'UID' (noprec):   reduce ProcFormals --> ProcFormal
    action 'error' (noprec):   reduce ProcFormals --> ProcFormal
    action '#' (noprec):   reduce ProcFormals --> ProcFormal
    action '$$' (noprec):   reduce ProcFormals --> ProcFormal

  immediate action: <none>
 gotos:

state 285:
  items:
    ProcFormals -> ProcFormal 'COMMA' . ProcFormals

  actions:
    action 'EOF' (noprec):   reduce ProcFormals --> 
    action 'EAX' (noprec):   reduce ProcFormals --> 
    action 'EBX' (noprec):   reduce ProcFormals --> 
    action 'ECX' (noprec):   reduce ProcFormals --> 
    action 'EDX' (noprec):   reduce ProcFormals --> 
    action 'ESI' (noprec):   reduce ProcFormals --> 
    action 'EDI' (noprec):   reduce ProcFormals --> 
    action 'EBP' (noprec):   reduce ProcFormals --> 
    action 'ESP' (noprec):   reduce ProcFormals --> 
    action 'MODIFIES' (noprec):   reduce ProcFormals --> 
    action 'INVARIANT' (noprec):   reduce ProcFormals --> 
    action 'ASSERT' (noprec):   reduce ProcFormals --> 
    action 'HAVOC' (noprec):   reduce ProcFormals --> 
    action 'GOTO' (noprec):   reduce ProcFormals --> 
    action 'CALL' (noprec):   reduce ProcFormals --> 
    action 'CCALL' (noprec):   reduce ProcFormals --> 
    action 'RET' (noprec):   reduce ProcFormals --> 
    action 'IRET' (noprec):   reduce ProcFormals --> 
    action 'GO' (noprec):   reduce ProcFormals --> 
    action 'FORALL' (noprec):   reduce ProcFormals --> 
    action 'EXISTS' (noprec):   reduce ProcFormals --> 
    action 'OLD' (noprec):   reduce ProcFormals --> 
    action 'COLONCOLON' (noprec):   reduce ProcFormals --> 
    action 'EQEQGT' (noprec):   reduce ProcFormals --> 
    action 'LTEQEQGT' (noprec):   reduce ProcFormals --> 
    action 'TYPE' (noprec):   reduce ProcFormals --> 
    action 'CONST' (noprec):   reduce ProcFormals --> 
    action 'FUNCTION' (noprec):   reduce ProcFormals --> 
    action 'RETURNS' (noprec):   reduce ProcFormals --> 
    action 'AXIOM' (noprec):   reduce ProcFormals --> 
    action 'PROCEDURE' (noprec):   reduce ProcFormals --> 
    action 'IMPLEMENTATION' (noprec):   reduce ProcFormals --> 
    action 'REQUIRES' (noprec):   reduce ProcFormals --> 
    action 'ENSURES' (noprec):   reduce ProcFormals --> 
    action 'LT' (noprec):   reduce ProcFormals --> 
    action 'GT' (noprec):   reduce ProcFormals --> 
    action 'EQ' (noprec):   reduce ProcFormals --> 
    action 'BANG' (noprec):   reduce ProcFormals --> 
    action 'COMMA' (noprec):   reduce ProcFormals --> 
    action 'LE' (noprec):   reduce ProcFormals --> 
    action 'GE' (noprec):   reduce ProcFormals --> 
    action 'EQEQ' (noprec):   reduce ProcFormals --> 
    action 'NE' (noprec):   reduce ProcFormals --> 
    action 'PLUS' (noprec):   reduce ProcFormals --> 
    action 'MINUS' (noprec):   reduce ProcFormals --> 
    action 'STAR' (noprec):   reduce ProcFormals --> 
    action 'SLASH' (noprec):   reduce ProcFormals --> 
    action 'PERCENT' (noprec):   reduce ProcFormals --> 
    action 'AMPAMP' (noprec):   reduce ProcFormals --> 
    action 'BARBAR' (noprec):   reduce ProcFormals --> 
    action 'COLONEQ' (noprec):   reduce ProcFormals --> 
    action 'INT' (noprec):   reduce ProcFormals --> 
    action 'BOOL' (noprec):   reduce ProcFormals --> 
    action 'IF' (noprec):   reduce ProcFormals --> 
    action 'RETURN' (noprec):   reduce ProcFormals --> 
    action 'VAR' (noprec):   reduce ProcFormals --> 
    action 'LBRACE' (noprec):   reduce ProcFormals --> 
    action 'RBRACE' (noprec):   reduce ProcFormals --> 
    action 'SEMI' (noprec):   reduce ProcFormals --> 
    action 'COLON' (noprec):   reduce ProcFormals --> 
    action 'LPAREN' (noprec):   reduce ProcFormals --> 
    action 'RPAREN' (noprec):   reduce ProcFormals --> 
    action 'LBRACKET' (noprec):   reduce ProcFormals --> 
    action 'RBRACKET' (noprec):   reduce ProcFormals --> 
    action 'LITBOOL' (noprec):   reduce ProcFormals --> 
    action 'LITINT' (noprec):   reduce ProcFormals --> 
    action 'QLID' (noprec):   reduce ProcFormals --> 
    action 'QUID' (noprec):   reduce ProcFormals --> 
    action 'DLID' (noprec):   shift 281
    action 'DUID' (noprec):   reduce ProcFormals --> 
    action 'LID' (noprec):   reduce ProcFormals --> 
    action 'UID' (noprec):   reduce ProcFormals --> 
    action 'error' (noprec):   reduce ProcFormals --> 
    action '#' (noprec):   reduce ProcFormals --> 
    action '$$' (noprec):   reduce ProcFormals --> 

  immediate action: <none>
 gotos:
    goto ProcFormal: 284
    goto ProcFormals: 286

state 286:
  items:
    ProcFormals -> ProcFormal 'COMMA' ProcFormals . 

  actions:
    action 'EOF' (noprec):   reduce ProcFormals --> ProcFormal 'COMMA' ProcFormals
    action 'EAX' (noprec):   reduce ProcFormals --> ProcFormal 'COMMA' ProcFormals
    action 'EBX' (noprec):   reduce ProcFormals --> ProcFormal 'COMMA' ProcFormals
    action 'ECX' (noprec):   reduce ProcFormals --> ProcFormal 'COMMA' ProcFormals
    action 'EDX' (noprec):   reduce ProcFormals --> ProcFormal 'COMMA' ProcFormals
    action 'ESI' (noprec):   reduce ProcFormals --> ProcFormal 'COMMA' ProcFormals
    action 'EDI' (noprec):   reduce ProcFormals --> ProcFormal 'COMMA' ProcFormals
    action 'EBP' (noprec):   reduce ProcFormals --> ProcFormal 'COMMA' ProcFormals
    action 'ESP' (noprec):   reduce ProcFormals --> ProcFormal 'COMMA' ProcFormals
    action 'MODIFIES' (noprec):   reduce ProcFormals --> ProcFormal 'COMMA' ProcFormals
    action 'INVARIANT' (noprec):   reduce ProcFormals --> ProcFormal 'COMMA' ProcFormals
    action 'ASSERT' (noprec):   reduce ProcFormals --> ProcFormal 'COMMA' ProcFormals
    action 'HAVOC' (noprec):   reduce ProcFormals --> ProcFormal 'COMMA' ProcFormals
    action 'GOTO' (noprec):   reduce ProcFormals --> ProcFormal 'COMMA' ProcFormals
    action 'CALL' (noprec):   reduce ProcFormals --> ProcFormal 'COMMA' ProcFormals
    action 'CCALL' (noprec):   reduce ProcFormals --> ProcFormal 'COMMA' ProcFormals
    action 'RET' (noprec):   reduce ProcFormals --> ProcFormal 'COMMA' ProcFormals
    action 'IRET' (noprec):   reduce ProcFormals --> ProcFormal 'COMMA' ProcFormals
    action 'GO' (noprec):   reduce ProcFormals --> ProcFormal 'COMMA' ProcFormals
    action 'FORALL' (noprec):   reduce ProcFormals --> ProcFormal 'COMMA' ProcFormals
    action 'EXISTS' (noprec):   reduce ProcFormals --> ProcFormal 'COMMA' ProcFormals
    action 'OLD' (noprec):   reduce ProcFormals --> ProcFormal 'COMMA' ProcFormals
    action 'COLONCOLON' (noprec):   reduce ProcFormals --> ProcFormal 'COMMA' ProcFormals
    action 'EQEQGT' (noprec):   reduce ProcFormals --> ProcFormal 'COMMA' ProcFormals
    action 'LTEQEQGT' (noprec):   reduce ProcFormals --> ProcFormal 'COMMA' ProcFormals
    action 'TYPE' (noprec):   reduce ProcFormals --> ProcFormal 'COMMA' ProcFormals
    action 'CONST' (noprec):   reduce ProcFormals --> ProcFormal 'COMMA' ProcFormals
    action 'FUNCTION' (noprec):   reduce ProcFormals --> ProcFormal 'COMMA' ProcFormals
    action 'RETURNS' (noprec):   reduce ProcFormals --> ProcFormal 'COMMA' ProcFormals
    action 'AXIOM' (noprec):   reduce ProcFormals --> ProcFormal 'COMMA' ProcFormals
    action 'PROCEDURE' (noprec):   reduce ProcFormals --> ProcFormal 'COMMA' ProcFormals
    action 'IMPLEMENTATION' (noprec):   reduce ProcFormals --> ProcFormal 'COMMA' ProcFormals
    action 'REQUIRES' (noprec):   reduce ProcFormals --> ProcFormal 'COMMA' ProcFormals
    action 'ENSURES' (noprec):   reduce ProcFormals --> ProcFormal 'COMMA' ProcFormals
    action 'LT' (noprec):   reduce ProcFormals --> ProcFormal 'COMMA' ProcFormals
    action 'GT' (noprec):   reduce ProcFormals --> ProcFormal 'COMMA' ProcFormals
    action 'EQ' (noprec):   reduce ProcFormals --> ProcFormal 'COMMA' ProcFormals
    action 'BANG' (noprec):   reduce ProcFormals --> ProcFormal 'COMMA' ProcFormals
    action 'COMMA' (noprec):   reduce ProcFormals --> ProcFormal 'COMMA' ProcFormals
    action 'LE' (noprec):   reduce ProcFormals --> ProcFormal 'COMMA' ProcFormals
    action 'GE' (noprec):   reduce ProcFormals --> ProcFormal 'COMMA' ProcFormals
    action 'EQEQ' (noprec):   reduce ProcFormals --> ProcFormal 'COMMA' ProcFormals
    action 'NE' (noprec):   reduce ProcFormals --> ProcFormal 'COMMA' ProcFormals
    action 'PLUS' (noprec):   reduce ProcFormals --> ProcFormal 'COMMA' ProcFormals
    action 'MINUS' (noprec):   reduce ProcFormals --> ProcFormal 'COMMA' ProcFormals
    action 'STAR' (noprec):   reduce ProcFormals --> ProcFormal 'COMMA' ProcFormals
    action 'SLASH' (noprec):   reduce ProcFormals --> ProcFormal 'COMMA' ProcFormals
    action 'PERCENT' (noprec):   reduce ProcFormals --> ProcFormal 'COMMA' ProcFormals
    action 'AMPAMP' (noprec):   reduce ProcFormals --> ProcFormal 'COMMA' ProcFormals
    action 'BARBAR' (noprec):   reduce ProcFormals --> ProcFormal 'COMMA' ProcFormals
    action 'COLONEQ' (noprec):   reduce ProcFormals --> ProcFormal 'COMMA' ProcFormals
    action 'INT' (noprec):   reduce ProcFormals --> ProcFormal 'COMMA' ProcFormals
    action 'BOOL' (noprec):   reduce ProcFormals --> ProcFormal 'COMMA' ProcFormals
    action 'IF' (noprec):   reduce ProcFormals --> ProcFormal 'COMMA' ProcFormals
    action 'RETURN' (noprec):   reduce ProcFormals --> ProcFormal 'COMMA' ProcFormals
    action 'VAR' (noprec):   reduce ProcFormals --> ProcFormal 'COMMA' ProcFormals
    action 'LBRACE' (noprec):   reduce ProcFormals --> ProcFormal 'COMMA' ProcFormals
    action 'RBRACE' (noprec):   reduce ProcFormals --> ProcFormal 'COMMA' ProcFormals
    action 'SEMI' (noprec):   reduce ProcFormals --> ProcFormal 'COMMA' ProcFormals
    action 'COLON' (noprec):   reduce ProcFormals --> ProcFormal 'COMMA' ProcFormals
    action 'LPAREN' (noprec):   reduce ProcFormals --> ProcFormal 'COMMA' ProcFormals
    action 'RPAREN' (noprec):   reduce ProcFormals --> ProcFormal 'COMMA' ProcFormals
    action 'LBRACKET' (noprec):   reduce ProcFormals --> ProcFormal 'COMMA' ProcFormals
    action 'RBRACKET' (noprec):   reduce ProcFormals --> ProcFormal 'COMMA' ProcFormals
    action 'LITBOOL' (noprec):   reduce ProcFormals --> ProcFormal 'COMMA' ProcFormals
    action 'LITINT' (noprec):   reduce ProcFormals --> ProcFormal 'COMMA' ProcFormals
    action 'QLID' (noprec):   reduce ProcFormals --> ProcFormal 'COMMA' ProcFormals
    action 'QUID' (noprec):   reduce ProcFormals --> ProcFormal 'COMMA' ProcFormals
    action 'DLID' (noprec):   reduce ProcFormals --> ProcFormal 'COMMA' ProcFormals
    action 'DUID' (noprec):   reduce ProcFormals --> ProcFormal 'COMMA' ProcFormals
    action 'LID' (noprec):   reduce ProcFormals --> ProcFormal 'COMMA' ProcFormals
    action 'UID' (noprec):   reduce ProcFormals --> ProcFormal 'COMMA' ProcFormals
    action 'error' (noprec):   reduce ProcFormals --> ProcFormal 'COMMA' ProcFormals
    action '#' (noprec):   reduce ProcFormals --> ProcFormal 'COMMA' ProcFormals
    action '$$' (noprec):   reduce ProcFormals --> ProcFormal 'COMMA' ProcFormals

  immediate action:   reduce ProcFormals --> ProcFormal 'COMMA' ProcFormals
 gotos:

state 287:
  items:
    Spec -> 'REQUIRES' . Exp 'SEMI'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   shift 14
    action 'EBX' (noprec):   shift 15
    action 'ECX' (noprec):   shift 16
    action 'EDX' (noprec):   shift 17
    action 'ESI' (noprec):   shift 18
    action 'EDI' (noprec):   shift 19
    action 'EBP' (noprec):   shift 20
    action 'ESP' (noprec):   shift 21
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   shift 125
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (explicit right 9999):   shift 107
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (explicit left 10000):   shift 54
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   shift 124
    action 'LITINT' (noprec):   shift 123
    action 'QLID' (noprec):   shift 145
    action 'QUID' (noprec):   shift 144
    action 'DLID' (noprec):   shift 143
    action 'DUID' (noprec):   shift 142
    action 'LID' (noprec):   shift 4
    action 'UID' (noprec):   shift 5
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto ID: 141
    goto Reg: 132
    goto Exp: 85
    goto AnyId: 128

state 288:
  items:
    Spec -> 'REQUIRES' Exp 'SEMI' . 

  actions:
    action 'EOF' (noprec):   reduce Spec --> 'REQUIRES' Exp 'SEMI'
    action 'EAX' (noprec):   reduce Spec --> 'REQUIRES' Exp 'SEMI'
    action 'EBX' (noprec):   reduce Spec --> 'REQUIRES' Exp 'SEMI'
    action 'ECX' (noprec):   reduce Spec --> 'REQUIRES' Exp 'SEMI'
    action 'EDX' (noprec):   reduce Spec --> 'REQUIRES' Exp 'SEMI'
    action 'ESI' (noprec):   reduce Spec --> 'REQUIRES' Exp 'SEMI'
    action 'EDI' (noprec):   reduce Spec --> 'REQUIRES' Exp 'SEMI'
    action 'EBP' (noprec):   reduce Spec --> 'REQUIRES' Exp 'SEMI'
    action 'ESP' (noprec):   reduce Spec --> 'REQUIRES' Exp 'SEMI'
    action 'MODIFIES' (noprec):   reduce Spec --> 'REQUIRES' Exp 'SEMI'
    action 'INVARIANT' (noprec):   reduce Spec --> 'REQUIRES' Exp 'SEMI'
    action 'ASSERT' (noprec):   reduce Spec --> 'REQUIRES' Exp 'SEMI'
    action 'HAVOC' (noprec):   reduce Spec --> 'REQUIRES' Exp 'SEMI'
    action 'GOTO' (noprec):   reduce Spec --> 'REQUIRES' Exp 'SEMI'
    action 'CALL' (noprec):   reduce Spec --> 'REQUIRES' Exp 'SEMI'
    action 'CCALL' (noprec):   reduce Spec --> 'REQUIRES' Exp 'SEMI'
    action 'RET' (noprec):   reduce Spec --> 'REQUIRES' Exp 'SEMI'
    action 'IRET' (noprec):   reduce Spec --> 'REQUIRES' Exp 'SEMI'
    action 'GO' (noprec):   reduce Spec --> 'REQUIRES' Exp 'SEMI'
    action 'FORALL' (noprec):   reduce Spec --> 'REQUIRES' Exp 'SEMI'
    action 'EXISTS' (noprec):   reduce Spec --> 'REQUIRES' Exp 'SEMI'
    action 'OLD' (noprec):   reduce Spec --> 'REQUIRES' Exp 'SEMI'
    action 'COLONCOLON' (noprec):   reduce Spec --> 'REQUIRES' Exp 'SEMI'
    action 'EQEQGT' (noprec):   reduce Spec --> 'REQUIRES' Exp 'SEMI'
    action 'LTEQEQGT' (noprec):   reduce Spec --> 'REQUIRES' Exp 'SEMI'
    action 'TYPE' (noprec):   reduce Spec --> 'REQUIRES' Exp 'SEMI'
    action 'CONST' (noprec):   reduce Spec --> 'REQUIRES' Exp 'SEMI'
    action 'FUNCTION' (noprec):   reduce Spec --> 'REQUIRES' Exp 'SEMI'
    action 'RETURNS' (noprec):   reduce Spec --> 'REQUIRES' Exp 'SEMI'
    action 'AXIOM' (noprec):   reduce Spec --> 'REQUIRES' Exp 'SEMI'
    action 'PROCEDURE' (noprec):   reduce Spec --> 'REQUIRES' Exp 'SEMI'
    action 'IMPLEMENTATION' (noprec):   reduce Spec --> 'REQUIRES' Exp 'SEMI'
    action 'REQUIRES' (noprec):   reduce Spec --> 'REQUIRES' Exp 'SEMI'
    action 'ENSURES' (noprec):   reduce Spec --> 'REQUIRES' Exp 'SEMI'
    action 'LT' (noprec):   reduce Spec --> 'REQUIRES' Exp 'SEMI'
    action 'GT' (noprec):   reduce Spec --> 'REQUIRES' Exp 'SEMI'
    action 'EQ' (noprec):   reduce Spec --> 'REQUIRES' Exp 'SEMI'
    action 'BANG' (noprec):   reduce Spec --> 'REQUIRES' Exp 'SEMI'
    action 'COMMA' (noprec):   reduce Spec --> 'REQUIRES' Exp 'SEMI'
    action 'LE' (noprec):   reduce Spec --> 'REQUIRES' Exp 'SEMI'
    action 'GE' (noprec):   reduce Spec --> 'REQUIRES' Exp 'SEMI'
    action 'EQEQ' (noprec):   reduce Spec --> 'REQUIRES' Exp 'SEMI'
    action 'NE' (noprec):   reduce Spec --> 'REQUIRES' Exp 'SEMI'
    action 'PLUS' (noprec):   reduce Spec --> 'REQUIRES' Exp 'SEMI'
    action 'MINUS' (noprec):   reduce Spec --> 'REQUIRES' Exp 'SEMI'
    action 'STAR' (noprec):   reduce Spec --> 'REQUIRES' Exp 'SEMI'
    action 'SLASH' (noprec):   reduce Spec --> 'REQUIRES' Exp 'SEMI'
    action 'PERCENT' (noprec):   reduce Spec --> 'REQUIRES' Exp 'SEMI'
    action 'AMPAMP' (noprec):   reduce Spec --> 'REQUIRES' Exp 'SEMI'
    action 'BARBAR' (noprec):   reduce Spec --> 'REQUIRES' Exp 'SEMI'
    action 'COLONEQ' (noprec):   reduce Spec --> 'REQUIRES' Exp 'SEMI'
    action 'INT' (noprec):   reduce Spec --> 'REQUIRES' Exp 'SEMI'
    action 'BOOL' (noprec):   reduce Spec --> 'REQUIRES' Exp 'SEMI'
    action 'IF' (noprec):   reduce Spec --> 'REQUIRES' Exp 'SEMI'
    action 'RETURN' (noprec):   reduce Spec --> 'REQUIRES' Exp 'SEMI'
    action 'VAR' (noprec):   reduce Spec --> 'REQUIRES' Exp 'SEMI'
    action 'LBRACE' (noprec):   reduce Spec --> 'REQUIRES' Exp 'SEMI'
    action 'RBRACE' (noprec):   reduce Spec --> 'REQUIRES' Exp 'SEMI'
    action 'SEMI' (noprec):   reduce Spec --> 'REQUIRES' Exp 'SEMI'
    action 'COLON' (noprec):   reduce Spec --> 'REQUIRES' Exp 'SEMI'
    action 'LPAREN' (noprec):   reduce Spec --> 'REQUIRES' Exp 'SEMI'
    action 'RPAREN' (noprec):   reduce Spec --> 'REQUIRES' Exp 'SEMI'
    action 'LBRACKET' (noprec):   reduce Spec --> 'REQUIRES' Exp 'SEMI'
    action 'RBRACKET' (noprec):   reduce Spec --> 'REQUIRES' Exp 'SEMI'
    action 'LITBOOL' (noprec):   reduce Spec --> 'REQUIRES' Exp 'SEMI'
    action 'LITINT' (noprec):   reduce Spec --> 'REQUIRES' Exp 'SEMI'
    action 'QLID' (noprec):   reduce Spec --> 'REQUIRES' Exp 'SEMI'
    action 'QUID' (noprec):   reduce Spec --> 'REQUIRES' Exp 'SEMI'
    action 'DLID' (noprec):   reduce Spec --> 'REQUIRES' Exp 'SEMI'
    action 'DUID' (noprec):   reduce Spec --> 'REQUIRES' Exp 'SEMI'
    action 'LID' (noprec):   reduce Spec --> 'REQUIRES' Exp 'SEMI'
    action 'UID' (noprec):   reduce Spec --> 'REQUIRES' Exp 'SEMI'
    action 'error' (noprec):   reduce Spec --> 'REQUIRES' Exp 'SEMI'
    action '#' (noprec):   reduce Spec --> 'REQUIRES' Exp 'SEMI'
    action '$$' (noprec):   reduce Spec --> 'REQUIRES' Exp 'SEMI'

  immediate action:   reduce Spec --> 'REQUIRES' Exp 'SEMI'
 gotos:

state 289:
  items:
    Spec -> 'ENSURES' . Exp 'SEMI'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   shift 14
    action 'EBX' (noprec):   shift 15
    action 'ECX' (noprec):   shift 16
    action 'EDX' (noprec):   shift 17
    action 'ESI' (noprec):   shift 18
    action 'EDI' (noprec):   shift 19
    action 'EBP' (noprec):   shift 20
    action 'ESP' (noprec):   shift 21
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   shift 125
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (explicit right 9999):   shift 107
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (explicit left 10000):   shift 54
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   shift 124
    action 'LITINT' (noprec):   shift 123
    action 'QLID' (noprec):   shift 145
    action 'QUID' (noprec):   shift 144
    action 'DLID' (noprec):   shift 143
    action 'DUID' (noprec):   shift 142
    action 'LID' (noprec):   shift 4
    action 'UID' (noprec):   shift 5
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto ID: 141
    goto Reg: 132
    goto Exp: 86
    goto AnyId: 128

state 290:
  items:
    Spec -> 'ENSURES' Exp 'SEMI' . 

  actions:
    action 'EOF' (noprec):   reduce Spec --> 'ENSURES' Exp 'SEMI'
    action 'EAX' (noprec):   reduce Spec --> 'ENSURES' Exp 'SEMI'
    action 'EBX' (noprec):   reduce Spec --> 'ENSURES' Exp 'SEMI'
    action 'ECX' (noprec):   reduce Spec --> 'ENSURES' Exp 'SEMI'
    action 'EDX' (noprec):   reduce Spec --> 'ENSURES' Exp 'SEMI'
    action 'ESI' (noprec):   reduce Spec --> 'ENSURES' Exp 'SEMI'
    action 'EDI' (noprec):   reduce Spec --> 'ENSURES' Exp 'SEMI'
    action 'EBP' (noprec):   reduce Spec --> 'ENSURES' Exp 'SEMI'
    action 'ESP' (noprec):   reduce Spec --> 'ENSURES' Exp 'SEMI'
    action 'MODIFIES' (noprec):   reduce Spec --> 'ENSURES' Exp 'SEMI'
    action 'INVARIANT' (noprec):   reduce Spec --> 'ENSURES' Exp 'SEMI'
    action 'ASSERT' (noprec):   reduce Spec --> 'ENSURES' Exp 'SEMI'
    action 'HAVOC' (noprec):   reduce Spec --> 'ENSURES' Exp 'SEMI'
    action 'GOTO' (noprec):   reduce Spec --> 'ENSURES' Exp 'SEMI'
    action 'CALL' (noprec):   reduce Spec --> 'ENSURES' Exp 'SEMI'
    action 'CCALL' (noprec):   reduce Spec --> 'ENSURES' Exp 'SEMI'
    action 'RET' (noprec):   reduce Spec --> 'ENSURES' Exp 'SEMI'
    action 'IRET' (noprec):   reduce Spec --> 'ENSURES' Exp 'SEMI'
    action 'GO' (noprec):   reduce Spec --> 'ENSURES' Exp 'SEMI'
    action 'FORALL' (noprec):   reduce Spec --> 'ENSURES' Exp 'SEMI'
    action 'EXISTS' (noprec):   reduce Spec --> 'ENSURES' Exp 'SEMI'
    action 'OLD' (noprec):   reduce Spec --> 'ENSURES' Exp 'SEMI'
    action 'COLONCOLON' (noprec):   reduce Spec --> 'ENSURES' Exp 'SEMI'
    action 'EQEQGT' (noprec):   reduce Spec --> 'ENSURES' Exp 'SEMI'
    action 'LTEQEQGT' (noprec):   reduce Spec --> 'ENSURES' Exp 'SEMI'
    action 'TYPE' (noprec):   reduce Spec --> 'ENSURES' Exp 'SEMI'
    action 'CONST' (noprec):   reduce Spec --> 'ENSURES' Exp 'SEMI'
    action 'FUNCTION' (noprec):   reduce Spec --> 'ENSURES' Exp 'SEMI'
    action 'RETURNS' (noprec):   reduce Spec --> 'ENSURES' Exp 'SEMI'
    action 'AXIOM' (noprec):   reduce Spec --> 'ENSURES' Exp 'SEMI'
    action 'PROCEDURE' (noprec):   reduce Spec --> 'ENSURES' Exp 'SEMI'
    action 'IMPLEMENTATION' (noprec):   reduce Spec --> 'ENSURES' Exp 'SEMI'
    action 'REQUIRES' (noprec):   reduce Spec --> 'ENSURES' Exp 'SEMI'
    action 'ENSURES' (noprec):   reduce Spec --> 'ENSURES' Exp 'SEMI'
    action 'LT' (noprec):   reduce Spec --> 'ENSURES' Exp 'SEMI'
    action 'GT' (noprec):   reduce Spec --> 'ENSURES' Exp 'SEMI'
    action 'EQ' (noprec):   reduce Spec --> 'ENSURES' Exp 'SEMI'
    action 'BANG' (noprec):   reduce Spec --> 'ENSURES' Exp 'SEMI'
    action 'COMMA' (noprec):   reduce Spec --> 'ENSURES' Exp 'SEMI'
    action 'LE' (noprec):   reduce Spec --> 'ENSURES' Exp 'SEMI'
    action 'GE' (noprec):   reduce Spec --> 'ENSURES' Exp 'SEMI'
    action 'EQEQ' (noprec):   reduce Spec --> 'ENSURES' Exp 'SEMI'
    action 'NE' (noprec):   reduce Spec --> 'ENSURES' Exp 'SEMI'
    action 'PLUS' (noprec):   reduce Spec --> 'ENSURES' Exp 'SEMI'
    action 'MINUS' (noprec):   reduce Spec --> 'ENSURES' Exp 'SEMI'
    action 'STAR' (noprec):   reduce Spec --> 'ENSURES' Exp 'SEMI'
    action 'SLASH' (noprec):   reduce Spec --> 'ENSURES' Exp 'SEMI'
    action 'PERCENT' (noprec):   reduce Spec --> 'ENSURES' Exp 'SEMI'
    action 'AMPAMP' (noprec):   reduce Spec --> 'ENSURES' Exp 'SEMI'
    action 'BARBAR' (noprec):   reduce Spec --> 'ENSURES' Exp 'SEMI'
    action 'COLONEQ' (noprec):   reduce Spec --> 'ENSURES' Exp 'SEMI'
    action 'INT' (noprec):   reduce Spec --> 'ENSURES' Exp 'SEMI'
    action 'BOOL' (noprec):   reduce Spec --> 'ENSURES' Exp 'SEMI'
    action 'IF' (noprec):   reduce Spec --> 'ENSURES' Exp 'SEMI'
    action 'RETURN' (noprec):   reduce Spec --> 'ENSURES' Exp 'SEMI'
    action 'VAR' (noprec):   reduce Spec --> 'ENSURES' Exp 'SEMI'
    action 'LBRACE' (noprec):   reduce Spec --> 'ENSURES' Exp 'SEMI'
    action 'RBRACE' (noprec):   reduce Spec --> 'ENSURES' Exp 'SEMI'
    action 'SEMI' (noprec):   reduce Spec --> 'ENSURES' Exp 'SEMI'
    action 'COLON' (noprec):   reduce Spec --> 'ENSURES' Exp 'SEMI'
    action 'LPAREN' (noprec):   reduce Spec --> 'ENSURES' Exp 'SEMI'
    action 'RPAREN' (noprec):   reduce Spec --> 'ENSURES' Exp 'SEMI'
    action 'LBRACKET' (noprec):   reduce Spec --> 'ENSURES' Exp 'SEMI'
    action 'RBRACKET' (noprec):   reduce Spec --> 'ENSURES' Exp 'SEMI'
    action 'LITBOOL' (noprec):   reduce Spec --> 'ENSURES' Exp 'SEMI'
    action 'LITINT' (noprec):   reduce Spec --> 'ENSURES' Exp 'SEMI'
    action 'QLID' (noprec):   reduce Spec --> 'ENSURES' Exp 'SEMI'
    action 'QUID' (noprec):   reduce Spec --> 'ENSURES' Exp 'SEMI'
    action 'DLID' (noprec):   reduce Spec --> 'ENSURES' Exp 'SEMI'
    action 'DUID' (noprec):   reduce Spec --> 'ENSURES' Exp 'SEMI'
    action 'LID' (noprec):   reduce Spec --> 'ENSURES' Exp 'SEMI'
    action 'UID' (noprec):   reduce Spec --> 'ENSURES' Exp 'SEMI'
    action 'error' (noprec):   reduce Spec --> 'ENSURES' Exp 'SEMI'
    action '#' (noprec):   reduce Spec --> 'ENSURES' Exp 'SEMI'
    action '$$' (noprec):   reduce Spec --> 'ENSURES' Exp 'SEMI'

  immediate action:   reduce Spec --> 'ENSURES' Exp 'SEMI'
 gotos:

state 291:
  items:
    Spec -> 'MODIFIES' . AnyVars 'SEMI'

  actions:
    action 'EOF' (noprec):   reduce AnyVars --> 
    action 'EAX' (noprec):   shift 14
    action 'EBX' (noprec):   shift 15
    action 'ECX' (noprec):   shift 16
    action 'EDX' (noprec):   shift 17
    action 'ESI' (noprec):   shift 18
    action 'EDI' (noprec):   shift 19
    action 'EBP' (noprec):   shift 20
    action 'ESP' (noprec):   shift 21
    action 'MODIFIES' (noprec):   reduce AnyVars --> 
    action 'INVARIANT' (noprec):   reduce AnyVars --> 
    action 'ASSERT' (noprec):   reduce AnyVars --> 
    action 'HAVOC' (noprec):   reduce AnyVars --> 
    action 'GOTO' (noprec):   reduce AnyVars --> 
    action 'CALL' (noprec):   reduce AnyVars --> 
    action 'CCALL' (noprec):   reduce AnyVars --> 
    action 'RET' (noprec):   reduce AnyVars --> 
    action 'IRET' (noprec):   reduce AnyVars --> 
    action 'GO' (noprec):   reduce AnyVars --> 
    action 'FORALL' (noprec):   reduce AnyVars --> 
    action 'EXISTS' (noprec):   reduce AnyVars --> 
    action 'OLD' (noprec):   reduce AnyVars --> 
    action 'COLONCOLON' (noprec):   reduce AnyVars --> 
    action 'EQEQGT' (noprec):   reduce AnyVars --> 
    action 'LTEQEQGT' (noprec):   reduce AnyVars --> 
    action 'TYPE' (noprec):   reduce AnyVars --> 
    action 'CONST' (noprec):   reduce AnyVars --> 
    action 'FUNCTION' (noprec):   reduce AnyVars --> 
    action 'RETURNS' (noprec):   reduce AnyVars --> 
    action 'AXIOM' (noprec):   reduce AnyVars --> 
    action 'PROCEDURE' (noprec):   reduce AnyVars --> 
    action 'IMPLEMENTATION' (noprec):   reduce AnyVars --> 
    action 'REQUIRES' (noprec):   reduce AnyVars --> 
    action 'ENSURES' (noprec):   reduce AnyVars --> 
    action 'LT' (noprec):   reduce AnyVars --> 
    action 'GT' (noprec):   reduce AnyVars --> 
    action 'EQ' (noprec):   reduce AnyVars --> 
    action 'BANG' (noprec):   reduce AnyVars --> 
    action 'COMMA' (noprec):   reduce AnyVars --> 
    action 'LE' (noprec):   reduce AnyVars --> 
    action 'GE' (noprec):   reduce AnyVars --> 
    action 'EQEQ' (noprec):   reduce AnyVars --> 
    action 'NE' (noprec):   reduce AnyVars --> 
    action 'PLUS' (noprec):   reduce AnyVars --> 
    action 'MINUS' (noprec):   reduce AnyVars --> 
    action 'STAR' (noprec):   reduce AnyVars --> 
    action 'SLASH' (noprec):   reduce AnyVars --> 
    action 'PERCENT' (noprec):   reduce AnyVars --> 
    action 'AMPAMP' (noprec):   reduce AnyVars --> 
    action 'BARBAR' (noprec):   reduce AnyVars --> 
    action 'COLONEQ' (noprec):   reduce AnyVars --> 
    action 'INT' (noprec):   reduce AnyVars --> 
    action 'BOOL' (noprec):   reduce AnyVars --> 
    action 'IF' (noprec):   reduce AnyVars --> 
    action 'RETURN' (noprec):   reduce AnyVars --> 
    action 'VAR' (noprec):   reduce AnyVars --> 
    action 'LBRACE' (noprec):   reduce AnyVars --> 
    action 'RBRACE' (noprec):   reduce AnyVars --> 
    action 'SEMI' (noprec):   reduce AnyVars --> 
    action 'COLON' (noprec):   reduce AnyVars --> 
    action 'LPAREN' (noprec):   reduce AnyVars --> 
    action 'RPAREN' (noprec):   reduce AnyVars --> 
    action 'LBRACKET' (noprec):   reduce AnyVars --> 
    action 'RBRACKET' (noprec):   reduce AnyVars --> 
    action 'LITBOOL' (noprec):   reduce AnyVars --> 
    action 'LITINT' (noprec):   reduce AnyVars --> 
    action 'QLID' (noprec):   shift 145
    action 'QUID' (noprec):   shift 144
    action 'DLID' (noprec):   shift 143
    action 'DUID' (noprec):   shift 142
    action 'LID' (noprec):   shift 4
    action 'UID' (noprec):   shift 5
    action 'error' (noprec):   reduce AnyVars --> 
    action '#' (noprec):   reduce AnyVars --> 
    action '$$' (noprec):   reduce AnyVars --> 

  immediate action: <none>
 gotos:
    goto ID: 141
    goto Reg: 147
    goto AnyId: 146
    goto AnyVar: 148
    goto AnyVars: 292

state 292:
  items:
    Spec -> 'MODIFIES' AnyVars . 'SEMI'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   shift 293
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 293:
  items:
    Spec -> 'MODIFIES' AnyVars 'SEMI' . 

  actions:
    action 'EOF' (noprec):   reduce Spec --> 'MODIFIES' AnyVars 'SEMI'
    action 'EAX' (noprec):   reduce Spec --> 'MODIFIES' AnyVars 'SEMI'
    action 'EBX' (noprec):   reduce Spec --> 'MODIFIES' AnyVars 'SEMI'
    action 'ECX' (noprec):   reduce Spec --> 'MODIFIES' AnyVars 'SEMI'
    action 'EDX' (noprec):   reduce Spec --> 'MODIFIES' AnyVars 'SEMI'
    action 'ESI' (noprec):   reduce Spec --> 'MODIFIES' AnyVars 'SEMI'
    action 'EDI' (noprec):   reduce Spec --> 'MODIFIES' AnyVars 'SEMI'
    action 'EBP' (noprec):   reduce Spec --> 'MODIFIES' AnyVars 'SEMI'
    action 'ESP' (noprec):   reduce Spec --> 'MODIFIES' AnyVars 'SEMI'
    action 'MODIFIES' (noprec):   reduce Spec --> 'MODIFIES' AnyVars 'SEMI'
    action 'INVARIANT' (noprec):   reduce Spec --> 'MODIFIES' AnyVars 'SEMI'
    action 'ASSERT' (noprec):   reduce Spec --> 'MODIFIES' AnyVars 'SEMI'
    action 'HAVOC' (noprec):   reduce Spec --> 'MODIFIES' AnyVars 'SEMI'
    action 'GOTO' (noprec):   reduce Spec --> 'MODIFIES' AnyVars 'SEMI'
    action 'CALL' (noprec):   reduce Spec --> 'MODIFIES' AnyVars 'SEMI'
    action 'CCALL' (noprec):   reduce Spec --> 'MODIFIES' AnyVars 'SEMI'
    action 'RET' (noprec):   reduce Spec --> 'MODIFIES' AnyVars 'SEMI'
    action 'IRET' (noprec):   reduce Spec --> 'MODIFIES' AnyVars 'SEMI'
    action 'GO' (noprec):   reduce Spec --> 'MODIFIES' AnyVars 'SEMI'
    action 'FORALL' (noprec):   reduce Spec --> 'MODIFIES' AnyVars 'SEMI'
    action 'EXISTS' (noprec):   reduce Spec --> 'MODIFIES' AnyVars 'SEMI'
    action 'OLD' (noprec):   reduce Spec --> 'MODIFIES' AnyVars 'SEMI'
    action 'COLONCOLON' (noprec):   reduce Spec --> 'MODIFIES' AnyVars 'SEMI'
    action 'EQEQGT' (noprec):   reduce Spec --> 'MODIFIES' AnyVars 'SEMI'
    action 'LTEQEQGT' (noprec):   reduce Spec --> 'MODIFIES' AnyVars 'SEMI'
    action 'TYPE' (noprec):   reduce Spec --> 'MODIFIES' AnyVars 'SEMI'
    action 'CONST' (noprec):   reduce Spec --> 'MODIFIES' AnyVars 'SEMI'
    action 'FUNCTION' (noprec):   reduce Spec --> 'MODIFIES' AnyVars 'SEMI'
    action 'RETURNS' (noprec):   reduce Spec --> 'MODIFIES' AnyVars 'SEMI'
    action 'AXIOM' (noprec):   reduce Spec --> 'MODIFIES' AnyVars 'SEMI'
    action 'PROCEDURE' (noprec):   reduce Spec --> 'MODIFIES' AnyVars 'SEMI'
    action 'IMPLEMENTATION' (noprec):   reduce Spec --> 'MODIFIES' AnyVars 'SEMI'
    action 'REQUIRES' (noprec):   reduce Spec --> 'MODIFIES' AnyVars 'SEMI'
    action 'ENSURES' (noprec):   reduce Spec --> 'MODIFIES' AnyVars 'SEMI'
    action 'LT' (noprec):   reduce Spec --> 'MODIFIES' AnyVars 'SEMI'
    action 'GT' (noprec):   reduce Spec --> 'MODIFIES' AnyVars 'SEMI'
    action 'EQ' (noprec):   reduce Spec --> 'MODIFIES' AnyVars 'SEMI'
    action 'BANG' (noprec):   reduce Spec --> 'MODIFIES' AnyVars 'SEMI'
    action 'COMMA' (noprec):   reduce Spec --> 'MODIFIES' AnyVars 'SEMI'
    action 'LE' (noprec):   reduce Spec --> 'MODIFIES' AnyVars 'SEMI'
    action 'GE' (noprec):   reduce Spec --> 'MODIFIES' AnyVars 'SEMI'
    action 'EQEQ' (noprec):   reduce Spec --> 'MODIFIES' AnyVars 'SEMI'
    action 'NE' (noprec):   reduce Spec --> 'MODIFIES' AnyVars 'SEMI'
    action 'PLUS' (noprec):   reduce Spec --> 'MODIFIES' AnyVars 'SEMI'
    action 'MINUS' (noprec):   reduce Spec --> 'MODIFIES' AnyVars 'SEMI'
    action 'STAR' (noprec):   reduce Spec --> 'MODIFIES' AnyVars 'SEMI'
    action 'SLASH' (noprec):   reduce Spec --> 'MODIFIES' AnyVars 'SEMI'
    action 'PERCENT' (noprec):   reduce Spec --> 'MODIFIES' AnyVars 'SEMI'
    action 'AMPAMP' (noprec):   reduce Spec --> 'MODIFIES' AnyVars 'SEMI'
    action 'BARBAR' (noprec):   reduce Spec --> 'MODIFIES' AnyVars 'SEMI'
    action 'COLONEQ' (noprec):   reduce Spec --> 'MODIFIES' AnyVars 'SEMI'
    action 'INT' (noprec):   reduce Spec --> 'MODIFIES' AnyVars 'SEMI'
    action 'BOOL' (noprec):   reduce Spec --> 'MODIFIES' AnyVars 'SEMI'
    action 'IF' (noprec):   reduce Spec --> 'MODIFIES' AnyVars 'SEMI'
    action 'RETURN' (noprec):   reduce Spec --> 'MODIFIES' AnyVars 'SEMI'
    action 'VAR' (noprec):   reduce Spec --> 'MODIFIES' AnyVars 'SEMI'
    action 'LBRACE' (noprec):   reduce Spec --> 'MODIFIES' AnyVars 'SEMI'
    action 'RBRACE' (noprec):   reduce Spec --> 'MODIFIES' AnyVars 'SEMI'
    action 'SEMI' (noprec):   reduce Spec --> 'MODIFIES' AnyVars 'SEMI'
    action 'COLON' (noprec):   reduce Spec --> 'MODIFIES' AnyVars 'SEMI'
    action 'LPAREN' (noprec):   reduce Spec --> 'MODIFIES' AnyVars 'SEMI'
    action 'RPAREN' (noprec):   reduce Spec --> 'MODIFIES' AnyVars 'SEMI'
    action 'LBRACKET' (noprec):   reduce Spec --> 'MODIFIES' AnyVars 'SEMI'
    action 'RBRACKET' (noprec):   reduce Spec --> 'MODIFIES' AnyVars 'SEMI'
    action 'LITBOOL' (noprec):   reduce Spec --> 'MODIFIES' AnyVars 'SEMI'
    action 'LITINT' (noprec):   reduce Spec --> 'MODIFIES' AnyVars 'SEMI'
    action 'QLID' (noprec):   reduce Spec --> 'MODIFIES' AnyVars 'SEMI'
    action 'QUID' (noprec):   reduce Spec --> 'MODIFIES' AnyVars 'SEMI'
    action 'DLID' (noprec):   reduce Spec --> 'MODIFIES' AnyVars 'SEMI'
    action 'DUID' (noprec):   reduce Spec --> 'MODIFIES' AnyVars 'SEMI'
    action 'LID' (noprec):   reduce Spec --> 'MODIFIES' AnyVars 'SEMI'
    action 'UID' (noprec):   reduce Spec --> 'MODIFIES' AnyVars 'SEMI'
    action 'error' (noprec):   reduce Spec --> 'MODIFIES' AnyVars 'SEMI'
    action '#' (noprec):   reduce Spec --> 'MODIFIES' AnyVars 'SEMI'
    action '$$' (noprec):   reduce Spec --> 'MODIFIES' AnyVars 'SEMI'

  immediate action:   reduce Spec --> 'MODIFIES' AnyVars 'SEMI'
 gotos:

state 294:
  items:
    Spec -> 'RETURNS' . 'LPAREN' ProcFormals 'RPAREN'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (explicit left 10000):   shift 295
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 295:
  items:
    Spec -> 'RETURNS' 'LPAREN' . ProcFormals 'RPAREN'

  actions:
    action 'EOF' (noprec):   reduce ProcFormals --> 
    action 'EAX' (noprec):   reduce ProcFormals --> 
    action 'EBX' (noprec):   reduce ProcFormals --> 
    action 'ECX' (noprec):   reduce ProcFormals --> 
    action 'EDX' (noprec):   reduce ProcFormals --> 
    action 'ESI' (noprec):   reduce ProcFormals --> 
    action 'EDI' (noprec):   reduce ProcFormals --> 
    action 'EBP' (noprec):   reduce ProcFormals --> 
    action 'ESP' (noprec):   reduce ProcFormals --> 
    action 'MODIFIES' (noprec):   reduce ProcFormals --> 
    action 'INVARIANT' (noprec):   reduce ProcFormals --> 
    action 'ASSERT' (noprec):   reduce ProcFormals --> 
    action 'HAVOC' (noprec):   reduce ProcFormals --> 
    action 'GOTO' (noprec):   reduce ProcFormals --> 
    action 'CALL' (noprec):   reduce ProcFormals --> 
    action 'CCALL' (noprec):   reduce ProcFormals --> 
    action 'RET' (noprec):   reduce ProcFormals --> 
    action 'IRET' (noprec):   reduce ProcFormals --> 
    action 'GO' (noprec):   reduce ProcFormals --> 
    action 'FORALL' (noprec):   reduce ProcFormals --> 
    action 'EXISTS' (noprec):   reduce ProcFormals --> 
    action 'OLD' (noprec):   reduce ProcFormals --> 
    action 'COLONCOLON' (noprec):   reduce ProcFormals --> 
    action 'EQEQGT' (noprec):   reduce ProcFormals --> 
    action 'LTEQEQGT' (noprec):   reduce ProcFormals --> 
    action 'TYPE' (noprec):   reduce ProcFormals --> 
    action 'CONST' (noprec):   reduce ProcFormals --> 
    action 'FUNCTION' (noprec):   reduce ProcFormals --> 
    action 'RETURNS' (noprec):   reduce ProcFormals --> 
    action 'AXIOM' (noprec):   reduce ProcFormals --> 
    action 'PROCEDURE' (noprec):   reduce ProcFormals --> 
    action 'IMPLEMENTATION' (noprec):   reduce ProcFormals --> 
    action 'REQUIRES' (noprec):   reduce ProcFormals --> 
    action 'ENSURES' (noprec):   reduce ProcFormals --> 
    action 'LT' (noprec):   reduce ProcFormals --> 
    action 'GT' (noprec):   reduce ProcFormals --> 
    action 'EQ' (noprec):   reduce ProcFormals --> 
    action 'BANG' (noprec):   reduce ProcFormals --> 
    action 'COMMA' (noprec):   reduce ProcFormals --> 
    action 'LE' (noprec):   reduce ProcFormals --> 
    action 'GE' (noprec):   reduce ProcFormals --> 
    action 'EQEQ' (noprec):   reduce ProcFormals --> 
    action 'NE' (noprec):   reduce ProcFormals --> 
    action 'PLUS' (noprec):   reduce ProcFormals --> 
    action 'MINUS' (noprec):   reduce ProcFormals --> 
    action 'STAR' (noprec):   reduce ProcFormals --> 
    action 'SLASH' (noprec):   reduce ProcFormals --> 
    action 'PERCENT' (noprec):   reduce ProcFormals --> 
    action 'AMPAMP' (noprec):   reduce ProcFormals --> 
    action 'BARBAR' (noprec):   reduce ProcFormals --> 
    action 'COLONEQ' (noprec):   reduce ProcFormals --> 
    action 'INT' (noprec):   reduce ProcFormals --> 
    action 'BOOL' (noprec):   reduce ProcFormals --> 
    action 'IF' (noprec):   reduce ProcFormals --> 
    action 'RETURN' (noprec):   reduce ProcFormals --> 
    action 'VAR' (noprec):   reduce ProcFormals --> 
    action 'LBRACE' (noprec):   reduce ProcFormals --> 
    action 'RBRACE' (noprec):   reduce ProcFormals --> 
    action 'SEMI' (noprec):   reduce ProcFormals --> 
    action 'COLON' (noprec):   reduce ProcFormals --> 
    action 'LPAREN' (noprec):   reduce ProcFormals --> 
    action 'RPAREN' (noprec):   reduce ProcFormals --> 
    action 'LBRACKET' (noprec):   reduce ProcFormals --> 
    action 'RBRACKET' (noprec):   reduce ProcFormals --> 
    action 'LITBOOL' (noprec):   reduce ProcFormals --> 
    action 'LITINT' (noprec):   reduce ProcFormals --> 
    action 'QLID' (noprec):   reduce ProcFormals --> 
    action 'QUID' (noprec):   reduce ProcFormals --> 
    action 'DLID' (noprec):   shift 281
    action 'DUID' (noprec):   reduce ProcFormals --> 
    action 'LID' (noprec):   reduce ProcFormals --> 
    action 'UID' (noprec):   reduce ProcFormals --> 
    action 'error' (noprec):   reduce ProcFormals --> 
    action '#' (noprec):   reduce ProcFormals --> 
    action '$$' (noprec):   reduce ProcFormals --> 

  immediate action: <none>
 gotos:
    goto ProcFormal: 284
    goto ProcFormals: 296

state 296:
  items:
    Spec -> 'RETURNS' 'LPAREN' ProcFormals . 'RPAREN'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (explicit left 10000):   shift 297
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 297:
  items:
    Spec -> 'RETURNS' 'LPAREN' ProcFormals 'RPAREN' . 

  actions:
    action 'EOF' (explicit left 10000):   reduce Spec --> 'RETURNS' 'LPAREN' ProcFormals 'RPAREN'
    action 'EAX' (explicit left 10000):   reduce Spec --> 'RETURNS' 'LPAREN' ProcFormals 'RPAREN'
    action 'EBX' (explicit left 10000):   reduce Spec --> 'RETURNS' 'LPAREN' ProcFormals 'RPAREN'
    action 'ECX' (explicit left 10000):   reduce Spec --> 'RETURNS' 'LPAREN' ProcFormals 'RPAREN'
    action 'EDX' (explicit left 10000):   reduce Spec --> 'RETURNS' 'LPAREN' ProcFormals 'RPAREN'
    action 'ESI' (explicit left 10000):   reduce Spec --> 'RETURNS' 'LPAREN' ProcFormals 'RPAREN'
    action 'EDI' (explicit left 10000):   reduce Spec --> 'RETURNS' 'LPAREN' ProcFormals 'RPAREN'
    action 'EBP' (explicit left 10000):   reduce Spec --> 'RETURNS' 'LPAREN' ProcFormals 'RPAREN'
    action 'ESP' (explicit left 10000):   reduce Spec --> 'RETURNS' 'LPAREN' ProcFormals 'RPAREN'
    action 'MODIFIES' (explicit left 10000):   reduce Spec --> 'RETURNS' 'LPAREN' ProcFormals 'RPAREN'
    action 'INVARIANT' (explicit left 10000):   reduce Spec --> 'RETURNS' 'LPAREN' ProcFormals 'RPAREN'
    action 'ASSERT' (explicit left 10000):   reduce Spec --> 'RETURNS' 'LPAREN' ProcFormals 'RPAREN'
    action 'HAVOC' (explicit left 10000):   reduce Spec --> 'RETURNS' 'LPAREN' ProcFormals 'RPAREN'
    action 'GOTO' (explicit left 10000):   reduce Spec --> 'RETURNS' 'LPAREN' ProcFormals 'RPAREN'
    action 'CALL' (explicit left 10000):   reduce Spec --> 'RETURNS' 'LPAREN' ProcFormals 'RPAREN'
    action 'CCALL' (explicit left 10000):   reduce Spec --> 'RETURNS' 'LPAREN' ProcFormals 'RPAREN'
    action 'RET' (explicit left 10000):   reduce Spec --> 'RETURNS' 'LPAREN' ProcFormals 'RPAREN'
    action 'IRET' (explicit left 10000):   reduce Spec --> 'RETURNS' 'LPAREN' ProcFormals 'RPAREN'
    action 'GO' (explicit left 10000):   reduce Spec --> 'RETURNS' 'LPAREN' ProcFormals 'RPAREN'
    action 'FORALL' (explicit left 10000):   reduce Spec --> 'RETURNS' 'LPAREN' ProcFormals 'RPAREN'
    action 'EXISTS' (explicit left 10000):   reduce Spec --> 'RETURNS' 'LPAREN' ProcFormals 'RPAREN'
    action 'OLD' (explicit left 10000):   reduce Spec --> 'RETURNS' 'LPAREN' ProcFormals 'RPAREN'
    action 'COLONCOLON' (explicit left 10000):   reduce Spec --> 'RETURNS' 'LPAREN' ProcFormals 'RPAREN'
    action 'EQEQGT' (explicit left 10000):   reduce Spec --> 'RETURNS' 'LPAREN' ProcFormals 'RPAREN'
    action 'LTEQEQGT' (explicit left 10000):   reduce Spec --> 'RETURNS' 'LPAREN' ProcFormals 'RPAREN'
    action 'TYPE' (explicit left 10000):   reduce Spec --> 'RETURNS' 'LPAREN' ProcFormals 'RPAREN'
    action 'CONST' (explicit left 10000):   reduce Spec --> 'RETURNS' 'LPAREN' ProcFormals 'RPAREN'
    action 'FUNCTION' (explicit left 10000):   reduce Spec --> 'RETURNS' 'LPAREN' ProcFormals 'RPAREN'
    action 'RETURNS' (explicit left 10000):   reduce Spec --> 'RETURNS' 'LPAREN' ProcFormals 'RPAREN'
    action 'AXIOM' (explicit left 10000):   reduce Spec --> 'RETURNS' 'LPAREN' ProcFormals 'RPAREN'
    action 'PROCEDURE' (explicit left 10000):   reduce Spec --> 'RETURNS' 'LPAREN' ProcFormals 'RPAREN'
    action 'IMPLEMENTATION' (explicit left 10000):   reduce Spec --> 'RETURNS' 'LPAREN' ProcFormals 'RPAREN'
    action 'REQUIRES' (explicit left 10000):   reduce Spec --> 'RETURNS' 'LPAREN' ProcFormals 'RPAREN'
    action 'ENSURES' (explicit left 10000):   reduce Spec --> 'RETURNS' 'LPAREN' ProcFormals 'RPAREN'
    action 'LT' (explicit left 10000):   reduce Spec --> 'RETURNS' 'LPAREN' ProcFormals 'RPAREN'
    action 'GT' (explicit left 10000):   reduce Spec --> 'RETURNS' 'LPAREN' ProcFormals 'RPAREN'
    action 'EQ' (explicit left 10000):   reduce Spec --> 'RETURNS' 'LPAREN' ProcFormals 'RPAREN'
    action 'BANG' (explicit left 10000):   reduce Spec --> 'RETURNS' 'LPAREN' ProcFormals 'RPAREN'
    action 'COMMA' (explicit left 10000):   reduce Spec --> 'RETURNS' 'LPAREN' ProcFormals 'RPAREN'
    action 'LE' (explicit left 10000):   reduce Spec --> 'RETURNS' 'LPAREN' ProcFormals 'RPAREN'
    action 'GE' (explicit left 10000):   reduce Spec --> 'RETURNS' 'LPAREN' ProcFormals 'RPAREN'
    action 'EQEQ' (explicit left 10000):   reduce Spec --> 'RETURNS' 'LPAREN' ProcFormals 'RPAREN'
    action 'NE' (explicit left 10000):   reduce Spec --> 'RETURNS' 'LPAREN' ProcFormals 'RPAREN'
    action 'PLUS' (explicit left 10000):   reduce Spec --> 'RETURNS' 'LPAREN' ProcFormals 'RPAREN'
    action 'MINUS' (explicit left 10000):   reduce Spec --> 'RETURNS' 'LPAREN' ProcFormals 'RPAREN'
    action 'STAR' (explicit left 10000):   reduce Spec --> 'RETURNS' 'LPAREN' ProcFormals 'RPAREN'
    action 'SLASH' (explicit left 10000):   reduce Spec --> 'RETURNS' 'LPAREN' ProcFormals 'RPAREN'
    action 'PERCENT' (explicit left 10000):   reduce Spec --> 'RETURNS' 'LPAREN' ProcFormals 'RPAREN'
    action 'AMPAMP' (explicit left 10000):   reduce Spec --> 'RETURNS' 'LPAREN' ProcFormals 'RPAREN'
    action 'BARBAR' (explicit left 10000):   reduce Spec --> 'RETURNS' 'LPAREN' ProcFormals 'RPAREN'
    action 'COLONEQ' (explicit left 10000):   reduce Spec --> 'RETURNS' 'LPAREN' ProcFormals 'RPAREN'
    action 'INT' (explicit left 10000):   reduce Spec --> 'RETURNS' 'LPAREN' ProcFormals 'RPAREN'
    action 'BOOL' (explicit left 10000):   reduce Spec --> 'RETURNS' 'LPAREN' ProcFormals 'RPAREN'
    action 'IF' (explicit left 10000):   reduce Spec --> 'RETURNS' 'LPAREN' ProcFormals 'RPAREN'
    action 'RETURN' (explicit left 10000):   reduce Spec --> 'RETURNS' 'LPAREN' ProcFormals 'RPAREN'
    action 'VAR' (explicit left 10000):   reduce Spec --> 'RETURNS' 'LPAREN' ProcFormals 'RPAREN'
    action 'LBRACE' (explicit left 10000):   reduce Spec --> 'RETURNS' 'LPAREN' ProcFormals 'RPAREN'
    action 'RBRACE' (explicit left 10000):   reduce Spec --> 'RETURNS' 'LPAREN' ProcFormals 'RPAREN'
    action 'SEMI' (explicit left 10000):   reduce Spec --> 'RETURNS' 'LPAREN' ProcFormals 'RPAREN'
    action 'COLON' (explicit left 10000):   reduce Spec --> 'RETURNS' 'LPAREN' ProcFormals 'RPAREN'
    action 'LPAREN' (explicit left 10000):   reduce Spec --> 'RETURNS' 'LPAREN' ProcFormals 'RPAREN'
    action 'RPAREN' (explicit left 10000):   reduce Spec --> 'RETURNS' 'LPAREN' ProcFormals 'RPAREN'
    action 'LBRACKET' (explicit left 10000):   reduce Spec --> 'RETURNS' 'LPAREN' ProcFormals 'RPAREN'
    action 'RBRACKET' (explicit left 10000):   reduce Spec --> 'RETURNS' 'LPAREN' ProcFormals 'RPAREN'
    action 'LITBOOL' (explicit left 10000):   reduce Spec --> 'RETURNS' 'LPAREN' ProcFormals 'RPAREN'
    action 'LITINT' (explicit left 10000):   reduce Spec --> 'RETURNS' 'LPAREN' ProcFormals 'RPAREN'
    action 'QLID' (explicit left 10000):   reduce Spec --> 'RETURNS' 'LPAREN' ProcFormals 'RPAREN'
    action 'QUID' (explicit left 10000):   reduce Spec --> 'RETURNS' 'LPAREN' ProcFormals 'RPAREN'
    action 'DLID' (explicit left 10000):   reduce Spec --> 'RETURNS' 'LPAREN' ProcFormals 'RPAREN'
    action 'DUID' (explicit left 10000):   reduce Spec --> 'RETURNS' 'LPAREN' ProcFormals 'RPAREN'
    action 'LID' (explicit left 10000):   reduce Spec --> 'RETURNS' 'LPAREN' ProcFormals 'RPAREN'
    action 'UID' (explicit left 10000):   reduce Spec --> 'RETURNS' 'LPAREN' ProcFormals 'RPAREN'
    action 'error' (explicit left 10000):   reduce Spec --> 'RETURNS' 'LPAREN' ProcFormals 'RPAREN'
    action '#' (explicit left 10000):   reduce Spec --> 'RETURNS' 'LPAREN' ProcFormals 'RPAREN'
    action '$$' (explicit left 10000):   reduce Spec --> 'RETURNS' 'LPAREN' ProcFormals 'RPAREN'

  immediate action:   reduce Spec --> 'RETURNS' 'LPAREN' ProcFormals 'RPAREN'
 gotos:

state 298:
  items:
    Specs -> Spec . Specs

  actions:
    action 'EOF' (noprec):   reduce Specs --> 
    action 'EAX' (noprec):   reduce Specs --> 
    action 'EBX' (noprec):   reduce Specs --> 
    action 'ECX' (noprec):   reduce Specs --> 
    action 'EDX' (noprec):   reduce Specs --> 
    action 'ESI' (noprec):   reduce Specs --> 
    action 'EDI' (noprec):   reduce Specs --> 
    action 'EBP' (noprec):   reduce Specs --> 
    action 'ESP' (noprec):   reduce Specs --> 
    action 'MODIFIES' (noprec):   shift 291
    action 'INVARIANT' (noprec):   reduce Specs --> 
    action 'ASSERT' (noprec):   reduce Specs --> 
    action 'HAVOC' (noprec):   reduce Specs --> 
    action 'GOTO' (noprec):   reduce Specs --> 
    action 'CALL' (noprec):   reduce Specs --> 
    action 'CCALL' (noprec):   reduce Specs --> 
    action 'RET' (noprec):   reduce Specs --> 
    action 'IRET' (noprec):   reduce Specs --> 
    action 'GO' (noprec):   reduce Specs --> 
    action 'FORALL' (noprec):   reduce Specs --> 
    action 'EXISTS' (noprec):   reduce Specs --> 
    action 'OLD' (noprec):   reduce Specs --> 
    action 'COLONCOLON' (noprec):   reduce Specs --> 
    action 'EQEQGT' (noprec):   reduce Specs --> 
    action 'LTEQEQGT' (noprec):   reduce Specs --> 
    action 'TYPE' (noprec):   reduce Specs --> 
    action 'CONST' (noprec):   reduce Specs --> 
    action 'FUNCTION' (noprec):   reduce Specs --> 
    action 'RETURNS' (noprec):   shift 294
    action 'AXIOM' (noprec):   reduce Specs --> 
    action 'PROCEDURE' (noprec):   reduce Specs --> 
    action 'IMPLEMENTATION' (noprec):   reduce Specs --> 
    action 'REQUIRES' (noprec):   shift 287
    action 'ENSURES' (noprec):   shift 289
    action 'LT' (noprec):   reduce Specs --> 
    action 'GT' (noprec):   reduce Specs --> 
    action 'EQ' (noprec):   reduce Specs --> 
    action 'BANG' (noprec):   reduce Specs --> 
    action 'COMMA' (noprec):   reduce Specs --> 
    action 'LE' (noprec):   reduce Specs --> 
    action 'GE' (noprec):   reduce Specs --> 
    action 'EQEQ' (noprec):   reduce Specs --> 
    action 'NE' (noprec):   reduce Specs --> 
    action 'PLUS' (noprec):   reduce Specs --> 
    action 'MINUS' (noprec):   reduce Specs --> 
    action 'STAR' (noprec):   reduce Specs --> 
    action 'SLASH' (noprec):   reduce Specs --> 
    action 'PERCENT' (noprec):   reduce Specs --> 
    action 'AMPAMP' (noprec):   reduce Specs --> 
    action 'BARBAR' (noprec):   reduce Specs --> 
    action 'COLONEQ' (noprec):   reduce Specs --> 
    action 'INT' (noprec):   reduce Specs --> 
    action 'BOOL' (noprec):   reduce Specs --> 
    action 'IF' (noprec):   reduce Specs --> 
    action 'RETURN' (noprec):   reduce Specs --> 
    action 'VAR' (noprec):   reduce Specs --> 
    action 'LBRACE' (noprec):   reduce Specs --> 
    action 'RBRACE' (noprec):   reduce Specs --> 
    action 'SEMI' (noprec):   reduce Specs --> 
    action 'COLON' (noprec):   reduce Specs --> 
    action 'LPAREN' (noprec):   reduce Specs --> 
    action 'RPAREN' (noprec):   reduce Specs --> 
    action 'LBRACKET' (noprec):   reduce Specs --> 
    action 'RBRACKET' (noprec):   reduce Specs --> 
    action 'LITBOOL' (noprec):   reduce Specs --> 
    action 'LITINT' (noprec):   reduce Specs --> 
    action 'QLID' (noprec):   reduce Specs --> 
    action 'QUID' (noprec):   reduce Specs --> 
    action 'DLID' (noprec):   reduce Specs --> 
    action 'DUID' (noprec):   reduce Specs --> 
    action 'LID' (noprec):   reduce Specs --> 
    action 'UID' (noprec):   reduce Specs --> 
    action 'error' (noprec):   reduce Specs --> 
    action '#' (noprec):   reduce Specs --> 
    action '$$' (noprec):   reduce Specs --> 

  immediate action: <none>
 gotos:
    goto Spec: 298
    goto Specs: 299

state 299:
  items:
    Specs -> Spec Specs . 

  actions:
    action 'EOF' (noprec):   reduce Specs --> Spec Specs
    action 'EAX' (noprec):   reduce Specs --> Spec Specs
    action 'EBX' (noprec):   reduce Specs --> Spec Specs
    action 'ECX' (noprec):   reduce Specs --> Spec Specs
    action 'EDX' (noprec):   reduce Specs --> Spec Specs
    action 'ESI' (noprec):   reduce Specs --> Spec Specs
    action 'EDI' (noprec):   reduce Specs --> Spec Specs
    action 'EBP' (noprec):   reduce Specs --> Spec Specs
    action 'ESP' (noprec):   reduce Specs --> Spec Specs
    action 'MODIFIES' (noprec):   reduce Specs --> Spec Specs
    action 'INVARIANT' (noprec):   reduce Specs --> Spec Specs
    action 'ASSERT' (noprec):   reduce Specs --> Spec Specs
    action 'HAVOC' (noprec):   reduce Specs --> Spec Specs
    action 'GOTO' (noprec):   reduce Specs --> Spec Specs
    action 'CALL' (noprec):   reduce Specs --> Spec Specs
    action 'CCALL' (noprec):   reduce Specs --> Spec Specs
    action 'RET' (noprec):   reduce Specs --> Spec Specs
    action 'IRET' (noprec):   reduce Specs --> Spec Specs
    action 'GO' (noprec):   reduce Specs --> Spec Specs
    action 'FORALL' (noprec):   reduce Specs --> Spec Specs
    action 'EXISTS' (noprec):   reduce Specs --> Spec Specs
    action 'OLD' (noprec):   reduce Specs --> Spec Specs
    action 'COLONCOLON' (noprec):   reduce Specs --> Spec Specs
    action 'EQEQGT' (noprec):   reduce Specs --> Spec Specs
    action 'LTEQEQGT' (noprec):   reduce Specs --> Spec Specs
    action 'TYPE' (noprec):   reduce Specs --> Spec Specs
    action 'CONST' (noprec):   reduce Specs --> Spec Specs
    action 'FUNCTION' (noprec):   reduce Specs --> Spec Specs
    action 'RETURNS' (noprec):   reduce Specs --> Spec Specs
    action 'AXIOM' (noprec):   reduce Specs --> Spec Specs
    action 'PROCEDURE' (noprec):   reduce Specs --> Spec Specs
    action 'IMPLEMENTATION' (noprec):   reduce Specs --> Spec Specs
    action 'REQUIRES' (noprec):   reduce Specs --> Spec Specs
    action 'ENSURES' (noprec):   reduce Specs --> Spec Specs
    action 'LT' (noprec):   reduce Specs --> Spec Specs
    action 'GT' (noprec):   reduce Specs --> Spec Specs
    action 'EQ' (noprec):   reduce Specs --> Spec Specs
    action 'BANG' (noprec):   reduce Specs --> Spec Specs
    action 'COMMA' (noprec):   reduce Specs --> Spec Specs
    action 'LE' (noprec):   reduce Specs --> Spec Specs
    action 'GE' (noprec):   reduce Specs --> Spec Specs
    action 'EQEQ' (noprec):   reduce Specs --> Spec Specs
    action 'NE' (noprec):   reduce Specs --> Spec Specs
    action 'PLUS' (noprec):   reduce Specs --> Spec Specs
    action 'MINUS' (noprec):   reduce Specs --> Spec Specs
    action 'STAR' (noprec):   reduce Specs --> Spec Specs
    action 'SLASH' (noprec):   reduce Specs --> Spec Specs
    action 'PERCENT' (noprec):   reduce Specs --> Spec Specs
    action 'AMPAMP' (noprec):   reduce Specs --> Spec Specs
    action 'BARBAR' (noprec):   reduce Specs --> Spec Specs
    action 'COLONEQ' (noprec):   reduce Specs --> Spec Specs
    action 'INT' (noprec):   reduce Specs --> Spec Specs
    action 'BOOL' (noprec):   reduce Specs --> Spec Specs
    action 'IF' (noprec):   reduce Specs --> Spec Specs
    action 'RETURN' (noprec):   reduce Specs --> Spec Specs
    action 'VAR' (noprec):   reduce Specs --> Spec Specs
    action 'LBRACE' (noprec):   reduce Specs --> Spec Specs
    action 'RBRACE' (noprec):   reduce Specs --> Spec Specs
    action 'SEMI' (noprec):   reduce Specs --> Spec Specs
    action 'COLON' (noprec):   reduce Specs --> Spec Specs
    action 'LPAREN' (noprec):   reduce Specs --> Spec Specs
    action 'RPAREN' (noprec):   reduce Specs --> Spec Specs
    action 'LBRACKET' (noprec):   reduce Specs --> Spec Specs
    action 'RBRACKET' (noprec):   reduce Specs --> Spec Specs
    action 'LITBOOL' (noprec):   reduce Specs --> Spec Specs
    action 'LITINT' (noprec):   reduce Specs --> Spec Specs
    action 'QLID' (noprec):   reduce Specs --> Spec Specs
    action 'QUID' (noprec):   reduce Specs --> Spec Specs
    action 'DLID' (noprec):   reduce Specs --> Spec Specs
    action 'DUID' (noprec):   reduce Specs --> Spec Specs
    action 'LID' (noprec):   reduce Specs --> Spec Specs
    action 'UID' (noprec):   reduce Specs --> Spec Specs
    action 'error' (noprec):   reduce Specs --> Spec Specs
    action '#' (noprec):   reduce Specs --> Spec Specs
    action '$$' (noprec):   reduce Specs --> Spec Specs

  immediate action:   reduce Specs --> Spec Specs
 gotos:

state 300:
  items:
    AnyIdExp -> AnyId . 

  actions:
    action 'EOF' (noprec):   reduce AnyIdExp --> AnyId
    action 'EAX' (noprec):   reduce AnyIdExp --> AnyId
    action 'EBX' (noprec):   reduce AnyIdExp --> AnyId
    action 'ECX' (noprec):   reduce AnyIdExp --> AnyId
    action 'EDX' (noprec):   reduce AnyIdExp --> AnyId
    action 'ESI' (noprec):   reduce AnyIdExp --> AnyId
    action 'EDI' (noprec):   reduce AnyIdExp --> AnyId
    action 'EBP' (noprec):   reduce AnyIdExp --> AnyId
    action 'ESP' (noprec):   reduce AnyIdExp --> AnyId
    action 'MODIFIES' (noprec):   reduce AnyIdExp --> AnyId
    action 'INVARIANT' (noprec):   reduce AnyIdExp --> AnyId
    action 'ASSERT' (noprec):   reduce AnyIdExp --> AnyId
    action 'HAVOC' (noprec):   reduce AnyIdExp --> AnyId
    action 'GOTO' (noprec):   reduce AnyIdExp --> AnyId
    action 'CALL' (noprec):   reduce AnyIdExp --> AnyId
    action 'CCALL' (noprec):   reduce AnyIdExp --> AnyId
    action 'RET' (noprec):   reduce AnyIdExp --> AnyId
    action 'IRET' (noprec):   reduce AnyIdExp --> AnyId
    action 'GO' (noprec):   reduce AnyIdExp --> AnyId
    action 'FORALL' (noprec):   reduce AnyIdExp --> AnyId
    action 'EXISTS' (noprec):   reduce AnyIdExp --> AnyId
    action 'OLD' (noprec):   reduce AnyIdExp --> AnyId
    action 'COLONCOLON' (noprec):   reduce AnyIdExp --> AnyId
    action 'EQEQGT' (noprec):   reduce AnyIdExp --> AnyId
    action 'LTEQEQGT' (noprec):   reduce AnyIdExp --> AnyId
    action 'TYPE' (noprec):   reduce AnyIdExp --> AnyId
    action 'CONST' (noprec):   reduce AnyIdExp --> AnyId
    action 'FUNCTION' (noprec):   reduce AnyIdExp --> AnyId
    action 'RETURNS' (noprec):   reduce AnyIdExp --> AnyId
    action 'AXIOM' (noprec):   reduce AnyIdExp --> AnyId
    action 'PROCEDURE' (noprec):   reduce AnyIdExp --> AnyId
    action 'IMPLEMENTATION' (noprec):   reduce AnyIdExp --> AnyId
    action 'REQUIRES' (noprec):   reduce AnyIdExp --> AnyId
    action 'ENSURES' (noprec):   reduce AnyIdExp --> AnyId
    action 'LT' (noprec):   reduce AnyIdExp --> AnyId
    action 'GT' (noprec):   reduce AnyIdExp --> AnyId
    action 'EQ' (noprec):   reduce AnyIdExp --> AnyId
    action 'BANG' (noprec):   reduce AnyIdExp --> AnyId
    action 'COMMA' (noprec):   reduce AnyIdExp --> AnyId
    action 'LE' (noprec):   reduce AnyIdExp --> AnyId
    action 'GE' (noprec):   reduce AnyIdExp --> AnyId
    action 'EQEQ' (noprec):   reduce AnyIdExp --> AnyId
    action 'NE' (noprec):   reduce AnyIdExp --> AnyId
    action 'PLUS' (noprec):   reduce AnyIdExp --> AnyId
    action 'MINUS' (noprec):   reduce AnyIdExp --> AnyId
    action 'STAR' (noprec):   reduce AnyIdExp --> AnyId
    action 'SLASH' (noprec):   reduce AnyIdExp --> AnyId
    action 'PERCENT' (noprec):   reduce AnyIdExp --> AnyId
    action 'AMPAMP' (noprec):   reduce AnyIdExp --> AnyId
    action 'BARBAR' (noprec):   reduce AnyIdExp --> AnyId
    action 'COLONEQ' (noprec):   reduce AnyIdExp --> AnyId
    action 'INT' (noprec):   reduce AnyIdExp --> AnyId
    action 'BOOL' (noprec):   reduce AnyIdExp --> AnyId
    action 'IF' (noprec):   reduce AnyIdExp --> AnyId
    action 'RETURN' (noprec):   reduce AnyIdExp --> AnyId
    action 'VAR' (noprec):   reduce AnyIdExp --> AnyId
    action 'LBRACE' (noprec):   reduce AnyIdExp --> AnyId
    action 'RBRACE' (noprec):   reduce AnyIdExp --> AnyId
    action 'SEMI' (noprec):   reduce AnyIdExp --> AnyId
    action 'COLON' (noprec):   reduce AnyIdExp --> AnyId
    action 'LPAREN' (noprec):   reduce AnyIdExp --> AnyId
    action 'RPAREN' (noprec):   reduce AnyIdExp --> AnyId
    action 'LBRACKET' (noprec):   reduce AnyIdExp --> AnyId
    action 'RBRACKET' (noprec):   reduce AnyIdExp --> AnyId
    action 'LITBOOL' (noprec):   reduce AnyIdExp --> AnyId
    action 'LITINT' (noprec):   reduce AnyIdExp --> AnyId
    action 'QLID' (noprec):   reduce AnyIdExp --> AnyId
    action 'QUID' (noprec):   reduce AnyIdExp --> AnyId
    action 'DLID' (noprec):   reduce AnyIdExp --> AnyId
    action 'DUID' (noprec):   reduce AnyIdExp --> AnyId
    action 'LID' (noprec):   reduce AnyIdExp --> AnyId
    action 'UID' (noprec):   reduce AnyIdExp --> AnyId
    action 'error' (noprec):   reduce AnyIdExp --> AnyId
    action '#' (noprec):   reduce AnyIdExp --> AnyId
    action '$$' (noprec):   reduce AnyIdExp --> AnyId

  immediate action:   reduce AnyIdExp --> AnyId
 gotos:

state 301:
  items:
    AnyIdExp -> 'LPAREN' . AnyIdExp 'RPAREN'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (explicit left 10000):   shift 301
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   shift 145
    action 'QUID' (noprec):   shift 144
    action 'DLID' (noprec):   shift 143
    action 'DUID' (noprec):   shift 142
    action 'LID' (noprec):   shift 4
    action 'UID' (noprec):   shift 5
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto ID: 141
    goto AnyId: 300
    goto AnyIdExp: 302

state 302:
  items:
    AnyIdExp -> 'LPAREN' AnyIdExp . 'RPAREN'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (explicit left 10000):   shift 303
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 303:
  items:
    AnyIdExp -> 'LPAREN' AnyIdExp 'RPAREN' . 

  actions:
    action 'EOF' (explicit left 10000):   reduce AnyIdExp --> 'LPAREN' AnyIdExp 'RPAREN'
    action 'EAX' (explicit left 10000):   reduce AnyIdExp --> 'LPAREN' AnyIdExp 'RPAREN'
    action 'EBX' (explicit left 10000):   reduce AnyIdExp --> 'LPAREN' AnyIdExp 'RPAREN'
    action 'ECX' (explicit left 10000):   reduce AnyIdExp --> 'LPAREN' AnyIdExp 'RPAREN'
    action 'EDX' (explicit left 10000):   reduce AnyIdExp --> 'LPAREN' AnyIdExp 'RPAREN'
    action 'ESI' (explicit left 10000):   reduce AnyIdExp --> 'LPAREN' AnyIdExp 'RPAREN'
    action 'EDI' (explicit left 10000):   reduce AnyIdExp --> 'LPAREN' AnyIdExp 'RPAREN'
    action 'EBP' (explicit left 10000):   reduce AnyIdExp --> 'LPAREN' AnyIdExp 'RPAREN'
    action 'ESP' (explicit left 10000):   reduce AnyIdExp --> 'LPAREN' AnyIdExp 'RPAREN'
    action 'MODIFIES' (explicit left 10000):   reduce AnyIdExp --> 'LPAREN' AnyIdExp 'RPAREN'
    action 'INVARIANT' (explicit left 10000):   reduce AnyIdExp --> 'LPAREN' AnyIdExp 'RPAREN'
    action 'ASSERT' (explicit left 10000):   reduce AnyIdExp --> 'LPAREN' AnyIdExp 'RPAREN'
    action 'HAVOC' (explicit left 10000):   reduce AnyIdExp --> 'LPAREN' AnyIdExp 'RPAREN'
    action 'GOTO' (explicit left 10000):   reduce AnyIdExp --> 'LPAREN' AnyIdExp 'RPAREN'
    action 'CALL' (explicit left 10000):   reduce AnyIdExp --> 'LPAREN' AnyIdExp 'RPAREN'
    action 'CCALL' (explicit left 10000):   reduce AnyIdExp --> 'LPAREN' AnyIdExp 'RPAREN'
    action 'RET' (explicit left 10000):   reduce AnyIdExp --> 'LPAREN' AnyIdExp 'RPAREN'
    action 'IRET' (explicit left 10000):   reduce AnyIdExp --> 'LPAREN' AnyIdExp 'RPAREN'
    action 'GO' (explicit left 10000):   reduce AnyIdExp --> 'LPAREN' AnyIdExp 'RPAREN'
    action 'FORALL' (explicit left 10000):   reduce AnyIdExp --> 'LPAREN' AnyIdExp 'RPAREN'
    action 'EXISTS' (explicit left 10000):   reduce AnyIdExp --> 'LPAREN' AnyIdExp 'RPAREN'
    action 'OLD' (explicit left 10000):   reduce AnyIdExp --> 'LPAREN' AnyIdExp 'RPAREN'
    action 'COLONCOLON' (explicit left 10000):   reduce AnyIdExp --> 'LPAREN' AnyIdExp 'RPAREN'
    action 'EQEQGT' (explicit left 10000):   reduce AnyIdExp --> 'LPAREN' AnyIdExp 'RPAREN'
    action 'LTEQEQGT' (explicit left 10000):   reduce AnyIdExp --> 'LPAREN' AnyIdExp 'RPAREN'
    action 'TYPE' (explicit left 10000):   reduce AnyIdExp --> 'LPAREN' AnyIdExp 'RPAREN'
    action 'CONST' (explicit left 10000):   reduce AnyIdExp --> 'LPAREN' AnyIdExp 'RPAREN'
    action 'FUNCTION' (explicit left 10000):   reduce AnyIdExp --> 'LPAREN' AnyIdExp 'RPAREN'
    action 'RETURNS' (explicit left 10000):   reduce AnyIdExp --> 'LPAREN' AnyIdExp 'RPAREN'
    action 'AXIOM' (explicit left 10000):   reduce AnyIdExp --> 'LPAREN' AnyIdExp 'RPAREN'
    action 'PROCEDURE' (explicit left 10000):   reduce AnyIdExp --> 'LPAREN' AnyIdExp 'RPAREN'
    action 'IMPLEMENTATION' (explicit left 10000):   reduce AnyIdExp --> 'LPAREN' AnyIdExp 'RPAREN'
    action 'REQUIRES' (explicit left 10000):   reduce AnyIdExp --> 'LPAREN' AnyIdExp 'RPAREN'
    action 'ENSURES' (explicit left 10000):   reduce AnyIdExp --> 'LPAREN' AnyIdExp 'RPAREN'
    action 'LT' (explicit left 10000):   reduce AnyIdExp --> 'LPAREN' AnyIdExp 'RPAREN'
    action 'GT' (explicit left 10000):   reduce AnyIdExp --> 'LPAREN' AnyIdExp 'RPAREN'
    action 'EQ' (explicit left 10000):   reduce AnyIdExp --> 'LPAREN' AnyIdExp 'RPAREN'
    action 'BANG' (explicit left 10000):   reduce AnyIdExp --> 'LPAREN' AnyIdExp 'RPAREN'
    action 'COMMA' (explicit left 10000):   reduce AnyIdExp --> 'LPAREN' AnyIdExp 'RPAREN'
    action 'LE' (explicit left 10000):   reduce AnyIdExp --> 'LPAREN' AnyIdExp 'RPAREN'
    action 'GE' (explicit left 10000):   reduce AnyIdExp --> 'LPAREN' AnyIdExp 'RPAREN'
    action 'EQEQ' (explicit left 10000):   reduce AnyIdExp --> 'LPAREN' AnyIdExp 'RPAREN'
    action 'NE' (explicit left 10000):   reduce AnyIdExp --> 'LPAREN' AnyIdExp 'RPAREN'
    action 'PLUS' (explicit left 10000):   reduce AnyIdExp --> 'LPAREN' AnyIdExp 'RPAREN'
    action 'MINUS' (explicit left 10000):   reduce AnyIdExp --> 'LPAREN' AnyIdExp 'RPAREN'
    action 'STAR' (explicit left 10000):   reduce AnyIdExp --> 'LPAREN' AnyIdExp 'RPAREN'
    action 'SLASH' (explicit left 10000):   reduce AnyIdExp --> 'LPAREN' AnyIdExp 'RPAREN'
    action 'PERCENT' (explicit left 10000):   reduce AnyIdExp --> 'LPAREN' AnyIdExp 'RPAREN'
    action 'AMPAMP' (explicit left 10000):   reduce AnyIdExp --> 'LPAREN' AnyIdExp 'RPAREN'
    action 'BARBAR' (explicit left 10000):   reduce AnyIdExp --> 'LPAREN' AnyIdExp 'RPAREN'
    action 'COLONEQ' (explicit left 10000):   reduce AnyIdExp --> 'LPAREN' AnyIdExp 'RPAREN'
    action 'INT' (explicit left 10000):   reduce AnyIdExp --> 'LPAREN' AnyIdExp 'RPAREN'
    action 'BOOL' (explicit left 10000):   reduce AnyIdExp --> 'LPAREN' AnyIdExp 'RPAREN'
    action 'IF' (explicit left 10000):   reduce AnyIdExp --> 'LPAREN' AnyIdExp 'RPAREN'
    action 'RETURN' (explicit left 10000):   reduce AnyIdExp --> 'LPAREN' AnyIdExp 'RPAREN'
    action 'VAR' (explicit left 10000):   reduce AnyIdExp --> 'LPAREN' AnyIdExp 'RPAREN'
    action 'LBRACE' (explicit left 10000):   reduce AnyIdExp --> 'LPAREN' AnyIdExp 'RPAREN'
    action 'RBRACE' (explicit left 10000):   reduce AnyIdExp --> 'LPAREN' AnyIdExp 'RPAREN'
    action 'SEMI' (explicit left 10000):   reduce AnyIdExp --> 'LPAREN' AnyIdExp 'RPAREN'
    action 'COLON' (explicit left 10000):   reduce AnyIdExp --> 'LPAREN' AnyIdExp 'RPAREN'
    action 'LPAREN' (explicit left 10000):   reduce AnyIdExp --> 'LPAREN' AnyIdExp 'RPAREN'
    action 'RPAREN' (explicit left 10000):   reduce AnyIdExp --> 'LPAREN' AnyIdExp 'RPAREN'
    action 'LBRACKET' (explicit left 10000):   reduce AnyIdExp --> 'LPAREN' AnyIdExp 'RPAREN'
    action 'RBRACKET' (explicit left 10000):   reduce AnyIdExp --> 'LPAREN' AnyIdExp 'RPAREN'
    action 'LITBOOL' (explicit left 10000):   reduce AnyIdExp --> 'LPAREN' AnyIdExp 'RPAREN'
    action 'LITINT' (explicit left 10000):   reduce AnyIdExp --> 'LPAREN' AnyIdExp 'RPAREN'
    action 'QLID' (explicit left 10000):   reduce AnyIdExp --> 'LPAREN' AnyIdExp 'RPAREN'
    action 'QUID' (explicit left 10000):   reduce AnyIdExp --> 'LPAREN' AnyIdExp 'RPAREN'
    action 'DLID' (explicit left 10000):   reduce AnyIdExp --> 'LPAREN' AnyIdExp 'RPAREN'
    action 'DUID' (explicit left 10000):   reduce AnyIdExp --> 'LPAREN' AnyIdExp 'RPAREN'
    action 'LID' (explicit left 10000):   reduce AnyIdExp --> 'LPAREN' AnyIdExp 'RPAREN'
    action 'UID' (explicit left 10000):   reduce AnyIdExp --> 'LPAREN' AnyIdExp 'RPAREN'
    action 'error' (explicit left 10000):   reduce AnyIdExp --> 'LPAREN' AnyIdExp 'RPAREN'
    action '#' (explicit left 10000):   reduce AnyIdExp --> 'LPAREN' AnyIdExp 'RPAREN'
    action '$$' (explicit left 10000):   reduce AnyIdExp --> 'LPAREN' AnyIdExp 'RPAREN'

  immediate action:   reduce AnyIdExp --> 'LPAREN' AnyIdExp 'RPAREN'
 gotos:

state 304:
  items:
    AnyIds -> AnyIdExp . 
    AnyIds -> AnyIdExp . 'COMMA' AnyIds

  actions:
    action 'EOF' (noprec):   reduce AnyIds --> AnyIdExp
    action 'EAX' (noprec):   reduce AnyIds --> AnyIdExp
    action 'EBX' (noprec):   reduce AnyIds --> AnyIdExp
    action 'ECX' (noprec):   reduce AnyIds --> AnyIdExp
    action 'EDX' (noprec):   reduce AnyIds --> AnyIdExp
    action 'ESI' (noprec):   reduce AnyIds --> AnyIdExp
    action 'EDI' (noprec):   reduce AnyIds --> AnyIdExp
    action 'EBP' (noprec):   reduce AnyIds --> AnyIdExp
    action 'ESP' (noprec):   reduce AnyIds --> AnyIdExp
    action 'MODIFIES' (noprec):   reduce AnyIds --> AnyIdExp
    action 'INVARIANT' (noprec):   reduce AnyIds --> AnyIdExp
    action 'ASSERT' (noprec):   reduce AnyIds --> AnyIdExp
    action 'HAVOC' (noprec):   reduce AnyIds --> AnyIdExp
    action 'GOTO' (noprec):   reduce AnyIds --> AnyIdExp
    action 'CALL' (noprec):   reduce AnyIds --> AnyIdExp
    action 'CCALL' (noprec):   reduce AnyIds --> AnyIdExp
    action 'RET' (noprec):   reduce AnyIds --> AnyIdExp
    action 'IRET' (noprec):   reduce AnyIds --> AnyIdExp
    action 'GO' (noprec):   reduce AnyIds --> AnyIdExp
    action 'FORALL' (noprec):   reduce AnyIds --> AnyIdExp
    action 'EXISTS' (noprec):   reduce AnyIds --> AnyIdExp
    action 'OLD' (noprec):   reduce AnyIds --> AnyIdExp
    action 'COLONCOLON' (noprec):   reduce AnyIds --> AnyIdExp
    action 'EQEQGT' (noprec):   reduce AnyIds --> AnyIdExp
    action 'LTEQEQGT' (noprec):   reduce AnyIds --> AnyIdExp
    action 'TYPE' (noprec):   reduce AnyIds --> AnyIdExp
    action 'CONST' (noprec):   reduce AnyIds --> AnyIdExp
    action 'FUNCTION' (noprec):   reduce AnyIds --> AnyIdExp
    action 'RETURNS' (noprec):   reduce AnyIds --> AnyIdExp
    action 'AXIOM' (noprec):   reduce AnyIds --> AnyIdExp
    action 'PROCEDURE' (noprec):   reduce AnyIds --> AnyIdExp
    action 'IMPLEMENTATION' (noprec):   reduce AnyIds --> AnyIdExp
    action 'REQUIRES' (noprec):   reduce AnyIds --> AnyIdExp
    action 'ENSURES' (noprec):   reduce AnyIds --> AnyIdExp
    action 'LT' (noprec):   reduce AnyIds --> AnyIdExp
    action 'GT' (noprec):   reduce AnyIds --> AnyIdExp
    action 'EQ' (noprec):   reduce AnyIds --> AnyIdExp
    action 'BANG' (noprec):   reduce AnyIds --> AnyIdExp
    action 'COMMA' (noprec):   shift 305
    action 'LE' (noprec):   reduce AnyIds --> AnyIdExp
    action 'GE' (noprec):   reduce AnyIds --> AnyIdExp
    action 'EQEQ' (noprec):   reduce AnyIds --> AnyIdExp
    action 'NE' (noprec):   reduce AnyIds --> AnyIdExp
    action 'PLUS' (noprec):   reduce AnyIds --> AnyIdExp
    action 'MINUS' (noprec):   reduce AnyIds --> AnyIdExp
    action 'STAR' (noprec):   reduce AnyIds --> AnyIdExp
    action 'SLASH' (noprec):   reduce AnyIds --> AnyIdExp
    action 'PERCENT' (noprec):   reduce AnyIds --> AnyIdExp
    action 'AMPAMP' (noprec):   reduce AnyIds --> AnyIdExp
    action 'BARBAR' (noprec):   reduce AnyIds --> AnyIdExp
    action 'COLONEQ' (noprec):   reduce AnyIds --> AnyIdExp
    action 'INT' (noprec):   reduce AnyIds --> AnyIdExp
    action 'BOOL' (noprec):   reduce AnyIds --> AnyIdExp
    action 'IF' (noprec):   reduce AnyIds --> AnyIdExp
    action 'RETURN' (noprec):   reduce AnyIds --> AnyIdExp
    action 'VAR' (noprec):   reduce AnyIds --> AnyIdExp
    action 'LBRACE' (noprec):   reduce AnyIds --> AnyIdExp
    action 'RBRACE' (noprec):   reduce AnyIds --> AnyIdExp
    action 'SEMI' (noprec):   reduce AnyIds --> AnyIdExp
    action 'COLON' (noprec):   reduce AnyIds --> AnyIdExp
    action 'LPAREN' (noprec):   reduce AnyIds --> AnyIdExp
    action 'RPAREN' (noprec):   reduce AnyIds --> AnyIdExp
    action 'LBRACKET' (noprec):   reduce AnyIds --> AnyIdExp
    action 'RBRACKET' (noprec):   reduce AnyIds --> AnyIdExp
    action 'LITBOOL' (noprec):   reduce AnyIds --> AnyIdExp
    action 'LITINT' (noprec):   reduce AnyIds --> AnyIdExp
    action 'QLID' (noprec):   reduce AnyIds --> AnyIdExp
    action 'QUID' (noprec):   reduce AnyIds --> AnyIdExp
    action 'DLID' (noprec):   reduce AnyIds --> AnyIdExp
    action 'DUID' (noprec):   reduce AnyIds --> AnyIdExp
    action 'LID' (noprec):   reduce AnyIds --> AnyIdExp
    action 'UID' (noprec):   reduce AnyIds --> AnyIdExp
    action 'error' (noprec):   reduce AnyIds --> AnyIdExp
    action '#' (noprec):   reduce AnyIds --> AnyIdExp
    action '$$' (noprec):   reduce AnyIds --> AnyIdExp

  immediate action: <none>
 gotos:

state 305:
  items:
    AnyIds -> AnyIdExp 'COMMA' . AnyIds

  actions:
    action 'EOF' (noprec):   reduce AnyIds --> 
    action 'EAX' (noprec):   reduce AnyIds --> 
    action 'EBX' (noprec):   reduce AnyIds --> 
    action 'ECX' (noprec):   reduce AnyIds --> 
    action 'EDX' (noprec):   reduce AnyIds --> 
    action 'ESI' (noprec):   reduce AnyIds --> 
    action 'EDI' (noprec):   reduce AnyIds --> 
    action 'EBP' (noprec):   reduce AnyIds --> 
    action 'ESP' (noprec):   reduce AnyIds --> 
    action 'MODIFIES' (noprec):   reduce AnyIds --> 
    action 'INVARIANT' (noprec):   reduce AnyIds --> 
    action 'ASSERT' (noprec):   reduce AnyIds --> 
    action 'HAVOC' (noprec):   reduce AnyIds --> 
    action 'GOTO' (noprec):   reduce AnyIds --> 
    action 'CALL' (noprec):   reduce AnyIds --> 
    action 'CCALL' (noprec):   reduce AnyIds --> 
    action 'RET' (noprec):   reduce AnyIds --> 
    action 'IRET' (noprec):   reduce AnyIds --> 
    action 'GO' (noprec):   reduce AnyIds --> 
    action 'FORALL' (noprec):   reduce AnyIds --> 
    action 'EXISTS' (noprec):   reduce AnyIds --> 
    action 'OLD' (noprec):   reduce AnyIds --> 
    action 'COLONCOLON' (noprec):   reduce AnyIds --> 
    action 'EQEQGT' (noprec):   reduce AnyIds --> 
    action 'LTEQEQGT' (noprec):   reduce AnyIds --> 
    action 'TYPE' (noprec):   reduce AnyIds --> 
    action 'CONST' (noprec):   reduce AnyIds --> 
    action 'FUNCTION' (noprec):   reduce AnyIds --> 
    action 'RETURNS' (noprec):   reduce AnyIds --> 
    action 'AXIOM' (noprec):   reduce AnyIds --> 
    action 'PROCEDURE' (noprec):   reduce AnyIds --> 
    action 'IMPLEMENTATION' (noprec):   reduce AnyIds --> 
    action 'REQUIRES' (noprec):   reduce AnyIds --> 
    action 'ENSURES' (noprec):   reduce AnyIds --> 
    action 'LT' (noprec):   reduce AnyIds --> 
    action 'GT' (noprec):   reduce AnyIds --> 
    action 'EQ' (noprec):   reduce AnyIds --> 
    action 'BANG' (noprec):   reduce AnyIds --> 
    action 'COMMA' (noprec):   reduce AnyIds --> 
    action 'LE' (noprec):   reduce AnyIds --> 
    action 'GE' (noprec):   reduce AnyIds --> 
    action 'EQEQ' (noprec):   reduce AnyIds --> 
    action 'NE' (noprec):   reduce AnyIds --> 
    action 'PLUS' (noprec):   reduce AnyIds --> 
    action 'MINUS' (noprec):   reduce AnyIds --> 
    action 'STAR' (noprec):   reduce AnyIds --> 
    action 'SLASH' (noprec):   reduce AnyIds --> 
    action 'PERCENT' (noprec):   reduce AnyIds --> 
    action 'AMPAMP' (noprec):   reduce AnyIds --> 
    action 'BARBAR' (noprec):   reduce AnyIds --> 
    action 'COLONEQ' (noprec):   reduce AnyIds --> 
    action 'INT' (noprec):   reduce AnyIds --> 
    action 'BOOL' (noprec):   reduce AnyIds --> 
    action 'IF' (noprec):   reduce AnyIds --> 
    action 'RETURN' (noprec):   reduce AnyIds --> 
    action 'VAR' (noprec):   reduce AnyIds --> 
    action 'LBRACE' (noprec):   reduce AnyIds --> 
    action 'RBRACE' (noprec):   reduce AnyIds --> 
    action 'SEMI' (noprec):   reduce AnyIds --> 
    action 'COLON' (noprec):   reduce AnyIds --> 
    action 'LPAREN' (explicit left 10000):   shift 301
    action 'RPAREN' (noprec):   reduce AnyIds --> 
    action 'LBRACKET' (noprec):   reduce AnyIds --> 
    action 'RBRACKET' (noprec):   reduce AnyIds --> 
    action 'LITBOOL' (noprec):   reduce AnyIds --> 
    action 'LITINT' (noprec):   reduce AnyIds --> 
    action 'QLID' (noprec):   shift 145
    action 'QUID' (noprec):   shift 144
    action 'DLID' (noprec):   shift 143
    action 'DUID' (noprec):   shift 142
    action 'LID' (noprec):   shift 4
    action 'UID' (noprec):   shift 5
    action 'error' (noprec):   reduce AnyIds --> 
    action '#' (noprec):   reduce AnyIds --> 
    action '$$' (noprec):   reduce AnyIds --> 

  immediate action: <none>
 gotos:
    goto ID: 141
    goto AnyId: 300
    goto AnyIdExp: 304
    goto AnyIds: 306

state 306:
  items:
    AnyIds -> AnyIdExp 'COMMA' AnyIds . 

  actions:
    action 'EOF' (noprec):   reduce AnyIds --> AnyIdExp 'COMMA' AnyIds
    action 'EAX' (noprec):   reduce AnyIds --> AnyIdExp 'COMMA' AnyIds
    action 'EBX' (noprec):   reduce AnyIds --> AnyIdExp 'COMMA' AnyIds
    action 'ECX' (noprec):   reduce AnyIds --> AnyIdExp 'COMMA' AnyIds
    action 'EDX' (noprec):   reduce AnyIds --> AnyIdExp 'COMMA' AnyIds
    action 'ESI' (noprec):   reduce AnyIds --> AnyIdExp 'COMMA' AnyIds
    action 'EDI' (noprec):   reduce AnyIds --> AnyIdExp 'COMMA' AnyIds
    action 'EBP' (noprec):   reduce AnyIds --> AnyIdExp 'COMMA' AnyIds
    action 'ESP' (noprec):   reduce AnyIds --> AnyIdExp 'COMMA' AnyIds
    action 'MODIFIES' (noprec):   reduce AnyIds --> AnyIdExp 'COMMA' AnyIds
    action 'INVARIANT' (noprec):   reduce AnyIds --> AnyIdExp 'COMMA' AnyIds
    action 'ASSERT' (noprec):   reduce AnyIds --> AnyIdExp 'COMMA' AnyIds
    action 'HAVOC' (noprec):   reduce AnyIds --> AnyIdExp 'COMMA' AnyIds
    action 'GOTO' (noprec):   reduce AnyIds --> AnyIdExp 'COMMA' AnyIds
    action 'CALL' (noprec):   reduce AnyIds --> AnyIdExp 'COMMA' AnyIds
    action 'CCALL' (noprec):   reduce AnyIds --> AnyIdExp 'COMMA' AnyIds
    action 'RET' (noprec):   reduce AnyIds --> AnyIdExp 'COMMA' AnyIds
    action 'IRET' (noprec):   reduce AnyIds --> AnyIdExp 'COMMA' AnyIds
    action 'GO' (noprec):   reduce AnyIds --> AnyIdExp 'COMMA' AnyIds
    action 'FORALL' (noprec):   reduce AnyIds --> AnyIdExp 'COMMA' AnyIds
    action 'EXISTS' (noprec):   reduce AnyIds --> AnyIdExp 'COMMA' AnyIds
    action 'OLD' (noprec):   reduce AnyIds --> AnyIdExp 'COMMA' AnyIds
    action 'COLONCOLON' (noprec):   reduce AnyIds --> AnyIdExp 'COMMA' AnyIds
    action 'EQEQGT' (noprec):   reduce AnyIds --> AnyIdExp 'COMMA' AnyIds
    action 'LTEQEQGT' (noprec):   reduce AnyIds --> AnyIdExp 'COMMA' AnyIds
    action 'TYPE' (noprec):   reduce AnyIds --> AnyIdExp 'COMMA' AnyIds
    action 'CONST' (noprec):   reduce AnyIds --> AnyIdExp 'COMMA' AnyIds
    action 'FUNCTION' (noprec):   reduce AnyIds --> AnyIdExp 'COMMA' AnyIds
    action 'RETURNS' (noprec):   reduce AnyIds --> AnyIdExp 'COMMA' AnyIds
    action 'AXIOM' (noprec):   reduce AnyIds --> AnyIdExp 'COMMA' AnyIds
    action 'PROCEDURE' (noprec):   reduce AnyIds --> AnyIdExp 'COMMA' AnyIds
    action 'IMPLEMENTATION' (noprec):   reduce AnyIds --> AnyIdExp 'COMMA' AnyIds
    action 'REQUIRES' (noprec):   reduce AnyIds --> AnyIdExp 'COMMA' AnyIds
    action 'ENSURES' (noprec):   reduce AnyIds --> AnyIdExp 'COMMA' AnyIds
    action 'LT' (noprec):   reduce AnyIds --> AnyIdExp 'COMMA' AnyIds
    action 'GT' (noprec):   reduce AnyIds --> AnyIdExp 'COMMA' AnyIds
    action 'EQ' (noprec):   reduce AnyIds --> AnyIdExp 'COMMA' AnyIds
    action 'BANG' (noprec):   reduce AnyIds --> AnyIdExp 'COMMA' AnyIds
    action 'COMMA' (noprec):   reduce AnyIds --> AnyIdExp 'COMMA' AnyIds
    action 'LE' (noprec):   reduce AnyIds --> AnyIdExp 'COMMA' AnyIds
    action 'GE' (noprec):   reduce AnyIds --> AnyIdExp 'COMMA' AnyIds
    action 'EQEQ' (noprec):   reduce AnyIds --> AnyIdExp 'COMMA' AnyIds
    action 'NE' (noprec):   reduce AnyIds --> AnyIdExp 'COMMA' AnyIds
    action 'PLUS' (noprec):   reduce AnyIds --> AnyIdExp 'COMMA' AnyIds
    action 'MINUS' (noprec):   reduce AnyIds --> AnyIdExp 'COMMA' AnyIds
    action 'STAR' (noprec):   reduce AnyIds --> AnyIdExp 'COMMA' AnyIds
    action 'SLASH' (noprec):   reduce AnyIds --> AnyIdExp 'COMMA' AnyIds
    action 'PERCENT' (noprec):   reduce AnyIds --> AnyIdExp 'COMMA' AnyIds
    action 'AMPAMP' (noprec):   reduce AnyIds --> AnyIdExp 'COMMA' AnyIds
    action 'BARBAR' (noprec):   reduce AnyIds --> AnyIdExp 'COMMA' AnyIds
    action 'COLONEQ' (noprec):   reduce AnyIds --> AnyIdExp 'COMMA' AnyIds
    action 'INT' (noprec):   reduce AnyIds --> AnyIdExp 'COMMA' AnyIds
    action 'BOOL' (noprec):   reduce AnyIds --> AnyIdExp 'COMMA' AnyIds
    action 'IF' (noprec):   reduce AnyIds --> AnyIdExp 'COMMA' AnyIds
    action 'RETURN' (noprec):   reduce AnyIds --> AnyIdExp 'COMMA' AnyIds
    action 'VAR' (noprec):   reduce AnyIds --> AnyIdExp 'COMMA' AnyIds
    action 'LBRACE' (noprec):   reduce AnyIds --> AnyIdExp 'COMMA' AnyIds
    action 'RBRACE' (noprec):   reduce AnyIds --> AnyIdExp 'COMMA' AnyIds
    action 'SEMI' (noprec):   reduce AnyIds --> AnyIdExp 'COMMA' AnyIds
    action 'COLON' (noprec):   reduce AnyIds --> AnyIdExp 'COMMA' AnyIds
    action 'LPAREN' (noprec):   reduce AnyIds --> AnyIdExp 'COMMA' AnyIds
    action 'RPAREN' (noprec):   reduce AnyIds --> AnyIdExp 'COMMA' AnyIds
    action 'LBRACKET' (noprec):   reduce AnyIds --> AnyIdExp 'COMMA' AnyIds
    action 'RBRACKET' (noprec):   reduce AnyIds --> AnyIdExp 'COMMA' AnyIds
    action 'LITBOOL' (noprec):   reduce AnyIds --> AnyIdExp 'COMMA' AnyIds
    action 'LITINT' (noprec):   reduce AnyIds --> AnyIdExp 'COMMA' AnyIds
    action 'QLID' (noprec):   reduce AnyIds --> AnyIdExp 'COMMA' AnyIds
    action 'QUID' (noprec):   reduce AnyIds --> AnyIdExp 'COMMA' AnyIds
    action 'DLID' (noprec):   reduce AnyIds --> AnyIdExp 'COMMA' AnyIds
    action 'DUID' (noprec):   reduce AnyIds --> AnyIdExp 'COMMA' AnyIds
    action 'LID' (noprec):   reduce AnyIds --> AnyIdExp 'COMMA' AnyIds
    action 'UID' (noprec):   reduce AnyIds --> AnyIdExp 'COMMA' AnyIds
    action 'error' (noprec):   reduce AnyIds --> AnyIdExp 'COMMA' AnyIds
    action '#' (noprec):   reduce AnyIds --> AnyIdExp 'COMMA' AnyIds
    action '$$' (noprec):   reduce AnyIds --> AnyIdExp 'COMMA' AnyIds

  immediate action:   reduce AnyIds --> AnyIdExp 'COMMA' AnyIds
 gotos:

state 307:
  items:
    AnyIdLists -> 'LPAREN' . AnyIds 'RPAREN' AnyIdLists

  actions:
    action 'EOF' (noprec):   reduce AnyIds --> 
    action 'EAX' (noprec):   reduce AnyIds --> 
    action 'EBX' (noprec):   reduce AnyIds --> 
    action 'ECX' (noprec):   reduce AnyIds --> 
    action 'EDX' (noprec):   reduce AnyIds --> 
    action 'ESI' (noprec):   reduce AnyIds --> 
    action 'EDI' (noprec):   reduce AnyIds --> 
    action 'EBP' (noprec):   reduce AnyIds --> 
    action 'ESP' (noprec):   reduce AnyIds --> 
    action 'MODIFIES' (noprec):   reduce AnyIds --> 
    action 'INVARIANT' (noprec):   reduce AnyIds --> 
    action 'ASSERT' (noprec):   reduce AnyIds --> 
    action 'HAVOC' (noprec):   reduce AnyIds --> 
    action 'GOTO' (noprec):   reduce AnyIds --> 
    action 'CALL' (noprec):   reduce AnyIds --> 
    action 'CCALL' (noprec):   reduce AnyIds --> 
    action 'RET' (noprec):   reduce AnyIds --> 
    action 'IRET' (noprec):   reduce AnyIds --> 
    action 'GO' (noprec):   reduce AnyIds --> 
    action 'FORALL' (noprec):   reduce AnyIds --> 
    action 'EXISTS' (noprec):   reduce AnyIds --> 
    action 'OLD' (noprec):   reduce AnyIds --> 
    action 'COLONCOLON' (noprec):   reduce AnyIds --> 
    action 'EQEQGT' (noprec):   reduce AnyIds --> 
    action 'LTEQEQGT' (noprec):   reduce AnyIds --> 
    action 'TYPE' (noprec):   reduce AnyIds --> 
    action 'CONST' (noprec):   reduce AnyIds --> 
    action 'FUNCTION' (noprec):   reduce AnyIds --> 
    action 'RETURNS' (noprec):   reduce AnyIds --> 
    action 'AXIOM' (noprec):   reduce AnyIds --> 
    action 'PROCEDURE' (noprec):   reduce AnyIds --> 
    action 'IMPLEMENTATION' (noprec):   reduce AnyIds --> 
    action 'REQUIRES' (noprec):   reduce AnyIds --> 
    action 'ENSURES' (noprec):   reduce AnyIds --> 
    action 'LT' (noprec):   reduce AnyIds --> 
    action 'GT' (noprec):   reduce AnyIds --> 
    action 'EQ' (noprec):   reduce AnyIds --> 
    action 'BANG' (noprec):   reduce AnyIds --> 
    action 'COMMA' (noprec):   reduce AnyIds --> 
    action 'LE' (noprec):   reduce AnyIds --> 
    action 'GE' (noprec):   reduce AnyIds --> 
    action 'EQEQ' (noprec):   reduce AnyIds --> 
    action 'NE' (noprec):   reduce AnyIds --> 
    action 'PLUS' (noprec):   reduce AnyIds --> 
    action 'MINUS' (noprec):   reduce AnyIds --> 
    action 'STAR' (noprec):   reduce AnyIds --> 
    action 'SLASH' (noprec):   reduce AnyIds --> 
    action 'PERCENT' (noprec):   reduce AnyIds --> 
    action 'AMPAMP' (noprec):   reduce AnyIds --> 
    action 'BARBAR' (noprec):   reduce AnyIds --> 
    action 'COLONEQ' (noprec):   reduce AnyIds --> 
    action 'INT' (noprec):   reduce AnyIds --> 
    action 'BOOL' (noprec):   reduce AnyIds --> 
    action 'IF' (noprec):   reduce AnyIds --> 
    action 'RETURN' (noprec):   reduce AnyIds --> 
    action 'VAR' (noprec):   reduce AnyIds --> 
    action 'LBRACE' (noprec):   reduce AnyIds --> 
    action 'RBRACE' (noprec):   reduce AnyIds --> 
    action 'SEMI' (noprec):   reduce AnyIds --> 
    action 'COLON' (noprec):   reduce AnyIds --> 
    action 'LPAREN' (explicit left 10000):   shift 301
    action 'RPAREN' (noprec):   reduce AnyIds --> 
    action 'LBRACKET' (noprec):   reduce AnyIds --> 
    action 'RBRACKET' (noprec):   reduce AnyIds --> 
    action 'LITBOOL' (noprec):   reduce AnyIds --> 
    action 'LITINT' (noprec):   reduce AnyIds --> 
    action 'QLID' (noprec):   shift 145
    action 'QUID' (noprec):   shift 144
    action 'DLID' (noprec):   shift 143
    action 'DUID' (noprec):   shift 142
    action 'LID' (noprec):   shift 4
    action 'UID' (noprec):   shift 5
    action 'error' (noprec):   reduce AnyIds --> 
    action '#' (noprec):   reduce AnyIds --> 
    action '$$' (noprec):   reduce AnyIds --> 

  immediate action: <none>
 gotos:
    goto ID: 141
    goto AnyId: 300
    goto AnyIdExp: 304
    goto AnyIds: 308

state 308:
  items:
    AnyIdLists -> 'LPAREN' AnyIds . 'RPAREN' AnyIdLists

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (explicit left 10000):   shift 309
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 309:
  items:
    AnyIdLists -> 'LPAREN' AnyIds 'RPAREN' . AnyIdLists

  actions:
    action 'EOF' (noprec):   reduce AnyIdLists --> 
    action 'EAX' (noprec):   reduce AnyIdLists --> 
    action 'EBX' (noprec):   reduce AnyIdLists --> 
    action 'ECX' (noprec):   reduce AnyIdLists --> 
    action 'EDX' (noprec):   reduce AnyIdLists --> 
    action 'ESI' (noprec):   reduce AnyIdLists --> 
    action 'EDI' (noprec):   reduce AnyIdLists --> 
    action 'EBP' (noprec):   reduce AnyIdLists --> 
    action 'ESP' (noprec):   reduce AnyIdLists --> 
    action 'MODIFIES' (noprec):   reduce AnyIdLists --> 
    action 'INVARIANT' (noprec):   reduce AnyIdLists --> 
    action 'ASSERT' (noprec):   reduce AnyIdLists --> 
    action 'HAVOC' (noprec):   reduce AnyIdLists --> 
    action 'GOTO' (noprec):   reduce AnyIdLists --> 
    action 'CALL' (noprec):   reduce AnyIdLists --> 
    action 'CCALL' (noprec):   reduce AnyIdLists --> 
    action 'RET' (noprec):   reduce AnyIdLists --> 
    action 'IRET' (noprec):   reduce AnyIdLists --> 
    action 'GO' (noprec):   reduce AnyIdLists --> 
    action 'FORALL' (noprec):   reduce AnyIdLists --> 
    action 'EXISTS' (noprec):   reduce AnyIdLists --> 
    action 'OLD' (noprec):   reduce AnyIdLists --> 
    action 'COLONCOLON' (noprec):   reduce AnyIdLists --> 
    action 'EQEQGT' (noprec):   reduce AnyIdLists --> 
    action 'LTEQEQGT' (noprec):   reduce AnyIdLists --> 
    action 'TYPE' (noprec):   reduce AnyIdLists --> 
    action 'CONST' (noprec):   reduce AnyIdLists --> 
    action 'FUNCTION' (noprec):   reduce AnyIdLists --> 
    action 'RETURNS' (noprec):   reduce AnyIdLists --> 
    action 'AXIOM' (noprec):   reduce AnyIdLists --> 
    action 'PROCEDURE' (noprec):   reduce AnyIdLists --> 
    action 'IMPLEMENTATION' (noprec):   reduce AnyIdLists --> 
    action 'REQUIRES' (noprec):   reduce AnyIdLists --> 
    action 'ENSURES' (noprec):   reduce AnyIdLists --> 
    action 'LT' (noprec):   reduce AnyIdLists --> 
    action 'GT' (noprec):   reduce AnyIdLists --> 
    action 'EQ' (noprec):   reduce AnyIdLists --> 
    action 'BANG' (noprec):   reduce AnyIdLists --> 
    action 'COMMA' (noprec):   reduce AnyIdLists --> 
    action 'LE' (noprec):   reduce AnyIdLists --> 
    action 'GE' (noprec):   reduce AnyIdLists --> 
    action 'EQEQ' (noprec):   reduce AnyIdLists --> 
    action 'NE' (noprec):   reduce AnyIdLists --> 
    action 'PLUS' (noprec):   reduce AnyIdLists --> 
    action 'MINUS' (noprec):   reduce AnyIdLists --> 
    action 'STAR' (noprec):   reduce AnyIdLists --> 
    action 'SLASH' (noprec):   reduce AnyIdLists --> 
    action 'PERCENT' (noprec):   reduce AnyIdLists --> 
    action 'AMPAMP' (noprec):   reduce AnyIdLists --> 
    action 'BARBAR' (noprec):   reduce AnyIdLists --> 
    action 'COLONEQ' (noprec):   reduce AnyIdLists --> 
    action 'INT' (noprec):   reduce AnyIdLists --> 
    action 'BOOL' (noprec):   reduce AnyIdLists --> 
    action 'IF' (noprec):   reduce AnyIdLists --> 
    action 'RETURN' (noprec):   reduce AnyIdLists --> 
    action 'VAR' (noprec):   reduce AnyIdLists --> 
    action 'LBRACE' (noprec):   reduce AnyIdLists --> 
    action 'RBRACE' (noprec):   reduce AnyIdLists --> 
    action 'SEMI' (noprec):   reduce AnyIdLists --> 
    action 'COLON' (noprec):   reduce AnyIdLists --> 
    action 'LPAREN' (explicit left 10000):   shift 307
    action 'RPAREN' (noprec):   reduce AnyIdLists --> 
    action 'LBRACKET' (explicit left 10000):   shift 311
    action 'RBRACKET' (noprec):   reduce AnyIdLists --> 
    action 'LITBOOL' (noprec):   reduce AnyIdLists --> 
    action 'LITINT' (noprec):   reduce AnyIdLists --> 
    action 'QLID' (noprec):   reduce AnyIdLists --> 
    action 'QUID' (noprec):   reduce AnyIdLists --> 
    action 'DLID' (noprec):   reduce AnyIdLists --> 
    action 'DUID' (noprec):   reduce AnyIdLists --> 
    action 'LID' (noprec):   reduce AnyIdLists --> 
    action 'UID' (noprec):   reduce AnyIdLists --> 
    action 'error' (noprec):   reduce AnyIdLists --> 
    action '#' (noprec):   reduce AnyIdLists --> 
    action '$$' (noprec):   reduce AnyIdLists --> 

  immediate action: <none>
 gotos:
    goto AnyIdLists: 310

state 310:
  items:
    AnyIdLists -> 'LPAREN' AnyIds 'RPAREN' AnyIdLists . 

  actions:
    action 'EOF' (explicit left 10000):   reduce AnyIdLists --> 'LPAREN' AnyIds 'RPAREN' AnyIdLists
    action 'EAX' (explicit left 10000):   reduce AnyIdLists --> 'LPAREN' AnyIds 'RPAREN' AnyIdLists
    action 'EBX' (explicit left 10000):   reduce AnyIdLists --> 'LPAREN' AnyIds 'RPAREN' AnyIdLists
    action 'ECX' (explicit left 10000):   reduce AnyIdLists --> 'LPAREN' AnyIds 'RPAREN' AnyIdLists
    action 'EDX' (explicit left 10000):   reduce AnyIdLists --> 'LPAREN' AnyIds 'RPAREN' AnyIdLists
    action 'ESI' (explicit left 10000):   reduce AnyIdLists --> 'LPAREN' AnyIds 'RPAREN' AnyIdLists
    action 'EDI' (explicit left 10000):   reduce AnyIdLists --> 'LPAREN' AnyIds 'RPAREN' AnyIdLists
    action 'EBP' (explicit left 10000):   reduce AnyIdLists --> 'LPAREN' AnyIds 'RPAREN' AnyIdLists
    action 'ESP' (explicit left 10000):   reduce AnyIdLists --> 'LPAREN' AnyIds 'RPAREN' AnyIdLists
    action 'MODIFIES' (explicit left 10000):   reduce AnyIdLists --> 'LPAREN' AnyIds 'RPAREN' AnyIdLists
    action 'INVARIANT' (explicit left 10000):   reduce AnyIdLists --> 'LPAREN' AnyIds 'RPAREN' AnyIdLists
    action 'ASSERT' (explicit left 10000):   reduce AnyIdLists --> 'LPAREN' AnyIds 'RPAREN' AnyIdLists
    action 'HAVOC' (explicit left 10000):   reduce AnyIdLists --> 'LPAREN' AnyIds 'RPAREN' AnyIdLists
    action 'GOTO' (explicit left 10000):   reduce AnyIdLists --> 'LPAREN' AnyIds 'RPAREN' AnyIdLists
    action 'CALL' (explicit left 10000):   reduce AnyIdLists --> 'LPAREN' AnyIds 'RPAREN' AnyIdLists
    action 'CCALL' (explicit left 10000):   reduce AnyIdLists --> 'LPAREN' AnyIds 'RPAREN' AnyIdLists
    action 'RET' (explicit left 10000):   reduce AnyIdLists --> 'LPAREN' AnyIds 'RPAREN' AnyIdLists
    action 'IRET' (explicit left 10000):   reduce AnyIdLists --> 'LPAREN' AnyIds 'RPAREN' AnyIdLists
    action 'GO' (explicit left 10000):   reduce AnyIdLists --> 'LPAREN' AnyIds 'RPAREN' AnyIdLists
    action 'FORALL' (explicit left 10000):   reduce AnyIdLists --> 'LPAREN' AnyIds 'RPAREN' AnyIdLists
    action 'EXISTS' (explicit left 10000):   reduce AnyIdLists --> 'LPAREN' AnyIds 'RPAREN' AnyIdLists
    action 'OLD' (explicit left 10000):   reduce AnyIdLists --> 'LPAREN' AnyIds 'RPAREN' AnyIdLists
    action 'COLONCOLON' (explicit left 10000):   reduce AnyIdLists --> 'LPAREN' AnyIds 'RPAREN' AnyIdLists
    action 'EQEQGT' (explicit left 10000):   reduce AnyIdLists --> 'LPAREN' AnyIds 'RPAREN' AnyIdLists
    action 'LTEQEQGT' (explicit left 10000):   reduce AnyIdLists --> 'LPAREN' AnyIds 'RPAREN' AnyIdLists
    action 'TYPE' (explicit left 10000):   reduce AnyIdLists --> 'LPAREN' AnyIds 'RPAREN' AnyIdLists
    action 'CONST' (explicit left 10000):   reduce AnyIdLists --> 'LPAREN' AnyIds 'RPAREN' AnyIdLists
    action 'FUNCTION' (explicit left 10000):   reduce AnyIdLists --> 'LPAREN' AnyIds 'RPAREN' AnyIdLists
    action 'RETURNS' (explicit left 10000):   reduce AnyIdLists --> 'LPAREN' AnyIds 'RPAREN' AnyIdLists
    action 'AXIOM' (explicit left 10000):   reduce AnyIdLists --> 'LPAREN' AnyIds 'RPAREN' AnyIdLists
    action 'PROCEDURE' (explicit left 10000):   reduce AnyIdLists --> 'LPAREN' AnyIds 'RPAREN' AnyIdLists
    action 'IMPLEMENTATION' (explicit left 10000):   reduce AnyIdLists --> 'LPAREN' AnyIds 'RPAREN' AnyIdLists
    action 'REQUIRES' (explicit left 10000):   reduce AnyIdLists --> 'LPAREN' AnyIds 'RPAREN' AnyIdLists
    action 'ENSURES' (explicit left 10000):   reduce AnyIdLists --> 'LPAREN' AnyIds 'RPAREN' AnyIdLists
    action 'LT' (explicit left 10000):   reduce AnyIdLists --> 'LPAREN' AnyIds 'RPAREN' AnyIdLists
    action 'GT' (explicit left 10000):   reduce AnyIdLists --> 'LPAREN' AnyIds 'RPAREN' AnyIdLists
    action 'EQ' (explicit left 10000):   reduce AnyIdLists --> 'LPAREN' AnyIds 'RPAREN' AnyIdLists
    action 'BANG' (explicit left 10000):   reduce AnyIdLists --> 'LPAREN' AnyIds 'RPAREN' AnyIdLists
    action 'COMMA' (explicit left 10000):   reduce AnyIdLists --> 'LPAREN' AnyIds 'RPAREN' AnyIdLists
    action 'LE' (explicit left 10000):   reduce AnyIdLists --> 'LPAREN' AnyIds 'RPAREN' AnyIdLists
    action 'GE' (explicit left 10000):   reduce AnyIdLists --> 'LPAREN' AnyIds 'RPAREN' AnyIdLists
    action 'EQEQ' (explicit left 10000):   reduce AnyIdLists --> 'LPAREN' AnyIds 'RPAREN' AnyIdLists
    action 'NE' (explicit left 10000):   reduce AnyIdLists --> 'LPAREN' AnyIds 'RPAREN' AnyIdLists
    action 'PLUS' (explicit left 10000):   reduce AnyIdLists --> 'LPAREN' AnyIds 'RPAREN' AnyIdLists
    action 'MINUS' (explicit left 10000):   reduce AnyIdLists --> 'LPAREN' AnyIds 'RPAREN' AnyIdLists
    action 'STAR' (explicit left 10000):   reduce AnyIdLists --> 'LPAREN' AnyIds 'RPAREN' AnyIdLists
    action 'SLASH' (explicit left 10000):   reduce AnyIdLists --> 'LPAREN' AnyIds 'RPAREN' AnyIdLists
    action 'PERCENT' (explicit left 10000):   reduce AnyIdLists --> 'LPAREN' AnyIds 'RPAREN' AnyIdLists
    action 'AMPAMP' (explicit left 10000):   reduce AnyIdLists --> 'LPAREN' AnyIds 'RPAREN' AnyIdLists
    action 'BARBAR' (explicit left 10000):   reduce AnyIdLists --> 'LPAREN' AnyIds 'RPAREN' AnyIdLists
    action 'COLONEQ' (explicit left 10000):   reduce AnyIdLists --> 'LPAREN' AnyIds 'RPAREN' AnyIdLists
    action 'INT' (explicit left 10000):   reduce AnyIdLists --> 'LPAREN' AnyIds 'RPAREN' AnyIdLists
    action 'BOOL' (explicit left 10000):   reduce AnyIdLists --> 'LPAREN' AnyIds 'RPAREN' AnyIdLists
    action 'IF' (explicit left 10000):   reduce AnyIdLists --> 'LPAREN' AnyIds 'RPAREN' AnyIdLists
    action 'RETURN' (explicit left 10000):   reduce AnyIdLists --> 'LPAREN' AnyIds 'RPAREN' AnyIdLists
    action 'VAR' (explicit left 10000):   reduce AnyIdLists --> 'LPAREN' AnyIds 'RPAREN' AnyIdLists
    action 'LBRACE' (explicit left 10000):   reduce AnyIdLists --> 'LPAREN' AnyIds 'RPAREN' AnyIdLists
    action 'RBRACE' (explicit left 10000):   reduce AnyIdLists --> 'LPAREN' AnyIds 'RPAREN' AnyIdLists
    action 'SEMI' (explicit left 10000):   reduce AnyIdLists --> 'LPAREN' AnyIds 'RPAREN' AnyIdLists
    action 'COLON' (explicit left 10000):   reduce AnyIdLists --> 'LPAREN' AnyIds 'RPAREN' AnyIdLists
    action 'LPAREN' (explicit left 10000):   reduce AnyIdLists --> 'LPAREN' AnyIds 'RPAREN' AnyIdLists
    action 'RPAREN' (explicit left 10000):   reduce AnyIdLists --> 'LPAREN' AnyIds 'RPAREN' AnyIdLists
    action 'LBRACKET' (explicit left 10000):   reduce AnyIdLists --> 'LPAREN' AnyIds 'RPAREN' AnyIdLists
    action 'RBRACKET' (explicit left 10000):   reduce AnyIdLists --> 'LPAREN' AnyIds 'RPAREN' AnyIdLists
    action 'LITBOOL' (explicit left 10000):   reduce AnyIdLists --> 'LPAREN' AnyIds 'RPAREN' AnyIdLists
    action 'LITINT' (explicit left 10000):   reduce AnyIdLists --> 'LPAREN' AnyIds 'RPAREN' AnyIdLists
    action 'QLID' (explicit left 10000):   reduce AnyIdLists --> 'LPAREN' AnyIds 'RPAREN' AnyIdLists
    action 'QUID' (explicit left 10000):   reduce AnyIdLists --> 'LPAREN' AnyIds 'RPAREN' AnyIdLists
    action 'DLID' (explicit left 10000):   reduce AnyIdLists --> 'LPAREN' AnyIds 'RPAREN' AnyIdLists
    action 'DUID' (explicit left 10000):   reduce AnyIdLists --> 'LPAREN' AnyIds 'RPAREN' AnyIdLists
    action 'LID' (explicit left 10000):   reduce AnyIdLists --> 'LPAREN' AnyIds 'RPAREN' AnyIdLists
    action 'UID' (explicit left 10000):   reduce AnyIdLists --> 'LPAREN' AnyIds 'RPAREN' AnyIdLists
    action 'error' (explicit left 10000):   reduce AnyIdLists --> 'LPAREN' AnyIds 'RPAREN' AnyIdLists
    action '#' (explicit left 10000):   reduce AnyIdLists --> 'LPAREN' AnyIds 'RPAREN' AnyIdLists
    action '$$' (explicit left 10000):   reduce AnyIdLists --> 'LPAREN' AnyIds 'RPAREN' AnyIdLists

  immediate action:   reduce AnyIdLists --> 'LPAREN' AnyIds 'RPAREN' AnyIdLists
 gotos:

state 311:
  items:
    AnyIdLists -> 'LBRACKET' . AnyIds 'RBRACKET' AnyIdLists

  actions:
    action 'EOF' (noprec):   reduce AnyIds --> 
    action 'EAX' (noprec):   reduce AnyIds --> 
    action 'EBX' (noprec):   reduce AnyIds --> 
    action 'ECX' (noprec):   reduce AnyIds --> 
    action 'EDX' (noprec):   reduce AnyIds --> 
    action 'ESI' (noprec):   reduce AnyIds --> 
    action 'EDI' (noprec):   reduce AnyIds --> 
    action 'EBP' (noprec):   reduce AnyIds --> 
    action 'ESP' (noprec):   reduce AnyIds --> 
    action 'MODIFIES' (noprec):   reduce AnyIds --> 
    action 'INVARIANT' (noprec):   reduce AnyIds --> 
    action 'ASSERT' (noprec):   reduce AnyIds --> 
    action 'HAVOC' (noprec):   reduce AnyIds --> 
    action 'GOTO' (noprec):   reduce AnyIds --> 
    action 'CALL' (noprec):   reduce AnyIds --> 
    action 'CCALL' (noprec):   reduce AnyIds --> 
    action 'RET' (noprec):   reduce AnyIds --> 
    action 'IRET' (noprec):   reduce AnyIds --> 
    action 'GO' (noprec):   reduce AnyIds --> 
    action 'FORALL' (noprec):   reduce AnyIds --> 
    action 'EXISTS' (noprec):   reduce AnyIds --> 
    action 'OLD' (noprec):   reduce AnyIds --> 
    action 'COLONCOLON' (noprec):   reduce AnyIds --> 
    action 'EQEQGT' (noprec):   reduce AnyIds --> 
    action 'LTEQEQGT' (noprec):   reduce AnyIds --> 
    action 'TYPE' (noprec):   reduce AnyIds --> 
    action 'CONST' (noprec):   reduce AnyIds --> 
    action 'FUNCTION' (noprec):   reduce AnyIds --> 
    action 'RETURNS' (noprec):   reduce AnyIds --> 
    action 'AXIOM' (noprec):   reduce AnyIds --> 
    action 'PROCEDURE' (noprec):   reduce AnyIds --> 
    action 'IMPLEMENTATION' (noprec):   reduce AnyIds --> 
    action 'REQUIRES' (noprec):   reduce AnyIds --> 
    action 'ENSURES' (noprec):   reduce AnyIds --> 
    action 'LT' (noprec):   reduce AnyIds --> 
    action 'GT' (noprec):   reduce AnyIds --> 
    action 'EQ' (noprec):   reduce AnyIds --> 
    action 'BANG' (noprec):   reduce AnyIds --> 
    action 'COMMA' (noprec):   reduce AnyIds --> 
    action 'LE' (noprec):   reduce AnyIds --> 
    action 'GE' (noprec):   reduce AnyIds --> 
    action 'EQEQ' (noprec):   reduce AnyIds --> 
    action 'NE' (noprec):   reduce AnyIds --> 
    action 'PLUS' (noprec):   reduce AnyIds --> 
    action 'MINUS' (noprec):   reduce AnyIds --> 
    action 'STAR' (noprec):   reduce AnyIds --> 
    action 'SLASH' (noprec):   reduce AnyIds --> 
    action 'PERCENT' (noprec):   reduce AnyIds --> 
    action 'AMPAMP' (noprec):   reduce AnyIds --> 
    action 'BARBAR' (noprec):   reduce AnyIds --> 
    action 'COLONEQ' (noprec):   reduce AnyIds --> 
    action 'INT' (noprec):   reduce AnyIds --> 
    action 'BOOL' (noprec):   reduce AnyIds --> 
    action 'IF' (noprec):   reduce AnyIds --> 
    action 'RETURN' (noprec):   reduce AnyIds --> 
    action 'VAR' (noprec):   reduce AnyIds --> 
    action 'LBRACE' (noprec):   reduce AnyIds --> 
    action 'RBRACE' (noprec):   reduce AnyIds --> 
    action 'SEMI' (noprec):   reduce AnyIds --> 
    action 'COLON' (noprec):   reduce AnyIds --> 
    action 'LPAREN' (explicit left 10000):   shift 301
    action 'RPAREN' (noprec):   reduce AnyIds --> 
    action 'LBRACKET' (noprec):   reduce AnyIds --> 
    action 'RBRACKET' (noprec):   reduce AnyIds --> 
    action 'LITBOOL' (noprec):   reduce AnyIds --> 
    action 'LITINT' (noprec):   reduce AnyIds --> 
    action 'QLID' (noprec):   shift 145
    action 'QUID' (noprec):   shift 144
    action 'DLID' (noprec):   shift 143
    action 'DUID' (noprec):   shift 142
    action 'LID' (noprec):   shift 4
    action 'UID' (noprec):   shift 5
    action 'error' (noprec):   reduce AnyIds --> 
    action '#' (noprec):   reduce AnyIds --> 
    action '$$' (noprec):   reduce AnyIds --> 

  immediate action: <none>
 gotos:
    goto ID: 141
    goto AnyId: 300
    goto AnyIdExp: 304
    goto AnyIds: 312

state 312:
  items:
    AnyIdLists -> 'LBRACKET' AnyIds . 'RBRACKET' AnyIdLists

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (explicit left 10000):   shift 313
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 313:
  items:
    AnyIdLists -> 'LBRACKET' AnyIds 'RBRACKET' . AnyIdLists

  actions:
    action 'EOF' (noprec):   reduce AnyIdLists --> 
    action 'EAX' (noprec):   reduce AnyIdLists --> 
    action 'EBX' (noprec):   reduce AnyIdLists --> 
    action 'ECX' (noprec):   reduce AnyIdLists --> 
    action 'EDX' (noprec):   reduce AnyIdLists --> 
    action 'ESI' (noprec):   reduce AnyIdLists --> 
    action 'EDI' (noprec):   reduce AnyIdLists --> 
    action 'EBP' (noprec):   reduce AnyIdLists --> 
    action 'ESP' (noprec):   reduce AnyIdLists --> 
    action 'MODIFIES' (noprec):   reduce AnyIdLists --> 
    action 'INVARIANT' (noprec):   reduce AnyIdLists --> 
    action 'ASSERT' (noprec):   reduce AnyIdLists --> 
    action 'HAVOC' (noprec):   reduce AnyIdLists --> 
    action 'GOTO' (noprec):   reduce AnyIdLists --> 
    action 'CALL' (noprec):   reduce AnyIdLists --> 
    action 'CCALL' (noprec):   reduce AnyIdLists --> 
    action 'RET' (noprec):   reduce AnyIdLists --> 
    action 'IRET' (noprec):   reduce AnyIdLists --> 
    action 'GO' (noprec):   reduce AnyIdLists --> 
    action 'FORALL' (noprec):   reduce AnyIdLists --> 
    action 'EXISTS' (noprec):   reduce AnyIdLists --> 
    action 'OLD' (noprec):   reduce AnyIdLists --> 
    action 'COLONCOLON' (noprec):   reduce AnyIdLists --> 
    action 'EQEQGT' (noprec):   reduce AnyIdLists --> 
    action 'LTEQEQGT' (noprec):   reduce AnyIdLists --> 
    action 'TYPE' (noprec):   reduce AnyIdLists --> 
    action 'CONST' (noprec):   reduce AnyIdLists --> 
    action 'FUNCTION' (noprec):   reduce AnyIdLists --> 
    action 'RETURNS' (noprec):   reduce AnyIdLists --> 
    action 'AXIOM' (noprec):   reduce AnyIdLists --> 
    action 'PROCEDURE' (noprec):   reduce AnyIdLists --> 
    action 'IMPLEMENTATION' (noprec):   reduce AnyIdLists --> 
    action 'REQUIRES' (noprec):   reduce AnyIdLists --> 
    action 'ENSURES' (noprec):   reduce AnyIdLists --> 
    action 'LT' (noprec):   reduce AnyIdLists --> 
    action 'GT' (noprec):   reduce AnyIdLists --> 
    action 'EQ' (noprec):   reduce AnyIdLists --> 
    action 'BANG' (noprec):   reduce AnyIdLists --> 
    action 'COMMA' (noprec):   reduce AnyIdLists --> 
    action 'LE' (noprec):   reduce AnyIdLists --> 
    action 'GE' (noprec):   reduce AnyIdLists --> 
    action 'EQEQ' (noprec):   reduce AnyIdLists --> 
    action 'NE' (noprec):   reduce AnyIdLists --> 
    action 'PLUS' (noprec):   reduce AnyIdLists --> 
    action 'MINUS' (noprec):   reduce AnyIdLists --> 
    action 'STAR' (noprec):   reduce AnyIdLists --> 
    action 'SLASH' (noprec):   reduce AnyIdLists --> 
    action 'PERCENT' (noprec):   reduce AnyIdLists --> 
    action 'AMPAMP' (noprec):   reduce AnyIdLists --> 
    action 'BARBAR' (noprec):   reduce AnyIdLists --> 
    action 'COLONEQ' (noprec):   reduce AnyIdLists --> 
    action 'INT' (noprec):   reduce AnyIdLists --> 
    action 'BOOL' (noprec):   reduce AnyIdLists --> 
    action 'IF' (noprec):   reduce AnyIdLists --> 
    action 'RETURN' (noprec):   reduce AnyIdLists --> 
    action 'VAR' (noprec):   reduce AnyIdLists --> 
    action 'LBRACE' (noprec):   reduce AnyIdLists --> 
    action 'RBRACE' (noprec):   reduce AnyIdLists --> 
    action 'SEMI' (noprec):   reduce AnyIdLists --> 
    action 'COLON' (noprec):   reduce AnyIdLists --> 
    action 'LPAREN' (explicit left 10000):   shift 307
    action 'RPAREN' (noprec):   reduce AnyIdLists --> 
    action 'LBRACKET' (explicit left 10000):   shift 311
    action 'RBRACKET' (noprec):   reduce AnyIdLists --> 
    action 'LITBOOL' (noprec):   reduce AnyIdLists --> 
    action 'LITINT' (noprec):   reduce AnyIdLists --> 
    action 'QLID' (noprec):   reduce AnyIdLists --> 
    action 'QUID' (noprec):   reduce AnyIdLists --> 
    action 'DLID' (noprec):   reduce AnyIdLists --> 
    action 'DUID' (noprec):   reduce AnyIdLists --> 
    action 'LID' (noprec):   reduce AnyIdLists --> 
    action 'UID' (noprec):   reduce AnyIdLists --> 
    action 'error' (noprec):   reduce AnyIdLists --> 
    action '#' (noprec):   reduce AnyIdLists --> 
    action '$$' (noprec):   reduce AnyIdLists --> 

  immediate action: <none>
 gotos:
    goto AnyIdLists: 314

state 314:
  items:
    AnyIdLists -> 'LBRACKET' AnyIds 'RBRACKET' AnyIdLists . 

  actions:
    action 'EOF' (explicit left 10000):   reduce AnyIdLists --> 'LBRACKET' AnyIds 'RBRACKET' AnyIdLists
    action 'EAX' (explicit left 10000):   reduce AnyIdLists --> 'LBRACKET' AnyIds 'RBRACKET' AnyIdLists
    action 'EBX' (explicit left 10000):   reduce AnyIdLists --> 'LBRACKET' AnyIds 'RBRACKET' AnyIdLists
    action 'ECX' (explicit left 10000):   reduce AnyIdLists --> 'LBRACKET' AnyIds 'RBRACKET' AnyIdLists
    action 'EDX' (explicit left 10000):   reduce AnyIdLists --> 'LBRACKET' AnyIds 'RBRACKET' AnyIdLists
    action 'ESI' (explicit left 10000):   reduce AnyIdLists --> 'LBRACKET' AnyIds 'RBRACKET' AnyIdLists
    action 'EDI' (explicit left 10000):   reduce AnyIdLists --> 'LBRACKET' AnyIds 'RBRACKET' AnyIdLists
    action 'EBP' (explicit left 10000):   reduce AnyIdLists --> 'LBRACKET' AnyIds 'RBRACKET' AnyIdLists
    action 'ESP' (explicit left 10000):   reduce AnyIdLists --> 'LBRACKET' AnyIds 'RBRACKET' AnyIdLists
    action 'MODIFIES' (explicit left 10000):   reduce AnyIdLists --> 'LBRACKET' AnyIds 'RBRACKET' AnyIdLists
    action 'INVARIANT' (explicit left 10000):   reduce AnyIdLists --> 'LBRACKET' AnyIds 'RBRACKET' AnyIdLists
    action 'ASSERT' (explicit left 10000):   reduce AnyIdLists --> 'LBRACKET' AnyIds 'RBRACKET' AnyIdLists
    action 'HAVOC' (explicit left 10000):   reduce AnyIdLists --> 'LBRACKET' AnyIds 'RBRACKET' AnyIdLists
    action 'GOTO' (explicit left 10000):   reduce AnyIdLists --> 'LBRACKET' AnyIds 'RBRACKET' AnyIdLists
    action 'CALL' (explicit left 10000):   reduce AnyIdLists --> 'LBRACKET' AnyIds 'RBRACKET' AnyIdLists
    action 'CCALL' (explicit left 10000):   reduce AnyIdLists --> 'LBRACKET' AnyIds 'RBRACKET' AnyIdLists
    action 'RET' (explicit left 10000):   reduce AnyIdLists --> 'LBRACKET' AnyIds 'RBRACKET' AnyIdLists
    action 'IRET' (explicit left 10000):   reduce AnyIdLists --> 'LBRACKET' AnyIds 'RBRACKET' AnyIdLists
    action 'GO' (explicit left 10000):   reduce AnyIdLists --> 'LBRACKET' AnyIds 'RBRACKET' AnyIdLists
    action 'FORALL' (explicit left 10000):   reduce AnyIdLists --> 'LBRACKET' AnyIds 'RBRACKET' AnyIdLists
    action 'EXISTS' (explicit left 10000):   reduce AnyIdLists --> 'LBRACKET' AnyIds 'RBRACKET' AnyIdLists
    action 'OLD' (explicit left 10000):   reduce AnyIdLists --> 'LBRACKET' AnyIds 'RBRACKET' AnyIdLists
    action 'COLONCOLON' (explicit left 10000):   reduce AnyIdLists --> 'LBRACKET' AnyIds 'RBRACKET' AnyIdLists
    action 'EQEQGT' (explicit left 10000):   reduce AnyIdLists --> 'LBRACKET' AnyIds 'RBRACKET' AnyIdLists
    action 'LTEQEQGT' (explicit left 10000):   reduce AnyIdLists --> 'LBRACKET' AnyIds 'RBRACKET' AnyIdLists
    action 'TYPE' (explicit left 10000):   reduce AnyIdLists --> 'LBRACKET' AnyIds 'RBRACKET' AnyIdLists
    action 'CONST' (explicit left 10000):   reduce AnyIdLists --> 'LBRACKET' AnyIds 'RBRACKET' AnyIdLists
    action 'FUNCTION' (explicit left 10000):   reduce AnyIdLists --> 'LBRACKET' AnyIds 'RBRACKET' AnyIdLists
    action 'RETURNS' (explicit left 10000):   reduce AnyIdLists --> 'LBRACKET' AnyIds 'RBRACKET' AnyIdLists
    action 'AXIOM' (explicit left 10000):   reduce AnyIdLists --> 'LBRACKET' AnyIds 'RBRACKET' AnyIdLists
    action 'PROCEDURE' (explicit left 10000):   reduce AnyIdLists --> 'LBRACKET' AnyIds 'RBRACKET' AnyIdLists
    action 'IMPLEMENTATION' (explicit left 10000):   reduce AnyIdLists --> 'LBRACKET' AnyIds 'RBRACKET' AnyIdLists
    action 'REQUIRES' (explicit left 10000):   reduce AnyIdLists --> 'LBRACKET' AnyIds 'RBRACKET' AnyIdLists
    action 'ENSURES' (explicit left 10000):   reduce AnyIdLists --> 'LBRACKET' AnyIds 'RBRACKET' AnyIdLists
    action 'LT' (explicit left 10000):   reduce AnyIdLists --> 'LBRACKET' AnyIds 'RBRACKET' AnyIdLists
    action 'GT' (explicit left 10000):   reduce AnyIdLists --> 'LBRACKET' AnyIds 'RBRACKET' AnyIdLists
    action 'EQ' (explicit left 10000):   reduce AnyIdLists --> 'LBRACKET' AnyIds 'RBRACKET' AnyIdLists
    action 'BANG' (explicit left 10000):   reduce AnyIdLists --> 'LBRACKET' AnyIds 'RBRACKET' AnyIdLists
    action 'COMMA' (explicit left 10000):   reduce AnyIdLists --> 'LBRACKET' AnyIds 'RBRACKET' AnyIdLists
    action 'LE' (explicit left 10000):   reduce AnyIdLists --> 'LBRACKET' AnyIds 'RBRACKET' AnyIdLists
    action 'GE' (explicit left 10000):   reduce AnyIdLists --> 'LBRACKET' AnyIds 'RBRACKET' AnyIdLists
    action 'EQEQ' (explicit left 10000):   reduce AnyIdLists --> 'LBRACKET' AnyIds 'RBRACKET' AnyIdLists
    action 'NE' (explicit left 10000):   reduce AnyIdLists --> 'LBRACKET' AnyIds 'RBRACKET' AnyIdLists
    action 'PLUS' (explicit left 10000):   reduce AnyIdLists --> 'LBRACKET' AnyIds 'RBRACKET' AnyIdLists
    action 'MINUS' (explicit left 10000):   reduce AnyIdLists --> 'LBRACKET' AnyIds 'RBRACKET' AnyIdLists
    action 'STAR' (explicit left 10000):   reduce AnyIdLists --> 'LBRACKET' AnyIds 'RBRACKET' AnyIdLists
    action 'SLASH' (explicit left 10000):   reduce AnyIdLists --> 'LBRACKET' AnyIds 'RBRACKET' AnyIdLists
    action 'PERCENT' (explicit left 10000):   reduce AnyIdLists --> 'LBRACKET' AnyIds 'RBRACKET' AnyIdLists
    action 'AMPAMP' (explicit left 10000):   reduce AnyIdLists --> 'LBRACKET' AnyIds 'RBRACKET' AnyIdLists
    action 'BARBAR' (explicit left 10000):   reduce AnyIdLists --> 'LBRACKET' AnyIds 'RBRACKET' AnyIdLists
    action 'COLONEQ' (explicit left 10000):   reduce AnyIdLists --> 'LBRACKET' AnyIds 'RBRACKET' AnyIdLists
    action 'INT' (explicit left 10000):   reduce AnyIdLists --> 'LBRACKET' AnyIds 'RBRACKET' AnyIdLists
    action 'BOOL' (explicit left 10000):   reduce AnyIdLists --> 'LBRACKET' AnyIds 'RBRACKET' AnyIdLists
    action 'IF' (explicit left 10000):   reduce AnyIdLists --> 'LBRACKET' AnyIds 'RBRACKET' AnyIdLists
    action 'RETURN' (explicit left 10000):   reduce AnyIdLists --> 'LBRACKET' AnyIds 'RBRACKET' AnyIdLists
    action 'VAR' (explicit left 10000):   reduce AnyIdLists --> 'LBRACKET' AnyIds 'RBRACKET' AnyIdLists
    action 'LBRACE' (explicit left 10000):   reduce AnyIdLists --> 'LBRACKET' AnyIds 'RBRACKET' AnyIdLists
    action 'RBRACE' (explicit left 10000):   reduce AnyIdLists --> 'LBRACKET' AnyIds 'RBRACKET' AnyIdLists
    action 'SEMI' (explicit left 10000):   reduce AnyIdLists --> 'LBRACKET' AnyIds 'RBRACKET' AnyIdLists
    action 'COLON' (explicit left 10000):   reduce AnyIdLists --> 'LBRACKET' AnyIds 'RBRACKET' AnyIdLists
    action 'LPAREN' (explicit left 10000):   reduce AnyIdLists --> 'LBRACKET' AnyIds 'RBRACKET' AnyIdLists
    action 'RPAREN' (explicit left 10000):   reduce AnyIdLists --> 'LBRACKET' AnyIds 'RBRACKET' AnyIdLists
    action 'LBRACKET' (explicit left 10000):   reduce AnyIdLists --> 'LBRACKET' AnyIds 'RBRACKET' AnyIdLists
    action 'RBRACKET' (explicit left 10000):   reduce AnyIdLists --> 'LBRACKET' AnyIds 'RBRACKET' AnyIdLists
    action 'LITBOOL' (explicit left 10000):   reduce AnyIdLists --> 'LBRACKET' AnyIds 'RBRACKET' AnyIdLists
    action 'LITINT' (explicit left 10000):   reduce AnyIdLists --> 'LBRACKET' AnyIds 'RBRACKET' AnyIdLists
    action 'QLID' (explicit left 10000):   reduce AnyIdLists --> 'LBRACKET' AnyIds 'RBRACKET' AnyIdLists
    action 'QUID' (explicit left 10000):   reduce AnyIdLists --> 'LBRACKET' AnyIds 'RBRACKET' AnyIdLists
    action 'DLID' (explicit left 10000):   reduce AnyIdLists --> 'LBRACKET' AnyIds 'RBRACKET' AnyIdLists
    action 'DUID' (explicit left 10000):   reduce AnyIdLists --> 'LBRACKET' AnyIds 'RBRACKET' AnyIdLists
    action 'LID' (explicit left 10000):   reduce AnyIdLists --> 'LBRACKET' AnyIds 'RBRACKET' AnyIdLists
    action 'UID' (explicit left 10000):   reduce AnyIdLists --> 'LBRACKET' AnyIds 'RBRACKET' AnyIdLists
    action 'error' (explicit left 10000):   reduce AnyIdLists --> 'LBRACKET' AnyIds 'RBRACKET' AnyIdLists
    action '#' (explicit left 10000):   reduce AnyIdLists --> 'LBRACKET' AnyIds 'RBRACKET' AnyIdLists
    action '$$' (explicit left 10000):   reduce AnyIdLists --> 'LBRACKET' AnyIds 'RBRACKET' AnyIdLists

  immediate action:   reduce AnyIdLists --> 'LBRACKET' AnyIds 'RBRACKET' AnyIdLists
 gotos:

state 315:
  items:
    FunAttr -> 'LBRACE' . 'COLON' ID 'LITBOOL' 'RBRACE'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   shift 316
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 316:
  items:
    FunAttr -> 'LBRACE' 'COLON' . ID 'LITBOOL' 'RBRACE'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   shift 4
    action 'UID' (noprec):   shift 5
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto ID: 317

state 317:
  items:
    FunAttr -> 'LBRACE' 'COLON' ID . 'LITBOOL' 'RBRACE'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   shift 318
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 318:
  items:
    FunAttr -> 'LBRACE' 'COLON' ID 'LITBOOL' . 'RBRACE'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   shift 319
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 319:
  items:
    FunAttr -> 'LBRACE' 'COLON' ID 'LITBOOL' 'RBRACE' . 

  actions:
    action 'EOF' (noprec):   reduce FunAttr --> 'LBRACE' 'COLON' ID 'LITBOOL' 'RBRACE'
    action 'EAX' (noprec):   reduce FunAttr --> 'LBRACE' 'COLON' ID 'LITBOOL' 'RBRACE'
    action 'EBX' (noprec):   reduce FunAttr --> 'LBRACE' 'COLON' ID 'LITBOOL' 'RBRACE'
    action 'ECX' (noprec):   reduce FunAttr --> 'LBRACE' 'COLON' ID 'LITBOOL' 'RBRACE'
    action 'EDX' (noprec):   reduce FunAttr --> 'LBRACE' 'COLON' ID 'LITBOOL' 'RBRACE'
    action 'ESI' (noprec):   reduce FunAttr --> 'LBRACE' 'COLON' ID 'LITBOOL' 'RBRACE'
    action 'EDI' (noprec):   reduce FunAttr --> 'LBRACE' 'COLON' ID 'LITBOOL' 'RBRACE'
    action 'EBP' (noprec):   reduce FunAttr --> 'LBRACE' 'COLON' ID 'LITBOOL' 'RBRACE'
    action 'ESP' (noprec):   reduce FunAttr --> 'LBRACE' 'COLON' ID 'LITBOOL' 'RBRACE'
    action 'MODIFIES' (noprec):   reduce FunAttr --> 'LBRACE' 'COLON' ID 'LITBOOL' 'RBRACE'
    action 'INVARIANT' (noprec):   reduce FunAttr --> 'LBRACE' 'COLON' ID 'LITBOOL' 'RBRACE'
    action 'ASSERT' (noprec):   reduce FunAttr --> 'LBRACE' 'COLON' ID 'LITBOOL' 'RBRACE'
    action 'HAVOC' (noprec):   reduce FunAttr --> 'LBRACE' 'COLON' ID 'LITBOOL' 'RBRACE'
    action 'GOTO' (noprec):   reduce FunAttr --> 'LBRACE' 'COLON' ID 'LITBOOL' 'RBRACE'
    action 'CALL' (noprec):   reduce FunAttr --> 'LBRACE' 'COLON' ID 'LITBOOL' 'RBRACE'
    action 'CCALL' (noprec):   reduce FunAttr --> 'LBRACE' 'COLON' ID 'LITBOOL' 'RBRACE'
    action 'RET' (noprec):   reduce FunAttr --> 'LBRACE' 'COLON' ID 'LITBOOL' 'RBRACE'
    action 'IRET' (noprec):   reduce FunAttr --> 'LBRACE' 'COLON' ID 'LITBOOL' 'RBRACE'
    action 'GO' (noprec):   reduce FunAttr --> 'LBRACE' 'COLON' ID 'LITBOOL' 'RBRACE'
    action 'FORALL' (noprec):   reduce FunAttr --> 'LBRACE' 'COLON' ID 'LITBOOL' 'RBRACE'
    action 'EXISTS' (noprec):   reduce FunAttr --> 'LBRACE' 'COLON' ID 'LITBOOL' 'RBRACE'
    action 'OLD' (noprec):   reduce FunAttr --> 'LBRACE' 'COLON' ID 'LITBOOL' 'RBRACE'
    action 'COLONCOLON' (noprec):   reduce FunAttr --> 'LBRACE' 'COLON' ID 'LITBOOL' 'RBRACE'
    action 'EQEQGT' (noprec):   reduce FunAttr --> 'LBRACE' 'COLON' ID 'LITBOOL' 'RBRACE'
    action 'LTEQEQGT' (noprec):   reduce FunAttr --> 'LBRACE' 'COLON' ID 'LITBOOL' 'RBRACE'
    action 'TYPE' (noprec):   reduce FunAttr --> 'LBRACE' 'COLON' ID 'LITBOOL' 'RBRACE'
    action 'CONST' (noprec):   reduce FunAttr --> 'LBRACE' 'COLON' ID 'LITBOOL' 'RBRACE'
    action 'FUNCTION' (noprec):   reduce FunAttr --> 'LBRACE' 'COLON' ID 'LITBOOL' 'RBRACE'
    action 'RETURNS' (noprec):   reduce FunAttr --> 'LBRACE' 'COLON' ID 'LITBOOL' 'RBRACE'
    action 'AXIOM' (noprec):   reduce FunAttr --> 'LBRACE' 'COLON' ID 'LITBOOL' 'RBRACE'
    action 'PROCEDURE' (noprec):   reduce FunAttr --> 'LBRACE' 'COLON' ID 'LITBOOL' 'RBRACE'
    action 'IMPLEMENTATION' (noprec):   reduce FunAttr --> 'LBRACE' 'COLON' ID 'LITBOOL' 'RBRACE'
    action 'REQUIRES' (noprec):   reduce FunAttr --> 'LBRACE' 'COLON' ID 'LITBOOL' 'RBRACE'
    action 'ENSURES' (noprec):   reduce FunAttr --> 'LBRACE' 'COLON' ID 'LITBOOL' 'RBRACE'
    action 'LT' (noprec):   reduce FunAttr --> 'LBRACE' 'COLON' ID 'LITBOOL' 'RBRACE'
    action 'GT' (noprec):   reduce FunAttr --> 'LBRACE' 'COLON' ID 'LITBOOL' 'RBRACE'
    action 'EQ' (noprec):   reduce FunAttr --> 'LBRACE' 'COLON' ID 'LITBOOL' 'RBRACE'
    action 'BANG' (noprec):   reduce FunAttr --> 'LBRACE' 'COLON' ID 'LITBOOL' 'RBRACE'
    action 'COMMA' (noprec):   reduce FunAttr --> 'LBRACE' 'COLON' ID 'LITBOOL' 'RBRACE'
    action 'LE' (noprec):   reduce FunAttr --> 'LBRACE' 'COLON' ID 'LITBOOL' 'RBRACE'
    action 'GE' (noprec):   reduce FunAttr --> 'LBRACE' 'COLON' ID 'LITBOOL' 'RBRACE'
    action 'EQEQ' (noprec):   reduce FunAttr --> 'LBRACE' 'COLON' ID 'LITBOOL' 'RBRACE'
    action 'NE' (noprec):   reduce FunAttr --> 'LBRACE' 'COLON' ID 'LITBOOL' 'RBRACE'
    action 'PLUS' (noprec):   reduce FunAttr --> 'LBRACE' 'COLON' ID 'LITBOOL' 'RBRACE'
    action 'MINUS' (noprec):   reduce FunAttr --> 'LBRACE' 'COLON' ID 'LITBOOL' 'RBRACE'
    action 'STAR' (noprec):   reduce FunAttr --> 'LBRACE' 'COLON' ID 'LITBOOL' 'RBRACE'
    action 'SLASH' (noprec):   reduce FunAttr --> 'LBRACE' 'COLON' ID 'LITBOOL' 'RBRACE'
    action 'PERCENT' (noprec):   reduce FunAttr --> 'LBRACE' 'COLON' ID 'LITBOOL' 'RBRACE'
    action 'AMPAMP' (noprec):   reduce FunAttr --> 'LBRACE' 'COLON' ID 'LITBOOL' 'RBRACE'
    action 'BARBAR' (noprec):   reduce FunAttr --> 'LBRACE' 'COLON' ID 'LITBOOL' 'RBRACE'
    action 'COLONEQ' (noprec):   reduce FunAttr --> 'LBRACE' 'COLON' ID 'LITBOOL' 'RBRACE'
    action 'INT' (noprec):   reduce FunAttr --> 'LBRACE' 'COLON' ID 'LITBOOL' 'RBRACE'
    action 'BOOL' (noprec):   reduce FunAttr --> 'LBRACE' 'COLON' ID 'LITBOOL' 'RBRACE'
    action 'IF' (noprec):   reduce FunAttr --> 'LBRACE' 'COLON' ID 'LITBOOL' 'RBRACE'
    action 'RETURN' (noprec):   reduce FunAttr --> 'LBRACE' 'COLON' ID 'LITBOOL' 'RBRACE'
    action 'VAR' (noprec):   reduce FunAttr --> 'LBRACE' 'COLON' ID 'LITBOOL' 'RBRACE'
    action 'LBRACE' (noprec):   reduce FunAttr --> 'LBRACE' 'COLON' ID 'LITBOOL' 'RBRACE'
    action 'RBRACE' (noprec):   reduce FunAttr --> 'LBRACE' 'COLON' ID 'LITBOOL' 'RBRACE'
    action 'SEMI' (noprec):   reduce FunAttr --> 'LBRACE' 'COLON' ID 'LITBOOL' 'RBRACE'
    action 'COLON' (noprec):   reduce FunAttr --> 'LBRACE' 'COLON' ID 'LITBOOL' 'RBRACE'
    action 'LPAREN' (noprec):   reduce FunAttr --> 'LBRACE' 'COLON' ID 'LITBOOL' 'RBRACE'
    action 'RPAREN' (noprec):   reduce FunAttr --> 'LBRACE' 'COLON' ID 'LITBOOL' 'RBRACE'
    action 'LBRACKET' (noprec):   reduce FunAttr --> 'LBRACE' 'COLON' ID 'LITBOOL' 'RBRACE'
    action 'RBRACKET' (noprec):   reduce FunAttr --> 'LBRACE' 'COLON' ID 'LITBOOL' 'RBRACE'
    action 'LITBOOL' (noprec):   reduce FunAttr --> 'LBRACE' 'COLON' ID 'LITBOOL' 'RBRACE'
    action 'LITINT' (noprec):   reduce FunAttr --> 'LBRACE' 'COLON' ID 'LITBOOL' 'RBRACE'
    action 'QLID' (noprec):   reduce FunAttr --> 'LBRACE' 'COLON' ID 'LITBOOL' 'RBRACE'
    action 'QUID' (noprec):   reduce FunAttr --> 'LBRACE' 'COLON' ID 'LITBOOL' 'RBRACE'
    action 'DLID' (noprec):   reduce FunAttr --> 'LBRACE' 'COLON' ID 'LITBOOL' 'RBRACE'
    action 'DUID' (noprec):   reduce FunAttr --> 'LBRACE' 'COLON' ID 'LITBOOL' 'RBRACE'
    action 'LID' (noprec):   reduce FunAttr --> 'LBRACE' 'COLON' ID 'LITBOOL' 'RBRACE'
    action 'UID' (noprec):   reduce FunAttr --> 'LBRACE' 'COLON' ID 'LITBOOL' 'RBRACE'
    action 'error' (noprec):   reduce FunAttr --> 'LBRACE' 'COLON' ID 'LITBOOL' 'RBRACE'
    action '#' (noprec):   reduce FunAttr --> 'LBRACE' 'COLON' ID 'LITBOOL' 'RBRACE'
    action '$$' (noprec):   reduce FunAttr --> 'LBRACE' 'COLON' ID 'LITBOOL' 'RBRACE'

  immediate action:   reduce FunAttr --> 'LBRACE' 'COLON' ID 'LITBOOL' 'RBRACE'
 gotos:

state 320:
  items:
    ProcOrImpl -> 'PROCEDURE' . 

  actions:
    action 'EOF' (noprec):   reduce ProcOrImpl --> 'PROCEDURE'
    action 'EAX' (noprec):   reduce ProcOrImpl --> 'PROCEDURE'
    action 'EBX' (noprec):   reduce ProcOrImpl --> 'PROCEDURE'
    action 'ECX' (noprec):   reduce ProcOrImpl --> 'PROCEDURE'
    action 'EDX' (noprec):   reduce ProcOrImpl --> 'PROCEDURE'
    action 'ESI' (noprec):   reduce ProcOrImpl --> 'PROCEDURE'
    action 'EDI' (noprec):   reduce ProcOrImpl --> 'PROCEDURE'
    action 'EBP' (noprec):   reduce ProcOrImpl --> 'PROCEDURE'
    action 'ESP' (noprec):   reduce ProcOrImpl --> 'PROCEDURE'
    action 'MODIFIES' (noprec):   reduce ProcOrImpl --> 'PROCEDURE'
    action 'INVARIANT' (noprec):   reduce ProcOrImpl --> 'PROCEDURE'
    action 'ASSERT' (noprec):   reduce ProcOrImpl --> 'PROCEDURE'
    action 'HAVOC' (noprec):   reduce ProcOrImpl --> 'PROCEDURE'
    action 'GOTO' (noprec):   reduce ProcOrImpl --> 'PROCEDURE'
    action 'CALL' (noprec):   reduce ProcOrImpl --> 'PROCEDURE'
    action 'CCALL' (noprec):   reduce ProcOrImpl --> 'PROCEDURE'
    action 'RET' (noprec):   reduce ProcOrImpl --> 'PROCEDURE'
    action 'IRET' (noprec):   reduce ProcOrImpl --> 'PROCEDURE'
    action 'GO' (noprec):   reduce ProcOrImpl --> 'PROCEDURE'
    action 'FORALL' (noprec):   reduce ProcOrImpl --> 'PROCEDURE'
    action 'EXISTS' (noprec):   reduce ProcOrImpl --> 'PROCEDURE'
    action 'OLD' (noprec):   reduce ProcOrImpl --> 'PROCEDURE'
    action 'COLONCOLON' (noprec):   reduce ProcOrImpl --> 'PROCEDURE'
    action 'EQEQGT' (noprec):   reduce ProcOrImpl --> 'PROCEDURE'
    action 'LTEQEQGT' (noprec):   reduce ProcOrImpl --> 'PROCEDURE'
    action 'TYPE' (noprec):   reduce ProcOrImpl --> 'PROCEDURE'
    action 'CONST' (noprec):   reduce ProcOrImpl --> 'PROCEDURE'
    action 'FUNCTION' (noprec):   reduce ProcOrImpl --> 'PROCEDURE'
    action 'RETURNS' (noprec):   reduce ProcOrImpl --> 'PROCEDURE'
    action 'AXIOM' (noprec):   reduce ProcOrImpl --> 'PROCEDURE'
    action 'PROCEDURE' (noprec):   reduce ProcOrImpl --> 'PROCEDURE'
    action 'IMPLEMENTATION' (noprec):   reduce ProcOrImpl --> 'PROCEDURE'
    action 'REQUIRES' (noprec):   reduce ProcOrImpl --> 'PROCEDURE'
    action 'ENSURES' (noprec):   reduce ProcOrImpl --> 'PROCEDURE'
    action 'LT' (noprec):   reduce ProcOrImpl --> 'PROCEDURE'
    action 'GT' (noprec):   reduce ProcOrImpl --> 'PROCEDURE'
    action 'EQ' (noprec):   reduce ProcOrImpl --> 'PROCEDURE'
    action 'BANG' (noprec):   reduce ProcOrImpl --> 'PROCEDURE'
    action 'COMMA' (noprec):   reduce ProcOrImpl --> 'PROCEDURE'
    action 'LE' (noprec):   reduce ProcOrImpl --> 'PROCEDURE'
    action 'GE' (noprec):   reduce ProcOrImpl --> 'PROCEDURE'
    action 'EQEQ' (noprec):   reduce ProcOrImpl --> 'PROCEDURE'
    action 'NE' (noprec):   reduce ProcOrImpl --> 'PROCEDURE'
    action 'PLUS' (noprec):   reduce ProcOrImpl --> 'PROCEDURE'
    action 'MINUS' (noprec):   reduce ProcOrImpl --> 'PROCEDURE'
    action 'STAR' (noprec):   reduce ProcOrImpl --> 'PROCEDURE'
    action 'SLASH' (noprec):   reduce ProcOrImpl --> 'PROCEDURE'
    action 'PERCENT' (noprec):   reduce ProcOrImpl --> 'PROCEDURE'
    action 'AMPAMP' (noprec):   reduce ProcOrImpl --> 'PROCEDURE'
    action 'BARBAR' (noprec):   reduce ProcOrImpl --> 'PROCEDURE'
    action 'COLONEQ' (noprec):   reduce ProcOrImpl --> 'PROCEDURE'
    action 'INT' (noprec):   reduce ProcOrImpl --> 'PROCEDURE'
    action 'BOOL' (noprec):   reduce ProcOrImpl --> 'PROCEDURE'
    action 'IF' (noprec):   reduce ProcOrImpl --> 'PROCEDURE'
    action 'RETURN' (noprec):   reduce ProcOrImpl --> 'PROCEDURE'
    action 'VAR' (noprec):   reduce ProcOrImpl --> 'PROCEDURE'
    action 'LBRACE' (noprec):   reduce ProcOrImpl --> 'PROCEDURE'
    action 'RBRACE' (noprec):   reduce ProcOrImpl --> 'PROCEDURE'
    action 'SEMI' (noprec):   reduce ProcOrImpl --> 'PROCEDURE'
    action 'COLON' (noprec):   reduce ProcOrImpl --> 'PROCEDURE'
    action 'LPAREN' (noprec):   reduce ProcOrImpl --> 'PROCEDURE'
    action 'RPAREN' (noprec):   reduce ProcOrImpl --> 'PROCEDURE'
    action 'LBRACKET' (noprec):   reduce ProcOrImpl --> 'PROCEDURE'
    action 'RBRACKET' (noprec):   reduce ProcOrImpl --> 'PROCEDURE'
    action 'LITBOOL' (noprec):   reduce ProcOrImpl --> 'PROCEDURE'
    action 'LITINT' (noprec):   reduce ProcOrImpl --> 'PROCEDURE'
    action 'QLID' (noprec):   reduce ProcOrImpl --> 'PROCEDURE'
    action 'QUID' (noprec):   reduce ProcOrImpl --> 'PROCEDURE'
    action 'DLID' (noprec):   reduce ProcOrImpl --> 'PROCEDURE'
    action 'DUID' (noprec):   reduce ProcOrImpl --> 'PROCEDURE'
    action 'LID' (noprec):   reduce ProcOrImpl --> 'PROCEDURE'
    action 'UID' (noprec):   reduce ProcOrImpl --> 'PROCEDURE'
    action 'error' (noprec):   reduce ProcOrImpl --> 'PROCEDURE'
    action '#' (noprec):   reduce ProcOrImpl --> 'PROCEDURE'
    action '$$' (noprec):   reduce ProcOrImpl --> 'PROCEDURE'

  immediate action:   reduce ProcOrImpl --> 'PROCEDURE'
 gotos:

state 321:
  items:
    ProcOrImpl -> 'IMPLEMENTATION' . 

  actions:
    action 'EOF' (noprec):   reduce ProcOrImpl --> 'IMPLEMENTATION'
    action 'EAX' (noprec):   reduce ProcOrImpl --> 'IMPLEMENTATION'
    action 'EBX' (noprec):   reduce ProcOrImpl --> 'IMPLEMENTATION'
    action 'ECX' (noprec):   reduce ProcOrImpl --> 'IMPLEMENTATION'
    action 'EDX' (noprec):   reduce ProcOrImpl --> 'IMPLEMENTATION'
    action 'ESI' (noprec):   reduce ProcOrImpl --> 'IMPLEMENTATION'
    action 'EDI' (noprec):   reduce ProcOrImpl --> 'IMPLEMENTATION'
    action 'EBP' (noprec):   reduce ProcOrImpl --> 'IMPLEMENTATION'
    action 'ESP' (noprec):   reduce ProcOrImpl --> 'IMPLEMENTATION'
    action 'MODIFIES' (noprec):   reduce ProcOrImpl --> 'IMPLEMENTATION'
    action 'INVARIANT' (noprec):   reduce ProcOrImpl --> 'IMPLEMENTATION'
    action 'ASSERT' (noprec):   reduce ProcOrImpl --> 'IMPLEMENTATION'
    action 'HAVOC' (noprec):   reduce ProcOrImpl --> 'IMPLEMENTATION'
    action 'GOTO' (noprec):   reduce ProcOrImpl --> 'IMPLEMENTATION'
    action 'CALL' (noprec):   reduce ProcOrImpl --> 'IMPLEMENTATION'
    action 'CCALL' (noprec):   reduce ProcOrImpl --> 'IMPLEMENTATION'
    action 'RET' (noprec):   reduce ProcOrImpl --> 'IMPLEMENTATION'
    action 'IRET' (noprec):   reduce ProcOrImpl --> 'IMPLEMENTATION'
    action 'GO' (noprec):   reduce ProcOrImpl --> 'IMPLEMENTATION'
    action 'FORALL' (noprec):   reduce ProcOrImpl --> 'IMPLEMENTATION'
    action 'EXISTS' (noprec):   reduce ProcOrImpl --> 'IMPLEMENTATION'
    action 'OLD' (noprec):   reduce ProcOrImpl --> 'IMPLEMENTATION'
    action 'COLONCOLON' (noprec):   reduce ProcOrImpl --> 'IMPLEMENTATION'
    action 'EQEQGT' (noprec):   reduce ProcOrImpl --> 'IMPLEMENTATION'
    action 'LTEQEQGT' (noprec):   reduce ProcOrImpl --> 'IMPLEMENTATION'
    action 'TYPE' (noprec):   reduce ProcOrImpl --> 'IMPLEMENTATION'
    action 'CONST' (noprec):   reduce ProcOrImpl --> 'IMPLEMENTATION'
    action 'FUNCTION' (noprec):   reduce ProcOrImpl --> 'IMPLEMENTATION'
    action 'RETURNS' (noprec):   reduce ProcOrImpl --> 'IMPLEMENTATION'
    action 'AXIOM' (noprec):   reduce ProcOrImpl --> 'IMPLEMENTATION'
    action 'PROCEDURE' (noprec):   reduce ProcOrImpl --> 'IMPLEMENTATION'
    action 'IMPLEMENTATION' (noprec):   reduce ProcOrImpl --> 'IMPLEMENTATION'
    action 'REQUIRES' (noprec):   reduce ProcOrImpl --> 'IMPLEMENTATION'
    action 'ENSURES' (noprec):   reduce ProcOrImpl --> 'IMPLEMENTATION'
    action 'LT' (noprec):   reduce ProcOrImpl --> 'IMPLEMENTATION'
    action 'GT' (noprec):   reduce ProcOrImpl --> 'IMPLEMENTATION'
    action 'EQ' (noprec):   reduce ProcOrImpl --> 'IMPLEMENTATION'
    action 'BANG' (noprec):   reduce ProcOrImpl --> 'IMPLEMENTATION'
    action 'COMMA' (noprec):   reduce ProcOrImpl --> 'IMPLEMENTATION'
    action 'LE' (noprec):   reduce ProcOrImpl --> 'IMPLEMENTATION'
    action 'GE' (noprec):   reduce ProcOrImpl --> 'IMPLEMENTATION'
    action 'EQEQ' (noprec):   reduce ProcOrImpl --> 'IMPLEMENTATION'
    action 'NE' (noprec):   reduce ProcOrImpl --> 'IMPLEMENTATION'
    action 'PLUS' (noprec):   reduce ProcOrImpl --> 'IMPLEMENTATION'
    action 'MINUS' (noprec):   reduce ProcOrImpl --> 'IMPLEMENTATION'
    action 'STAR' (noprec):   reduce ProcOrImpl --> 'IMPLEMENTATION'
    action 'SLASH' (noprec):   reduce ProcOrImpl --> 'IMPLEMENTATION'
    action 'PERCENT' (noprec):   reduce ProcOrImpl --> 'IMPLEMENTATION'
    action 'AMPAMP' (noprec):   reduce ProcOrImpl --> 'IMPLEMENTATION'
    action 'BARBAR' (noprec):   reduce ProcOrImpl --> 'IMPLEMENTATION'
    action 'COLONEQ' (noprec):   reduce ProcOrImpl --> 'IMPLEMENTATION'
    action 'INT' (noprec):   reduce ProcOrImpl --> 'IMPLEMENTATION'
    action 'BOOL' (noprec):   reduce ProcOrImpl --> 'IMPLEMENTATION'
    action 'IF' (noprec):   reduce ProcOrImpl --> 'IMPLEMENTATION'
    action 'RETURN' (noprec):   reduce ProcOrImpl --> 'IMPLEMENTATION'
    action 'VAR' (noprec):   reduce ProcOrImpl --> 'IMPLEMENTATION'
    action 'LBRACE' (noprec):   reduce ProcOrImpl --> 'IMPLEMENTATION'
    action 'RBRACE' (noprec):   reduce ProcOrImpl --> 'IMPLEMENTATION'
    action 'SEMI' (noprec):   reduce ProcOrImpl --> 'IMPLEMENTATION'
    action 'COLON' (noprec):   reduce ProcOrImpl --> 'IMPLEMENTATION'
    action 'LPAREN' (noprec):   reduce ProcOrImpl --> 'IMPLEMENTATION'
    action 'RPAREN' (noprec):   reduce ProcOrImpl --> 'IMPLEMENTATION'
    action 'LBRACKET' (noprec):   reduce ProcOrImpl --> 'IMPLEMENTATION'
    action 'RBRACKET' (noprec):   reduce ProcOrImpl --> 'IMPLEMENTATION'
    action 'LITBOOL' (noprec):   reduce ProcOrImpl --> 'IMPLEMENTATION'
    action 'LITINT' (noprec):   reduce ProcOrImpl --> 'IMPLEMENTATION'
    action 'QLID' (noprec):   reduce ProcOrImpl --> 'IMPLEMENTATION'
    action 'QUID' (noprec):   reduce ProcOrImpl --> 'IMPLEMENTATION'
    action 'DLID' (noprec):   reduce ProcOrImpl --> 'IMPLEMENTATION'
    action 'DUID' (noprec):   reduce ProcOrImpl --> 'IMPLEMENTATION'
    action 'LID' (noprec):   reduce ProcOrImpl --> 'IMPLEMENTATION'
    action 'UID' (noprec):   reduce ProcOrImpl --> 'IMPLEMENTATION'
    action 'error' (noprec):   reduce ProcOrImpl --> 'IMPLEMENTATION'
    action '#' (noprec):   reduce ProcOrImpl --> 'IMPLEMENTATION'
    action '$$' (noprec):   reduce ProcOrImpl --> 'IMPLEMENTATION'

  immediate action:   reduce ProcOrImpl --> 'IMPLEMENTATION'
 gotos:

state 322:
  items:
    FunRet -> Type . 

  actions:
    action 'EOF' (noprec):   reduce FunRet --> Type
    action 'EAX' (noprec):   reduce FunRet --> Type
    action 'EBX' (noprec):   reduce FunRet --> Type
    action 'ECX' (noprec):   reduce FunRet --> Type
    action 'EDX' (noprec):   reduce FunRet --> Type
    action 'ESI' (noprec):   reduce FunRet --> Type
    action 'EDI' (noprec):   reduce FunRet --> Type
    action 'EBP' (noprec):   reduce FunRet --> Type
    action 'ESP' (noprec):   reduce FunRet --> Type
    action 'MODIFIES' (noprec):   reduce FunRet --> Type
    action 'INVARIANT' (noprec):   reduce FunRet --> Type
    action 'ASSERT' (noprec):   reduce FunRet --> Type
    action 'HAVOC' (noprec):   reduce FunRet --> Type
    action 'GOTO' (noprec):   reduce FunRet --> Type
    action 'CALL' (noprec):   reduce FunRet --> Type
    action 'CCALL' (noprec):   reduce FunRet --> Type
    action 'RET' (noprec):   reduce FunRet --> Type
    action 'IRET' (noprec):   reduce FunRet --> Type
    action 'GO' (noprec):   reduce FunRet --> Type
    action 'FORALL' (noprec):   reduce FunRet --> Type
    action 'EXISTS' (noprec):   reduce FunRet --> Type
    action 'OLD' (noprec):   reduce FunRet --> Type
    action 'COLONCOLON' (noprec):   reduce FunRet --> Type
    action 'EQEQGT' (noprec):   reduce FunRet --> Type
    action 'LTEQEQGT' (noprec):   reduce FunRet --> Type
    action 'TYPE' (noprec):   reduce FunRet --> Type
    action 'CONST' (noprec):   reduce FunRet --> Type
    action 'FUNCTION' (noprec):   reduce FunRet --> Type
    action 'RETURNS' (noprec):   reduce FunRet --> Type
    action 'AXIOM' (noprec):   reduce FunRet --> Type
    action 'PROCEDURE' (noprec):   reduce FunRet --> Type
    action 'IMPLEMENTATION' (noprec):   reduce FunRet --> Type
    action 'REQUIRES' (noprec):   reduce FunRet --> Type
    action 'ENSURES' (noprec):   reduce FunRet --> Type
    action 'LT' (noprec):   reduce FunRet --> Type
    action 'GT' (noprec):   reduce FunRet --> Type
    action 'EQ' (noprec):   reduce FunRet --> Type
    action 'BANG' (noprec):   reduce FunRet --> Type
    action 'COMMA' (noprec):   reduce FunRet --> Type
    action 'LE' (noprec):   reduce FunRet --> Type
    action 'GE' (noprec):   reduce FunRet --> Type
    action 'EQEQ' (noprec):   reduce FunRet --> Type
    action 'NE' (noprec):   reduce FunRet --> Type
    action 'PLUS' (noprec):   reduce FunRet --> Type
    action 'MINUS' (noprec):   reduce FunRet --> Type
    action 'STAR' (noprec):   reduce FunRet --> Type
    action 'SLASH' (noprec):   reduce FunRet --> Type
    action 'PERCENT' (noprec):   reduce FunRet --> Type
    action 'AMPAMP' (noprec):   reduce FunRet --> Type
    action 'BARBAR' (noprec):   reduce FunRet --> Type
    action 'COLONEQ' (noprec):   reduce FunRet --> Type
    action 'INT' (noprec):   reduce FunRet --> Type
    action 'BOOL' (noprec):   reduce FunRet --> Type
    action 'IF' (noprec):   reduce FunRet --> Type
    action 'RETURN' (noprec):   reduce FunRet --> Type
    action 'VAR' (noprec):   reduce FunRet --> Type
    action 'LBRACE' (noprec):   reduce FunRet --> Type
    action 'RBRACE' (noprec):   reduce FunRet --> Type
    action 'SEMI' (noprec):   reduce FunRet --> Type
    action 'COLON' (noprec):   reduce FunRet --> Type
    action 'LPAREN' (noprec):   reduce FunRet --> Type
    action 'RPAREN' (noprec):   reduce FunRet --> Type
    action 'LBRACKET' (noprec):   reduce FunRet --> Type
    action 'RBRACKET' (noprec):   reduce FunRet --> Type
    action 'LITBOOL' (noprec):   reduce FunRet --> Type
    action 'LITINT' (noprec):   reduce FunRet --> Type
    action 'QLID' (noprec):   reduce FunRet --> Type
    action 'QUID' (noprec):   reduce FunRet --> Type
    action 'DLID' (noprec):   reduce FunRet --> Type
    action 'DUID' (noprec):   reduce FunRet --> Type
    action 'LID' (noprec):   reduce FunRet --> Type
    action 'UID' (noprec):   reduce FunRet --> Type
    action 'error' (noprec):   reduce FunRet --> Type
    action '#' (noprec):   reduce FunRet --> Type
    action '$$' (noprec):   reduce FunRet --> Type

  immediate action:   reduce FunRet --> Type
 gotos:

state 323:
  items:
    FunRet -> AnyId 'COLON' . Type

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   shift 6
    action 'BOOL' (noprec):   shift 7
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (explicit left 10000):   shift 8
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   shift 145
    action 'QUID' (noprec):   shift 144
    action 'DLID' (noprec):   shift 143
    action 'DUID' (noprec):   shift 142
    action 'LID' (noprec):   shift 4
    action 'UID' (noprec):   shift 5
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto ID: 141
    goto Type: 324
    goto AnyId: 12

state 324:
  items:
    FunRet -> AnyId 'COLON' Type . 

  actions:
    action 'EOF' (noprec):   reduce FunRet --> AnyId 'COLON' Type
    action 'EAX' (noprec):   reduce FunRet --> AnyId 'COLON' Type
    action 'EBX' (noprec):   reduce FunRet --> AnyId 'COLON' Type
    action 'ECX' (noprec):   reduce FunRet --> AnyId 'COLON' Type
    action 'EDX' (noprec):   reduce FunRet --> AnyId 'COLON' Type
    action 'ESI' (noprec):   reduce FunRet --> AnyId 'COLON' Type
    action 'EDI' (noprec):   reduce FunRet --> AnyId 'COLON' Type
    action 'EBP' (noprec):   reduce FunRet --> AnyId 'COLON' Type
    action 'ESP' (noprec):   reduce FunRet --> AnyId 'COLON' Type
    action 'MODIFIES' (noprec):   reduce FunRet --> AnyId 'COLON' Type
    action 'INVARIANT' (noprec):   reduce FunRet --> AnyId 'COLON' Type
    action 'ASSERT' (noprec):   reduce FunRet --> AnyId 'COLON' Type
    action 'HAVOC' (noprec):   reduce FunRet --> AnyId 'COLON' Type
    action 'GOTO' (noprec):   reduce FunRet --> AnyId 'COLON' Type
    action 'CALL' (noprec):   reduce FunRet --> AnyId 'COLON' Type
    action 'CCALL' (noprec):   reduce FunRet --> AnyId 'COLON' Type
    action 'RET' (noprec):   reduce FunRet --> AnyId 'COLON' Type
    action 'IRET' (noprec):   reduce FunRet --> AnyId 'COLON' Type
    action 'GO' (noprec):   reduce FunRet --> AnyId 'COLON' Type
    action 'FORALL' (noprec):   reduce FunRet --> AnyId 'COLON' Type
    action 'EXISTS' (noprec):   reduce FunRet --> AnyId 'COLON' Type
    action 'OLD' (noprec):   reduce FunRet --> AnyId 'COLON' Type
    action 'COLONCOLON' (noprec):   reduce FunRet --> AnyId 'COLON' Type
    action 'EQEQGT' (noprec):   reduce FunRet --> AnyId 'COLON' Type
    action 'LTEQEQGT' (noprec):   reduce FunRet --> AnyId 'COLON' Type
    action 'TYPE' (noprec):   reduce FunRet --> AnyId 'COLON' Type
    action 'CONST' (noprec):   reduce FunRet --> AnyId 'COLON' Type
    action 'FUNCTION' (noprec):   reduce FunRet --> AnyId 'COLON' Type
    action 'RETURNS' (noprec):   reduce FunRet --> AnyId 'COLON' Type
    action 'AXIOM' (noprec):   reduce FunRet --> AnyId 'COLON' Type
    action 'PROCEDURE' (noprec):   reduce FunRet --> AnyId 'COLON' Type
    action 'IMPLEMENTATION' (noprec):   reduce FunRet --> AnyId 'COLON' Type
    action 'REQUIRES' (noprec):   reduce FunRet --> AnyId 'COLON' Type
    action 'ENSURES' (noprec):   reduce FunRet --> AnyId 'COLON' Type
    action 'LT' (noprec):   reduce FunRet --> AnyId 'COLON' Type
    action 'GT' (noprec):   reduce FunRet --> AnyId 'COLON' Type
    action 'EQ' (noprec):   reduce FunRet --> AnyId 'COLON' Type
    action 'BANG' (noprec):   reduce FunRet --> AnyId 'COLON' Type
    action 'COMMA' (noprec):   reduce FunRet --> AnyId 'COLON' Type
    action 'LE' (noprec):   reduce FunRet --> AnyId 'COLON' Type
    action 'GE' (noprec):   reduce FunRet --> AnyId 'COLON' Type
    action 'EQEQ' (noprec):   reduce FunRet --> AnyId 'COLON' Type
    action 'NE' (noprec):   reduce FunRet --> AnyId 'COLON' Type
    action 'PLUS' (noprec):   reduce FunRet --> AnyId 'COLON' Type
    action 'MINUS' (noprec):   reduce FunRet --> AnyId 'COLON' Type
    action 'STAR' (noprec):   reduce FunRet --> AnyId 'COLON' Type
    action 'SLASH' (noprec):   reduce FunRet --> AnyId 'COLON' Type
    action 'PERCENT' (noprec):   reduce FunRet --> AnyId 'COLON' Type
    action 'AMPAMP' (noprec):   reduce FunRet --> AnyId 'COLON' Type
    action 'BARBAR' (noprec):   reduce FunRet --> AnyId 'COLON' Type
    action 'COLONEQ' (noprec):   reduce FunRet --> AnyId 'COLON' Type
    action 'INT' (noprec):   reduce FunRet --> AnyId 'COLON' Type
    action 'BOOL' (noprec):   reduce FunRet --> AnyId 'COLON' Type
    action 'IF' (noprec):   reduce FunRet --> AnyId 'COLON' Type
    action 'RETURN' (noprec):   reduce FunRet --> AnyId 'COLON' Type
    action 'VAR' (noprec):   reduce FunRet --> AnyId 'COLON' Type
    action 'LBRACE' (noprec):   reduce FunRet --> AnyId 'COLON' Type
    action 'RBRACE' (noprec):   reduce FunRet --> AnyId 'COLON' Type
    action 'SEMI' (noprec):   reduce FunRet --> AnyId 'COLON' Type
    action 'COLON' (noprec):   reduce FunRet --> AnyId 'COLON' Type
    action 'LPAREN' (noprec):   reduce FunRet --> AnyId 'COLON' Type
    action 'RPAREN' (noprec):   reduce FunRet --> AnyId 'COLON' Type
    action 'LBRACKET' (noprec):   reduce FunRet --> AnyId 'COLON' Type
    action 'RBRACKET' (noprec):   reduce FunRet --> AnyId 'COLON' Type
    action 'LITBOOL' (noprec):   reduce FunRet --> AnyId 'COLON' Type
    action 'LITINT' (noprec):   reduce FunRet --> AnyId 'COLON' Type
    action 'QLID' (noprec):   reduce FunRet --> AnyId 'COLON' Type
    action 'QUID' (noprec):   reduce FunRet --> AnyId 'COLON' Type
    action 'DLID' (noprec):   reduce FunRet --> AnyId 'COLON' Type
    action 'DUID' (noprec):   reduce FunRet --> AnyId 'COLON' Type
    action 'LID' (noprec):   reduce FunRet --> AnyId 'COLON' Type
    action 'UID' (noprec):   reduce FunRet --> AnyId 'COLON' Type
    action 'error' (noprec):   reduce FunRet --> AnyId 'COLON' Type
    action '#' (noprec):   reduce FunRet --> AnyId 'COLON' Type
    action '$$' (noprec):   reduce FunRet --> AnyId 'COLON' Type

  immediate action:   reduce FunRet --> AnyId 'COLON' Type
 gotos:

state 325:
  items:
    SpecialProcDecl -> 'CCALL' . 

  actions:
    action 'EOF' (noprec):   reduce SpecialProcDecl --> 'CCALL'
    action 'EAX' (noprec):   reduce SpecialProcDecl --> 'CCALL'
    action 'EBX' (noprec):   reduce SpecialProcDecl --> 'CCALL'
    action 'ECX' (noprec):   reduce SpecialProcDecl --> 'CCALL'
    action 'EDX' (noprec):   reduce SpecialProcDecl --> 'CCALL'
    action 'ESI' (noprec):   reduce SpecialProcDecl --> 'CCALL'
    action 'EDI' (noprec):   reduce SpecialProcDecl --> 'CCALL'
    action 'EBP' (noprec):   reduce SpecialProcDecl --> 'CCALL'
    action 'ESP' (noprec):   reduce SpecialProcDecl --> 'CCALL'
    action 'MODIFIES' (noprec):   reduce SpecialProcDecl --> 'CCALL'
    action 'INVARIANT' (noprec):   reduce SpecialProcDecl --> 'CCALL'
    action 'ASSERT' (noprec):   reduce SpecialProcDecl --> 'CCALL'
    action 'HAVOC' (noprec):   reduce SpecialProcDecl --> 'CCALL'
    action 'GOTO' (noprec):   reduce SpecialProcDecl --> 'CCALL'
    action 'CALL' (noprec):   reduce SpecialProcDecl --> 'CCALL'
    action 'CCALL' (noprec):   reduce SpecialProcDecl --> 'CCALL'
    action 'RET' (noprec):   reduce SpecialProcDecl --> 'CCALL'
    action 'IRET' (noprec):   reduce SpecialProcDecl --> 'CCALL'
    action 'GO' (noprec):   reduce SpecialProcDecl --> 'CCALL'
    action 'FORALL' (noprec):   reduce SpecialProcDecl --> 'CCALL'
    action 'EXISTS' (noprec):   reduce SpecialProcDecl --> 'CCALL'
    action 'OLD' (noprec):   reduce SpecialProcDecl --> 'CCALL'
    action 'COLONCOLON' (noprec):   reduce SpecialProcDecl --> 'CCALL'
    action 'EQEQGT' (noprec):   reduce SpecialProcDecl --> 'CCALL'
    action 'LTEQEQGT' (noprec):   reduce SpecialProcDecl --> 'CCALL'
    action 'TYPE' (noprec):   reduce SpecialProcDecl --> 'CCALL'
    action 'CONST' (noprec):   reduce SpecialProcDecl --> 'CCALL'
    action 'FUNCTION' (noprec):   reduce SpecialProcDecl --> 'CCALL'
    action 'RETURNS' (noprec):   reduce SpecialProcDecl --> 'CCALL'
    action 'AXIOM' (noprec):   reduce SpecialProcDecl --> 'CCALL'
    action 'PROCEDURE' (noprec):   reduce SpecialProcDecl --> 'CCALL'
    action 'IMPLEMENTATION' (noprec):   reduce SpecialProcDecl --> 'CCALL'
    action 'REQUIRES' (noprec):   reduce SpecialProcDecl --> 'CCALL'
    action 'ENSURES' (noprec):   reduce SpecialProcDecl --> 'CCALL'
    action 'LT' (noprec):   reduce SpecialProcDecl --> 'CCALL'
    action 'GT' (noprec):   reduce SpecialProcDecl --> 'CCALL'
    action 'EQ' (noprec):   reduce SpecialProcDecl --> 'CCALL'
    action 'BANG' (noprec):   reduce SpecialProcDecl --> 'CCALL'
    action 'COMMA' (noprec):   reduce SpecialProcDecl --> 'CCALL'
    action 'LE' (noprec):   reduce SpecialProcDecl --> 'CCALL'
    action 'GE' (noprec):   reduce SpecialProcDecl --> 'CCALL'
    action 'EQEQ' (noprec):   reduce SpecialProcDecl --> 'CCALL'
    action 'NE' (noprec):   reduce SpecialProcDecl --> 'CCALL'
    action 'PLUS' (noprec):   reduce SpecialProcDecl --> 'CCALL'
    action 'MINUS' (noprec):   reduce SpecialProcDecl --> 'CCALL'
    action 'STAR' (noprec):   reduce SpecialProcDecl --> 'CCALL'
    action 'SLASH' (noprec):   reduce SpecialProcDecl --> 'CCALL'
    action 'PERCENT' (noprec):   reduce SpecialProcDecl --> 'CCALL'
    action 'AMPAMP' (noprec):   reduce SpecialProcDecl --> 'CCALL'
    action 'BARBAR' (noprec):   reduce SpecialProcDecl --> 'CCALL'
    action 'COLONEQ' (noprec):   reduce SpecialProcDecl --> 'CCALL'
    action 'INT' (noprec):   reduce SpecialProcDecl --> 'CCALL'
    action 'BOOL' (noprec):   reduce SpecialProcDecl --> 'CCALL'
    action 'IF' (noprec):   reduce SpecialProcDecl --> 'CCALL'
    action 'RETURN' (noprec):   reduce SpecialProcDecl --> 'CCALL'
    action 'VAR' (noprec):   reduce SpecialProcDecl --> 'CCALL'
    action 'LBRACE' (noprec):   reduce SpecialProcDecl --> 'CCALL'
    action 'RBRACE' (noprec):   reduce SpecialProcDecl --> 'CCALL'
    action 'SEMI' (noprec):   reduce SpecialProcDecl --> 'CCALL'
    action 'COLON' (noprec):   reduce SpecialProcDecl --> 'CCALL'
    action 'LPAREN' (noprec):   reduce SpecialProcDecl --> 'CCALL'
    action 'RPAREN' (noprec):   reduce SpecialProcDecl --> 'CCALL'
    action 'LBRACKET' (noprec):   reduce SpecialProcDecl --> 'CCALL'
    action 'RBRACKET' (noprec):   reduce SpecialProcDecl --> 'CCALL'
    action 'LITBOOL' (noprec):   reduce SpecialProcDecl --> 'CCALL'
    action 'LITINT' (noprec):   reduce SpecialProcDecl --> 'CCALL'
    action 'QLID' (noprec):   reduce SpecialProcDecl --> 'CCALL'
    action 'QUID' (noprec):   reduce SpecialProcDecl --> 'CCALL'
    action 'DLID' (noprec):   reduce SpecialProcDecl --> 'CCALL'
    action 'DUID' (noprec):   reduce SpecialProcDecl --> 'CCALL'
    action 'LID' (noprec):   reduce SpecialProcDecl --> 'CCALL'
    action 'UID' (noprec):   reduce SpecialProcDecl --> 'CCALL'
    action 'error' (noprec):   reduce SpecialProcDecl --> 'CCALL'
    action '#' (noprec):   reduce SpecialProcDecl --> 'CCALL'
    action '$$' (noprec):   reduce SpecialProcDecl --> 'CCALL'

  immediate action:   reduce SpecialProcDecl --> 'CCALL'
 gotos:

state 326:
  items:
    SpecialProcDecl -> 'RET' . 

  actions:
    action 'EOF' (noprec):   reduce SpecialProcDecl --> 'RET'
    action 'EAX' (noprec):   reduce SpecialProcDecl --> 'RET'
    action 'EBX' (noprec):   reduce SpecialProcDecl --> 'RET'
    action 'ECX' (noprec):   reduce SpecialProcDecl --> 'RET'
    action 'EDX' (noprec):   reduce SpecialProcDecl --> 'RET'
    action 'ESI' (noprec):   reduce SpecialProcDecl --> 'RET'
    action 'EDI' (noprec):   reduce SpecialProcDecl --> 'RET'
    action 'EBP' (noprec):   reduce SpecialProcDecl --> 'RET'
    action 'ESP' (noprec):   reduce SpecialProcDecl --> 'RET'
    action 'MODIFIES' (noprec):   reduce SpecialProcDecl --> 'RET'
    action 'INVARIANT' (noprec):   reduce SpecialProcDecl --> 'RET'
    action 'ASSERT' (noprec):   reduce SpecialProcDecl --> 'RET'
    action 'HAVOC' (noprec):   reduce SpecialProcDecl --> 'RET'
    action 'GOTO' (noprec):   reduce SpecialProcDecl --> 'RET'
    action 'CALL' (noprec):   reduce SpecialProcDecl --> 'RET'
    action 'CCALL' (noprec):   reduce SpecialProcDecl --> 'RET'
    action 'RET' (noprec):   reduce SpecialProcDecl --> 'RET'
    action 'IRET' (noprec):   reduce SpecialProcDecl --> 'RET'
    action 'GO' (noprec):   reduce SpecialProcDecl --> 'RET'
    action 'FORALL' (noprec):   reduce SpecialProcDecl --> 'RET'
    action 'EXISTS' (noprec):   reduce SpecialProcDecl --> 'RET'
    action 'OLD' (noprec):   reduce SpecialProcDecl --> 'RET'
    action 'COLONCOLON' (noprec):   reduce SpecialProcDecl --> 'RET'
    action 'EQEQGT' (noprec):   reduce SpecialProcDecl --> 'RET'
    action 'LTEQEQGT' (noprec):   reduce SpecialProcDecl --> 'RET'
    action 'TYPE' (noprec):   reduce SpecialProcDecl --> 'RET'
    action 'CONST' (noprec):   reduce SpecialProcDecl --> 'RET'
    action 'FUNCTION' (noprec):   reduce SpecialProcDecl --> 'RET'
    action 'RETURNS' (noprec):   reduce SpecialProcDecl --> 'RET'
    action 'AXIOM' (noprec):   reduce SpecialProcDecl --> 'RET'
    action 'PROCEDURE' (noprec):   reduce SpecialProcDecl --> 'RET'
    action 'IMPLEMENTATION' (noprec):   reduce SpecialProcDecl --> 'RET'
    action 'REQUIRES' (noprec):   reduce SpecialProcDecl --> 'RET'
    action 'ENSURES' (noprec):   reduce SpecialProcDecl --> 'RET'
    action 'LT' (noprec):   reduce SpecialProcDecl --> 'RET'
    action 'GT' (noprec):   reduce SpecialProcDecl --> 'RET'
    action 'EQ' (noprec):   reduce SpecialProcDecl --> 'RET'
    action 'BANG' (noprec):   reduce SpecialProcDecl --> 'RET'
    action 'COMMA' (noprec):   reduce SpecialProcDecl --> 'RET'
    action 'LE' (noprec):   reduce SpecialProcDecl --> 'RET'
    action 'GE' (noprec):   reduce SpecialProcDecl --> 'RET'
    action 'EQEQ' (noprec):   reduce SpecialProcDecl --> 'RET'
    action 'NE' (noprec):   reduce SpecialProcDecl --> 'RET'
    action 'PLUS' (noprec):   reduce SpecialProcDecl --> 'RET'
    action 'MINUS' (noprec):   reduce SpecialProcDecl --> 'RET'
    action 'STAR' (noprec):   reduce SpecialProcDecl --> 'RET'
    action 'SLASH' (noprec):   reduce SpecialProcDecl --> 'RET'
    action 'PERCENT' (noprec):   reduce SpecialProcDecl --> 'RET'
    action 'AMPAMP' (noprec):   reduce SpecialProcDecl --> 'RET'
    action 'BARBAR' (noprec):   reduce SpecialProcDecl --> 'RET'
    action 'COLONEQ' (noprec):   reduce SpecialProcDecl --> 'RET'
    action 'INT' (noprec):   reduce SpecialProcDecl --> 'RET'
    action 'BOOL' (noprec):   reduce SpecialProcDecl --> 'RET'
    action 'IF' (noprec):   reduce SpecialProcDecl --> 'RET'
    action 'RETURN' (noprec):   reduce SpecialProcDecl --> 'RET'
    action 'VAR' (noprec):   reduce SpecialProcDecl --> 'RET'
    action 'LBRACE' (noprec):   reduce SpecialProcDecl --> 'RET'
    action 'RBRACE' (noprec):   reduce SpecialProcDecl --> 'RET'
    action 'SEMI' (noprec):   reduce SpecialProcDecl --> 'RET'
    action 'COLON' (noprec):   reduce SpecialProcDecl --> 'RET'
    action 'LPAREN' (noprec):   reduce SpecialProcDecl --> 'RET'
    action 'RPAREN' (noprec):   reduce SpecialProcDecl --> 'RET'
    action 'LBRACKET' (noprec):   reduce SpecialProcDecl --> 'RET'
    action 'RBRACKET' (noprec):   reduce SpecialProcDecl --> 'RET'
    action 'LITBOOL' (noprec):   reduce SpecialProcDecl --> 'RET'
    action 'LITINT' (noprec):   reduce SpecialProcDecl --> 'RET'
    action 'QLID' (noprec):   reduce SpecialProcDecl --> 'RET'
    action 'QUID' (noprec):   reduce SpecialProcDecl --> 'RET'
    action 'DLID' (noprec):   reduce SpecialProcDecl --> 'RET'
    action 'DUID' (noprec):   reduce SpecialProcDecl --> 'RET'
    action 'LID' (noprec):   reduce SpecialProcDecl --> 'RET'
    action 'UID' (noprec):   reduce SpecialProcDecl --> 'RET'
    action 'error' (noprec):   reduce SpecialProcDecl --> 'RET'
    action '#' (noprec):   reduce SpecialProcDecl --> 'RET'
    action '$$' (noprec):   reduce SpecialProcDecl --> 'RET'

  immediate action:   reduce SpecialProcDecl --> 'RET'
 gotos:

state 327:
  items:
    SpecialProcDecl -> 'IRET' . 

  actions:
    action 'EOF' (noprec):   reduce SpecialProcDecl --> 'IRET'
    action 'EAX' (noprec):   reduce SpecialProcDecl --> 'IRET'
    action 'EBX' (noprec):   reduce SpecialProcDecl --> 'IRET'
    action 'ECX' (noprec):   reduce SpecialProcDecl --> 'IRET'
    action 'EDX' (noprec):   reduce SpecialProcDecl --> 'IRET'
    action 'ESI' (noprec):   reduce SpecialProcDecl --> 'IRET'
    action 'EDI' (noprec):   reduce SpecialProcDecl --> 'IRET'
    action 'EBP' (noprec):   reduce SpecialProcDecl --> 'IRET'
    action 'ESP' (noprec):   reduce SpecialProcDecl --> 'IRET'
    action 'MODIFIES' (noprec):   reduce SpecialProcDecl --> 'IRET'
    action 'INVARIANT' (noprec):   reduce SpecialProcDecl --> 'IRET'
    action 'ASSERT' (noprec):   reduce SpecialProcDecl --> 'IRET'
    action 'HAVOC' (noprec):   reduce SpecialProcDecl --> 'IRET'
    action 'GOTO' (noprec):   reduce SpecialProcDecl --> 'IRET'
    action 'CALL' (noprec):   reduce SpecialProcDecl --> 'IRET'
    action 'CCALL' (noprec):   reduce SpecialProcDecl --> 'IRET'
    action 'RET' (noprec):   reduce SpecialProcDecl --> 'IRET'
    action 'IRET' (noprec):   reduce SpecialProcDecl --> 'IRET'
    action 'GO' (noprec):   reduce SpecialProcDecl --> 'IRET'
    action 'FORALL' (noprec):   reduce SpecialProcDecl --> 'IRET'
    action 'EXISTS' (noprec):   reduce SpecialProcDecl --> 'IRET'
    action 'OLD' (noprec):   reduce SpecialProcDecl --> 'IRET'
    action 'COLONCOLON' (noprec):   reduce SpecialProcDecl --> 'IRET'
    action 'EQEQGT' (noprec):   reduce SpecialProcDecl --> 'IRET'
    action 'LTEQEQGT' (noprec):   reduce SpecialProcDecl --> 'IRET'
    action 'TYPE' (noprec):   reduce SpecialProcDecl --> 'IRET'
    action 'CONST' (noprec):   reduce SpecialProcDecl --> 'IRET'
    action 'FUNCTION' (noprec):   reduce SpecialProcDecl --> 'IRET'
    action 'RETURNS' (noprec):   reduce SpecialProcDecl --> 'IRET'
    action 'AXIOM' (noprec):   reduce SpecialProcDecl --> 'IRET'
    action 'PROCEDURE' (noprec):   reduce SpecialProcDecl --> 'IRET'
    action 'IMPLEMENTATION' (noprec):   reduce SpecialProcDecl --> 'IRET'
    action 'REQUIRES' (noprec):   reduce SpecialProcDecl --> 'IRET'
    action 'ENSURES' (noprec):   reduce SpecialProcDecl --> 'IRET'
    action 'LT' (noprec):   reduce SpecialProcDecl --> 'IRET'
    action 'GT' (noprec):   reduce SpecialProcDecl --> 'IRET'
    action 'EQ' (noprec):   reduce SpecialProcDecl --> 'IRET'
    action 'BANG' (noprec):   reduce SpecialProcDecl --> 'IRET'
    action 'COMMA' (noprec):   reduce SpecialProcDecl --> 'IRET'
    action 'LE' (noprec):   reduce SpecialProcDecl --> 'IRET'
    action 'GE' (noprec):   reduce SpecialProcDecl --> 'IRET'
    action 'EQEQ' (noprec):   reduce SpecialProcDecl --> 'IRET'
    action 'NE' (noprec):   reduce SpecialProcDecl --> 'IRET'
    action 'PLUS' (noprec):   reduce SpecialProcDecl --> 'IRET'
    action 'MINUS' (noprec):   reduce SpecialProcDecl --> 'IRET'
    action 'STAR' (noprec):   reduce SpecialProcDecl --> 'IRET'
    action 'SLASH' (noprec):   reduce SpecialProcDecl --> 'IRET'
    action 'PERCENT' (noprec):   reduce SpecialProcDecl --> 'IRET'
    action 'AMPAMP' (noprec):   reduce SpecialProcDecl --> 'IRET'
    action 'BARBAR' (noprec):   reduce SpecialProcDecl --> 'IRET'
    action 'COLONEQ' (noprec):   reduce SpecialProcDecl --> 'IRET'
    action 'INT' (noprec):   reduce SpecialProcDecl --> 'IRET'
    action 'BOOL' (noprec):   reduce SpecialProcDecl --> 'IRET'
    action 'IF' (noprec):   reduce SpecialProcDecl --> 'IRET'
    action 'RETURN' (noprec):   reduce SpecialProcDecl --> 'IRET'
    action 'VAR' (noprec):   reduce SpecialProcDecl --> 'IRET'
    action 'LBRACE' (noprec):   reduce SpecialProcDecl --> 'IRET'
    action 'RBRACE' (noprec):   reduce SpecialProcDecl --> 'IRET'
    action 'SEMI' (noprec):   reduce SpecialProcDecl --> 'IRET'
    action 'COLON' (noprec):   reduce SpecialProcDecl --> 'IRET'
    action 'LPAREN' (noprec):   reduce SpecialProcDecl --> 'IRET'
    action 'RPAREN' (noprec):   reduce SpecialProcDecl --> 'IRET'
    action 'LBRACKET' (noprec):   reduce SpecialProcDecl --> 'IRET'
    action 'RBRACKET' (noprec):   reduce SpecialProcDecl --> 'IRET'
    action 'LITBOOL' (noprec):   reduce SpecialProcDecl --> 'IRET'
    action 'LITINT' (noprec):   reduce SpecialProcDecl --> 'IRET'
    action 'QLID' (noprec):   reduce SpecialProcDecl --> 'IRET'
    action 'QUID' (noprec):   reduce SpecialProcDecl --> 'IRET'
    action 'DLID' (noprec):   reduce SpecialProcDecl --> 'IRET'
    action 'DUID' (noprec):   reduce SpecialProcDecl --> 'IRET'
    action 'LID' (noprec):   reduce SpecialProcDecl --> 'IRET'
    action 'UID' (noprec):   reduce SpecialProcDecl --> 'IRET'
    action 'error' (noprec):   reduce SpecialProcDecl --> 'IRET'
    action '#' (noprec):   reduce SpecialProcDecl --> 'IRET'
    action '$$' (noprec):   reduce SpecialProcDecl --> 'IRET'

  immediate action:   reduce SpecialProcDecl --> 'IRET'
 gotos:

state 328:
  items:
    SpecialProcDecl -> 'GO' . 

  actions:
    action 'EOF' (noprec):   reduce SpecialProcDecl --> 'GO'
    action 'EAX' (noprec):   reduce SpecialProcDecl --> 'GO'
    action 'EBX' (noprec):   reduce SpecialProcDecl --> 'GO'
    action 'ECX' (noprec):   reduce SpecialProcDecl --> 'GO'
    action 'EDX' (noprec):   reduce SpecialProcDecl --> 'GO'
    action 'ESI' (noprec):   reduce SpecialProcDecl --> 'GO'
    action 'EDI' (noprec):   reduce SpecialProcDecl --> 'GO'
    action 'EBP' (noprec):   reduce SpecialProcDecl --> 'GO'
    action 'ESP' (noprec):   reduce SpecialProcDecl --> 'GO'
    action 'MODIFIES' (noprec):   reduce SpecialProcDecl --> 'GO'
    action 'INVARIANT' (noprec):   reduce SpecialProcDecl --> 'GO'
    action 'ASSERT' (noprec):   reduce SpecialProcDecl --> 'GO'
    action 'HAVOC' (noprec):   reduce SpecialProcDecl --> 'GO'
    action 'GOTO' (noprec):   reduce SpecialProcDecl --> 'GO'
    action 'CALL' (noprec):   reduce SpecialProcDecl --> 'GO'
    action 'CCALL' (noprec):   reduce SpecialProcDecl --> 'GO'
    action 'RET' (noprec):   reduce SpecialProcDecl --> 'GO'
    action 'IRET' (noprec):   reduce SpecialProcDecl --> 'GO'
    action 'GO' (noprec):   reduce SpecialProcDecl --> 'GO'
    action 'FORALL' (noprec):   reduce SpecialProcDecl --> 'GO'
    action 'EXISTS' (noprec):   reduce SpecialProcDecl --> 'GO'
    action 'OLD' (noprec):   reduce SpecialProcDecl --> 'GO'
    action 'COLONCOLON' (noprec):   reduce SpecialProcDecl --> 'GO'
    action 'EQEQGT' (noprec):   reduce SpecialProcDecl --> 'GO'
    action 'LTEQEQGT' (noprec):   reduce SpecialProcDecl --> 'GO'
    action 'TYPE' (noprec):   reduce SpecialProcDecl --> 'GO'
    action 'CONST' (noprec):   reduce SpecialProcDecl --> 'GO'
    action 'FUNCTION' (noprec):   reduce SpecialProcDecl --> 'GO'
    action 'RETURNS' (noprec):   reduce SpecialProcDecl --> 'GO'
    action 'AXIOM' (noprec):   reduce SpecialProcDecl --> 'GO'
    action 'PROCEDURE' (noprec):   reduce SpecialProcDecl --> 'GO'
    action 'IMPLEMENTATION' (noprec):   reduce SpecialProcDecl --> 'GO'
    action 'REQUIRES' (noprec):   reduce SpecialProcDecl --> 'GO'
    action 'ENSURES' (noprec):   reduce SpecialProcDecl --> 'GO'
    action 'LT' (noprec):   reduce SpecialProcDecl --> 'GO'
    action 'GT' (noprec):   reduce SpecialProcDecl --> 'GO'
    action 'EQ' (noprec):   reduce SpecialProcDecl --> 'GO'
    action 'BANG' (noprec):   reduce SpecialProcDecl --> 'GO'
    action 'COMMA' (noprec):   reduce SpecialProcDecl --> 'GO'
    action 'LE' (noprec):   reduce SpecialProcDecl --> 'GO'
    action 'GE' (noprec):   reduce SpecialProcDecl --> 'GO'
    action 'EQEQ' (noprec):   reduce SpecialProcDecl --> 'GO'
    action 'NE' (noprec):   reduce SpecialProcDecl --> 'GO'
    action 'PLUS' (noprec):   reduce SpecialProcDecl --> 'GO'
    action 'MINUS' (noprec):   reduce SpecialProcDecl --> 'GO'
    action 'STAR' (noprec):   reduce SpecialProcDecl --> 'GO'
    action 'SLASH' (noprec):   reduce SpecialProcDecl --> 'GO'
    action 'PERCENT' (noprec):   reduce SpecialProcDecl --> 'GO'
    action 'AMPAMP' (noprec):   reduce SpecialProcDecl --> 'GO'
    action 'BARBAR' (noprec):   reduce SpecialProcDecl --> 'GO'
    action 'COLONEQ' (noprec):   reduce SpecialProcDecl --> 'GO'
    action 'INT' (noprec):   reduce SpecialProcDecl --> 'GO'
    action 'BOOL' (noprec):   reduce SpecialProcDecl --> 'GO'
    action 'IF' (noprec):   reduce SpecialProcDecl --> 'GO'
    action 'RETURN' (noprec):   reduce SpecialProcDecl --> 'GO'
    action 'VAR' (noprec):   reduce SpecialProcDecl --> 'GO'
    action 'LBRACE' (noprec):   reduce SpecialProcDecl --> 'GO'
    action 'RBRACE' (noprec):   reduce SpecialProcDecl --> 'GO'
    action 'SEMI' (noprec):   reduce SpecialProcDecl --> 'GO'
    action 'COLON' (noprec):   reduce SpecialProcDecl --> 'GO'
    action 'LPAREN' (noprec):   reduce SpecialProcDecl --> 'GO'
    action 'RPAREN' (noprec):   reduce SpecialProcDecl --> 'GO'
    action 'LBRACKET' (noprec):   reduce SpecialProcDecl --> 'GO'
    action 'RBRACKET' (noprec):   reduce SpecialProcDecl --> 'GO'
    action 'LITBOOL' (noprec):   reduce SpecialProcDecl --> 'GO'
    action 'LITINT' (noprec):   reduce SpecialProcDecl --> 'GO'
    action 'QLID' (noprec):   reduce SpecialProcDecl --> 'GO'
    action 'QUID' (noprec):   reduce SpecialProcDecl --> 'GO'
    action 'DLID' (noprec):   reduce SpecialProcDecl --> 'GO'
    action 'DUID' (noprec):   reduce SpecialProcDecl --> 'GO'
    action 'LID' (noprec):   reduce SpecialProcDecl --> 'GO'
    action 'UID' (noprec):   reduce SpecialProcDecl --> 'GO'
    action 'error' (noprec):   reduce SpecialProcDecl --> 'GO'
    action '#' (noprec):   reduce SpecialProcDecl --> 'GO'
    action '$$' (noprec):   reduce SpecialProcDecl --> 'GO'

  immediate action:   reduce SpecialProcDecl --> 'GO'
 gotos:

state 329:
  items:
    Decl -> 'TYPE' . AnyId 'SEMI'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   shift 145
    action 'QUID' (noprec):   shift 144
    action 'DLID' (noprec):   shift 143
    action 'DUID' (noprec):   shift 142
    action 'LID' (noprec):   shift 4
    action 'UID' (noprec):   shift 5
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto ID: 141
    goto AnyId: 330

state 330:
  items:
    Decl -> 'TYPE' AnyId . 'SEMI'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   shift 331
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 331:
  items:
    Decl -> 'TYPE' AnyId 'SEMI' . 

  actions:
    action 'EOF' (noprec):   reduce Decl --> 'TYPE' AnyId 'SEMI'
    action 'EAX' (noprec):   reduce Decl --> 'TYPE' AnyId 'SEMI'
    action 'EBX' (noprec):   reduce Decl --> 'TYPE' AnyId 'SEMI'
    action 'ECX' (noprec):   reduce Decl --> 'TYPE' AnyId 'SEMI'
    action 'EDX' (noprec):   reduce Decl --> 'TYPE' AnyId 'SEMI'
    action 'ESI' (noprec):   reduce Decl --> 'TYPE' AnyId 'SEMI'
    action 'EDI' (noprec):   reduce Decl --> 'TYPE' AnyId 'SEMI'
    action 'EBP' (noprec):   reduce Decl --> 'TYPE' AnyId 'SEMI'
    action 'ESP' (noprec):   reduce Decl --> 'TYPE' AnyId 'SEMI'
    action 'MODIFIES' (noprec):   reduce Decl --> 'TYPE' AnyId 'SEMI'
    action 'INVARIANT' (noprec):   reduce Decl --> 'TYPE' AnyId 'SEMI'
    action 'ASSERT' (noprec):   reduce Decl --> 'TYPE' AnyId 'SEMI'
    action 'HAVOC' (noprec):   reduce Decl --> 'TYPE' AnyId 'SEMI'
    action 'GOTO' (noprec):   reduce Decl --> 'TYPE' AnyId 'SEMI'
    action 'CALL' (noprec):   reduce Decl --> 'TYPE' AnyId 'SEMI'
    action 'CCALL' (noprec):   reduce Decl --> 'TYPE' AnyId 'SEMI'
    action 'RET' (noprec):   reduce Decl --> 'TYPE' AnyId 'SEMI'
    action 'IRET' (noprec):   reduce Decl --> 'TYPE' AnyId 'SEMI'
    action 'GO' (noprec):   reduce Decl --> 'TYPE' AnyId 'SEMI'
    action 'FORALL' (noprec):   reduce Decl --> 'TYPE' AnyId 'SEMI'
    action 'EXISTS' (noprec):   reduce Decl --> 'TYPE' AnyId 'SEMI'
    action 'OLD' (noprec):   reduce Decl --> 'TYPE' AnyId 'SEMI'
    action 'COLONCOLON' (noprec):   reduce Decl --> 'TYPE' AnyId 'SEMI'
    action 'EQEQGT' (noprec):   reduce Decl --> 'TYPE' AnyId 'SEMI'
    action 'LTEQEQGT' (noprec):   reduce Decl --> 'TYPE' AnyId 'SEMI'
    action 'TYPE' (noprec):   reduce Decl --> 'TYPE' AnyId 'SEMI'
    action 'CONST' (noprec):   reduce Decl --> 'TYPE' AnyId 'SEMI'
    action 'FUNCTION' (noprec):   reduce Decl --> 'TYPE' AnyId 'SEMI'
    action 'RETURNS' (noprec):   reduce Decl --> 'TYPE' AnyId 'SEMI'
    action 'AXIOM' (noprec):   reduce Decl --> 'TYPE' AnyId 'SEMI'
    action 'PROCEDURE' (noprec):   reduce Decl --> 'TYPE' AnyId 'SEMI'
    action 'IMPLEMENTATION' (noprec):   reduce Decl --> 'TYPE' AnyId 'SEMI'
    action 'REQUIRES' (noprec):   reduce Decl --> 'TYPE' AnyId 'SEMI'
    action 'ENSURES' (noprec):   reduce Decl --> 'TYPE' AnyId 'SEMI'
    action 'LT' (noprec):   reduce Decl --> 'TYPE' AnyId 'SEMI'
    action 'GT' (noprec):   reduce Decl --> 'TYPE' AnyId 'SEMI'
    action 'EQ' (noprec):   reduce Decl --> 'TYPE' AnyId 'SEMI'
    action 'BANG' (noprec):   reduce Decl --> 'TYPE' AnyId 'SEMI'
    action 'COMMA' (noprec):   reduce Decl --> 'TYPE' AnyId 'SEMI'
    action 'LE' (noprec):   reduce Decl --> 'TYPE' AnyId 'SEMI'
    action 'GE' (noprec):   reduce Decl --> 'TYPE' AnyId 'SEMI'
    action 'EQEQ' (noprec):   reduce Decl --> 'TYPE' AnyId 'SEMI'
    action 'NE' (noprec):   reduce Decl --> 'TYPE' AnyId 'SEMI'
    action 'PLUS' (noprec):   reduce Decl --> 'TYPE' AnyId 'SEMI'
    action 'MINUS' (noprec):   reduce Decl --> 'TYPE' AnyId 'SEMI'
    action 'STAR' (noprec):   reduce Decl --> 'TYPE' AnyId 'SEMI'
    action 'SLASH' (noprec):   reduce Decl --> 'TYPE' AnyId 'SEMI'
    action 'PERCENT' (noprec):   reduce Decl --> 'TYPE' AnyId 'SEMI'
    action 'AMPAMP' (noprec):   reduce Decl --> 'TYPE' AnyId 'SEMI'
    action 'BARBAR' (noprec):   reduce Decl --> 'TYPE' AnyId 'SEMI'
    action 'COLONEQ' (noprec):   reduce Decl --> 'TYPE' AnyId 'SEMI'
    action 'INT' (noprec):   reduce Decl --> 'TYPE' AnyId 'SEMI'
    action 'BOOL' (noprec):   reduce Decl --> 'TYPE' AnyId 'SEMI'
    action 'IF' (noprec):   reduce Decl --> 'TYPE' AnyId 'SEMI'
    action 'RETURN' (noprec):   reduce Decl --> 'TYPE' AnyId 'SEMI'
    action 'VAR' (noprec):   reduce Decl --> 'TYPE' AnyId 'SEMI'
    action 'LBRACE' (noprec):   reduce Decl --> 'TYPE' AnyId 'SEMI'
    action 'RBRACE' (noprec):   reduce Decl --> 'TYPE' AnyId 'SEMI'
    action 'SEMI' (noprec):   reduce Decl --> 'TYPE' AnyId 'SEMI'
    action 'COLON' (noprec):   reduce Decl --> 'TYPE' AnyId 'SEMI'
    action 'LPAREN' (noprec):   reduce Decl --> 'TYPE' AnyId 'SEMI'
    action 'RPAREN' (noprec):   reduce Decl --> 'TYPE' AnyId 'SEMI'
    action 'LBRACKET' (noprec):   reduce Decl --> 'TYPE' AnyId 'SEMI'
    action 'RBRACKET' (noprec):   reduce Decl --> 'TYPE' AnyId 'SEMI'
    action 'LITBOOL' (noprec):   reduce Decl --> 'TYPE' AnyId 'SEMI'
    action 'LITINT' (noprec):   reduce Decl --> 'TYPE' AnyId 'SEMI'
    action 'QLID' (noprec):   reduce Decl --> 'TYPE' AnyId 'SEMI'
    action 'QUID' (noprec):   reduce Decl --> 'TYPE' AnyId 'SEMI'
    action 'DLID' (noprec):   reduce Decl --> 'TYPE' AnyId 'SEMI'
    action 'DUID' (noprec):   reduce Decl --> 'TYPE' AnyId 'SEMI'
    action 'LID' (noprec):   reduce Decl --> 'TYPE' AnyId 'SEMI'
    action 'UID' (noprec):   reduce Decl --> 'TYPE' AnyId 'SEMI'
    action 'error' (noprec):   reduce Decl --> 'TYPE' AnyId 'SEMI'
    action '#' (noprec):   reduce Decl --> 'TYPE' AnyId 'SEMI'
    action '$$' (noprec):   reduce Decl --> 'TYPE' AnyId 'SEMI'

  immediate action:   reduce Decl --> 'TYPE' AnyId 'SEMI'
 gotos:

state 332:
  items:
    Decl -> 'VAR' . 'DLID' 'COLON' Type 'SEMI'
    Decl -> 'VAR' . 'DUID' 'COLON' Type 'SEMI'
    Decl -> 'VAR' . 'UID' 'COLON' 'INT' 'SEMI'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   shift 333
    action 'DUID' (noprec):   shift 337
    action 'LID' (noprec):   error
    action 'UID' (noprec):   shift 341
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 333:
  items:
    Decl -> 'VAR' 'DLID' . 'COLON' Type 'SEMI'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   shift 334
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 334:
  items:
    Decl -> 'VAR' 'DLID' 'COLON' . Type 'SEMI'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   shift 6
    action 'BOOL' (noprec):   shift 7
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (explicit left 10000):   shift 8
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   shift 145
    action 'QUID' (noprec):   shift 144
    action 'DLID' (noprec):   shift 143
    action 'DUID' (noprec):   shift 142
    action 'LID' (noprec):   shift 4
    action 'UID' (noprec):   shift 5
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto ID: 141
    goto Type: 335
    goto AnyId: 12

state 335:
  items:
    Decl -> 'VAR' 'DLID' 'COLON' Type . 'SEMI'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   shift 336
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 336:
  items:
    Decl -> 'VAR' 'DLID' 'COLON' Type 'SEMI' . 

  actions:
    action 'EOF' (noprec):   reduce Decl --> 'VAR' 'DLID' 'COLON' Type 'SEMI'
    action 'EAX' (noprec):   reduce Decl --> 'VAR' 'DLID' 'COLON' Type 'SEMI'
    action 'EBX' (noprec):   reduce Decl --> 'VAR' 'DLID' 'COLON' Type 'SEMI'
    action 'ECX' (noprec):   reduce Decl --> 'VAR' 'DLID' 'COLON' Type 'SEMI'
    action 'EDX' (noprec):   reduce Decl --> 'VAR' 'DLID' 'COLON' Type 'SEMI'
    action 'ESI' (noprec):   reduce Decl --> 'VAR' 'DLID' 'COLON' Type 'SEMI'
    action 'EDI' (noprec):   reduce Decl --> 'VAR' 'DLID' 'COLON' Type 'SEMI'
    action 'EBP' (noprec):   reduce Decl --> 'VAR' 'DLID' 'COLON' Type 'SEMI'
    action 'ESP' (noprec):   reduce Decl --> 'VAR' 'DLID' 'COLON' Type 'SEMI'
    action 'MODIFIES' (noprec):   reduce Decl --> 'VAR' 'DLID' 'COLON' Type 'SEMI'
    action 'INVARIANT' (noprec):   reduce Decl --> 'VAR' 'DLID' 'COLON' Type 'SEMI'
    action 'ASSERT' (noprec):   reduce Decl --> 'VAR' 'DLID' 'COLON' Type 'SEMI'
    action 'HAVOC' (noprec):   reduce Decl --> 'VAR' 'DLID' 'COLON' Type 'SEMI'
    action 'GOTO' (noprec):   reduce Decl --> 'VAR' 'DLID' 'COLON' Type 'SEMI'
    action 'CALL' (noprec):   reduce Decl --> 'VAR' 'DLID' 'COLON' Type 'SEMI'
    action 'CCALL' (noprec):   reduce Decl --> 'VAR' 'DLID' 'COLON' Type 'SEMI'
    action 'RET' (noprec):   reduce Decl --> 'VAR' 'DLID' 'COLON' Type 'SEMI'
    action 'IRET' (noprec):   reduce Decl --> 'VAR' 'DLID' 'COLON' Type 'SEMI'
    action 'GO' (noprec):   reduce Decl --> 'VAR' 'DLID' 'COLON' Type 'SEMI'
    action 'FORALL' (noprec):   reduce Decl --> 'VAR' 'DLID' 'COLON' Type 'SEMI'
    action 'EXISTS' (noprec):   reduce Decl --> 'VAR' 'DLID' 'COLON' Type 'SEMI'
    action 'OLD' (noprec):   reduce Decl --> 'VAR' 'DLID' 'COLON' Type 'SEMI'
    action 'COLONCOLON' (noprec):   reduce Decl --> 'VAR' 'DLID' 'COLON' Type 'SEMI'
    action 'EQEQGT' (noprec):   reduce Decl --> 'VAR' 'DLID' 'COLON' Type 'SEMI'
    action 'LTEQEQGT' (noprec):   reduce Decl --> 'VAR' 'DLID' 'COLON' Type 'SEMI'
    action 'TYPE' (noprec):   reduce Decl --> 'VAR' 'DLID' 'COLON' Type 'SEMI'
    action 'CONST' (noprec):   reduce Decl --> 'VAR' 'DLID' 'COLON' Type 'SEMI'
    action 'FUNCTION' (noprec):   reduce Decl --> 'VAR' 'DLID' 'COLON' Type 'SEMI'
    action 'RETURNS' (noprec):   reduce Decl --> 'VAR' 'DLID' 'COLON' Type 'SEMI'
    action 'AXIOM' (noprec):   reduce Decl --> 'VAR' 'DLID' 'COLON' Type 'SEMI'
    action 'PROCEDURE' (noprec):   reduce Decl --> 'VAR' 'DLID' 'COLON' Type 'SEMI'
    action 'IMPLEMENTATION' (noprec):   reduce Decl --> 'VAR' 'DLID' 'COLON' Type 'SEMI'
    action 'REQUIRES' (noprec):   reduce Decl --> 'VAR' 'DLID' 'COLON' Type 'SEMI'
    action 'ENSURES' (noprec):   reduce Decl --> 'VAR' 'DLID' 'COLON' Type 'SEMI'
    action 'LT' (noprec):   reduce Decl --> 'VAR' 'DLID' 'COLON' Type 'SEMI'
    action 'GT' (noprec):   reduce Decl --> 'VAR' 'DLID' 'COLON' Type 'SEMI'
    action 'EQ' (noprec):   reduce Decl --> 'VAR' 'DLID' 'COLON' Type 'SEMI'
    action 'BANG' (noprec):   reduce Decl --> 'VAR' 'DLID' 'COLON' Type 'SEMI'
    action 'COMMA' (noprec):   reduce Decl --> 'VAR' 'DLID' 'COLON' Type 'SEMI'
    action 'LE' (noprec):   reduce Decl --> 'VAR' 'DLID' 'COLON' Type 'SEMI'
    action 'GE' (noprec):   reduce Decl --> 'VAR' 'DLID' 'COLON' Type 'SEMI'
    action 'EQEQ' (noprec):   reduce Decl --> 'VAR' 'DLID' 'COLON' Type 'SEMI'
    action 'NE' (noprec):   reduce Decl --> 'VAR' 'DLID' 'COLON' Type 'SEMI'
    action 'PLUS' (noprec):   reduce Decl --> 'VAR' 'DLID' 'COLON' Type 'SEMI'
    action 'MINUS' (noprec):   reduce Decl --> 'VAR' 'DLID' 'COLON' Type 'SEMI'
    action 'STAR' (noprec):   reduce Decl --> 'VAR' 'DLID' 'COLON' Type 'SEMI'
    action 'SLASH' (noprec):   reduce Decl --> 'VAR' 'DLID' 'COLON' Type 'SEMI'
    action 'PERCENT' (noprec):   reduce Decl --> 'VAR' 'DLID' 'COLON' Type 'SEMI'
    action 'AMPAMP' (noprec):   reduce Decl --> 'VAR' 'DLID' 'COLON' Type 'SEMI'
    action 'BARBAR' (noprec):   reduce Decl --> 'VAR' 'DLID' 'COLON' Type 'SEMI'
    action 'COLONEQ' (noprec):   reduce Decl --> 'VAR' 'DLID' 'COLON' Type 'SEMI'
    action 'INT' (noprec):   reduce Decl --> 'VAR' 'DLID' 'COLON' Type 'SEMI'
    action 'BOOL' (noprec):   reduce Decl --> 'VAR' 'DLID' 'COLON' Type 'SEMI'
    action 'IF' (noprec):   reduce Decl --> 'VAR' 'DLID' 'COLON' Type 'SEMI'
    action 'RETURN' (noprec):   reduce Decl --> 'VAR' 'DLID' 'COLON' Type 'SEMI'
    action 'VAR' (noprec):   reduce Decl --> 'VAR' 'DLID' 'COLON' Type 'SEMI'
    action 'LBRACE' (noprec):   reduce Decl --> 'VAR' 'DLID' 'COLON' Type 'SEMI'
    action 'RBRACE' (noprec):   reduce Decl --> 'VAR' 'DLID' 'COLON' Type 'SEMI'
    action 'SEMI' (noprec):   reduce Decl --> 'VAR' 'DLID' 'COLON' Type 'SEMI'
    action 'COLON' (noprec):   reduce Decl --> 'VAR' 'DLID' 'COLON' Type 'SEMI'
    action 'LPAREN' (noprec):   reduce Decl --> 'VAR' 'DLID' 'COLON' Type 'SEMI'
    action 'RPAREN' (noprec):   reduce Decl --> 'VAR' 'DLID' 'COLON' Type 'SEMI'
    action 'LBRACKET' (noprec):   reduce Decl --> 'VAR' 'DLID' 'COLON' Type 'SEMI'
    action 'RBRACKET' (noprec):   reduce Decl --> 'VAR' 'DLID' 'COLON' Type 'SEMI'
    action 'LITBOOL' (noprec):   reduce Decl --> 'VAR' 'DLID' 'COLON' Type 'SEMI'
    action 'LITINT' (noprec):   reduce Decl --> 'VAR' 'DLID' 'COLON' Type 'SEMI'
    action 'QLID' (noprec):   reduce Decl --> 'VAR' 'DLID' 'COLON' Type 'SEMI'
    action 'QUID' (noprec):   reduce Decl --> 'VAR' 'DLID' 'COLON' Type 'SEMI'
    action 'DLID' (noprec):   reduce Decl --> 'VAR' 'DLID' 'COLON' Type 'SEMI'
    action 'DUID' (noprec):   reduce Decl --> 'VAR' 'DLID' 'COLON' Type 'SEMI'
    action 'LID' (noprec):   reduce Decl --> 'VAR' 'DLID' 'COLON' Type 'SEMI'
    action 'UID' (noprec):   reduce Decl --> 'VAR' 'DLID' 'COLON' Type 'SEMI'
    action 'error' (noprec):   reduce Decl --> 'VAR' 'DLID' 'COLON' Type 'SEMI'
    action '#' (noprec):   reduce Decl --> 'VAR' 'DLID' 'COLON' Type 'SEMI'
    action '$$' (noprec):   reduce Decl --> 'VAR' 'DLID' 'COLON' Type 'SEMI'

  immediate action:   reduce Decl --> 'VAR' 'DLID' 'COLON' Type 'SEMI'
 gotos:

state 337:
  items:
    Decl -> 'VAR' 'DUID' . 'COLON' Type 'SEMI'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   shift 338
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 338:
  items:
    Decl -> 'VAR' 'DUID' 'COLON' . Type 'SEMI'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   shift 6
    action 'BOOL' (noprec):   shift 7
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (explicit left 10000):   shift 8
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   shift 145
    action 'QUID' (noprec):   shift 144
    action 'DLID' (noprec):   shift 143
    action 'DUID' (noprec):   shift 142
    action 'LID' (noprec):   shift 4
    action 'UID' (noprec):   shift 5
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto ID: 141
    goto Type: 339
    goto AnyId: 12

state 339:
  items:
    Decl -> 'VAR' 'DUID' 'COLON' Type . 'SEMI'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   shift 340
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 340:
  items:
    Decl -> 'VAR' 'DUID' 'COLON' Type 'SEMI' . 

  actions:
    action 'EOF' (noprec):   reduce Decl --> 'VAR' 'DUID' 'COLON' Type 'SEMI'
    action 'EAX' (noprec):   reduce Decl --> 'VAR' 'DUID' 'COLON' Type 'SEMI'
    action 'EBX' (noprec):   reduce Decl --> 'VAR' 'DUID' 'COLON' Type 'SEMI'
    action 'ECX' (noprec):   reduce Decl --> 'VAR' 'DUID' 'COLON' Type 'SEMI'
    action 'EDX' (noprec):   reduce Decl --> 'VAR' 'DUID' 'COLON' Type 'SEMI'
    action 'ESI' (noprec):   reduce Decl --> 'VAR' 'DUID' 'COLON' Type 'SEMI'
    action 'EDI' (noprec):   reduce Decl --> 'VAR' 'DUID' 'COLON' Type 'SEMI'
    action 'EBP' (noprec):   reduce Decl --> 'VAR' 'DUID' 'COLON' Type 'SEMI'
    action 'ESP' (noprec):   reduce Decl --> 'VAR' 'DUID' 'COLON' Type 'SEMI'
    action 'MODIFIES' (noprec):   reduce Decl --> 'VAR' 'DUID' 'COLON' Type 'SEMI'
    action 'INVARIANT' (noprec):   reduce Decl --> 'VAR' 'DUID' 'COLON' Type 'SEMI'
    action 'ASSERT' (noprec):   reduce Decl --> 'VAR' 'DUID' 'COLON' Type 'SEMI'
    action 'HAVOC' (noprec):   reduce Decl --> 'VAR' 'DUID' 'COLON' Type 'SEMI'
    action 'GOTO' (noprec):   reduce Decl --> 'VAR' 'DUID' 'COLON' Type 'SEMI'
    action 'CALL' (noprec):   reduce Decl --> 'VAR' 'DUID' 'COLON' Type 'SEMI'
    action 'CCALL' (noprec):   reduce Decl --> 'VAR' 'DUID' 'COLON' Type 'SEMI'
    action 'RET' (noprec):   reduce Decl --> 'VAR' 'DUID' 'COLON' Type 'SEMI'
    action 'IRET' (noprec):   reduce Decl --> 'VAR' 'DUID' 'COLON' Type 'SEMI'
    action 'GO' (noprec):   reduce Decl --> 'VAR' 'DUID' 'COLON' Type 'SEMI'
    action 'FORALL' (noprec):   reduce Decl --> 'VAR' 'DUID' 'COLON' Type 'SEMI'
    action 'EXISTS' (noprec):   reduce Decl --> 'VAR' 'DUID' 'COLON' Type 'SEMI'
    action 'OLD' (noprec):   reduce Decl --> 'VAR' 'DUID' 'COLON' Type 'SEMI'
    action 'COLONCOLON' (noprec):   reduce Decl --> 'VAR' 'DUID' 'COLON' Type 'SEMI'
    action 'EQEQGT' (noprec):   reduce Decl --> 'VAR' 'DUID' 'COLON' Type 'SEMI'
    action 'LTEQEQGT' (noprec):   reduce Decl --> 'VAR' 'DUID' 'COLON' Type 'SEMI'
    action 'TYPE' (noprec):   reduce Decl --> 'VAR' 'DUID' 'COLON' Type 'SEMI'
    action 'CONST' (noprec):   reduce Decl --> 'VAR' 'DUID' 'COLON' Type 'SEMI'
    action 'FUNCTION' (noprec):   reduce Decl --> 'VAR' 'DUID' 'COLON' Type 'SEMI'
    action 'RETURNS' (noprec):   reduce Decl --> 'VAR' 'DUID' 'COLON' Type 'SEMI'
    action 'AXIOM' (noprec):   reduce Decl --> 'VAR' 'DUID' 'COLON' Type 'SEMI'
    action 'PROCEDURE' (noprec):   reduce Decl --> 'VAR' 'DUID' 'COLON' Type 'SEMI'
    action 'IMPLEMENTATION' (noprec):   reduce Decl --> 'VAR' 'DUID' 'COLON' Type 'SEMI'
    action 'REQUIRES' (noprec):   reduce Decl --> 'VAR' 'DUID' 'COLON' Type 'SEMI'
    action 'ENSURES' (noprec):   reduce Decl --> 'VAR' 'DUID' 'COLON' Type 'SEMI'
    action 'LT' (noprec):   reduce Decl --> 'VAR' 'DUID' 'COLON' Type 'SEMI'
    action 'GT' (noprec):   reduce Decl --> 'VAR' 'DUID' 'COLON' Type 'SEMI'
    action 'EQ' (noprec):   reduce Decl --> 'VAR' 'DUID' 'COLON' Type 'SEMI'
    action 'BANG' (noprec):   reduce Decl --> 'VAR' 'DUID' 'COLON' Type 'SEMI'
    action 'COMMA' (noprec):   reduce Decl --> 'VAR' 'DUID' 'COLON' Type 'SEMI'
    action 'LE' (noprec):   reduce Decl --> 'VAR' 'DUID' 'COLON' Type 'SEMI'
    action 'GE' (noprec):   reduce Decl --> 'VAR' 'DUID' 'COLON' Type 'SEMI'
    action 'EQEQ' (noprec):   reduce Decl --> 'VAR' 'DUID' 'COLON' Type 'SEMI'
    action 'NE' (noprec):   reduce Decl --> 'VAR' 'DUID' 'COLON' Type 'SEMI'
    action 'PLUS' (noprec):   reduce Decl --> 'VAR' 'DUID' 'COLON' Type 'SEMI'
    action 'MINUS' (noprec):   reduce Decl --> 'VAR' 'DUID' 'COLON' Type 'SEMI'
    action 'STAR' (noprec):   reduce Decl --> 'VAR' 'DUID' 'COLON' Type 'SEMI'
    action 'SLASH' (noprec):   reduce Decl --> 'VAR' 'DUID' 'COLON' Type 'SEMI'
    action 'PERCENT' (noprec):   reduce Decl --> 'VAR' 'DUID' 'COLON' Type 'SEMI'
    action 'AMPAMP' (noprec):   reduce Decl --> 'VAR' 'DUID' 'COLON' Type 'SEMI'
    action 'BARBAR' (noprec):   reduce Decl --> 'VAR' 'DUID' 'COLON' Type 'SEMI'
    action 'COLONEQ' (noprec):   reduce Decl --> 'VAR' 'DUID' 'COLON' Type 'SEMI'
    action 'INT' (noprec):   reduce Decl --> 'VAR' 'DUID' 'COLON' Type 'SEMI'
    action 'BOOL' (noprec):   reduce Decl --> 'VAR' 'DUID' 'COLON' Type 'SEMI'
    action 'IF' (noprec):   reduce Decl --> 'VAR' 'DUID' 'COLON' Type 'SEMI'
    action 'RETURN' (noprec):   reduce Decl --> 'VAR' 'DUID' 'COLON' Type 'SEMI'
    action 'VAR' (noprec):   reduce Decl --> 'VAR' 'DUID' 'COLON' Type 'SEMI'
    action 'LBRACE' (noprec):   reduce Decl --> 'VAR' 'DUID' 'COLON' Type 'SEMI'
    action 'RBRACE' (noprec):   reduce Decl --> 'VAR' 'DUID' 'COLON' Type 'SEMI'
    action 'SEMI' (noprec):   reduce Decl --> 'VAR' 'DUID' 'COLON' Type 'SEMI'
    action 'COLON' (noprec):   reduce Decl --> 'VAR' 'DUID' 'COLON' Type 'SEMI'
    action 'LPAREN' (noprec):   reduce Decl --> 'VAR' 'DUID' 'COLON' Type 'SEMI'
    action 'RPAREN' (noprec):   reduce Decl --> 'VAR' 'DUID' 'COLON' Type 'SEMI'
    action 'LBRACKET' (noprec):   reduce Decl --> 'VAR' 'DUID' 'COLON' Type 'SEMI'
    action 'RBRACKET' (noprec):   reduce Decl --> 'VAR' 'DUID' 'COLON' Type 'SEMI'
    action 'LITBOOL' (noprec):   reduce Decl --> 'VAR' 'DUID' 'COLON' Type 'SEMI'
    action 'LITINT' (noprec):   reduce Decl --> 'VAR' 'DUID' 'COLON' Type 'SEMI'
    action 'QLID' (noprec):   reduce Decl --> 'VAR' 'DUID' 'COLON' Type 'SEMI'
    action 'QUID' (noprec):   reduce Decl --> 'VAR' 'DUID' 'COLON' Type 'SEMI'
    action 'DLID' (noprec):   reduce Decl --> 'VAR' 'DUID' 'COLON' Type 'SEMI'
    action 'DUID' (noprec):   reduce Decl --> 'VAR' 'DUID' 'COLON' Type 'SEMI'
    action 'LID' (noprec):   reduce Decl --> 'VAR' 'DUID' 'COLON' Type 'SEMI'
    action 'UID' (noprec):   reduce Decl --> 'VAR' 'DUID' 'COLON' Type 'SEMI'
    action 'error' (noprec):   reduce Decl --> 'VAR' 'DUID' 'COLON' Type 'SEMI'
    action '#' (noprec):   reduce Decl --> 'VAR' 'DUID' 'COLON' Type 'SEMI'
    action '$$' (noprec):   reduce Decl --> 'VAR' 'DUID' 'COLON' Type 'SEMI'

  immediate action:   reduce Decl --> 'VAR' 'DUID' 'COLON' Type 'SEMI'
 gotos:

state 341:
  items:
    Decl -> 'VAR' 'UID' . 'COLON' 'INT' 'SEMI'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   shift 342
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 342:
  items:
    Decl -> 'VAR' 'UID' 'COLON' . 'INT' 'SEMI'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   shift 343
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 343:
  items:
    Decl -> 'VAR' 'UID' 'COLON' 'INT' . 'SEMI'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   shift 344
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 344:
  items:
    Decl -> 'VAR' 'UID' 'COLON' 'INT' 'SEMI' . 

  actions:
    action 'EOF' (noprec):   reduce Decl --> 'VAR' 'UID' 'COLON' 'INT' 'SEMI'
    action 'EAX' (noprec):   reduce Decl --> 'VAR' 'UID' 'COLON' 'INT' 'SEMI'
    action 'EBX' (noprec):   reduce Decl --> 'VAR' 'UID' 'COLON' 'INT' 'SEMI'
    action 'ECX' (noprec):   reduce Decl --> 'VAR' 'UID' 'COLON' 'INT' 'SEMI'
    action 'EDX' (noprec):   reduce Decl --> 'VAR' 'UID' 'COLON' 'INT' 'SEMI'
    action 'ESI' (noprec):   reduce Decl --> 'VAR' 'UID' 'COLON' 'INT' 'SEMI'
    action 'EDI' (noprec):   reduce Decl --> 'VAR' 'UID' 'COLON' 'INT' 'SEMI'
    action 'EBP' (noprec):   reduce Decl --> 'VAR' 'UID' 'COLON' 'INT' 'SEMI'
    action 'ESP' (noprec):   reduce Decl --> 'VAR' 'UID' 'COLON' 'INT' 'SEMI'
    action 'MODIFIES' (noprec):   reduce Decl --> 'VAR' 'UID' 'COLON' 'INT' 'SEMI'
    action 'INVARIANT' (noprec):   reduce Decl --> 'VAR' 'UID' 'COLON' 'INT' 'SEMI'
    action 'ASSERT' (noprec):   reduce Decl --> 'VAR' 'UID' 'COLON' 'INT' 'SEMI'
    action 'HAVOC' (noprec):   reduce Decl --> 'VAR' 'UID' 'COLON' 'INT' 'SEMI'
    action 'GOTO' (noprec):   reduce Decl --> 'VAR' 'UID' 'COLON' 'INT' 'SEMI'
    action 'CALL' (noprec):   reduce Decl --> 'VAR' 'UID' 'COLON' 'INT' 'SEMI'
    action 'CCALL' (noprec):   reduce Decl --> 'VAR' 'UID' 'COLON' 'INT' 'SEMI'
    action 'RET' (noprec):   reduce Decl --> 'VAR' 'UID' 'COLON' 'INT' 'SEMI'
    action 'IRET' (noprec):   reduce Decl --> 'VAR' 'UID' 'COLON' 'INT' 'SEMI'
    action 'GO' (noprec):   reduce Decl --> 'VAR' 'UID' 'COLON' 'INT' 'SEMI'
    action 'FORALL' (noprec):   reduce Decl --> 'VAR' 'UID' 'COLON' 'INT' 'SEMI'
    action 'EXISTS' (noprec):   reduce Decl --> 'VAR' 'UID' 'COLON' 'INT' 'SEMI'
    action 'OLD' (noprec):   reduce Decl --> 'VAR' 'UID' 'COLON' 'INT' 'SEMI'
    action 'COLONCOLON' (noprec):   reduce Decl --> 'VAR' 'UID' 'COLON' 'INT' 'SEMI'
    action 'EQEQGT' (noprec):   reduce Decl --> 'VAR' 'UID' 'COLON' 'INT' 'SEMI'
    action 'LTEQEQGT' (noprec):   reduce Decl --> 'VAR' 'UID' 'COLON' 'INT' 'SEMI'
    action 'TYPE' (noprec):   reduce Decl --> 'VAR' 'UID' 'COLON' 'INT' 'SEMI'
    action 'CONST' (noprec):   reduce Decl --> 'VAR' 'UID' 'COLON' 'INT' 'SEMI'
    action 'FUNCTION' (noprec):   reduce Decl --> 'VAR' 'UID' 'COLON' 'INT' 'SEMI'
    action 'RETURNS' (noprec):   reduce Decl --> 'VAR' 'UID' 'COLON' 'INT' 'SEMI'
    action 'AXIOM' (noprec):   reduce Decl --> 'VAR' 'UID' 'COLON' 'INT' 'SEMI'
    action 'PROCEDURE' (noprec):   reduce Decl --> 'VAR' 'UID' 'COLON' 'INT' 'SEMI'
    action 'IMPLEMENTATION' (noprec):   reduce Decl --> 'VAR' 'UID' 'COLON' 'INT' 'SEMI'
    action 'REQUIRES' (noprec):   reduce Decl --> 'VAR' 'UID' 'COLON' 'INT' 'SEMI'
    action 'ENSURES' (noprec):   reduce Decl --> 'VAR' 'UID' 'COLON' 'INT' 'SEMI'
    action 'LT' (noprec):   reduce Decl --> 'VAR' 'UID' 'COLON' 'INT' 'SEMI'
    action 'GT' (noprec):   reduce Decl --> 'VAR' 'UID' 'COLON' 'INT' 'SEMI'
    action 'EQ' (noprec):   reduce Decl --> 'VAR' 'UID' 'COLON' 'INT' 'SEMI'
    action 'BANG' (noprec):   reduce Decl --> 'VAR' 'UID' 'COLON' 'INT' 'SEMI'
    action 'COMMA' (noprec):   reduce Decl --> 'VAR' 'UID' 'COLON' 'INT' 'SEMI'
    action 'LE' (noprec):   reduce Decl --> 'VAR' 'UID' 'COLON' 'INT' 'SEMI'
    action 'GE' (noprec):   reduce Decl --> 'VAR' 'UID' 'COLON' 'INT' 'SEMI'
    action 'EQEQ' (noprec):   reduce Decl --> 'VAR' 'UID' 'COLON' 'INT' 'SEMI'
    action 'NE' (noprec):   reduce Decl --> 'VAR' 'UID' 'COLON' 'INT' 'SEMI'
    action 'PLUS' (noprec):   reduce Decl --> 'VAR' 'UID' 'COLON' 'INT' 'SEMI'
    action 'MINUS' (noprec):   reduce Decl --> 'VAR' 'UID' 'COLON' 'INT' 'SEMI'
    action 'STAR' (noprec):   reduce Decl --> 'VAR' 'UID' 'COLON' 'INT' 'SEMI'
    action 'SLASH' (noprec):   reduce Decl --> 'VAR' 'UID' 'COLON' 'INT' 'SEMI'
    action 'PERCENT' (noprec):   reduce Decl --> 'VAR' 'UID' 'COLON' 'INT' 'SEMI'
    action 'AMPAMP' (noprec):   reduce Decl --> 'VAR' 'UID' 'COLON' 'INT' 'SEMI'
    action 'BARBAR' (noprec):   reduce Decl --> 'VAR' 'UID' 'COLON' 'INT' 'SEMI'
    action 'COLONEQ' (noprec):   reduce Decl --> 'VAR' 'UID' 'COLON' 'INT' 'SEMI'
    action 'INT' (noprec):   reduce Decl --> 'VAR' 'UID' 'COLON' 'INT' 'SEMI'
    action 'BOOL' (noprec):   reduce Decl --> 'VAR' 'UID' 'COLON' 'INT' 'SEMI'
    action 'IF' (noprec):   reduce Decl --> 'VAR' 'UID' 'COLON' 'INT' 'SEMI'
    action 'RETURN' (noprec):   reduce Decl --> 'VAR' 'UID' 'COLON' 'INT' 'SEMI'
    action 'VAR' (noprec):   reduce Decl --> 'VAR' 'UID' 'COLON' 'INT' 'SEMI'
    action 'LBRACE' (noprec):   reduce Decl --> 'VAR' 'UID' 'COLON' 'INT' 'SEMI'
    action 'RBRACE' (noprec):   reduce Decl --> 'VAR' 'UID' 'COLON' 'INT' 'SEMI'
    action 'SEMI' (noprec):   reduce Decl --> 'VAR' 'UID' 'COLON' 'INT' 'SEMI'
    action 'COLON' (noprec):   reduce Decl --> 'VAR' 'UID' 'COLON' 'INT' 'SEMI'
    action 'LPAREN' (noprec):   reduce Decl --> 'VAR' 'UID' 'COLON' 'INT' 'SEMI'
    action 'RPAREN' (noprec):   reduce Decl --> 'VAR' 'UID' 'COLON' 'INT' 'SEMI'
    action 'LBRACKET' (noprec):   reduce Decl --> 'VAR' 'UID' 'COLON' 'INT' 'SEMI'
    action 'RBRACKET' (noprec):   reduce Decl --> 'VAR' 'UID' 'COLON' 'INT' 'SEMI'
    action 'LITBOOL' (noprec):   reduce Decl --> 'VAR' 'UID' 'COLON' 'INT' 'SEMI'
    action 'LITINT' (noprec):   reduce Decl --> 'VAR' 'UID' 'COLON' 'INT' 'SEMI'
    action 'QLID' (noprec):   reduce Decl --> 'VAR' 'UID' 'COLON' 'INT' 'SEMI'
    action 'QUID' (noprec):   reduce Decl --> 'VAR' 'UID' 'COLON' 'INT' 'SEMI'
    action 'DLID' (noprec):   reduce Decl --> 'VAR' 'UID' 'COLON' 'INT' 'SEMI'
    action 'DUID' (noprec):   reduce Decl --> 'VAR' 'UID' 'COLON' 'INT' 'SEMI'
    action 'LID' (noprec):   reduce Decl --> 'VAR' 'UID' 'COLON' 'INT' 'SEMI'
    action 'UID' (noprec):   reduce Decl --> 'VAR' 'UID' 'COLON' 'INT' 'SEMI'
    action 'error' (noprec):   reduce Decl --> 'VAR' 'UID' 'COLON' 'INT' 'SEMI'
    action '#' (noprec):   reduce Decl --> 'VAR' 'UID' 'COLON' 'INT' 'SEMI'
    action '$$' (noprec):   reduce Decl --> 'VAR' 'UID' 'COLON' 'INT' 'SEMI'

  immediate action:   reduce Decl --> 'VAR' 'UID' 'COLON' 'INT' 'SEMI'
 gotos:

state 345:
  items:
    Decl -> ProcOrImpl . SpecialProcDecl 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    Decl -> ProcOrImpl . 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    Decl -> ProcOrImpl . 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    Decl -> ProcOrImpl . 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls InlineBlock 'RBRACE'
    Decl -> ProcOrImpl . 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls ProcBlock 'RBRACE'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   shift 325
    action 'RET' (noprec):   shift 326
    action 'IRET' (noprec):   shift 327
    action 'GO' (noprec):   shift 328
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   shift 353
    action 'UID' (noprec):   shift 360
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto SpecialProcDecl: 346

state 346:
  items:
    Decl -> ProcOrImpl SpecialProcDecl . 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (explicit left 10000):   shift 347
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 347:
  items:
    Decl -> ProcOrImpl SpecialProcDecl 'LPAREN' . ProcFormals 'RPAREN' Specs 'SEMI' Specs

  actions:
    action 'EOF' (noprec):   reduce ProcFormals --> 
    action 'EAX' (noprec):   reduce ProcFormals --> 
    action 'EBX' (noprec):   reduce ProcFormals --> 
    action 'ECX' (noprec):   reduce ProcFormals --> 
    action 'EDX' (noprec):   reduce ProcFormals --> 
    action 'ESI' (noprec):   reduce ProcFormals --> 
    action 'EDI' (noprec):   reduce ProcFormals --> 
    action 'EBP' (noprec):   reduce ProcFormals --> 
    action 'ESP' (noprec):   reduce ProcFormals --> 
    action 'MODIFIES' (noprec):   reduce ProcFormals --> 
    action 'INVARIANT' (noprec):   reduce ProcFormals --> 
    action 'ASSERT' (noprec):   reduce ProcFormals --> 
    action 'HAVOC' (noprec):   reduce ProcFormals --> 
    action 'GOTO' (noprec):   reduce ProcFormals --> 
    action 'CALL' (noprec):   reduce ProcFormals --> 
    action 'CCALL' (noprec):   reduce ProcFormals --> 
    action 'RET' (noprec):   reduce ProcFormals --> 
    action 'IRET' (noprec):   reduce ProcFormals --> 
    action 'GO' (noprec):   reduce ProcFormals --> 
    action 'FORALL' (noprec):   reduce ProcFormals --> 
    action 'EXISTS' (noprec):   reduce ProcFormals --> 
    action 'OLD' (noprec):   reduce ProcFormals --> 
    action 'COLONCOLON' (noprec):   reduce ProcFormals --> 
    action 'EQEQGT' (noprec):   reduce ProcFormals --> 
    action 'LTEQEQGT' (noprec):   reduce ProcFormals --> 
    action 'TYPE' (noprec):   reduce ProcFormals --> 
    action 'CONST' (noprec):   reduce ProcFormals --> 
    action 'FUNCTION' (noprec):   reduce ProcFormals --> 
    action 'RETURNS' (noprec):   reduce ProcFormals --> 
    action 'AXIOM' (noprec):   reduce ProcFormals --> 
    action 'PROCEDURE' (noprec):   reduce ProcFormals --> 
    action 'IMPLEMENTATION' (noprec):   reduce ProcFormals --> 
    action 'REQUIRES' (noprec):   reduce ProcFormals --> 
    action 'ENSURES' (noprec):   reduce ProcFormals --> 
    action 'LT' (noprec):   reduce ProcFormals --> 
    action 'GT' (noprec):   reduce ProcFormals --> 
    action 'EQ' (noprec):   reduce ProcFormals --> 
    action 'BANG' (noprec):   reduce ProcFormals --> 
    action 'COMMA' (noprec):   reduce ProcFormals --> 
    action 'LE' (noprec):   reduce ProcFormals --> 
    action 'GE' (noprec):   reduce ProcFormals --> 
    action 'EQEQ' (noprec):   reduce ProcFormals --> 
    action 'NE' (noprec):   reduce ProcFormals --> 
    action 'PLUS' (noprec):   reduce ProcFormals --> 
    action 'MINUS' (noprec):   reduce ProcFormals --> 
    action 'STAR' (noprec):   reduce ProcFormals --> 
    action 'SLASH' (noprec):   reduce ProcFormals --> 
    action 'PERCENT' (noprec):   reduce ProcFormals --> 
    action 'AMPAMP' (noprec):   reduce ProcFormals --> 
    action 'BARBAR' (noprec):   reduce ProcFormals --> 
    action 'COLONEQ' (noprec):   reduce ProcFormals --> 
    action 'INT' (noprec):   reduce ProcFormals --> 
    action 'BOOL' (noprec):   reduce ProcFormals --> 
    action 'IF' (noprec):   reduce ProcFormals --> 
    action 'RETURN' (noprec):   reduce ProcFormals --> 
    action 'VAR' (noprec):   reduce ProcFormals --> 
    action 'LBRACE' (noprec):   reduce ProcFormals --> 
    action 'RBRACE' (noprec):   reduce ProcFormals --> 
    action 'SEMI' (noprec):   reduce ProcFormals --> 
    action 'COLON' (noprec):   reduce ProcFormals --> 
    action 'LPAREN' (noprec):   reduce ProcFormals --> 
    action 'RPAREN' (noprec):   reduce ProcFormals --> 
    action 'LBRACKET' (noprec):   reduce ProcFormals --> 
    action 'RBRACKET' (noprec):   reduce ProcFormals --> 
    action 'LITBOOL' (noprec):   reduce ProcFormals --> 
    action 'LITINT' (noprec):   reduce ProcFormals --> 
    action 'QLID' (noprec):   reduce ProcFormals --> 
    action 'QUID' (noprec):   reduce ProcFormals --> 
    action 'DLID' (noprec):   shift 281
    action 'DUID' (noprec):   reduce ProcFormals --> 
    action 'LID' (noprec):   reduce ProcFormals --> 
    action 'UID' (noprec):   reduce ProcFormals --> 
    action 'error' (noprec):   reduce ProcFormals --> 
    action '#' (noprec):   reduce ProcFormals --> 
    action '$$' (noprec):   reduce ProcFormals --> 

  immediate action: <none>
 gotos:
    goto ProcFormal: 284
    goto ProcFormals: 348

state 348:
  items:
    Decl -> ProcOrImpl SpecialProcDecl 'LPAREN' ProcFormals . 'RPAREN' Specs 'SEMI' Specs

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (explicit left 10000):   shift 349
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 349:
  items:
    Decl -> ProcOrImpl SpecialProcDecl 'LPAREN' ProcFormals 'RPAREN' . Specs 'SEMI' Specs

  actions:
    action 'EOF' (noprec):   reduce Specs --> 
    action 'EAX' (noprec):   reduce Specs --> 
    action 'EBX' (noprec):   reduce Specs --> 
    action 'ECX' (noprec):   reduce Specs --> 
    action 'EDX' (noprec):   reduce Specs --> 
    action 'ESI' (noprec):   reduce Specs --> 
    action 'EDI' (noprec):   reduce Specs --> 
    action 'EBP' (noprec):   reduce Specs --> 
    action 'ESP' (noprec):   reduce Specs --> 
    action 'MODIFIES' (noprec):   shift 291
    action 'INVARIANT' (noprec):   reduce Specs --> 
    action 'ASSERT' (noprec):   reduce Specs --> 
    action 'HAVOC' (noprec):   reduce Specs --> 
    action 'GOTO' (noprec):   reduce Specs --> 
    action 'CALL' (noprec):   reduce Specs --> 
    action 'CCALL' (noprec):   reduce Specs --> 
    action 'RET' (noprec):   reduce Specs --> 
    action 'IRET' (noprec):   reduce Specs --> 
    action 'GO' (noprec):   reduce Specs --> 
    action 'FORALL' (noprec):   reduce Specs --> 
    action 'EXISTS' (noprec):   reduce Specs --> 
    action 'OLD' (noprec):   reduce Specs --> 
    action 'COLONCOLON' (noprec):   reduce Specs --> 
    action 'EQEQGT' (noprec):   reduce Specs --> 
    action 'LTEQEQGT' (noprec):   reduce Specs --> 
    action 'TYPE' (noprec):   reduce Specs --> 
    action 'CONST' (noprec):   reduce Specs --> 
    action 'FUNCTION' (noprec):   reduce Specs --> 
    action 'RETURNS' (noprec):   shift 294
    action 'AXIOM' (noprec):   reduce Specs --> 
    action 'PROCEDURE' (noprec):   reduce Specs --> 
    action 'IMPLEMENTATION' (noprec):   reduce Specs --> 
    action 'REQUIRES' (noprec):   shift 287
    action 'ENSURES' (noprec):   shift 289
    action 'LT' (noprec):   reduce Specs --> 
    action 'GT' (noprec):   reduce Specs --> 
    action 'EQ' (noprec):   reduce Specs --> 
    action 'BANG' (noprec):   reduce Specs --> 
    action 'COMMA' (noprec):   reduce Specs --> 
    action 'LE' (noprec):   reduce Specs --> 
    action 'GE' (noprec):   reduce Specs --> 
    action 'EQEQ' (noprec):   reduce Specs --> 
    action 'NE' (noprec):   reduce Specs --> 
    action 'PLUS' (noprec):   reduce Specs --> 
    action 'MINUS' (noprec):   reduce Specs --> 
    action 'STAR' (noprec):   reduce Specs --> 
    action 'SLASH' (noprec):   reduce Specs --> 
    action 'PERCENT' (noprec):   reduce Specs --> 
    action 'AMPAMP' (noprec):   reduce Specs --> 
    action 'BARBAR' (noprec):   reduce Specs --> 
    action 'COLONEQ' (noprec):   reduce Specs --> 
    action 'INT' (noprec):   reduce Specs --> 
    action 'BOOL' (noprec):   reduce Specs --> 
    action 'IF' (noprec):   reduce Specs --> 
    action 'RETURN' (noprec):   reduce Specs --> 
    action 'VAR' (noprec):   reduce Specs --> 
    action 'LBRACE' (noprec):   reduce Specs --> 
    action 'RBRACE' (noprec):   reduce Specs --> 
    action 'SEMI' (noprec):   reduce Specs --> 
    action 'COLON' (noprec):   reduce Specs --> 
    action 'LPAREN' (noprec):   reduce Specs --> 
    action 'RPAREN' (noprec):   reduce Specs --> 
    action 'LBRACKET' (noprec):   reduce Specs --> 
    action 'RBRACKET' (noprec):   reduce Specs --> 
    action 'LITBOOL' (noprec):   reduce Specs --> 
    action 'LITINT' (noprec):   reduce Specs --> 
    action 'QLID' (noprec):   reduce Specs --> 
    action 'QUID' (noprec):   reduce Specs --> 
    action 'DLID' (noprec):   reduce Specs --> 
    action 'DUID' (noprec):   reduce Specs --> 
    action 'LID' (noprec):   reduce Specs --> 
    action 'UID' (noprec):   reduce Specs --> 
    action 'error' (noprec):   reduce Specs --> 
    action '#' (noprec):   reduce Specs --> 
    action '$$' (noprec):   reduce Specs --> 

  immediate action: <none>
 gotos:
    goto Spec: 298
    goto Specs: 350

state 350:
  items:
    Decl -> ProcOrImpl SpecialProcDecl 'LPAREN' ProcFormals 'RPAREN' Specs . 'SEMI' Specs

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   shift 351
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 351:
  items:
    Decl -> ProcOrImpl SpecialProcDecl 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' . Specs

  actions:
    action 'EOF' (noprec):   reduce Specs --> 
    action 'EAX' (noprec):   reduce Specs --> 
    action 'EBX' (noprec):   reduce Specs --> 
    action 'ECX' (noprec):   reduce Specs --> 
    action 'EDX' (noprec):   reduce Specs --> 
    action 'ESI' (noprec):   reduce Specs --> 
    action 'EDI' (noprec):   reduce Specs --> 
    action 'EBP' (noprec):   reduce Specs --> 
    action 'ESP' (noprec):   reduce Specs --> 
    action 'MODIFIES' (noprec):   shift 291
    action 'INVARIANT' (noprec):   reduce Specs --> 
    action 'ASSERT' (noprec):   reduce Specs --> 
    action 'HAVOC' (noprec):   reduce Specs --> 
    action 'GOTO' (noprec):   reduce Specs --> 
    action 'CALL' (noprec):   reduce Specs --> 
    action 'CCALL' (noprec):   reduce Specs --> 
    action 'RET' (noprec):   reduce Specs --> 
    action 'IRET' (noprec):   reduce Specs --> 
    action 'GO' (noprec):   reduce Specs --> 
    action 'FORALL' (noprec):   reduce Specs --> 
    action 'EXISTS' (noprec):   reduce Specs --> 
    action 'OLD' (noprec):   reduce Specs --> 
    action 'COLONCOLON' (noprec):   reduce Specs --> 
    action 'EQEQGT' (noprec):   reduce Specs --> 
    action 'LTEQEQGT' (noprec):   reduce Specs --> 
    action 'TYPE' (noprec):   reduce Specs --> 
    action 'CONST' (noprec):   reduce Specs --> 
    action 'FUNCTION' (noprec):   reduce Specs --> 
    action 'RETURNS' (noprec):   shift 294
    action 'AXIOM' (noprec):   reduce Specs --> 
    action 'PROCEDURE' (noprec):   reduce Specs --> 
    action 'IMPLEMENTATION' (noprec):   reduce Specs --> 
    action 'REQUIRES' (noprec):   shift 287
    action 'ENSURES' (noprec):   shift 289
    action 'LT' (noprec):   reduce Specs --> 
    action 'GT' (noprec):   reduce Specs --> 
    action 'EQ' (noprec):   reduce Specs --> 
    action 'BANG' (noprec):   reduce Specs --> 
    action 'COMMA' (noprec):   reduce Specs --> 
    action 'LE' (noprec):   reduce Specs --> 
    action 'GE' (noprec):   reduce Specs --> 
    action 'EQEQ' (noprec):   reduce Specs --> 
    action 'NE' (noprec):   reduce Specs --> 
    action 'PLUS' (noprec):   reduce Specs --> 
    action 'MINUS' (noprec):   reduce Specs --> 
    action 'STAR' (noprec):   reduce Specs --> 
    action 'SLASH' (noprec):   reduce Specs --> 
    action 'PERCENT' (noprec):   reduce Specs --> 
    action 'AMPAMP' (noprec):   reduce Specs --> 
    action 'BARBAR' (noprec):   reduce Specs --> 
    action 'COLONEQ' (noprec):   reduce Specs --> 
    action 'INT' (noprec):   reduce Specs --> 
    action 'BOOL' (noprec):   reduce Specs --> 
    action 'IF' (noprec):   reduce Specs --> 
    action 'RETURN' (noprec):   reduce Specs --> 
    action 'VAR' (noprec):   reduce Specs --> 
    action 'LBRACE' (noprec):   reduce Specs --> 
    action 'RBRACE' (noprec):   reduce Specs --> 
    action 'SEMI' (noprec):   reduce Specs --> 
    action 'COLON' (noprec):   reduce Specs --> 
    action 'LPAREN' (noprec):   reduce Specs --> 
    action 'RPAREN' (noprec):   reduce Specs --> 
    action 'LBRACKET' (noprec):   reduce Specs --> 
    action 'RBRACKET' (noprec):   reduce Specs --> 
    action 'LITBOOL' (noprec):   reduce Specs --> 
    action 'LITINT' (noprec):   reduce Specs --> 
    action 'QLID' (noprec):   reduce Specs --> 
    action 'QUID' (noprec):   reduce Specs --> 
    action 'DLID' (noprec):   reduce Specs --> 
    action 'DUID' (noprec):   reduce Specs --> 
    action 'LID' (noprec):   reduce Specs --> 
    action 'UID' (noprec):   reduce Specs --> 
    action 'error' (noprec):   reduce Specs --> 
    action '#' (noprec):   reduce Specs --> 
    action '$$' (noprec):   reduce Specs --> 

  immediate action: <none>
 gotos:
    goto Spec: 298
    goto Specs: 352

state 352:
  items:
    Decl -> ProcOrImpl SpecialProcDecl 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs . 

  actions:
    action 'EOF' (noprec):   reduce Decl --> ProcOrImpl SpecialProcDecl 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'EAX' (noprec):   reduce Decl --> ProcOrImpl SpecialProcDecl 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'EBX' (noprec):   reduce Decl --> ProcOrImpl SpecialProcDecl 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'ECX' (noprec):   reduce Decl --> ProcOrImpl SpecialProcDecl 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'EDX' (noprec):   reduce Decl --> ProcOrImpl SpecialProcDecl 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'ESI' (noprec):   reduce Decl --> ProcOrImpl SpecialProcDecl 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'EDI' (noprec):   reduce Decl --> ProcOrImpl SpecialProcDecl 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'EBP' (noprec):   reduce Decl --> ProcOrImpl SpecialProcDecl 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'ESP' (noprec):   reduce Decl --> ProcOrImpl SpecialProcDecl 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'MODIFIES' (noprec):   reduce Decl --> ProcOrImpl SpecialProcDecl 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'INVARIANT' (noprec):   reduce Decl --> ProcOrImpl SpecialProcDecl 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'ASSERT' (noprec):   reduce Decl --> ProcOrImpl SpecialProcDecl 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'HAVOC' (noprec):   reduce Decl --> ProcOrImpl SpecialProcDecl 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'GOTO' (noprec):   reduce Decl --> ProcOrImpl SpecialProcDecl 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'CALL' (noprec):   reduce Decl --> ProcOrImpl SpecialProcDecl 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'CCALL' (noprec):   reduce Decl --> ProcOrImpl SpecialProcDecl 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'RET' (noprec):   reduce Decl --> ProcOrImpl SpecialProcDecl 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'IRET' (noprec):   reduce Decl --> ProcOrImpl SpecialProcDecl 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'GO' (noprec):   reduce Decl --> ProcOrImpl SpecialProcDecl 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'FORALL' (noprec):   reduce Decl --> ProcOrImpl SpecialProcDecl 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'EXISTS' (noprec):   reduce Decl --> ProcOrImpl SpecialProcDecl 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'OLD' (noprec):   reduce Decl --> ProcOrImpl SpecialProcDecl 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'COLONCOLON' (noprec):   reduce Decl --> ProcOrImpl SpecialProcDecl 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'EQEQGT' (noprec):   reduce Decl --> ProcOrImpl SpecialProcDecl 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'LTEQEQGT' (noprec):   reduce Decl --> ProcOrImpl SpecialProcDecl 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'TYPE' (noprec):   reduce Decl --> ProcOrImpl SpecialProcDecl 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'CONST' (noprec):   reduce Decl --> ProcOrImpl SpecialProcDecl 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'FUNCTION' (noprec):   reduce Decl --> ProcOrImpl SpecialProcDecl 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'RETURNS' (noprec):   reduce Decl --> ProcOrImpl SpecialProcDecl 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'AXIOM' (noprec):   reduce Decl --> ProcOrImpl SpecialProcDecl 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'PROCEDURE' (noprec):   reduce Decl --> ProcOrImpl SpecialProcDecl 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'IMPLEMENTATION' (noprec):   reduce Decl --> ProcOrImpl SpecialProcDecl 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'REQUIRES' (noprec):   reduce Decl --> ProcOrImpl SpecialProcDecl 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'ENSURES' (noprec):   reduce Decl --> ProcOrImpl SpecialProcDecl 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'LT' (noprec):   reduce Decl --> ProcOrImpl SpecialProcDecl 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'GT' (noprec):   reduce Decl --> ProcOrImpl SpecialProcDecl 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'EQ' (noprec):   reduce Decl --> ProcOrImpl SpecialProcDecl 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'BANG' (noprec):   reduce Decl --> ProcOrImpl SpecialProcDecl 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'COMMA' (noprec):   reduce Decl --> ProcOrImpl SpecialProcDecl 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'LE' (noprec):   reduce Decl --> ProcOrImpl SpecialProcDecl 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'GE' (noprec):   reduce Decl --> ProcOrImpl SpecialProcDecl 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'EQEQ' (noprec):   reduce Decl --> ProcOrImpl SpecialProcDecl 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'NE' (noprec):   reduce Decl --> ProcOrImpl SpecialProcDecl 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'PLUS' (noprec):   reduce Decl --> ProcOrImpl SpecialProcDecl 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'MINUS' (noprec):   reduce Decl --> ProcOrImpl SpecialProcDecl 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'STAR' (noprec):   reduce Decl --> ProcOrImpl SpecialProcDecl 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'SLASH' (noprec):   reduce Decl --> ProcOrImpl SpecialProcDecl 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'PERCENT' (noprec):   reduce Decl --> ProcOrImpl SpecialProcDecl 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'AMPAMP' (noprec):   reduce Decl --> ProcOrImpl SpecialProcDecl 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'BARBAR' (noprec):   reduce Decl --> ProcOrImpl SpecialProcDecl 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'COLONEQ' (noprec):   reduce Decl --> ProcOrImpl SpecialProcDecl 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'INT' (noprec):   reduce Decl --> ProcOrImpl SpecialProcDecl 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'BOOL' (noprec):   reduce Decl --> ProcOrImpl SpecialProcDecl 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'IF' (noprec):   reduce Decl --> ProcOrImpl SpecialProcDecl 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'RETURN' (noprec):   reduce Decl --> ProcOrImpl SpecialProcDecl 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'VAR' (noprec):   reduce Decl --> ProcOrImpl SpecialProcDecl 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'LBRACE' (noprec):   reduce Decl --> ProcOrImpl SpecialProcDecl 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'RBRACE' (noprec):   reduce Decl --> ProcOrImpl SpecialProcDecl 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'SEMI' (noprec):   reduce Decl --> ProcOrImpl SpecialProcDecl 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'COLON' (noprec):   reduce Decl --> ProcOrImpl SpecialProcDecl 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'LPAREN' (noprec):   reduce Decl --> ProcOrImpl SpecialProcDecl 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'RPAREN' (noprec):   reduce Decl --> ProcOrImpl SpecialProcDecl 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'LBRACKET' (noprec):   reduce Decl --> ProcOrImpl SpecialProcDecl 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'RBRACKET' (noprec):   reduce Decl --> ProcOrImpl SpecialProcDecl 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'LITBOOL' (noprec):   reduce Decl --> ProcOrImpl SpecialProcDecl 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'LITINT' (noprec):   reduce Decl --> ProcOrImpl SpecialProcDecl 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'QLID' (noprec):   reduce Decl --> ProcOrImpl SpecialProcDecl 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'QUID' (noprec):   reduce Decl --> ProcOrImpl SpecialProcDecl 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'DLID' (noprec):   reduce Decl --> ProcOrImpl SpecialProcDecl 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'DUID' (noprec):   reduce Decl --> ProcOrImpl SpecialProcDecl 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'LID' (noprec):   reduce Decl --> ProcOrImpl SpecialProcDecl 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'UID' (noprec):   reduce Decl --> ProcOrImpl SpecialProcDecl 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'error' (noprec):   reduce Decl --> ProcOrImpl SpecialProcDecl 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action '#' (noprec):   reduce Decl --> ProcOrImpl SpecialProcDecl 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action '$$' (noprec):   reduce Decl --> ProcOrImpl SpecialProcDecl 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs

  immediate action:   reduce Decl --> ProcOrImpl SpecialProcDecl 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
 gotos:

state 353:
  items:
    Decl -> ProcOrImpl 'LID' . 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    Decl -> ProcOrImpl 'LID' . 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls InlineBlock 'RBRACE'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (explicit left 10000):   shift 354
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 354:
  items:
    Decl -> ProcOrImpl 'LID' 'LPAREN' . ProcFormals 'RPAREN' Specs 'SEMI' Specs
    Decl -> ProcOrImpl 'LID' 'LPAREN' . ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls InlineBlock 'RBRACE'

  actions:
    action 'EOF' (noprec):   reduce ProcFormals --> 
    action 'EAX' (noprec):   reduce ProcFormals --> 
    action 'EBX' (noprec):   reduce ProcFormals --> 
    action 'ECX' (noprec):   reduce ProcFormals --> 
    action 'EDX' (noprec):   reduce ProcFormals --> 
    action 'ESI' (noprec):   reduce ProcFormals --> 
    action 'EDI' (noprec):   reduce ProcFormals --> 
    action 'EBP' (noprec):   reduce ProcFormals --> 
    action 'ESP' (noprec):   reduce ProcFormals --> 
    action 'MODIFIES' (noprec):   reduce ProcFormals --> 
    action 'INVARIANT' (noprec):   reduce ProcFormals --> 
    action 'ASSERT' (noprec):   reduce ProcFormals --> 
    action 'HAVOC' (noprec):   reduce ProcFormals --> 
    action 'GOTO' (noprec):   reduce ProcFormals --> 
    action 'CALL' (noprec):   reduce ProcFormals --> 
    action 'CCALL' (noprec):   reduce ProcFormals --> 
    action 'RET' (noprec):   reduce ProcFormals --> 
    action 'IRET' (noprec):   reduce ProcFormals --> 
    action 'GO' (noprec):   reduce ProcFormals --> 
    action 'FORALL' (noprec):   reduce ProcFormals --> 
    action 'EXISTS' (noprec):   reduce ProcFormals --> 
    action 'OLD' (noprec):   reduce ProcFormals --> 
    action 'COLONCOLON' (noprec):   reduce ProcFormals --> 
    action 'EQEQGT' (noprec):   reduce ProcFormals --> 
    action 'LTEQEQGT' (noprec):   reduce ProcFormals --> 
    action 'TYPE' (noprec):   reduce ProcFormals --> 
    action 'CONST' (noprec):   reduce ProcFormals --> 
    action 'FUNCTION' (noprec):   reduce ProcFormals --> 
    action 'RETURNS' (noprec):   reduce ProcFormals --> 
    action 'AXIOM' (noprec):   reduce ProcFormals --> 
    action 'PROCEDURE' (noprec):   reduce ProcFormals --> 
    action 'IMPLEMENTATION' (noprec):   reduce ProcFormals --> 
    action 'REQUIRES' (noprec):   reduce ProcFormals --> 
    action 'ENSURES' (noprec):   reduce ProcFormals --> 
    action 'LT' (noprec):   reduce ProcFormals --> 
    action 'GT' (noprec):   reduce ProcFormals --> 
    action 'EQ' (noprec):   reduce ProcFormals --> 
    action 'BANG' (noprec):   reduce ProcFormals --> 
    action 'COMMA' (noprec):   reduce ProcFormals --> 
    action 'LE' (noprec):   reduce ProcFormals --> 
    action 'GE' (noprec):   reduce ProcFormals --> 
    action 'EQEQ' (noprec):   reduce ProcFormals --> 
    action 'NE' (noprec):   reduce ProcFormals --> 
    action 'PLUS' (noprec):   reduce ProcFormals --> 
    action 'MINUS' (noprec):   reduce ProcFormals --> 
    action 'STAR' (noprec):   reduce ProcFormals --> 
    action 'SLASH' (noprec):   reduce ProcFormals --> 
    action 'PERCENT' (noprec):   reduce ProcFormals --> 
    action 'AMPAMP' (noprec):   reduce ProcFormals --> 
    action 'BARBAR' (noprec):   reduce ProcFormals --> 
    action 'COLONEQ' (noprec):   reduce ProcFormals --> 
    action 'INT' (noprec):   reduce ProcFormals --> 
    action 'BOOL' (noprec):   reduce ProcFormals --> 
    action 'IF' (noprec):   reduce ProcFormals --> 
    action 'RETURN' (noprec):   reduce ProcFormals --> 
    action 'VAR' (noprec):   reduce ProcFormals --> 
    action 'LBRACE' (noprec):   reduce ProcFormals --> 
    action 'RBRACE' (noprec):   reduce ProcFormals --> 
    action 'SEMI' (noprec):   reduce ProcFormals --> 
    action 'COLON' (noprec):   reduce ProcFormals --> 
    action 'LPAREN' (noprec):   reduce ProcFormals --> 
    action 'RPAREN' (noprec):   reduce ProcFormals --> 
    action 'LBRACKET' (noprec):   reduce ProcFormals --> 
    action 'RBRACKET' (noprec):   reduce ProcFormals --> 
    action 'LITBOOL' (noprec):   reduce ProcFormals --> 
    action 'LITINT' (noprec):   reduce ProcFormals --> 
    action 'QLID' (noprec):   reduce ProcFormals --> 
    action 'QUID' (noprec):   reduce ProcFormals --> 
    action 'DLID' (noprec):   shift 281
    action 'DUID' (noprec):   reduce ProcFormals --> 
    action 'LID' (noprec):   reduce ProcFormals --> 
    action 'UID' (noprec):   reduce ProcFormals --> 
    action 'error' (noprec):   reduce ProcFormals --> 
    action '#' (noprec):   reduce ProcFormals --> 
    action '$$' (noprec):   reduce ProcFormals --> 

  immediate action: <none>
 gotos:
    goto ProcFormal: 284
    goto ProcFormals: 355

state 355:
  items:
    Decl -> ProcOrImpl 'LID' 'LPAREN' ProcFormals . 'RPAREN' Specs 'SEMI' Specs
    Decl -> ProcOrImpl 'LID' 'LPAREN' ProcFormals . 'RPAREN' Specs 'LBRACE' ProcDecls InlineBlock 'RBRACE'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (explicit left 10000):   shift 356
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 356:
  items:
    Decl -> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' . Specs 'SEMI' Specs
    Decl -> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' . Specs 'LBRACE' ProcDecls InlineBlock 'RBRACE'

  actions:
    action 'EOF' (noprec):   reduce Specs --> 
    action 'EAX' (noprec):   reduce Specs --> 
    action 'EBX' (noprec):   reduce Specs --> 
    action 'ECX' (noprec):   reduce Specs --> 
    action 'EDX' (noprec):   reduce Specs --> 
    action 'ESI' (noprec):   reduce Specs --> 
    action 'EDI' (noprec):   reduce Specs --> 
    action 'EBP' (noprec):   reduce Specs --> 
    action 'ESP' (noprec):   reduce Specs --> 
    action 'MODIFIES' (noprec):   shift 291
    action 'INVARIANT' (noprec):   reduce Specs --> 
    action 'ASSERT' (noprec):   reduce Specs --> 
    action 'HAVOC' (noprec):   reduce Specs --> 
    action 'GOTO' (noprec):   reduce Specs --> 
    action 'CALL' (noprec):   reduce Specs --> 
    action 'CCALL' (noprec):   reduce Specs --> 
    action 'RET' (noprec):   reduce Specs --> 
    action 'IRET' (noprec):   reduce Specs --> 
    action 'GO' (noprec):   reduce Specs --> 
    action 'FORALL' (noprec):   reduce Specs --> 
    action 'EXISTS' (noprec):   reduce Specs --> 
    action 'OLD' (noprec):   reduce Specs --> 
    action 'COLONCOLON' (noprec):   reduce Specs --> 
    action 'EQEQGT' (noprec):   reduce Specs --> 
    action 'LTEQEQGT' (noprec):   reduce Specs --> 
    action 'TYPE' (noprec):   reduce Specs --> 
    action 'CONST' (noprec):   reduce Specs --> 
    action 'FUNCTION' (noprec):   reduce Specs --> 
    action 'RETURNS' (noprec):   shift 294
    action 'AXIOM' (noprec):   reduce Specs --> 
    action 'PROCEDURE' (noprec):   reduce Specs --> 
    action 'IMPLEMENTATION' (noprec):   reduce Specs --> 
    action 'REQUIRES' (noprec):   shift 287
    action 'ENSURES' (noprec):   shift 289
    action 'LT' (noprec):   reduce Specs --> 
    action 'GT' (noprec):   reduce Specs --> 
    action 'EQ' (noprec):   reduce Specs --> 
    action 'BANG' (noprec):   reduce Specs --> 
    action 'COMMA' (noprec):   reduce Specs --> 
    action 'LE' (noprec):   reduce Specs --> 
    action 'GE' (noprec):   reduce Specs --> 
    action 'EQEQ' (noprec):   reduce Specs --> 
    action 'NE' (noprec):   reduce Specs --> 
    action 'PLUS' (noprec):   reduce Specs --> 
    action 'MINUS' (noprec):   reduce Specs --> 
    action 'STAR' (noprec):   reduce Specs --> 
    action 'SLASH' (noprec):   reduce Specs --> 
    action 'PERCENT' (noprec):   reduce Specs --> 
    action 'AMPAMP' (noprec):   reduce Specs --> 
    action 'BARBAR' (noprec):   reduce Specs --> 
    action 'COLONEQ' (noprec):   reduce Specs --> 
    action 'INT' (noprec):   reduce Specs --> 
    action 'BOOL' (noprec):   reduce Specs --> 
    action 'IF' (noprec):   reduce Specs --> 
    action 'RETURN' (noprec):   reduce Specs --> 
    action 'VAR' (noprec):   reduce Specs --> 
    action 'LBRACE' (noprec):   reduce Specs --> 
    action 'RBRACE' (noprec):   reduce Specs --> 
    action 'SEMI' (noprec):   reduce Specs --> 
    action 'COLON' (noprec):   reduce Specs --> 
    action 'LPAREN' (noprec):   reduce Specs --> 
    action 'RPAREN' (noprec):   reduce Specs --> 
    action 'LBRACKET' (noprec):   reduce Specs --> 
    action 'RBRACKET' (noprec):   reduce Specs --> 
    action 'LITBOOL' (noprec):   reduce Specs --> 
    action 'LITINT' (noprec):   reduce Specs --> 
    action 'QLID' (noprec):   reduce Specs --> 
    action 'QUID' (noprec):   reduce Specs --> 
    action 'DLID' (noprec):   reduce Specs --> 
    action 'DUID' (noprec):   reduce Specs --> 
    action 'LID' (noprec):   reduce Specs --> 
    action 'UID' (noprec):   reduce Specs --> 
    action 'error' (noprec):   reduce Specs --> 
    action '#' (noprec):   reduce Specs --> 
    action '$$' (noprec):   reduce Specs --> 

  immediate action: <none>
 gotos:
    goto Spec: 298
    goto Specs: 357

state 357:
  items:
    Decl -> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs . 'SEMI' Specs
    Decl -> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs . 'LBRACE' ProcDecls InlineBlock 'RBRACE'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   shift 367
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   shift 358
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 358:
  items:
    Decl -> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' . Specs

  actions:
    action 'EOF' (noprec):   reduce Specs --> 
    action 'EAX' (noprec):   reduce Specs --> 
    action 'EBX' (noprec):   reduce Specs --> 
    action 'ECX' (noprec):   reduce Specs --> 
    action 'EDX' (noprec):   reduce Specs --> 
    action 'ESI' (noprec):   reduce Specs --> 
    action 'EDI' (noprec):   reduce Specs --> 
    action 'EBP' (noprec):   reduce Specs --> 
    action 'ESP' (noprec):   reduce Specs --> 
    action 'MODIFIES' (noprec):   shift 291
    action 'INVARIANT' (noprec):   reduce Specs --> 
    action 'ASSERT' (noprec):   reduce Specs --> 
    action 'HAVOC' (noprec):   reduce Specs --> 
    action 'GOTO' (noprec):   reduce Specs --> 
    action 'CALL' (noprec):   reduce Specs --> 
    action 'CCALL' (noprec):   reduce Specs --> 
    action 'RET' (noprec):   reduce Specs --> 
    action 'IRET' (noprec):   reduce Specs --> 
    action 'GO' (noprec):   reduce Specs --> 
    action 'FORALL' (noprec):   reduce Specs --> 
    action 'EXISTS' (noprec):   reduce Specs --> 
    action 'OLD' (noprec):   reduce Specs --> 
    action 'COLONCOLON' (noprec):   reduce Specs --> 
    action 'EQEQGT' (noprec):   reduce Specs --> 
    action 'LTEQEQGT' (noprec):   reduce Specs --> 
    action 'TYPE' (noprec):   reduce Specs --> 
    action 'CONST' (noprec):   reduce Specs --> 
    action 'FUNCTION' (noprec):   reduce Specs --> 
    action 'RETURNS' (noprec):   shift 294
    action 'AXIOM' (noprec):   reduce Specs --> 
    action 'PROCEDURE' (noprec):   reduce Specs --> 
    action 'IMPLEMENTATION' (noprec):   reduce Specs --> 
    action 'REQUIRES' (noprec):   shift 287
    action 'ENSURES' (noprec):   shift 289
    action 'LT' (noprec):   reduce Specs --> 
    action 'GT' (noprec):   reduce Specs --> 
    action 'EQ' (noprec):   reduce Specs --> 
    action 'BANG' (noprec):   reduce Specs --> 
    action 'COMMA' (noprec):   reduce Specs --> 
    action 'LE' (noprec):   reduce Specs --> 
    action 'GE' (noprec):   reduce Specs --> 
    action 'EQEQ' (noprec):   reduce Specs --> 
    action 'NE' (noprec):   reduce Specs --> 
    action 'PLUS' (noprec):   reduce Specs --> 
    action 'MINUS' (noprec):   reduce Specs --> 
    action 'STAR' (noprec):   reduce Specs --> 
    action 'SLASH' (noprec):   reduce Specs --> 
    action 'PERCENT' (noprec):   reduce Specs --> 
    action 'AMPAMP' (noprec):   reduce Specs --> 
    action 'BARBAR' (noprec):   reduce Specs --> 
    action 'COLONEQ' (noprec):   reduce Specs --> 
    action 'INT' (noprec):   reduce Specs --> 
    action 'BOOL' (noprec):   reduce Specs --> 
    action 'IF' (noprec):   reduce Specs --> 
    action 'RETURN' (noprec):   reduce Specs --> 
    action 'VAR' (noprec):   reduce Specs --> 
    action 'LBRACE' (noprec):   reduce Specs --> 
    action 'RBRACE' (noprec):   reduce Specs --> 
    action 'SEMI' (noprec):   reduce Specs --> 
    action 'COLON' (noprec):   reduce Specs --> 
    action 'LPAREN' (noprec):   reduce Specs --> 
    action 'RPAREN' (noprec):   reduce Specs --> 
    action 'LBRACKET' (noprec):   reduce Specs --> 
    action 'RBRACKET' (noprec):   reduce Specs --> 
    action 'LITBOOL' (noprec):   reduce Specs --> 
    action 'LITINT' (noprec):   reduce Specs --> 
    action 'QLID' (noprec):   reduce Specs --> 
    action 'QUID' (noprec):   reduce Specs --> 
    action 'DLID' (noprec):   reduce Specs --> 
    action 'DUID' (noprec):   reduce Specs --> 
    action 'LID' (noprec):   reduce Specs --> 
    action 'UID' (noprec):   reduce Specs --> 
    action 'error' (noprec):   reduce Specs --> 
    action '#' (noprec):   reduce Specs --> 
    action '$$' (noprec):   reduce Specs --> 

  immediate action: <none>
 gotos:
    goto Spec: 298
    goto Specs: 359

state 359:
  items:
    Decl -> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs . 

  actions:
    action 'EOF' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'EAX' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'EBX' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'ECX' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'EDX' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'ESI' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'EDI' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'EBP' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'ESP' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'MODIFIES' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'INVARIANT' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'ASSERT' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'HAVOC' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'GOTO' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'CALL' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'CCALL' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'RET' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'IRET' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'GO' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'FORALL' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'EXISTS' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'OLD' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'COLONCOLON' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'EQEQGT' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'LTEQEQGT' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'TYPE' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'CONST' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'FUNCTION' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'RETURNS' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'AXIOM' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'PROCEDURE' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'IMPLEMENTATION' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'REQUIRES' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'ENSURES' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'LT' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'GT' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'EQ' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'BANG' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'COMMA' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'LE' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'GE' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'EQEQ' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'NE' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'PLUS' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'MINUS' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'STAR' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'SLASH' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'PERCENT' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'AMPAMP' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'BARBAR' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'COLONEQ' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'INT' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'BOOL' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'IF' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'RETURN' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'VAR' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'LBRACE' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'RBRACE' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'SEMI' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'COLON' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'LPAREN' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'RPAREN' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'LBRACKET' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'RBRACKET' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'LITBOOL' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'LITINT' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'QLID' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'QUID' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'DLID' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'DUID' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'LID' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'UID' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'error' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action '#' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action '$$' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs

  immediate action:   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
 gotos:

state 360:
  items:
    Decl -> ProcOrImpl 'UID' . 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    Decl -> ProcOrImpl 'UID' . 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls ProcBlock 'RBRACE'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (explicit left 10000):   shift 361
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 361:
  items:
    Decl -> ProcOrImpl 'UID' 'LPAREN' . ProcFormals 'RPAREN' Specs 'SEMI' Specs
    Decl -> ProcOrImpl 'UID' 'LPAREN' . ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls ProcBlock 'RBRACE'

  actions:
    action 'EOF' (noprec):   reduce ProcFormals --> 
    action 'EAX' (noprec):   reduce ProcFormals --> 
    action 'EBX' (noprec):   reduce ProcFormals --> 
    action 'ECX' (noprec):   reduce ProcFormals --> 
    action 'EDX' (noprec):   reduce ProcFormals --> 
    action 'ESI' (noprec):   reduce ProcFormals --> 
    action 'EDI' (noprec):   reduce ProcFormals --> 
    action 'EBP' (noprec):   reduce ProcFormals --> 
    action 'ESP' (noprec):   reduce ProcFormals --> 
    action 'MODIFIES' (noprec):   reduce ProcFormals --> 
    action 'INVARIANT' (noprec):   reduce ProcFormals --> 
    action 'ASSERT' (noprec):   reduce ProcFormals --> 
    action 'HAVOC' (noprec):   reduce ProcFormals --> 
    action 'GOTO' (noprec):   reduce ProcFormals --> 
    action 'CALL' (noprec):   reduce ProcFormals --> 
    action 'CCALL' (noprec):   reduce ProcFormals --> 
    action 'RET' (noprec):   reduce ProcFormals --> 
    action 'IRET' (noprec):   reduce ProcFormals --> 
    action 'GO' (noprec):   reduce ProcFormals --> 
    action 'FORALL' (noprec):   reduce ProcFormals --> 
    action 'EXISTS' (noprec):   reduce ProcFormals --> 
    action 'OLD' (noprec):   reduce ProcFormals --> 
    action 'COLONCOLON' (noprec):   reduce ProcFormals --> 
    action 'EQEQGT' (noprec):   reduce ProcFormals --> 
    action 'LTEQEQGT' (noprec):   reduce ProcFormals --> 
    action 'TYPE' (noprec):   reduce ProcFormals --> 
    action 'CONST' (noprec):   reduce ProcFormals --> 
    action 'FUNCTION' (noprec):   reduce ProcFormals --> 
    action 'RETURNS' (noprec):   reduce ProcFormals --> 
    action 'AXIOM' (noprec):   reduce ProcFormals --> 
    action 'PROCEDURE' (noprec):   reduce ProcFormals --> 
    action 'IMPLEMENTATION' (noprec):   reduce ProcFormals --> 
    action 'REQUIRES' (noprec):   reduce ProcFormals --> 
    action 'ENSURES' (noprec):   reduce ProcFormals --> 
    action 'LT' (noprec):   reduce ProcFormals --> 
    action 'GT' (noprec):   reduce ProcFormals --> 
    action 'EQ' (noprec):   reduce ProcFormals --> 
    action 'BANG' (noprec):   reduce ProcFormals --> 
    action 'COMMA' (noprec):   reduce ProcFormals --> 
    action 'LE' (noprec):   reduce ProcFormals --> 
    action 'GE' (noprec):   reduce ProcFormals --> 
    action 'EQEQ' (noprec):   reduce ProcFormals --> 
    action 'NE' (noprec):   reduce ProcFormals --> 
    action 'PLUS' (noprec):   reduce ProcFormals --> 
    action 'MINUS' (noprec):   reduce ProcFormals --> 
    action 'STAR' (noprec):   reduce ProcFormals --> 
    action 'SLASH' (noprec):   reduce ProcFormals --> 
    action 'PERCENT' (noprec):   reduce ProcFormals --> 
    action 'AMPAMP' (noprec):   reduce ProcFormals --> 
    action 'BARBAR' (noprec):   reduce ProcFormals --> 
    action 'COLONEQ' (noprec):   reduce ProcFormals --> 
    action 'INT' (noprec):   reduce ProcFormals --> 
    action 'BOOL' (noprec):   reduce ProcFormals --> 
    action 'IF' (noprec):   reduce ProcFormals --> 
    action 'RETURN' (noprec):   reduce ProcFormals --> 
    action 'VAR' (noprec):   reduce ProcFormals --> 
    action 'LBRACE' (noprec):   reduce ProcFormals --> 
    action 'RBRACE' (noprec):   reduce ProcFormals --> 
    action 'SEMI' (noprec):   reduce ProcFormals --> 
    action 'COLON' (noprec):   reduce ProcFormals --> 
    action 'LPAREN' (noprec):   reduce ProcFormals --> 
    action 'RPAREN' (noprec):   reduce ProcFormals --> 
    action 'LBRACKET' (noprec):   reduce ProcFormals --> 
    action 'RBRACKET' (noprec):   reduce ProcFormals --> 
    action 'LITBOOL' (noprec):   reduce ProcFormals --> 
    action 'LITINT' (noprec):   reduce ProcFormals --> 
    action 'QLID' (noprec):   reduce ProcFormals --> 
    action 'QUID' (noprec):   reduce ProcFormals --> 
    action 'DLID' (noprec):   shift 281
    action 'DUID' (noprec):   reduce ProcFormals --> 
    action 'LID' (noprec):   reduce ProcFormals --> 
    action 'UID' (noprec):   reduce ProcFormals --> 
    action 'error' (noprec):   reduce ProcFormals --> 
    action '#' (noprec):   reduce ProcFormals --> 
    action '$$' (noprec):   reduce ProcFormals --> 

  immediate action: <none>
 gotos:
    goto ProcFormal: 284
    goto ProcFormals: 362

state 362:
  items:
    Decl -> ProcOrImpl 'UID' 'LPAREN' ProcFormals . 'RPAREN' Specs 'SEMI' Specs
    Decl -> ProcOrImpl 'UID' 'LPAREN' ProcFormals . 'RPAREN' Specs 'LBRACE' ProcDecls ProcBlock 'RBRACE'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (explicit left 10000):   shift 363
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 363:
  items:
    Decl -> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' . Specs 'SEMI' Specs
    Decl -> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' . Specs 'LBRACE' ProcDecls ProcBlock 'RBRACE'

  actions:
    action 'EOF' (noprec):   reduce Specs --> 
    action 'EAX' (noprec):   reduce Specs --> 
    action 'EBX' (noprec):   reduce Specs --> 
    action 'ECX' (noprec):   reduce Specs --> 
    action 'EDX' (noprec):   reduce Specs --> 
    action 'ESI' (noprec):   reduce Specs --> 
    action 'EDI' (noprec):   reduce Specs --> 
    action 'EBP' (noprec):   reduce Specs --> 
    action 'ESP' (noprec):   reduce Specs --> 
    action 'MODIFIES' (noprec):   shift 291
    action 'INVARIANT' (noprec):   reduce Specs --> 
    action 'ASSERT' (noprec):   reduce Specs --> 
    action 'HAVOC' (noprec):   reduce Specs --> 
    action 'GOTO' (noprec):   reduce Specs --> 
    action 'CALL' (noprec):   reduce Specs --> 
    action 'CCALL' (noprec):   reduce Specs --> 
    action 'RET' (noprec):   reduce Specs --> 
    action 'IRET' (noprec):   reduce Specs --> 
    action 'GO' (noprec):   reduce Specs --> 
    action 'FORALL' (noprec):   reduce Specs --> 
    action 'EXISTS' (noprec):   reduce Specs --> 
    action 'OLD' (noprec):   reduce Specs --> 
    action 'COLONCOLON' (noprec):   reduce Specs --> 
    action 'EQEQGT' (noprec):   reduce Specs --> 
    action 'LTEQEQGT' (noprec):   reduce Specs --> 
    action 'TYPE' (noprec):   reduce Specs --> 
    action 'CONST' (noprec):   reduce Specs --> 
    action 'FUNCTION' (noprec):   reduce Specs --> 
    action 'RETURNS' (noprec):   shift 294
    action 'AXIOM' (noprec):   reduce Specs --> 
    action 'PROCEDURE' (noprec):   reduce Specs --> 
    action 'IMPLEMENTATION' (noprec):   reduce Specs --> 
    action 'REQUIRES' (noprec):   shift 287
    action 'ENSURES' (noprec):   shift 289
    action 'LT' (noprec):   reduce Specs --> 
    action 'GT' (noprec):   reduce Specs --> 
    action 'EQ' (noprec):   reduce Specs --> 
    action 'BANG' (noprec):   reduce Specs --> 
    action 'COMMA' (noprec):   reduce Specs --> 
    action 'LE' (noprec):   reduce Specs --> 
    action 'GE' (noprec):   reduce Specs --> 
    action 'EQEQ' (noprec):   reduce Specs --> 
    action 'NE' (noprec):   reduce Specs --> 
    action 'PLUS' (noprec):   reduce Specs --> 
    action 'MINUS' (noprec):   reduce Specs --> 
    action 'STAR' (noprec):   reduce Specs --> 
    action 'SLASH' (noprec):   reduce Specs --> 
    action 'PERCENT' (noprec):   reduce Specs --> 
    action 'AMPAMP' (noprec):   reduce Specs --> 
    action 'BARBAR' (noprec):   reduce Specs --> 
    action 'COLONEQ' (noprec):   reduce Specs --> 
    action 'INT' (noprec):   reduce Specs --> 
    action 'BOOL' (noprec):   reduce Specs --> 
    action 'IF' (noprec):   reduce Specs --> 
    action 'RETURN' (noprec):   reduce Specs --> 
    action 'VAR' (noprec):   reduce Specs --> 
    action 'LBRACE' (noprec):   reduce Specs --> 
    action 'RBRACE' (noprec):   reduce Specs --> 
    action 'SEMI' (noprec):   reduce Specs --> 
    action 'COLON' (noprec):   reduce Specs --> 
    action 'LPAREN' (noprec):   reduce Specs --> 
    action 'RPAREN' (noprec):   reduce Specs --> 
    action 'LBRACKET' (noprec):   reduce Specs --> 
    action 'RBRACKET' (noprec):   reduce Specs --> 
    action 'LITBOOL' (noprec):   reduce Specs --> 
    action 'LITINT' (noprec):   reduce Specs --> 
    action 'QLID' (noprec):   reduce Specs --> 
    action 'QUID' (noprec):   reduce Specs --> 
    action 'DLID' (noprec):   reduce Specs --> 
    action 'DUID' (noprec):   reduce Specs --> 
    action 'LID' (noprec):   reduce Specs --> 
    action 'UID' (noprec):   reduce Specs --> 
    action 'error' (noprec):   reduce Specs --> 
    action '#' (noprec):   reduce Specs --> 
    action '$$' (noprec):   reduce Specs --> 

  immediate action: <none>
 gotos:
    goto Spec: 298
    goto Specs: 364

state 364:
  items:
    Decl -> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs . 'SEMI' Specs
    Decl -> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs . 'LBRACE' ProcDecls ProcBlock 'RBRACE'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   shift 371
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   shift 365
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 365:
  items:
    Decl -> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' . Specs

  actions:
    action 'EOF' (noprec):   reduce Specs --> 
    action 'EAX' (noprec):   reduce Specs --> 
    action 'EBX' (noprec):   reduce Specs --> 
    action 'ECX' (noprec):   reduce Specs --> 
    action 'EDX' (noprec):   reduce Specs --> 
    action 'ESI' (noprec):   reduce Specs --> 
    action 'EDI' (noprec):   reduce Specs --> 
    action 'EBP' (noprec):   reduce Specs --> 
    action 'ESP' (noprec):   reduce Specs --> 
    action 'MODIFIES' (noprec):   shift 291
    action 'INVARIANT' (noprec):   reduce Specs --> 
    action 'ASSERT' (noprec):   reduce Specs --> 
    action 'HAVOC' (noprec):   reduce Specs --> 
    action 'GOTO' (noprec):   reduce Specs --> 
    action 'CALL' (noprec):   reduce Specs --> 
    action 'CCALL' (noprec):   reduce Specs --> 
    action 'RET' (noprec):   reduce Specs --> 
    action 'IRET' (noprec):   reduce Specs --> 
    action 'GO' (noprec):   reduce Specs --> 
    action 'FORALL' (noprec):   reduce Specs --> 
    action 'EXISTS' (noprec):   reduce Specs --> 
    action 'OLD' (noprec):   reduce Specs --> 
    action 'COLONCOLON' (noprec):   reduce Specs --> 
    action 'EQEQGT' (noprec):   reduce Specs --> 
    action 'LTEQEQGT' (noprec):   reduce Specs --> 
    action 'TYPE' (noprec):   reduce Specs --> 
    action 'CONST' (noprec):   reduce Specs --> 
    action 'FUNCTION' (noprec):   reduce Specs --> 
    action 'RETURNS' (noprec):   shift 294
    action 'AXIOM' (noprec):   reduce Specs --> 
    action 'PROCEDURE' (noprec):   reduce Specs --> 
    action 'IMPLEMENTATION' (noprec):   reduce Specs --> 
    action 'REQUIRES' (noprec):   shift 287
    action 'ENSURES' (noprec):   shift 289
    action 'LT' (noprec):   reduce Specs --> 
    action 'GT' (noprec):   reduce Specs --> 
    action 'EQ' (noprec):   reduce Specs --> 
    action 'BANG' (noprec):   reduce Specs --> 
    action 'COMMA' (noprec):   reduce Specs --> 
    action 'LE' (noprec):   reduce Specs --> 
    action 'GE' (noprec):   reduce Specs --> 
    action 'EQEQ' (noprec):   reduce Specs --> 
    action 'NE' (noprec):   reduce Specs --> 
    action 'PLUS' (noprec):   reduce Specs --> 
    action 'MINUS' (noprec):   reduce Specs --> 
    action 'STAR' (noprec):   reduce Specs --> 
    action 'SLASH' (noprec):   reduce Specs --> 
    action 'PERCENT' (noprec):   reduce Specs --> 
    action 'AMPAMP' (noprec):   reduce Specs --> 
    action 'BARBAR' (noprec):   reduce Specs --> 
    action 'COLONEQ' (noprec):   reduce Specs --> 
    action 'INT' (noprec):   reduce Specs --> 
    action 'BOOL' (noprec):   reduce Specs --> 
    action 'IF' (noprec):   reduce Specs --> 
    action 'RETURN' (noprec):   reduce Specs --> 
    action 'VAR' (noprec):   reduce Specs --> 
    action 'LBRACE' (noprec):   reduce Specs --> 
    action 'RBRACE' (noprec):   reduce Specs --> 
    action 'SEMI' (noprec):   reduce Specs --> 
    action 'COLON' (noprec):   reduce Specs --> 
    action 'LPAREN' (noprec):   reduce Specs --> 
    action 'RPAREN' (noprec):   reduce Specs --> 
    action 'LBRACKET' (noprec):   reduce Specs --> 
    action 'RBRACKET' (noprec):   reduce Specs --> 
    action 'LITBOOL' (noprec):   reduce Specs --> 
    action 'LITINT' (noprec):   reduce Specs --> 
    action 'QLID' (noprec):   reduce Specs --> 
    action 'QUID' (noprec):   reduce Specs --> 
    action 'DLID' (noprec):   reduce Specs --> 
    action 'DUID' (noprec):   reduce Specs --> 
    action 'LID' (noprec):   reduce Specs --> 
    action 'UID' (noprec):   reduce Specs --> 
    action 'error' (noprec):   reduce Specs --> 
    action '#' (noprec):   reduce Specs --> 
    action '$$' (noprec):   reduce Specs --> 

  immediate action: <none>
 gotos:
    goto Spec: 298
    goto Specs: 366

state 366:
  items:
    Decl -> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs . 

  actions:
    action 'EOF' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'EAX' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'EBX' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'ECX' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'EDX' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'ESI' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'EDI' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'EBP' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'ESP' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'MODIFIES' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'INVARIANT' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'ASSERT' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'HAVOC' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'GOTO' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'CALL' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'CCALL' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'RET' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'IRET' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'GO' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'FORALL' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'EXISTS' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'OLD' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'COLONCOLON' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'EQEQGT' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'LTEQEQGT' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'TYPE' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'CONST' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'FUNCTION' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'RETURNS' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'AXIOM' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'PROCEDURE' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'IMPLEMENTATION' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'REQUIRES' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'ENSURES' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'LT' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'GT' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'EQ' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'BANG' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'COMMA' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'LE' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'GE' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'EQEQ' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'NE' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'PLUS' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'MINUS' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'STAR' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'SLASH' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'PERCENT' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'AMPAMP' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'BARBAR' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'COLONEQ' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'INT' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'BOOL' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'IF' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'RETURN' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'VAR' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'LBRACE' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'RBRACE' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'SEMI' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'COLON' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'LPAREN' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'RPAREN' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'LBRACKET' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'RBRACKET' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'LITBOOL' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'LITINT' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'QLID' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'QUID' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'DLID' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'DUID' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'LID' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'UID' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action 'error' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action '#' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
    action '$$' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs

  immediate action:   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'SEMI' Specs
 gotos:

state 367:
  items:
    Decl -> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' . ProcDecls InlineBlock 'RBRACE'

  actions:
    action 'EOF' (noprec):   reduce ProcDecls --> 
    action 'EAX' (noprec):   reduce ProcDecls --> 
    action 'EBX' (noprec):   reduce ProcDecls --> 
    action 'ECX' (noprec):   reduce ProcDecls --> 
    action 'EDX' (noprec):   reduce ProcDecls --> 
    action 'ESI' (noprec):   reduce ProcDecls --> 
    action 'EDI' (noprec):   reduce ProcDecls --> 
    action 'EBP' (noprec):   reduce ProcDecls --> 
    action 'ESP' (noprec):   reduce ProcDecls --> 
    action 'MODIFIES' (noprec):   reduce ProcDecls --> 
    action 'INVARIANT' (noprec):   reduce ProcDecls --> 
    action 'ASSERT' (noprec):   reduce ProcDecls --> 
    action 'HAVOC' (noprec):   reduce ProcDecls --> 
    action 'GOTO' (noprec):   reduce ProcDecls --> 
    action 'CALL' (noprec):   reduce ProcDecls --> 
    action 'CCALL' (noprec):   reduce ProcDecls --> 
    action 'RET' (noprec):   reduce ProcDecls --> 
    action 'IRET' (noprec):   reduce ProcDecls --> 
    action 'GO' (noprec):   reduce ProcDecls --> 
    action 'FORALL' (noprec):   reduce ProcDecls --> 
    action 'EXISTS' (noprec):   reduce ProcDecls --> 
    action 'OLD' (noprec):   reduce ProcDecls --> 
    action 'COLONCOLON' (noprec):   reduce ProcDecls --> 
    action 'EQEQGT' (noprec):   reduce ProcDecls --> 
    action 'LTEQEQGT' (noprec):   reduce ProcDecls --> 
    action 'TYPE' (noprec):   reduce ProcDecls --> 
    action 'CONST' (noprec):   reduce ProcDecls --> 
    action 'FUNCTION' (noprec):   reduce ProcDecls --> 
    action 'RETURNS' (noprec):   reduce ProcDecls --> 
    action 'AXIOM' (noprec):   reduce ProcDecls --> 
    action 'PROCEDURE' (noprec):   reduce ProcDecls --> 
    action 'IMPLEMENTATION' (noprec):   reduce ProcDecls --> 
    action 'REQUIRES' (noprec):   reduce ProcDecls --> 
    action 'ENSURES' (noprec):   reduce ProcDecls --> 
    action 'LT' (noprec):   reduce ProcDecls --> 
    action 'GT' (noprec):   reduce ProcDecls --> 
    action 'EQ' (noprec):   reduce ProcDecls --> 
    action 'BANG' (noprec):   reduce ProcDecls --> 
    action 'COMMA' (noprec):   reduce ProcDecls --> 
    action 'LE' (noprec):   reduce ProcDecls --> 
    action 'GE' (noprec):   reduce ProcDecls --> 
    action 'EQEQ' (noprec):   reduce ProcDecls --> 
    action 'NE' (noprec):   reduce ProcDecls --> 
    action 'PLUS' (noprec):   reduce ProcDecls --> 
    action 'MINUS' (noprec):   reduce ProcDecls --> 
    action 'STAR' (noprec):   reduce ProcDecls --> 
    action 'SLASH' (noprec):   reduce ProcDecls --> 
    action 'PERCENT' (noprec):   reduce ProcDecls --> 
    action 'AMPAMP' (noprec):   reduce ProcDecls --> 
    action 'BARBAR' (noprec):   reduce ProcDecls --> 
    action 'COLONEQ' (noprec):   reduce ProcDecls --> 
    action 'INT' (noprec):   reduce ProcDecls --> 
    action 'BOOL' (noprec):   reduce ProcDecls --> 
    action 'IF' (noprec):   reduce ProcDecls --> 
    action 'RETURN' (noprec):   reduce ProcDecls --> 
    action 'VAR' (noprec):   shift 262
    action 'LBRACE' (noprec):   reduce ProcDecls --> 
    action 'RBRACE' (noprec):   reduce ProcDecls --> 
    action 'SEMI' (noprec):   reduce ProcDecls --> 
    action 'COLON' (noprec):   reduce ProcDecls --> 
    action 'LPAREN' (noprec):   reduce ProcDecls --> 
    action 'RPAREN' (noprec):   reduce ProcDecls --> 
    action 'LBRACKET' (noprec):   reduce ProcDecls --> 
    action 'RBRACKET' (noprec):   reduce ProcDecls --> 
    action 'LITBOOL' (noprec):   reduce ProcDecls --> 
    action 'LITINT' (noprec):   reduce ProcDecls --> 
    action 'QLID' (noprec):   reduce ProcDecls --> 
    action 'QUID' (noprec):   reduce ProcDecls --> 
    action 'DLID' (noprec):   reduce ProcDecls --> 
    action 'DUID' (noprec):   reduce ProcDecls --> 
    action 'LID' (noprec):   reduce ProcDecls --> 
    action 'UID' (noprec):   reduce ProcDecls --> 
    action 'error' (noprec):   reduce ProcDecls --> 
    action '#' (noprec):   reduce ProcDecls --> 
    action '$$' (noprec):   reduce ProcDecls --> 

  immediate action: <none>
 gotos:
    goto ProcDecls: 368

state 368:
  items:
    Decl -> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls . InlineBlock 'RBRACE'

  actions:
    action 'EOF' (noprec):   reduce InlineBlock --> 
    action 'EAX' (noprec):   reduce InlineBlock --> 
    action 'EBX' (noprec):   reduce InlineBlock --> 
    action 'ECX' (noprec):   reduce InlineBlock --> 
    action 'EDX' (noprec):   reduce InlineBlock --> 
    action 'ESI' (noprec):   reduce InlineBlock --> 
    action 'EDI' (noprec):   reduce InlineBlock --> 
    action 'EBP' (noprec):   reduce InlineBlock --> 
    action 'ESP' (noprec):   reduce InlineBlock --> 
    action 'MODIFIES' (noprec):   reduce InlineBlock --> 
    action 'INVARIANT' (noprec):   reduce InlineBlock --> 
    action 'ASSERT' (noprec):   shift 183
    action 'HAVOC' (noprec):   shift 153
    action 'GOTO' (noprec):   reduce InlineBlock --> 
    action 'CALL' (noprec):   shift 156
    action 'CCALL' (noprec):   reduce InlineBlock --> 
    action 'RET' (noprec):   reduce InlineBlock --> 
    action 'IRET' (noprec):   reduce InlineBlock --> 
    action 'GO' (noprec):   reduce InlineBlock --> 
    action 'FORALL' (noprec):   reduce InlineBlock --> 
    action 'EXISTS' (noprec):   reduce InlineBlock --> 
    action 'OLD' (noprec):   reduce InlineBlock --> 
    action 'COLONCOLON' (noprec):   reduce InlineBlock --> 
    action 'EQEQGT' (noprec):   reduce InlineBlock --> 
    action 'LTEQEQGT' (noprec):   reduce InlineBlock --> 
    action 'TYPE' (noprec):   reduce InlineBlock --> 
    action 'CONST' (noprec):   reduce InlineBlock --> 
    action 'FUNCTION' (noprec):   reduce InlineBlock --> 
    action 'RETURNS' (noprec):   reduce InlineBlock --> 
    action 'AXIOM' (noprec):   reduce InlineBlock --> 
    action 'PROCEDURE' (noprec):   reduce InlineBlock --> 
    action 'IMPLEMENTATION' (noprec):   reduce InlineBlock --> 
    action 'REQUIRES' (noprec):   reduce InlineBlock --> 
    action 'ENSURES' (noprec):   reduce InlineBlock --> 
    action 'LT' (noprec):   reduce InlineBlock --> 
    action 'GT' (noprec):   reduce InlineBlock --> 
    action 'EQ' (noprec):   reduce InlineBlock --> 
    action 'BANG' (noprec):   reduce InlineBlock --> 
    action 'COMMA' (noprec):   reduce InlineBlock --> 
    action 'LE' (noprec):   reduce InlineBlock --> 
    action 'GE' (noprec):   reduce InlineBlock --> 
    action 'EQEQ' (noprec):   reduce InlineBlock --> 
    action 'NE' (noprec):   reduce InlineBlock --> 
    action 'PLUS' (noprec):   reduce InlineBlock --> 
    action 'MINUS' (noprec):   reduce InlineBlock --> 
    action 'STAR' (noprec):   reduce InlineBlock --> 
    action 'SLASH' (noprec):   reduce InlineBlock --> 
    action 'PERCENT' (noprec):   reduce InlineBlock --> 
    action 'AMPAMP' (noprec):   reduce InlineBlock --> 
    action 'BARBAR' (noprec):   reduce InlineBlock --> 
    action 'COLONEQ' (noprec):   reduce InlineBlock --> 
    action 'INT' (noprec):   reduce InlineBlock --> 
    action 'BOOL' (noprec):   reduce InlineBlock --> 
    action 'IF' (noprec):   reduce InlineBlock --> 
    action 'RETURN' (noprec):   reduce InlineBlock --> 
    action 'VAR' (noprec):   reduce InlineBlock --> 
    action 'LBRACE' (noprec):   reduce InlineBlock --> 
    action 'RBRACE' (noprec):   reduce InlineBlock --> 
    action 'SEMI' (noprec):   reduce InlineBlock --> 
    action 'COLON' (noprec):   reduce InlineBlock --> 
    action 'LPAREN' (noprec):   reduce InlineBlock --> 
    action 'RPAREN' (noprec):   reduce InlineBlock --> 
    action 'LBRACKET' (noprec):   reduce InlineBlock --> 
    action 'RBRACKET' (noprec):   reduce InlineBlock --> 
    action 'LITBOOL' (noprec):   reduce InlineBlock --> 
    action 'LITINT' (noprec):   reduce InlineBlock --> 
    action 'QLID' (noprec):   reduce InlineBlock --> 
    action 'QUID' (noprec):   reduce InlineBlock --> 
    action 'DLID' (noprec):   shift 185
    action 'DUID' (noprec):   reduce InlineBlock --> 
    action 'LID' (noprec):   shift 4
    action 'UID' (noprec):   shift 5
    action 'error' (noprec):   reduce InlineBlock --> 
    action '#' (noprec):   reduce InlineBlock --> 
    action '$$' (noprec):   reduce InlineBlock --> 

  immediate action: <none>
 gotos:
    goto ID: 162
    goto HavocEip: 164
    goto Stmt: 259
    goto InlineStmt: 273
    goto InlineBlock: 369

state 369:
  items:
    Decl -> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls InlineBlock . 'RBRACE'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   shift 370
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 370:
  items:
    Decl -> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls InlineBlock 'RBRACE' . 

  actions:
    action 'EOF' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls InlineBlock 'RBRACE'
    action 'EAX' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls InlineBlock 'RBRACE'
    action 'EBX' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls InlineBlock 'RBRACE'
    action 'ECX' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls InlineBlock 'RBRACE'
    action 'EDX' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls InlineBlock 'RBRACE'
    action 'ESI' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls InlineBlock 'RBRACE'
    action 'EDI' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls InlineBlock 'RBRACE'
    action 'EBP' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls InlineBlock 'RBRACE'
    action 'ESP' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls InlineBlock 'RBRACE'
    action 'MODIFIES' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls InlineBlock 'RBRACE'
    action 'INVARIANT' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls InlineBlock 'RBRACE'
    action 'ASSERT' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls InlineBlock 'RBRACE'
    action 'HAVOC' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls InlineBlock 'RBRACE'
    action 'GOTO' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls InlineBlock 'RBRACE'
    action 'CALL' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls InlineBlock 'RBRACE'
    action 'CCALL' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls InlineBlock 'RBRACE'
    action 'RET' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls InlineBlock 'RBRACE'
    action 'IRET' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls InlineBlock 'RBRACE'
    action 'GO' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls InlineBlock 'RBRACE'
    action 'FORALL' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls InlineBlock 'RBRACE'
    action 'EXISTS' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls InlineBlock 'RBRACE'
    action 'OLD' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls InlineBlock 'RBRACE'
    action 'COLONCOLON' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls InlineBlock 'RBRACE'
    action 'EQEQGT' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls InlineBlock 'RBRACE'
    action 'LTEQEQGT' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls InlineBlock 'RBRACE'
    action 'TYPE' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls InlineBlock 'RBRACE'
    action 'CONST' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls InlineBlock 'RBRACE'
    action 'FUNCTION' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls InlineBlock 'RBRACE'
    action 'RETURNS' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls InlineBlock 'RBRACE'
    action 'AXIOM' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls InlineBlock 'RBRACE'
    action 'PROCEDURE' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls InlineBlock 'RBRACE'
    action 'IMPLEMENTATION' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls InlineBlock 'RBRACE'
    action 'REQUIRES' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls InlineBlock 'RBRACE'
    action 'ENSURES' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls InlineBlock 'RBRACE'
    action 'LT' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls InlineBlock 'RBRACE'
    action 'GT' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls InlineBlock 'RBRACE'
    action 'EQ' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls InlineBlock 'RBRACE'
    action 'BANG' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls InlineBlock 'RBRACE'
    action 'COMMA' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls InlineBlock 'RBRACE'
    action 'LE' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls InlineBlock 'RBRACE'
    action 'GE' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls InlineBlock 'RBRACE'
    action 'EQEQ' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls InlineBlock 'RBRACE'
    action 'NE' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls InlineBlock 'RBRACE'
    action 'PLUS' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls InlineBlock 'RBRACE'
    action 'MINUS' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls InlineBlock 'RBRACE'
    action 'STAR' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls InlineBlock 'RBRACE'
    action 'SLASH' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls InlineBlock 'RBRACE'
    action 'PERCENT' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls InlineBlock 'RBRACE'
    action 'AMPAMP' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls InlineBlock 'RBRACE'
    action 'BARBAR' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls InlineBlock 'RBRACE'
    action 'COLONEQ' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls InlineBlock 'RBRACE'
    action 'INT' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls InlineBlock 'RBRACE'
    action 'BOOL' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls InlineBlock 'RBRACE'
    action 'IF' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls InlineBlock 'RBRACE'
    action 'RETURN' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls InlineBlock 'RBRACE'
    action 'VAR' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls InlineBlock 'RBRACE'
    action 'LBRACE' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls InlineBlock 'RBRACE'
    action 'RBRACE' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls InlineBlock 'RBRACE'
    action 'SEMI' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls InlineBlock 'RBRACE'
    action 'COLON' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls InlineBlock 'RBRACE'
    action 'LPAREN' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls InlineBlock 'RBRACE'
    action 'RPAREN' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls InlineBlock 'RBRACE'
    action 'LBRACKET' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls InlineBlock 'RBRACE'
    action 'RBRACKET' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls InlineBlock 'RBRACE'
    action 'LITBOOL' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls InlineBlock 'RBRACE'
    action 'LITINT' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls InlineBlock 'RBRACE'
    action 'QLID' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls InlineBlock 'RBRACE'
    action 'QUID' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls InlineBlock 'RBRACE'
    action 'DLID' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls InlineBlock 'RBRACE'
    action 'DUID' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls InlineBlock 'RBRACE'
    action 'LID' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls InlineBlock 'RBRACE'
    action 'UID' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls InlineBlock 'RBRACE'
    action 'error' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls InlineBlock 'RBRACE'
    action '#' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls InlineBlock 'RBRACE'
    action '$$' (noprec):   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls InlineBlock 'RBRACE'

  immediate action:   reduce Decl --> ProcOrImpl 'LID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls InlineBlock 'RBRACE'
 gotos:

state 371:
  items:
    Decl -> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' . ProcDecls ProcBlock 'RBRACE'

  actions:
    action 'EOF' (noprec):   reduce ProcDecls --> 
    action 'EAX' (noprec):   reduce ProcDecls --> 
    action 'EBX' (noprec):   reduce ProcDecls --> 
    action 'ECX' (noprec):   reduce ProcDecls --> 
    action 'EDX' (noprec):   reduce ProcDecls --> 
    action 'ESI' (noprec):   reduce ProcDecls --> 
    action 'EDI' (noprec):   reduce ProcDecls --> 
    action 'EBP' (noprec):   reduce ProcDecls --> 
    action 'ESP' (noprec):   reduce ProcDecls --> 
    action 'MODIFIES' (noprec):   reduce ProcDecls --> 
    action 'INVARIANT' (noprec):   reduce ProcDecls --> 
    action 'ASSERT' (noprec):   reduce ProcDecls --> 
    action 'HAVOC' (noprec):   reduce ProcDecls --> 
    action 'GOTO' (noprec):   reduce ProcDecls --> 
    action 'CALL' (noprec):   reduce ProcDecls --> 
    action 'CCALL' (noprec):   reduce ProcDecls --> 
    action 'RET' (noprec):   reduce ProcDecls --> 
    action 'IRET' (noprec):   reduce ProcDecls --> 
    action 'GO' (noprec):   reduce ProcDecls --> 
    action 'FORALL' (noprec):   reduce ProcDecls --> 
    action 'EXISTS' (noprec):   reduce ProcDecls --> 
    action 'OLD' (noprec):   reduce ProcDecls --> 
    action 'COLONCOLON' (noprec):   reduce ProcDecls --> 
    action 'EQEQGT' (noprec):   reduce ProcDecls --> 
    action 'LTEQEQGT' (noprec):   reduce ProcDecls --> 
    action 'TYPE' (noprec):   reduce ProcDecls --> 
    action 'CONST' (noprec):   reduce ProcDecls --> 
    action 'FUNCTION' (noprec):   reduce ProcDecls --> 
    action 'RETURNS' (noprec):   reduce ProcDecls --> 
    action 'AXIOM' (noprec):   reduce ProcDecls --> 
    action 'PROCEDURE' (noprec):   reduce ProcDecls --> 
    action 'IMPLEMENTATION' (noprec):   reduce ProcDecls --> 
    action 'REQUIRES' (noprec):   reduce ProcDecls --> 
    action 'ENSURES' (noprec):   reduce ProcDecls --> 
    action 'LT' (noprec):   reduce ProcDecls --> 
    action 'GT' (noprec):   reduce ProcDecls --> 
    action 'EQ' (noprec):   reduce ProcDecls --> 
    action 'BANG' (noprec):   reduce ProcDecls --> 
    action 'COMMA' (noprec):   reduce ProcDecls --> 
    action 'LE' (noprec):   reduce ProcDecls --> 
    action 'GE' (noprec):   reduce ProcDecls --> 
    action 'EQEQ' (noprec):   reduce ProcDecls --> 
    action 'NE' (noprec):   reduce ProcDecls --> 
    action 'PLUS' (noprec):   reduce ProcDecls --> 
    action 'MINUS' (noprec):   reduce ProcDecls --> 
    action 'STAR' (noprec):   reduce ProcDecls --> 
    action 'SLASH' (noprec):   reduce ProcDecls --> 
    action 'PERCENT' (noprec):   reduce ProcDecls --> 
    action 'AMPAMP' (noprec):   reduce ProcDecls --> 
    action 'BARBAR' (noprec):   reduce ProcDecls --> 
    action 'COLONEQ' (noprec):   reduce ProcDecls --> 
    action 'INT' (noprec):   reduce ProcDecls --> 
    action 'BOOL' (noprec):   reduce ProcDecls --> 
    action 'IF' (noprec):   reduce ProcDecls --> 
    action 'RETURN' (noprec):   reduce ProcDecls --> 
    action 'VAR' (noprec):   shift 262
    action 'LBRACE' (noprec):   reduce ProcDecls --> 
    action 'RBRACE' (noprec):   reduce ProcDecls --> 
    action 'SEMI' (noprec):   reduce ProcDecls --> 
    action 'COLON' (noprec):   reduce ProcDecls --> 
    action 'LPAREN' (noprec):   reduce ProcDecls --> 
    action 'RPAREN' (noprec):   reduce ProcDecls --> 
    action 'LBRACKET' (noprec):   reduce ProcDecls --> 
    action 'RBRACKET' (noprec):   reduce ProcDecls --> 
    action 'LITBOOL' (noprec):   reduce ProcDecls --> 
    action 'LITINT' (noprec):   reduce ProcDecls --> 
    action 'QLID' (noprec):   reduce ProcDecls --> 
    action 'QUID' (noprec):   reduce ProcDecls --> 
    action 'DLID' (noprec):   reduce ProcDecls --> 
    action 'DUID' (noprec):   reduce ProcDecls --> 
    action 'LID' (noprec):   reduce ProcDecls --> 
    action 'UID' (noprec):   reduce ProcDecls --> 
    action 'error' (noprec):   reduce ProcDecls --> 
    action '#' (noprec):   reduce ProcDecls --> 
    action '$$' (noprec):   reduce ProcDecls --> 

  immediate action: <none>
 gotos:
    goto ProcDecls: 372

state 372:
  items:
    Decl -> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls . ProcBlock 'RBRACE'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   shift 183
    action 'HAVOC' (noprec):   shift 153
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   shift 157
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   shift 185
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   shift 4
    action 'UID' (noprec):   shift 5
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto ID: 162
    goto HavocEip: 165
    goto Stmt: 257
    goto Return: 258
    goto ProcStmt: 260
    goto ProcBlock: 373

state 373:
  items:
    Decl -> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls ProcBlock . 'RBRACE'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   shift 374
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 374:
  items:
    Decl -> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls ProcBlock 'RBRACE' . 

  actions:
    action 'EOF' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls ProcBlock 'RBRACE'
    action 'EAX' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls ProcBlock 'RBRACE'
    action 'EBX' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls ProcBlock 'RBRACE'
    action 'ECX' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls ProcBlock 'RBRACE'
    action 'EDX' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls ProcBlock 'RBRACE'
    action 'ESI' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls ProcBlock 'RBRACE'
    action 'EDI' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls ProcBlock 'RBRACE'
    action 'EBP' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls ProcBlock 'RBRACE'
    action 'ESP' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls ProcBlock 'RBRACE'
    action 'MODIFIES' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls ProcBlock 'RBRACE'
    action 'INVARIANT' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls ProcBlock 'RBRACE'
    action 'ASSERT' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls ProcBlock 'RBRACE'
    action 'HAVOC' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls ProcBlock 'RBRACE'
    action 'GOTO' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls ProcBlock 'RBRACE'
    action 'CALL' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls ProcBlock 'RBRACE'
    action 'CCALL' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls ProcBlock 'RBRACE'
    action 'RET' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls ProcBlock 'RBRACE'
    action 'IRET' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls ProcBlock 'RBRACE'
    action 'GO' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls ProcBlock 'RBRACE'
    action 'FORALL' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls ProcBlock 'RBRACE'
    action 'EXISTS' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls ProcBlock 'RBRACE'
    action 'OLD' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls ProcBlock 'RBRACE'
    action 'COLONCOLON' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls ProcBlock 'RBRACE'
    action 'EQEQGT' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls ProcBlock 'RBRACE'
    action 'LTEQEQGT' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls ProcBlock 'RBRACE'
    action 'TYPE' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls ProcBlock 'RBRACE'
    action 'CONST' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls ProcBlock 'RBRACE'
    action 'FUNCTION' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls ProcBlock 'RBRACE'
    action 'RETURNS' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls ProcBlock 'RBRACE'
    action 'AXIOM' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls ProcBlock 'RBRACE'
    action 'PROCEDURE' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls ProcBlock 'RBRACE'
    action 'IMPLEMENTATION' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls ProcBlock 'RBRACE'
    action 'REQUIRES' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls ProcBlock 'RBRACE'
    action 'ENSURES' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls ProcBlock 'RBRACE'
    action 'LT' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls ProcBlock 'RBRACE'
    action 'GT' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls ProcBlock 'RBRACE'
    action 'EQ' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls ProcBlock 'RBRACE'
    action 'BANG' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls ProcBlock 'RBRACE'
    action 'COMMA' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls ProcBlock 'RBRACE'
    action 'LE' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls ProcBlock 'RBRACE'
    action 'GE' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls ProcBlock 'RBRACE'
    action 'EQEQ' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls ProcBlock 'RBRACE'
    action 'NE' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls ProcBlock 'RBRACE'
    action 'PLUS' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls ProcBlock 'RBRACE'
    action 'MINUS' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls ProcBlock 'RBRACE'
    action 'STAR' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls ProcBlock 'RBRACE'
    action 'SLASH' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls ProcBlock 'RBRACE'
    action 'PERCENT' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls ProcBlock 'RBRACE'
    action 'AMPAMP' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls ProcBlock 'RBRACE'
    action 'BARBAR' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls ProcBlock 'RBRACE'
    action 'COLONEQ' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls ProcBlock 'RBRACE'
    action 'INT' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls ProcBlock 'RBRACE'
    action 'BOOL' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls ProcBlock 'RBRACE'
    action 'IF' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls ProcBlock 'RBRACE'
    action 'RETURN' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls ProcBlock 'RBRACE'
    action 'VAR' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls ProcBlock 'RBRACE'
    action 'LBRACE' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls ProcBlock 'RBRACE'
    action 'RBRACE' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls ProcBlock 'RBRACE'
    action 'SEMI' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls ProcBlock 'RBRACE'
    action 'COLON' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls ProcBlock 'RBRACE'
    action 'LPAREN' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls ProcBlock 'RBRACE'
    action 'RPAREN' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls ProcBlock 'RBRACE'
    action 'LBRACKET' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls ProcBlock 'RBRACE'
    action 'RBRACKET' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls ProcBlock 'RBRACE'
    action 'LITBOOL' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls ProcBlock 'RBRACE'
    action 'LITINT' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls ProcBlock 'RBRACE'
    action 'QLID' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls ProcBlock 'RBRACE'
    action 'QUID' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls ProcBlock 'RBRACE'
    action 'DLID' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls ProcBlock 'RBRACE'
    action 'DUID' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls ProcBlock 'RBRACE'
    action 'LID' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls ProcBlock 'RBRACE'
    action 'UID' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls ProcBlock 'RBRACE'
    action 'error' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls ProcBlock 'RBRACE'
    action '#' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls ProcBlock 'RBRACE'
    action '$$' (noprec):   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls ProcBlock 'RBRACE'

  immediate action:   reduce Decl --> ProcOrImpl 'UID' 'LPAREN' ProcFormals 'RPAREN' Specs 'LBRACE' ProcDecls ProcBlock 'RBRACE'
 gotos:

state 375:
  items:
    Decl -> 'CONST' . AnyId 'COLON' Type 'SEMI'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   shift 145
    action 'QUID' (noprec):   shift 144
    action 'DLID' (noprec):   shift 143
    action 'DUID' (noprec):   shift 142
    action 'LID' (noprec):   shift 4
    action 'UID' (noprec):   shift 5
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto ID: 141
    goto AnyId: 376

state 376:
  items:
    Decl -> 'CONST' AnyId . 'COLON' Type 'SEMI'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   shift 377
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 377:
  items:
    Decl -> 'CONST' AnyId 'COLON' . Type 'SEMI'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   shift 6
    action 'BOOL' (noprec):   shift 7
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (explicit left 10000):   shift 8
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   shift 145
    action 'QUID' (noprec):   shift 144
    action 'DLID' (noprec):   shift 143
    action 'DUID' (noprec):   shift 142
    action 'LID' (noprec):   shift 4
    action 'UID' (noprec):   shift 5
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto ID: 141
    goto Type: 378
    goto AnyId: 12

state 378:
  items:
    Decl -> 'CONST' AnyId 'COLON' Type . 'SEMI'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   shift 379
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 379:
  items:
    Decl -> 'CONST' AnyId 'COLON' Type 'SEMI' . 

  actions:
    action 'EOF' (noprec):   reduce Decl --> 'CONST' AnyId 'COLON' Type 'SEMI'
    action 'EAX' (noprec):   reduce Decl --> 'CONST' AnyId 'COLON' Type 'SEMI'
    action 'EBX' (noprec):   reduce Decl --> 'CONST' AnyId 'COLON' Type 'SEMI'
    action 'ECX' (noprec):   reduce Decl --> 'CONST' AnyId 'COLON' Type 'SEMI'
    action 'EDX' (noprec):   reduce Decl --> 'CONST' AnyId 'COLON' Type 'SEMI'
    action 'ESI' (noprec):   reduce Decl --> 'CONST' AnyId 'COLON' Type 'SEMI'
    action 'EDI' (noprec):   reduce Decl --> 'CONST' AnyId 'COLON' Type 'SEMI'
    action 'EBP' (noprec):   reduce Decl --> 'CONST' AnyId 'COLON' Type 'SEMI'
    action 'ESP' (noprec):   reduce Decl --> 'CONST' AnyId 'COLON' Type 'SEMI'
    action 'MODIFIES' (noprec):   reduce Decl --> 'CONST' AnyId 'COLON' Type 'SEMI'
    action 'INVARIANT' (noprec):   reduce Decl --> 'CONST' AnyId 'COLON' Type 'SEMI'
    action 'ASSERT' (noprec):   reduce Decl --> 'CONST' AnyId 'COLON' Type 'SEMI'
    action 'HAVOC' (noprec):   reduce Decl --> 'CONST' AnyId 'COLON' Type 'SEMI'
    action 'GOTO' (noprec):   reduce Decl --> 'CONST' AnyId 'COLON' Type 'SEMI'
    action 'CALL' (noprec):   reduce Decl --> 'CONST' AnyId 'COLON' Type 'SEMI'
    action 'CCALL' (noprec):   reduce Decl --> 'CONST' AnyId 'COLON' Type 'SEMI'
    action 'RET' (noprec):   reduce Decl --> 'CONST' AnyId 'COLON' Type 'SEMI'
    action 'IRET' (noprec):   reduce Decl --> 'CONST' AnyId 'COLON' Type 'SEMI'
    action 'GO' (noprec):   reduce Decl --> 'CONST' AnyId 'COLON' Type 'SEMI'
    action 'FORALL' (noprec):   reduce Decl --> 'CONST' AnyId 'COLON' Type 'SEMI'
    action 'EXISTS' (noprec):   reduce Decl --> 'CONST' AnyId 'COLON' Type 'SEMI'
    action 'OLD' (noprec):   reduce Decl --> 'CONST' AnyId 'COLON' Type 'SEMI'
    action 'COLONCOLON' (noprec):   reduce Decl --> 'CONST' AnyId 'COLON' Type 'SEMI'
    action 'EQEQGT' (noprec):   reduce Decl --> 'CONST' AnyId 'COLON' Type 'SEMI'
    action 'LTEQEQGT' (noprec):   reduce Decl --> 'CONST' AnyId 'COLON' Type 'SEMI'
    action 'TYPE' (noprec):   reduce Decl --> 'CONST' AnyId 'COLON' Type 'SEMI'
    action 'CONST' (noprec):   reduce Decl --> 'CONST' AnyId 'COLON' Type 'SEMI'
    action 'FUNCTION' (noprec):   reduce Decl --> 'CONST' AnyId 'COLON' Type 'SEMI'
    action 'RETURNS' (noprec):   reduce Decl --> 'CONST' AnyId 'COLON' Type 'SEMI'
    action 'AXIOM' (noprec):   reduce Decl --> 'CONST' AnyId 'COLON' Type 'SEMI'
    action 'PROCEDURE' (noprec):   reduce Decl --> 'CONST' AnyId 'COLON' Type 'SEMI'
    action 'IMPLEMENTATION' (noprec):   reduce Decl --> 'CONST' AnyId 'COLON' Type 'SEMI'
    action 'REQUIRES' (noprec):   reduce Decl --> 'CONST' AnyId 'COLON' Type 'SEMI'
    action 'ENSURES' (noprec):   reduce Decl --> 'CONST' AnyId 'COLON' Type 'SEMI'
    action 'LT' (noprec):   reduce Decl --> 'CONST' AnyId 'COLON' Type 'SEMI'
    action 'GT' (noprec):   reduce Decl --> 'CONST' AnyId 'COLON' Type 'SEMI'
    action 'EQ' (noprec):   reduce Decl --> 'CONST' AnyId 'COLON' Type 'SEMI'
    action 'BANG' (noprec):   reduce Decl --> 'CONST' AnyId 'COLON' Type 'SEMI'
    action 'COMMA' (noprec):   reduce Decl --> 'CONST' AnyId 'COLON' Type 'SEMI'
    action 'LE' (noprec):   reduce Decl --> 'CONST' AnyId 'COLON' Type 'SEMI'
    action 'GE' (noprec):   reduce Decl --> 'CONST' AnyId 'COLON' Type 'SEMI'
    action 'EQEQ' (noprec):   reduce Decl --> 'CONST' AnyId 'COLON' Type 'SEMI'
    action 'NE' (noprec):   reduce Decl --> 'CONST' AnyId 'COLON' Type 'SEMI'
    action 'PLUS' (noprec):   reduce Decl --> 'CONST' AnyId 'COLON' Type 'SEMI'
    action 'MINUS' (noprec):   reduce Decl --> 'CONST' AnyId 'COLON' Type 'SEMI'
    action 'STAR' (noprec):   reduce Decl --> 'CONST' AnyId 'COLON' Type 'SEMI'
    action 'SLASH' (noprec):   reduce Decl --> 'CONST' AnyId 'COLON' Type 'SEMI'
    action 'PERCENT' (noprec):   reduce Decl --> 'CONST' AnyId 'COLON' Type 'SEMI'
    action 'AMPAMP' (noprec):   reduce Decl --> 'CONST' AnyId 'COLON' Type 'SEMI'
    action 'BARBAR' (noprec):   reduce Decl --> 'CONST' AnyId 'COLON' Type 'SEMI'
    action 'COLONEQ' (noprec):   reduce Decl --> 'CONST' AnyId 'COLON' Type 'SEMI'
    action 'INT' (noprec):   reduce Decl --> 'CONST' AnyId 'COLON' Type 'SEMI'
    action 'BOOL' (noprec):   reduce Decl --> 'CONST' AnyId 'COLON' Type 'SEMI'
    action 'IF' (noprec):   reduce Decl --> 'CONST' AnyId 'COLON' Type 'SEMI'
    action 'RETURN' (noprec):   reduce Decl --> 'CONST' AnyId 'COLON' Type 'SEMI'
    action 'VAR' (noprec):   reduce Decl --> 'CONST' AnyId 'COLON' Type 'SEMI'
    action 'LBRACE' (noprec):   reduce Decl --> 'CONST' AnyId 'COLON' Type 'SEMI'
    action 'RBRACE' (noprec):   reduce Decl --> 'CONST' AnyId 'COLON' Type 'SEMI'
    action 'SEMI' (noprec):   reduce Decl --> 'CONST' AnyId 'COLON' Type 'SEMI'
    action 'COLON' (noprec):   reduce Decl --> 'CONST' AnyId 'COLON' Type 'SEMI'
    action 'LPAREN' (noprec):   reduce Decl --> 'CONST' AnyId 'COLON' Type 'SEMI'
    action 'RPAREN' (noprec):   reduce Decl --> 'CONST' AnyId 'COLON' Type 'SEMI'
    action 'LBRACKET' (noprec):   reduce Decl --> 'CONST' AnyId 'COLON' Type 'SEMI'
    action 'RBRACKET' (noprec):   reduce Decl --> 'CONST' AnyId 'COLON' Type 'SEMI'
    action 'LITBOOL' (noprec):   reduce Decl --> 'CONST' AnyId 'COLON' Type 'SEMI'
    action 'LITINT' (noprec):   reduce Decl --> 'CONST' AnyId 'COLON' Type 'SEMI'
    action 'QLID' (noprec):   reduce Decl --> 'CONST' AnyId 'COLON' Type 'SEMI'
    action 'QUID' (noprec):   reduce Decl --> 'CONST' AnyId 'COLON' Type 'SEMI'
    action 'DLID' (noprec):   reduce Decl --> 'CONST' AnyId 'COLON' Type 'SEMI'
    action 'DUID' (noprec):   reduce Decl --> 'CONST' AnyId 'COLON' Type 'SEMI'
    action 'LID' (noprec):   reduce Decl --> 'CONST' AnyId 'COLON' Type 'SEMI'
    action 'UID' (noprec):   reduce Decl --> 'CONST' AnyId 'COLON' Type 'SEMI'
    action 'error' (noprec):   reduce Decl --> 'CONST' AnyId 'COLON' Type 'SEMI'
    action '#' (noprec):   reduce Decl --> 'CONST' AnyId 'COLON' Type 'SEMI'
    action '$$' (noprec):   reduce Decl --> 'CONST' AnyId 'COLON' Type 'SEMI'

  immediate action:   reduce Decl --> 'CONST' AnyId 'COLON' Type 'SEMI'
 gotos:

state 380:
  items:
    Decl -> 'FUNCTION' . FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'LBRACE' Exp 'RBRACE'
    Decl -> 'FUNCTION' . FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'SEMI'

  actions:
    action 'EOF' (noprec):   reduce FunAttr --> 
    action 'EAX' (noprec):   reduce FunAttr --> 
    action 'EBX' (noprec):   reduce FunAttr --> 
    action 'ECX' (noprec):   reduce FunAttr --> 
    action 'EDX' (noprec):   reduce FunAttr --> 
    action 'ESI' (noprec):   reduce FunAttr --> 
    action 'EDI' (noprec):   reduce FunAttr --> 
    action 'EBP' (noprec):   reduce FunAttr --> 
    action 'ESP' (noprec):   reduce FunAttr --> 
    action 'MODIFIES' (noprec):   reduce FunAttr --> 
    action 'INVARIANT' (noprec):   reduce FunAttr --> 
    action 'ASSERT' (noprec):   reduce FunAttr --> 
    action 'HAVOC' (noprec):   reduce FunAttr --> 
    action 'GOTO' (noprec):   reduce FunAttr --> 
    action 'CALL' (noprec):   reduce FunAttr --> 
    action 'CCALL' (noprec):   reduce FunAttr --> 
    action 'RET' (noprec):   reduce FunAttr --> 
    action 'IRET' (noprec):   reduce FunAttr --> 
    action 'GO' (noprec):   reduce FunAttr --> 
    action 'FORALL' (noprec):   reduce FunAttr --> 
    action 'EXISTS' (noprec):   reduce FunAttr --> 
    action 'OLD' (noprec):   reduce FunAttr --> 
    action 'COLONCOLON' (noprec):   reduce FunAttr --> 
    action 'EQEQGT' (noprec):   reduce FunAttr --> 
    action 'LTEQEQGT' (noprec):   reduce FunAttr --> 
    action 'TYPE' (noprec):   reduce FunAttr --> 
    action 'CONST' (noprec):   reduce FunAttr --> 
    action 'FUNCTION' (noprec):   reduce FunAttr --> 
    action 'RETURNS' (noprec):   reduce FunAttr --> 
    action 'AXIOM' (noprec):   reduce FunAttr --> 
    action 'PROCEDURE' (noprec):   reduce FunAttr --> 
    action 'IMPLEMENTATION' (noprec):   reduce FunAttr --> 
    action 'REQUIRES' (noprec):   reduce FunAttr --> 
    action 'ENSURES' (noprec):   reduce FunAttr --> 
    action 'LT' (noprec):   reduce FunAttr --> 
    action 'GT' (noprec):   reduce FunAttr --> 
    action 'EQ' (noprec):   reduce FunAttr --> 
    action 'BANG' (noprec):   reduce FunAttr --> 
    action 'COMMA' (noprec):   reduce FunAttr --> 
    action 'LE' (noprec):   reduce FunAttr --> 
    action 'GE' (noprec):   reduce FunAttr --> 
    action 'EQEQ' (noprec):   reduce FunAttr --> 
    action 'NE' (noprec):   reduce FunAttr --> 
    action 'PLUS' (noprec):   reduce FunAttr --> 
    action 'MINUS' (noprec):   reduce FunAttr --> 
    action 'STAR' (noprec):   reduce FunAttr --> 
    action 'SLASH' (noprec):   reduce FunAttr --> 
    action 'PERCENT' (noprec):   reduce FunAttr --> 
    action 'AMPAMP' (noprec):   reduce FunAttr --> 
    action 'BARBAR' (noprec):   reduce FunAttr --> 
    action 'COLONEQ' (noprec):   reduce FunAttr --> 
    action 'INT' (noprec):   reduce FunAttr --> 
    action 'BOOL' (noprec):   reduce FunAttr --> 
    action 'IF' (noprec):   reduce FunAttr --> 
    action 'RETURN' (noprec):   reduce FunAttr --> 
    action 'VAR' (noprec):   reduce FunAttr --> 
    action 'LBRACE' (noprec):   shift 315
    action 'RBRACE' (noprec):   reduce FunAttr --> 
    action 'SEMI' (noprec):   reduce FunAttr --> 
    action 'COLON' (noprec):   reduce FunAttr --> 
    action 'LPAREN' (noprec):   reduce FunAttr --> 
    action 'RPAREN' (noprec):   reduce FunAttr --> 
    action 'LBRACKET' (noprec):   reduce FunAttr --> 
    action 'RBRACKET' (noprec):   reduce FunAttr --> 
    action 'LITBOOL' (noprec):   reduce FunAttr --> 
    action 'LITINT' (noprec):   reduce FunAttr --> 
    action 'QLID' (noprec):   reduce FunAttr --> 
    action 'QUID' (noprec):   reduce FunAttr --> 
    action 'DLID' (noprec):   reduce FunAttr --> 
    action 'DUID' (noprec):   reduce FunAttr --> 
    action 'LID' (noprec):   reduce FunAttr --> 
    action 'UID' (noprec):   reduce FunAttr --> 
    action 'error' (noprec):   reduce FunAttr --> 
    action '#' (noprec):   reduce FunAttr --> 
    action '$$' (noprec):   reduce FunAttr --> 

  immediate action: <none>
 gotos:
    goto FunAttr: 381

state 381:
  items:
    Decl -> 'FUNCTION' FunAttr . AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'LBRACE' Exp 'RBRACE'
    Decl -> 'FUNCTION' FunAttr . AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'SEMI'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   shift 145
    action 'QUID' (noprec):   shift 144
    action 'DLID' (noprec):   shift 143
    action 'DUID' (noprec):   shift 142
    action 'LID' (noprec):   shift 4
    action 'UID' (noprec):   shift 5
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto ID: 141
    goto AnyId: 382

state 382:
  items:
    Decl -> 'FUNCTION' FunAttr AnyId . 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'LBRACE' Exp 'RBRACE'
    Decl -> 'FUNCTION' FunAttr AnyId . 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'SEMI'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (explicit left 10000):   shift 383
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 383:
  items:
    Decl -> 'FUNCTION' FunAttr AnyId 'LPAREN' . Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'LBRACE' Exp 'RBRACE'
    Decl -> 'FUNCTION' FunAttr AnyId 'LPAREN' . Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'SEMI'

  actions:
    action 'EOF' (noprec):   reduce Formals --> 
    action 'EAX' (noprec):   reduce Formals --> 
    action 'EBX' (noprec):   reduce Formals --> 
    action 'ECX' (noprec):   reduce Formals --> 
    action 'EDX' (noprec):   reduce Formals --> 
    action 'ESI' (noprec):   reduce Formals --> 
    action 'EDI' (noprec):   reduce Formals --> 
    action 'EBP' (noprec):   reduce Formals --> 
    action 'ESP' (noprec):   reduce Formals --> 
    action 'MODIFIES' (noprec):   reduce Formals --> 
    action 'INVARIANT' (noprec):   reduce Formals --> 
    action 'ASSERT' (noprec):   reduce Formals --> 
    action 'HAVOC' (noprec):   reduce Formals --> 
    action 'GOTO' (noprec):   reduce Formals --> 
    action 'CALL' (noprec):   reduce Formals --> 
    action 'CCALL' (noprec):   reduce Formals --> 
    action 'RET' (noprec):   reduce Formals --> 
    action 'IRET' (noprec):   reduce Formals --> 
    action 'GO' (noprec):   reduce Formals --> 
    action 'FORALL' (noprec):   reduce Formals --> 
    action 'EXISTS' (noprec):   reduce Formals --> 
    action 'OLD' (noprec):   reduce Formals --> 
    action 'COLONCOLON' (noprec):   reduce Formals --> 
    action 'EQEQGT' (noprec):   reduce Formals --> 
    action 'LTEQEQGT' (noprec):   reduce Formals --> 
    action 'TYPE' (noprec):   reduce Formals --> 
    action 'CONST' (noprec):   reduce Formals --> 
    action 'FUNCTION' (noprec):   reduce Formals --> 
    action 'RETURNS' (noprec):   reduce Formals --> 
    action 'AXIOM' (noprec):   reduce Formals --> 
    action 'PROCEDURE' (noprec):   reduce Formals --> 
    action 'IMPLEMENTATION' (noprec):   reduce Formals --> 
    action 'REQUIRES' (noprec):   reduce Formals --> 
    action 'ENSURES' (noprec):   reduce Formals --> 
    action 'LT' (noprec):   reduce Formals --> 
    action 'GT' (noprec):   reduce Formals --> 
    action 'EQ' (noprec):   reduce Formals --> 
    action 'BANG' (noprec):   reduce Formals --> 
    action 'COMMA' (noprec):   reduce Formals --> 
    action 'LE' (noprec):   reduce Formals --> 
    action 'GE' (noprec):   reduce Formals --> 
    action 'EQEQ' (noprec):   reduce Formals --> 
    action 'NE' (noprec):   reduce Formals --> 
    action 'PLUS' (noprec):   reduce Formals --> 
    action 'MINUS' (noprec):   reduce Formals --> 
    action 'STAR' (noprec):   reduce Formals --> 
    action 'SLASH' (noprec):   reduce Formals --> 
    action 'PERCENT' (noprec):   reduce Formals --> 
    action 'AMPAMP' (noprec):   reduce Formals --> 
    action 'BARBAR' (noprec):   reduce Formals --> 
    action 'COLONEQ' (noprec):   reduce Formals --> 
    action 'INT' (noprec):   reduce Formals --> 
    action 'BOOL' (noprec):   reduce Formals --> 
    action 'IF' (noprec):   reduce Formals --> 
    action 'RETURN' (noprec):   reduce Formals --> 
    action 'VAR' (noprec):   reduce Formals --> 
    action 'LBRACE' (noprec):   reduce Formals --> 
    action 'RBRACE' (noprec):   reduce Formals --> 
    action 'SEMI' (noprec):   reduce Formals --> 
    action 'COLON' (noprec):   reduce Formals --> 
    action 'LPAREN' (noprec):   reduce Formals --> 
    action 'RPAREN' (noprec):   reduce Formals --> 
    action 'LBRACKET' (noprec):   reduce Formals --> 
    action 'RBRACKET' (noprec):   reduce Formals --> 
    action 'LITBOOL' (noprec):   reduce Formals --> 
    action 'LITINT' (noprec):   reduce Formals --> 
    action 'QLID' (noprec):   shift 145
    action 'QUID' (noprec):   shift 144
    action 'DLID' (noprec):   shift 143
    action 'DUID' (noprec):   shift 142
    action 'LID' (noprec):   shift 4
    action 'UID' (noprec):   shift 5
    action 'error' (noprec):   reduce Formals --> 
    action '#' (noprec):   reduce Formals --> 
    action '$$' (noprec):   reduce Formals --> 

  immediate action: <none>
 gotos:
    goto ID: 141
    goto AnyId: 275
    goto Formal: 278
    goto Formals: 384

state 384:
  items:
    Decl -> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals . 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'LBRACE' Exp 'RBRACE'
    Decl -> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals . 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'SEMI'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (explicit left 10000):   shift 385
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 385:
  items:
    Decl -> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' . 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'LBRACE' Exp 'RBRACE'
    Decl -> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' . 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'SEMI'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   shift 386
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 386:
  items:
    Decl -> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' . 'LPAREN' FunRet 'RPAREN' 'LBRACE' Exp 'RBRACE'
    Decl -> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' . 'LPAREN' FunRet 'RPAREN' 'SEMI'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (explicit left 10000):   shift 387
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 387:
  items:
    Decl -> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' . FunRet 'RPAREN' 'LBRACE' Exp 'RBRACE'
    Decl -> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' . FunRet 'RPAREN' 'SEMI'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   shift 6
    action 'BOOL' (noprec):   shift 7
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (explicit left 10000):   shift 8
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   shift 145
    action 'QUID' (noprec):   shift 144
    action 'DLID' (noprec):   shift 143
    action 'DUID' (noprec):   shift 142
    action 'LID' (noprec):   shift 4
    action 'UID' (noprec):   shift 5
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto ID: 141
    goto Type: 322
    goto AnyId: 13
    goto FunRet: 388

state 388:
  items:
    Decl -> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet . 'RPAREN' 'LBRACE' Exp 'RBRACE'
    Decl -> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet . 'RPAREN' 'SEMI'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (explicit left 10000):   shift 389
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 389:
  items:
    Decl -> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' . 'LBRACE' Exp 'RBRACE'
    Decl -> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' . 'SEMI'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   shift 390
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   shift 392
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 390:
  items:
    Decl -> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'LBRACE' . Exp 'RBRACE'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   shift 14
    action 'EBX' (noprec):   shift 15
    action 'ECX' (noprec):   shift 16
    action 'EDX' (noprec):   shift 17
    action 'ESI' (noprec):   shift 18
    action 'EDI' (noprec):   shift 19
    action 'EBP' (noprec):   shift 20
    action 'ESP' (noprec):   shift 21
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   shift 125
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (explicit right 9999):   shift 107
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (explicit left 10000):   shift 54
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   shift 124
    action 'LITINT' (noprec):   shift 123
    action 'QLID' (noprec):   shift 145
    action 'QUID' (noprec):   shift 144
    action 'DLID' (noprec):   shift 143
    action 'DUID' (noprec):   shift 142
    action 'LID' (noprec):   shift 4
    action 'UID' (noprec):   shift 5
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto ID: 141
    goto Reg: 132
    goto Exp: 87
    goto AnyId: 128

state 391:
  items:
    Decl -> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'LBRACE' Exp 'RBRACE' . 

  actions:
    action 'EOF' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'LBRACE' Exp 'RBRACE'
    action 'EAX' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'LBRACE' Exp 'RBRACE'
    action 'EBX' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'LBRACE' Exp 'RBRACE'
    action 'ECX' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'LBRACE' Exp 'RBRACE'
    action 'EDX' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'LBRACE' Exp 'RBRACE'
    action 'ESI' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'LBRACE' Exp 'RBRACE'
    action 'EDI' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'LBRACE' Exp 'RBRACE'
    action 'EBP' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'LBRACE' Exp 'RBRACE'
    action 'ESP' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'LBRACE' Exp 'RBRACE'
    action 'MODIFIES' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'LBRACE' Exp 'RBRACE'
    action 'INVARIANT' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'LBRACE' Exp 'RBRACE'
    action 'ASSERT' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'LBRACE' Exp 'RBRACE'
    action 'HAVOC' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'LBRACE' Exp 'RBRACE'
    action 'GOTO' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'LBRACE' Exp 'RBRACE'
    action 'CALL' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'LBRACE' Exp 'RBRACE'
    action 'CCALL' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'LBRACE' Exp 'RBRACE'
    action 'RET' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'LBRACE' Exp 'RBRACE'
    action 'IRET' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'LBRACE' Exp 'RBRACE'
    action 'GO' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'LBRACE' Exp 'RBRACE'
    action 'FORALL' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'LBRACE' Exp 'RBRACE'
    action 'EXISTS' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'LBRACE' Exp 'RBRACE'
    action 'OLD' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'LBRACE' Exp 'RBRACE'
    action 'COLONCOLON' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'LBRACE' Exp 'RBRACE'
    action 'EQEQGT' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'LBRACE' Exp 'RBRACE'
    action 'LTEQEQGT' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'LBRACE' Exp 'RBRACE'
    action 'TYPE' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'LBRACE' Exp 'RBRACE'
    action 'CONST' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'LBRACE' Exp 'RBRACE'
    action 'FUNCTION' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'LBRACE' Exp 'RBRACE'
    action 'RETURNS' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'LBRACE' Exp 'RBRACE'
    action 'AXIOM' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'LBRACE' Exp 'RBRACE'
    action 'PROCEDURE' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'LBRACE' Exp 'RBRACE'
    action 'IMPLEMENTATION' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'LBRACE' Exp 'RBRACE'
    action 'REQUIRES' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'LBRACE' Exp 'RBRACE'
    action 'ENSURES' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'LBRACE' Exp 'RBRACE'
    action 'LT' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'LBRACE' Exp 'RBRACE'
    action 'GT' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'LBRACE' Exp 'RBRACE'
    action 'EQ' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'LBRACE' Exp 'RBRACE'
    action 'BANG' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'LBRACE' Exp 'RBRACE'
    action 'COMMA' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'LBRACE' Exp 'RBRACE'
    action 'LE' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'LBRACE' Exp 'RBRACE'
    action 'GE' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'LBRACE' Exp 'RBRACE'
    action 'EQEQ' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'LBRACE' Exp 'RBRACE'
    action 'NE' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'LBRACE' Exp 'RBRACE'
    action 'PLUS' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'LBRACE' Exp 'RBRACE'
    action 'MINUS' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'LBRACE' Exp 'RBRACE'
    action 'STAR' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'LBRACE' Exp 'RBRACE'
    action 'SLASH' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'LBRACE' Exp 'RBRACE'
    action 'PERCENT' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'LBRACE' Exp 'RBRACE'
    action 'AMPAMP' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'LBRACE' Exp 'RBRACE'
    action 'BARBAR' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'LBRACE' Exp 'RBRACE'
    action 'COLONEQ' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'LBRACE' Exp 'RBRACE'
    action 'INT' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'LBRACE' Exp 'RBRACE'
    action 'BOOL' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'LBRACE' Exp 'RBRACE'
    action 'IF' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'LBRACE' Exp 'RBRACE'
    action 'RETURN' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'LBRACE' Exp 'RBRACE'
    action 'VAR' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'LBRACE' Exp 'RBRACE'
    action 'LBRACE' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'LBRACE' Exp 'RBRACE'
    action 'RBRACE' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'LBRACE' Exp 'RBRACE'
    action 'SEMI' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'LBRACE' Exp 'RBRACE'
    action 'COLON' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'LBRACE' Exp 'RBRACE'
    action 'LPAREN' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'LBRACE' Exp 'RBRACE'
    action 'RPAREN' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'LBRACE' Exp 'RBRACE'
    action 'LBRACKET' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'LBRACE' Exp 'RBRACE'
    action 'RBRACKET' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'LBRACE' Exp 'RBRACE'
    action 'LITBOOL' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'LBRACE' Exp 'RBRACE'
    action 'LITINT' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'LBRACE' Exp 'RBRACE'
    action 'QLID' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'LBRACE' Exp 'RBRACE'
    action 'QUID' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'LBRACE' Exp 'RBRACE'
    action 'DLID' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'LBRACE' Exp 'RBRACE'
    action 'DUID' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'LBRACE' Exp 'RBRACE'
    action 'LID' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'LBRACE' Exp 'RBRACE'
    action 'UID' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'LBRACE' Exp 'RBRACE'
    action 'error' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'LBRACE' Exp 'RBRACE'
    action '#' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'LBRACE' Exp 'RBRACE'
    action '$$' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'LBRACE' Exp 'RBRACE'

  immediate action:   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'LBRACE' Exp 'RBRACE'
 gotos:

state 392:
  items:
    Decl -> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'SEMI' . 

  actions:
    action 'EOF' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'SEMI'
    action 'EAX' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'SEMI'
    action 'EBX' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'SEMI'
    action 'ECX' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'SEMI'
    action 'EDX' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'SEMI'
    action 'ESI' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'SEMI'
    action 'EDI' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'SEMI'
    action 'EBP' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'SEMI'
    action 'ESP' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'SEMI'
    action 'MODIFIES' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'SEMI'
    action 'INVARIANT' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'SEMI'
    action 'ASSERT' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'SEMI'
    action 'HAVOC' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'SEMI'
    action 'GOTO' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'SEMI'
    action 'CALL' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'SEMI'
    action 'CCALL' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'SEMI'
    action 'RET' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'SEMI'
    action 'IRET' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'SEMI'
    action 'GO' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'SEMI'
    action 'FORALL' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'SEMI'
    action 'EXISTS' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'SEMI'
    action 'OLD' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'SEMI'
    action 'COLONCOLON' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'SEMI'
    action 'EQEQGT' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'SEMI'
    action 'LTEQEQGT' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'SEMI'
    action 'TYPE' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'SEMI'
    action 'CONST' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'SEMI'
    action 'FUNCTION' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'SEMI'
    action 'RETURNS' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'SEMI'
    action 'AXIOM' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'SEMI'
    action 'PROCEDURE' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'SEMI'
    action 'IMPLEMENTATION' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'SEMI'
    action 'REQUIRES' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'SEMI'
    action 'ENSURES' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'SEMI'
    action 'LT' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'SEMI'
    action 'GT' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'SEMI'
    action 'EQ' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'SEMI'
    action 'BANG' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'SEMI'
    action 'COMMA' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'SEMI'
    action 'LE' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'SEMI'
    action 'GE' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'SEMI'
    action 'EQEQ' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'SEMI'
    action 'NE' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'SEMI'
    action 'PLUS' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'SEMI'
    action 'MINUS' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'SEMI'
    action 'STAR' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'SEMI'
    action 'SLASH' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'SEMI'
    action 'PERCENT' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'SEMI'
    action 'AMPAMP' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'SEMI'
    action 'BARBAR' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'SEMI'
    action 'COLONEQ' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'SEMI'
    action 'INT' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'SEMI'
    action 'BOOL' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'SEMI'
    action 'IF' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'SEMI'
    action 'RETURN' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'SEMI'
    action 'VAR' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'SEMI'
    action 'LBRACE' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'SEMI'
    action 'RBRACE' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'SEMI'
    action 'SEMI' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'SEMI'
    action 'COLON' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'SEMI'
    action 'LPAREN' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'SEMI'
    action 'RPAREN' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'SEMI'
    action 'LBRACKET' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'SEMI'
    action 'RBRACKET' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'SEMI'
    action 'LITBOOL' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'SEMI'
    action 'LITINT' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'SEMI'
    action 'QLID' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'SEMI'
    action 'QUID' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'SEMI'
    action 'DLID' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'SEMI'
    action 'DUID' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'SEMI'
    action 'LID' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'SEMI'
    action 'UID' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'SEMI'
    action 'error' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'SEMI'
    action '#' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'SEMI'
    action '$$' (noprec):   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'SEMI'

  immediate action:   reduce Decl --> 'FUNCTION' FunAttr AnyId 'LPAREN' Formals 'RPAREN' 'RETURNS' 'LPAREN' FunRet 'RPAREN' 'SEMI'
 gotos:

state 393:
  items:
    Decl -> 'AXIOM' . AnyId 'EQEQ' Exp 'SEMI'
    Decl -> 'AXIOM' . 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers AnyId AnyIdLists 'EQEQ' Exp 'RPAREN' 'SEMI'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (explicit left 10000):   shift 397
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   shift 145
    action 'QUID' (noprec):   shift 144
    action 'DLID' (noprec):   shift 143
    action 'DUID' (noprec):   shift 142
    action 'LID' (noprec):   shift 4
    action 'UID' (noprec):   shift 5
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto ID: 141
    goto AnyId: 394

state 394:
  items:
    Decl -> 'AXIOM' AnyId . 'EQEQ' Exp 'SEMI'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (explicit left 9996):   shift 395
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 395:
  items:
    Decl -> 'AXIOM' AnyId 'EQEQ' . Exp 'SEMI'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   shift 14
    action 'EBX' (noprec):   shift 15
    action 'ECX' (noprec):   shift 16
    action 'EDX' (noprec):   shift 17
    action 'ESI' (noprec):   shift 18
    action 'EDI' (noprec):   shift 19
    action 'EBP' (noprec):   shift 20
    action 'ESP' (noprec):   shift 21
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   shift 125
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (explicit right 9999):   shift 107
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (explicit left 10000):   shift 54
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   shift 124
    action 'LITINT' (noprec):   shift 123
    action 'QLID' (noprec):   shift 145
    action 'QUID' (noprec):   shift 144
    action 'DLID' (noprec):   shift 143
    action 'DUID' (noprec):   shift 142
    action 'LID' (noprec):   shift 4
    action 'UID' (noprec):   shift 5
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto ID: 141
    goto Reg: 132
    goto Exp: 88
    goto AnyId: 128

state 396:
  items:
    Decl -> 'AXIOM' AnyId 'EQEQ' Exp 'SEMI' . 

  actions:
    action 'EOF' (noprec):   reduce Decl --> 'AXIOM' AnyId 'EQEQ' Exp 'SEMI'
    action 'EAX' (noprec):   reduce Decl --> 'AXIOM' AnyId 'EQEQ' Exp 'SEMI'
    action 'EBX' (noprec):   reduce Decl --> 'AXIOM' AnyId 'EQEQ' Exp 'SEMI'
    action 'ECX' (noprec):   reduce Decl --> 'AXIOM' AnyId 'EQEQ' Exp 'SEMI'
    action 'EDX' (noprec):   reduce Decl --> 'AXIOM' AnyId 'EQEQ' Exp 'SEMI'
    action 'ESI' (noprec):   reduce Decl --> 'AXIOM' AnyId 'EQEQ' Exp 'SEMI'
    action 'EDI' (noprec):   reduce Decl --> 'AXIOM' AnyId 'EQEQ' Exp 'SEMI'
    action 'EBP' (noprec):   reduce Decl --> 'AXIOM' AnyId 'EQEQ' Exp 'SEMI'
    action 'ESP' (noprec):   reduce Decl --> 'AXIOM' AnyId 'EQEQ' Exp 'SEMI'
    action 'MODIFIES' (noprec):   reduce Decl --> 'AXIOM' AnyId 'EQEQ' Exp 'SEMI'
    action 'INVARIANT' (noprec):   reduce Decl --> 'AXIOM' AnyId 'EQEQ' Exp 'SEMI'
    action 'ASSERT' (noprec):   reduce Decl --> 'AXIOM' AnyId 'EQEQ' Exp 'SEMI'
    action 'HAVOC' (noprec):   reduce Decl --> 'AXIOM' AnyId 'EQEQ' Exp 'SEMI'
    action 'GOTO' (noprec):   reduce Decl --> 'AXIOM' AnyId 'EQEQ' Exp 'SEMI'
    action 'CALL' (noprec):   reduce Decl --> 'AXIOM' AnyId 'EQEQ' Exp 'SEMI'
    action 'CCALL' (noprec):   reduce Decl --> 'AXIOM' AnyId 'EQEQ' Exp 'SEMI'
    action 'RET' (noprec):   reduce Decl --> 'AXIOM' AnyId 'EQEQ' Exp 'SEMI'
    action 'IRET' (noprec):   reduce Decl --> 'AXIOM' AnyId 'EQEQ' Exp 'SEMI'
    action 'GO' (noprec):   reduce Decl --> 'AXIOM' AnyId 'EQEQ' Exp 'SEMI'
    action 'FORALL' (noprec):   reduce Decl --> 'AXIOM' AnyId 'EQEQ' Exp 'SEMI'
    action 'EXISTS' (noprec):   reduce Decl --> 'AXIOM' AnyId 'EQEQ' Exp 'SEMI'
    action 'OLD' (noprec):   reduce Decl --> 'AXIOM' AnyId 'EQEQ' Exp 'SEMI'
    action 'COLONCOLON' (noprec):   reduce Decl --> 'AXIOM' AnyId 'EQEQ' Exp 'SEMI'
    action 'EQEQGT' (noprec):   reduce Decl --> 'AXIOM' AnyId 'EQEQ' Exp 'SEMI'
    action 'LTEQEQGT' (noprec):   reduce Decl --> 'AXIOM' AnyId 'EQEQ' Exp 'SEMI'
    action 'TYPE' (noprec):   reduce Decl --> 'AXIOM' AnyId 'EQEQ' Exp 'SEMI'
    action 'CONST' (noprec):   reduce Decl --> 'AXIOM' AnyId 'EQEQ' Exp 'SEMI'
    action 'FUNCTION' (noprec):   reduce Decl --> 'AXIOM' AnyId 'EQEQ' Exp 'SEMI'
    action 'RETURNS' (noprec):   reduce Decl --> 'AXIOM' AnyId 'EQEQ' Exp 'SEMI'
    action 'AXIOM' (noprec):   reduce Decl --> 'AXIOM' AnyId 'EQEQ' Exp 'SEMI'
    action 'PROCEDURE' (noprec):   reduce Decl --> 'AXIOM' AnyId 'EQEQ' Exp 'SEMI'
    action 'IMPLEMENTATION' (noprec):   reduce Decl --> 'AXIOM' AnyId 'EQEQ' Exp 'SEMI'
    action 'REQUIRES' (noprec):   reduce Decl --> 'AXIOM' AnyId 'EQEQ' Exp 'SEMI'
    action 'ENSURES' (noprec):   reduce Decl --> 'AXIOM' AnyId 'EQEQ' Exp 'SEMI'
    action 'LT' (noprec):   reduce Decl --> 'AXIOM' AnyId 'EQEQ' Exp 'SEMI'
    action 'GT' (noprec):   reduce Decl --> 'AXIOM' AnyId 'EQEQ' Exp 'SEMI'
    action 'EQ' (noprec):   reduce Decl --> 'AXIOM' AnyId 'EQEQ' Exp 'SEMI'
    action 'BANG' (noprec):   reduce Decl --> 'AXIOM' AnyId 'EQEQ' Exp 'SEMI'
    action 'COMMA' (noprec):   reduce Decl --> 'AXIOM' AnyId 'EQEQ' Exp 'SEMI'
    action 'LE' (noprec):   reduce Decl --> 'AXIOM' AnyId 'EQEQ' Exp 'SEMI'
    action 'GE' (noprec):   reduce Decl --> 'AXIOM' AnyId 'EQEQ' Exp 'SEMI'
    action 'EQEQ' (noprec):   reduce Decl --> 'AXIOM' AnyId 'EQEQ' Exp 'SEMI'
    action 'NE' (noprec):   reduce Decl --> 'AXIOM' AnyId 'EQEQ' Exp 'SEMI'
    action 'PLUS' (noprec):   reduce Decl --> 'AXIOM' AnyId 'EQEQ' Exp 'SEMI'
    action 'MINUS' (noprec):   reduce Decl --> 'AXIOM' AnyId 'EQEQ' Exp 'SEMI'
    action 'STAR' (noprec):   reduce Decl --> 'AXIOM' AnyId 'EQEQ' Exp 'SEMI'
    action 'SLASH' (noprec):   reduce Decl --> 'AXIOM' AnyId 'EQEQ' Exp 'SEMI'
    action 'PERCENT' (noprec):   reduce Decl --> 'AXIOM' AnyId 'EQEQ' Exp 'SEMI'
    action 'AMPAMP' (noprec):   reduce Decl --> 'AXIOM' AnyId 'EQEQ' Exp 'SEMI'
    action 'BARBAR' (noprec):   reduce Decl --> 'AXIOM' AnyId 'EQEQ' Exp 'SEMI'
    action 'COLONEQ' (noprec):   reduce Decl --> 'AXIOM' AnyId 'EQEQ' Exp 'SEMI'
    action 'INT' (noprec):   reduce Decl --> 'AXIOM' AnyId 'EQEQ' Exp 'SEMI'
    action 'BOOL' (noprec):   reduce Decl --> 'AXIOM' AnyId 'EQEQ' Exp 'SEMI'
    action 'IF' (noprec):   reduce Decl --> 'AXIOM' AnyId 'EQEQ' Exp 'SEMI'
    action 'RETURN' (noprec):   reduce Decl --> 'AXIOM' AnyId 'EQEQ' Exp 'SEMI'
    action 'VAR' (noprec):   reduce Decl --> 'AXIOM' AnyId 'EQEQ' Exp 'SEMI'
    action 'LBRACE' (noprec):   reduce Decl --> 'AXIOM' AnyId 'EQEQ' Exp 'SEMI'
    action 'RBRACE' (noprec):   reduce Decl --> 'AXIOM' AnyId 'EQEQ' Exp 'SEMI'
    action 'SEMI' (noprec):   reduce Decl --> 'AXIOM' AnyId 'EQEQ' Exp 'SEMI'
    action 'COLON' (noprec):   reduce Decl --> 'AXIOM' AnyId 'EQEQ' Exp 'SEMI'
    action 'LPAREN' (noprec):   reduce Decl --> 'AXIOM' AnyId 'EQEQ' Exp 'SEMI'
    action 'RPAREN' (noprec):   reduce Decl --> 'AXIOM' AnyId 'EQEQ' Exp 'SEMI'
    action 'LBRACKET' (noprec):   reduce Decl --> 'AXIOM' AnyId 'EQEQ' Exp 'SEMI'
    action 'RBRACKET' (noprec):   reduce Decl --> 'AXIOM' AnyId 'EQEQ' Exp 'SEMI'
    action 'LITBOOL' (noprec):   reduce Decl --> 'AXIOM' AnyId 'EQEQ' Exp 'SEMI'
    action 'LITINT' (noprec):   reduce Decl --> 'AXIOM' AnyId 'EQEQ' Exp 'SEMI'
    action 'QLID' (noprec):   reduce Decl --> 'AXIOM' AnyId 'EQEQ' Exp 'SEMI'
    action 'QUID' (noprec):   reduce Decl --> 'AXIOM' AnyId 'EQEQ' Exp 'SEMI'
    action 'DLID' (noprec):   reduce Decl --> 'AXIOM' AnyId 'EQEQ' Exp 'SEMI'
    action 'DUID' (noprec):   reduce Decl --> 'AXIOM' AnyId 'EQEQ' Exp 'SEMI'
    action 'LID' (noprec):   reduce Decl --> 'AXIOM' AnyId 'EQEQ' Exp 'SEMI'
    action 'UID' (noprec):   reduce Decl --> 'AXIOM' AnyId 'EQEQ' Exp 'SEMI'
    action 'error' (noprec):   reduce Decl --> 'AXIOM' AnyId 'EQEQ' Exp 'SEMI'
    action '#' (noprec):   reduce Decl --> 'AXIOM' AnyId 'EQEQ' Exp 'SEMI'
    action '$$' (noprec):   reduce Decl --> 'AXIOM' AnyId 'EQEQ' Exp 'SEMI'

  immediate action:   reduce Decl --> 'AXIOM' AnyId 'EQEQ' Exp 'SEMI'
 gotos:

state 397:
  items:
    Decl -> 'AXIOM' 'LPAREN' . 'FORALL' Formals 'COLONCOLON' Triggers AnyId AnyIdLists 'EQEQ' Exp 'RPAREN' 'SEMI'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   shift 398
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 398:
  items:
    Decl -> 'AXIOM' 'LPAREN' 'FORALL' . Formals 'COLONCOLON' Triggers AnyId AnyIdLists 'EQEQ' Exp 'RPAREN' 'SEMI'

  actions:
    action 'EOF' (noprec):   reduce Formals --> 
    action 'EAX' (noprec):   reduce Formals --> 
    action 'EBX' (noprec):   reduce Formals --> 
    action 'ECX' (noprec):   reduce Formals --> 
    action 'EDX' (noprec):   reduce Formals --> 
    action 'ESI' (noprec):   reduce Formals --> 
    action 'EDI' (noprec):   reduce Formals --> 
    action 'EBP' (noprec):   reduce Formals --> 
    action 'ESP' (noprec):   reduce Formals --> 
    action 'MODIFIES' (noprec):   reduce Formals --> 
    action 'INVARIANT' (noprec):   reduce Formals --> 
    action 'ASSERT' (noprec):   reduce Formals --> 
    action 'HAVOC' (noprec):   reduce Formals --> 
    action 'GOTO' (noprec):   reduce Formals --> 
    action 'CALL' (noprec):   reduce Formals --> 
    action 'CCALL' (noprec):   reduce Formals --> 
    action 'RET' (noprec):   reduce Formals --> 
    action 'IRET' (noprec):   reduce Formals --> 
    action 'GO' (noprec):   reduce Formals --> 
    action 'FORALL' (noprec):   reduce Formals --> 
    action 'EXISTS' (noprec):   reduce Formals --> 
    action 'OLD' (noprec):   reduce Formals --> 
    action 'COLONCOLON' (noprec):   reduce Formals --> 
    action 'EQEQGT' (noprec):   reduce Formals --> 
    action 'LTEQEQGT' (noprec):   reduce Formals --> 
    action 'TYPE' (noprec):   reduce Formals --> 
    action 'CONST' (noprec):   reduce Formals --> 
    action 'FUNCTION' (noprec):   reduce Formals --> 
    action 'RETURNS' (noprec):   reduce Formals --> 
    action 'AXIOM' (noprec):   reduce Formals --> 
    action 'PROCEDURE' (noprec):   reduce Formals --> 
    action 'IMPLEMENTATION' (noprec):   reduce Formals --> 
    action 'REQUIRES' (noprec):   reduce Formals --> 
    action 'ENSURES' (noprec):   reduce Formals --> 
    action 'LT' (noprec):   reduce Formals --> 
    action 'GT' (noprec):   reduce Formals --> 
    action 'EQ' (noprec):   reduce Formals --> 
    action 'BANG' (noprec):   reduce Formals --> 
    action 'COMMA' (noprec):   reduce Formals --> 
    action 'LE' (noprec):   reduce Formals --> 
    action 'GE' (noprec):   reduce Formals --> 
    action 'EQEQ' (noprec):   reduce Formals --> 
    action 'NE' (noprec):   reduce Formals --> 
    action 'PLUS' (noprec):   reduce Formals --> 
    action 'MINUS' (noprec):   reduce Formals --> 
    action 'STAR' (noprec):   reduce Formals --> 
    action 'SLASH' (noprec):   reduce Formals --> 
    action 'PERCENT' (noprec):   reduce Formals --> 
    action 'AMPAMP' (noprec):   reduce Formals --> 
    action 'BARBAR' (noprec):   reduce Formals --> 
    action 'COLONEQ' (noprec):   reduce Formals --> 
    action 'INT' (noprec):   reduce Formals --> 
    action 'BOOL' (noprec):   reduce Formals --> 
    action 'IF' (noprec):   reduce Formals --> 
    action 'RETURN' (noprec):   reduce Formals --> 
    action 'VAR' (noprec):   reduce Formals --> 
    action 'LBRACE' (noprec):   reduce Formals --> 
    action 'RBRACE' (noprec):   reduce Formals --> 
    action 'SEMI' (noprec):   reduce Formals --> 
    action 'COLON' (noprec):   reduce Formals --> 
    action 'LPAREN' (noprec):   reduce Formals --> 
    action 'RPAREN' (noprec):   reduce Formals --> 
    action 'LBRACKET' (noprec):   reduce Formals --> 
    action 'RBRACKET' (noprec):   reduce Formals --> 
    action 'LITBOOL' (noprec):   reduce Formals --> 
    action 'LITINT' (noprec):   reduce Formals --> 
    action 'QLID' (noprec):   shift 145
    action 'QUID' (noprec):   shift 144
    action 'DLID' (noprec):   shift 143
    action 'DUID' (noprec):   shift 142
    action 'LID' (noprec):   shift 4
    action 'UID' (noprec):   shift 5
    action 'error' (noprec):   reduce Formals --> 
    action '#' (noprec):   reduce Formals --> 
    action '$$' (noprec):   reduce Formals --> 

  immediate action: <none>
 gotos:
    goto ID: 141
    goto AnyId: 275
    goto Formal: 278
    goto Formals: 399

state 399:
  items:
    Decl -> 'AXIOM' 'LPAREN' 'FORALL' Formals . 'COLONCOLON' Triggers AnyId AnyIdLists 'EQEQ' Exp 'RPAREN' 'SEMI'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   shift 400
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 400:
  items:
    Decl -> 'AXIOM' 'LPAREN' 'FORALL' Formals 'COLONCOLON' . Triggers AnyId AnyIdLists 'EQEQ' Exp 'RPAREN' 'SEMI'

  actions:
    action 'EOF' (noprec):   reduce Triggers --> 
    action 'EAX' (noprec):   reduce Triggers --> 
    action 'EBX' (noprec):   reduce Triggers --> 
    action 'ECX' (noprec):   reduce Triggers --> 
    action 'EDX' (noprec):   reduce Triggers --> 
    action 'ESI' (noprec):   reduce Triggers --> 
    action 'EDI' (noprec):   reduce Triggers --> 
    action 'EBP' (noprec):   reduce Triggers --> 
    action 'ESP' (noprec):   reduce Triggers --> 
    action 'MODIFIES' (noprec):   reduce Triggers --> 
    action 'INVARIANT' (noprec):   reduce Triggers --> 
    action 'ASSERT' (noprec):   reduce Triggers --> 
    action 'HAVOC' (noprec):   reduce Triggers --> 
    action 'GOTO' (noprec):   reduce Triggers --> 
    action 'CALL' (noprec):   reduce Triggers --> 
    action 'CCALL' (noprec):   reduce Triggers --> 
    action 'RET' (noprec):   reduce Triggers --> 
    action 'IRET' (noprec):   reduce Triggers --> 
    action 'GO' (noprec):   reduce Triggers --> 
    action 'FORALL' (noprec):   reduce Triggers --> 
    action 'EXISTS' (noprec):   reduce Triggers --> 
    action 'OLD' (noprec):   reduce Triggers --> 
    action 'COLONCOLON' (noprec):   reduce Triggers --> 
    action 'EQEQGT' (noprec):   reduce Triggers --> 
    action 'LTEQEQGT' (noprec):   reduce Triggers --> 
    action 'TYPE' (noprec):   reduce Triggers --> 
    action 'CONST' (noprec):   reduce Triggers --> 
    action 'FUNCTION' (noprec):   reduce Triggers --> 
    action 'RETURNS' (noprec):   reduce Triggers --> 
    action 'AXIOM' (noprec):   reduce Triggers --> 
    action 'PROCEDURE' (noprec):   reduce Triggers --> 
    action 'IMPLEMENTATION' (noprec):   reduce Triggers --> 
    action 'REQUIRES' (noprec):   reduce Triggers --> 
    action 'ENSURES' (noprec):   reduce Triggers --> 
    action 'LT' (noprec):   reduce Triggers --> 
    action 'GT' (noprec):   reduce Triggers --> 
    action 'EQ' (noprec):   reduce Triggers --> 
    action 'BANG' (noprec):   reduce Triggers --> 
    action 'COMMA' (noprec):   reduce Triggers --> 
    action 'LE' (noprec):   reduce Triggers --> 
    action 'GE' (noprec):   reduce Triggers --> 
    action 'EQEQ' (noprec):   reduce Triggers --> 
    action 'NE' (noprec):   reduce Triggers --> 
    action 'PLUS' (noprec):   reduce Triggers --> 
    action 'MINUS' (noprec):   reduce Triggers --> 
    action 'STAR' (noprec):   reduce Triggers --> 
    action 'SLASH' (noprec):   reduce Triggers --> 
    action 'PERCENT' (noprec):   reduce Triggers --> 
    action 'AMPAMP' (noprec):   reduce Triggers --> 
    action 'BARBAR' (noprec):   reduce Triggers --> 
    action 'COLONEQ' (noprec):   reduce Triggers --> 
    action 'INT' (noprec):   reduce Triggers --> 
    action 'BOOL' (noprec):   reduce Triggers --> 
    action 'IF' (noprec):   reduce Triggers --> 
    action 'RETURN' (noprec):   reduce Triggers --> 
    action 'VAR' (noprec):   reduce Triggers --> 
    action 'LBRACE' (noprec):   shift 50
    action 'RBRACE' (noprec):   reduce Triggers --> 
    action 'SEMI' (noprec):   reduce Triggers --> 
    action 'COLON' (noprec):   reduce Triggers --> 
    action 'LPAREN' (noprec):   reduce Triggers --> 
    action 'RPAREN' (noprec):   reduce Triggers --> 
    action 'LBRACKET' (noprec):   reduce Triggers --> 
    action 'RBRACKET' (noprec):   reduce Triggers --> 
    action 'LITBOOL' (noprec):   reduce Triggers --> 
    action 'LITINT' (noprec):   reduce Triggers --> 
    action 'QLID' (noprec):   reduce Triggers --> 
    action 'QUID' (noprec):   reduce Triggers --> 
    action 'DLID' (noprec):   reduce Triggers --> 
    action 'DUID' (noprec):   reduce Triggers --> 
    action 'LID' (noprec):   reduce Triggers --> 
    action 'UID' (noprec):   reduce Triggers --> 
    action 'error' (noprec):   reduce Triggers --> 
    action '#' (noprec):   reduce Triggers --> 
    action '$$' (noprec):   reduce Triggers --> 

  immediate action: <none>
 gotos:
    goto Triggers: 401

state 401:
  items:
    Decl -> 'AXIOM' 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers . AnyId AnyIdLists 'EQEQ' Exp 'RPAREN' 'SEMI'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   shift 145
    action 'QUID' (noprec):   shift 144
    action 'DLID' (noprec):   shift 143
    action 'DUID' (noprec):   shift 142
    action 'LID' (noprec):   shift 4
    action 'UID' (noprec):   shift 5
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto ID: 141
    goto AnyId: 402

state 402:
  items:
    Decl -> 'AXIOM' 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers AnyId . AnyIdLists 'EQEQ' Exp 'RPAREN' 'SEMI'

  actions:
    action 'EOF' (noprec):   reduce AnyIdLists --> 
    action 'EAX' (noprec):   reduce AnyIdLists --> 
    action 'EBX' (noprec):   reduce AnyIdLists --> 
    action 'ECX' (noprec):   reduce AnyIdLists --> 
    action 'EDX' (noprec):   reduce AnyIdLists --> 
    action 'ESI' (noprec):   reduce AnyIdLists --> 
    action 'EDI' (noprec):   reduce AnyIdLists --> 
    action 'EBP' (noprec):   reduce AnyIdLists --> 
    action 'ESP' (noprec):   reduce AnyIdLists --> 
    action 'MODIFIES' (noprec):   reduce AnyIdLists --> 
    action 'INVARIANT' (noprec):   reduce AnyIdLists --> 
    action 'ASSERT' (noprec):   reduce AnyIdLists --> 
    action 'HAVOC' (noprec):   reduce AnyIdLists --> 
    action 'GOTO' (noprec):   reduce AnyIdLists --> 
    action 'CALL' (noprec):   reduce AnyIdLists --> 
    action 'CCALL' (noprec):   reduce AnyIdLists --> 
    action 'RET' (noprec):   reduce AnyIdLists --> 
    action 'IRET' (noprec):   reduce AnyIdLists --> 
    action 'GO' (noprec):   reduce AnyIdLists --> 
    action 'FORALL' (noprec):   reduce AnyIdLists --> 
    action 'EXISTS' (noprec):   reduce AnyIdLists --> 
    action 'OLD' (noprec):   reduce AnyIdLists --> 
    action 'COLONCOLON' (noprec):   reduce AnyIdLists --> 
    action 'EQEQGT' (noprec):   reduce AnyIdLists --> 
    action 'LTEQEQGT' (noprec):   reduce AnyIdLists --> 
    action 'TYPE' (noprec):   reduce AnyIdLists --> 
    action 'CONST' (noprec):   reduce AnyIdLists --> 
    action 'FUNCTION' (noprec):   reduce AnyIdLists --> 
    action 'RETURNS' (noprec):   reduce AnyIdLists --> 
    action 'AXIOM' (noprec):   reduce AnyIdLists --> 
    action 'PROCEDURE' (noprec):   reduce AnyIdLists --> 
    action 'IMPLEMENTATION' (noprec):   reduce AnyIdLists --> 
    action 'REQUIRES' (noprec):   reduce AnyIdLists --> 
    action 'ENSURES' (noprec):   reduce AnyIdLists --> 
    action 'LT' (noprec):   reduce AnyIdLists --> 
    action 'GT' (noprec):   reduce AnyIdLists --> 
    action 'EQ' (noprec):   reduce AnyIdLists --> 
    action 'BANG' (noprec):   reduce AnyIdLists --> 
    action 'COMMA' (noprec):   reduce AnyIdLists --> 
    action 'LE' (noprec):   reduce AnyIdLists --> 
    action 'GE' (noprec):   reduce AnyIdLists --> 
    action 'EQEQ' (noprec):   reduce AnyIdLists --> 
    action 'NE' (noprec):   reduce AnyIdLists --> 
    action 'PLUS' (noprec):   reduce AnyIdLists --> 
    action 'MINUS' (noprec):   reduce AnyIdLists --> 
    action 'STAR' (noprec):   reduce AnyIdLists --> 
    action 'SLASH' (noprec):   reduce AnyIdLists --> 
    action 'PERCENT' (noprec):   reduce AnyIdLists --> 
    action 'AMPAMP' (noprec):   reduce AnyIdLists --> 
    action 'BARBAR' (noprec):   reduce AnyIdLists --> 
    action 'COLONEQ' (noprec):   reduce AnyIdLists --> 
    action 'INT' (noprec):   reduce AnyIdLists --> 
    action 'BOOL' (noprec):   reduce AnyIdLists --> 
    action 'IF' (noprec):   reduce AnyIdLists --> 
    action 'RETURN' (noprec):   reduce AnyIdLists --> 
    action 'VAR' (noprec):   reduce AnyIdLists --> 
    action 'LBRACE' (noprec):   reduce AnyIdLists --> 
    action 'RBRACE' (noprec):   reduce AnyIdLists --> 
    action 'SEMI' (noprec):   reduce AnyIdLists --> 
    action 'COLON' (noprec):   reduce AnyIdLists --> 
    action 'LPAREN' (explicit left 10000):   shift 307
    action 'RPAREN' (noprec):   reduce AnyIdLists --> 
    action 'LBRACKET' (explicit left 10000):   shift 311
    action 'RBRACKET' (noprec):   reduce AnyIdLists --> 
    action 'LITBOOL' (noprec):   reduce AnyIdLists --> 
    action 'LITINT' (noprec):   reduce AnyIdLists --> 
    action 'QLID' (noprec):   reduce AnyIdLists --> 
    action 'QUID' (noprec):   reduce AnyIdLists --> 
    action 'DLID' (noprec):   reduce AnyIdLists --> 
    action 'DUID' (noprec):   reduce AnyIdLists --> 
    action 'LID' (noprec):   reduce AnyIdLists --> 
    action 'UID' (noprec):   reduce AnyIdLists --> 
    action 'error' (noprec):   reduce AnyIdLists --> 
    action '#' (noprec):   reduce AnyIdLists --> 
    action '$$' (noprec):   reduce AnyIdLists --> 

  immediate action: <none>
 gotos:
    goto AnyIdLists: 403

state 403:
  items:
    Decl -> 'AXIOM' 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers AnyId AnyIdLists . 'EQEQ' Exp 'RPAREN' 'SEMI'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (explicit left 9996):   shift 404
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 404:
  items:
    Decl -> 'AXIOM' 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers AnyId AnyIdLists 'EQEQ' . Exp 'RPAREN' 'SEMI'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   shift 14
    action 'EBX' (noprec):   shift 15
    action 'ECX' (noprec):   shift 16
    action 'EDX' (noprec):   shift 17
    action 'ESI' (noprec):   shift 18
    action 'EDI' (noprec):   shift 19
    action 'EBP' (noprec):   shift 20
    action 'ESP' (noprec):   shift 21
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   shift 125
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (explicit right 9999):   shift 107
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LPAREN' (explicit left 10000):   shift 54
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   shift 124
    action 'LITINT' (noprec):   shift 123
    action 'QLID' (noprec):   shift 145
    action 'QUID' (noprec):   shift 144
    action 'DLID' (noprec):   shift 143
    action 'DUID' (noprec):   shift 142
    action 'LID' (noprec):   shift 4
    action 'UID' (noprec):   shift 5
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto ID: 141
    goto Reg: 132
    goto Exp: 89
    goto AnyId: 128

state 405:
  items:
    Decl -> 'AXIOM' 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers AnyId AnyIdLists 'EQEQ' Exp 'RPAREN' . 'SEMI'

  actions:
    action 'EOF' (noprec):   error
    action 'EAX' (noprec):   error
    action 'EBX' (noprec):   error
    action 'ECX' (noprec):   error
    action 'EDX' (noprec):   error
    action 'ESI' (noprec):   error
    action 'EDI' (noprec):   error
    action 'EBP' (noprec):   error
    action 'ESP' (noprec):   error
    action 'MODIFIES' (noprec):   error
    action 'INVARIANT' (noprec):   error
    action 'ASSERT' (noprec):   error
    action 'HAVOC' (noprec):   error
    action 'GOTO' (noprec):   error
    action 'CALL' (noprec):   error
    action 'CCALL' (noprec):   error
    action 'RET' (noprec):   error
    action 'IRET' (noprec):   error
    action 'GO' (noprec):   error
    action 'FORALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'OLD' (noprec):   error
    action 'COLONCOLON' (noprec):   error
    action 'EQEQGT' (noprec):   error
    action 'LTEQEQGT' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'CONST' (noprec):   error
    action 'FUNCTION' (noprec):   error
    action 'RETURNS' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'PROCEDURE' (noprec):   error
    action 'IMPLEMENTATION' (noprec):   error
    action 'REQUIRES' (noprec):   error
    action 'ENSURES' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'EQ' (noprec):   error
    action 'BANG' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'LE' (noprec):   error
    action 'GE' (noprec):   error
    action 'EQEQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'STAR' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'PERCENT' (noprec):   error
    action 'AMPAMP' (noprec):   error
    action 'BARBAR' (noprec):   error
    action 'COLONEQ' (noprec):   error
    action 'INT' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'RETURN' (noprec):   error
    action 'VAR' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'SEMI' (noprec):   shift 406
    action 'COLON' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LITBOOL' (noprec):   error
    action 'LITINT' (noprec):   error
    action 'QLID' (noprec):   error
    action 'QUID' (noprec):   error
    action 'DLID' (noprec):   error
    action 'DUID' (noprec):   error
    action 'LID' (noprec):   error
    action 'UID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 406:
  items:
    Decl -> 'AXIOM' 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers AnyId AnyIdLists 'EQEQ' Exp 'RPAREN' 'SEMI' . 

  actions:
    action 'EOF' (noprec):   reduce Decl --> 'AXIOM' 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers AnyId AnyIdLists 'EQEQ' Exp 'RPAREN' 'SEMI'
    action 'EAX' (noprec):   reduce Decl --> 'AXIOM' 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers AnyId AnyIdLists 'EQEQ' Exp 'RPAREN' 'SEMI'
    action 'EBX' (noprec):   reduce Decl --> 'AXIOM' 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers AnyId AnyIdLists 'EQEQ' Exp 'RPAREN' 'SEMI'
    action 'ECX' (noprec):   reduce Decl --> 'AXIOM' 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers AnyId AnyIdLists 'EQEQ' Exp 'RPAREN' 'SEMI'
    action 'EDX' (noprec):   reduce Decl --> 'AXIOM' 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers AnyId AnyIdLists 'EQEQ' Exp 'RPAREN' 'SEMI'
    action 'ESI' (noprec):   reduce Decl --> 'AXIOM' 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers AnyId AnyIdLists 'EQEQ' Exp 'RPAREN' 'SEMI'
    action 'EDI' (noprec):   reduce Decl --> 'AXIOM' 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers AnyId AnyIdLists 'EQEQ' Exp 'RPAREN' 'SEMI'
    action 'EBP' (noprec):   reduce Decl --> 'AXIOM' 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers AnyId AnyIdLists 'EQEQ' Exp 'RPAREN' 'SEMI'
    action 'ESP' (noprec):   reduce Decl --> 'AXIOM' 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers AnyId AnyIdLists 'EQEQ' Exp 'RPAREN' 'SEMI'
    action 'MODIFIES' (noprec):   reduce Decl --> 'AXIOM' 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers AnyId AnyIdLists 'EQEQ' Exp 'RPAREN' 'SEMI'
    action 'INVARIANT' (noprec):   reduce Decl --> 'AXIOM' 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers AnyId AnyIdLists 'EQEQ' Exp 'RPAREN' 'SEMI'
    action 'ASSERT' (noprec):   reduce Decl --> 'AXIOM' 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers AnyId AnyIdLists 'EQEQ' Exp 'RPAREN' 'SEMI'
    action 'HAVOC' (noprec):   reduce Decl --> 'AXIOM' 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers AnyId AnyIdLists 'EQEQ' Exp 'RPAREN' 'SEMI'
    action 'GOTO' (noprec):   reduce Decl --> 'AXIOM' 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers AnyId AnyIdLists 'EQEQ' Exp 'RPAREN' 'SEMI'
    action 'CALL' (noprec):   reduce Decl --> 'AXIOM' 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers AnyId AnyIdLists 'EQEQ' Exp 'RPAREN' 'SEMI'
    action 'CCALL' (noprec):   reduce Decl --> 'AXIOM' 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers AnyId AnyIdLists 'EQEQ' Exp 'RPAREN' 'SEMI'
    action 'RET' (noprec):   reduce Decl --> 'AXIOM' 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers AnyId AnyIdLists 'EQEQ' Exp 'RPAREN' 'SEMI'
    action 'IRET' (noprec):   reduce Decl --> 'AXIOM' 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers AnyId AnyIdLists 'EQEQ' Exp 'RPAREN' 'SEMI'
    action 'GO' (noprec):   reduce Decl --> 'AXIOM' 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers AnyId AnyIdLists 'EQEQ' Exp 'RPAREN' 'SEMI'
    action 'FORALL' (noprec):   reduce Decl --> 'AXIOM' 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers AnyId AnyIdLists 'EQEQ' Exp 'RPAREN' 'SEMI'
    action 'EXISTS' (noprec):   reduce Decl --> 'AXIOM' 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers AnyId AnyIdLists 'EQEQ' Exp 'RPAREN' 'SEMI'
    action 'OLD' (noprec):   reduce Decl --> 'AXIOM' 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers AnyId AnyIdLists 'EQEQ' Exp 'RPAREN' 'SEMI'
    action 'COLONCOLON' (noprec):   reduce Decl --> 'AXIOM' 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers AnyId AnyIdLists 'EQEQ' Exp 'RPAREN' 'SEMI'
    action 'EQEQGT' (noprec):   reduce Decl --> 'AXIOM' 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers AnyId AnyIdLists 'EQEQ' Exp 'RPAREN' 'SEMI'
    action 'LTEQEQGT' (noprec):   reduce Decl --> 'AXIOM' 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers AnyId AnyIdLists 'EQEQ' Exp 'RPAREN' 'SEMI'
    action 'TYPE' (noprec):   reduce Decl --> 'AXIOM' 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers AnyId AnyIdLists 'EQEQ' Exp 'RPAREN' 'SEMI'
    action 'CONST' (noprec):   reduce Decl --> 'AXIOM' 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers AnyId AnyIdLists 'EQEQ' Exp 'RPAREN' 'SEMI'
    action 'FUNCTION' (noprec):   reduce Decl --> 'AXIOM' 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers AnyId AnyIdLists 'EQEQ' Exp 'RPAREN' 'SEMI'
    action 'RETURNS' (noprec):   reduce Decl --> 'AXIOM' 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers AnyId AnyIdLists 'EQEQ' Exp 'RPAREN' 'SEMI'
    action 'AXIOM' (noprec):   reduce Decl --> 'AXIOM' 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers AnyId AnyIdLists 'EQEQ' Exp 'RPAREN' 'SEMI'
    action 'PROCEDURE' (noprec):   reduce Decl --> 'AXIOM' 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers AnyId AnyIdLists 'EQEQ' Exp 'RPAREN' 'SEMI'
    action 'IMPLEMENTATION' (noprec):   reduce Decl --> 'AXIOM' 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers AnyId AnyIdLists 'EQEQ' Exp 'RPAREN' 'SEMI'
    action 'REQUIRES' (noprec):   reduce Decl --> 'AXIOM' 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers AnyId AnyIdLists 'EQEQ' Exp 'RPAREN' 'SEMI'
    action 'ENSURES' (noprec):   reduce Decl --> 'AXIOM' 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers AnyId AnyIdLists 'EQEQ' Exp 'RPAREN' 'SEMI'
    action 'LT' (noprec):   reduce Decl --> 'AXIOM' 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers AnyId AnyIdLists 'EQEQ' Exp 'RPAREN' 'SEMI'
    action 'GT' (noprec):   reduce Decl --> 'AXIOM' 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers AnyId AnyIdLists 'EQEQ' Exp 'RPAREN' 'SEMI'
    action 'EQ' (noprec):   reduce Decl --> 'AXIOM' 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers AnyId AnyIdLists 'EQEQ' Exp 'RPAREN' 'SEMI'
    action 'BANG' (noprec):   reduce Decl --> 'AXIOM' 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers AnyId AnyIdLists 'EQEQ' Exp 'RPAREN' 'SEMI'
    action 'COMMA' (noprec):   reduce Decl --> 'AXIOM' 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers AnyId AnyIdLists 'EQEQ' Exp 'RPAREN' 'SEMI'
    action 'LE' (noprec):   reduce Decl --> 'AXIOM' 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers AnyId AnyIdLists 'EQEQ' Exp 'RPAREN' 'SEMI'
    action 'GE' (noprec):   reduce Decl --> 'AXIOM' 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers AnyId AnyIdLists 'EQEQ' Exp 'RPAREN' 'SEMI'
    action 'EQEQ' (noprec):   reduce Decl --> 'AXIOM' 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers AnyId AnyIdLists 'EQEQ' Exp 'RPAREN' 'SEMI'
    action 'NE' (noprec):   reduce Decl --> 'AXIOM' 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers AnyId AnyIdLists 'EQEQ' Exp 'RPAREN' 'SEMI'
    action 'PLUS' (noprec):   reduce Decl --> 'AXIOM' 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers AnyId AnyIdLists 'EQEQ' Exp 'RPAREN' 'SEMI'
    action 'MINUS' (noprec):   reduce Decl --> 'AXIOM' 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers AnyId AnyIdLists 'EQEQ' Exp 'RPAREN' 'SEMI'
    action 'STAR' (noprec):   reduce Decl --> 'AXIOM' 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers AnyId AnyIdLists 'EQEQ' Exp 'RPAREN' 'SEMI'
    action 'SLASH' (noprec):   reduce Decl --> 'AXIOM' 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers AnyId AnyIdLists 'EQEQ' Exp 'RPAREN' 'SEMI'
    action 'PERCENT' (noprec):   reduce Decl --> 'AXIOM' 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers AnyId AnyIdLists 'EQEQ' Exp 'RPAREN' 'SEMI'
    action 'AMPAMP' (noprec):   reduce Decl --> 'AXIOM' 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers AnyId AnyIdLists 'EQEQ' Exp 'RPAREN' 'SEMI'
    action 'BARBAR' (noprec):   reduce Decl --> 'AXIOM' 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers AnyId AnyIdLists 'EQEQ' Exp 'RPAREN' 'SEMI'
    action 'COLONEQ' (noprec):   reduce Decl --> 'AXIOM' 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers AnyId AnyIdLists 'EQEQ' Exp 'RPAREN' 'SEMI'
    action 'INT' (noprec):   reduce Decl --> 'AXIOM' 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers AnyId AnyIdLists 'EQEQ' Exp 'RPAREN' 'SEMI'
    action 'BOOL' (noprec):   reduce Decl --> 'AXIOM' 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers AnyId AnyIdLists 'EQEQ' Exp 'RPAREN' 'SEMI'
    action 'IF' (noprec):   reduce Decl --> 'AXIOM' 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers AnyId AnyIdLists 'EQEQ' Exp 'RPAREN' 'SEMI'
    action 'RETURN' (noprec):   reduce Decl --> 'AXIOM' 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers AnyId AnyIdLists 'EQEQ' Exp 'RPAREN' 'SEMI'
    action 'VAR' (noprec):   reduce Decl --> 'AXIOM' 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers AnyId AnyIdLists 'EQEQ' Exp 'RPAREN' 'SEMI'
    action 'LBRACE' (noprec):   reduce Decl --> 'AXIOM' 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers AnyId AnyIdLists 'EQEQ' Exp 'RPAREN' 'SEMI'
    action 'RBRACE' (noprec):   reduce Decl --> 'AXIOM' 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers AnyId AnyIdLists 'EQEQ' Exp 'RPAREN' 'SEMI'
    action 'SEMI' (noprec):   reduce Decl --> 'AXIOM' 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers AnyId AnyIdLists 'EQEQ' Exp 'RPAREN' 'SEMI'
    action 'COLON' (noprec):   reduce Decl --> 'AXIOM' 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers AnyId AnyIdLists 'EQEQ' Exp 'RPAREN' 'SEMI'
    action 'LPAREN' (noprec):   reduce Decl --> 'AXIOM' 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers AnyId AnyIdLists 'EQEQ' Exp 'RPAREN' 'SEMI'
    action 'RPAREN' (noprec):   reduce Decl --> 'AXIOM' 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers AnyId AnyIdLists 'EQEQ' Exp 'RPAREN' 'SEMI'
    action 'LBRACKET' (noprec):   reduce Decl --> 'AXIOM' 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers AnyId AnyIdLists 'EQEQ' Exp 'RPAREN' 'SEMI'
    action 'RBRACKET' (noprec):   reduce Decl --> 'AXIOM' 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers AnyId AnyIdLists 'EQEQ' Exp 'RPAREN' 'SEMI'
    action 'LITBOOL' (noprec):   reduce Decl --> 'AXIOM' 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers AnyId AnyIdLists 'EQEQ' Exp 'RPAREN' 'SEMI'
    action 'LITINT' (noprec):   reduce Decl --> 'AXIOM' 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers AnyId AnyIdLists 'EQEQ' Exp 'RPAREN' 'SEMI'
    action 'QLID' (noprec):   reduce Decl --> 'AXIOM' 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers AnyId AnyIdLists 'EQEQ' Exp 'RPAREN' 'SEMI'
    action 'QUID' (noprec):   reduce Decl --> 'AXIOM' 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers AnyId AnyIdLists 'EQEQ' Exp 'RPAREN' 'SEMI'
    action 'DLID' (noprec):   reduce Decl --> 'AXIOM' 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers AnyId AnyIdLists 'EQEQ' Exp 'RPAREN' 'SEMI'
    action 'DUID' (noprec):   reduce Decl --> 'AXIOM' 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers AnyId AnyIdLists 'EQEQ' Exp 'RPAREN' 'SEMI'
    action 'LID' (noprec):   reduce Decl --> 'AXIOM' 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers AnyId AnyIdLists 'EQEQ' Exp 'RPAREN' 'SEMI'
    action 'UID' (noprec):   reduce Decl --> 'AXIOM' 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers AnyId AnyIdLists 'EQEQ' Exp 'RPAREN' 'SEMI'
    action 'error' (noprec):   reduce Decl --> 'AXIOM' 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers AnyId AnyIdLists 'EQEQ' Exp 'RPAREN' 'SEMI'
    action '#' (noprec):   reduce Decl --> 'AXIOM' 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers AnyId AnyIdLists 'EQEQ' Exp 'RPAREN' 'SEMI'
    action '$$' (noprec):   reduce Decl --> 'AXIOM' 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers AnyId AnyIdLists 'EQEQ' Exp 'RPAREN' 'SEMI'

  immediate action:   reduce Decl --> 'AXIOM' 'LPAREN' 'FORALL' Formals 'COLONCOLON' Triggers AnyId AnyIdLists 'EQEQ' Exp 'RPAREN' 'SEMI'
 gotos:

state 407:
  items:
    Decls -> Decl . Decls

  actions:
    action 'EOF' (noprec):   reduce Decls --> 
    action 'EAX' (noprec):   reduce Decls --> 
    action 'EBX' (noprec):   reduce Decls --> 
    action 'ECX' (noprec):   reduce Decls --> 
    action 'EDX' (noprec):   reduce Decls --> 
    action 'ESI' (noprec):   reduce Decls --> 
    action 'EDI' (noprec):   reduce Decls --> 
    action 'EBP' (noprec):   reduce Decls --> 
    action 'ESP' (noprec):   reduce Decls --> 
    action 'MODIFIES' (noprec):   reduce Decls --> 
    action 'INVARIANT' (noprec):   reduce Decls --> 
    action 'ASSERT' (noprec):   reduce Decls --> 
    action 'HAVOC' (noprec):   reduce Decls --> 
    action 'GOTO' (noprec):   reduce Decls --> 
    action 'CALL' (noprec):   reduce Decls --> 
    action 'CCALL' (noprec):   reduce Decls --> 
    action 'RET' (noprec):   reduce Decls --> 
    action 'IRET' (noprec):   reduce Decls --> 
    action 'GO' (noprec):   reduce Decls --> 
    action 'FORALL' (noprec):   reduce Decls --> 
    action 'EXISTS' (noprec):   reduce Decls --> 
    action 'OLD' (noprec):   reduce Decls --> 
    action 'COLONCOLON' (noprec):   reduce Decls --> 
    action 'EQEQGT' (noprec):   reduce Decls --> 
    action 'LTEQEQGT' (noprec):   reduce Decls --> 
    action 'TYPE' (noprec):   shift 329
    action 'CONST' (noprec):   shift 375
    action 'FUNCTION' (noprec):   shift 380
    action 'RETURNS' (noprec):   reduce Decls --> 
    action 'AXIOM' (noprec):   shift 393
    action 'PROCEDURE' (noprec):   shift 320
    action 'IMPLEMENTATION' (noprec):   shift 321
    action 'REQUIRES' (noprec):   reduce Decls --> 
    action 'ENSURES' (noprec):   reduce Decls --> 
    action 'LT' (noprec):   reduce Decls --> 
    action 'GT' (noprec):   reduce Decls --> 
    action 'EQ' (noprec):   reduce Decls --> 
    action 'BANG' (noprec):   reduce Decls --> 
    action 'COMMA' (noprec):   reduce Decls --> 
    action 'LE' (noprec):   reduce Decls --> 
    action 'GE' (noprec):   reduce Decls --> 
    action 'EQEQ' (noprec):   reduce Decls --> 
    action 'NE' (noprec):   reduce Decls --> 
    action 'PLUS' (noprec):   reduce Decls --> 
    action 'MINUS' (noprec):   reduce Decls --> 
    action 'STAR' (noprec):   reduce Decls --> 
    action 'SLASH' (noprec):   reduce Decls --> 
    action 'PERCENT' (noprec):   reduce Decls --> 
    action 'AMPAMP' (noprec):   reduce Decls --> 
    action 'BARBAR' (noprec):   reduce Decls --> 
    action 'COLONEQ' (noprec):   reduce Decls --> 
    action 'INT' (noprec):   reduce Decls --> 
    action 'BOOL' (noprec):   reduce Decls --> 
    action 'IF' (noprec):   reduce Decls --> 
    action 'RETURN' (noprec):   reduce Decls --> 
    action 'VAR' (noprec):   shift 332
    action 'LBRACE' (noprec):   reduce Decls --> 
    action 'RBRACE' (noprec):   reduce Decls --> 
    action 'SEMI' (noprec):   reduce Decls --> 
    action 'COLON' (noprec):   reduce Decls --> 
    action 'LPAREN' (noprec):   reduce Decls --> 
    action 'RPAREN' (noprec):   reduce Decls --> 
    action 'LBRACKET' (noprec):   reduce Decls --> 
    action 'RBRACKET' (noprec):   reduce Decls --> 
    action 'LITBOOL' (noprec):   reduce Decls --> 
    action 'LITINT' (noprec):   reduce Decls --> 
    action 'QLID' (noprec):   reduce Decls --> 
    action 'QUID' (noprec):   reduce Decls --> 
    action 'DLID' (noprec):   reduce Decls --> 
    action 'DUID' (noprec):   reduce Decls --> 
    action 'LID' (noprec):   reduce Decls --> 
    action 'UID' (noprec):   reduce Decls --> 
    action 'error' (noprec):   reduce Decls --> 
    action '#' (noprec):   reduce Decls --> 
    action '$$' (noprec):   reduce Decls --> 

  immediate action: <none>
 gotos:
    goto ProcOrImpl: 345
    goto Decl: 407
    goto Decls: 408

state 408:
  items:
    Decls -> Decl Decls . 

  actions:
    action 'EOF' (noprec):   reduce Decls --> Decl Decls
    action 'EAX' (noprec):   reduce Decls --> Decl Decls
    action 'EBX' (noprec):   reduce Decls --> Decl Decls
    action 'ECX' (noprec):   reduce Decls --> Decl Decls
    action 'EDX' (noprec):   reduce Decls --> Decl Decls
    action 'ESI' (noprec):   reduce Decls --> Decl Decls
    action 'EDI' (noprec):   reduce Decls --> Decl Decls
    action 'EBP' (noprec):   reduce Decls --> Decl Decls
    action 'ESP' (noprec):   reduce Decls --> Decl Decls
    action 'MODIFIES' (noprec):   reduce Decls --> Decl Decls
    action 'INVARIANT' (noprec):   reduce Decls --> Decl Decls
    action 'ASSERT' (noprec):   reduce Decls --> Decl Decls
    action 'HAVOC' (noprec):   reduce Decls --> Decl Decls
    action 'GOTO' (noprec):   reduce Decls --> Decl Decls
    action 'CALL' (noprec):   reduce Decls --> Decl Decls
    action 'CCALL' (noprec):   reduce Decls --> Decl Decls
    action 'RET' (noprec):   reduce Decls --> Decl Decls
    action 'IRET' (noprec):   reduce Decls --> Decl Decls
    action 'GO' (noprec):   reduce Decls --> Decl Decls
    action 'FORALL' (noprec):   reduce Decls --> Decl Decls
    action 'EXISTS' (noprec):   reduce Decls --> Decl Decls
    action 'OLD' (noprec):   reduce Decls --> Decl Decls
    action 'COLONCOLON' (noprec):   reduce Decls --> Decl Decls
    action 'EQEQGT' (noprec):   reduce Decls --> Decl Decls
    action 'LTEQEQGT' (noprec):   reduce Decls --> Decl Decls
    action 'TYPE' (noprec):   reduce Decls --> Decl Decls
    action 'CONST' (noprec):   reduce Decls --> Decl Decls
    action 'FUNCTION' (noprec):   reduce Decls --> Decl Decls
    action 'RETURNS' (noprec):   reduce Decls --> Decl Decls
    action 'AXIOM' (noprec):   reduce Decls --> Decl Decls
    action 'PROCEDURE' (noprec):   reduce Decls --> Decl Decls
    action 'IMPLEMENTATION' (noprec):   reduce Decls --> Decl Decls
    action 'REQUIRES' (noprec):   reduce Decls --> Decl Decls
    action 'ENSURES' (noprec):   reduce Decls --> Decl Decls
    action 'LT' (noprec):   reduce Decls --> Decl Decls
    action 'GT' (noprec):   reduce Decls --> Decl Decls
    action 'EQ' (noprec):   reduce Decls --> Decl Decls
    action 'BANG' (noprec):   reduce Decls --> Decl Decls
    action 'COMMA' (noprec):   reduce Decls --> Decl Decls
    action 'LE' (noprec):   reduce Decls --> Decl Decls
    action 'GE' (noprec):   reduce Decls --> Decl Decls
    action 'EQEQ' (noprec):   reduce Decls --> Decl Decls
    action 'NE' (noprec):   reduce Decls --> Decl Decls
    action 'PLUS' (noprec):   reduce Decls --> Decl Decls
    action 'MINUS' (noprec):   reduce Decls --> Decl Decls
    action 'STAR' (noprec):   reduce Decls --> Decl Decls
    action 'SLASH' (noprec):   reduce Decls --> Decl Decls
    action 'PERCENT' (noprec):   reduce Decls --> Decl Decls
    action 'AMPAMP' (noprec):   reduce Decls --> Decl Decls
    action 'BARBAR' (noprec):   reduce Decls --> Decl Decls
    action 'COLONEQ' (noprec):   reduce Decls --> Decl Decls
    action 'INT' (noprec):   reduce Decls --> Decl Decls
    action 'BOOL' (noprec):   reduce Decls --> Decl Decls
    action 'IF' (noprec):   reduce Decls --> Decl Decls
    action 'RETURN' (noprec):   reduce Decls --> Decl Decls
    action 'VAR' (noprec):   reduce Decls --> Decl Decls
    action 'LBRACE' (noprec):   reduce Decls --> Decl Decls
    action 'RBRACE' (noprec):   reduce Decls --> Decl Decls
    action 'SEMI' (noprec):   reduce Decls --> Decl Decls
    action 'COLON' (noprec):   reduce Decls --> Decl Decls
    action 'LPAREN' (noprec):   reduce Decls --> Decl Decls
    action 'RPAREN' (noprec):   reduce Decls --> Decl Decls
    action 'LBRACKET' (noprec):   reduce Decls --> Decl Decls
    action 'RBRACKET' (noprec):   reduce Decls --> Decl Decls
    action 'LITBOOL' (noprec):   reduce Decls --> Decl Decls
    action 'LITINT' (noprec):   reduce Decls --> Decl Decls
    action 'QLID' (noprec):   reduce Decls --> Decl Decls
    action 'QUID' (noprec):   reduce Decls --> Decl Decls
    action 'DLID' (noprec):   reduce Decls --> Decl Decls
    action 'DUID' (noprec):   reduce Decls --> Decl Decls
    action 'LID' (noprec):   reduce Decls --> Decl Decls
    action 'UID' (noprec):   reduce Decls --> Decl Decls
    action 'error' (noprec):   reduce Decls --> Decl Decls
    action '#' (noprec):   reduce Decls --> Decl Decls
    action '$$' (noprec):   reduce Decls --> Decl Decls

  immediate action:   reduce Decls --> Decl Decls
 gotos:


startStates = 0
------------------------
